{
    "c": {
        "cmdline": [],
        "modules": [
            "c",
            "c.bin",
            "c.bin.log",
            "c.documentation",
            "c.lib",
            "c.loader",
            "c.project",
            "c.release",
            "c.release.pypi",
            "c.release.xdistutils",
            "c.test",
            "c.test.test_lib",
            "c.test.test_loader"
        ],
        "version": "0.6.0"
    },
    "c-array-defs": {
        "cmdline": [],
        "modules": [
            "c_array_defs"
        ],
        "version": "0.2"
    },
    "c-easy": {
        "cmdline": [],
        "modules": [
            "C",
            "C.__c"
        ],
        "version": "0.1"
    },
    "c-secp256k1": {
        "cmdline": [],
        "modules": [
            "c_secp256k1",
            "c_secp256k1._c_secp256k1"
        ],
        "version": "0.0.8"
    },
    "c-sghmc": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "c-speech-features": {
        "cmdline": [],
        "modules": [
            "c_speech_features"
        ],
        "version": "0.4.8"
    },
    "c-threeml": {
        "cmdline": [],
        "modules": [
            "c-threeML"
        ],
        "version": "1.0.0"
    },
    "c-viewer": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "c00bra-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.5.0"
    },
    "c1": {
        "cmdline": [],
        "modules": [
            "c1"
        ],
        "version": "1.0.0"
    },
    "c14": {
        "cmdline": [],
        "modules": [
            "c14",
            "c14.version"
        ],
        "version": "0.0.1"
    },
    "c2.app.downloaduser": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.app",
            "c2.app.downloaduser",
            "c2.app.downloaduser.browser",
            "c2.app.downloaduser.browser.downloadusers",
            "c2.app.downloaduser.event",
            "c2.app.downloaduser.interfaces",
            "c2.app.downloaduser.record",
            "c2.app.downloaduser.tests",
            "c2.app.downloaduser.tests.test_setup"
        ],
        "version": "1.0b1"
    },
    "c2.app.fbpage": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.app",
            "c2.app.fbpage",
            "c2.app.fbpage.browser",
            "c2.app.fbpage.browser.listing",
            "c2.app.fbpage.browser.ngibloglist",
            "c2.app.fbpage.tests"
        ],
        "version": "1.0b1"
    },
    "c2.app.issuelink": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.app",
            "c2.app.issuelink",
            "c2.app.issuelink.addinglink",
            "c2.app.issuelink.controlpanel",
            "c2.app.issuelink.controlpanel.config",
            "c2.app.issuelink.controlpanel.configlet",
            "c2.app.issuelink.controlpanel.exportimport",
            "c2.app.issuelink.controlpanel.interfaces",
            "c2.app.issuelink.tests"
        ],
        "version": "1.0b2"
    },
    "c2.app.replaceword": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.app",
            "c2.app.replaceword",
            "c2.app.replaceword.browser",
            "c2.app.replaceword.browser.replace",
            "c2.app.replaceword.tests"
        ],
        "version": "1.0a1"
    },
    "c2.app.shortnameselection": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.app",
            "c2.app.shortnameselection",
            "c2.app.shortnameselection.base",
            "c2.app.shortnameselection.tests"
        ],
        "version": "1.0a2"
    },
    "c2.app.shorturl": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.app",
            "c2.app.shorturl",
            "c2.app.shorturl.browser",
            "c2.app.shorturl.browser.configlet",
            "c2.app.shorturl.browser.createbox",
            "c2.app.shorturl.browser.shorturl_view",
            "c2.app.shorturl.config",
            "c2.app.shorturl.content",
            "c2.app.shorturl.content.interfaces",
            "c2.app.shorturl.content.shorturl",
            "c2.app.shorturl.content.shorturlfolder",
            "c2.app.shorturl.interfaces",
            "c2.app.shorturl.tests",
            "c2.app.shorturl.tests._tests",
            "c2.app.shorturl.tests.base",
            "c2.app.shorturl.tests.test_add_content_types",
            "c2.app.shorturl.tests.test_setup"
        ],
        "version": "1.0b1"
    },
    "c2.app.streamingaws": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.app",
            "c2.app.streamingaws",
            "c2.app.streamingaws.aws_utils",
            "c2.app.streamingaws.controlpanel",
            "c2.app.streamingaws.controlpanel.interfaces",
            "c2.app.streamingaws.controlpanel.main",
            "c2.app.streamingaws.controlpanel.manage_aws_settings",
            "c2.app.streamingaws.controlpanel.manage_s3_video",
            "c2.app.streamingaws.indexer",
            "c2.app.streamingaws.streamingvideo",
            "c2.app.streamingaws.tests"
        ],
        "version": "1.0a2"
    },
    "c2.app.zipdownload": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.app",
            "c2.app.zipdownload",
            "c2.app.zipdownload.browser",
            "c2.app.zipdownload.browser.download",
            "c2.app.zipdownload.controlpanel",
            "c2.app.zipdownload.controlpanel.interfaces",
            "c2.app.zipdownload.controlpanel.main",
            "c2.app.zipdownload.event",
            "c2.app.zipdownload.interfaces",
            "c2.app.zipdownload.tests",
            "c2.app.zipdownload.tests.test_setup"
        ],
        "version": "1.0b4"
    },
    "c2.backup.s3": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.backup",
            "c2.backup.s3",
            "c2.backup.s3.config",
            "c2.backup.s3.listing",
            "c2.backup.s3.main",
            "c2.backup.s3.upload"
        ],
        "version": "1.0a4"
    },
    "c2.manage.sharesetting": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.manage",
            "c2.manage.sharesetting",
            "c2.manage.sharesetting.browser",
            "c2.manage.sharesetting.browser.sharesetting",
            "c2.manage.sharesetting.tests"
        ],
        "version": "1.0"
    },
    "c2.patch.atrefs": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.patch",
            "c2.patch.atrefs",
            "c2.patch.atrefs.methods",
            "c2.patch.atrefs.tests"
        ],
        "version": "1.0a1"
    },
    "c2.patch.contentpaste": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.patch",
            "c2.patch.contentpaste",
            "c2.patch.contentpaste.browser",
            "c2.patch.contentpaste.browser.paste",
            "c2.patch.contentpaste.controlpanel",
            "c2.patch.contentpaste.controlpanel.interfaces",
            "c2.patch.contentpaste.controlpanel.main",
            "c2.patch.contentpaste.tests",
            "c2.patch.contentpaste.tests.test_paste",
            "c2.patch.contentpaste.tests.test_setup"
        ],
        "version": "1.0b3"
    },
    "c2.patch.contentslist": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.patch",
            "c2.patch.contentslist",
            "c2.patch.contentslist.browser",
            "c2.patch.contentslist.browser.configlet",
            "c2.patch.contentslist.browser.foldercontents",
            "c2.patch.contentslist.config",
            "c2.patch.contentslist.extender",
            "c2.patch.contentslist.interfaces",
            "c2.patch.contentslist.tests"
        ],
        "version": "1.0RC4"
    },
    "c2.patch.corepermission": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.patch",
            "c2.patch.corepermission",
            "c2.patch.corepermission.add_menu",
            "c2.patch.corepermission.delete",
            "c2.patch.corepermission.tests"
        ],
        "version": "1.0b1"
    },
    "c2.patch.dateforlisting": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.patch",
            "c2.patch.dateforlisting",
            "c2.patch.dateforlisting.monkey",
            "c2.patch.dateforlisting.tests",
            "c2.patch.dateforlisting.tests.base",
            "c2.patch.dateforlisting.tests.test_setup"
        ],
        "version": "1.0b5"
    },
    "c2.patch.effectivedateforlisting": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.patch",
            "c2.patch.effectivedateforlisting",
            "c2.patch.effectivedateforlisting.monkey",
            "c2.patch.effectivedateforlisting.tests",
            "c2.patch.effectivedateforlisting.tests.base",
            "c2.patch.effectivedateforlisting.tests.test_setup"
        ],
        "version": "1.0a1"
    },
    "c2.patch.filenamenormalizer": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.patch",
            "c2.patch.filenamenormalizer",
            "c2.patch.filenamenormalizer.config",
            "c2.patch.filenamenormalizer.monkey",
            "c2.patch.filenamenormalizer.tests"
        ],
        "version": "1.0b3"
    },
    "c2.patch.japanese": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.5"
    },
    "c2.patch.jashortname": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.patch",
            "c2.patch.jashortname",
            "c2.patch.jashortname.normalizer",
            "c2.patch.jashortname.tests"
        ],
        "version": "1.0a1"
    },
    "c2.patch.jasplitter": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.patch",
            "c2.patch.jasplitter",
            "c2.patch.jasplitter.monkey",
            "c2.patch.jasplitter.testing",
            "c2.patch.jasplitter.tests",
            "c2.patch.jasplitter.tests.test_pathes"
        ],
        "version": "1.0a3"
    },
    "c2.patch.plone3mail": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.patch",
            "c2.patch.plone3mail",
            "c2.patch.plone3mail.HotfixPasswordResetTool",
            "c2.patch.plone3mail.HotfixRegistrationTool",
            "c2.patch.plone3mail.HotfixSecureMailHost",
            "c2.patch.plone3mail.tests"
        ],
        "version": "1.0b1"
    },
    "c2.patch.sharesettingcopy": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.patch",
            "c2.patch.sharesettingcopy",
            "c2.patch.sharesettingcopy.controlpanel",
            "c2.patch.sharesettingcopy.controlpanel.interfaces",
            "c2.patch.sharesettingcopy.controlpanel.main",
            "c2.patch.sharesettingcopy.event",
            "c2.patch.sharesettingcopy.testing",
            "c2.patch.sharesettingcopy.tests",
            "c2.patch.sharesettingcopy.tests.test_robot",
            "c2.patch.sharesettingcopy.tests.test_setup"
        ],
        "version": "1.0a3"
    },
    "c2.patch.z3cformdateinput": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.patch",
            "c2.patch.z3cformdateinput",
            "c2.patch.z3cformdateinput.tests"
        ],
        "version": "1.0a1"
    },
    "c2.recipe.bitbucketbk": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.recipe",
            "c2.recipe.bitbucketbk",
            "c2.recipe.bitbucketbk.backuprunner",
            "c2.recipe.bitbucketbk.tests",
            "c2.recipe.bitbucketbk.tests.test_docs"
        ],
        "version": "1.0b7"
    },
    "c2.recipe.bkups3": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.recipe",
            "c2.recipe.bkups3",
            "c2.recipe.bkups3.backuprunner",
            "c2.recipe.bkups3.tests",
            "c2.recipe.bkups3.tests.test_docs"
        ],
        "version": "1.1b1"
    },
    "c2.sample.csvworkflow": {
        "cmdline": [],
        "modules": [],
        "version": "1.1"
    },
    "c2.search.customdescription": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.search",
            "c2.search.customdescription",
            "c2.search.customdescription.browser",
            "c2.search.customdescription.browser.customview",
            "c2.search.customdescription.browser.interfaces",
            "c2.search.customdescription.tests",
            "c2.search.customdescription.tests.base",
            "c2.search.customdescription.tests.test_setup"
        ],
        "version": "1.0b3"
    },
    "c2.search.fuzzy": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.search",
            "c2.search.fuzzy",
            "c2.search.fuzzy.automata",
            "c2.search.fuzzy.browser",
            "c2.search.fuzzy.browser.controlpanel",
            "c2.search.fuzzy.browser.fuzzy_search",
            "c2.search.fuzzy.events",
            "c2.search.fuzzy.tests",
            "c2.search.fuzzy.words_for_fuzzy_tool"
        ],
        "version": "1.0a5"
    },
    "c2.search.kananormalizer": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.search",
            "c2.search.kananormalizer",
            "c2.search.kananormalizer.normalizer",
            "c2.search.kananormalizer.tests"
        ],
        "version": "1.0a1"
    },
    "c2.splitter.janome": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.splitter",
            "c2.splitter.janome",
            "c2.splitter.janome.janome",
            "c2.splitter.janome.tests"
        ],
        "version": "0.1.0"
    },
    "c2.splitter.mecabja": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.splitter",
            "c2.splitter.mecabja",
            "c2.splitter.mecabja.mecab",
            "c2.splitter.mecabja.tests"
        ],
        "version": "1.0b2"
    },
    "c2.splitter.twocharacters": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.splitter",
            "c2.splitter.twocharacters",
            "c2.splitter.twocharacters.tests",
            "c2.splitter.twocharacters.twochara"
        ],
        "version": "1.0a1"
    },
    "c2.transform.msoffice": {
        "cmdline": [],
        "modules": [
            "c2",
            "c2.transform",
            "c2.transform.msoffice",
            "c2.transform.msoffice.config",
            "c2.transform.msoffice.setuphandlers",
            "c2.transform.msoffice.tests",
            "c2.transform.msoffice.tests.test_main",
            "c2.transform.msoffice.transform"
        ],
        "version": "1.0b4"
    },
    "c2c.cssmin": {
        "cmdline": [],
        "modules": [
            "c2c",
            "c2c.cssmin_"
        ],
        "version": "0.7dev6"
    },
    "c2c.recipe.closurecompile": {
        "cmdline": [],
        "modules": [
            "c2c",
            "c2c.recipe",
            "c2c.recipe.closurecompile",
            "c2c.recipe.closurecompile.buildout",
            "c2c.recipe.closurecompile.depswriter",
            "c2c.recipe.closurecompile.goog",
            "c2c.recipe.closurecompile.goog.closurebuilder",
            "c2c.recipe.closurecompile.goog.depstree",
            "c2c.recipe.closurecompile.goog.depstree_test",
            "c2c.recipe.closurecompile.goog.depswriter",
            "c2c.recipe.closurecompile.goog.jscompiler",
            "c2c.recipe.closurecompile.goog.source",
            "c2c.recipe.closurecompile.goog.source_test",
            "c2c.recipe.closurecompile.goog.treescan"
        ],
        "version": "0.3.3"
    },
    "c2c.recipe.cssmin": {
        "cmdline": [],
        "modules": [
            "c2c",
            "c2c.recipe",
            "c2c.recipe.cssmin",
            "c2c.recipe.cssmin.buildout"
        ],
        "version": "0.6"
    },
    "c2c.recipe.facts": {
        "cmdline": [],
        "modules": [
            "c2c_recipe_facts"
        ],
        "version": "1.2"
    },
    "c2c.recipe.jarfile": {
        "cmdline": [],
        "modules": [
            "c2c",
            "c2c.recipe",
            "c2c.recipe.jarfile",
            "c2c.recipe.jarfile.buildout"
        ],
        "version": "0.4.3"
    },
    "c2c.recipe.msgfmt": {
        "cmdline": [],
        "modules": [
            "c2c",
            "c2c.recipe",
            "c2c.recipe.msgfmt",
            "c2c.recipe.msgfmt.buildout"
        ],
        "version": "0.2.2"
    },
    "c2c.recipe.pkgversions": {
        "cmdline": [],
        "modules": [
            "c2c",
            "c2c.recipe",
            "c2c.recipe.pkgversions"
        ],
        "version": "0.3dev1"
    },
    "c2c.sqlalchemy.rest": {
        "cmdline": [],
        "modules": [
            "c2c",
            "c2c.sqlalchemy",
            "c2c.sqlalchemy.rest"
        ],
        "version": "0.4.dev1"
    },
    "c2c.template": {
        "cmdline": [],
        "modules": [
            "c2c",
            "c2c.template"
        ],
        "version": "1.4.0.dev1"
    },
    "c2c.versions": {
        "cmdline": [],
        "modules": [
            "c2c",
            "c2c.versions"
        ],
        "version": "1.0.1"
    },
    "c2cgeoportal": {
        "cmdline": [],
        "modules": [
            "c2cgeoportal",
            "c2cgeoportal.forms",
            "c2cgeoportal.lib",
            "c2cgeoportal.lib.authentication",
            "c2cgeoportal.lib.bashcolor",
            "c2cgeoportal.lib.cacheversion",
            "c2cgeoportal.lib.caching",
            "c2cgeoportal.lib.dbreflection",
            "c2cgeoportal.lib.email_",
            "c2cgeoportal.lib.filter_capabilities",
            "c2cgeoportal.lib.functionality",
            "c2cgeoportal.lib.lingua_extractor",
            "c2cgeoportal.lib.print_",
            "c2cgeoportal.lib.raster",
            "c2cgeoportal.lib.raster.dbfutils",
            "c2cgeoportal.lib.raster.georaster",
            "c2cgeoportal.lib.raster.shputils",
            "c2cgeoportal.lib.sqlalchemy_",
            "c2cgeoportal.lib.wmstparsing",
            "c2cgeoportal.models",
            "c2cgeoportal.pyramid_",
            "c2cgeoportal.resources",
            "c2cgeoportal.scaffolds",
            "c2cgeoportal.scripts",
            "c2cgeoportal.scripts.c2ctool",
            "c2cgeoportal.scripts.create_demo_theme",
            "c2cgeoportal.scripts.gen_version",
            "c2cgeoportal.scripts.import_ngeo_apps",
            "c2cgeoportal.scripts.l10nv1tov2",
            "c2cgeoportal.scripts.manage_users",
            "c2cgeoportal.scripts.print_tpl",
            "c2cgeoportal.scripts.theme2fts",
            "c2cgeoportal.scripts.themev1tov2",
            "c2cgeoportal.scripts.treeitem_uniquename",
            "c2cgeoportal.scripts.urllogin",
            "c2cgeoportal.stats",
            "c2cgeoportal.subscribers",
            "c2cgeoportal.version",
            "c2cgeoportal.views",
            "c2cgeoportal.views.check_collector",
            "c2cgeoportal.views.checker",
            "c2cgeoportal.views.echo",
            "c2cgeoportal.views.entry",
            "c2cgeoportal.views.export",
            "c2cgeoportal.views.fulltextsearch",
            "c2cgeoportal.views.geometry_processing",
            "c2cgeoportal.views.layers",
            "c2cgeoportal.views.mapserverproxy",
            "c2cgeoportal.views.ogcproxy",
            "c2cgeoportal.views.pdfreport",
            "c2cgeoportal.views.printproxy",
            "c2cgeoportal.views.profile",
            "c2cgeoportal.views.proxy",
            "c2cgeoportal.views.raster",
            "c2cgeoportal.views.resourceproxy",
            "c2cgeoportal.views.shortener",
            "c2cgeoportal.views.tinyowsproxy",
            "c2cgeoportal.views.version"
        ],
        "version": "2.2.0.dev10"
    },
    "c2client": {
        "cmdline": [],
        "modules": [
            "c2client",
            "c2client.compat",
            "c2client.shell",
            "c2client.utils"
        ],
        "version": "0.3"
    },
    "c2cwsgiutils": {
        "cmdline": [],
        "modules": [
            "c2cwsgiutils",
            "c2cwsgiutils._utils",
            "c2cwsgiutils.acceptance",
            "c2cwsgiutils.acceptance.composition",
            "c2cwsgiutils.acceptance.connection",
            "c2cwsgiutils.acceptance.utils",
            "c2cwsgiutils.coverage_setup",
            "c2cwsgiutils.db",
            "c2cwsgiutils.debug",
            "c2cwsgiutils.errors",
            "c2cwsgiutils.health_check",
            "c2cwsgiutils.models_graph",
            "c2cwsgiutils.pyramid",
            "c2cwsgiutils.pyramid_logging",
            "c2cwsgiutils.services",
            "c2cwsgiutils.sql_profiler",
            "c2cwsgiutils.stats",
            "c2cwsgiutils.version",
            "c2cwsgiutils.wsgi",
            "c2cwsgiutils.wsgi_app"
        ],
        "version": "0.11.1"
    },
    "c2go": {
        "cmdline": [],
        "modules": [
            "c2go",
            "c2go._version"
        ],
        "version": "0.2.3"
    },
    "c2p2": {
        "cmdline": [],
        "modules": [
            "c2p2",
            "c2p2.app",
            "c2p2.context",
            "c2p2.handlers",
            "c2p2.handlers.base",
            "c2p2.handlers.github",
            "c2p2.handlers.pages",
            "c2p2.models",
            "c2p2.settings",
            "c2p2.tests",
            "c2p2.tests.test_extensions",
            "c2p2.tests.test_handlers",
            "c2p2.tests.test_models",
            "c2p2.utils",
            "c2p2.utils.github",
            "c2p2.utils.md",
            "c2p2.utils.path"
        ],
        "version": "0.1.2"
    },
    "c2xg": {
        "cmdline": [],
        "modules": [
            "c2xg",
            "c2xg.association_measures",
            "c2xg.association_measures.calculate_directional_categorical",
            "c2xg.association_measures.calculate_directional_scalar",
            "c2xg.association_measures.calculate_endpoint",
            "c2xg.association_measures.calculate_normalized_summed_lr",
            "c2xg.association_measures.calculate_normalized_summed_rl",
            "c2xg.association_measures.calculate_reduced_beginning_lr",
            "c2xg.association_measures.calculate_reduced_beginning_rl",
            "c2xg.association_measures.calculate_reduced_end_lr",
            "c2xg.association_measures.calculate_reduced_end_rl",
            "c2xg.association_measures.calculate_summed_lr",
            "c2xg.association_measures.calculate_summed_rl",
            "c2xg.association_measures.create_pairwise_multiple",
            "c2xg.association_measures.create_pairwise_single",
            "c2xg.association_measures.get_candidate_count",
            "c2xg.association_measures.get_df_pairwise",
            "c2xg.association_measures.get_df_unitwise",
            "c2xg.association_measures.get_dictionary",
            "c2xg.association_measures.get_formatted_candidates",
            "c2xg.association_measures.get_frequency_dict",
            "c2xg.association_measures.get_pairwise_df",
            "c2xg.association_measures.get_phrase_count",
            "c2xg.association_measures.get_unitwise_abcd",
            "c2xg.association_measures.merge_output",
            "c2xg.association_measures.process_merge_output",
            "c2xg.association_measures.process_pairwise_feature_vector",
            "c2xg.association_measures.process_unitwise_feature_vector",
            "c2xg.association_measures.split_output_files",
            "c2xg.association_measures.write_results",
            "c2xg.c2xg",
            "c2xg.candidate_extraction",
            "c2xg.candidate_extraction.candidate_debug",
            "c2xg.candidate_extraction.create_shifted_df",
            "c2xg.candidate_extraction.create_shifted_template_df",
            "c2xg.candidate_extraction.create_templates",
            "c2xg.candidate_extraction.find_template_matches",
            "c2xg.candidate_extraction.get_candidate_count",
            "c2xg.candidate_extraction.get_candidate_name",
            "c2xg.candidate_extraction.get_column_list",
            "c2xg.candidate_extraction.get_column_shift",
            "c2xg.candidate_extraction.get_query",
            "c2xg.candidate_extraction.get_query_zero",
            "c2xg.candidate_extraction.get_template_name",
            "c2xg.candidate_extraction.memory",
            "c2xg.candidate_extraction.merge_candidates",
            "c2xg.candidate_extraction.merge_file_results",
            "c2xg.candidate_extraction.print_full_candidate_info",
            "c2xg.candidate_extraction.read_candidates",
            "c2xg.candidate_extraction.remove_infrequent_candidates",
            "c2xg.candidate_extraction.templates_to_candidates",
            "c2xg.candidate_extraction.write_candidates",
            "c2xg.candidate_selection",
            "c2xg.candidate_selection.add_constituent_candidates",
            "c2xg.candidate_selection.check_constituent_constraints",
            "c2xg.candidate_selection.construction_cost",
            "c2xg.candidate_selection.create_shifted_length_df",
            "c2xg.candidate_selection.get_coverage",
            "c2xg.candidate_selection.get_grammar",
            "c2xg.candidate_selection.get_threshold_ranges",
            "c2xg.candidate_selection.grammar_evaluator",
            "c2xg.candidate_selection.grammar_evaluator_baseline",
            "c2xg.candidate_selection.grammar_generator",
            "c2xg.candidate_selection.grammar_generator_random",
            "c2xg.candidate_selection.grammar_query",
            "c2xg.candidate_selection.horizontal_pruning",
            "c2xg.candidate_selection.merge_and_save",
            "c2xg.candidate_selection.move_evaluator",
            "c2xg.candidate_selection.move_evaluator_constituents",
            "c2xg.candidate_selection.move_evaluator_direct",
            "c2xg.candidate_selection.move_generator",
            "c2xg.candidate_selection.move_generator_direct",
            "c2xg.candidate_selection.move_maker_constituents",
            "c2xg.candidate_selection.process_coverage",
            "c2xg.candidate_selection.prune_horizontal",
            "c2xg.candidate_selection.reformat_constituents",
            "c2xg.candidate_selection.reservoir_sampling",
            "c2xg.candidate_selection.save_constituents",
            "c2xg.candidate_selection.save_constructions",
            "c2xg.candidate_selection.save_idioms",
            "c2xg.candidate_selection.tabu_search_check",
            "c2xg.candidate_selection.tabu_search_process",
            "c2xg.candidate_selection.tabu_search_restarts",
            "c2xg.candidate_selection.write_grammar_debug",
            "c2xg.candidate_selection.write_model",
            "c2xg.candidate_selection.write_results_pruned",
            "c2xg.constituent_reduction",
            "c2xg.constituent_reduction.constituents_print",
            "c2xg.constituent_reduction.constituents_reduce",
            "c2xg.constituent_reduction.create_alternate_sentences",
            "c2xg.constituent_reduction.expand_sentences",
            "c2xg.constituent_reduction.find_unit_index",
            "c2xg.constituent_reduction.get_expansion_query",
            "c2xg.constituent_reduction.get_head_first_list",
            "c2xg.constituent_reduction.get_head_last_list",
            "c2xg.constituent_reduction.get_search_df_expansion",
            "c2xg.constituent_reduction.process_learned_constituents",
            "c2xg.constituent_reduction.process_schematic_representation",
            "c2xg.constituent_reduction.process_sentence_expansion",
            "c2xg.constituent_reduction.remove_punc",
            "c2xg.constituent_reduction.write_reduction_list",
            "c2xg.feature_extraction",
            "c2xg.feature_extraction.create_shifted_length_df",
            "c2xg.feature_extraction.find_constructions",
            "c2xg.feature_extraction.find_units",
            "c2xg.feature_extraction.get_centroid",
            "c2xg.feature_extraction.get_centroid_normalization",
            "c2xg.feature_extraction.get_construction_name",
            "c2xg.feature_extraction.get_coverage_column",
            "c2xg.feature_extraction.get_examples",
            "c2xg.feature_extraction.get_meta_data",
            "c2xg.feature_extraction.get_query_autonomous_candidate",
            "c2xg.feature_extraction.get_query_autonomous_zero",
            "c2xg.feature_extraction.get_relative_frequencies",
            "c2xg.feature_extraction.get_sentence_length_column",
            "c2xg.feature_extraction.get_vector_column",
            "c2xg.feature_extraction.print_constructs",
            "c2xg.feature_extraction.process_extraction",
            "c2xg.files_data",
            "c2xg.parameters_de",
            "c2xg.parameters_en",
            "c2xg.parameters_es",
            "c2xg.parameters_fr",
            "c2xg.parameters_it",
            "c2xg.process_input",
            "c2xg.process_input.annotate_files",
            "c2xg.process_input.check_data_files",
            "c2xg.process_input.check_folders",
            "c2xg.process_input.create_category_dictionary",
            "c2xg.process_input.create_category_index",
            "c2xg.process_input.create_emoji_dictionary",
            "c2xg.process_input.create_unit_index",
            "c2xg.process_input.find_mwes",
            "c2xg.process_input.fold_split",
            "c2xg.process_input.get_frequencies",
            "c2xg.process_input.get_index_lists",
            "c2xg.process_input.get_metadata_tuples",
            "c2xg.process_input.get_temp_filename",
            "c2xg.process_input.get_write_list",
            "c2xg.process_input.load_utf8",
            "c2xg.process_input.merge_conll",
            "c2xg.process_input.merge_conll_names",
            "c2xg.process_input.pandas_open",
            "c2xg.process_input.process_create_unit_index",
            "c2xg.process_input.process_line_ingest",
            "c2xg.process_input.process_lines",
            "c2xg.process_input.rdrpos_run",
            "c2xg.process_input.replace_emojis",
            "c2xg.process_input.strip_metadata",
            "c2xg.process_input.tokenize_line",
            "c2xg.process_input.write_conll",
            "c2xg.process_input.write_conll_raw",
            "c2xg.process_input.write_debug",
            "c2xg.semantic_dictionary",
            "c2xg.semantic_dictionary.build_clusters",
            "c2xg.semantic_dictionary.train_models",
            "c2xg.semantic_dictionary.write_clusters"
        ],
        "version": "0.22"
    },
    "c3": {
        "cmdline": [
            "C3EC2Provision.py"
        ],
        "modules": [
            "c3",
            "c3.aws",
            "c3.aws.ec2",
            "c3.aws.ec2.ebs",
            "c3.aws.ec2.elb",
            "c3.aws.ec2.instances",
            "c3.aws.ec2.security_groups",
            "c3.utils",
            "c3.utils.accounts",
            "c3.utils.config",
            "c3.utils.graphite",
            "c3.utils.jgp",
            "c3.utils.jgp.gen_entry",
            "c3.utils.jgp.statement",
            "c3.utils.logging",
            "c3.utils.naming",
            "c3.utils.tagger"
        ],
        "version": "0.1"
    },
    "c3-reference": {
        "cmdline": [],
        "modules": [
            "c3reference",
            "c3reference.authserver",
            "c3reference.listener"
        ],
        "version": "1.5.4"
    },
    "c3d": {
        "cmdline": [
            "c3d-metadata",
            "c3d-viewer",
            "c3d2csv",
            "c3d2npz"
        ],
        "modules": [
            "c3d"
        ],
        "version": "0.3.0"
    },
    "c3linearize": {
        "cmdline": [],
        "modules": [
            "c3linearize"
        ],
        "version": "0.1.0"
    },
    "c3po": {
        "cmdline": [],
        "modules": [
            "c3po",
            "c3po.c3po_cmd",
            "c3po.conf",
            "c3po.conf.settings_default",
            "c3po.converters",
            "c3po.converters.po_csv",
            "c3po.converters.po_ods",
            "c3po.converters.unicode",
            "c3po.mod",
            "c3po.mod.communicator",
            "c3po.mod.initializer",
            "c3po.tests"
        ],
        "version": "0.3.0"
    },
    "c3pyo": {
        "cmdline": [],
        "modules": [
            "c3pyo",
            "c3pyo.bar_chart",
            "c3pyo.base",
            "c3pyo.line_chart",
            "c3pyo.pie_chart",
            "c3pyo.utils"
        ],
        "version": "0.0.4.1"
    },
    "c4cs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "c4dtools": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "c5py": {
        "cmdline": [],
        "modules": [
            "c5",
            "c5._hmd",
            "c5._oldconfig",
            "c5.audio",
            "c5.config",
            "c5.config_transform",
            "c5.corpus",
            "c5.corpus._speech",
            "c5.corpus.collect_all_data",
            "c5.data",
            "c5.derived",
            "c5.derived.speech",
            "c5.derived.turntaking",
            "c5.derived.visibility",
            "c5.elan",
            "c5.elan-reader",
            "c5.elan.reader",
            "c5.output",
            "c5.raw",
            "c5.raw.artkp",
            "c5.raw.brix",
            "c5.raw.kinect",
            "c5.sensors",
            "c5.tools",
            "c5.tools.autoPrep",
            "c5.tools.checkFile",
            "c5.tools.collect_all_data",
            "c5.tools.notebook",
            "c5.tools.sync",
            "c5.tools.sync.control",
            "c5.tools.sync.control.configuration",
            "c5.tools.sync.control.dataanalysis",
            "c5.tools.sync.control.itemcontrol",
            "c5.tools.sync.control.videotools",
            "c5.tools.sync.control.xmlwrapper",
            "c5.tools.sync.gui",
            "c5.tools.sync.gui.cvtools",
            "c5.tools.sync.gui.cvvideowidget",
            "c5.tools.sync.gui.layoutEditorUi",
            "c5.tools.sync.gui.layout_dialog",
            "c5.tools.sync.gui.layout_preview",
            "c5.tools.sync.gui.mainViewUi",
            "c5.tools.sync.gui.main_view",
            "c5.tools.sync.gui.qtpromotion",
            "c5.tools.sync.gui.videoWidgetUi",
            "c5.tools.sync.model",
            "c5.tools.sync.model.itemmodel",
            "c5.tools.sync.startup",
            "c5.tools.sync.tools",
            "c5.tools.sync.tools.audiocontainer",
            "c5.tools.sync.tools.layoutcontainer",
            "c5.tools.sync.tools.moviecontainer",
            "c5.video"
        ],
        "version": "0.1"
    },
    "c7n": {
        "cmdline": [],
        "modules": [
            "c7n",
            "c7n.actions",
            "c7n.cache",
            "c7n.cli",
            "c7n.commands",
            "c7n.credentials",
            "c7n.ctx",
            "c7n.cwe",
            "c7n.executor",
            "c7n.filters",
            "c7n.filters.core",
            "c7n.filters.health",
            "c7n.filters.iamaccess",
            "c7n.filters.metrics",
            "c7n.filters.offhours",
            "c7n.filters.related",
            "c7n.filters.revisions",
            "c7n.filters.vpc",
            "c7n.handler",
            "c7n.log",
            "c7n.logs_support",
            "c7n.manager",
            "c7n.mu",
            "c7n.output",
            "c7n.policy",
            "c7n.query",
            "c7n.registry",
            "c7n.reports",
            "c7n.reports.csvout",
            "c7n.resolver",
            "c7n.resources",
            "c7n.resources.account",
            "c7n.resources.acm",
            "c7n.resources.ami",
            "c7n.resources.apigw",
            "c7n.resources.appelb",
            "c7n.resources.asg",
            "c7n.resources.awslambda",
            "c7n.resources.batch",
            "c7n.resources.cfn",
            "c7n.resources.cloudfront",
            "c7n.resources.cloudsearch",
            "c7n.resources.cloudtrail",
            "c7n.resources.code",
            "c7n.resources.cognito",
            "c7n.resources.cw",
            "c7n.resources.datapipeline",
            "c7n.resources.directconnect",
            "c7n.resources.directory",
            "c7n.resources.dynamodb",
            "c7n.resources.ebs",
            "c7n.resources.ec2",
            "c7n.resources.ecr",
            "c7n.resources.ecs",
            "c7n.resources.efs",
            "c7n.resources.elasticache",
            "c7n.resources.elasticsearch",
            "c7n.resources.elb",
            "c7n.resources.emr",
            "c7n.resources.gamelift",
            "c7n.resources.glacier",
            "c7n.resources.health",
            "c7n.resources.hsm",
            "c7n.resources.iam",
            "c7n.resources.kinesis",
            "c7n.resources.kms",
            "c7n.resources.ml",
            "c7n.resources.opsworks",
            "c7n.resources.rds",
            "c7n.resources.rdscluster",
            "c7n.resources.redshift",
            "c7n.resources.route53",
            "c7n.resources.s3",
            "c7n.resources.sfn",
            "c7n.resources.shield",
            "c7n.resources.simpledb",
            "c7n.resources.snowball",
            "c7n.resources.sns",
            "c7n.resources.sqs",
            "c7n.resources.storagegw",
            "c7n.resources.support",
            "c7n.resources.vpc",
            "c7n.resources.waf",
            "c7n.schema",
            "c7n.sqsexec",
            "c7n.tags",
            "c7n.ufuncs",
            "c7n.ufuncs.logsub",
            "c7n.ufuncs.s3crypt",
            "c7n.utils",
            "c7n.version"
        ],
        "version": "0.8.24.1"
    },
    "c7n-logexporter": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "c7n-mailer": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "c7n-salactus": {
        "cmdline": [],
        "modules": [
            "c7n_salactus",
            "c7n_salactus.cli",
            "c7n_salactus.db",
            "c7n_salactus.rqworker",
            "c7n_salactus.worker"
        ],
        "version": "0.2.0"
    },
    "c8d": {
        "cmdline": [
            "c8d"
        ],
        "modules": [
            "chip8",
            "chip8.disassembler",
            "chip8.lexer",
            "chip8.parser",
            "chip8.settings"
        ],
        "version": "1.3"
    },
    "ca": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ca-certs-locater": {
        "cmdline": [],
        "modules": [
            "ca_certs_locater"
        ],
        "version": "1.0"
    },
    "ca-client": {
        "cmdline": [],
        "modules": [
            "ssh_ca_client",
            "ssh_ca_client.cli",
            "ssh_ca_client.config",
            "ssh_ca_client.server",
            "ssh_ca_client.ssh"
        ],
        "version": "0.1.0"
    },
    "ca-kit": {
        "cmdline": [
            "ck_create",
            "ck_create_ca",
            "ck_sign",
            "ck_verify_ca"
        ],
        "modules": [
            "ck",
            "ck.ssl_library"
        ],
        "version": "0.2.1"
    },
    "ca-morse-code-translator": {
        "cmdline": [],
        "modules": [
            "ca-morse-code-translator"
        ],
        "version": "1.0"
    },
    "ca-password-generator": {
        "cmdline": [],
        "modules": [
            "ca-password-generator"
        ],
        "version": "1.0"
    },
    "ca-sqlite-manager": {
        "cmdline": [],
        "modules": [
            "ca-sqlite-manager",
            "ca-sqlite-manager-menu"
        ],
        "version": "1.0"
    },
    "ca-tracker": {
        "cmdline": [
            "ca_tracker"
        ],
        "modules": [
            "ca_tracker",
            "ca_tracker.abs_time",
            "ca_tracker.cell_detect_2",
            "ca_tracker.classify_cells",
            "ca_tracker.compute_features",
            "ca_tracker.export_overlays_with_labels",
            "ca_tracker.extract_intensity",
            "ca_tracker.helper",
            "ca_tracker.idaf_image_processing",
            "ca_tracker.idaf_io",
            "ca_tracker.link_particles",
            "ca_tracker.merge_tracking_data",
            "ca_tracker.plot_profiles"
        ],
        "version": "0.2.11"
    },
    "ca.py": {
        "cmdline": [
            "ca.py"
        ],
        "modules": [
            "ca_py",
            "ca_py.ca",
            "ca_py.openssl_util"
        ],
        "version": "1.6"
    },
    "caafinder": {
        "cmdline": [],
        "modules": [
            "caafinder",
            "caafinder.database",
            "caafinder.workspace"
        ],
        "version": "1.0.0"
    },
    "caar": {
        "cmdline": [],
        "modules": [
            "caar",
            "caar.cleanthermostat",
            "caar.configparser_read",
            "caar.history",
            "caar.histsummary",
            "caar.pandas_tseries_tools",
            "caar.picklert",
            "caar.timeseries",
            "data",
            "tests",
            "tests.conftest",
            "tests.data",
            "tests.test_caar"
        ],
        "version": "5.0.0b6"
    },
    "caasclient": {
        "cmdline": [],
        "modules": [
            "caasclient",
            "caasclient.client",
            "caasclient.http",
            "caasclient.shell",
            "caasclient.utils",
            "caasclient.v1",
            "caasclient.v1.base",
            "caasclient.v1.containers",
            "caasclient.v1.images",
            "caasclient.v1.projects"
        ],
        "version": "1.0.1b1"
    },
    "caatinga": {
        "cmdline": [],
        "modules": [
            "caatinga",
            "caatinga.caat",
            "caatinga.caat.backup",
            "caatinga.caat.maintenance",
            "caatinga.caat.organizer",
            "caatinga.caat_main",
            "caatinga.core",
            "caatinga.core.args",
            "caatinga.core.functions",
            "caatinga.core.settings",
            "caatinga.core.validation",
            "caatinga.lineaverages",
            "caatinga.lscaat",
            "caatinga.lscaat.changes",
            "caatinga.lscaat.diff",
            "caatinga.lscaat.help",
            "caatinga.lscaat.info",
            "caatinga.lscaat.listFiles",
            "caatinga.lscaat.remove",
            "caatinga.lscaat.restore",
            "caatinga.lscaat_main"
        ],
        "version": "1.1.1"
    },
    "cab": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cabalgata-silla-de-montar": {
        "cmdline": [
            "cabalgata"
        ],
        "modules": [
            "cabalgata",
            "cabalgata/silla",
            "cabalgata/silla.catalog",
            "cabalgata/silla.configuration",
            "cabalgata/silla.factories",
            "cabalgata/silla/util",
            "cabalgata/silla/util.disk",
            "cabalgata/silla/util.pid"
        ],
        "version": "0.1.1"
    },
    "cabalgata-zookeeper": {
        "cmdline": [],
        "modules": [
            "cabalgata",
            "cabalgata/zookeeper",
            "cabalgata/zookeeper.catalog",
            "cabalgata/zookeeper.plugin",
            "cabalgata/zookeeper/util"
        ],
        "version": "0.1.1"
    },
    "cabaret-voltaire": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cabbie": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cabby": {
        "cmdline": [],
        "modules": [
            "cabby",
            "cabby._version",
            "cabby.abstract",
            "cabby.cli",
            "cabby.cli.collections",
            "cabby.cli.commons",
            "cabby.cli.discovery",
            "cabby.cli.poll",
            "cabby.cli.proxy",
            "cabby.cli.push",
            "cabby.cli.subscriptions",
            "cabby.client10",
            "cabby.client11",
            "cabby.constants",
            "cabby.converters",
            "cabby.dispatcher",
            "cabby.entities",
            "cabby.exceptions",
            "cabby.utils"
        ],
        "version": "0.1.17"
    },
    "cabfile": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "cabinet": {
        "cmdline": [],
        "modules": [
            "cabinet",
            "cabinet.adb",
            "cabinet.bdb",
            "cabinet.fdb",
            "cabinet.hdb",
            "cabinet.tdb"
        ],
        "version": "1.1.3"
    },
    "cable-modem-stats": {
        "cmdline": [
            "modem-stats.py"
        ],
        "modules": [
            "cable_modem_stats",
            "cable_modem_stats.models",
            "cable_modem_stats.models.arris",
            "cable_modem_stats.models.base",
            "cable_modem_stats.stats",
            "cable_modem_stats.stats.streams",
            "cable_modem_stats.utils"
        ],
        "version": "0.1"
    },
    "cablegate": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cablemap.core": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cablemap.tm": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cablock": {
        "cmdline": [],
        "modules": [
            "cablock",
            "cablock.cablock"
        ],
        "version": "0.1"
    },
    "cabochon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cabochonclient": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cabochonserver": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "caboodle": {
        "cmdline": [],
        "modules": [
            "caboodle",
            "caboodle.agents",
            "caboodle.agents.d3cryp7",
            "caboodle.agents.local",
            "caboodle.agents.manual",
            "caboodle.agents.rucaptcha",
            "caboodle.agents.spec",
            "caboodle.challenges",
            "caboodle.challenges.manual",
            "caboodle.challenges.recaptcha",
            "caboodle.challenges.solve_media",
            "caboodle.challenges.spec",
            "caboodle.challenges.util",
            "caboodle.libraries",
            "caboodle.libraries.d3cryp7",
            "caboodle.libraries.rucaptcha",
            "caboodle.solve",
            "caboodle.web",
            "tests",
            "tests.agent",
            "tests.browser",
            "tests.challenge",
            "tests.challenge_utilities",
            "tests.d3cryp7_library",
            "tests.d3cryp7_tag_image_grid_agent",
            "tests.d3cryp7_text_image_agent",
            "tests.local_agent",
            "tests.manual_agent",
            "tests.manual_challenge",
            "tests.recaptcha_v2_challenge",
            "tests.rucaptcha_image_agent",
            "tests.rucaptcha_image_grid_agent",
            "tests.rucaptcha_library",
            "tests.solve_media_text_challenge",
            "tests.solver"
        ],
        "version": "1.0.0"
    },
    "cabot": {
        "cmdline": [],
        "modules": [
            "cabot",
            "cabot.cabot_config",
            "cabot.cabotapp",
            "cabot.cabotapp.admin",
            "cabot.cabotapp.alert",
            "cabot.cabotapp.apps",
            "cabot.cabotapp.calendar",
            "cabot.cabotapp.graphite",
            "cabot.cabotapp.jenkins",
            "cabot.cabotapp.migrations",
            "cabot.cabotapp.migrations.0001_initial",
            "cabot.cabotapp.migrations.0002_auto_20170131_1537",
            "cabot.cabotapp.migrations.0003_auto_20170201_1045",
            "cabot.cabotapp.models",
            "cabot.cabotapp.tasks",
            "cabot.cabotapp.templatetags",
            "cabot.cabotapp.templatetags.extra",
            "cabot.cabotapp.tests",
            "cabot.cabotapp.tests.test_plugin_settings",
            "cabot.cabotapp.tests.test_setup",
            "cabot.cabotapp.tests.test_urlprefix",
            "cabot.cabotapp.tests.tests_basic",
            "cabot.cabotapp.utils",
            "cabot.cabotapp.views",
            "cabot.celery",
            "cabot.celeryconfig",
            "cabot.entrypoint",
            "cabot.rest_urls",
            "cabot.settings",
            "cabot.settings_ldap",
            "cabot.settings_utils",
            "cabot.urls",
            "cabot.version",
            "cabot.wsgi"
        ],
        "version": "0.10.8"
    },
    "cabot-alert-email": {
        "cmdline": [],
        "modules": [
            "cabot_alert_email",
            "cabot_alert_email.migrations",
            "cabot_alert_email.migrations.0001_initial",
            "cabot_alert_email.models",
            "cabot_alert_email.tests",
            "cabot_alert_email.tests.test_email"
        ],
        "version": "1.4.3"
    },
    "cabot-alert-hipchat": {
        "cmdline": [],
        "modules": [
            "cabot_alert_hipchat",
            "cabot_alert_hipchat.migrations",
            "cabot_alert_hipchat.migrations.0001_initial",
            "cabot_alert_hipchat.models",
            "cabot_alert_hipchat.tests",
            "cabot_alert_hipchat.tests.test_hipchat"
        ],
        "version": "2.0.2"
    },
    "cabot-alert-irc": {
        "cmdline": [],
        "modules": [
            "cabot_alert_irc",
            "cabot_alert_irc.models"
        ],
        "version": "1.1.0"
    },
    "cabot-alert-opsgenie": {
        "cmdline": [],
        "modules": [
            "cabot_alert_opsgenie",
            "cabot_alert_opsgenie.models"
        ],
        "version": "0.0.1"
    },
    "cabot-alert-ovh": {
        "cmdline": [],
        "modules": [
            "cabot_alert_ovh",
            "cabot_alert_ovh.models"
        ],
        "version": "1.0.0b1"
    },
    "cabot-alert-pagerduty": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cabot-alert-pushover": {
        "cmdline": [],
        "modules": [
            "cabot_alert_pushover",
            "cabot_alert_pushover.models"
        ],
        "version": "0.1"
    },
    "cabot-alert-slack": {
        "cmdline": [],
        "modules": [
            "cabot_alert_slack",
            "cabot_alert_slack.migrations",
            "cabot_alert_slack.migrations.0001_initial",
            "cabot_alert_slack.models",
            "cabot_alert_slack.tests",
            "cabot_alert_slack.tests.test_slack",
            "cabot_alert_slack.urls",
            "cabot_alert_slack.views"
        ],
        "version": "0.8.1"
    },
    "cabot-alert-telegram": {
        "cmdline": [],
        "modules": [
            "cabot_alert_telegram",
            "cabot_alert_telegram.models",
            "cabot_alert_telegram.tests"
        ],
        "version": "0.5"
    },
    "cabot-alert-twilio": {
        "cmdline": [],
        "modules": [
            "cabot_alert_twilio",
            "cabot_alert_twilio.migrations",
            "cabot_alert_twilio.migrations.0001_initial",
            "cabot_alert_twilio.models",
            "cabot_alert_twilio.urls",
            "cabot_alert_twilio.views"
        ],
        "version": "1.3.1"
    },
    "cabric": {
        "cmdline": [],
        "modules": [
            "cabric",
            "cabric.api",
            "cabric.bridge",
            "cabric.cloud",
            "cabric.cloud.qingcloud",
            "cabric.components",
            "cabric.components.check",
            "cabric.components.clean",
            "cabric.components.compile",
            "cabric.components.config",
            "cabric.components.deploy",
            "cabric.components.hardline",
            "cabric.components.install",
            "cabric.components.mini",
            "cabric.components.package",
            "cabric.components.render",
            "cabric.components.touch",
            "cabric.components.update",
            "cabric.dns",
            "cabric.dns.dnspod",
            "cabric.env",
            "cabric.hack",
            "cabric.main",
            "cabric.utils"
        ],
        "version": "0.9.1"
    },
    "cabu": {
        "cmdline": [],
        "modules": [
            "cabu",
            "cabu.auth",
            "cabu.core",
            "cabu.default_settings",
            "cabu.drivers",
            "cabu.exceptions"
        ],
        "version": "0.0.2"
    },
    "cac-panel": {
        "cmdline": [],
        "modules": [
            "cacpanel",
            "cacpanel.cli",
            "cacpanel.panel"
        ],
        "version": "0.4.4"
    },
    "cacao-accounting": {
        "cmdline": [],
        "modules": [
            "cacao_accounting",
            "cacao_accounting.l18n",
            "cacao_accounting.menus",
            "cacao_accounting.newdb",
            "tests",
            "tests.test_01base"
        ],
        "version": "0.1.0rc0.post2"
    },
    "cacao-accounting-commons": {
        "cmdline": [],
        "modules": [
            "cacao_accounting_commons",
            "cacao_accounting_commons.accounting",
            "cacao_accounting_commons.accounting.data",
            "cacao_accounting_commons.accounting.data.charts",
            "cacao_accounting_commons.accounting.records",
            "cacao_accounting_commons.buying",
            "cacao_accounting_commons.schema",
            "cacao_accounting_commons.selling",
            "cacao_accounting_commons.tools",
            "tests",
            "tests.charts",
            "tests.test_01baseapi"
        ],
        "version": "0.1.0rc3"
    },
    "cacao-accounting-theme-default": {
        "cmdline": [],
        "modules": [
            "cacao_accounting_theme_default"
        ],
        "version": "0.1.0rc12"
    },
    "cachannel": {
        "cmdline": [],
        "modules": [
            "CaChannel",
            "CaChannel.CaChannel",
            "CaChannel._version",
            "CaChannel.ca",
            "CaChannel.util",
            "ca",
            "epicsMotor",
            "epicsPV"
        ],
        "version": "3.0.0"
    },
    "cache": {
        "cmdline": [],
        "modules": [
            "cache",
            "cache.version"
        ],
        "version": "1.0.3"
    },
    "cache-dependencies": {
        "cmdline": [],
        "modules": [
            "cache_dependencies",
            "cache_dependencies.cache",
            "cache_dependencies.defer",
            "cache_dependencies.dependencies",
            "cache_dependencies.exceptions",
            "cache_dependencies.interfaces",
            "cache_dependencies.locks",
            "cache_dependencies.mixins",
            "cache_dependencies.nocache",
            "cache_dependencies.relations",
            "cache_dependencies.tagging",
            "cache_dependencies.tests",
            "cache_dependencies.tests.helpers",
            "cache_dependencies.tests.test_cache",
            "cache_dependencies.tests.test_defer",
            "cache_dependencies.tests.test_dependencies",
            "cache_dependencies.tests.test_helpers",
            "cache_dependencies.tests.test_locks",
            "cache_dependencies.tests.test_relations",
            "cache_dependencies.tests.test_tagging",
            "cache_dependencies.tests.test_transaction",
            "cache_dependencies.transaction",
            "cache_dependencies.utils",
            "cache_tagging",
            "cache_tagging.django_cache_tagging",
            "django_cache_dependencies",
            "django_cache_dependencies.backends",
            "django_cache_dependencies.decorators",
            "django_cache_dependencies.management",
            "django_cache_dependencies.management.commands",
            "django_cache_dependencies.management.commands.cache_tagging_bench",
            "django_cache_dependencies.middleware",
            "django_cache_dependencies.models",
            "django_cache_dependencies.templatetags",
            "django_cache_dependencies.templatetags.cache_tagging_tags",
            "django_cache_dependencies.tests",
            "django_cache_dependencies.tests.urls",
            "django_cache_dependencies.tests.views",
            "django_cache_dependencies.utils"
        ],
        "version": "0.7.7.43"
    },
    "cache-ensembl": {
        "cmdline": [],
        "modules": [
            "cache_ensembl",
            "cache_ensembl.cache_ensembl_version",
            "cache_ensembl.compara_ncbi_taxa",
            "cache_ensembl.compara_orthology",
            "cache_ensembl.compara_protein_tree",
            "cache_ensembl.compara_species_pairs",
            "cache_ensembl.core_protein_features",
            "cache_ensembl.default_logger",
            "cache_ensembl.dump_object",
            "cache_ensembl.dump_orthology",
            "cache_ensembl.general",
            "cache_ensembl.marshalable_object",
            "cache_ensembl.random_access_file_by_sections"
        ],
        "version": "1.01"
    },
    "cache-flusher": {
        "cmdline": [],
        "modules": [
            "cache_flusher",
            "cache_flusher.cache_flusher"
        ],
        "version": "1.0.4"
    },
    "cache-generator": {
        "cmdline": [
            "stowe-towels.py",
            "wash-towels.py"
        ],
        "modules": [],
        "version": "0.1.0"
    },
    "cache-it": {
        "cmdline": [],
        "modules": [
            "cache_it",
            "cache_it.test_cache_it",
            "cache_it.test_init_cache"
        ],
        "version": "0.0.1"
    },
    "cache-me-outside": {
        "cmdline": [],
        "modules": [
            "cache_me_outside"
        ],
        "version": "1.0"
    },
    "cache-requests": {
        "cmdline": [],
        "modules": [
            "cache_requests",
            "cache_requests._compat",
            "cache_requests.memoize",
            "cache_requests.sessions",
            "cache_requests.utils"
        ],
        "version": "4.0.0"
    },
    "cache-simulator": {
        "cmdline": [],
        "modules": [
            "cachesimulator.simulator",
            "cachesimulator.table"
        ],
        "version": "1.0.2"
    },
    "cache-stdout": {
        "cmdline": [
            "cache"
        ],
        "modules": [],
        "version": "0.6.0"
    },
    "cache-tagging": {
        "cmdline": [],
        "modules": [
            "cache_tagging"
        ],
        "version": "0.7.7.40"
    },
    "cache-tier": {
        "cmdline": [],
        "modules": [
            "cache_tier",
            "cache_tier.cache_client"
        ],
        "version": "1.0.4"
    },
    "cache-toolbar": {
        "cmdline": [],
        "modules": [
            "cache_toolbar",
            "cache_toolbar.panels",
            "cache_toolbar.panels.memcache",
            "cache_toolbar.panels.pylibmc",
            "cache_toolbar.panels.redis"
        ],
        "version": "1.0.1"
    },
    "cache.py": {
        "cmdline": [],
        "modules": [
            "cache",
            "cache.cache"
        ],
        "version": "0.1.2"
    },
    "cacheable": {
        "cmdline": [],
        "modules": [
            "cacheable",
            "cacheable.adapter",
            "cacheable.adapter.DictAdapter",
            "cacheable.adapter.PeeweeAdapter"
        ],
        "version": "0.2.2"
    },
    "cacheblob": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cachebrowser": {
        "cmdline": [],
        "modules": [
            "cachebrowser",
            "cachebrowser.api",
            "cachebrowser.api.core",
            "cachebrowser.api.handlers",
            "cachebrowser.api.handlers.bootstrap",
            "cachebrowser.api.handlers.process",
            "cachebrowser.api.routes",
            "cachebrowser.basescrambler",
            "cachebrowser.bootstrap",
            "cachebrowser.cli",
            "cachebrowser.ipc",
            "cachebrowser.log",
            "cachebrowser.main",
            "cachebrowser.models",
            "cachebrowser.pipes",
            "cachebrowser.pipes.base",
            "cachebrowser.pipes.publisher",
            "cachebrowser.pipes.resolver",
            "cachebrowser.pipes.sni",
            "cachebrowser.proxy",
            "cachebrowser.resolver",
            "cachebrowser.scrambler",
            "cachebrowser.settings",
            "cachebrowser.settings.base",
            "cachebrowser.settings.development",
            "cachebrowser.settings.production",
            "cachebrowser.util",
            "onboarding",
            "onboarding.app"
        ],
        "version": "0.1.1"
    },
    "cachebust": {
        "cmdline": [
            "cacheBust"
        ],
        "modules": [
            "cachebust"
        ],
        "version": "1.1.0"
    },
    "cachecleaner": {
        "cmdline": [],
        "modules": [
            "cachecleaner"
        ],
        "version": "0.2"
    },
    "cachecontrol": {
        "cmdline": [],
        "modules": [
            "cachecontrol",
            "cachecontrol._cmd",
            "cachecontrol.adapter",
            "cachecontrol.cache",
            "cachecontrol.caches",
            "cachecontrol.caches.file_cache",
            "cachecontrol.caches.redis_cache",
            "cachecontrol.compat",
            "cachecontrol.controller",
            "cachecontrol.filewrapper",
            "cachecontrol.heuristics",
            "cachecontrol.serialize",
            "cachecontrol.wrapper"
        ],
        "version": "0.12.2"
    },
    "cachecow": {
        "cmdline": [],
        "modules": [
            "cachecow",
            "cachecow.mongo"
        ],
        "version": "0.1.2"
    },
    "cachecowemory": {
        "cmdline": [],
        "modules": [
            "cachecow",
            "cachecow.Cache",
            "cachecow.Cache.LRU",
            "cachecow.Cache.cache",
            "cachecow.Cache.modifiedLRU",
            "cachecow.CacheReader",
            "cachecow.CacheReader.basicCacheReader",
            "cachecow.CacheReader.csvCacheReader",
            "cachecow.CacheReader.readerAbstract",
            "cachecow.CacheReader.vscsiReader",
            "cachecow.Profiler",
            "cachecow.Profiler.abstract",
            "cachecow.Profiler.abstract.getMRCAbstract",
            "cachecow.Profiler.abstract.getMRCAbstractLRU",
            "cachecow.Profiler.abstract.profilerAbstract",
            "cachecow.Profiler.getMRCBasicLRU",
            "cachecow.Profiler.parda",
            "cachecow.Utils",
            "cachecow.Utils.LinkedList",
            "cachecow.Utils.utils"
        ],
        "version": "0.0.1.post1"
    },
    "cached": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.23"
    },
    "cached-property": {
        "cmdline": [],
        "modules": [
            "cached_property"
        ],
        "version": "1.3.0"
    },
    "cachefly": {
        "cmdline": [],
        "modules": [
            "cachefly",
            "django_cachefly",
            "django_cachefly.models"
        ],
        "version": "1.0.0"
    },
    "cachel": {
        "cmdline": [],
        "modules": [
            "cachel",
            "cachel.base",
            "cachel.compat",
            "cachel.offload",
            "cachel.redis",
            "cachel.simple",
            "cachel.uwsgi"
        ],
        "version": "0.8.0"
    },
    "cacheman": {
        "cmdline": [],
        "modules": [
            "cacheman",
            "cacheman.autosync",
            "cacheman.cacher",
            "cacheman.cacheutils",
            "cacheman.cachewrap",
            "cacheman.csvcache",
            "cacheman.registers"
        ],
        "version": "2.0.6"
    },
    "cacheobj": {
        "cmdline": [],
        "modules": [
            "cacheobj",
            "cacheobj.core",
            "cacheobj.field",
            "cacheobj.storage",
            "cacheobj/backend",
            "cacheobj/backend.file",
            "cacheobj/backend.memcache",
            "cacheobj/backend.memory",
            "cacheobj/backend.redis",
            "cacheobj/simple",
            "cacheobj/simple.file",
            "cacheobj/simple.memcache",
            "cacheobj/simple.memory",
            "cacheobj/simple.redis"
        ],
        "version": "0.9"
    },
    "cachepy": {
        "cmdline": [],
        "modules": [
            "cachepy",
            "cachepy.crypter",
            "cachepy.tests"
        ],
        "version": "0.1"
    },
    "cacher": {
        "cmdline": [],
        "modules": [
            "cache",
            "cache.jsonr",
            "cache.pickler"
        ],
        "version": "0.1"
    },
    "caches": {
        "cmdline": [],
        "modules": [
            "caches",
            "caches.collections",
            "caches.decorators",
            "caches.interface"
        ],
        "version": "0.2.18"
    },
    "cachet": {
        "cmdline": [],
        "modules": [
            "cachet"
        ],
        "version": "0.1.0"
    },
    "cachet-url-monitor": {
        "cmdline": [],
        "modules": [
            "cachet_url_monitor",
            "cachet_url_monitor.configuration",
            "cachet_url_monitor.scheduler",
            "cachet_url_monitor.status"
        ],
        "version": "0.3"
    },
    "cachetools": {
        "cmdline": [],
        "modules": [
            "cachetools",
            "cachetools.abc",
            "cachetools.cache",
            "cachetools.func",
            "cachetools.keys",
            "cachetools.lfu",
            "cachetools.lru",
            "cachetools.rr",
            "cachetools.ttl"
        ],
        "version": "2.0.0"
    },
    "cacheutils": {
        "cmdline": [],
        "modules": [
            "cacheutils",
            "cacheutils.aerospike",
            "cacheutils.hbase",
            "cacheutils.utils"
        ],
        "version": "0.1.1"
    },
    "cachevalue": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cachey": {
        "cmdline": [],
        "modules": [
            "cachey",
            "cachey.cache",
            "cachey.nbytes",
            "cachey.score"
        ],
        "version": "0.1.1"
    },
    "cachez": {
        "cmdline": [],
        "modules": [
            "cachez",
            "cachez_test"
        ],
        "version": "0.1.2"
    },
    "cachier": {
        "cmdline": [],
        "modules": [
            "cachier",
            "cachier._version",
            "cachier.base_core",
            "cachier.core",
            "cachier.mongo_core",
            "cachier.pickle_core"
        ],
        "version": "1.2.1"
    },
    "caching-s3-proxy": {
        "cmdline": [],
        "modules": [
            "proxy",
            "proxy.cache",
            "proxy.run",
            "proxy.test_cache",
            "proxy.wsgi"
        ],
        "version": "0.7"
    },
    "cachingproxy": {
        "cmdline": [],
        "modules": [
            "cachingproxy"
        ],
        "version": "0.1"
    },
    "cachingutil": {
        "cmdline": [],
        "modules": [
            "cachingutil",
            "cachingutil.base_cache",
            "cachingutil.base_file_cache",
            "cachingutil.binary_file_cache",
            "cachingutil.double_cache",
            "cachingutil.file_cache",
            "cachingutil.json_file_cache",
            "cachingutil.memory_cache",
            "cachingutil.unittests",
            "cachingutil.unittests.test_caching"
        ],
        "version": "1.0.11"
    },
    "cachish": {
        "cmdline": [],
        "modules": [
            "cachish",
            "cachish._version",
            "cachish.backends",
            "cachish.backends.hawk_json_http",
            "cachish.backends.heroku",
            "cachish.backends.json_http",
            "cachish.cache",
            "cachish.middleware",
            "cachish.utils"
        ],
        "version": "1.3.0"
    },
    "cachual": {
        "cmdline": [],
        "modules": [
            "cachual"
        ],
        "version": "0.2.2"
    },
    "cachy": {
        "cmdline": [],
        "modules": [
            "cachy",
            "cachy.cache_manager",
            "cachy.contracts",
            "cachy.contracts.factory",
            "cachy.contracts.repository",
            "cachy.contracts.store",
            "cachy.contracts.taggable_store",
            "cachy.helpers",
            "cachy.redis_tagged_cache",
            "cachy.repository",
            "cachy.serializers",
            "cachy.serializers.json_serializer",
            "cachy.serializers.msgpack_serializer",
            "cachy.serializers.pickle_serializer",
            "cachy.serializers.serializer",
            "cachy.stores",
            "cachy.stores.dict_store",
            "cachy.stores.file_store",
            "cachy.stores.memcached_store",
            "cachy.stores.null_store",
            "cachy.stores.redis_store",
            "cachy.tag_set",
            "cachy.tagged_cache",
            "cachy.utils",
            "cachy.version",
            "tests",
            "tests.stores",
            "tests.stores.test_dict_store",
            "tests.stores.test_file_store",
            "tests.stores.test_memcached_store",
            "tests.stores.test_null_store",
            "tests.stores.test_redis_store",
            "tests.test_cache_manager",
            "tests.test_repository",
            "tests.test_tagged_cache"
        ],
        "version": "0.1"
    },
    "cacofonisk": {
        "cmdline": [],
        "modules": [
            "cacofonisk",
            "cacofonisk.callerid",
            "cacofonisk.channel",
            "cacofonisk.reporters",
            "cacofonisk.reporters.base_reporter",
            "cacofonisk.reporters.debug_reporter",
            "cacofonisk.reporters.json_reporter",
            "cacofonisk.runners",
            "cacofonisk.runners.ami_runner",
            "cacofonisk.runners.file_runner",
            "cacofonisk.utils",
            "cacofonisk.utils.testcases",
            "tests",
            "tests.replaytest",
            "tests.test_origattnxfer",
            "tests.test_origblondeblindxfer",
            "tests.test_replayevents"
        ],
        "version": "0.0.3"
    },
    "cacpanel": {
        "cmdline": [],
        "modules": [
            "cacpanel",
            "cacpanel.cli",
            "cacpanel.panel"
        ],
        "version": "0.2.3"
    },
    "cacpy": {
        "cmdline": [],
        "modules": [
            "cacpy",
            "cacpy.CACPy"
        ],
        "version": "0.5.2"
    },
    "cacti-rest": {
        "cmdline": [],
        "modules": [
            "cacti_rest",
            "cacti_rest.models",
            "cacti_rest.resource_datasource",
            "cacti_rest.resource_host",
            "cacti_rest.resource_host_datasource",
            "cacti_rest.resource_hosts",
            "cacti_rest.rra",
            "cacti_rest.settings",
            "cacti_rest.tests",
            "cacti_rest.urls",
            "cacti_rest.utils"
        ],
        "version": "0.2.2"
    },
    "cactidbadapter": {
        "cmdline": [],
        "modules": [
            "cactidbadapter"
        ],
        "version": "0.1.2"
    },
    "cactus": {
        "cmdline": [],
        "modules": [
            "cactus",
            "cactus.bootstrap",
            "cactus.bootstrap.archive",
            "cactus.bootstrap.package",
            "cactus.browser",
            "cactus.cli",
            "cactus.compat",
            "cactus.compat.page",
            "cactus.compat.paths",
            "cactus.config",
            "cactus.config.fallback",
            "cactus.config.file",
            "cactus.config.router",
            "cactus.contrib",
            "cactus.contrib.external",
            "cactus.contrib.external.closure",
            "cactus.contrib.external.yui",
            "cactus.deployment",
            "cactus.deployment.auth",
            "cactus.deployment.cloudfiles",
            "cactus.deployment.cloudfiles.auth",
            "cactus.deployment.cloudfiles.engine",
            "cactus.deployment.cloudfiles.file",
            "cactus.deployment.engine",
            "cactus.deployment.file",
            "cactus.deployment.gcs",
            "cactus.deployment.gcs.auth",
            "cactus.deployment.gcs.engine",
            "cactus.deployment.gcs.file",
            "cactus.deployment.s3",
            "cactus.deployment.s3.auth",
            "cactus.deployment.s3.domain",
            "cactus.deployment.s3.engine",
            "cactus.deployment.s3.file",
            "cactus.exceptions",
            "cactus.i18n",
            "cactus.i18n.commands",
            "cactus.listener",
            "cactus.listener.mac",
            "cactus.listener.polling",
            "cactus.logger",
            "cactus.mime",
            "cactus.page",
            "cactus.plugin",
            "cactus.plugin.builtin",
            "cactus.plugin.builtin.cache",
            "cactus.plugin.builtin.context",
            "cactus.plugin.builtin.ignore",
            "cactus.plugin.defaults",
            "cactus.plugin.loader",
            "cactus.plugin.manager",
            "cactus.server",
            "cactus.site",
            "cactus.static",
            "cactus.static.external",
            "cactus.static.external.exceptions",
            "cactus.static.external.manager",
            "cactus.template_tags",
            "cactus.tests",
            "cactus.tests.compat",
            "cactus.tests.data.skeleton.plugins",
            "cactus.tests.data.skeleton.plugins.blog.disabled",
            "cactus.tests.data.skeleton.plugins.coffeescript.disabled",
            "cactus.tests.data.skeleton.plugins.haml.disabled",
            "cactus.tests.data.skeleton.plugins.page_context",
            "cactus.tests.data.skeleton.plugins.sass.disabled",
            "cactus.tests.data.skeleton.plugins.scss.disabled",
            "cactus.tests.data.skeleton.plugins.sprites.disabled",
            "cactus.tests.data.skeleton.plugins.static_optimizers",
            "cactus.tests.data.skeleton.plugins.version",
            "cactus.tests.deployment",
            "cactus.tests.deployment.test_bucket_create",
            "cactus.tests.deployment.test_bucket_name",
            "cactus.tests.deployment.test_engine_api",
            "cactus.tests.deployment.test_file",
            "cactus.tests.integration",
            "cactus.tests.integration.s3",
            "cactus.tests.integration.s3.test_bucket",
            "cactus.tests.integration.s3.test_deploy",
            "cactus.tests.integration.s3.test_workflow",
            "cactus.tests.test_basic",
            "cactus.tests.test_bootstrap",
            "cactus.tests.test_build",
            "cactus.tests.test_cli",
            "cactus.tests.test_compat",
            "cactus.tests.test_config",
            "cactus.tests.test_context",
            "cactus.tests.test_credentials",
            "cactus.tests.test_deploy",
            "cactus.tests.test_external",
            "cactus.tests.test_fingerprint",
            "cactus.tests.test_ignore",
            "cactus.tests.test_legacy_context",
            "cactus.tests.test_listener",
            "cactus.tests.test_mime",
            "cactus.tests.test_plugins",
            "cactus.tests.test_template_tags",
            "cactus.tests.test_ui",
            "cactus.tests.test_urls",
            "cactus.ui",
            "cactus.utils",
            "cactus.utils.file",
            "cactus.utils.filesystem",
            "cactus.utils.helpers",
            "cactus.utils.internal",
            "cactus.utils.ipc",
            "cactus.utils.network",
            "cactus.utils.packaging",
            "cactus.utils.parallel",
            "cactus.utils.sync",
            "cactus.utils.url"
        ],
        "version": "3.3.3"
    },
    "cactusbot": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cad2sim": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cada": {
        "cmdline": [],
        "modules": [
            "cada",
            "cada.commands",
            "cada.csv",
            "cada.models",
            "cada.search",
            "cada.views"
        ],
        "version": "0.1.0"
    },
    "cadc": {
        "cmdline": [
            "cadc-copy",
            "cadc-fileinfo"
        ],
        "modules": [
            "cadc",
            "cadc.__version__",
            "cadc.data",
            "cadc.data.client",
            "cadc.data.constants",
            "cadc.data.exceptions",
            "cadc.data.protocol",
            "cadc.data.transfer",
            "cadc.data.transfer_reader",
            "cadc.data.transfer_writer"
        ],
        "version": "0.2.3"
    },
    "cadcdata": {
        "cmdline": [],
        "modules": [
            "cadcdata",
            "cadcdata.core",
            "cadcdata.tests",
            "cadcdata.tests.test_core",
            "cadcdata.tests.test_transfer",
            "cadcdata.transfer",
            "cadcdata.version"
        ],
        "version": "1.1a4"
    },
    "cadcutils": {
        "cmdline": [],
        "modules": [
            "cadcutils",
            "cadcutils.exceptions",
            "cadcutils.net",
            "cadcutils.net.auth",
            "cadcutils.net.ws",
            "cadcutils.net.wscapabilities",
            "cadcutils.util",
            "cadcutils.util.config",
            "cadcutils.util.tests",
            "cadcutils.util.tests.setup_package",
            "cadcutils.util.tests.test_config",
            "cadcutils.util.tests.test_utils",
            "cadcutils.util.utils",
            "cadcutils.version"
        ],
        "version": "1.1.2a7"
    },
    "cadenza": {
        "cmdline": [],
        "modules": [
            "cadenza"
        ],
        "version": "0.0.0"
    },
    "cadnano": {
        "cmdline": [],
        "modules": [
            "cadnano",
            "cadnano.addinstancecmd",
            "cadnano.assembly",
            "cadnano.bin",
            "cadnano.bin.appify",
            "cadnano.bin.createstl",
            "cadnano.bin.main",
            "cadnano.cadnanoqt",
            "cadnano.cnenum",
            "cadnano.cnobject",
            "cadnano.cnproxy",
            "cadnano.color",
            "cadnano.data",
            "cadnano.data.dnasequences",
            "cadnano.data.sequencemods",
            "cadnano.decorators",
            "cadnano.decorators.insertion",
            "cadnano.docmodscmd",
            "cadnano.document",
            "cadnano.fileio",
            "cadnano.fileio.c25decode",
            "cadnano.fileio.lattice",
            "cadnano.fileio.nnodecode",
            "cadnano.fileio.nnoencode",
            "cadnano.fileio.v2decode",
            "cadnano.fileio.v2encode",
            "cadnano.fileio.v3decode",
            "cadnano.fileio.v3encode",
            "cadnano.gui",
            "cadnano.gui.controllers",
            "cadnano.gui.controllers.documentcontroller",
            "cadnano.gui.controllers.itemcontrollers",
            "cadnano.gui.controllers.itemcontrollers.nucleicacidpartitemcontroller",
            "cadnano.gui.controllers.itemcontrollers.oligoitemcontroller",
            "cadnano.gui.controllers.itemcontrollers.partitemcontroller",
            "cadnano.gui.controllers.itemcontrollers.strand",
            "cadnano.gui.controllers.itemcontrollers.strand.abstractstranditemcontroller",
            "cadnano.gui.controllers.itemcontrollers.strand.endpointitemcontroller",
            "cadnano.gui.controllers.itemcontrollers.strand.stranditemcontroller",
            "cadnano.gui.controllers.itemcontrollers.virtualhelixitemcontroller",
            "cadnano.gui.controllers.viewrootcontroller",
            "cadnano.gui.palette",
            "cadnano.gui.plugins",
            "cadnano.gui.plugins.dummyplugin",
            "cadnano.gui.ui",
            "cadnano.gui.ui.dialogs",
            "cadnano.gui.ui.dialogs.dialogicons_rc",
            "cadnano.gui.ui.dialogs.ui_about",
            "cadnano.gui.ui.dialogs.ui_addseq",
            "cadnano.gui.ui.dialogs.ui_latticetype",
            "cadnano.gui.ui.dialogs.ui_mods",
            "cadnano.gui.ui.dialogs.ui_preferences",
            "cadnano.gui.ui.dialogs.ui_warning",
            "cadnano.gui.ui.mainwindow",
            "cadnano.gui.ui.mainwindow.icons_rc",
            "cadnano.gui.ui.mainwindow.svgbutton",
            "cadnano.gui.ui.mainwindow.ui_mainwindow",
            "cadnano.gui.views",
            "cadnano.gui.views.abstractitems",
            "cadnano.gui.views.abstractitems.abstractoligoitem",
            "cadnano.gui.views.abstractitems.abstractpartitem",
            "cadnano.gui.views.abstractitems.abstracttoolmanager",
            "cadnano.gui.views.abstractitems.abstractvirtualhelixitem",
            "cadnano.gui.views.customqgraphicsview",
            "cadnano.gui.views.documentwindow",
            "cadnano.gui.views.grabcorneritem",
            "cadnano.gui.views.outlinerview",
            "cadnano.gui.views.outlinerview.cnoutlineritem",
            "cadnano.gui.views.outlinerview.nucleicacidpartitem",
            "cadnano.gui.views.outlinerview.oligoitem",
            "cadnano.gui.views.outlinerview.outlinerstyles",
            "cadnano.gui.views.outlinerview.outlinertreewidget",
            "cadnano.gui.views.outlinerview.virtualhelixitem",
            "cadnano.gui.views.pathview",
            "cadnano.gui.views.pathview.colorpanel",
            "cadnano.gui.views.pathview.nucleicacidpartitem",
            "cadnano.gui.views.pathview.pathextras",
            "cadnano.gui.views.pathview.pathrootitem",
            "cadnano.gui.views.pathview.pathstyles",
            "cadnano.gui.views.pathview.prexovermanager",
            "cadnano.gui.views.pathview.strand",
            "cadnano.gui.views.pathview.strand.abstractstranditem",
            "cadnano.gui.views.pathview.strand.decorators",
            "cadnano.gui.views.pathview.strand.decorators.insertionitem",
            "cadnano.gui.views.pathview.strand.endpointitem",
            "cadnano.gui.views.pathview.strand.stranditem",
            "cadnano.gui.views.pathview.strand.xoveritem",
            "cadnano.gui.views.pathview.tools",
            "cadnano.gui.views.pathview.tools.abstractpathtool",
            "cadnano.gui.views.pathview.tools.addseqtool",
            "cadnano.gui.views.pathview.tools.breaktool",
            "cadnano.gui.views.pathview.tools.erasetool",
            "cadnano.gui.views.pathview.tools.insertiontool",
            "cadnano.gui.views.pathview.tools.modstool",
            "cadnano.gui.views.pathview.tools.painttool",
            "cadnano.gui.views.pathview.tools.pathselection",
            "cadnano.gui.views.pathview.tools.pathtoolmanager",
            "cadnano.gui.views.pathview.tools.penciltool",
            "cadnano.gui.views.pathview.tools.selecttool",
            "cadnano.gui.views.pathview.tools.skiptool",
            "cadnano.gui.views.pathview.virtualhelixhandleitem",
            "cadnano.gui.views.pathview.virtualhelixitem",
            "cadnano.gui.views.preferences",
            "cadnano.gui.views.propertyview",
            "cadnano.gui.views.propertyview.abstractproppartitem",
            "cadnano.gui.views.propertyview.cnpropertyitem",
            "cadnano.gui.views.propertyview.nucleicacidpartitem",
            "cadnano.gui.views.propertyview.oligoitem",
            "cadnano.gui.views.propertyview.propertyeditorwidget",
            "cadnano.gui.views.propertyview.virtualhelixitem",
            "cadnano.gui.views.sliceview",
            "cadnano.gui.views.sliceview.griditem",
            "cadnano.gui.views.sliceview.nucleicacidpartitem",
            "cadnano.gui.views.sliceview.prexovermanager",
            "cadnano.gui.views.sliceview.sliceextras",
            "cadnano.gui.views.sliceview.slicerootitem",
            "cadnano.gui.views.sliceview.slicestyles",
            "cadnano.gui.views.sliceview.tools",
            "cadnano.gui.views.sliceview.tools.abstractslicetool",
            "cadnano.gui.views.sliceview.tools.createslicetool",
            "cadnano.gui.views.sliceview.tools.moveslicetool",
            "cadnano.gui.views.sliceview.tools.selectslicetool",
            "cadnano.gui.views.sliceview.tools.slicetoolmanager",
            "cadnano.gui.views.sliceview.virtualhelixitem",
            "cadnano.gui.views.styles",
            "cadnano.install_exe",
            "cadnano.install_exe.cadnano-script",
            "cadnano.install_exe.cadnanoinstall",
            "cadnano.math",
            "cadnano.math.box",
            "cadnano.math.face",
            "cadnano.math.matrix3",
            "cadnano.math.matrix4",
            "cadnano.math.solid",
            "cadnano.math.vector",
            "cadnano.objectinstance",
            "cadnano.oligo",
            "cadnano.oligo.applycolorcmd",
            "cadnano.oligo.applysequencecmd",
            "cadnano.oligo.oligo",
            "cadnano.oligo.removeoligocmd",
            "cadnano.part",
            "cadnano.part.changeinstancepropertycmd",
            "cadnano.part.createvhelixcmd",
            "cadnano.part.nucleicacidpart",
            "cadnano.part.part",
            "cadnano.part.refresholigoscmd",
            "cadnano.part.refreshsegmentscmd",
            "cadnano.part.removepartcmd",
            "cadnano.part.removevhelixcmd",
            "cadnano.part.resizevirtualhelixcmd",
            "cadnano.part.translatevhelixcmd",
            "cadnano.part.virtualhelix",
            "cadnano.part.xovercmds",
            "cadnano.pointquadtree",
            "cadnano.preferences",
            "cadnano.proxyconfigure",
            "cadnano.removeinstancecmd",
            "cadnano.setpropertycmd",
            "cadnano.strand",
            "cadnano.strand.insertioncmd",
            "cadnano.strand.modscmd",
            "cadnano.strand.resizecmd",
            "cadnano.strand.strand",
            "cadnano.strandset",
            "cadnano.strandset.createstrandcmd",
            "cadnano.strandset.mergecmd",
            "cadnano.strandset.removestrandcmd",
            "cadnano.strandset.splitcmd",
            "cadnano.strandset.strandset",
            "cadnano.undocommand",
            "cadnano.undostack",
            "cadnano.util",
            "cadnano.wrapapi",
            "data"
        ],
        "version": "2.5.1.11"
    },
    "cadquery": {
        "cmdline": [],
        "modules": [
            "cadquery",
            "cadquery.contrib",
            "cadquery.cq",
            "cadquery.cq_directive",
            "cadquery.cqgi",
            "cadquery.freecad_impl",
            "cadquery.freecad_impl.exporters",
            "cadquery.freecad_impl.geom",
            "cadquery.freecad_impl.importers",
            "cadquery.freecad_impl.shapes",
            "cadquery.plugins",
            "cadquery.selectors",
            "tests",
            "tests.TestCQGI",
            "tests.TestCQSelectors",
            "tests.TestCadObjects",
            "tests.TestCadQuery",
            "tests.TestExporters",
            "tests.TestImporters",
            "tests.TestWorkplanes"
        ],
        "version": "1.0.0"
    },
    "cadvisor-metrics": {
        "cmdline": [],
        "modules": [
            "collector",
            "collector.collector",
            "collector.example_collector"
        ],
        "version": "0.2"
    },
    "caelum": {
        "cmdline": [],
        "modules": [
            "caelum",
            "caelum.eere",
            "caelum.env",
            "caelum.forecast",
            "caelum.g",
            "caelum.g2",
            "caelum.g3",
            "caelum.gfs",
            "caelum.noaa",
            "caelum.nsrdb",
            "caelum.t",
            "caelum.tmy3",
            "caelum.tools",
            "tests",
            "tests.cover",
            "tests.unit"
        ],
        "version": "0.8.25.18"
    },
    "caenbrew": {
        "cmdline": [],
        "modules": [
            "caenbrew",
            "caenbrew.packages",
            "caenbrew.packages.caenbrew",
            "caenbrew.packages.clang",
            "caenbrew.packages.cmake",
            "caenbrew.packages.cppcheck",
            "caenbrew.packages.emacs",
            "caenbrew.packages.fish",
            "caenbrew.packages.git",
            "caenbrew.packages.libevent",
            "caenbrew.packages.ncurses",
            "caenbrew.packages.pip",
            "caenbrew.packages.python3",
            "caenbrew.packages.tmux",
            "caenbrew.packages.vim",
            "caenbrew.packaging"
        ],
        "version": "1.0.1"
    },
    "caerbannog": {
        "cmdline": [],
        "modules": [
            "caerbannog"
        ],
        "version": "0.1"
    },
    "caesar": {
        "cmdline": [],
        "modules": [
            "caesar",
            "caesar.connection",
            "caesar.logger",
            "caesar.mail",
            "caesar.main",
            "caesar.save_credential",
            "caesar.utils"
        ],
        "version": "0.1.3"
    },
    "caesar-cipher": {
        "cmdline": [],
        "modules": [
            "caesarCipher"
        ],
        "version": "1.0.0"
    },
    "caesar-cipher-hacker": {
        "cmdline": [],
        "modules": [
            "caesarCipherHacker"
        ],
        "version": "1.0.0"
    },
    "caesarcipher": {
        "cmdline": [
            "caesarcipher"
        ],
        "modules": [
            "caesarcipher",
            "caesarcipher.caesarcipher",
            "caesarcipher.cmdline",
            "tests.test_caesarcipher"
        ],
        "version": "1.0"
    },
    "caesarplotlib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "caesium": {
        "cmdline": [],
        "modules": [
            "caesium",
            "caesium.document",
            "caesium.handler"
        ],
        "version": "0.3.1"
    },
    "caf": {
        "cmdline": [],
        "modules": [
            "caf",
            "caf.generator",
            "caf.utils",
            "caf.verifier"
        ],
        "version": "0.1.1"
    },
    "cafe": {
        "cmdline": [],
        "modules": [
            "cafe"
        ],
        "version": "0.1"
    },
    "cafe-plugin-http": {
        "cmdline": [],
        "modules": [
            "engine",
            "engine.http",
            "engine.http.behaviors",
            "engine.http.client",
            "engine.http.config"
        ],
        "version": "0.0.12"
    },
    "cafe-plugin-httpv2": {
        "cmdline": [],
        "modules": [
            "engine",
            "engine.httpv2",
            "engine.httpv2.client"
        ],
        "version": "0.0.5"
    },
    "cafe-plugin-mongo": {
        "cmdline": [],
        "modules": [
            "engine",
            "engine.mongo",
            "engine.mongo.client"
        ],
        "version": "0.0.2"
    },
    "cafe-plugin-skip-on-issue": {
        "cmdline": [],
        "modules": [
            "drivers",
            "drivers.unittest",
            "drivers.unittest.issue",
            "resources",
            "resources.github",
            "resources.github.config",
            "resources.github.issue_tracker",
            "resources.jira",
            "resources.jira.config",
            "resources.jira.issue_tracker",
            "resources.launchpad",
            "resources.launchpad.config",
            "resources.launchpad.issue_tracker"
        ],
        "version": "0.0.2"
    },
    "cafe-plugin-ssh": {
        "cmdline": [],
        "modules": [
            "engine",
            "engine.ssh",
            "engine.ssh.behaviors",
            "engine.ssh.client",
            "engine.ssh.config",
            "engine.ssh.models",
            "engine.ssh.models.ssh_response"
        ],
        "version": "0.0.5"
    },
    "cafe-plugin-sshv2": {
        "cmdline": [],
        "modules": [
            "engine",
            "engine.sshv2",
            "engine.sshv2.behaviors",
            "engine.sshv2.client",
            "engine.sshv2.common",
            "engine.sshv2.composites",
            "engine.sshv2.config",
            "engine.sshv2.models",
            "engine.sshv2.proxy"
        ],
        "version": "0.0.7"
    },
    "cafe-plugin-subunit": {
        "cmdline": [],
        "modules": [
            "common",
            "common.reporting",
            "common.reporting.subunit_report"
        ],
        "version": "0.0.3"
    },
    "cafepy": {
        "cmdline": [],
        "modules": [
            "cafepy",
            "cafepy.cafepy",
            "cafepy.cafepy_base",
            "cafepy.cafepy_error",
            "cafepy.cafepy_memory_manager",
            "cafepy.cafepy_stdout",
            "cafepy.calc_cmap",
            "cafepy.calc_com",
            "cafepy.calc_distance",
            "cafepy.calc_qscore",
            "cafepy.file_io",
            "cafepy.read_cafeinp",
            "cafepy.read_dcd",
            "cafepy.read_index",
            "cafepy.read_movie",
            "cafepy.read_ninfo",
            "cafepy.read_pdb",
            "cafepy.write_cafeinp",
            "cafepy.write_dcd",
            "cafepy.write_movie",
            "cafepy.write_ninfo",
            "src",
            "src.cafepy",
            "src.cafepy_base",
            "src.cafepy_error",
            "src.cafepy_memory_manager",
            "src.cafepy_stdout",
            "src.calc_cmap",
            "src.calc_com",
            "src.calc_distance",
            "src.calc_qscore",
            "src.file_io",
            "src.read_cafeinp",
            "src.read_dcd",
            "src.read_index",
            "src.read_movie",
            "src.read_ninfo",
            "src.read_pdb",
            "src.write_cafeinp",
            "src.write_dcd",
            "src.write_movie",
            "src.write_ninfo"
        ],
        "version": "0.0.1"
    },
    "caffeinated-hound": {
        "cmdline": [],
        "modules": [
            "hound",
            "hound.handlers",
            "hound.scripts"
        ],
        "version": "0.1.0"
    },
    "caffeine": {
        "cmdline": [],
        "modules": [
            "caffeine"
        ],
        "version": "0.5"
    },
    "caffeine-ng": {
        "cmdline": [],
        "modules": [
            "caffeine",
            "caffeine.applicationinstance",
            "caffeine.core",
            "caffeine.icons",
            "caffeine.inhibitors",
            "caffeine.main",
            "caffeine.paths",
            "caffeine.procmanager",
            "caffeine.utils",
            "caffeine.version"
        ],
        "version": "3.4.0"
    },
    "caffi": {
        "cmdline": [],
        "modules": [
            "caffi",
            "caffi._ca",
            "caffi._version",
            "caffi.ca",
            "caffi.compat",
            "caffi.constants",
            "caffi.dbr",
            "caffi.macros"
        ],
        "version": "1.0.0"
    },
    "cage": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.4"
    },
    "cagey": {
        "cmdline": [],
        "modules": [
            "cagey",
            "cagey.commands",
            "cagey.models"
        ],
        "version": "3.0"
    },
    "cagezzz": {
        "cmdline": [],
        "modules": [
            "cagezzz"
        ],
        "version": "0.0.1"
    },
    "cahier": {
        "cmdline": [],
        "modules": [
            "cahier",
            "cahier.cmd_plugins",
            "cahier.cmd_plugins.cd",
            "cahier.cmd_plugins.date",
            "cahier.cmd_plugins.git",
            "cahier.cmd_plugins.ikiwiki",
            "cahier.config",
            "cahier.errors",
            "cahier.io",
            "cahier.main",
            "cahier.path"
        ],
        "version": "0.1.1"
    },
    "cahoot": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cahoots": {
        "cmdline": [],
        "modules": [
            "cahoots",
            "cahoots.confidence",
            "cahoots.confidence.normalizer",
            "cahoots.confidence.normalizers",
            "cahoots.confidence.normalizers.base",
            "cahoots.confidence.normalizers.character",
            "cahoots.confidence.normalizers.date",
            "cahoots.confidence.normalizers.equation",
            "cahoots.confidence.normalizers.number",
            "cahoots.confidence.normalizers.phone",
            "cahoots.config",
            "cahoots.data",
            "cahoots.parser",
            "cahoots.parsers",
            "cahoots.parsers.base",
            "cahoots.parsers.boolean",
            "cahoots.parsers.character",
            "cahoots.parsers.date",
            "cahoots.parsers.email",
            "cahoots.parsers.equation",
            "cahoots.parsers.location",
            "cahoots.parsers.location.address",
            "cahoots.parsers.location.coordinate",
            "cahoots.parsers.location.landmark",
            "cahoots.parsers.location.postalcode",
            "cahoots.parsers.measurement",
            "cahoots.parsers.name",
            "cahoots.parsers.number",
            "cahoots.parsers.phone",
            "cahoots.parsers.programming",
            "cahoots.parsers.programming.bayesian",
            "cahoots.parsers.programming.lexer",
            "cahoots.parsers.uri",
            "cahoots.result",
            "cahoots.util",
            "cahootserver",
            "cahootserver.config",
            "cahootserver.out",
            "cahootserver.server"
        ],
        "version": "0.5.2"
    },
    "cai-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "caicloud.tensorflow": {
        "cmdline": [],
        "modules": [
            "caicloud",
            "caicloud.clever",
            "caicloud.clever.examples",
            "caicloud.clever.examples.dist-tf-template",
            "caicloud.clever.examples.half_plus_two",
            "caicloud.clever.examples.half_plus_two.grpc_client",
            "caicloud.clever.examples.half_plus_two.import_model_half_plus_two",
            "caicloud.clever.examples.half_plus_two.restful_client",
            "caicloud.clever.examples.half_plus_two.saved_model_half_plus_two",
            "caicloud.clever.examples.mnist",
            "caicloud.clever.examples.mnist.grpc_client",
            "caicloud.clever.examples.mnist.mnist_export",
            "caicloud.clever.examples.mnist.mnist_import",
            "caicloud.clever.examples.mnist.restful_client",
            "caicloud.clever.examples.ptb",
            "caicloud.clever.examples.ptb.grpc_client",
            "caicloud.clever.examples.ptb.ptb_caicloud_taas",
            "caicloud.clever.examples.ptb.ptb_word_lm",
            "caicloud.clever.examples.ptb.reader",
            "caicloud.clever.examples.ptb.reader_test",
            "caicloud.clever.examples.two_inputs_three_outputs",
            "caicloud.clever.examples.two_inputs_three_outputs.export_model",
            "caicloud.clever.examples.two_inputs_three_outputs.grpc_client",
            "caicloud.clever.examples.two_inputs_three_outputs.import_model",
            "caicloud.clever.examples.two_inputs_three_outputs.restful_client",
            "caicloud.clever.serving",
            "caicloud.clever.serving.client",
            "caicloud.clever.serving.client.grpc_client",
            "caicloud.clever.serving.client.restful_client",
            "caicloud.clever.serving.client.serving_error",
            "caicloud.clever.serving.pb",
            "caicloud.clever.serving.pb.prediction_service_pb2",
            "caicloud.clever.serving.pb.prediction_service_pb2_grpc",
            "caicloud.clever.serving.utils",
            "caicloud.clever.tensorflow",
            "caicloud.clever.tensorflow.constants",
            "caicloud.clever.tensorflow.dist_base",
            "caicloud.clever.tensorflow.model_exporter",
            "caicloud.clever.tensorflow.model_importer"
        ],
        "version": "2.0.3"
    },
    "caimaoy-util": {
        "cmdline": [],
        "modules": [
            "caimaoy_util"
        ],
        "version": "0.0.1.6.alpha"
    },
    "cain": {
        "cmdline": [],
        "modules": [
            "cain",
            "cain.jsonable",
            "cain.queryable",
            "cain.restable"
        ],
        "version": "0.3.2"
    },
    "caine": {
        "cmdline": [],
        "modules": [
            "caine",
            "caine.caine"
        ],
        "version": "0.1.12"
    },
    "caine-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.0"
    },
    "caipyra": {
        "cmdline": [],
        "modules": [
            "caipyra",
            "caipyra.java",
            "caipyra.this"
        ],
        "version": "0.3"
    },
    "caipyrinha": {
        "cmdline": [],
        "modules": [
            "caipyrinha",
            "ez_setup"
        ],
        "version": "0.2.2"
    },
    "caipyrus": {
        "cmdline": [],
        "modules": [
            "caipyrus",
            "caipyrus.scribe"
        ],
        "version": "0.2"
    },
    "cairis": {
        "cmdline": [
            "at2om.py",
            "cairis_gui.py",
            "cairisd.py",
            "cexport.py",
            "cimport.py",
            "configure_cairis_db.py",
            "gt2pc.py",
            "xr2cr.py"
        ],
        "modules": [
            "cairis"
        ],
        "version": "1.2.16"
    },
    "cairn-geographics": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "cairo-helpers": {
        "cmdline": [],
        "modules": [
            "cairo_helpers",
            "cairo_helpers.font",
            "cairo_helpers.surface"
        ],
        "version": "0.2.post1"
    },
    "cairocffi": {
        "cmdline": [],
        "modules": [
            "cairocffi",
            "cairocffi.compat",
            "cairocffi.constants",
            "cairocffi.context",
            "cairocffi.ffi_build",
            "cairocffi.fonts",
            "cairocffi.matrix",
            "cairocffi.patterns",
            "cairocffi.pixbuf",
            "cairocffi.surfaces",
            "cairocffi.test_cairo",
            "cairocffi.test_pixbuf",
            "cairocffi.test_xcb",
            "cairocffi.xcb"
        ],
        "version": "0.8.0"
    },
    "cairomovie": {
        "cmdline": [],
        "modules": [
            "cairomovie",
            "cairomovie.anim"
        ],
        "version": "0.8.4"
    },
    "cairosvg": {
        "cmdline": [],
        "modules": [
            "cairosvg",
            "cairosvg.bounding_box",
            "cairosvg.colors",
            "cairosvg.css",
            "cairosvg.defs",
            "cairosvg.features",
            "cairosvg.helpers",
            "cairosvg.image",
            "cairosvg.parser",
            "cairosvg.path",
            "cairosvg.shapes",
            "cairosvg.surface",
            "cairosvg.svg",
            "cairosvg.test_api",
            "cairosvg.text",
            "cairosvg.url"
        ],
        "version": "2.0.3"
    },
    "cairotft": {
        "cmdline": [],
        "modules": [
            "build_scripts",
            "build_scripts.version",
            "cairotft",
            "cairotft.linuxfb",
            "cairotft.svg_image",
            "cairotft.tests",
            "cairotft.tft",
            "cairotft.transitions",
            "cairotft.widgets",
            "cairotft.widgets.blink_icon",
            "cairotft.widgets.marquee"
        ],
        "version": "0.1.2"
    },
    "cairy": {
        "cmdline": [],
        "modules": [
            "cairy"
        ],
        "version": "0.1"
    },
    "caixabreak": {
        "cmdline": [],
        "modules": [
            "caixabreak",
            "caixabreak.caixabreak"
        ],
        "version": "0.2.5"
    },
    "caiyun": {
        "cmdline": [],
        "modules": [
            "caiyun",
            "caiyun.cli"
        ],
        "version": "0.1.3"
    },
    "cajal": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cake": {
        "cmdline": [
            "cake"
        ],
        "modules": [
            "cake",
            "cake.application",
            "cake.color",
            "cake.errors",
            "cake.lib"
        ],
        "version": "0.2.3"
    },
    "cake-build": {
        "cmdline": [],
        "modules": [
            "cake"
        ],
        "version": "0.0.1"
    },
    "cakeme": {
        "cmdline": [],
        "modules": [
            "cakeme",
            "cakeme.applibase",
            "cakeme.fileutiles",
            "cakeme.fileutils",
            "cakeme.greet"
        ],
        "version": "0.0.4"
    },
    "cakephp-instaweb": {
        "cmdline": [],
        "modules": [
            "cakephp_instaweb"
        ],
        "version": "0.1"
    },
    "cakephp-theme": {
        "cmdline": [],
        "modules": [
            "cakephp_theme"
        ],
        "version": "1.0.2"
    },
    "caktus-sphinx-theme": {
        "cmdline": [],
        "modules": [
            "caktus_theme"
        ],
        "version": "0.1.0"
    },
    "cal": {
        "cmdline": [],
        "modules": [
            "_CAL",
            "_CAL.Appointment",
            "_CAL.Calendar",
            "_CAL.Date",
            "_CAL.Date_Time",
            "_CAL.Day_Rule",
            "_CAL.Delta",
            "_CAL.Formatter_Scope",
            "_CAL.G8R",
            "_CAL.Holiday",
            "_CAL.JD",
            "_CAL.Ordinal",
            "_CAL.Period",
            "_CAL.Plan",
            "_CAL.Range_DT",
            "_CAL.Relative_Delta",
            "_CAL.Scheduled",
            "_CAL.TaT",
            "_CAL.Time",
            "_CAL.VERSION",
            "_CAL.Year",
            "_CAL._DTW_",
            "_CAL.date_time_localizer",
            "_CAL.filter_str_dates",
            "_CAL.iCalendar",
            "_CAL.pdf",
            "_CAL.setup",
            "_CAL.ui_display"
        ],
        "version": "2.2.6"
    },
    "calabash": {
        "cmdline": [],
        "modules": [
            "calabash",
            "calabash.common",
            "calabash.pipeline"
        ],
        "version": "0.0.3"
    },
    "calais": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "calamari": {
        "cmdline": [],
        "modules": [
            "calamari",
            "calamari.engine",
            "calamari.engine.config",
            "calamari.engine.engine",
            "calamari.interfaces",
            "calamari.interfaces.irc_interface",
            "calamari.interfaces.xmpp"
        ],
        "version": "1.0.3"
    },
    "calango-beta": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "calband-django-mobile": {
        "cmdline": [],
        "modules": [
            "django_mobile",
            "django_mobile.cache",
            "django_mobile.cache.middleware",
            "django_mobile.compat",
            "django_mobile.conf",
            "django_mobile.context_processors",
            "django_mobile.loader",
            "django_mobile.middleware",
            "django_mobile.models"
        ],
        "version": "0.7.0.dev1"
    },
    "calbum": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.12"
    },
    "calc": {
        "cmdline": [],
        "modules": [
            "calc"
        ],
        "version": "1.0"
    },
    "calcephpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "calcifer": {
        "cmdline": [],
        "modules": [
            "calcifer",
            "calcifer._version",
            "calcifer.asts",
            "calcifer.contexts",
            "calcifer.contexts.base",
            "calcifer.contexts.context",
            "calcifer.contexts.policies",
            "calcifer.definitions",
            "calcifer.monads",
            "calcifer.operators",
            "calcifer.partial",
            "calcifer.policy",
            "calcifer.tree",
            "calcifer.utils",
            "calcifer.zipper"
        ],
        "version": "0.3.0"
    },
    "calcmass": {
        "cmdline": [],
        "modules": [
            "calcmass",
            "calcmass.mass",
            "calcmass.pt_data"
        ],
        "version": "1.5"
    },
    "calcore": {
        "cmdline": [],
        "modules": [
            "calcore",
            "calcore.cal",
            "calcore.events",
            "calcore.interfaces",
            "calcore.isoweek",
            "calcore.recurrent",
            "calcore.schema",
            "calcore.util"
        ],
        "version": "2.2.1"
    },
    "calcos": {
        "cmdline": [],
        "modules": [
            "calcos",
            "calcos.accum",
            "calcos.airglow",
            "calcos.average",
            "calcos.burst",
            "calcos.calcos",
            "calcos.calcosparam",
            "calcos.ccos",
            "calcos.concurrent",
            "calcos.cosutil",
            "calcos.dispersion",
            "calcos.extract",
            "calcos.findshift1",
            "calcos.fpavg",
            "calcos.getinfo",
            "calcos.orbit",
            "calcos.osmstep",
            "calcos.phot",
            "calcos.shiftfile",
            "calcos.splittag",
            "calcos.spwcs",
            "calcos.timeline",
            "calcos.timetag",
            "calcos.trace",
            "calcos.version",
            "calcos.wavecal",
            "calcos.x1d",
            "calcos.xd_search"
        ],
        "version": "3.0"
    },
    "calcpkg": {
        "cmdline": [],
        "modules": [
            "calcrepo",
            "calcrepo.calcpkg",
            "calcrepo.index",
            "calcrepo.info",
            "calcrepo.output",
            "calcrepo.repo",
            "calcrepo.repos",
            "calcrepo.repos.cemetech",
            "calcrepo.repos.omnimaga",
            "calcrepo.repos.ticalc",
            "calcrepo.util"
        ],
        "version": "2.0.1"
    },
    "calculadora": {
        "cmdline": [],
        "modules": [
            "calculadora",
            "calculadora.calculadora"
        ],
        "version": "0.1"
    },
    "calculadora-rustica": {
        "cmdline": [],
        "modules": [
            "calc_rustica",
            "calc_rustica.operacoes"
        ],
        "version": "1.0.6"
    },
    "calculadoratd": {
        "cmdline": [],
        "modules": [
            "calculadora",
            "calculadora.calculadora"
        ],
        "version": "0.1"
    },
    "calculadorauaqfif123": {
        "cmdline": [],
        "modules": [
            "CalculadoraUAQFIF123",
            "CalculadoraUAQFIF123.Calculator"
        ],
        "version": "0.1"
    },
    "calculate": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "calculate-lu": {
        "cmdline": [],
        "modules": [
            "calculate_lu",
            "calculate_lu.help"
        ],
        "version": "1.0.1"
    },
    "calculator": {
        "cmdline": [],
        "modules": [
            "Calculator"
        ],
        "version": "1.1.0"
    },
    "calculator1": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "calculon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "caldav": {
        "cmdline": [],
        "modules": [
            "caldav",
            "caldav.davclient",
            "caldav.elements",
            "caldav.elements.base",
            "caldav.elements.cdav",
            "caldav.elements.dav",
            "caldav.lib",
            "caldav.lib.error",
            "caldav.lib.namespace",
            "caldav.lib.python_utilities",
            "caldav.lib.url",
            "caldav.lib.vcal",
            "caldav.objects",
            "tests",
            "tests._test_absolute",
            "tests.conf",
            "tests.proxy",
            "tests.test_caldav"
        ],
        "version": "0.5.0"
    },
    "caldera": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "caldwell-dirtyfields": {
        "cmdline": [],
        "modules": [
            "dirtyfields",
            "dirtyfields.dirtyfields",
            "dirtyfields.models",
            "example_app",
            "example_app.manage",
            "example_app.settings",
            "example_app.testing_app",
            "example_app.testing_app.models",
            "example_app.testing_app.tests",
            "example_app.urls"
        ],
        "version": "0.5b1"
    },
    "caldwellpy": {
        "cmdline": [],
        "modules": [
            "pyutil",
            "pyutil.dateutil",
            "pyutil.django",
            "pyutil.django.contextmanagers",
            "pyutil.django.decorators",
            "pyutil.django.templatetags",
            "pyutil.django.templatetags.pyutil",
            "pyutil.django.test",
            "pyutil.enum",
            "pyutil.list",
            "pyutil.test"
        ],
        "version": "1.6.3"
    },
    "calendar": {
        "cmdline": [],
        "modules": [],
        "version": "1.11.4"
    },
    "calendar-hs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "calendarbot": {
        "cmdline": [],
        "modules": [
            "calendarBot",
            "calendarBot.calendarApi",
            "calendarBot.calendarBotSettings",
            "calendarBot.calendarTimer"
        ],
        "version": "0.1.2"
    },
    "calendary": {
        "cmdline": [],
        "modules": [
            "calendary",
            "calendary.calendary"
        ],
        "version": "0.3.13"
    },
    "calender-merger": {
        "cmdline": [],
        "modules": [
            "calender_merger",
            "calender_merger.app"
        ],
        "version": "0.0.4"
    },
    "calendra": {
        "cmdline": [],
        "modules": [
            "calendra",
            "calendra.africa",
            "calendra.america",
            "calendra.asia",
            "calendra.canada",
            "calendra.core",
            "calendra.europe",
            "calendra.europe.belgium",
            "calendra.europe.czech_republic",
            "calendra.europe.denmark",
            "calendra.europe.estonia",
            "calendra.europe.european_central_bank",
            "calendra.europe.finland",
            "calendra.europe.france",
            "calendra.europe.germany",
            "calendra.europe.greece",
            "calendra.europe.hungary",
            "calendra.europe.iceland",
            "calendra.europe.italy",
            "calendra.europe.luxembourg",
            "calendra.europe.netherlands",
            "calendra.europe.norway",
            "calendra.europe.poland",
            "calendra.europe.portugal",
            "calendra.europe.slovakia",
            "calendra.europe.slovenia",
            "calendra.europe.spain",
            "calendra.europe.sweden",
            "calendra.europe.switzerland",
            "calendra.europe.united_kingdom",
            "calendra.oceania",
            "calendra.tests",
            "calendra.tests.test_africa",
            "calendra.tests.test_america",
            "calendra.tests.test_asia",
            "calendra.tests.test_canada",
            "calendra.tests.test_core",
            "calendra.tests.test_europe",
            "calendra.tests.test_oceania",
            "calendra.tests.test_usa",
            "calendra.usa"
        ],
        "version": "1.8"
    },
    "calendrical": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "calexicon": {
        "cmdline": [],
        "modules": [
            "calexicon",
            "calexicon.calendars",
            "calexicon.calendars.base",
            "calexicon.calendars.historical",
            "calexicon.calendars.main",
            "calexicon.calendars.other",
            "calexicon.constants",
            "calexicon.dates",
            "calexicon.dates.base",
            "calexicon.dates.bce",
            "calexicon.dates.distant",
            "calexicon.dates.overflow",
            "calexicon.fn",
            "calexicon.fn.iso",
            "calexicon.fn.julian",
            "calexicon.internal",
            "calexicon.internal.exception",
            "calexicon.internal.general",
            "calexicon.internal.gregorian",
            "calexicon.internal.julian",
            "calexicon.internal.output"
        ],
        "version": "0.1"
    },
    "calflate": {
        "cmdline": [
            "calflate"
        ],
        "modules": [
            "calflate"
        ],
        "version": "0.4.1"
    },
    "cali": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "calib": {
        "cmdline": [],
        "modules": [
            "calib",
            "calib.manager",
            "calib.version"
        ],
        "version": "0.1.1"
    },
    "calibcant": {
        "cmdline": [
            "calibcant-analyze.py",
            "calibcant-calibrate.py",
            "calibcant-plot.py"
        ],
        "modules": [
            "calibcant",
            "calibcant.analyze",
            "calibcant.bump",
            "calibcant.bump_analyze",
            "calibcant.calibrate",
            "calibcant.config",
            "calibcant.temperature",
            "calibcant.temperature_analyze",
            "calibcant.util",
            "calibcant.vibration",
            "calibcant.vibration_analyze"
        ],
        "version": "0.9"
    },
    "calibrate": {
        "cmdline": [],
        "modules": [
            "calibrate"
        ],
        "version": "0.10.0"
    },
    "calibraxis": {
        "cmdline": [],
        "modules": [
            "calibraxis"
        ],
        "version": "0.2.0"
    },
    "calibtools": {
        "cmdline": [],
        "modules": [
            "calibtools",
            "calibtools.calib",
            "calibtools.tool",
            "calibtools.undistort",
            "calibtools.util"
        ],
        "version": "0.3.0"
    },
    "calico": {
        "cmdline": [],
        "modules": [
            "calico"
        ],
        "version": "1.0a2"
    },
    "calicompari": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "caliendo": {
        "cmdline": [],
        "modules": [
            "caliendo",
            "caliendo.call_descriptor",
            "caliendo.config",
            "caliendo.counter",
            "caliendo.db",
            "caliendo.db.flatfiles",
            "caliendo.expected_value",
            "caliendo.facade",
            "caliendo.hooks",
            "caliendo.logger",
            "caliendo.patch",
            "caliendo.pickling",
            "caliendo.prompt",
            "caliendo.util",
            "test",
            "test.all_tests",
            "test.api",
            "test.api.callback",
            "test.api.foobar",
            "test.api.foobarfoobaz",
            "test.api.foobarfoobiz",
            "test.api.foobaz",
            "test.api.foobiz",
            "test.api.myclass",
            "test.api.services",
            "test.api.services.bar",
            "test.api.services.baz",
            "test.api.services.biz",
            "test.api.services.foo",
            "test.caliendo_test",
            "test.expected_value",
            "test.foobar",
            "test.nested",
            "test.nested.bazbiz",
            "test.test_patch",
            "test.test_replay",
            "test.test_with_nose"
        ],
        "version": "2.1.10"
    },
    "califa": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "california": {
        "cmdline": [],
        "modules": [
            "california"
        ],
        "version": "0.1.0"
    },
    "caliope-iliada": {
        "cmdline": [],
        "modules": [
            "iliada",
            "iliada.CaliopeData",
            "iliada.CaliopeForms",
            "iliada.CaliopeStorage"
        ],
        "version": "0.1dev"
    },
    "caliope-odisea": {
        "cmdline": [],
        "modules": [
            "odisea",
            "odisea.CaliopeStorage",
            "odisea.StorageUtils",
            "test.TestCaliopeStorage"
        ],
        "version": "0.0.3"
    },
    "call": {
        "cmdline": [],
        "modules": [
            "call",
            "call.tests"
        ],
        "version": "0.1"
    },
    "call-seq": {
        "cmdline": [],
        "modules": [
            "call_seq",
            "call_seq.TextEdit",
            "call_seq.TextEdit.rich",
            "call_seq.browser",
            "call_seq.core",
            "call_seq.utils"
        ],
        "version": "0.0.2"
    },
    "call-seq-browser": {
        "cmdline": [],
        "modules": [
            "call_seq_browser",
            "call_seq_browser.TextEdit",
            "call_seq_browser.TextEdit.rich",
            "call_seq_browser.Widgets",
            "call_seq_browser.Widgets.InfoWidgetWrapper",
            "call_seq_browser.Widgets.JsonWidgetWrapper",
            "call_seq_browser.browser",
            "call_seq_browser.main"
        ],
        "version": "0.0.1"
    },
    "callable": {
        "cmdline": [],
        "modules": [
            "callable"
        ],
        "version": "0.1.1"
    },
    "callbacks": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "callbacktoreturnval": {
        "cmdline": [],
        "modules": [
            "callbackToReturnVal"
        ],
        "version": "0.1.2"
    },
    "callchain": {
        "cmdline": [],
        "modules": [
            "callchain",
            "callchain.active_auto",
            "callchain.active_auto.chain",
            "callchain.active_auto.chainlet",
            "callchain.active_auto.event",
            "callchain.active_auto.eventlet",
            "callchain.active_man",
            "callchain.active_man.chain",
            "callchain.active_man.chainlet",
            "callchain.active_man.event",
            "callchain.active_man.eventlet",
            "callchain.call",
            "callchain.chain",
            "callchain.config",
            "callchain.contrib",
            "callchain.contrib.keys",
            "callchain.contrib.logger",
            "callchain.core",
            "callchain.generic",
            "callchain.keys",
            "callchain.lazy_auto",
            "callchain.lazy_auto.chain",
            "callchain.lazy_auto.chainlet",
            "callchain.lazy_auto.event",
            "callchain.lazy_auto.eventlet",
            "callchain.lazy_man",
            "callchain.lazy_man.chain",
            "callchain.lazy_man.chainlet",
            "callchain.lazy_man.event",
            "callchain.lazy_man.eventlet",
            "callchain.managers",
            "callchain.patterns",
            "callchain.services",
            "callchain.services.apps",
            "callchain.services.event",
            "callchain.services.filter",
            "callchain.services.map",
            "callchain.services.order",
            "callchain.services.queue",
            "callchain.services.reduce",
            "callchain.settings",
            "callchain.support"
        ],
        "version": "0.2.6"
    },
    "calldecorators": {
        "cmdline": [],
        "modules": [
            "calldecorators",
            "calldecorators.decorators",
            "calldecorators.version"
        ],
        "version": "0.0.3"
    },
    "calldules": {
        "cmdline": [],
        "modules": [
            "calldules"
        ],
        "version": "1.0.1"
    },
    "callee": {
        "cmdline": [],
        "modules": [
            "callee",
            "callee._compat",
            "callee.attributes",
            "callee.base",
            "callee.collections",
            "callee.functions",
            "callee.general",
            "callee.numbers",
            "callee.objects",
            "callee.operators",
            "callee.strings",
            "callee.types"
        ],
        "version": "0.3"
    },
    "caller-module": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.26"
    },
    "callerframe": {
        "cmdline": [],
        "modules": [
            "callerframe"
        ],
        "version": "1.0.4"
    },
    "callerlib": {
        "cmdline": [],
        "modules": [
            "callerlib",
            "callerlib.base",
            "callerlib.conf",
            "callerlib.management"
        ],
        "version": "0.1.2"
    },
    "callfire-api-client-python": {
        "cmdline": [],
        "modules": [
            "callfire",
            "callfire.client"
        ],
        "version": "0.0.7"
    },
    "callhorizons": {
        "cmdline": [],
        "modules": [
            "callhorizons",
            "callhorizons.callhorizons"
        ],
        "version": "1.0.5"
    },
    "calligraphic-rulings": {
        "cmdline": [],
        "modules": [],
        "version": "0.2alpha"
    },
    "calliope": {
        "cmdline": [],
        "modules": [
            "calliope",
            "calliope._version",
            "calliope.analysis",
            "calliope.analysis_utils",
            "calliope.cli",
            "calliope.constraints",
            "calliope.constraints.base",
            "calliope.constraints.objective",
            "calliope.constraints.optional",
            "calliope.constraints.planning",
            "calliope.core",
            "calliope.examples",
            "calliope.exceptions",
            "calliope.lib",
            "calliope.lib.nx_pylab",
            "calliope.locations",
            "calliope.output",
            "calliope.parallel",
            "calliope.read",
            "calliope.sets",
            "calliope.test",
            "calliope.test.common",
            "calliope.test.test_analysis",
            "calliope.test.test_cli",
            "calliope.test.test_core",
            "calliope.test.test_io",
            "calliope.test.test_locations",
            "calliope.test.test_model_builtin",
            "calliope.test.test_model_conversion",
            "calliope.test.test_model_export",
            "calliope.test.test_model_negative_costs",
            "calliope.test.test_model_onesite",
            "calliope.test.test_model_onesite_sin",
            "calliope.test.test_model_onesite_subnodes",
            "calliope.test.test_model_op",
            "calliope.test.test_model_storage",
            "calliope.test.test_model_time",
            "calliope.test.test_model_transmission",
            "calliope.test.test_model_variable_resource",
            "calliope.test.test_model_variables_from_file",
            "calliope.test.test_time",
            "calliope.test.test_transmission",
            "calliope.test.test_utils",
            "calliope.time_clustering",
            "calliope.time_funcs",
            "calliope.time_masks",
            "calliope.transmission",
            "calliope.utils"
        ],
        "version": "0.5.0"
    },
    "callipy": {
        "cmdline": [],
        "modules": [
            "callipy"
        ],
        "version": "0.3"
    },
    "callisto": {
        "cmdline": [],
        "modules": [
            "callisto",
            "callisto.callisto"
        ],
        "version": "0.4"
    },
    "callisto-core": {
        "cmdline": [],
        "modules": [
            "delivery",
            "delivery.api",
            "delivery.forms",
            "delivery.hashers",
            "delivery.management",
            "delivery.management.commands",
            "delivery.management.commands.find_matches",
            "delivery.matching",
            "delivery.migrations",
            "delivery.migrations.0001_initial",
            "delivery.migrations.0002_add_encryption_fields_to_match_report",
            "delivery.migrations.0003_allow_deletion_of_identifier",
            "delivery.migrations.0004_encrypt_existing_matching_entries",
            "delivery.migrations.0005_delete_encrypted_fields_from_match_report",
            "delivery.migrations.0006_report_autosaved",
            "delivery.migrations.0007_add_argon2_with_rolling_upgrades",
            "delivery.migrations.0008_make_salt_nullable",
            "delivery.migrations.0009_to_address_to_textfield",
            "delivery.migrations.0010_email_notification_data_migration",
            "delivery.models",
            "delivery.report_delivery",
            "delivery.views",
            "delivery.wizard",
            "evaluation",
            "evaluation.admin",
            "evaluation.management",
            "evaluation.management.commands",
            "evaluation.management.commands.decrypt_eval_data",
            "evaluation.migrations",
            "evaluation.migrations.0001_initial",
            "evaluation.migrations.0002_add_match_found",
            "evaluation.migrations.0003_add_delete",
            "evaluation.migrations.0004_auto_add_autosave",
            "evaluation.models",
            "notification",
            "notification.admin",
            "notification.api",
            "notification.managers",
            "notification.migrations",
            "notification.migrations.0001_initial_create_email_notification",
            "notification.migrations.0002_emailnotification_sites",
            "notification.migrations.0003_tempemailnotification",
            "notification.migrations.0004_delete_old_email_notification",
            "notification.migrations.0005_rename_to_emailnotification",
            "notification.models",
            "notification.validators"
        ],
        "version": "0.5.2"
    },
    "calllib": {
        "cmdline": [],
        "modules": [
            "calllib"
        ],
        "version": "1.8"
    },
    "callme": {
        "cmdline": [],
        "modules": [
            "callme",
            "callme.base",
            "callme.exceptions",
            "callme.protocol",
            "callme.proxy",
            "callme.server",
            "callme.test"
        ],
        "version": "0.2.0"
    },
    "calloway": {
        "cmdline": [
            "check_for_updates",
            "generate_reqs"
        ],
        "modules": [
            "calloway",
            "calloway.default_settings",
            "calloway.menu",
            "calloway.settings",
            "calloway.urls",
            "djangoonethree",
            "djangoonethree.manage",
            "djangoonethree.settings",
            "djangoonethree.urls",
            "exampleproject",
            "exampleproject.manage",
            "exampleproject.menu",
            "exampleproject.settings",
            "exampleproject.urls"
        ],
        "version": "0.4.2"
    },
    "callqueue": {
        "cmdline": [],
        "modules": [
            "queueable",
            "queueable.queueable"
        ],
        "version": "0.1.0"
    },
    "callr": {
        "cmdline": [],
        "modules": [
            "callr",
            "callr.callr"
        ],
        "version": "2.1.0"
    },
    "calltestpy": {
        "cmdline": [],
        "modules": [
            "Collections",
            "Collections.Dictionary"
        ],
        "version": "0.0.0"
    },
    "calltrace": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.4"
    },
    "calltree": {
        "cmdline": [],
        "modules": [
            "calltree",
            "calltree.calltree"
        ],
        "version": "0.26"
    },
    "callwith": {
        "cmdline": [],
        "modules": [
            "callwith"
        ],
        "version": "0.2.0"
    },
    "callysto": {
        "cmdline": [
            "callysto-install-kernel"
        ],
        "modules": [
            "callysto",
            "callysto.kernel",
            "callysto.magics",
            "callysto.renderers",
            "callysto.renderers.base",
            "callysto.renderers.core",
            "callysto.renderers.cytoscapejs",
            "callysto.renderers.graphviz",
            "callysto.renderers.vega",
            "callysto.renderers.visjs",
            "callysto.utils"
        ],
        "version": "0.2.3"
    },
    "calm": {
        "cmdline": [],
        "modules": [
            "calm",
            "calm.codec",
            "calm.core",
            "calm.ex",
            "calm.service",
            "calm.testing"
        ],
        "version": "0.1.4"
    },
    "calmap": {
        "cmdline": [],
        "modules": [
            "calmap"
        ],
        "version": "0.0.6"
    },
    "calmjs": {
        "cmdline": [],
        "modules": [
            "calmjs",
            "calmjs.argparse",
            "calmjs.base",
            "calmjs.calmjs",
            "calmjs.cli",
            "calmjs.command",
            "calmjs.dist",
            "calmjs.exc",
            "calmjs.indexer",
            "calmjs.module",
            "calmjs.npm",
            "calmjs.registry",
            "calmjs.runtime",
            "calmjs.testing",
            "calmjs.testing.mocks",
            "calmjs.testing.module1",
            "calmjs.testing.module2",
            "calmjs.testing.module3",
            "calmjs.testing.module3.module",
            "calmjs.testing.module3.runtime",
            "calmjs.testing.spec",
            "calmjs.testing.utils",
            "calmjs.tests",
            "calmjs.tests.test_argparse",
            "calmjs.tests.test_base",
            "calmjs.tests.test_cli",
            "calmjs.tests.test_command",
            "calmjs.tests.test_dist",
            "calmjs.tests.test_indexer",
            "calmjs.tests.test_module",
            "calmjs.tests.test_npm",
            "calmjs.tests.test_registry",
            "calmjs.tests.test_runtime",
            "calmjs.tests.test_testing",
            "calmjs.tests.test_toolchain",
            "calmjs.tests.test_ui",
            "calmjs.tests.test_utils",
            "calmjs.tests.test_vlqsm",
            "calmjs.toolchain",
            "calmjs.ui",
            "calmjs.utils",
            "calmjs.vlqsm"
        ],
        "version": "2.1.0"
    },
    "calmjs.bower": {
        "cmdline": [],
        "modules": [
            "calmjs",
            "calmjs.bower",
            "calmjs.bower.tests",
            "calmjs.bower.tests.test_bower",
            "calmjs.bower.tests.test_dist",
            "calmjs.bower.tests.test_runtime"
        ],
        "version": "1.0.2"
    },
    "calmjs.dev": {
        "cmdline": [],
        "modules": [
            "calmjs",
            "calmjs.dev",
            "calmjs.dev.cli",
            "calmjs.dev.dist",
            "calmjs.dev.karma",
            "calmjs.dev.runtime",
            "calmjs.dev.tests",
            "calmjs.dev.tests.test_cli",
            "calmjs.dev.tests.test_dist",
            "calmjs.dev.tests.test_karma",
            "calmjs.dev.tests.test_runtime",
            "calmjs.dev.tests.test_utils",
            "calmjs.dev.toolchain",
            "calmjs.dev.utils"
        ],
        "version": "1.0.2"
    },
    "calmjs.rjs": {
        "cmdline": [],
        "modules": [
            "calmjs",
            "calmjs.rjs",
            "calmjs.rjs.cli",
            "calmjs.rjs.dev",
            "calmjs.rjs.dist",
            "calmjs.rjs.ecma",
            "calmjs.rjs.exc",
            "calmjs.rjs.plugin",
            "calmjs.rjs.registry",
            "calmjs.rjs.requirejs",
            "calmjs.rjs.runtime",
            "calmjs.rjs.testing",
            "calmjs.rjs.tests",
            "calmjs.rjs.tests.test_cli",
            "calmjs.rjs.tests.test_dev",
            "calmjs.rjs.tests.test_dist",
            "calmjs.rjs.tests.test_ecma",
            "calmjs.rjs.tests.test_integration",
            "calmjs.rjs.tests.test_plugin",
            "calmjs.rjs.tests.test_registry",
            "calmjs.rjs.tests.test_requirejs",
            "calmjs.rjs.tests.test_toolchain",
            "calmjs.rjs.tests.test_utils",
            "calmjs.rjs.toolchain",
            "calmjs.rjs.umdjs",
            "calmjs.rjs.utils"
        ],
        "version": "1.0.1"
    },
    "calplus": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1.dev421"
    },
    "calpype": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "calresa": {
        "cmdline": [],
        "modules": [
            "calresa",
            "calresa.calendar",
            "calresa.roomstate",
            "calresa.state",
            "calresa.views"
        ],
        "version": "0.1"
    },
    "caltads": {
        "cmdline": [],
        "modules": [
            "lib",
            "lib.myshelve"
        ],
        "version": "0.1.0-dev3"
    },
    "caltrain": {
        "cmdline": [],
        "modules": [
            "caltrain"
        ],
        "version": "0.6"
    },
    "calve-machine": {
        "cmdline": [],
        "modules": [
            "calve_machine",
            "calve_machine.calve_machine"
        ],
        "version": "0.1.0"
    },
    "calver": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "calvin-hobbes-get": {
        "cmdline": [],
        "modules": [
            "calvinhobbes_get"
        ],
        "version": "0.0.1"
    },
    "calysto": {
        "cmdline": [],
        "modules": [
            "calysto",
            "calysto.ai",
            "calysto.ai.Numeric",
            "calysto.ai.conx",
            "calysto.chart",
            "calysto.chart.googlechart",
            "calysto.display",
            "calysto.graphics",
            "calysto.simulation",
            "calysto.simulations",
            "calysto.simulations.Bug1",
            "calysto.simulations.Ladybug1",
            "calysto.util",
            "calysto.util.code2notebook",
            "calysto.util.ottobib",
            "calysto.util.password",
            "calysto.widget",
            "calysto.widget.camera",
            "calysto.zgraphics"
        ],
        "version": "1.0.2"
    },
    "calysto-bash": {
        "cmdline": [],
        "modules": [
            "calysto_bash",
            "calysto_bash.install",
            "calysto_bash.kernel"
        ],
        "version": "0.1.1"
    },
    "calysto-chatbot": {
        "cmdline": [],
        "modules": [
            "calysto_chatbot",
            "calysto_chatbot.kernel"
        ],
        "version": "0.9.0"
    },
    "calysto-lc3": {
        "cmdline": [],
        "modules": [
            "calysto_lc3",
            "calysto_lc3.install",
            "calysto_lc3.kernel",
            "calysto_lc3.lc3"
        ],
        "version": "0.5"
    },
    "calysto-processing": {
        "cmdline": [],
        "modules": [
            "calysto_processing",
            "calysto_processing.kernel"
        ],
        "version": "2.0.3"
    },
    "calysto-prolog": {
        "cmdline": [],
        "modules": [
            "calysto_prolog",
            "calysto_prolog.kernel",
            "calysto_prolog.prolog"
        ],
        "version": "0.8.3"
    },
    "calysto-scheme": {
        "cmdline": [],
        "modules": [
            "calysto_scheme",
            "calysto_scheme.kernel",
            "calysto_scheme.scheme"
        ],
        "version": "1.2.0"
    },
    "calyx": {
        "cmdline": [
            "calyx"
        ],
        "modules": [
            "calyx"
        ],
        "version": "1.0"
    },
    "camazotz": {
        "cmdline": [],
        "modules": [
            "camazotz"
        ],
        "version": "2017.3.20.1950"
    },
    "camb": {
        "cmdline": [],
        "modules": [
            "camb",
            "camb.baseconfig",
            "camb.bbn",
            "camb.bispectrum",
            "camb.camb",
            "camb.constants",
            "camb.correlations",
            "camb.initialpower",
            "camb.lensing",
            "camb.model",
            "camb.nonlinear",
            "camb.recombination",
            "camb.reionization",
            "camb.tester",
            "camb_tests",
            "camb_tests.camb_test"
        ],
        "version": "0.1.4"
    },
    "cambiatuscromos": {
        "cmdline": [],
        "modules": [
            "cambiatuscromos",
            "cambiatuscromos.cromos"
        ],
        "version": "0.1.1alpha"
    },
    "cambiosnodeseados": {
        "cmdline": [
            "Cliente",
            "Servidor"
        ],
        "modules": [
            "Cambios",
            "Cambios.Habilidades",
            "Cambios.Habilidades.Da\u00f1ar",
            "Cambios.Habilidades.Lastimar",
            "Cambios.cartas",
            "Cambios.cliente",
            "Cambios.generador",
            "Cambios.ia",
            "Cambios.interfaz",
            "Cambios.juego",
            "Cambios.main",
            "Cambios.reglas",
            "Cambios.servidor"
        ],
        "version": "0.0.1.dev3"
    },
    "cambodia": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cambot": {
        "cmdline": [],
        "modules": [
            "cambot",
            "cambot.cmd",
            "cambot.constants",
            "cambot.plugin"
        ],
        "version": "1.0.0"
    },
    "camcrypt": {
        "cmdline": [],
        "modules": [
            "camcrypt"
        ],
        "version": "1.2.0"
    },
    "camdict": {
        "cmdline": [],
        "modules": [
            "camdict",
            "camdict.api",
            "camdict.exceptions",
            "camdict.tests",
            "camdict.util"
        ],
        "version": "0.1.0"
    },
    "camel": {
        "cmdline": [],
        "modules": [
            "camel",
            "camel.tests",
            "camel.tests.test_docs",
            "camel.tests.test_general"
        ],
        "version": "0.1.1"
    },
    "camel-case": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "camel-ipsum": {
        "cmdline": [
            "camelipsum.py"
        ],
        "modules": [],
        "version": "1.0"
    },
    "camel-snake-kebab": {
        "cmdline": [],
        "modules": [
            "camel_snake_kebab",
            "camel_snake_kebab.__init___test",
            "camel_snake_kebab.extras",
            "camel_snake_kebab.extras_test",
            "camel_snake_kebab.internals",
            "camel_snake_kebab.internals.decorator",
            "camel_snake_kebab.internals.misc",
            "camel_snake_kebab.internals.string_compat",
            "camel_snake_kebab.internals.string_separator",
            "camel_snake_kebab.internals.string_separator_test"
        ],
        "version": "0.3.2"
    },
    "camelcase": {
        "cmdline": [],
        "modules": [
            "camelcase",
            "camelcase.main"
        ],
        "version": "0.2"
    },
    "camelipsum": {
        "cmdline": [
            "camelipsum.py"
        ],
        "modules": [],
        "version": "1.2"
    },
    "camelot": {
        "cmdline": [],
        "modules": [
            "camelot",
            "camelot.admin",
            "camelot.admin.action",
            "camelot.admin.action.application_action",
            "camelot.admin.action.base",
            "camelot.admin.action.document_action",
            "camelot.admin.action.form_action",
            "camelot.admin.action.list_action",
            "camelot.admin.application_admin",
            "camelot.admin.entity_admin",
            "camelot.admin.menu",
            "camelot.admin.not_editable_admin",
            "camelot.admin.object_admin",
            "camelot.admin.section",
            "camelot.admin.table",
            "camelot.admin.validator",
            "camelot.admin.validator.entity_validator",
            "camelot.admin.validator.object_validator",
            "camelot.art",
            "camelot.art.resources",
            "camelot.bin",
            "camelot.bin.camelot_admin",
            "camelot.bin.meta",
            "camelot.container",
            "camelot.container.chartcontainer",
            "camelot.core",
            "camelot.core.auto_reload",
            "camelot.core.backup",
            "camelot.core.conf",
            "camelot.core.constants",
            "camelot.core.dbprofiles",
            "camelot.core.document",
            "camelot.core.exception",
            "camelot.core.files",
            "camelot.core.files.storage",
            "camelot.core.license",
            "camelot.core.memento",
            "camelot.core.orm",
            "camelot.core.orm.entity",
            "camelot.core.orm.fields",
            "camelot.core.orm.options",
            "camelot.core.orm.properties",
            "camelot.core.orm.relationships",
            "camelot.core.orm.statements",
            "camelot.core.resources",
            "camelot.core.sql",
            "camelot.core.templates",
            "camelot.core.threaded_logging",
            "camelot.core.threading",
            "camelot.core.utils",
            "camelot.model",
            "camelot.model.authentication",
            "camelot.model.batch_job",
            "camelot.model.fixture",
            "camelot.model.i18n",
            "camelot.model.memento",
            "camelot.model.party",
            "camelot.model.type_and_status",
            "camelot.test",
            "camelot.test.action",
            "camelot.test.http_proxy",
            "camelot.test.test_field_attributes",
            "camelot.test.test_proxy",
            "camelot.types",
            "camelot.view",
            "camelot.view.action",
            "camelot.view.action_runner",
            "camelot.view.action_steps",
            "camelot.view.action_steps.backup",
            "camelot.view.action_steps.change_object",
            "camelot.view.action_steps.gui",
            "camelot.view.action_steps.item_view",
            "camelot.view.action_steps.open_file",
            "camelot.view.action_steps.orm",
            "camelot.view.action_steps.print_preview",
            "camelot.view.action_steps.select_file",
            "camelot.view.action_steps.select_object",
            "camelot.view.action_steps.text_edit",
            "camelot.view.action_steps.update_progress",
            "camelot.view.art",
            "camelot.view.controls",
            "camelot.view.controls.abstract_widget",
            "camelot.view.controls.action_widget",
            "camelot.view.controls.actionsbox",
            "camelot.view.controls.appscheme",
            "camelot.view.controls.busy_widget",
            "camelot.view.controls.calculator",
            "camelot.view.controls.combobox_input_dialog",
            "camelot.view.controls.decorated_line_edit",
            "camelot.view.controls.delegates",
            "camelot.view.controls.delegates.booldelegate",
            "camelot.view.controls.delegates.chartdelegate",
            "camelot.view.controls.delegates.codedelegate",
            "camelot.view.controls.delegates.colordelegate",
            "camelot.view.controls.delegates.coloredfloatdelegate",
            "camelot.view.controls.delegates.comboboxdelegate",
            "camelot.view.controls.delegates.currencydelegate",
            "camelot.view.controls.delegates.customdelegate",
            "camelot.view.controls.delegates.datedelegate",
            "camelot.view.controls.delegates.datetimedelegate",
            "camelot.view.controls.delegates.delegatemanager",
            "camelot.view.controls.delegates.filedelegate",
            "camelot.view.controls.delegates.floatdelegate",
            "camelot.view.controls.delegates.imagedelegate",
            "camelot.view.controls.delegates.integerdelegate",
            "camelot.view.controls.delegates.intervalsdelegate",
            "camelot.view.controls.delegates.labeldelegate",
            "camelot.view.controls.delegates.languagedelegate",
            "camelot.view.controls.delegates.localfiledelegate",
            "camelot.view.controls.delegates.many2onedelegate",
            "camelot.view.controls.delegates.manytoonechoicesdelegate",
            "camelot.view.controls.delegates.monthsdelegate",
            "camelot.view.controls.delegates.notedelegate",
            "camelot.view.controls.delegates.one2manydelegate",
            "camelot.view.controls.delegates.plaintextdelegate",
            "camelot.view.controls.delegates.richtextdelegate",
            "camelot.view.controls.delegates.smileydelegate",
            "camelot.view.controls.delegates.stardelegate",
            "camelot.view.controls.delegates.texteditdelegate",
            "camelot.view.controls.delegates.timedelegate",
            "camelot.view.controls.delegates.virtualaddressdelegate",
            "camelot.view.controls.editors",
            "camelot.view.controls.editors.booleditor",
            "camelot.view.controls.editors.charteditor",
            "camelot.view.controls.editors.choiceseditor",
            "camelot.view.controls.editors.codeeditor",
            "camelot.view.controls.editors.coloredfloateditor",
            "camelot.view.controls.editors.coloreditor",
            "camelot.view.controls.editors.customeditor",
            "camelot.view.controls.editors.dateeditor",
            "camelot.view.controls.editors.datetimeeditor",
            "camelot.view.controls.editors.fileeditor",
            "camelot.view.controls.editors.floateditor",
            "camelot.view.controls.editors.imageeditor",
            "camelot.view.controls.editors.integereditor",
            "camelot.view.controls.editors.labeleditor",
            "camelot.view.controls.editors.languageeditor",
            "camelot.view.controls.editors.localfileeditor",
            "camelot.view.controls.editors.many2oneeditor",
            "camelot.view.controls.editors.monthseditor",
            "camelot.view.controls.editors.noteeditor",
            "camelot.view.controls.editors.one2manyeditor",
            "camelot.view.controls.editors.onetomanychoiceseditor",
            "camelot.view.controls.editors.richtexteditor",
            "camelot.view.controls.editors.smileyeditor",
            "camelot.view.controls.editors.stareditor",
            "camelot.view.controls.editors.textediteditor",
            "camelot.view.controls.editors.textlineeditor",
            "camelot.view.controls.editors.timeeditor",
            "camelot.view.controls.editors.virtualaddresseditor",
            "camelot.view.controls.editors.wideeditor",
            "camelot.view.controls.exception",
            "camelot.view.controls.field_label",
            "camelot.view.controls.filter_operator",
            "camelot.view.controls.filterlist",
            "camelot.view.controls.formview",
            "camelot.view.controls.inheritance",
            "camelot.view.controls.liteboxview",
            "camelot.view.controls.modeltree",
            "camelot.view.controls.navpane2",
            "camelot.view.controls.progress_dialog",
            "camelot.view.controls.search",
            "camelot.view.controls.standalone_wizard_page",
            "camelot.view.controls.tableview",
            "camelot.view.controls.user_translatable_label",
            "camelot.view.controls.view",
            "camelot.view.database_selection",
            "camelot.view.field_attributes",
            "camelot.view.fifo",
            "camelot.view.filters",
            "camelot.view.flowlayout",
            "camelot.view.forms",
            "camelot.view.import_utils",
            "camelot.view.main",
            "camelot.view.mainwindow",
            "camelot.view.model_thread",
            "camelot.view.model_thread.no_thread_model_thread",
            "camelot.view.model_thread.signal_slot_model_thread",
            "camelot.view.proxy",
            "camelot.view.proxy.collection_proxy",
            "camelot.view.proxy.queryproxy",
            "camelot.view.register",
            "camelot.view.remote_signals",
            "camelot.view.search",
            "camelot.view.storage",
            "camelot.view.templates",
            "camelot.view.utils",
            "camelot.view.workspace",
            "camelot_example",
            "camelot_example.application_admin",
            "camelot_example.change_rating",
            "camelot_example.drag_and_drop",
            "camelot_example.fixtures",
            "camelot_example.importer",
            "camelot_example.main",
            "camelot_example.mini_main",
            "camelot_example.model",
            "camelot_example.view",
            "test",
            "test.snippet",
            "test.snippet.background_color",
            "test.snippet.chart",
            "test.snippet.chart.advanced_plot",
            "test.snippet.chart.simple_plot",
            "test.snippet.entity_validator",
            "test.snippet.existing_database",
            "test.snippet.fields_with_actions",
            "test.snippet.fields_with_tooltips",
            "test.snippet.form",
            "test.snippet.form.custom_layout",
            "test.snippet.form.hidden_editor",
            "test.snippet.form.inherited_form",
            "test.snippet.form.nested_form",
            "test.snippet.form.simple_form",
            "test.snippet.i18n",
            "test.snippet.i18n.specify_lazy_translation_string",
            "test.snippet.i18n.specify_translation_string",
            "test.snippet.properties_as_fields",
            "test.test_action",
            "test.test_admin",
            "test.test_bin",
            "test.test_core",
            "test.test_i18n",
            "test.test_model",
            "test.test_orm",
            "test.test_orm.test_class_methods",
            "test.test_orm.test_dict",
            "test.test_orm.test_fields",
            "test.test_orm.test_m2m",
            "test.test_orm.test_m2o",
            "test.test_orm.test_o2m",
            "test.test_orm.test_o2o",
            "test.test_orm.test_order_by",
            "test.test_orm.test_properties",
            "test.test_orm.test_sa_integration",
            "test.test_proxy",
            "test.test_qt_bindings",
            "test.test_search",
            "test.test_source",
            "test.test_thread",
            "test.test_util",
            "test.test_view"
        ],
        "version": "13.04.13-gpl-pyqt"
    },
    "cameo": {
        "cmdline": [
            "cameo"
        ],
        "modules": [
            "cameo",
            "cameo._version",
            "cameo.api",
            "cameo.api.designer",
            "cameo.api.hosts",
            "cameo.api.products",
            "cameo.cli",
            "cameo.cli.controllers",
            "cameo.config",
            "cameo.core",
            "cameo.core.gene",
            "cameo.core.manipulation",
            "cameo.core.metabolite",
            "cameo.core.pathway",
            "cameo.core.reaction",
            "cameo.core.result",
            "cameo.core.solution",
            "cameo.core.solver_based_model",
            "cameo.core.solver_based_model_dual",
            "cameo.core.strain_design",
            "cameo.core.target",
            "cameo.data",
            "cameo.data.metanetx",
            "cameo.exceptions",
            "cameo.flux_analysis",
            "cameo.flux_analysis.analysis",
            "cameo.flux_analysis.simulation",
            "cameo.flux_analysis.structural",
            "cameo.flux_analysis.util",
            "cameo.io",
            "cameo.models",
            "cameo.models.universal",
            "cameo.models.webmodels",
            "cameo.network_analysis",
            "cameo.network_analysis.networkx_based",
            "cameo.network_analysis.util",
            "cameo.parallel",
            "cameo.strain_design",
            "cameo.strain_design.deterministic",
            "cameo.strain_design.deterministic.flux_variability_based",
            "cameo.strain_design.deterministic.linear_programming",
            "cameo.strain_design.heuristic",
            "cameo.strain_design.heuristic.evolutionary",
            "cameo.strain_design.heuristic.evolutionary.archives",
            "cameo.strain_design.heuristic.evolutionary.decoders",
            "cameo.strain_design.heuristic.evolutionary.evaluators",
            "cameo.strain_design.heuristic.evolutionary.generators",
            "cameo.strain_design.heuristic.evolutionary.genomes",
            "cameo.strain_design.heuristic.evolutionary.metrics",
            "cameo.strain_design.heuristic.evolutionary.multiprocess",
            "cameo.strain_design.heuristic.evolutionary.multiprocess.migrators",
            "cameo.strain_design.heuristic.evolutionary.multiprocess.observers",
            "cameo.strain_design.heuristic.evolutionary.multiprocess.optimization",
            "cameo.strain_design.heuristic.evolutionary.multiprocess.plotters",
            "cameo.strain_design.heuristic.evolutionary.objective_functions",
            "cameo.strain_design.heuristic.evolutionary.observers",
            "cameo.strain_design.heuristic.evolutionary.optimization",
            "cameo.strain_design.heuristic.evolutionary.plotters",
            "cameo.strain_design.heuristic.evolutionary.processing",
            "cameo.strain_design.heuristic.evolutionary.stats",
            "cameo.strain_design.heuristic.evolutionary.variators",
            "cameo.strain_design.heuristic.evolutionary_based",
            "cameo.strain_design.pathway_prediction",
            "cameo.strain_design.pathway_prediction.pathway_predictor",
            "cameo.strain_design.pathway_prediction.util",
            "cameo.stuff",
            "cameo.stuff.distance",
            "cameo.stuff.stuff",
            "cameo.ui",
            "cameo.util",
            "cameo.visualization",
            "cameo.visualization.escher_ext",
            "cameo.visualization.palette",
            "cameo.visualization.plotting",
            "cameo.visualization.plotting.abstract",
            "cameo.visualization.plotting.with_bokeh",
            "cameo.visualization.plotting.with_ggplot",
            "cameo.visualization.plotting.with_plotly",
            "cameo.visualization.plotting_old",
            "cameo.visualization.sympy_ext",
            "cameo.visualization.visualization",
            "tests",
            "tests.conftest",
            "tests.test_api",
            "tests.test_cobrapy_compatibility",
            "tests.test_core_strain_design",
            "tests.test_flux_analysis",
            "tests.test_io",
            "tests.test_network_analysis",
            "tests.test_parallel",
            "tests.test_pathway_predictions",
            "tests.test_solver_based_model",
            "tests.test_strain_design_deterministic",
            "tests.test_strain_design_heuristics",
            "tests.test_targets",
            "tests.test_util",
            "tests.test_webmodels"
        ],
        "version": "0.10.2"
    },
    "camera-calibration": {
        "cmdline": [],
        "modules": [
            "camera_calibration",
            "camera_calibration.cmd"
        ],
        "version": "0.2"
    },
    "cameralogger": {
        "cmdline": [
            "camerad.py",
            "test_effects.py",
            "timelapse.py",
            "timelapse2.py"
        ],
        "modules": [
            "cameralogger",
            "cameralogger.dummy",
            "cameralogger.ffmpeg",
            "cameralogger.formatters",
            "cameralogger.pi",
            "cameralogger.utils",
            "cameralogger.zwo"
        ],
        "version": "0.2.0"
    },
    "cameria": {
        "cmdline": [],
        "modules": [
            "cameria",
            "cameria.main",
            "cameria.models",
            "cameria.models.account",
            "cameria.models.base",
            "cameria.models.camera",
            "cameria.models.device",
            "cameria.models.set",
            "cameria.models.spec",
            "cameria.views",
            "cameria.views.api",
            "cameria.views.api.base",
            "cameria.views.api.camera",
            "cameria.views.api.device",
            "cameria.views.api.set",
            "cameria.views.web",
            "cameria.views.web.account",
            "cameria.views.web.base",
            "cameria.views.web.camera",
            "cameria.views.web.device",
            "cameria.views.web.set",
            "cameria.views.web.settings"
        ],
        "version": "0.1.0"
    },
    "camination": {
        "cmdline": [
            "camination"
        ],
        "modules": [
            "caminationapp",
            "caminationapp.core",
            "caminationapp.delta-timelapse",
            "caminationapp.simple-timelapse"
        ],
        "version": "0.1.1"
    },
    "camip": {
        "cmdline": [],
        "modules": [
            "camip",
            "camip.camip",
            "camip.place",
            "camip.table_layouts",
            "camip.timing"
        ],
        "version": "0.12.post9"
    },
    "camisole": {
        "cmdline": [],
        "modules": [
            "camisole",
            "camisole.http",
            "camisole.isolate",
            "camisole.languages",
            "camisole.languages.ada",
            "camisole.languages.brainfuck",
            "camisole.languages.c",
            "camisole.languages.csharp",
            "camisole.languages.cxx",
            "camisole.languages.fsharp",
            "camisole.languages.haskell",
            "camisole.languages.java",
            "camisole.languages.javascript",
            "camisole.languages.lua",
            "camisole.languages.ocaml",
            "camisole.languages.pascal",
            "camisole.languages.perl",
            "camisole.languages.php",
            "camisole.languages.python",
            "camisole.languages.ruby",
            "camisole.languages.rust",
            "camisole.languages.scheme",
            "camisole.languages.visualbasic",
            "camisole.loader",
            "camisole.models",
            "camisole.ref",
            "camisole.schema",
            "camisole.system",
            "camisole.utils"
        ],
        "version": "0.5"
    },
    "camkes-cli": {
        "cmdline": [],
        "modules": [
            "camkes_cli",
            "camkes_cli.build",
            "camkes_cli.clean",
            "camkes_cli.cli",
            "camkes_cli.common",
            "camkes_cli.component",
            "camkes_cli.config",
            "camkes_cli.defaults",
            "camkes_cli.info",
            "camkes_cli.init",
            "camkes_cli.menuconfig",
            "camkes_cli.new",
            "camkes_cli.procedure",
            "camkes_cli.run",
            "camkes_cli.update"
        ],
        "version": "0.2.0"
    },
    "camlipy": {
        "cmdline": [],
        "modules": [
            "camlipy",
            "camlipy.cli",
            "camlipy.directory",
            "camlipy.filereader",
            "camlipy.filewriter",
            "camlipy.rollsum",
            "camlipy.schema",
            "camlipy.search",
            "camlipy.tests",
            "camlipy.tests.test_camlipy",
            "camlipy.tests.test_camput_and_camget_compatibility",
            "camlipy.tests.test_dir",
            "camlipy.tests.test_filewriter",
            "camlipy.tests.test_rollsum",
            "camlipy.tests.test_schema"
        ],
        "version": "0.1.1"
    },
    "camlistore": {
        "cmdline": [],
        "modules": [
            "camlistore",
            "camlistore.blobclient",
            "camlistore.connection",
            "camlistore.exceptions",
            "camlistore.searchclient"
        ],
        "version": "0.0.1"
    },
    "camlistore-client": {
        "cmdline": [],
        "modules": [
            "camli",
            "camli.op",
            "camli.schema",
            "camli.schema_test"
        ],
        "version": "1.0.3dev"
    },
    "camltex": {
        "cmdline": [],
        "modules": [
            "camltex",
            "camltex.command_line",
            "camltex.ocaml_eval",
            "camltex.ocaml_writer",
            "tests"
        ],
        "version": "0.1.2"
    },
    "camo-client": {
        "cmdline": [],
        "modules": [
            "camo"
        ],
        "version": "0.1.0"
    },
    "camo-sign": {
        "cmdline": [],
        "modules": [
            "camo_sign"
        ],
        "version": "0.1.1"
    },
    "camoco": {
        "cmdline": [
            "BootstrapLocality.py",
            "CamocoWeb.py"
        ],
        "modules": [
            "camoco",
            "camoco.Annotation",
            "camoco.COB",
            "camoco.Camoco",
            "camoco.Chrom",
            "camoco.Config",
            "camoco.Expr",
            "camoco.GEO",
            "camoco.Genome",
            "camoco.HapMap",
            "camoco.Locus",
            "camoco.Ontology",
            "camoco.RefGen",
            "camoco.Tools"
        ],
        "version": "0.1.8"
    },
    "camocomp": {
        "cmdline": [
            "camocomp_video"
        ],
        "modules": [
            "camocomp",
            "camocomp.control_points",
            "camocomp.extract_valid_track",
            "camocomp.motion_compensate"
        ],
        "version": "0.1"
    },
    "camomile": {
        "cmdline": [],
        "modules": [
            "camomile",
            "camomile._version",
            "camomile.client"
        ],
        "version": "0.9.2"
    },
    "camote-queue": {
        "cmdline": [],
        "modules": [
            "camote",
            "camote.queues",
            "camote.utils"
        ],
        "version": "0.1.16"
    },
    "camp": {
        "cmdline": [],
        "modules": [
            "camp"
        ],
        "version": "0.1.0"
    },
    "campagne": {
        "cmdline": [
            "campagne"
        ],
        "modules": [
            "campagne",
            "campagne.begint",
            "campagne.defines",
            "campagne.descr",
            "campagne.eindigt",
            "campagne.info",
            "campagne.omdat",
            "campagne.stats",
            "campagne.wisdom",
            "campagne.wvggz",
            "campagne.zorg"
        ],
        "version": "24"
    },
    "campaign-monitor-api": {
        "cmdline": [],
        "modules": [
            "campaign_monitor_api",
            "campaign_monitor_api.campaign_monitor_api",
            "campaign_monitor_api.campaign_monitor_api_tests",
            "campaign_monitor_api.runtests"
        ],
        "version": "2.1"
    },
    "campari": {
        "cmdline": [
            "campari"
        ],
        "modules": [
            "campari",
            "version"
        ],
        "version": "0.1.1"
    },
    "campasscrawler": {
        "cmdline": [],
        "modules": [
            "CampassCrawler"
        ],
        "version": "1.3"
    },
    "campbellsciparser": {
        "cmdline": [],
        "modules": [
            "campbellsciparser",
            "campbellsciparser.cr",
            "campbellsciparser.dataset",
            "campbellsciparser.devices",
            "campbellsciparser.devices.base",
            "campbellsciparser.devices.common",
            "campbellsciparser.devices.cr10",
            "campbellsciparser.devices.cr1000",
            "campbellsciparser.devices.cr10x"
        ],
        "version": "0.38b0"
    },
    "campbx": {
        "cmdline": [],
        "modules": [
            "campbx",
            "campbx.campbx"
        ],
        "version": "1.0.5"
    },
    "campfire": {
        "cmdline": [],
        "modules": [
            "campfire"
        ],
        "version": "0.1"
    },
    "campfire-notifier": {
        "cmdline": [],
        "modules": [
            "campfire_notifier",
            "campfire_notifier.config",
            "campfire_notifier.libs",
            "campfire_notifier.notifier",
            "campfire_notifier.static"
        ],
        "version": "0.2.2"
    },
    "camplight": {
        "cmdline": [],
        "modules": [
            "camplight",
            "camplight.api",
            "camplight.cli",
            "camplight.exceptions",
            "test",
            "test.test_campfire",
            "test.test_room"
        ],
        "version": "0.9.6"
    },
    "campos": {
        "cmdline": [],
        "modules": [
            "campos",
            "campos.core",
            "campos.enums",
            "campos.fields",
            "campos.forms",
            "campos.sources",
            "campos.sources.object",
            "campos.sources.sqlalchemy",
            "campos.utils",
            "campos.validators"
        ],
        "version": "1.0.1"
    },
    "camprot": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.13"
    },
    "camsa": {
        "cmdline": [
            "agouti2camsa_points.py",
            "agp2camsa_points.py",
            "camsa_points2fasta.py",
            "fasta2camsa_points.py",
            "fasta2camsa_seqi.py",
            "grimm2camsa_points.py",
            "ragout_coords2camsa_points.py",
            "ragout_coords2camsa_seqi.py",
            "ragout_coords2fasta.py",
            "ragout_coords_coverage.py",
            "run_camsa.py"
        ],
        "modules": [
            "camsa",
            "camsa.core",
            "camsa.core.comparative_analysis",
            "camsa.core.data_structures",
            "camsa.core.io",
            "camsa.core.merging",
            "camsa.core.reference_analysis",
            "camsa.run_camsa",
            "camsa.utils",
            "camsa.utils.agouti",
            "camsa.utils.agouti.agouti2camsa_points",
            "camsa.utils.agp",
            "camsa.utils.agp.agp2camsa_points",
            "camsa.utils.camsa",
            "camsa.utils.camsa.camsaPrepareInput",
            "camsa.utils.fasta",
            "camsa.utils.fasta.algo",
            "camsa.utils.fasta.camsa_points2fasta",
            "camsa.utils.fasta.data_structures",
            "camsa.utils.fasta.fasta2camsa_points",
            "camsa.utils.fasta.fasta2camsa_seqi",
            "camsa.utils.grimm",
            "camsa.utils.grimm.grimm2camsa_points",
            "camsa.utils.ragout",
            "camsa.utils.ragout.data_structures",
            "camsa.utils.ragout.io",
            "camsa.utils.ragout.ragout_coords2camsa_points",
            "camsa.utils.ragout.ragout_coords2camsa_seqi",
            "camsa.utils.ragout.ragout_coords2fasta",
            "camsa.utils.ragout.ragout_coords_coverage",
            "camsa.utils.ragout.shared",
            "camsa.utils.shared"
        ],
        "version": "1.1.0b13"
    },
    "camtones": {
        "cmdline": [
            "camtones"
        ],
        "modules": [
            "camtones",
            "camtones.ocv",
            "camtones.ocv.api",
            "camtones.ocv.background_subtractors",
            "camtones.ocv.cameras",
            "camtones.ocv.contours",
            "camtones.ocv.exceptions",
            "camtones.ocv.face_extractors",
            "camtones.ocv.frames",
            "camtones.ocv.video_writers",
            "camtones.ocv.windows",
            "camtones.procs",
            "camtones.procs.face",
            "camtones.procs.motion"
        ],
        "version": "0.0.2"
    },
    "camxes": {
        "cmdline": [],
        "modules": [
            "camxes",
            "camxes.tests"
        ],
        "version": "0.2"
    },
    "can": {
        "cmdline": [],
        "modules": [
            "libcan",
            "libcan.actions",
            "libcan.binary",
            "libcan.differ",
            "libcan.file",
            "libcan.filesystem",
            "libcan.filter",
            "libcan.matcher",
            "libcan.snapshot"
        ],
        "version": "2.0"
    },
    "can4python": {
        "cmdline": [],
        "modules": [
            "can4python",
            "can4python.canbus",
            "can4python.canframe",
            "can4python.canframe_definition",
            "can4python.caninterface_bcm",
            "can4python.caninterface_raw",
            "can4python.cansignal",
            "can4python.configuration",
            "can4python.constants",
            "can4python.exceptions",
            "can4python.filehandler_kcd",
            "can4python.utilities",
            "can4python.version"
        ],
        "version": "0.2.1"
    },
    "cana": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "canada": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "canal": {
        "cmdline": [],
        "modules": [
            "canal"
        ],
        "version": "0.1"
    },
    "canalplus": {
        "cmdline": [],
        "modules": [
            "canalplus",
            "canalplus.colored_logging",
            "canalplus.mkstemp_ctx",
            "canalplus.progress_display",
            "tests"
        ],
        "version": "1.0.9"
    },
    "canalweb": {
        "cmdline": [],
        "modules": [
            "canalweb",
            "canalweb.cli",
            "canalweb.flvread",
            "canalweb.test_vod",
            "canalweb.test_xspf",
            "canalweb.vod",
            "canalweb.xspf"
        ],
        "version": "0.5"
    },
    "canard": {
        "cmdline": [],
        "modules": [
            "canard",
            "canard.bus",
            "canard.can",
            "canard.hw",
            "canard.hw.cantact",
            "canard.hw.logplayer",
            "canard.hw.loopback",
            "canard.hw.peak",
            "canard.hw.socketcan",
            "canard.log",
            "canard.proto",
            "canard.proto.isotp",
            "canard.proto.obdii",
            "canard.proto.uds",
            "canard.test",
            "canard.test.can_test",
            "canard.utils",
            "canard.utils.queue"
        ],
        "version": "0.2.2"
    },
    "canari": {
        "cmdline": [
            "canari",
            "dispatcher",
            "pysudo"
        ],
        "modules": [
            "canari",
            "canari.commands",
            "canari.commands.banner",
            "canari.commands.common",
            "canari.commands.create_package",
            "canari.commands.create_profile",
            "canari.commands.create_transform",
            "canari.commands.csv2sheets",
            "canari.commands.debug_transform",
            "canari.commands.framework",
            "canari.commands.generate_entities",
            "canari.commands.generate_entities_doc",
            "canari.commands.help",
            "canari.commands.install_plume",
            "canari.commands.list_commands",
            "canari.commands.list_transforms",
            "canari.commands.load_plume_package",
            "canari.commands.mtgx2csv",
            "canari.commands.run_transform",
            "canari.commands.shell",
            "canari.commands.unload_plume_package",
            "canari.commands.version",
            "canari.config",
            "canari.easygui",
            "canari.framework",
            "canari.maltego",
            "canari.maltego.configuration",
            "canari.maltego.entities",
            "canari.maltego.message",
            "canari.maltego.runner",
            "canari.maltego.transform",
            "canari.maltego.utils",
            "canari.maltego.xml",
            "canari.mode",
            "canari.pkgutils",
            "canari.pkgutils.maltego",
            "canari.pkgutils.transform",
            "canari.project",
            "canari.question",
            "canari.resource",
            "canari.resources",
            "canari.resources.etc",
            "canari.resources.templates",
            "canari.tas",
            "canari.tas.plume",
            "canari.unittests",
            "canari.unittests.maltego",
            "canari.unittests.maltego.test_entities",
            "canari.unittests.maltego.test_transform",
            "canari.unittests.resources",
            "canari.unittests.resources.images",
            "canari.unittests.test_config",
            "canari.unittests.test_framework",
            "canari.unittests.test_mode",
            "canari.unittests.test_resource",
            "canari.utils",
            "canari.utils.fs",
            "canari.utils.stack",
            "canari.utils.wordlist"
        ],
        "version": "3.0"
    },
    "canary": {
        "cmdline": [],
        "modules": [
            "canary",
            "canary.format",
            "canary.handler",
            "canary.middleware",
            "canary.tests",
            "canary.tests.test_logging",
            "canary.tests.test_middleware",
            "canary.tests.test_util",
            "canary.util"
        ],
        "version": "0.1.4"
    },
    "canary-python-novaclient-ext": {
        "cmdline": [],
        "modules": [
            "canary_python_novaclient_ext"
        ],
        "version": "1.0.106"
    },
    "canaryd": {
        "cmdline": [
            "canaryctl",
            "canaryd"
        ],
        "modules": [
            "canaryd",
            "canaryd.ctl",
            "canaryd.ctl.check_root",
            "canaryd.ctl.install_service",
            "canaryd.daemon",
            "canaryd.diff",
            "canaryd.exceptions",
            "canaryd.log",
            "canaryd.packages",
            "canaryd.packages.check_output",
            "canaryd.packages.click",
            "canaryd.packages.click._bashcomplete",
            "canaryd.packages.click._compat",
            "canaryd.packages.click._termui_impl",
            "canaryd.packages.click._textwrap",
            "canaryd.packages.click._unicodefun",
            "canaryd.packages.click._winconsole",
            "canaryd.packages.click.core",
            "canaryd.packages.click.decorators",
            "canaryd.packages.click.exceptions",
            "canaryd.packages.click.formatting",
            "canaryd.packages.click.globals",
            "canaryd.packages.click.parser",
            "canaryd.packages.click.termui",
            "canaryd.packages.click.testing",
            "canaryd.packages.click.types",
            "canaryd.packages.click.utils",
            "canaryd.packages.dmidecode",
            "canaryd.packages.importlib",
            "canaryd.packages.requests",
            "canaryd.packages.requests.adapters",
            "canaryd.packages.requests.api",
            "canaryd.packages.requests.auth",
            "canaryd.packages.requests.certs",
            "canaryd.packages.requests.compat",
            "canaryd.packages.requests.cookies",
            "canaryd.packages.requests.exceptions",
            "canaryd.packages.requests.hooks",
            "canaryd.packages.requests.models",
            "canaryd.packages.requests.packages",
            "canaryd.packages.requests.packages.chardet",
            "canaryd.packages.requests.packages.chardet.big5freq",
            "canaryd.packages.requests.packages.chardet.big5prober",
            "canaryd.packages.requests.packages.chardet.chardetect",
            "canaryd.packages.requests.packages.chardet.chardistribution",
            "canaryd.packages.requests.packages.chardet.charsetgroupprober",
            "canaryd.packages.requests.packages.chardet.charsetprober",
            "canaryd.packages.requests.packages.chardet.codingstatemachine",
            "canaryd.packages.requests.packages.chardet.compat",
            "canaryd.packages.requests.packages.chardet.constants",
            "canaryd.packages.requests.packages.chardet.cp949prober",
            "canaryd.packages.requests.packages.chardet.escprober",
            "canaryd.packages.requests.packages.chardet.escsm",
            "canaryd.packages.requests.packages.chardet.eucjpprober",
            "canaryd.packages.requests.packages.chardet.euckrfreq",
            "canaryd.packages.requests.packages.chardet.euckrprober",
            "canaryd.packages.requests.packages.chardet.euctwfreq",
            "canaryd.packages.requests.packages.chardet.euctwprober",
            "canaryd.packages.requests.packages.chardet.gb2312freq",
            "canaryd.packages.requests.packages.chardet.gb2312prober",
            "canaryd.packages.requests.packages.chardet.hebrewprober",
            "canaryd.packages.requests.packages.chardet.jisfreq",
            "canaryd.packages.requests.packages.chardet.jpcntx",
            "canaryd.packages.requests.packages.chardet.langbulgarianmodel",
            "canaryd.packages.requests.packages.chardet.langcyrillicmodel",
            "canaryd.packages.requests.packages.chardet.langgreekmodel",
            "canaryd.packages.requests.packages.chardet.langhebrewmodel",
            "canaryd.packages.requests.packages.chardet.langhungarianmodel",
            "canaryd.packages.requests.packages.chardet.langthaimodel",
            "canaryd.packages.requests.packages.chardet.latin1prober",
            "canaryd.packages.requests.packages.chardet.mbcharsetprober",
            "canaryd.packages.requests.packages.chardet.mbcsgroupprober",
            "canaryd.packages.requests.packages.chardet.mbcssm",
            "canaryd.packages.requests.packages.chardet.sbcharsetprober",
            "canaryd.packages.requests.packages.chardet.sbcsgroupprober",
            "canaryd.packages.requests.packages.chardet.sjisprober",
            "canaryd.packages.requests.packages.chardet.universaldetector",
            "canaryd.packages.requests.packages.chardet.utf8prober",
            "canaryd.packages.requests.packages.urllib3",
            "canaryd.packages.requests.packages.urllib3._collections",
            "canaryd.packages.requests.packages.urllib3.connection",
            "canaryd.packages.requests.packages.urllib3.connectionpool",
            "canaryd.packages.requests.packages.urllib3.contrib",
            "canaryd.packages.requests.packages.urllib3.contrib.appengine",
            "canaryd.packages.requests.packages.urllib3.contrib.ntlmpool",
            "canaryd.packages.requests.packages.urllib3.contrib.pyopenssl",
            "canaryd.packages.requests.packages.urllib3.contrib.socks",
            "canaryd.packages.requests.packages.urllib3.exceptions",
            "canaryd.packages.requests.packages.urllib3.fields",
            "canaryd.packages.requests.packages.urllib3.filepost",
            "canaryd.packages.requests.packages.urllib3.packages",
            "canaryd.packages.requests.packages.urllib3.packages.backports",
            "canaryd.packages.requests.packages.urllib3.packages.backports.makefile",
            "canaryd.packages.requests.packages.urllib3.packages.ordered_dict",
            "canaryd.packages.requests.packages.urllib3.packages.six",
            "canaryd.packages.requests.packages.urllib3.packages.ssl_match_hostname",
            "canaryd.packages.requests.packages.urllib3.packages.ssl_match_hostname._implementation",
            "canaryd.packages.requests.packages.urllib3.poolmanager",
            "canaryd.packages.requests.packages.urllib3.request",
            "canaryd.packages.requests.packages.urllib3.response",
            "canaryd.packages.requests.packages.urllib3.util",
            "canaryd.packages.requests.packages.urllib3.util.connection",
            "canaryd.packages.requests.packages.urllib3.util.request",
            "canaryd.packages.requests.packages.urllib3.util.response",
            "canaryd.packages.requests.packages.urllib3.util.retry",
            "canaryd.packages.requests.packages.urllib3.util.ssl_",
            "canaryd.packages.requests.packages.urllib3.util.timeout",
            "canaryd.packages.requests.packages.urllib3.util.url",
            "canaryd.packages.requests.sessions",
            "canaryd.packages.requests.status_codes",
            "canaryd.packages.requests.structures",
            "canaryd.packages.requests.utils",
            "canaryd.packages.six",
            "canaryd.plugin",
            "canaryd.plugins",
            "canaryd.plugins.hardware",
            "canaryd.plugins.initd",
            "canaryd.plugins.iptables",
            "canaryd.plugins.launchctl",
            "canaryd.plugins.meta",
            "canaryd.plugins.mixins",
            "canaryd.plugins.mixins.service",
            "canaryd.plugins.sysctl",
            "canaryd.plugins.systemd",
            "canaryd.plugins.upstart",
            "canaryd.plugins.users",
            "canaryd.remote",
            "canaryd.settings",
            "canaryd.version"
        ],
        "version": "0.1.1"
    },
    "canarymd": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "canarytools": {
        "cmdline": [],
        "modules": [
            "canarytools",
            "canarytools.console",
            "canarytools.exceptions",
            "canarytools.models",
            "canarytools.models.base",
            "canarytools.models.canarytokens",
            "canarytools.models.databundles",
            "canarytools.models.devices",
            "canarytools.models.incidents",
            "canarytools.models.result",
            "canarytools.models.settings",
            "canarytools.models.update"
        ],
        "version": "1.0.5"
    },
    "canaryusermodule": {
        "cmdline": [],
        "modules": [
            "canaryusermodule",
            "canaryusermodule.usermodgen"
        ],
        "version": "1.0.1"
    },
    "canbeany": {
        "cmdline": [],
        "modules": [
            "canbeAny",
            "canbeAny.module1",
            "canbeAny.module2",
            "canbeAny.packages",
            "canbeAny.packages.subpackage1",
            "canbeAny.packages.subpackage1.module11",
            "canbeAny.packages.subpackage1.module12",
            "canbeAny.packages.subpackage2",
            "canbeAny.packages.subpackage2.module21",
            "canbeAny.packages.subpackage2.module22",
            "canbeAny.zzz_manual_install"
        ],
        "version": "0.0.4"
    },
    "canberry": {
        "cmdline": [],
        "modules": [],
        "version": "0.4"
    },
    "cancer-api": {
        "cmdline": [],
        "modules": [
            "cancer_api",
            "cancer_api.annotations",
            "cancer_api.base",
            "cancer_api.connections",
            "cancer_api.effects",
            "cancer_api.exceptions",
            "cancer_api.files",
            "cancer_api.metadata",
            "cancer_api.misc",
            "cancer_api.mutations",
            "cancer_api.parsers",
            "cancer_api.utils"
        ],
        "version": "0.2.4"
    },
    "candela": {
        "cmdline": [],
        "modules": [
            "candela",
            "candela.command",
            "candela.constants",
            "candela.menu",
            "candela.shell"
        ],
        "version": "0.3.3"
    },
    "candideitorg-django": {
        "cmdline": [],
        "modules": [
            "candidator",
            "candidator.elections",
            "candidator.elections.admin",
            "candidator.elections.api",
            "candidator.elections.api_urls",
            "candidator.elections.api_v2",
            "candidator.elections.exceptions",
            "candidator.elections.forms",
            "candidator.elections.forms.candidate_form",
            "candidator.elections.forms.election_form",
            "candidator.elections.management",
            "candidator.elections.management.commands",
            "candidator.elections.management.commands.elections_destroyer",
            "candidator.elections.management.commands.elections_loader",
            "candidator.elections.models",
            "candidator.elections.templatetags",
            "candidator.elections.templatetags.candidate_tags",
            "candidator.elections.templatetags.election_tags",
            "candidator.elections.templatetags.settingsvars_tags",
            "candidator.elections.tests",
            "candidator.elections.tests.answer",
            "candidator.elections.tests.api",
            "candidator.elections.tests.api_v2",
            "candidator.elections.tests.background",
            "candidator.elections.tests.background_category",
            "candidator.elections.tests.candidate",
            "candidator.elections.tests.candidate_answer",
            "candidator.elections.tests.category",
            "candidator.elections.tests.election",
            "candidator.elections.tests.election_embeded",
            "candidator.elections.tests.election_loader",
            "candidator.elections.tests.information_source",
            "candidator.elections.tests.link",
            "candidator.elections.tests.medianaranja",
            "candidator.elections.tests.personal_data",
            "candidator.elections.tests.question",
            "candidator.elections.tests.report",
            "candidator.elections.tests.settings_variables",
            "candidator.elections.tests.user",
            "candidator.elections.urls",
            "candidator.elections.views",
            "candidator.elections.views.answer_views",
            "candidator.elections.views.background_category_views",
            "candidator.elections.views.background_views",
            "candidator.elections.views.candidate_views",
            "candidator.elections.views.category_views",
            "candidator.elections.views.election_views",
            "candidator.elections.views.medianaranja_views",
            "candidator.elections.views.personal_data_views",
            "candidator.elections.views.question_views",
            "candidator.manage",
            "candidator.report_objects",
            "candidator.report_objects.admin",
            "candidator.report_objects.forms",
            "candidator.report_objects.models",
            "candidator.report_objects.templatetags",
            "candidator.report_objects.templatetags.report_tags",
            "candidator.report_objects.tests",
            "candidator.report_objects.urls",
            "candidator.report_objects.views",
            "candidator.serializers",
            "candidator.serializers.json_pretty",
            "candidator.settings",
            "candidator.smart_profile",
            "candidator.smart_profile.admin",
            "candidator.smart_profile.models",
            "candidator.smart_profile.tests",
            "candidator.smart_profile.views",
            "candidator.urls",
            "candideitorg",
            "candideitorg.admin",
            "candideitorg.apikey_auth",
            "candideitorg.management",
            "candideitorg.management.commands",
            "candideitorg.management.commands.update_from_candidator",
            "candideitorg.models",
            "candideitorg.tasks",
            "candideitorg.templatetags",
            "candideitorg.templatetags.candideitorg_templetags",
            "candideitorg.tests",
            "candideitorg.views"
        ],
        "version": "0.0.1"
    },
    "candiru": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "candonga": {
        "cmdline": [],
        "modules": [
            "candonga",
            "candonga.command",
            "candonga.main"
        ],
        "version": "0.1"
    },
    "candv": {
        "cmdline": [],
        "modules": [
            "candv",
            "candv.base",
            "tests",
            "tests.package",
            "tests.package.subpackage",
            "tests.package.subpackage.constants",
            "tests.test_base",
            "tests.test_candv"
        ],
        "version": "1.3.1"
    },
    "candy": {
        "cmdline": [],
        "modules": [
            "candy",
            "candy.cli",
            "candy.gradle_parser",
            "candy.lextab",
            "candy.manifest_parser"
        ],
        "version": "0.1.0a1"
    },
    "candy-board-amt": {
        "cmdline": [],
        "modules": [
            "candy_board_amt"
        ],
        "version": "1.2.1"
    },
    "candy-board-cli": {
        "cmdline": [
            "candy"
        ],
        "modules": [],
        "version": "1.0.5"
    },
    "candy.candy": {
        "cmdline": [],
        "modules": [
            "candy",
            "candy.candy"
        ],
        "version": "0.1.2"
    },
    "candybar": {
        "cmdline": [],
        "modules": [
            "candybar",
            "candybar.CandyBarCode128",
            "candybar.CandyBarCode39",
            "candybar.CandyBarImage",
            "candybar.CandyBarImagePdf417",
            "candybar.CandyBarPdf417",
            "candybar.PatternPdf417"
        ],
        "version": "0.1.5"
    },
    "candygram": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "candytable": {
        "cmdline": [],
        "modules": [
            "CandyTable"
        ],
        "version": "2.4"
    },
    "caneton": {
        "cmdline": [],
        "modules": [
            "caneton",
            "caneton.cli",
            "caneton.compat",
            "caneton.decode",
            "caneton.exceptions",
            "caneton.version"
        ],
        "version": "1.11.1"
    },
    "canfar": {
        "cmdline": [
            "canfar-create-group",
            "canfar-get-group",
            "canfar-is-member"
        ],
        "modules": [
            "canfar",
            "canfar.__version__",
            "canfar.common",
            "canfar.common.client",
            "canfar.common.exceptions",
            "canfar.common.parser",
            "canfar.common.util",
            "canfar.groups",
            "canfar.groups.client",
            "canfar.groups.exceptions",
            "canfar.groups.group",
            "canfar.groups.group_property",
            "canfar.groups.group_xml",
            "canfar.groups.group_xml.group_property_reader",
            "canfar.groups.group_xml.group_property_writer",
            "canfar.groups.group_xml.group_reader",
            "canfar.groups.group_xml.group_writer",
            "canfar.groups.group_xml.groups_reader",
            "canfar.groups.group_xml.groups_writer",
            "canfar.groups.group_xml.user_reader",
            "canfar.groups.group_xml.user_writer",
            "canfar.groups.identity",
            "canfar.groups.role",
            "canfar.groups.test",
            "canfar.groups.test.test_client",
            "canfar.groups.test.test_group_property",
            "canfar.groups.test.test_group_property_reader_writer",
            "canfar.groups.test.test_group_reader_writer",
            "canfar.groups.test.test_groups_reader_writer",
            "canfar.groups.test.test_user_reader_writer",
            "canfar.groups.user"
        ],
        "version": "0.2.8"
    },
    "canfarcloud": {
        "cmdline": [
            "canfar-submit-job"
        ],
        "modules": [
            "canfar",
            "canfar.__canfarcloud_version__",
            "canfar.proc",
            "canfar.proc.client"
        ],
        "version": "0.2.4"
    },
    "canfork": {
        "cmdline": [],
        "modules": [
            "canfork"
        ],
        "version": "0.2.0"
    },
    "canister": {
        "cmdline": [
            "canister.py"
        ],
        "modules": [
            "canister"
        ],
        "version": "1.5.1"
    },
    "canistreamit": {
        "cmdline": [],
        "modules": [
            "canistreamit",
            "canistreamit.canistreamit"
        ],
        "version": "0.2"
    },
    "caniuse": {
        "cmdline": [],
        "modules": [
            "caniuse",
            "caniuse.cli",
            "caniuse.main"
        ],
        "version": "0.3.1"
    },
    "caniusepython3": {
        "cmdline": [],
        "modules": [
            "caniusepython3",
            "caniusepython3.command",
            "caniusepython3.dependencies",
            "caniusepython3.pylint_checker",
            "caniusepython3.pypi",
            "caniusepython3.test",
            "caniusepython3.test.test_check",
            "caniusepython3.test.test_cli",
            "caniusepython3.test.test_command",
            "caniusepython3.test.test_dependencies",
            "caniusepython3.test.test_pylint_checker",
            "caniusepython3.test.test_pypi"
        ],
        "version": "5.0.0"
    },
    "canmatrix": {
        "cmdline": [],
        "modules": [
            "canmatrix",
            "canmatrix.arxml",
            "canmatrix.autosarhelper",
            "canmatrix.cancluster",
            "canmatrix.canmatrix",
            "canmatrix.cmcsv",
            "canmatrix.cmjson",
            "canmatrix.compare",
            "canmatrix.convert",
            "canmatrix.copy",
            "canmatrix.dbc",
            "canmatrix.dbf",
            "canmatrix.fibex",
            "canmatrix.formats",
            "canmatrix.join",
            "canmatrix.kcd",
            "canmatrix.log",
            "canmatrix.sym",
            "canmatrix.version",
            "canmatrix.xls",
            "canmatrix.xlsx",
            "canmatrix.yaml"
        ],
        "version": "0.5"
    },
    "canoe": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "canon-remote": {
        "cmdline": [],
        "modules": [
            "canon",
            "canon.bitfield",
            "canon.camera",
            "canon.capture",
            "canon.commands",
            "canon.protocol",
            "canon.storage",
            "canon.util"
        ],
        "version": "0.0.1"
    },
    "canonical-amis": {
        "cmdline": [
            "canonical-amis"
        ],
        "modules": [
            "canonical_amis"
        ],
        "version": "0.1.0-beta.4"
    },
    "canonicalize": {
        "cmdline": [],
        "modules": [],
        "version": "1.3"
    },
    "canonicaljson": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "canonicalwebteam.upload-assets": {
        "cmdline": [
            "upload-assets"
        ],
        "modules": [
            "canonicalwebteam.upload_assets.uploader"
        ],
        "version": "0.2.0"
    },
    "canonpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "canontensor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "canopen": {
        "cmdline": [],
        "modules": [
            "canopen",
            "canopen.common",
            "canopen.emcy",
            "canopen.network",
            "canopen.nmt",
            "canopen.node",
            "canopen.objectdictionary",
            "canopen.objectdictionary.datatypes",
            "canopen.objectdictionary.eds",
            "canopen.objectdictionary.epf",
            "canopen.pdo",
            "canopen.profiles",
            "canopen.profiles.p402",
            "canopen.sdo",
            "canopen.sync",
            "canopen.timestamp",
            "canopen.version"
        ],
        "version": "0.5.0.dev5"
    },
    "canopener": {
        "cmdline": [],
        "modules": [
            "canopener",
            "canopener.core",
            "canopener.s3file"
        ],
        "version": "0.1.6"
    },
    "canopy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "canossa": {
        "cmdline": [],
        "modules": [
            "canossa",
            "canossa.attribute",
            "canossa.canossa",
            "canossa.cell",
            "canossa.constant",
            "canossa.cursor",
            "canossa.exception",
            "canossa.iframe",
            "canossa.interface",
            "canossa.line",
            "canossa.mouse",
            "canossa.output",
            "canossa.popup",
            "canossa.screen",
            "canossa.stub",
            "canossa.termprop",
            "canossa.termprop.setup",
            "canossa.termprop.termprop",
            "canossa.termprop.termprop.db",
            "canossa.termprop.termprop.db.iterm2",
            "canossa.termprop.termprop.db.unicode6_2",
            "canossa.termprop.termprop.db.unicode6_2.cjk",
            "canossa.termprop.termprop.db.unicode6_2.normal",
            "canossa.termprop.termprop.termprop",
            "canossa.termprop.termprop.wcwidth",
            "canossa.tff",
            "canossa.tff.setup",
            "canossa.tff.tff"
        ],
        "version": "0.2.1"
    },
    "cant": {
        "cmdline": [],
        "modules": [
            "cant",
            "cant.alpha_status",
            "cant.arity",
            "cant.comparison_functions",
            "cant.get_callables",
            "cant.rem",
            "cant.tests",
            "cant.tests.run_tests"
        ],
        "version": "0.0"
    },
    "cantal": {
        "cmdline": [],
        "modules": [
            "cantal",
            "cantal.collection",
            "cantal.const",
            "cantal.core",
            "cantal.counters",
            "cantal.fork",
            "cantal.levels",
            "cantal.py2_compat",
            "cantal.req",
            "cantal.simple_state"
        ],
        "version": "0.2.0"
    },
    "cantal-tools": {
        "cmdline": [],
        "modules": [
            "cantal_tools",
            "cantal_tools._fork",
            "cantal_tools.django",
            "cantal_tools.elasticsearch",
            "cantal_tools.flask",
            "cantal_tools.metrics",
            "cantal_tools.redis",
            "cantal_tools.sqlalchemy",
            "cantal_tools.werkzeug_serving"
        ],
        "version": "0.2.4"
    },
    "canteen": {
        "cmdline": [],
        "modules": [
            "canteen",
            "canteen.base",
            "canteen.base.handler",
            "canteen.base.logic",
            "canteen.base.page",
            "canteen.base.protocol",
            "canteen.core",
            "canteen.core.hooks",
            "canteen.core.injection",
            "canteen.core.meta",
            "canteen.core.runtime",
            "canteen.dispatch",
            "canteen.exceptions",
            "canteen.logic",
            "canteen.logic.assets",
            "canteen.logic.cache",
            "canteen.logic.http",
            "canteen.logic.http.agent",
            "canteen.logic.http.cookies",
            "canteen.logic.http.semantics",
            "canteen.logic.realtime",
            "canteen.logic.session",
            "canteen.logic.template",
            "canteen.model",
            "canteen.model.adapter",
            "canteen.model.adapter.abstract",
            "canteen.model.adapter.core",
            "canteen.model.adapter.inmemory",
            "canteen.model.adapter.protorpc",
            "canteen.model.adapter.redis",
            "canteen.model.exceptions",
            "canteen.model.query",
            "canteen.rpc",
            "canteen.rpc.exceptions",
            "canteen.rpc.protocol",
            "canteen.rpc.protocol.json",
            "canteen.rpc.protocol.msgpack",
            "canteen.runtime",
            "canteen.runtime.uwsgi",
            "canteen.runtime.werkzeug",
            "canteen.runtime.wsgiref",
            "canteen.setup",
            "canteen.test",
            "canteen.util",
            "canteen.util.cli",
            "canteen.util.config",
            "canteen.util.debug",
            "canteen.util.decorators",
            "canteen.util.struct",
            "canteen_tests",
            "canteen_tests.test__init__",
            "canteen_tests.test_adapters",
            "canteen_tests.test_adapters.test_abstract",
            "canteen_tests.test_adapters.test_inmemory",
            "canteen_tests.test_adapters.test_protorpc",
            "canteen_tests.test_adapters.test_redis",
            "canteen_tests.test_base",
            "canteen_tests.test_base.test_handler",
            "canteen_tests.test_base.test_logic",
            "canteen_tests.test_base.test_page",
            "canteen_tests.test_base.test_protocol",
            "canteen_tests.test_core",
            "canteen_tests.test_core.test_hooks",
            "canteen_tests.test_core.test_injection",
            "canteen_tests.test_core.test_meta",
            "canteen_tests.test_core.test_runtime",
            "canteen_tests.test_dispatch",
            "canteen_tests.test_http",
            "canteen_tests.test_http.test_agent",
            "canteen_tests.test_http.test_caching",
            "canteen_tests.test_http.test_cookies",
            "canteen_tests.test_http.test_etags",
            "canteen_tests.test_http.test_redirects",
            "canteen_tests.test_http.test_semantics",
            "canteen_tests.test_model",
            "canteen_tests.test_model.test_graph",
            "canteen_tests.test_model.test_key",
            "canteen_tests.test_model.test_meta",
            "canteen_tests.test_model.test_model",
            "canteen_tests.test_model.test_query",
            "canteen_tests.test_rpc",
            "canteen_tests.test_rpc.test_base",
            "canteen_tests.test_rpc.test_exceptions",
            "canteen_tests.test_rpc.test_json",
            "canteen_tests.test_rpc.test_msgpack",
            "canteen_tests.test_setup",
            "canteen_tests.test_test",
            "canteen_tests.test_util",
            "canteen_tests.test_util.test_cli",
            "canteen_tests.test_util.test_config",
            "canteen_tests.test_util.test_debug",
            "canteen_tests.test_util.test_decorators",
            "canteen_tests.test_util.test_struct"
        ],
        "version": "0.4-alpha"
    },
    "canteenhro": {
        "cmdline": [],
        "modules": [
            "CanteenHRO",
            "CanteenHRO.CanteenHRO"
        ],
        "version": "0.0.3"
    },
    "canto": {
        "cmdline": [
            "canto-daemon",
            "canto-remote"
        ],
        "modules": [
            "canto_next",
            "canto_next.canto_backend",
            "canto_next.client",
            "canto_next.config",
            "canto_next.encoding",
            "canto_next.feed",
            "canto_next.fetch",
            "canto_next.format",
            "canto_next.hooks",
            "canto_next.locks",
            "canto_next.plugins",
            "canto_next.protocol",
            "canto_next.remote",
            "canto_next.rwlock",
            "canto_next.server",
            "canto_next.storage",
            "canto_next.tag",
            "canto_next.transform"
        ],
        "version": "0.9.4"
    },
    "canto-curses": {
        "cmdline": [
            "canto-curses"
        ],
        "modules": [
            "canto_curses",
            "canto_curses.color",
            "canto_curses.command",
            "canto_curses.config",
            "canto_curses.gui",
            "canto_curses.guibase",
            "canto_curses.html",
            "canto_curses.input",
            "canto_curses.locks",
            "canto_curses.main",
            "canto_curses.reader",
            "canto_curses.screen",
            "canto_curses.story",
            "canto_curses.subthread",
            "canto_curses.tag",
            "canto_curses.tagcore",
            "canto_curses.taglist",
            "canto_curses.text",
            "canto_curses.theme"
        ],
        "version": "0.9.5"
    },
    "canton": {
        "cmdline": [],
        "modules": [
            "canton",
            "canton.cans",
            "canton.cans2",
            "canton.misc",
            "canton.objectives"
        ],
        "version": "0.1.19"
    },
    "cantools": {
        "cmdline": [],
        "modules": [
            "cantools",
            "cantools.db"
        ],
        "version": "1.0.0"
    },
    "canvas": {
        "cmdline": [],
        "modules": [
            "canvas"
        ],
        "version": "0.2"
    },
    "canvas-api": {
        "cmdline": [],
        "modules": [
            "canvas_api"
        ],
        "version": "0.1"
    },
    "canvas-data-sdk": {
        "cmdline": [
            "canvas_data_example.py"
        ],
        "modules": [
            "canvas_data",
            "canvas_data.api",
            "canvas_data.ddl_utils",
            "canvas_data.exceptions",
            "canvas_data.hmac_auth",
            "canvas_data.scripts",
            "canvas_data.scripts.canvasdata"
        ],
        "version": "0.1.2"
    },
    "canvasapi": {
        "cmdline": [],
        "modules": [
            "canvasapi",
            "canvasapi.account",
            "canvasapi.appointment_group",
            "canvasapi.assignment",
            "canvasapi.avatar",
            "canvasapi.bookmark",
            "canvasapi.calendar_event",
            "canvasapi.canvas",
            "canvasapi.canvas_object",
            "canvasapi.conversation",
            "canvasapi.course",
            "canvasapi.discussion_topic",
            "canvasapi.enrollment",
            "canvasapi.enrollment_term",
            "canvasapi.exceptions",
            "canvasapi.external_tool",
            "canvasapi.group",
            "canvasapi.module",
            "canvasapi.page",
            "canvasapi.page_view",
            "canvasapi.paginated_list",
            "canvasapi.progress",
            "canvasapi.quiz",
            "canvasapi.requester",
            "canvasapi.section",
            "canvasapi.upload",
            "canvasapi.user",
            "canvasapi.util"
        ],
        "version": "0.3.0"
    },
    "canvasgrader": {
        "cmdline": [],
        "modules": [
            "canvasgrader"
        ],
        "version": "1.0.2"
    },
    "canvasgraph": {
        "cmdline": [
            "CanvasGraph.py",
            "KB.js",
            "canvas.html"
        ],
        "modules": [],
        "version": "0.0.1"
    },
    "canvassync": {
        "cmdline": [
            "canvas.py"
        ],
        "modules": [
            "CanvasSync",
            "CanvasSync._version",
            "CanvasSync.usage",
            "CanvasSync/CanvasEntities",
            "CanvasSync/CanvasEntities.assignment",
            "CanvasSync/CanvasEntities.assignments_folder",
            "CanvasSync/CanvasEntities.course",
            "CanvasSync/CanvasEntities.entity",
            "CanvasSync/CanvasEntities.external_url",
            "CanvasSync/CanvasEntities.file",
            "CanvasSync/CanvasEntities.folder",
            "CanvasSync/CanvasEntities.linked_file",
            "CanvasSync/CanvasEntities.module",
            "CanvasSync/CanvasEntities.page",
            "CanvasSync/CanvasEntities.sub_header",
            "CanvasSync/CanvasEntities.synchronizer",
            "CanvasSync/Settings",
            "CanvasSync/Settings.cryptography",
            "CanvasSync/Settings.settings",
            "CanvasSync/Settings.user_prompter",
            "CanvasSync/Statics",
            "CanvasSync/Statics.ANSI",
            "CanvasSync/Statics.instructure_api",
            "CanvasSync/Statics.static_functions",
            "CanvasSync/Statics.url_shortcut_maker"
        ],
        "version": "0.1.8"
    },
    "canvasvg": {
        "cmdline": [],
        "modules": [
            "canvasvg",
            "canvasvg.canvasvg",
            "canvasvg.test_warnings"
        ],
        "version": "1.0.5"
    },
    "cao-nester001": {
        "cmdline": [],
        "modules": [
            "cao_nester001"
        ],
        "version": "0.0.1"
    },
    "caoe": {
        "cmdline": [],
        "modules": [
            "caoe"
        ],
        "version": "0.1.7"
    },
    "caoliu": {
        "cmdline": [],
        "modules": [
            "caoliu"
        ],
        "version": "0.0.5"
    },
    "caom2": {
        "cmdline": [],
        "modules": [
            "caom2",
            "caom2._astropy_init",
            "caom2.artifact",
            "caom2.caom_util",
            "caom2.chunk",
            "caom2.common",
            "caom2.conftest",
            "caom2.obs_reader_writer",
            "caom2.observation",
            "caom2.part",
            "caom2.plane",
            "caom2.shape",
            "caom2.tests",
            "caom2.tests.caom_test_instances",
            "caom2.tests.setup_package",
            "caom2.tests.test_artifact",
            "caom2.tests.test_caom_util",
            "caom2.tests.test_chunk",
            "caom2.tests.test_common",
            "caom2.tests.test_obs_reader_writer",
            "caom2.tests.test_observation",
            "caom2.tests.test_part",
            "caom2.tests.test_plane",
            "caom2.tests.test_shape",
            "caom2.tests.test_wcs",
            "caom2.tests.xml_compare",
            "caom2.version",
            "caom2.wcs"
        ],
        "version": "2.2.4"
    },
    "caom2repo": {
        "cmdline": [],
        "modules": [
            "caom2repo",
            "caom2repo._astropy_init",
            "caom2repo.conftest",
            "caom2repo.core",
            "caom2repo.tests",
            "caom2repo.tests.addplaneplugin",
            "caom2repo.tests.errorplugin",
            "caom2repo.tests.passplugin",
            "caom2repo.tests.setup_package",
            "caom2repo.tests.test_core",
            "caom2repo.version"
        ],
        "version": "1.1.2"
    },
    "caonester": {
        "cmdline": [],
        "modules": [
            "printf_fun"
        ],
        "version": "1.2.0"
    },
    "caosz": {
        "cmdline": [],
        "modules": [
            "caosz"
        ],
        "version": "1,1,0"
    },
    "caosz-trial": {
        "cmdline": [],
        "modules": [
            "caosz_trial"
        ],
        "version": "1.0.0"
    },
    "cap": {
        "cmdline": [],
        "modules": [
            "cap",
            "cap._nicer",
            "cap._nicer.bits",
            "cap._nicer.slices",
            "cap._nicer.streams",
            "cap._nicer.structs",
            "cap._nicer.times",
            "cap.api",
            "cap.core",
            "cap.version"
        ],
        "version": "0.0.114"
    },
    "cap-decompiler": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cap-schemas": {
        "cmdline": [],
        "modules": [
            "capschemas"
        ],
        "version": "0.4.5"
    },
    "cap1xxx": {
        "cmdline": [],
        "modules": [
            "cap1xxx"
        ],
        "version": "0.1.3"
    },
    "capa": {
        "cmdline": [],
        "modules": [
            "capa",
            "capa.capa"
        ],
        "version": "0.1"
    },
    "capacity": {
        "cmdline": [],
        "modules": [
            "capacity",
            "capacity.__version__",
            "capacity.capacity"
        ],
        "version": "1.3.8"
    },
    "caparg": {
        "cmdline": [],
        "modules": [
            "caparg",
            "caparg._version",
            "caparg.api",
            "caparg.example",
            "caparg.example.main",
            "caparg.example.selftest",
            "caparg.tests",
            "caparg.tests.test_commands"
        ],
        "version": "17.4.0"
    },
    "capd": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "capddynsys": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "capddynsyspy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "capdpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "capdredhom": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "capdredhompy": {
        "cmdline": [],
        "modules": [
            "capdRedHom",
            "capdRedHom.algorithms",
            "capdRedHom.complex",
            "capdRedHom.cubical_complex",
            "capdRedHom.generalized_complex",
            "capdRedHom.impl",
            "capdRedHom.persistence",
            "capdRedHom.persistence.bottleneck_distance",
            "capdRedHom.persistence.build_diagrams_graph",
            "capdRedHom.persistence.diagram",
            "capdRedHom.persistence.diagram_measure",
            "capdRedHom.persistence.distance_matrix_persistence_homology",
            "capdRedHom.persistence.image_persistent_homology",
            "capdRedHom.persistence.plot_diagram",
            "capdRedHom.persistence.plot_point_cloud",
            "capdRedHom.persistence.wasserstein_distance",
            "capdRedHom.prod_simplicial_complex",
            "capdRedHom.read",
            "capdRedHom.simplicial_complex",
            "capdRedHom.version"
        ],
        "version": "4.2.153"
    },
    "cape-metrorail": {
        "cmdline": [],
        "modules": [
            "cape_metrorail"
        ],
        "version": "0.1"
    },
    "capi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "capidup": {
        "cmdline": [],
        "modules": [
            "capidup",
            "capidup.finddups",
            "capidup.py3compat",
            "capidup.version"
        ],
        "version": "1.1.0"
    },
    "capidup-cli": {
        "cmdline": [],
        "modules": [
            "capidupcli"
        ],
        "version": "1.0.0"
    },
    "capillary": {
        "cmdline": [],
        "modules": [
            "capillary",
            "capillary.tasks",
            "capillary.utils"
        ],
        "version": "0.0.1"
    },
    "capitains-hook": {
        "cmdline": [],
        "modules": [
            "Hook",
            "Hook.exceptions",
            "Hook.ext",
            "Hook.models",
            "tests",
            "tests.baseTest",
            "tests.github_fixtures",
            "tests.make_moke",
            "tests.models",
            "tests.models.test_general_model",
            "tests.test_api",
            "tests.test_badges",
            "tests.test_ui"
        ],
        "version": "1.0.0"
    },
    "capitains-nautilus": {
        "cmdline": [],
        "modules": [
            "capitains_nautilus",
            "capitains_nautilus.cmd",
            "capitains_nautilus.cts",
            "capitains_nautilus.cts.resolver",
            "capitains_nautilus.errors",
            "capitains_nautilus.flask_ext",
            "capitains_nautilus.manager"
        ],
        "version": "1.0.1"
    },
    "capitalizr": {
        "cmdline": [
            "capitalizr"
        ],
        "modules": [
            "capitalizr"
        ],
        "version": "1.02.00"
    },
    "capitals": {
        "cmdline": [],
        "modules": [
            "capitals",
            "capitals.app"
        ],
        "version": "0.1.2"
    },
    "capivara": {
        "cmdline": [],
        "modules": [
            "capivara",
            "capivara.api"
        ],
        "version": "1.0.2"
    },
    "capless": {
        "cmdline": [],
        "modules": [
            "capless",
            "capless.cli",
            "capless.cli.cli",
            "capless.core",
            "capless.core.conf",
            "capless.core.exceptions",
            "capless.core.loading",
            "capless.core.loading.templates",
            "capless.core.urls",
            "capless.core.urls.utils",
            "capless.core.views",
            "capless.core.views.apigw",
            "capless.core.views.dbms",
            "capless.core.views.events",
            "capless.core.views.s3",
            "capless.test_urls",
            "capless.test_views",
            "capless.utils",
            "example",
            "example.blog",
            "example.blog.commands",
            "example.blog.models",
            "example.blog.views",
            "example.example",
            "example.example.settings"
        ],
        "version": "0.1.0"
    },
    "capmoe": {
        "cmdline": [],
        "modules": [
            "capmoe",
            "capmoe.api",
            "capmoe.cv",
            "capmoe.cv.capdetector"
        ],
        "version": "0.0.3"
    },
    "capn": {
        "cmdline": [
            "__capn",
            "capn"
        ],
        "modules": [
            "capn",
            "capn.config",
            "capn.hooks",
            "capn.paths",
            "capn.util"
        ],
        "version": "1.0rc1"
    },
    "capnpy": {
        "cmdline": [],
        "modules": [
            "capnpy",
            "capnpy._hash",
            "capnpy.annotate",
            "capnpy.benchmarks",
            "capnpy.benchmarks.support",
            "capnpy.benchmarks.test_benchmarks",
            "capnpy.blob",
            "capnpy.buffered",
            "capnpy.builder",
            "capnpy.compiler",
            "capnpy.compiler.compiler",
            "capnpy.compiler.distutils",
            "capnpy.compiler.field",
            "capnpy.compiler.misc",
            "capnpy.compiler.module",
            "capnpy.compiler.node",
            "capnpy.compiler.request",
            "capnpy.compiler.struct_",
            "capnpy.compiler.structor",
            "capnpy.convert_case",
            "capnpy.enum",
            "capnpy.ext",
            "capnpy.filelike",
            "capnpy.floatrepr",
            "capnpy.floatrepr.build",
            "capnpy.list",
            "capnpy.listbuilder",
            "capnpy.message",
            "capnpy.printer",
            "capnpy.ptr",
            "capnpy.schema",
            "capnpy.schema_extended",
            "capnpy.struct_",
            "capnpy.testing",
            "capnpy.testing.compiler",
            "capnpy.testing.compiler.support",
            "capnpy.testing.compiler.test_annotation",
            "capnpy.testing.compiler.test_compiler",
            "capnpy.testing.compiler.test_ctor",
            "capnpy.testing.compiler.test_distutils",
            "capnpy.testing.compiler.test_evolution",
            "capnpy.testing.compiler.test_field",
            "capnpy.testing.compiler.test_import",
            "capnpy.testing.compiler.test_key",
            "capnpy.testing.compiler.test_misc",
            "capnpy.testing.compiler.test_null",
            "capnpy.testing.compiler.test_repr",
            "capnpy.testing.compiler.test_standalone",
            "capnpy.testing.test__hash",
            "capnpy.testing.test_blob",
            "capnpy.testing.test_buffered",
            "capnpy.testing.test_builder",
            "capnpy.testing.test_convert_case",
            "capnpy.testing.test_enum",
            "capnpy.testing.test_filelike",
            "capnpy.testing.test_floatrepr",
            "capnpy.testing.test_list",
            "capnpy.testing.test_message",
            "capnpy.testing.test_ptr",
            "capnpy.testing.test_schema",
            "capnpy.testing.test_struct_",
            "capnpy.testing.test_unpack",
            "capnpy.testing.test_util",
            "capnpy.type",
            "capnpy.unpack",
            "capnpy.util"
        ],
        "version": "0.1.1"
    },
    "capparselib": {
        "cmdline": [],
        "modules": [
            "capparselib",
            "capparselib.parsers",
            "capparselib.serializer_1_2"
        ],
        "version": "0.5.3"
    },
    "capped-infinite-generator": {
        "cmdline": [],
        "modules": [
            "my_capped_infinite_generator_lib"
        ],
        "version": "1.0"
    },
    "cappy": {
        "cmdline": [],
        "modules": [
            "cappy",
            "cappy.cappy"
        ],
        "version": "1.0"
    },
    "capris": {
        "cmdline": [],
        "modules": [
            "capris",
            "capris.command",
            "capris.core",
            "capris.iostream",
            "capris.pipe",
            "capris.runnable",
            "capris.tests",
            "capris.tests.command",
            "capris.tests.iostream",
            "capris.tests.pipe",
            "capris.tests.transaction",
            "capris.transaction",
            "capris.transaction.wrappers",
            "capris.utils"
        ],
        "version": "0.0.79"
    },
    "caprunner": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "caps": {
        "cmdline": [],
        "modules": [
            "caps",
            "caps.dicom_converter",
            "caps.dicom_converter.base",
            "caps.dicom_converter.base.csa2",
            "caps.dicom_converter.base.split_series",
            "caps.dicom_converter.base.tools",
            "caps.dicom_converter.dicom_deidentifier",
            "caps.dicom_converter.dicom_deidentifier_v2",
            "caps.dicom_converter.nifti_converter",
            "caps.diffusion_estimation",
            "caps.diffusion_estimation.diffusion_multiprocessing",
            "caps.diffusion_estimation.fsl_tensor_estimation",
            "caps.diffusion_estimation.fvtk",
            "caps.diffusion_estimation.integrals",
            "caps.diffusion_estimation.monomials",
            "caps.diffusion_estimation.polynomials",
            "caps.diffusion_estimation.py_tensor_estimation",
            "caps.diffusion_estimation.resources",
            "caps.diffusion_estimation.tensor_estimation",
            "caps.diffusion_estimation.tensor_scalars",
            "caps.diffusion_estimation.tensor_utils",
            "caps.diffusion_preproc",
            "caps.diffusion_preproc.bet",
            "caps.diffusion_preproc.eddy_correction",
            "caps.diffusion_preproc.fsl_preproc",
            "caps.diffusion_preproc.motion_correction",
            "caps.diffusion_preproc.susceptibility_correction",
            "caps.diffusion_registration",
            "caps.diffusion_registration.fsl_registration",
            "caps.diffusion_registration.reorientation",
            "caps.functional_connectivity",
            "caps.functional_connectivity.analysis",
            "caps.functional_connectivity.conn",
            "caps.functional_connectivity.manager",
            "caps.functional_connectivity.matlab_batch",
            "caps.functional_connectivity.matlab_utils",
            "caps.functional_connectivity.results",
            "caps.functional_connectivity.setup",
            "caps.functional_connectivity.spatial_preproc",
            "caps.functional_connectivity.temporal_preproc",
            "caps.functional_preproc",
            "caps.functional_preproc.pypreprocess_fmri_preproc",
            "caps.info",
            "caps.preclinic_functional",
            "caps.preclinic_functional.bet",
            "caps.preclinic_functional.slice_timing",
            "caps.preclinic_functional.spm_coregistration",
            "caps.preclinic_functional.spm_new_segment",
            "caps.preclinic_functional.spm_normalization",
            "caps.preclinic_functional.spm_preproc",
            "caps.preclinic_functional.spm_realignment",
            "caps.preclinic_functional.spm_segment",
            "caps.preclinic_functional.spm_smoothing",
            "caps.preclinic_functional.spm_utility",
            "caps.quality_assurance",
            "caps.quality_assurance.fmri",
            "caps.quality_control",
            "caps.quality_control.brainvisa_map_cluster_analysis",
            "caps.quality_control.fsl_interface",
            "caps.quality_control.snapshots",
            "caps.toy_datasets",
            "caps.utils",
            "caps.utils.bet",
            "caps.utils.misc"
        ],
        "version": "0.0.1"
    },
    "caps-lock": {
        "cmdline": [],
        "modules": [
            "caps_lock",
            "caps_lock.module"
        ],
        "version": "1.0"
    },
    "capsid": {
        "cmdline": [
            "capsid"
        ],
        "modules": [
            "capsid",
            "capsid.alignment",
            "capsid.colorize",
            "capsid.configure",
            "capsid.database",
            "capsid.fasta",
            "capsid.gbloader",
            "capsid.intersect",
            "capsid.project",
            "capsid.qfilter",
            "capsid.sam2bam",
            "capsid.sample",
            "capsid.statistics",
            "capsid.subtraction",
            "capsid.taxonomy"
        ],
        "version": "1.6.2"
    },
    "capstone": {
        "cmdline": [],
        "modules": [
            "capstone",
            "capstone.arm",
            "capstone.arm64",
            "capstone.arm64_const",
            "capstone.arm_const",
            "capstone.mips",
            "capstone.mips_const",
            "capstone.ppc",
            "capstone.ppc_const",
            "capstone.sparc",
            "capstone.sparc_const",
            "capstone.systemz",
            "capstone.sysz_const",
            "capstone.x86",
            "capstone.x86_const",
            "capstone.xcore",
            "capstone.xcore_const"
        ],
        "version": "3.0.5rc2"
    },
    "capstone-engine": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "capstone-windows": {
        "cmdline": [],
        "modules": [
            "capstone",
            "capstone.arm",
            "capstone.arm64",
            "capstone.arm64_const",
            "capstone.arm_const",
            "capstone.hexagon",
            "capstone.hexagon_const",
            "capstone.mips",
            "capstone.mips_const",
            "capstone.ppc",
            "capstone.ppc_const",
            "capstone.sparc",
            "capstone.sparc_const",
            "capstone.systemz",
            "capstone.sysz_const",
            "capstone.x86",
            "capstone.x86_const",
            "capstone.xcore",
            "capstone.xcore_const"
        ],
        "version": "3.0.4"
    },
    "capsul": {
        "cmdline": [
            "capsulview"
        ],
        "modules": [
            "capsul",
            "capsul.info",
            "capsul.pipeline",
            "capsul.pipeline.pipeline",
            "capsul.pipeline.pipeline_nodes",
            "capsul.pipeline.pipeline_tools",
            "capsul.pipeline.pipeline_workflow",
            "capsul.pipeline.process_iteration",
            "capsul.pipeline.test",
            "capsul.pipeline.test.test_activation",
            "capsul.pipeline.test.test_double_switch",
            "capsul.pipeline.test.test_iterative_process",
            "capsul.pipeline.test.test_pipeline",
            "capsul.pipeline.test.test_pipeline_with_temp",
            "capsul.pipeline.test.test_pipeline_workflow",
            "capsul.pipeline.test.test_process_iteration",
            "capsul.pipeline.test.test_qc_nodes",
            "capsul.pipeline.test.test_switch_optional_output",
            "capsul.pipeline.test.test_switch_pipeline",
            "capsul.pipeline.test.test_switch_subpipeline",
            "capsul.pipeline.topological_sort",
            "capsul.plugins",
            "capsul.process",
            "capsul.process.loader",
            "capsul.process.nipype_process",
            "capsul.process.process",
            "capsul.process.process_with_fom",
            "capsul.process.test",
            "capsul.process.test.test_load_from_description",
            "capsul.process.test.test_nipype_wrap",
            "capsul.process.test.test_traits",
            "capsul.qt_apps",
            "capsul.qt_apps.main_window",
            "capsul.qt_apps.pipeline_viewer_app",
            "capsul.qt_apps.resources",
            "capsul.qt_apps.resources.icones",
            "capsul.qt_apps.utils",
            "capsul.qt_apps.utils.application",
            "capsul.qt_apps.utils.fill_treectrl",
            "capsul.qt_apps.utils.find_pipelines",
            "capsul.qt_apps.utils.window",
            "capsul.qt_gui",
            "capsul.qt_gui.board_widget",
            "capsul.qt_gui.test",
            "capsul.qt_gui.test.test_board_widget",
            "capsul.qt_gui.widgets",
            "capsul.qt_gui.widgets.activation_inspector",
            "capsul.qt_gui.widgets.links_debugger",
            "capsul.qt_gui.widgets.pipeline_developper_view",
            "capsul.qt_gui.widgets.pipeline_file_warning_widget",
            "capsul.qt_gui.widgets.pipeline_user_view",
            "capsul.qt_gui.widgets.process_with_fom_widget",
            "capsul.qt_gui.widgets.viewer_widget",
            "capsul.sphinxext",
            "capsul.sphinxext.capsul_pipeline_rst",
            "capsul.sphinxext.capsul_pipeline_view",
            "capsul.sphinxext.capsul_sphinx_layout",
            "capsul.sphinxext.capsul_usecases_rst",
            "capsul.sphinxext.layoutdocgen",
            "capsul.sphinxext.load_pilots",
            "capsul.sphinxext.pipelinedocgen",
            "capsul.sphinxext.test",
            "capsul.sphinxext.test.test_process_pipeline_doc",
            "capsul.sphinxext.test.test_usercases_doc",
            "capsul.sphinxext.usecasesdocgen",
            "capsul.study_config",
            "capsul.study_config.config_modules",
            "capsul.study_config.config_modules.brainvisa_config",
            "capsul.study_config.config_modules.fom_config",
            "capsul.study_config.config_modules.freesurfer_config",
            "capsul.study_config.config_modules.fsl_config",
            "capsul.study_config.config_modules.matlab_config",
            "capsul.study_config.config_modules.nipype_config",
            "capsul.study_config.config_modules.smartcaching_config",
            "capsul.study_config.config_modules.somaworkflow_config",
            "capsul.study_config.config_modules.spm_config",
            "capsul.study_config.config_utils",
            "capsul.study_config.memory",
            "capsul.study_config.run",
            "capsul.study_config.study_config",
            "capsul.study_config.test",
            "capsul.study_config.test.test_fs_fsl_config",
            "capsul.study_config.test.test_memory",
            "capsul.study_config.test.test_run_in_study_config",
            "capsul.study_config.test.test_run_process",
            "capsul.study_config.test.test_soma_workflow",
            "capsul.study_config.test.test_soma_workflow_with_kw",
            "capsul.study_config.test.test_study_config_configuration",
            "capsul.study_config.test.test_study_config_fom",
            "capsul.test",
            "capsul.test.test_capsul_modules_import",
            "capsul.utils",
            "capsul.utils.function_to_process",
            "capsul.utils.loader",
            "capsul.utils.pilot",
            "capsul.utils.test",
            "capsul.utils.test.module",
            "capsul.utils.test.pipeline",
            "capsul.utils.test.process",
            "capsul.utils.test.test_pilot",
            "capsul.utils.test.test_pipline_wrap",
            "capsul.utils.test.test_process_wrap",
            "capsul.utils.test.test_utils",
            "capsul.utils.version_utils",
            "capsul.utils.xml_to_pipeline"
        ],
        "version": "1.1.0"
    },
    "capsule": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "capsule-cli": {
        "cmdline": [],
        "modules": [
            "capsule",
            "capsule.core",
            "capsule.data",
            "capsule.download"
        ],
        "version": "1.0.1"
    },
    "capsule-crm": {
        "cmdline": [],
        "modules": [
            "capsule_crm"
        ],
        "version": "0.1.2"
    },
    "captain": {
        "cmdline": [],
        "modules": [
            "captain",
            "captain.client",
            "captain.decorators",
            "captain.echo",
            "captain.exception"
        ],
        "version": "0.4.9"
    },
    "captain-pycard": {
        "cmdline": [],
        "modules": [
            "pycard",
            "pycard.card",
            "pycard.holder"
        ],
        "version": "0.9.10"
    },
    "captainhook": {
        "cmdline": [
            "captainhook"
        ],
        "modules": [
            "captainhook",
            "captainhook.checkers",
            "captainhook.checkers.block_branches",
            "captainhook.checkers.flake8_checker",
            "captainhook.checkers.frosted_checker",
            "captainhook.checkers.grep",
            "captainhook.checkers.isort_checker",
            "captainhook.checkers.merge_marks",
            "captainhook.checkers.pdb_checker",
            "captainhook.checkers.pylint_checker",
            "captainhook.checkers.pylint_docstrings_checker",
            "captainhook.checkers.pytest_checker",
            "captainhook.checkers.pytest_coverage_checker",
            "captainhook.checkers.python3",
            "captainhook.checkers.utils",
            "captainhook.pre_commit",
            "test",
            "test.test_checkers",
            "test.test_checkers.test_pdb",
            "test.test_checkers.test_utils",
            "test.test_config_parser",
            "test.test_files",
            "test.test_pre_commit"
        ],
        "version": "0.8.7"
    },
    "captainsoul": {
        "cmdline": [],
        "modules": [
            "cptsoul",
            "cptsoul.addcontactwindow",
            "cptsoul.chatwindow",
            "cptsoul.chatwindow.chatentry",
            "cptsoul.chatwindow.chatstatus",
            "cptsoul.chatwindow.chatview",
            "cptsoul.common",
            "cptsoul.config",
            "cptsoul.config.configfile",
            "cptsoul.config.configtypes",
            "cptsoul.debugwindow",
            "cptsoul.debugwindow.debugentry",
            "cptsoul.debugwindow.debugview",
            "cptsoul.downloadmanager",
            "cptsoul.downloadmanager.askfilewindow",
            "cptsoul.downloadmanager.downloadlist",
            "cptsoul.downloadmanager.tools",
            "cptsoul.downloadmanager.uploadlist",
            "cptsoul.entry_points",
            "cptsoul.getfile",
            "cptsoul.getfile.factory",
            "cptsoul.getfile.protocol",
            "cptsoul.htmltextview",
            "cptsoul.icons",
            "cptsoul.mainwindow",
            "cptsoul.mainwindow.loginlist",
            "cptsoul.mainwindow.mainstatus",
            "cptsoul.mainwindow.toolbar",
            "cptsoul.mainwindow.watchlist",
            "cptsoul.manager",
            "cptsoul.netsoul",
            "cptsoul.netsoul.tools",
            "cptsoul.notify",
            "cptsoul.sendfile",
            "cptsoul.sendfile.factory",
            "cptsoul.sendfile.producer",
            "cptsoul.sendfile.protocol",
            "cptsoul.settingswindow",
            "cptsoul.systray"
        ],
        "version": "0.1.8"
    },
    "captainstar-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "captainwebhook": {
        "cmdline": [],
        "modules": [
            "captainwebhook",
            "captainwebhook.captainwebhook"
        ],
        "version": "0.2.0"
    },
    "captcha": {
        "cmdline": [],
        "modules": [
            "captcha",
            "captcha.audio",
            "captcha.image"
        ],
        "version": "0.2.2"
    },
    "captcha-solver": {
        "cmdline": [],
        "modules": [
            "captcha_solver",
            "captcha_solver.backend",
            "captcha_solver.backend.antigate",
            "captcha_solver.backend.base",
            "captcha_solver.backend.browser",
            "captcha_solver.backend.gui",
            "captcha_solver.backend.rucaptcha",
            "captcha_solver.error",
            "captcha_solver.network",
            "captcha_solver.solver"
        ],
        "version": "0.1.1"
    },
    "captcha2": {
        "cmdline": [],
        "modules": [
            "captcha2",
            "captcha2.captcha2"
        ],
        "version": "0.0.1"
    },
    "captcha2upload": {
        "cmdline": [],
        "modules": [
            "captcha2upload",
            "captcha2upload.captcha2upload"
        ],
        "version": "0.1"
    },
    "captchadecoder": {
        "cmdline": [],
        "modules": [
            "captchadecoder",
            "captchadecoder.captchadecoder",
            "captchadecoder.testcaptcha",
            "captchadecoder.vectorspace"
        ],
        "version": "0.1"
    },
    "captchaimage": {
        "cmdline": [],
        "modules": [],
        "version": "1.4"
    },
    "captchalib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "captchamiddleware": {
        "cmdline": [],
        "modules": [
            "captchamiddleware",
            "captchamiddleware.example",
            "captchamiddleware.middleware"
        ],
        "version": "0.2"
    },
    "captionbot": {
        "cmdline": [],
        "modules": [
            "captionbot",
            "captionbot.captionbot"
        ],
        "version": "0.1.3"
    },
    "captionstransformer": {
        "cmdline": [],
        "modules": [
            "captionstransformer",
            "captionstransformer.core",
            "captionstransformer.registry",
            "captionstransformer.sbv",
            "captionstransformer.script",
            "captionstransformer.srt",
            "captionstransformer.tests",
            "captionstransformer.tests.test_core",
            "captionstransformer.tests.test_sbv",
            "captionstransformer.tests.test_srt",
            "captionstransformer.tests.test_transcript",
            "captionstransformer.tests.test_ttml",
            "captionstransformer.tests.test_youtube",
            "captionstransformer.transcript",
            "captionstransformer.ttml",
            "captionstransformer.youtube"
        ],
        "version": "1.2.1"
    },
    "captiv8": {
        "cmdline": [],
        "modules": [
            "captiv8",
            "captiv8.captiv",
            "captiv8.collect"
        ],
        "version": "0.0.1"
    },
    "captricity-python-client": {
        "cmdline": [],
        "modules": [
            "captools",
            "captools.api",
            "captools.api.application",
            "captools.api.authentication",
            "captools.api.client",
            "captools.api.list-jobs-example",
            "captools.api.multipage-upload-example",
            "captools.api.upload-instances-example",
            "captools.api.util"
        ],
        "version": "0.21"
    },
    "capture": {
        "cmdline": [],
        "modules": [
            "capture"
        ],
        "version": "0.1"
    },
    "capture0": {
        "cmdline": [],
        "modules": [
            "capture0",
            "capture0.config",
            "capture0.decode",
            "capture0.forms",
            "capture0.forms.countries",
            "capture0.forms.home_form",
            "capture0.main",
            "capture0.static",
            "capture0.storage",
            "capture0.templates",
            "capture0_data",
            "capture0_data.company_info",
            "capture0_data.online_handles",
            "capture0_data.online_messages",
            "capture0_data.utils",
            "capture0_static",
            "tmp",
            "tmp.decode_countries"
        ],
        "version": "0.1.45"
    },
    "capturemock": {
        "cmdline": [
            "capturemock"
        ],
        "modules": [
            "capturemock",
            "capturemock.capturecommand",
            "capturemock.capturepython",
            "capturemock.clientservertraffic",
            "capturemock.cmdlineutils",
            "capturemock.commandlinetraffic",
            "capturemock.config",
            "capturemock.customtraffic",
            "capturemock.fileedittraffic",
            "capturemock.pythonclient",
            "capturemock.pythontraffic",
            "capturemock.recordfilehandler",
            "capturemock.replayinfo",
            "capturemock.server",
            "capturemock.test",
            "capturemock.traffic",
            "ordereddict"
        ],
        "version": "1.1.2"
    },
    "capturer": {
        "cmdline": [],
        "modules": [
            "capturer",
            "capturer.tests"
        ],
        "version": "2.4"
    },
    "captureth": {
        "cmdline": [],
        "modules": [
            "captureth",
            "captureth.app",
            "captureth.capture_service"
        ],
        "version": "0.0.6"
    },
    "capuchin": {
        "cmdline": [],
        "modules": [
            "capuchin",
            "capuchin.handlers",
            "capuchin.web"
        ],
        "version": "0.0.6"
    },
    "capy": {
        "cmdline": [],
        "modules": [
            "capy",
            "capy.bds",
            "capy.capy",
            "capy.cmd",
            "capy.conf",
            "capy.device",
            "capy.device_os",
            "capy.test",
            "capy.util"
        ],
        "version": "1.0.9"
    },
    "capybara": {
        "cmdline": [],
        "modules": [
            "capybara",
            "capybara.abst_wrapper",
            "capybara.amazon_wrapper",
            "capybara.api",
            "capybara.capybara",
            "capybara.capybaracli",
            "capybara.rakuten_wrapper"
        ],
        "version": "0.2.0"
    },
    "capybara-py": {
        "cmdline": [],
        "modules": [
            "capybara",
            "capybara.driver",
            "capybara.driver.base",
            "capybara.driver.node",
            "capybara.dsl",
            "capybara.exceptions",
            "capybara.helpers",
            "capybara.node",
            "capybara.node.actions",
            "capybara.node.base",
            "capybara.node.document",
            "capybara.node.document_matchers",
            "capybara.node.element",
            "capybara.node.finders",
            "capybara.node.matchers",
            "capybara.node.simple",
            "capybara.queries",
            "capybara.queries.current_path_query",
            "capybara.queries.selector_query",
            "capybara.queries.text_query",
            "capybara.queries.title_query",
            "capybara.result",
            "capybara.selector",
            "capybara.selector.filter",
            "capybara.selector.filter_set",
            "capybara.selector.selector",
            "capybara.selenium",
            "capybara.selenium.driver",
            "capybara.selenium.node",
            "capybara.server",
            "capybara.session",
            "capybara.session_matchers",
            "capybara.utils",
            "capybara.version",
            "capybara.window"
        ],
        "version": "0.0.2"
    },
    "capysule": {
        "cmdline": [],
        "modules": [
            "capysule",
            "capysule.client",
            "capysule.collection",
            "capysule.resources",
            "capysule.resources.cases",
            "capysule.resources.custom_fields",
            "capysule.resources.history",
            "capysule.resources.parties",
            "capysule.resources.tags",
            "capysule.tests",
            "capysule.util"
        ],
        "version": "0.5.1"
    },
    "car-package": {
        "cmdline": [],
        "modules": [
            "car_package"
        ],
        "version": "0.2"
    },
    "car-wash-queueing": {
        "cmdline": [],
        "modules": [
            "car_wash_queueing"
        ],
        "version": "1.0.1"
    },
    "cara": {
        "cmdline": [],
        "modules": [
            "cara",
            "cara.capnp",
            "cara.capnp.cara_capnp",
            "cara.capnp.cxx_capnp",
            "cara.capnp.persistent_capnp",
            "cara.capnp.rpc_capnp",
            "cara.capnp.rpc_twoparty_capnp",
            "cara.capnp.schema_capnp",
            "cara.cara",
            "cara.cara_pseud",
            "cara.generics",
            "cara.import_hook",
            "cara.list_cache",
            "cara.type_registry"
        ],
        "version": "0.10.3"
    },
    "carafe": {
        "cmdline": [],
        "modules": [
            "carafe",
            "carafe.__meta__",
            "carafe.app",
            "carafe.client",
            "carafe.ext",
            "carafe.ext.auth",
            "carafe.ext.cache",
            "carafe.ext.logger",
            "carafe.ext.session",
            "carafe.request",
            "carafe.response",
            "carafe.utils"
        ],
        "version": "0.4.7"
    },
    "caramel": {
        "cmdline": [],
        "modules": [
            "caramel",
            "caramel.models",
            "caramel.scripts",
            "caramel.scripts.autosign",
            "caramel.scripts.generate_ca",
            "caramel.scripts.initializedb",
            "caramel.scripts.tool",
            "caramel.views",
            "tests",
            "tests.fixtures",
            "tests.test_models",
            "tests.test_views"
        ],
        "version": "1.6.0"
    },
    "caramel-client": {
        "cmdline": [
            "caramel-client"
        ],
        "modules": [
            "caramelrequest",
            "caramelrequest.certificaterequest"
        ],
        "version": "1.2.3"
    },
    "carapace": {
        "cmdline": [],
        "modules": [
            "carapace",
            "carapace.app",
            "carapace.app.cred",
            "carapace.app.service",
            "carapace.app.shell",
            "carapace.app.shell.base",
            "carapace.app.shell.echoshell",
            "carapace.app.shell.pythonshell",
            "carapace.app.shell.service",
            "carapace.config",
            "carapace.meta",
            "carapace.sdk",
            "carapace.sdk.const",
            "carapace.sdk.exceptions",
            "carapace.sdk.interfaces",
            "carapace.sdk.registry",
            "carapace.sdk.scripts",
            "carapace.util",
            "carapace.util.dist",
            "carapace.util.ssh"
        ],
        "version": "0.3.1"
    },
    "caravan": {
        "cmdline": [],
        "modules": [
            "caravan",
            "caravan.commands",
            "caravan.commands.base",
            "caravan.commands.decider",
            "caravan.commands.domain_list",
            "caravan.commands.domain_register",
            "caravan.commands.list",
            "caravan.commands.signal",
            "caravan.commands.start",
            "caravan.commands.terminate",
            "caravan.examples",
            "caravan.examples.demo",
            "caravan.models",
            "caravan.models.decision",
            "caravan.models.workflow",
            "caravan.swf",
            "caravan.testing",
            "caravan.tests",
            "caravan.tests.commands",
            "caravan.tests.commands.test_base",
            "caravan.tests.commands.test_decider",
            "caravan.tests.commands.test_domain_list",
            "caravan.tests.commands.test_domain_register",
            "caravan.tests.commands.test_list",
            "caravan.tests.commands.test_signal",
            "caravan.tests.commands.test_start",
            "caravan.tests.commands.test_terminate",
            "caravan.tests.examples",
            "caravan.tests.examples.test_demo",
            "caravan.tests.fixtures",
            "caravan.tests.models",
            "caravan.tests.models.test_decision",
            "caravan.tests.test_swf",
            "caravan.tests.util",
            "caravan.workers",
            "caravan.workers.decider"
        ],
        "version": "0.2.2"
    },
    "caravel": {
        "cmdline": [
            "caravel"
        ],
        "modules": [
            "caravel",
            "caravel.ascii_art",
            "caravel.bin",
            "caravel.config",
            "caravel.data",
            "caravel.data.countries",
            "caravel.dataframe",
            "caravel.db_engine_specs",
            "caravel.extract_table_names",
            "caravel.forms",
            "caravel.jinja_context",
            "caravel.migrations",
            "caravel.migrations.env",
            "caravel.models",
            "caravel.results_backends",
            "caravel.source_registry",
            "caravel.sql_lab",
            "caravel.utils",
            "caravel.views",
            "caravel.viz"
        ],
        "version": "0.12.0"
    },
    "carbon": {
        "cmdline": [
            "carbon-aggregator.py",
            "carbon-cache.py",
            "carbon-client.py",
            "carbon-relay.py",
            "validate-storage-schemas.py"
        ],
        "modules": [
            "carbon",
            "carbon.aggregator",
            "carbon.aggregator.buffers",
            "carbon.aggregator.processor",
            "carbon.aggregator.rules",
            "carbon.amqp_listener",
            "carbon.amqp_publisher",
            "carbon.cache",
            "carbon.carbon_pb2",
            "carbon.client",
            "carbon.conf",
            "carbon.database",
            "carbon.events",
            "carbon.exceptions",
            "carbon.hashing",
            "carbon.instrumentation",
            "carbon.log",
            "carbon.management",
            "carbon.manhole",
            "carbon.pipeline",
            "carbon.protobuf",
            "carbon.protocols",
            "carbon.regexlist",
            "carbon.relayrules",
            "carbon.rewrite",
            "carbon.routers",
            "carbon.service",
            "carbon.state",
            "carbon.storage",
            "carbon.util",
            "carbon.writer",
            "twisted.plugins.carbon_aggregator_plugin",
            "twisted.plugins.carbon_cache_plugin",
            "twisted.plugins.carbon_relay_plugin"
        ],
        "version": "1.0.1"
    },
    "carbon-client": {
        "cmdline": [],
        "modules": [
            "carbon",
            "carbon.client",
            "carbon.client.compat",
            "carbon.client.decorators",
            "carbon.client.decorators.timeit",
            "carbon.client.extras",
            "carbon.client.metrics",
            "carbon.client.metrics.base",
            "carbon.client.metrics.collector",
            "carbon.client.metrics.heartbeat",
            "carbon.client.metrics.simple",
            "carbon.client.metrics.timer",
            "carbon.client.udp"
        ],
        "version": "0.2.1"
    },
    "carbon-index": {
        "cmdline": [],
        "modules": [
            "carbon_index",
            "carbon_index.index",
            "carbon_index.node",
            "carbon_index.utils",
            "tests",
            "tests.conftest",
            "tests.test_index",
            "tests.test_node"
        ],
        "version": "0.1.4"
    },
    "carbonate": {
        "cmdline": [],
        "modules": [
            "carbonate",
            "carbonate.aggregation",
            "carbonate.cli",
            "carbonate.cluster",
            "carbonate.config",
            "carbonate.fill",
            "carbonate.list",
            "carbonate.lookup",
            "carbonate.sieve",
            "carbonate.stale",
            "carbonate.sync",
            "carbonate.util"
        ],
        "version": "1.0.1"
    },
    "carbondating": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "carbonite": {
        "cmdline": [],
        "modules": [
            "carbonite",
            "carbonite.freeze"
        ],
        "version": "0.0.9"
    },
    "carbonstat": {
        "cmdline": [],
        "modules": [
            "carbonstat"
        ],
        "version": "0.4.6"
    },
    "carbontube": {
        "cmdline": [],
        "modules": [
            "carbontube",
            "carbontube.clients",
            "carbontube.console",
            "carbontube.console.base",
            "carbontube.console.clients",
            "carbontube.console.main",
            "carbontube.console.servers",
            "carbontube.console.web",
            "carbontube.extensions",
            "carbontube.extensions.meta",
            "carbontube.extensions.registry",
            "carbontube.models",
            "carbontube.servers",
            "carbontube.servers.phases",
            "carbontube.servers.pipelines",
            "carbontube.storage",
            "carbontube.storage.base",
            "carbontube.storage.inmemory",
            "carbontube.storage.pyredis",
            "carbontube.util",
            "carbontube.version",
            "carbontube.web"
        ],
        "version": "0.1.0"
    },
    "carboxylic": {
        "cmdline": [],
        "modules": [
            "carboxylic",
            "carboxylic.carboxylic",
            "carboxylic.instruction"
        ],
        "version": "V1.0"
    },
    "carcade": {
        "cmdline": [],
        "modules": [
            "carcade",
            "carcade.cli",
            "carcade.conf",
            "carcade.core",
            "carcade.environments",
            "carcade.exceptions",
            "carcade.global_settings",
            "carcade.i18n",
            "carcade.server",
            "carcade.utils"
        ],
        "version": "0.1"
    },
    "card-validator": {
        "cmdline": [],
        "modules": [
            "cardvalidator",
            "cardvalidator.formatter",
            "cardvalidator.luhn",
            "tests",
            "tests.formatter_spec",
            "tests.luhn_spec"
        ],
        "version": "1.0.0"
    },
    "cardboard": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "carddavclient": {
        "cmdline": [],
        "modules": [
            "carddavclient",
            "carddavclient.addressbook",
            "carddavclient.cmdline",
            "carddavclient.config",
            "carddavclient.localcache",
            "carddavclient.servercomm",
            "carddavclient.tools"
        ],
        "version": "0.1"
    },
    "cardiff": {
        "cmdline": [],
        "modules": [
            "cardiff",
            "cardiff.backends",
            "cardiff.backends.amqp",
            "cardiff.backends.base",
            "cardiff.backends.graphite",
            "cardiff.backends.logger",
            "cardiff.backends.statsd",
            "cardiff.backends.upstream",
            "cardiff.controller",
            "cardiff.servers"
        ],
        "version": "1.2.0"
    },
    "cardify": {
        "cmdline": [
            "cardify_launcher.py"
        ],
        "modules": [
            "cardify",
            "cardify.banner",
            "cardify.utils"
        ],
        "version": "0.1.0"
    },
    "cardigan": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cardinal-pythonlib": {
        "cmdline": [],
        "modules": [
            "cardinal_pythonlib",
            "cardinal_pythonlib.rnc_config",
            "cardinal_pythonlib.rnc_crypto",
            "cardinal_pythonlib.rnc_datetime",
            "cardinal_pythonlib.rnc_db",
            "cardinal_pythonlib.rnc_email",
            "cardinal_pythonlib.rnc_extract_text",
            "cardinal_pythonlib.rnc_lang",
            "cardinal_pythonlib.rnc_log",
            "cardinal_pythonlib.rnc_math",
            "cardinal_pythonlib.rnc_net",
            "cardinal_pythonlib.rnc_nhs",
            "cardinal_pythonlib.rnc_pdf",
            "cardinal_pythonlib.rnc_platform",
            "cardinal_pythonlib.rnc_plot",
            "cardinal_pythonlib.rnc_process",
            "cardinal_pythonlib.rnc_register_db_with_odbc",
            "cardinal_pythonlib.rnc_text",
            "cardinal_pythonlib.rnc_ui",
            "cardinal_pythonlib.rnc_web",
            "cardinal_pythonlib.version",
            "cardinal_pythonlib.wsgi_cache",
            "cardinal_pythonlib.wsgi_errorreporter"
        ],
        "version": "0.2.13"
    },
    "cardinality": {
        "cmdline": [],
        "modules": [
            "cardinality"
        ],
        "version": "0.1.1"
    },
    "cardsource": {
        "cmdline": [],
        "modules": [
            "cardsource",
            "cardsource.cards",
            "cardsource.deck",
            "cardsource.errors",
            "cardsource.games",
            "cardsource.games.blackjack",
            "cardsource.games.blackjack.cards",
            "cardsource.games.blackjack.deck",
            "cardsource.games.blackjack.hand",
            "cardsource.games.blackjack.shoe",
            "cardsource.hand"
        ],
        "version": "0.0.1"
    },
    "cardutils": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "care": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "career": {
        "cmdline": [],
        "modules": [
            "career",
            "career.admin",
            "career.forms",
            "career.migrations",
            "career.migrations.0001_initial",
            "career.models",
            "career.templatetags",
            "career.templatetags.career",
            "career.urls",
            "career.views"
        ],
        "version": "0.0.1"
    },
    "careerbuilder": {
        "cmdline": [],
        "modules": [
            "careerbuilder"
        ],
        "version": "0.1"
    },
    "careerjet-api-client": {
        "cmdline": [],
        "modules": [
            "careerjet_api_client",
            "careerjet_api_client.constants"
        ],
        "version": "3.0.1"
    },
    "carefree-objects": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.post1"
    },
    "careful-requests": {
        "cmdline": [],
        "modules": [
            "careful_requests",
            "careful_requests.careful_requests",
            "careful_requests.more_careful",
            "careful_requests.utils"
        ],
        "version": "0.1.4"
    },
    "carefully": {
        "cmdline": [],
        "modules": [
            "carefully"
        ],
        "version": "0.1.4"
    },
    "carepoint": {
        "cmdline": [],
        "modules": [
            "carepoint",
            "carepoint.db",
            "carepoint.db.carepoint",
            "carepoint.db.db",
            "carepoint.models",
            "carepoint.models.address_mixin",
            "carepoint.models.cph",
            "carepoint.models.cph.account",
            "carepoint.models.cph.account_activity",
            "carepoint.models.cph.address",
            "carepoint.models.cph.dispense",
            "carepoint.models.cph.dispense_price",
            "carepoint.models.cph.doctor",
            "carepoint.models.cph.doctor_address",
            "carepoint.models.cph.doctor_phone",
            "carepoint.models.cph.fdb_allergen",
            "carepoint.models.cph.fdb_allergen_desc",
            "carepoint.models.cph.fdb_allergen_group",
            "carepoint.models.cph.fdb_allergen_rel",
            "carepoint.models.cph.fdb_attr",
            "carepoint.models.cph.fdb_attr_base",
            "carepoint.models.cph.fdb_attr_type",
            "carepoint.models.cph.fdb_form",
            "carepoint.models.cph.fdb_gcn",
            "carepoint.models.cph.fdb_gcn_seq",
            "carepoint.models.cph.fdb_img",
            "carepoint.models.cph.fdb_img_date",
            "carepoint.models.cph.fdb_img_id",
            "carepoint.models.cph.fdb_img_mfg",
            "carepoint.models.cph.fdb_lbl_rid",
            "carepoint.models.cph.fdb_ndc",
            "carepoint.models.cph.fdb_ndc_cs_ext",
            "carepoint.models.cph.fdb_pem_moe",
            "carepoint.models.cph.fdb_pem_mogc",
            "carepoint.models.cph.fdb_price",
            "carepoint.models.cph.fdb_price_type",
            "carepoint.models.cph.fdb_route",
            "carepoint.models.cph.fdb_unit",
            "carepoint.models.cph.item",
            "carepoint.models.cph.order",
            "carepoint.models.cph.order_line",
            "carepoint.models.cph.order_line_non_rx",
            "carepoint.models.cph.order_ship",
            "carepoint.models.cph.order_status",
            "carepoint.models.cph.organization",
            "carepoint.models.cph.organization_address",
            "carepoint.models.cph.pathology",
            "carepoint.models.cph.pathology_code_type",
            "carepoint.models.cph.patient",
            "carepoint.models.cph.patient_address",
            "carepoint.models.cph.patient_allergy",
            "carepoint.models.cph.patient_disease",
            "carepoint.models.cph.patient_phone",
            "carepoint.models.cph.phone",
            "carepoint.models.cph.prescription",
            "carepoint.models.cph.store",
            "carepoint.models.cph.store_address",
            "carepoint.models.cph.store_param",
            "carepoint.models.cph.store_phone",
            "carepoint.models.cph.user",
            "carepoint.models.cph.vendor",
            "carepoint.models.phone_mixin",
            "carepoint.models.state",
            "carepoint.tests",
            "carepoint.tests.db",
            "carepoint.tests.db.db",
            "carepoint.tests.db.test_carepoint",
            "carepoint.tests.db.test_db",
            "carepoint.tests.db.test_models",
            "carepoint.tests.db.test_models.test_model",
            "carepoint.tests.models",
            "carepoint.tests.models.cph",
            "carepoint.tests.models.cph.fixtures",
            "carepoint.tests.models.cph.fixtures.address",
            "carepoint.tests.models.cph.fixtures.dispense",
            "carepoint.tests.models.cph.fixtures.doctor",
            "carepoint.tests.models.cph.fixtures.fdb_form",
            "carepoint.tests.models.cph.fixtures.fdb_gcn",
            "carepoint.tests.models.cph.fixtures.fdb_gcn_seq",
            "carepoint.tests.models.cph.fixtures.fdb_lbl_rid",
            "carepoint.tests.models.cph.fixtures.fdb_ndc",
            "carepoint.tests.models.cph.fixtures.fdb_ndc_cs_ext",
            "carepoint.tests.models.cph.fixtures.fdb_route",
            "carepoint.tests.models.cph.fixtures.item",
            "carepoint.tests.models.cph.fixtures.patient",
            "carepoint.tests.models.cph.fixtures.prescription",
            "carepoint.tests.models.cph.fixtures.store",
            "carepoint.tests.models.cph.fixtures.store_param",
            "carepoint.tests.models.cph.fixtures.user",
            "carepoint.tests.models.cph.test_account",
            "carepoint.tests.models.cph.test_account_activity",
            "carepoint.tests.models.cph.test_address",
            "carepoint.tests.models.cph.test_dispense",
            "carepoint.tests.models.cph.test_dispense_price",
            "carepoint.tests.models.cph.test_doctor",
            "carepoint.tests.models.cph.test_doctor_address",
            "carepoint.tests.models.cph.test_doctor_phone",
            "carepoint.tests.models.cph.test_fdb_allergen",
            "carepoint.tests.models.cph.test_fdb_allergen_desc",
            "carepoint.tests.models.cph.test_fdb_allergen_group",
            "carepoint.tests.models.cph.test_fdb_allergen_rel",
            "carepoint.tests.models.cph.test_fdb_attr",
            "carepoint.tests.models.cph.test_fdb_attr_base",
            "carepoint.tests.models.cph.test_fdb_attr_type",
            "carepoint.tests.models.cph.test_fdb_form",
            "carepoint.tests.models.cph.test_fdb_gcn",
            "carepoint.tests.models.cph.test_fdb_gcn_seq",
            "carepoint.tests.models.cph.test_fdb_img",
            "carepoint.tests.models.cph.test_fdb_img_date",
            "carepoint.tests.models.cph.test_fdb_img_id",
            "carepoint.tests.models.cph.test_fdb_img_mfg",
            "carepoint.tests.models.cph.test_fdb_lbl_rid",
            "carepoint.tests.models.cph.test_fdb_ndc",
            "carepoint.tests.models.cph.test_fdb_ndc_cs_ext",
            "carepoint.tests.models.cph.test_fdb_pem_moe",
            "carepoint.tests.models.cph.test_fdb_pem_mogc",
            "carepoint.tests.models.cph.test_fdb_price",
            "carepoint.tests.models.cph.test_fdb_price_type",
            "carepoint.tests.models.cph.test_fdb_route",
            "carepoint.tests.models.cph.test_fdb_unit",
            "carepoint.tests.models.cph.test_item",
            "carepoint.tests.models.cph.test_order",
            "carepoint.tests.models.cph.test_order_line",
            "carepoint.tests.models.cph.test_order_line_non_rx",
            "carepoint.tests.models.cph.test_order_ship",
            "carepoint.tests.models.cph.test_order_status",
            "carepoint.tests.models.cph.test_organization",
            "carepoint.tests.models.cph.test_organization_address",
            "carepoint.tests.models.cph.test_pathology",
            "carepoint.tests.models.cph.test_pathology_code_type",
            "carepoint.tests.models.cph.test_patient",
            "carepoint.tests.models.cph.test_patient_address",
            "carepoint.tests.models.cph.test_patient_allergy",
            "carepoint.tests.models.cph.test_patient_disease",
            "carepoint.tests.models.cph.test_patient_phone",
            "carepoint.tests.models.cph.test_phone",
            "carepoint.tests.models.cph.test_prescription",
            "carepoint.tests.models.cph.test_store",
            "carepoint.tests.models.cph.test_store_address",
            "carepoint.tests.models.cph.test_store_param",
            "carepoint.tests.models.cph.test_store_phone",
            "carepoint.tests.models.cph.test_user",
            "carepoint.tests.models.cph.test_vendor",
            "carepoint.tests.models.test_address_mixin",
            "carepoint.tests.models.test_phone_mixin"
        ],
        "version": "0.1.8b655"
    },
    "caretaker": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cargo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cargo-lite": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cargo-orm": {
        "cmdline": [],
        "modules": [
            "cargo",
            "cargo.aio",
            "cargo.aio.clients",
            "cargo.aio.orm",
            "cargo.builder",
            "cargo.builder.casts",
            "cargo.builder.comments",
            "cargo.builder.create_shortcuts",
            "cargo.builder.databases",
            "cargo.builder.domains",
            "cargo.builder.drop_shortcuts",
            "cargo.builder.extensions",
            "cargo.builder.extras",
            "cargo.builder.fields",
            "cargo.builder.foreign_keys",
            "cargo.builder.functions",
            "cargo.builder.indexes",
            "cargo.builder.operators",
            "cargo.builder.roles",
            "cargo.builder.rules",
            "cargo.builder.schemas",
            "cargo.builder.sequences",
            "cargo.builder.tables",
            "cargo.builder.tablespaces",
            "cargo.builder.triggers",
            "cargo.builder.types",
            "cargo.builder.utils",
            "cargo.builder.views",
            "cargo.clients",
            "cargo.cursors",
            "cargo.etc",
            "cargo.etc.operators",
            "cargo.etc.passwords",
            "cargo.etc.translator",
            "cargo.etc.translator.postgres",
            "cargo.etc.types",
            "cargo.etc.usernames",
            "cargo.exceptions",
            "cargo.expressions",
            "cargo.fields",
            "cargo.fields.binary",
            "cargo.fields.bit",
            "cargo.fields.boolean",
            "cargo.fields.character",
            "cargo.fields.datetimes",
            "cargo.fields.encrypted",
            "cargo.fields.extras",
            "cargo.fields.field",
            "cargo.fields.geometry",
            "cargo.fields.identifier",
            "cargo.fields.integer",
            "cargo.fields.keyvalue",
            "cargo.fields.networking",
            "cargo.fields.numeric",
            "cargo.fields.ranges",
            "cargo.fields.sequence",
            "cargo.logic",
            "cargo.logic.binary",
            "cargo.logic.bit",
            "cargo.logic.datetimes",
            "cargo.logic.geometry",
            "cargo.logic.keyvalue",
            "cargo.logic.networking",
            "cargo.logic.ranges",
            "cargo.logic.sequence",
            "cargo.orm",
            "cargo.relationships",
            "cargo.statements",
            "cargo.validators"
        ],
        "version": "0.1.1"
    },
    "cargocult": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "caribou": {
        "cmdline": [
            "caribou"
        ],
        "modules": [
            "caribou"
        ],
        "version": "0.2.1"
    },
    "carinata": {
        "cmdline": [
            "carinata"
        ],
        "modules": [
            "carinata",
            "carinata.block",
            "carinata.creator",
            "carinata.management",
            "carinata.utils",
            "carinata/management.commands",
            "carinata/management.commands.spec"
        ],
        "version": "0.12.1"
    },
    "carioca": {
        "cmdline": [],
        "modules": [
            "carioca",
            "carioca.SAM_BA",
            "carioca.Serial",
            "carioca.TTY",
            "carioca.carioca",
            "carioca.commands",
            "carioca.version"
        ],
        "version": "0.92"
    },
    "caritang": {
        "cmdline": [
            "caritang"
        ],
        "modules": [
            "caritang",
            "caritang.bootstrap",
            "caritang.common",
            "caritang.common.version",
            "caritang.core",
            "caritang.core.archiver",
            "caritang.core.caritang",
            "caritang.core.source",
            "caritang.core.storage",
            "caritang.gui",
            "caritang.gui.caritangGui"
        ],
        "version": "0.4.0"
    },
    "carjack": {
        "cmdline": [],
        "modules": [
            "carjack",
            "carjack.cedict",
            "carjack.hsk",
            "carjack.iciba",
            "carjack.util"
        ],
        "version": "0.0.1"
    },
    "carl": {
        "cmdline": [],
        "modules": [
            "carl"
        ],
        "version": "0.0.2"
    },
    "carl001": {
        "cmdline": [],
        "modules": [
            "carl001"
        ],
        "version": "1.4.3"
    },
    "carlcm": {
        "cmdline": [
            "carlcm-bootstrap-council",
            "carlcm-cluster-role",
            "carlcm-counselor",
            "carlcm-run-role"
        ],
        "modules": [
            "carlcm",
            "carlcm.actions",
            "carlcm.actions.action_module",
            "carlcm.actions.aws",
            "carlcm.actions.aws_mock",
            "carlcm.actions.core",
            "carlcm.actions.core_mock",
            "carlcm.configuration_manager",
            "carlcm.counselor",
            "carlcm.internal_utils",
            "carlcm.modules",
            "carlcm.modules.base",
            "carlcm.modules.consul",
            "carlcm.modules.docker",
            "carlcm.modules.example",
            "carlcm.roles",
            "carlcm.roles.example",
            "carlcm.roles.instance_role",
            "carlcm.roles.meta_role",
            "carlcm.splitvers"
        ],
        "version": "0.1.16"
    },
    "carlfg": {
        "cmdline": [
            "cg",
            "clebg"
        ],
        "modules": [
            "cg",
            "cg.ClebschGordan",
            "cg.german"
        ],
        "version": "0.32"
    },
    "carmen": {
        "cmdline": [],
        "modules": [
            "carmen",
            "carmen.cli",
            "carmen.location",
            "carmen.names",
            "carmen.resolver",
            "carmen.resolvers",
            "carmen.resolvers.geocode",
            "carmen.resolvers.place",
            "carmen.resolvers.profile"
        ],
        "version": "0.0.4"
    },
    "carml": {
        "cmdline": [],
        "modules": [
            "carml",
            "carml.carml_check_pypi",
            "carml.carml_circ",
            "carml.carml_cmd",
            "carml.carml_copybin",
            "carml.carml_events",
            "carml.carml_graph",
            "carml.carml_monitor",
            "carml.carml_newid",
            "carml.carml_pastebin",
            "carml.carml_relay",
            "carml.carml_stream",
            "carml.carml_tbb",
            "carml.carml_temphs",
            "carml.carml_tmux",
            "carml.carml_xplanet",
            "carml.cli",
            "carml.click_autodoc",
            "carml.util"
        ],
        "version": "17.4.0"
    },
    "carnarvon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "carnifex": {
        "cmdline": [],
        "modules": [
            "carnifex",
            "carnifex.command",
            "carnifex.endpoint",
            "carnifex.inductor",
            "carnifex.localprocess",
            "carnifex.ssh",
            "carnifex.ssh.client",
            "carnifex.ssh.command",
            "carnifex.ssh.process",
            "carnifex.ssh.session",
            "carnifex.ssh.userauth",
            "carnifex.sshprocess",
            "carnifex.utils"
        ],
        "version": "0.2.5"
    },
    "caro": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "carom": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "carotte": {
        "cmdline": [
            "carotte"
        ],
        "modules": [
            "carotte",
            "carotte.app",
            "carotte.client",
            "carotte.decorator",
            "carotte.exceptions",
            "carotte.results",
            "carotte.results.backends",
            "carotte.results.backends.base_backend",
            "carotte.results.backends.dummy_backend",
            "carotte.results.backends.redis_backend",
            "carotte.task",
            "carotte.worker"
        ],
        "version": "0.2.1"
    },
    "carousel": {
        "cmdline": [],
        "modules": [
            "carousel",
            "carousel.core",
            "carousel.core.calculations",
            "carousel.core.calculators",
            "carousel.core.data_readers",
            "carousel.core.data_sources",
            "carousel.core.exceptions",
            "carousel.core.formulas",
            "carousel.core.layers",
            "carousel.core.models",
            "carousel.core.outputs",
            "carousel.core.simulations",
            "carousel.release_robot",
            "carousel.version"
        ],
        "version": "0.3.1"
    },
    "carp": {
        "cmdline": [],
        "modules": [
            "carp"
        ],
        "version": "0.0.3"
    },
    "carpathview": {
        "cmdline": [],
        "modules": [
            "carpathview",
            "carpathview.car"
        ],
        "version": "1.4.4"
    },
    "carpene-discovery": {
        "cmdline": [],
        "modules": [
            "carpene_discovery"
        ],
        "version": "0.1dev"
    },
    "carpenter": {
        "cmdline": [],
        "modules": [
            "carpenter",
            "carpenter.blocks",
            "carpenter.blocks.block",
            "carpenter.blocks.cellanalyzer",
            "carpenter.blocks.flagable",
            "carpenter.blocks.parentpath",
            "carpenter.blocks.tableanalyzer",
            "carpenter.carpenter",
            "carpenter.regex",
            "carpenter.regex.allregex",
            "carpenter.regex.data",
            "carpenter.regex.date",
            "carpenter.regex.extendedtypes",
            "carpenter.regex.location",
            "carpenter.regex.titles",
            "carpenter.regex.types",
            "tests",
            "tests.analyzer_test",
            "tests.carpenter_test",
            "tests.parentpath",
            "tests.regex_types_test"
        ],
        "version": "1.0.2"
    },
    "carpentry": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "carpentry-ci": {
        "cmdline": [],
        "modules": [
            "carpentry",
            "carpentry.api",
            "carpentry.api.core",
            "carpentry.api.resources",
            "carpentry.cli",
            "carpentry.conf",
            "carpentry.models",
            "carpentry.registry",
            "carpentry.routes",
            "carpentry.server",
            "carpentry.util",
            "carpentry.version",
            "carpentry.workers",
            "carpentry.workers.pipelines",
            "carpentry.workers.steps",
            "carpentry.wsgi"
        ],
        "version": "0.3.0"
    },
    "carpet": {
        "cmdline": [],
        "modules": [
            "carpet"
        ],
        "version": "0.0.4"
    },
    "carpo": {
        "cmdline": [],
        "modules": [
            "carpo",
            "carpo.cli",
            "carpo.record"
        ],
        "version": "0.4"
    },
    "carray": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "carreralib": {
        "cmdline": [],
        "modules": [
            "carreralib",
            "carreralib.bluepy",
            "carreralib.connection",
            "carreralib.cu",
            "carreralib.protocol",
            "carreralib.serial"
        ],
        "version": "0.4.1"
    },
    "carrie": {
        "cmdline": [],
        "modules": [
            "carrie",
            "carrie.daemon",
            "carrie.fifo",
            "carrie.log",
            "carrie.server",
            "carrie.xorg",
            "carrie.xscreensaver"
        ],
        "version": "0.3"
    },
    "carrier": {
        "cmdline": [],
        "modules": [
            "carrier",
            "carrier.config",
            "carrier.config.defaults",
            "carrier.core",
            "carrier.exceptions",
            "carrier.processor",
            "carrier.pypi",
            "carrier.tasks",
            "carrier.tasks.bulk",
            "carrier.utils"
        ],
        "version": "0.1.13"
    },
    "carrollpiproject": {
        "cmdline": [],
        "modules": [
            "CarrollPiProject",
            "CarrollPiProject.DissolvedOxygen",
            "CarrollPiProject.Temperature",
            "CarrollPiProject.Website"
        ],
        "version": "0.2.2"
    },
    "carrot": {
        "cmdline": [],
        "modules": [
            "carrot",
            "carrot.backends",
            "carrot.backends.base",
            "carrot.backends.librabbitmq",
            "carrot.backends.pikachu",
            "carrot.backends.pyamqplib",
            "carrot.backends.pystomp",
            "carrot.backends.queue",
            "carrot.connection",
            "carrot.messaging",
            "carrot.serialization",
            "carrot.utils"
        ],
        "version": "0.10.7"
    },
    "carrots": {
        "cmdline": [],
        "modules": [
            "carrots",
            "carrots.common",
            "carrots.common.functions",
            "carrots.common.microclient",
            "carrots.microconsumer",
            "carrots.microproducer",
            "carrots.microworker"
        ],
        "version": "0.1.14"
    },
    "carson-nester": {
        "cmdline": [],
        "modules": [
            "Carson_nester"
        ],
        "version": "1.3.0"
    },
    "cart2polar": {
        "cmdline": [],
        "modules": [
            "cart2polar",
            "cart2polar.cart2polar"
        ],
        "version": "1.1"
    },
    "carteapi": {
        "cmdline": [],
        "modules": [
            "carteapi",
            "carteapi.base",
            "carteapi.client",
            "carteapi.resources"
        ],
        "version": "0.1.2"
    },
    "carteblanche": {
        "cmdline": [],
        "modules": [
            "carteblanche",
            "carteblanche.base",
            "carteblanche.mixins",
            "carteblanche.tests"
        ],
        "version": "1.0.0"
    },
    "cartesinitprog": {
        "cmdline": [],
        "modules": [
            "Cartes",
            "Cartes.ast",
            "Cartes.core",
            "Cartes.model",
            "Cartes.parser",
            "Cartes.ui"
        ],
        "version": "0.2.2"
    },
    "cartesius": {
        "cmdline": [],
        "modules": [
            "cartesius",
            "cartesius.charts",
            "cartesius.colors",
            "cartesius.elements",
            "cartesius.main",
            "cartesius.utils"
        ],
        "version": "0.2.9"
    },
    "carthage-copy-frameworks": {
        "cmdline": [],
        "modules": [
            "ccp"
        ],
        "version": "1.0.1"
    },
    "cartman": {
        "cmdline": [
            "cm"
        ],
        "modules": [
            "cartman",
            "cartman.app",
            "cartman.compat",
            "cartman.exceptions",
            "cartman.text",
            "cartman.ticket",
            "cartman.ui"
        ],
        "version": "0.2.3"
    },
    "cartodb": {
        "cmdline": [],
        "modules": [
            "cartodb",
            "cartodb.cartodb"
        ],
        "version": "0.8.1"
    },
    "cartodb-backup": {
        "cmdline": [
            "cartodb_backup"
        ],
        "modules": [
            "cartodb_backup",
            "cartodb_backup.cartodb_backup",
            "cartodb_backup.cli"
        ],
        "version": "0.1"
    },
    "cartodb-dashboard": {
        "cmdline": [],
        "modules": [
            "cartodb_dashboard",
            "cartodb_dashboard.cartodb_dashboard"
        ],
        "version": "0.2.11"
    },
    "cartoframes": {
        "cmdline": [],
        "modules": [
            "cartoframes",
            "cartoframes.core",
            "cartoframes.data_obs",
            "cartoframes.maps",
            "cartoframes.styling",
            "cartoframes.utils"
        ],
        "version": "0.1.2"
    },
    "cartographer": {
        "cmdline": [],
        "modules": [
            "cartographer",
            "cartographer.exceptions",
            "cartographer.exceptions.request_exceptions",
            "cartographer.field_types",
            "cartographer.field_types.array_relationship",
            "cartographer.field_types.bool_attribute",
            "cartographer.field_types.date_attribute",
            "cartographer.field_types.enum_attribute",
            "cartographer.field_types.int_attribute",
            "cartographer.field_types.json_attribute",
            "cartographer.field_types.schema_attribute",
            "cartographer.field_types.schema_relationship",
            "cartographer.field_types.string_attribute",
            "cartographer.parsers",
            "cartographer.parsers.jsonapi_parser",
            "cartographer.parsers.schema_parser",
            "cartographer.permissions",
            "cartographer.permissions.base_mask",
            "cartographer.requests",
            "cartographer.requests.jsonapi_flask_request_mixin",
            "cartographer.requests.jsonapi_request_interface",
            "cartographer.requests.session_interface",
            "cartographer.resources",
            "cartographer.resources.api_resource",
            "cartographer.resources.resource_registry",
            "cartographer.schemas",
            "cartographer.schemas.schema",
            "cartographer.serializers",
            "cartographer.serializers.jsonapi_collection_serializer",
            "cartographer.serializers.jsonapi_null_serializer",
            "cartographer.serializers.jsonapi_serializer",
            "cartographer.serializers.schema_serializer",
            "cartographer.utils",
            "cartographer.utils.collections",
            "cartographer.utils.config",
            "cartographer.utils.datetime",
            "cartographer.utils.version"
        ],
        "version": "0.2.0-alpha5"
    },
    "carton": {
        "cmdline": [],
        "modules": [
            "carton"
        ],
        "version": "0.3"
    },
    "cartopy": {
        "cmdline": [],
        "modules": [
            "cartopy",
            "cartopy._epsg",
            "cartopy.crs",
            "cartopy.examples",
            "cartopy.examples.always_circular_stereo",
            "cartopy.examples.arrows",
            "cartopy.examples.aurora_forecast",
            "cartopy.examples.barbs",
            "cartopy.examples.eccentric_ellipse",
            "cartopy.examples.effects_of_the_ellipse",
            "cartopy.examples.eyja_volcano",
            "cartopy.examples.favicon",
            "cartopy.examples.feature_creation",
            "cartopy.examples.features",
            "cartopy.examples.geostationary",
            "cartopy.examples.global_map",
            "cartopy.examples.hurricane_katrina",
            "cartopy.examples.image_tiles",
            "cartopy.examples.logo",
            "cartopy.examples.regridding_arrows",
            "cartopy.examples.rotated_pole",
            "cartopy.examples.srtm_shading",
            "cartopy.examples.star_shaped_boundary",
            "cartopy.examples.streamplot",
            "cartopy.examples.tick_labels",
            "cartopy.examples.tissot",
            "cartopy.examples.tube_stations",
            "cartopy.examples.un_flag",
            "cartopy.examples.waves",
            "cartopy.examples.wms",
            "cartopy.examples.wmts",
            "cartopy.feature",
            "cartopy.geodesic",
            "cartopy.img_transform",
            "cartopy.io",
            "cartopy.io.img_nest",
            "cartopy.io.img_tiles",
            "cartopy.io.ogc_clients",
            "cartopy.io.shapereader",
            "cartopy.io.srtm",
            "cartopy.mpl",
            "cartopy.mpl.clip_path",
            "cartopy.mpl.feature_artist",
            "cartopy.mpl.geoaxes",
            "cartopy.mpl.gridliner",
            "cartopy.mpl.patch",
            "cartopy.mpl.slippy_image_artist",
            "cartopy.mpl.ticker",
            "cartopy.sphinxext",
            "cartopy.sphinxext.gallery",
            "cartopy.sphinxext.summarise_package",
            "cartopy.tests",
            "cartopy.tests.crs",
            "cartopy.tests.crs.test_albers_equal_area",
            "cartopy.tests.crs.test_azimuthal_equidistant",
            "cartopy.tests.crs.test_geostationary",
            "cartopy.tests.crs.test_lambert_azimuthal_equal_area",
            "cartopy.tests.crs.test_lambert_conformal",
            "cartopy.tests.crs.test_mercator",
            "cartopy.tests.crs.test_robinson",
            "cartopy.tests.crs.test_rotated_geodetic",
            "cartopy.tests.crs.test_rotated_pole",
            "cartopy.tests.crs.test_sinusoidal",
            "cartopy.tests.crs.test_stereographic",
            "cartopy.tests.crs.test_transverse_mercator",
            "cartopy.tests.io",
            "cartopy.tests.io.test_downloaders",
            "cartopy.tests.io.test_ogc_clients",
            "cartopy.tests.io.test_srtm",
            "cartopy.tests.mpl",
            "cartopy.tests.mpl.test_axes",
            "cartopy.tests.mpl.test_caching",
            "cartopy.tests.mpl.test_crs",
            "cartopy.tests.mpl.test_examples",
            "cartopy.tests.mpl.test_features",
            "cartopy.tests.mpl.test_gridliner",
            "cartopy.tests.mpl.test_images",
            "cartopy.tests.mpl.test_img_transform",
            "cartopy.tests.mpl.test_mpl_integration",
            "cartopy.tests.mpl.test_patch",
            "cartopy.tests.mpl.test_pseudo_color",
            "cartopy.tests.mpl.test_quiver",
            "cartopy.tests.mpl.test_set_extent",
            "cartopy.tests.mpl.test_shapely_to_mpl",
            "cartopy.tests.mpl.test_ticker",
            "cartopy.tests.mpl.test_ticks",
            "cartopy.tests.mpl.test_web_services",
            "cartopy.tests.test_coastline",
            "cartopy.tests.test_coding_standards",
            "cartopy.tests.test_crs",
            "cartopy.tests.test_crs_transform_vectors",
            "cartopy.tests.test_geodesic",
            "cartopy.tests.test_img_nest",
            "cartopy.tests.test_img_tiles",
            "cartopy.tests.test_img_transform",
            "cartopy.tests.test_line_string",
            "cartopy.tests.test_linear_ring",
            "cartopy.tests.test_polygon",
            "cartopy.tests.test_shapereader",
            "cartopy.tests.test_util",
            "cartopy.tests.test_vector_transform",
            "cartopy.util",
            "cartopy.vector_transform"
        ],
        "version": "0.14.2"
    },
    "cartouche": {
        "cmdline": [],
        "modules": [
            "cartouche",
            "cartouche._portability",
            "cartouche.errors",
            "cartouche.nodes",
            "cartouche.parser",
            "cartouche.sphinxext",
            "cartouche.version"
        ],
        "version": "1.1.2"
    },
    "cartoview": {
        "cmdline": [],
        "modules": [
            "cartoview",
            "cartoview.app_manager",
            "cartoview.app_manager.admin",
            "cartoview.app_manager.api",
            "cartoview.app_manager.config",
            "cartoview.app_manager.context_processors",
            "cartoview.app_manager.forms",
            "cartoview.app_manager.installer",
            "cartoview.app_manager.models",
            "cartoview.app_manager.resources",
            "cartoview.app_manager.rest",
            "cartoview.app_manager.serializers",
            "cartoview.app_manager.settings",
            "cartoview.app_manager.tests",
            "cartoview.app_manager.urls",
            "cartoview.app_manager.views",
            "cartoview.celeryapp",
            "cartoview.middleware",
            "cartoview.middleware.limit_domains",
            "cartoview.pre_settings",
            "cartoview.proxy",
            "cartoview.proxy.urls",
            "cartoview.proxy.views",
            "cartoview.settings",
            "cartoview.templatetags",
            "cartoview.templatetags.cartoview_tags",
            "cartoview.urls",
            "cartoview.user_engage",
            "cartoview.user_engage.admin",
            "cartoview.user_engage.models",
            "cartoview.user_engage.rest",
            "cartoview.user_engage.urls",
            "cartoview.user_engage.viewer_widgets",
            "cartoview.views",
            "cartoview.wsgi"
        ],
        "version": "1.1.24"
    },
    "cartridge": {
        "cmdline": [],
        "modules": [
            "cartridge",
            "cartridge.project_template",
            "cartridge.project_template.manage",
            "cartridge.project_template.project_name",
            "cartridge.project_template.project_name.settings",
            "cartridge.project_template.project_name.urls",
            "cartridge.shop",
            "cartridge.shop.admin",
            "cartridge.shop.checkout",
            "cartridge.shop.context_processors",
            "cartridge.shop.defaults",
            "cartridge.shop.fields",
            "cartridge.shop.forms",
            "cartridge.shop.management",
            "cartridge.shop.management.commands",
            "cartridge.shop.management.commands.product_db",
            "cartridge.shop.managers",
            "cartridge.shop.middleware",
            "cartridge.shop.migrations",
            "cartridge.shop.migrations.0001_initial",
            "cartridge.shop.migrations.0002_auto_20141227_1331",
            "cartridge.shop.migrations.0003_emailfield",
            "cartridge.shop.migrations.0004_productimage_file_field",
            "cartridge.shop.migrations.0005_auto_20150527_1127",
            "cartridge.shop.migrations.0006_auto_20150916_0459",
            "cartridge.shop.migrations.0007_auto_20150921_2323",
            "cartridge.shop.models",
            "cartridge.shop.page_processors",
            "cartridge.shop.payment",
            "cartridge.shop.payment.authorizenet",
            "cartridge.shop.payment.egate",
            "cartridge.shop.payment.paypal",
            "cartridge.shop.payment.stripe_api",
            "cartridge.shop.templatetags",
            "cartridge.shop.templatetags.shop_tags",
            "cartridge.shop.tests",
            "cartridge.shop.translation",
            "cartridge.shop.urls",
            "cartridge.shop.utils",
            "cartridge.shop.views"
        ],
        "version": "0.12.0"
    },
    "cartridge-braintree": {
        "cmdline": [],
        "modules": [
            "cartridge_braintree",
            "cartridge_braintree.braintree_payment",
            "cartridge_braintree.countries",
            "cartridge_braintree.defaults",
            "cartridge_braintree.forms",
            "cartridge_braintree.urls",
            "cartridge_braintree.utils"
        ],
        "version": "1.1.0"
    },
    "cartridge-downloads": {
        "cmdline": [],
        "modules": [
            "cartridge_downloads",
            "cartridge_downloads.admin",
            "cartridge_downloads.apps",
            "cartridge_downloads.cartridge_override_urls",
            "cartridge_downloads.checkout",
            "cartridge_downloads.migrations",
            "cartridge_downloads.migrations.0001_initial",
            "cartridge_downloads.migrations.0002_v0_3_0",
            "cartridge_downloads.models",
            "cartridge_downloads.page_processors",
            "cartridge_downloads.signals",
            "cartridge_downloads.templatetags",
            "cartridge_downloads.templatetags.downloads",
            "cartridge_downloads.urls",
            "cartridge_downloads.utils",
            "cartridge_downloads.views",
            "cartridge_downloads.views.override_cartridge",
            "cartridge_downloads.views.override_filebrowser",
            "cartridge_downloads.views.views"
        ],
        "version": "0.3.9"
    },
    "cartridge-payments": {
        "cmdline": [],
        "modules": [
            "payments",
            "payments.multipayments",
            "payments.multipayments.const",
            "payments.multipayments.context_processors",
            "payments.multipayments.forms",
            "payments.multipayments.forms.base",
            "payments.multipayments.forms.google",
            "payments.multipayments.forms.paypal",
            "payments.multipayments.templatetags",
            "payments.multipayments.templatetags.multipayment_forms"
        ],
        "version": "0.97.0"
    },
    "cartridge-stats": {
        "cmdline": [],
        "modules": [
            "cartridge-stats"
        ],
        "version": "0.1"
    },
    "cartridge-stripe": {
        "cmdline": [],
        "modules": [
            "cartridge_stripe",
            "cartridge_stripe.forms",
            "cartridge_stripe.models",
            "cartridge_stripe.views"
        ],
        "version": "0.1.3"
    },
    "cartridge-tax": {
        "cmdline": [],
        "modules": [
            "cartridge_tax",
            "cartridge_tax.admin",
            "cartridge_tax.checkout",
            "cartridge_tax.defaults",
            "cartridge_tax.forms",
            "cartridge_tax.models",
            "cartridge_tax.templatetags",
            "cartridge_tax.templatetags.tax_tags",
            "cartridge_tax.tests",
            "cartridge_tax.utils"
        ],
        "version": "0.0.3"
    },
    "cartwright": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "carvepi": {
        "cmdline": [],
        "modules": [
            "CarvePi.main",
            "CarvePi.setup"
        ],
        "version": "0.1"
    },
    "carvepie": {
        "cmdline": [],
        "modules": [
            "CarvePie"
        ],
        "version": "0.2"
    },
    "cary": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "cary-fortunecommand": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "cary-nester": {
        "cmdline": [],
        "modules": [
            "Cary_nester"
        ],
        "version": "1.2.0"
    },
    "cary-perdiemcommand": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "cary-travelcommand": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "cas": {
        "cmdline": [],
        "modules": [
            "cas",
            "xca"
        ],
        "version": "1.22"
    },
    "cas-bottle": {
        "cmdline": [],
        "modules": [
            "CAS_bottle",
            "test_cas_bottle"
        ],
        "version": "1.1"
    },
    "cas-client": {
        "cmdline": [],
        "modules": [
            "cas_client",
            "cas_client._version",
            "cas_client.cas_client"
        ],
        "version": "0.1.3"
    },
    "casa-collector-routeros": {
        "cmdline": [],
        "modules": [
            "casa_collector_routeros.collector"
        ],
        "version": "0.3.0"
    },
    "casadi": {
        "cmdline": [],
        "modules": [
            "casadi",
            "casadi.casadi",
            "casadi.tools",
            "casadi.tools.bounds",
            "casadi.tools.graph",
            "casadi.tools.graph.graph",
            "casadi.tools.io",
            "casadi.tools.structure",
            "casadi.tools.structure3"
        ],
        "version": "3.1.1"
    },
    "casava": {
        "cmdline": [],
        "modules": [
            "casava",
            "casava.reader_impl",
            "casava.tests",
            "casava.tests.test_functional"
        ],
        "version": "0.1"
    },
    "cascade": {
        "cmdline": [],
        "modules": [
            "cascade",
            "cascade.imap_copy",
            "cascade.imap_server",
            "cmd",
            "cmd.app"
        ],
        "version": "0.1"
    },
    "cascadenik": {
        "cmdline": [
            "cascadenik-compile.py",
            "cascadenik-extract-dscfg.py",
            "cascadenik-style.py"
        ],
        "modules": [
            "cascadenik",
            "cascadenik.compile",
            "cascadenik.nonposix",
            "cascadenik.output",
            "cascadenik.parse",
            "cascadenik.safe64",
            "cascadenik.sources",
            "cascadenik.style",
            "cascadenik.tests"
        ],
        "version": "2.7.0"
    },
    "cascadict": {
        "cmdline": [],
        "modules": [
            "cascadict",
            "cascadict.cascadict",
            "cascadict.sandbox",
            "cascadict.test_cascadict"
        ],
        "version": "0.8.4"
    },
    "cascajal": {
        "cmdline": [],
        "modules": [
            "cascajal",
            "cascajal.cli",
            "cascajal.profile",
            "cascajal.tests",
            "cascajal.tests.profile_tests"
        ],
        "version": "0.1"
    },
    "casconfig": {
        "cmdline": [],
        "modules": [
            "casconfig"
        ],
        "version": "0.0.4"
    },
    "case": {
        "cmdline": [],
        "modules": [
            "case",
            "case.case",
            "case.mock",
            "case.pytest",
            "case.skip",
            "case.tests",
            "case.utils"
        ],
        "version": "1.5.3"
    },
    "case-class": {
        "cmdline": [],
        "modules": [
            "case_class",
            "case_class.case_class",
            "case_class.clsutils",
            "case_class.exceptions",
            "case_class.signature",
            "case_class.utils"
        ],
        "version": "0.0.8"
    },
    "case-conversion": {
        "cmdline": [],
        "modules": [
            "case_conversion",
            "case_conversion.case_conversion",
            "case_conversion.case_parse"
        ],
        "version": "2.1.0"
    },
    "case-insensitive-dict": {
        "cmdline": [],
        "modules": [
            "case_insensitive_dict",
            "case_insensitive_dict.case_insensitive_dict",
            "case_insensitive_dict.utils"
        ],
        "version": "0.1.3"
    },
    "caseinsensitivedict": {
        "cmdline": [],
        "modules": [
            "CaseInsensitiveDict",
            "CaseInsensitiveDict.CaseInsensitiveDict"
        ],
        "version": "1.0.0"
    },
    "caselib": {
        "cmdline": [],
        "modules": [
            "caselib"
        ],
        "version": "0.1.2"
    },
    "casemaker": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "casepro.pods.dummy": {
        "cmdline": [],
        "modules": [
            "casepro.pods.dummy",
            "casepro.pods.dummy.plugin"
        ],
        "version": "0.2.1"
    },
    "casepropods.dummy": {
        "cmdline": [],
        "modules": [
            "casepropods.dummy",
            "casepropods.dummy.plugin"
        ],
        "version": "0.2.4"
    },
    "casepropods.family-connect-registration": {
        "cmdline": [],
        "modules": [
            "casepropods.family_connect_registration",
            "casepropods.family_connect_registration.plugin",
            "casepropods.family_connect_registration.tests"
        ],
        "version": "0.1.4"
    },
    "casepropods.family-connect-subscription": {
        "cmdline": [],
        "modules": [
            "casepropods.family_connect_subscription",
            "casepropods.family_connect_subscription.plugin",
            "casepropods.family_connect_subscription.tests"
        ],
        "version": "0.3.3"
    },
    "caserecommender": {
        "cmdline": [],
        "modules": [
            "framework",
            "framework.evaluation",
            "framework.evaluation.item_recommendation",
            "framework.evaluation.rating_prediction",
            "framework.evaluation.statistical_analysis",
            "framework.recommenders",
            "framework.recommenders.item_recommendation",
            "framework.recommenders.item_recommendation.base_ensemble",
            "framework.recommenders.item_recommendation.bprmf",
            "framework.recommenders.item_recommendation.ensemble_average_based",
            "framework.recommenders.item_recommendation.ensemble_bpr_learning",
            "framework.recommenders.item_recommendation.ensemble_tag_based",
            "framework.recommenders.item_recommendation.item_attribute_knn",
            "framework.recommenders.item_recommendation.itemknn",
            "framework.recommenders.item_recommendation.userBprMF",
            "framework.recommenders.item_recommendation.user_attribute_knn",
            "framework.recommenders.item_recommendation.userknn",
            "framework.recommenders.rating_prediction",
            "framework.recommenders.rating_prediction.base_knn",
            "framework.recommenders.rating_prediction.base_nsvd1",
            "framework.recommenders.rating_prediction.item_attribute_knn",
            "framework.recommenders.rating_prediction.item_nsvd1",
            "framework.recommenders.rating_prediction.itemknn",
            "framework.recommenders.rating_prediction.matrixfactorization",
            "framework.recommenders.rating_prediction.user_attribute_knn",
            "framework.recommenders.rating_prediction.user_nsvd1",
            "framework.recommenders.rating_prediction.userknn",
            "framework.utils",
            "framework.utils.cross_fold_validation",
            "framework.utils.extra_functions",
            "framework.utils.read_file",
            "framework.utils.split_dataset",
            "framework.utils.treat_data",
            "framework.utils.write_file"
        ],
        "version": "0.0.13"
    },
    "cases": {
        "cmdline": [],
        "modules": [
            "cases",
            "cases.casegen"
        ],
        "version": "0.1.13"
    },
    "casetagger": {
        "cmdline": [],
        "modules": [
            "casetagger",
            "casetagger.cli",
            "casetagger.config",
            "casetagger.db",
            "casetagger.debug",
            "casetagger.logger",
            "casetagger.models",
            "casetagger.tagger",
            "casetagger.util"
        ],
        "version": "0.4.3"
    },
    "casexml": {
        "cmdline": [],
        "modules": [
            "casexml",
            "casexml.apps",
            "casexml.apps.case",
            "casexml.apps.case.const",
            "casexml.apps.case.exceptions",
            "casexml.apps.case.models",
            "casexml.apps.case.sharedmodels",
            "casexml.apps.case.signals",
            "casexml.apps.case.templatetags",
            "casexml.apps.case.templatetags.case_tags",
            "casexml.apps.case.tests",
            "casexml.apps.case.tests.test_attachments",
            "casexml.apps.case.tests.test_bugs",
            "casexml.apps.case.tests.test_const",
            "casexml.apps.case.tests.test_exclusion",
            "casexml.apps.case.tests.test_force_save",
            "casexml.apps.case.tests.test_from_xform",
            "casexml.apps.case.tests.test_indexes",
            "casexml.apps.case.tests.test_multi_case_submits",
            "casexml.apps.case.tests.test_ota_restore",
            "casexml.apps.case.tests.test_rebuild",
            "casexml.apps.case.tests.test_v2_parsing",
            "casexml.apps.case.tests.util",
            "casexml.apps.case.util",
            "casexml.apps.case.xform",
            "casexml.apps.case.xml",
            "casexml.apps.case.xml.generator",
            "casexml.apps.case.xml.parser",
            "casexml.apps.phone",
            "casexml.apps.phone.caselogic",
            "casexml.apps.phone.checksum",
            "casexml.apps.phone.fixtures",
            "casexml.apps.phone.middleware",
            "casexml.apps.phone.models",
            "casexml.apps.phone.restore",
            "casexml.apps.phone.signals",
            "casexml.apps.phone.templatetags",
            "casexml.apps.phone.templatetags.sync_log_tags",
            "casexml.apps.phone.tests",
            "casexml.apps.phone.tests.const",
            "casexml.apps.phone.tests.dummy",
            "casexml.apps.phone.tests.test_ota_restore",
            "casexml.apps.phone.tests.test_state_hash",
            "casexml.apps.phone.tests.test_sync_logs",
            "casexml.apps.phone.tests.test_sync_mode",
            "casexml.apps.phone.urls",
            "casexml.apps.phone.views",
            "casexml.apps.phone.xml"
        ],
        "version": "1.0.0"
    },
    "cash": {
        "cmdline": [],
        "modules": [
            "cash",
            "cash.accessory",
            "cash.cash",
            "cash.converter",
            "cash.graph"
        ],
        "version": "0.1a1"
    },
    "cashed": {
        "cmdline": [],
        "modules": [
            "cashed",
            "cashed.cache",
            "tests",
            "tests.test_simple"
        ],
        "version": "0.2.0"
    },
    "cashew": {
        "cmdline": [],
        "modules": [
            "cashew",
            "cashew.exceptions",
            "cashew.plugin",
            "example",
            "example.classes",
            "example.classes1",
            "example.classes2",
            "example.usage1",
            "example.usage2",
            "output",
            "output.classes",
            "output.classes1",
            "output.classes2",
            "output.usage1",
            "output.usage2"
        ],
        "version": "0.2.7"
    },
    "cashflow": {
        "cmdline": [],
        "modules": [
            "cashflow",
            "cashflow.analyze",
            "cashflow.book",
            "cashflow.command",
            "cashflow.format",
            "cashflow.oxm",
            "cashflow.reports",
            "cashflow.tests"
        ],
        "version": "1.0"
    },
    "cashflows": {
        "cmdline": [],
        "modules": [
            "cashflows",
            "cashflows.basics",
            "cashflows.bond",
            "cashflows.depreciation",
            "cashflows.gcashana",
            "cashflows.gcashcomp",
            "cashflows.gtimeseries",
            "cashflows.loan",
            "cashflows.savings",
            "cashflows.utilityfun"
        ],
        "version": "0.1.5"
    },
    "cashier": {
        "cmdline": [],
        "modules": [
            "cashier/__init__"
        ],
        "version": "1.3"
    },
    "cashmake": {
        "cmdline": [],
        "modules": [
            "api_1_0",
            "api_1_0.operations",
            "api_1_0.operations.bank",
            "lib",
            "lib.operations",
            "lib.operations.bank",
            "lib.utils",
            "main",
            "main.view"
        ],
        "version": "0.1"
    },
    "cashstockreporter": {
        "cmdline": [],
        "modules": [
            "cashStockReporter.cashStockReporter"
        ],
        "version": "1.01"
    },
    "casiopeia": {
        "cmdline": [],
        "modules": [
            "casiopeia",
            "casiopeia.discretization",
            "casiopeia.discretization.discretization",
            "casiopeia.discretization.nodiscretization",
            "casiopeia.discretization.odecollocation",
            "casiopeia.discretization.odemultipleshooting",
            "casiopeia.doe",
            "casiopeia.inputchecks",
            "casiopeia.interfaces",
            "casiopeia.interfaces.casadi_interface",
            "casiopeia.intro",
            "casiopeia.matrices",
            "casiopeia.pe",
            "casiopeia.sim",
            "casiopeia.system"
        ],
        "version": "0.2.0"
    },
    "casjobs": {
        "cmdline": [],
        "modules": [
            "casjobs"
        ],
        "version": "0.0.1"
    },
    "cask": {
        "cmdline": [],
        "modules": [
            "cask"
        ],
        "version": "0.1.1"
    },
    "cask-elixir": {
        "cmdline": [],
        "modules": [
            "elixir",
            "elixir.app",
            "elixir.controller",
            "elixir.directive",
            "elixir.model",
            "elixir.module",
            "elixir.service",
            "elixir.view"
        ],
        "version": "0.1.0"
    },
    "casket": {
        "cmdline": [],
        "modules": [
            "casket",
            "casket.callback",
            "casket.db",
            "casket.experiment",
            "casket.git",
            "casket.nlp_utils",
            "casket.nlp_utils.corpus",
            "casket.nlp_utils.indexer",
            "casket.sftp_storage",
            "casket.utils"
        ],
        "version": "0.0.8a0"
    },
    "caslib": {
        "cmdline": [],
        "modules": [
            "caslib",
            "caslib.cas_dance",
            "caslib.test_cas_dance",
            "caslib.validating_https"
        ],
        "version": "0.3.1"
    },
    "caslib.py": {
        "cmdline": [],
        "modules": [
            "caslib"
        ],
        "version": "2.2.2"
    },
    "caso": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "casper": {
        "cmdline": [],
        "modules": [
            "casper",
            "casper.demo",
            "casper.demo.module",
            "casper.info",
            "casper.lib",
            "casper.lib.base",
            "casper.lib.base.observable",
            "casper.lib.base.observable_list",
            "casper.lib.base.topological_sort",
            "casper.lib.base.xmltodict",
            "casper.lib.controls",
            "casper.lib.controls.base",
            "casper.lib.controls.directory",
            "casper.lib.controls.enum",
            "casper.lib.controls.file",
            "casper.lib.controls.float",
            "casper.lib.controls.int",
            "casper.lib.controls.list",
            "casper.lib.controls.object",
            "casper.lib.controls.string",
            "casper.pipeline",
            "casper.pipeline.bbox",
            "casper.pipeline.ibox",
            "casper.pipeline.link_parser",
            "casper.pipeline.pbox",
            "casper.pipeline.utils",
            "casper.view",
            "casper.view.colors",
            "casper.view.pipeline_viewer"
        ],
        "version": "1.0.0"
    },
    "caspo": {
        "cmdline": [],
        "modules": [
            "caspo",
            "caspo.classify",
            "caspo.console",
            "caspo.console.handlers",
            "caspo.console.main",
            "caspo.control",
            "caspo.core",
            "caspo.core.clamping",
            "caspo.core.clause",
            "caspo.core.dataset",
            "caspo.core.graph",
            "caspo.core.hypergraph",
            "caspo.core.literal",
            "caspo.core.logicalnetwork",
            "caspo.core.mapping",
            "caspo.core.setup",
            "caspo.design",
            "caspo.learn",
            "caspo.predict",
            "caspo.visualize"
        ],
        "version": "3.0.1"
    },
    "caspy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "caspyr": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cassandra": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cassandra-backups": {
        "cmdline": [],
        "modules": [
            "cassandra_backups",
            "cassandra_backups.agent",
            "cassandra_backups.logging_helper",
            "cassandra_backups.main",
            "cassandra_backups.snapshotting",
            "cassandra_backups.timeout",
            "cassandra_backups.utils"
        ],
        "version": "0.7"
    },
    "cassandra-cql": {
        "cmdline": [
            "cassandra-cql"
        ],
        "modules": [
            "cassandra_cql",
            "cassandra_cql.bcolors"
        ],
        "version": "0.9.0"
    },
    "cassandra-dataset-manager": {
        "cmdline": [],
        "modules": [
            "cdm",
            "cdm.cli",
            "cdm.commands",
            "cdm.commands.command",
            "cdm.commands.install",
            "cdm.commands.search",
            "cdm.commands.stream",
            "cdm.config",
            "cdm.context",
            "cdm.importer",
            "cdm.installer",
            "cdm.models",
            "cdm.notebook",
            "cdm.testing",
            "cdm.util",
            "tests",
            "tests.test_context",
            "tests.test_importer",
            "tests.test_installer",
            "tests.test_search"
        ],
        "version": "0.5"
    },
    "cassandra-driver": {
        "cmdline": [],
        "modules": [
            "cassandra",
            "cassandra.auth",
            "cassandra.cluster",
            "cassandra.concurrent",
            "cassandra.connection",
            "cassandra.cqlengine",
            "cassandra.cqlengine.columns",
            "cassandra.cqlengine.connection",
            "cassandra.cqlengine.functions",
            "cassandra.cqlengine.management",
            "cassandra.cqlengine.models",
            "cassandra.cqlengine.named",
            "cassandra.cqlengine.operators",
            "cassandra.cqlengine.query",
            "cassandra.cqlengine.statements",
            "cassandra.cqlengine.usertype",
            "cassandra.cqltypes",
            "cassandra.cython_deps",
            "cassandra.encoder",
            "cassandra.io",
            "cassandra.io.asyncorereactor",
            "cassandra.io.eventletreactor",
            "cassandra.io.geventreactor",
            "cassandra.io.libevreactor",
            "cassandra.io.twistedreactor",
            "cassandra.marshal",
            "cassandra.metadata",
            "cassandra.metrics",
            "cassandra.murmur3",
            "cassandra.policies",
            "cassandra.pool",
            "cassandra.protocol",
            "cassandra.query",
            "cassandra.timestamps",
            "cassandra.type_codes",
            "cassandra.util"
        ],
        "version": "3.9.0"
    },
    "cassandra-driver-dse": {
        "cmdline": [],
        "modules": [
            "dse",
            "dse.auth",
            "dse.cluster",
            "dse.cqltypes",
            "dse.graph",
            "dse.marshal",
            "dse.policies",
            "dse.query",
            "dse.util"
        ],
        "version": "1.1.0"
    },
    "cassandra-flask-sessions": {
        "cmdline": [],
        "modules": [
            "cassandra_flask_sessions"
        ],
        "version": "0.3"
    },
    "cassandra-helpers": {
        "cmdline": [],
        "modules": [
            "cassandra_helpers",
            "cassandra_helpers.connectable",
            "cassandra_helpers.keyspace",
            "cassandra_helpers.models"
        ],
        "version": "0.0.0"
    },
    "cassandra-migrate": {
        "cmdline": [
            "cassandra-migrate"
        ],
        "modules": [
            "cassandra_migrate",
            "cassandra_migrate.cli",
            "cassandra_migrate.config",
            "cassandra_migrate.cql",
            "cassandra_migrate.migration",
            "cassandra_migrate.migrator"
        ],
        "version": "0.1.5"
    },
    "cassandra-migrator": {
        "cmdline": [
            "cmig"
        ],
        "modules": [
            "migrator"
        ],
        "version": "0.1.4"
    },
    "cassandra-quickstart": {
        "cmdline": [],
        "modules": [
            "cassandra_quickstart",
            "cassandra_quickstart.config",
            "cassandra_quickstart.java",
            "cassandra_quickstart.main",
            "cassandra_quickstart.util"
        ],
        "version": "0.1.2"
    },
    "cassandra-snapshotter": {
        "cmdline": [],
        "modules": [
            "cassandra_snapshotter",
            "cassandra_snapshotter.agent",
            "cassandra_snapshotter.logging_helper",
            "cassandra_snapshotter.main",
            "cassandra_snapshotter.snapshotting",
            "cassandra_snapshotter.timeout",
            "cassandra_snapshotter.utils"
        ],
        "version": "1.0.0"
    },
    "cassandra-toolbox": {
        "cmdline": [
            "cassandra-stat",
            "cassandra-tracing"
        ],
        "modules": [
            "cassandra-toolbox"
        ],
        "version": "0.1.4"
    },
    "cassandrajsonmapper": {
        "cmdline": [],
        "modules": [
            "CassandraJsonMapper",
            "CassandraJsonMapper.CassandraJsonMapper"
        ],
        "version": "1.2.1"
    },
    "cassandralauncher": {
        "cmdline": [
            "cassandralauncher",
            "imagelauncher"
        ],
        "modules": [
            "cassandralauncher",
            "cassandralauncher.cassandralauncher",
            "cassandralauncher.clusterlauncher",
            "cassandralauncher.common",
            "cassandralauncher.ec2",
            "cassandralauncher.rax"
        ],
        "version": "1.20"
    },
    "cassango": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cassava": {
        "cmdline": [
            "run_cassava.py"
        ],
        "modules": [
            "cassava",
            "cassava.Automater",
            "cassava.Automater.Automater",
            "cassava.Automater.inputs",
            "cassava.Automater.outputs",
            "cassava.Automater.siteinfo",
            "cassava.Automater.utilities",
            "cassava.automater",
            "cassava.bulk_analyze",
            "cassava.config",
            "cassava.dbcache",
            "cassava.dig",
            "cassava.extract_iocs",
            "cassava.investigate",
            "cassava.investigate.investigate",
            "cassava.opendns",
            "cassava.search_splunk",
            "cassava.tapioca",
            "cassava.utils",
            "cassava.virustotal",
            "cassava.whois",
            "cassava_scrypture",
            "cassava_scrypture.ActiveLookups",
            "cassava_scrypture.ActiveLookups.dig",
            "cassava_scrypture.ActiveLookups.whois",
            "cassava_scrypture.Automater",
            "cassava_scrypture.Automater.automater",
            "cassava_scrypture.OpenDNS",
            "cassava_scrypture.OpenDNS.categorization",
            "cassava_scrypture.OpenDNS.cooccurrences",
            "cassava_scrypture.OpenDNS.email_whois",
            "cassava_scrypture.OpenDNS.investigate_everything",
            "cassava_scrypture.OpenDNS.malicious_domains",
            "cassava_scrypture.OpenDNS.odns_whois",
            "cassava_scrypture.OpenDNS.related_domains",
            "cassava_scrypture.OpenDNS.security_info",
            "cassava_scrypture.Tapioca",
            "cassava_scrypture.Tapioca.tapioca",
            "cassava_scrypture.VirusTotal",
            "cassava_scrypture.VirusTotal.virustotal_domain",
            "cassava_scrypture.VirusTotal.virustotal_file",
            "cassava_scrypture.VirusTotal.virustotal_ip"
        ],
        "version": "0.1.0"
    },
    "casscache": {
        "cmdline": [],
        "modules": [
            "casscache"
        ],
        "version": "0.1.1"
    },
    "casserole": {
        "cmdline": [],
        "modules": [
            "casserole"
        ],
        "version": "0.1.0"
    },
    "cassette": {
        "cmdline": [],
        "modules": [
            "cassette",
            "cassette.cassette_library",
            "cassette.config",
            "cassette.http_connection",
            "cassette.http_response",
            "cassette.mocked_response",
            "cassette.patcher",
            "cassette.player",
            "cassette.tests",
            "cassette.tests.base",
            "cassette.tests.server",
            "cassette.tests.server.run",
            "cassette.tests.test_cassette",
            "cassette.tests.test_cassette_library",
            "cassette.tests.test_cassette_performance",
            "cassette.tests.test_cassette_utils",
            "cassette.tests.use_cases",
            "cassette.tests.use_cases.test_report_unused",
            "cassette.unpatched",
            "cassette.utils"
        ],
        "version": "0.3.8"
    },
    "cassilda": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cassiopeia": {
        "cmdline": [],
        "modules": [
            "cassiopeia",
            "cassiopeia.baseriotapi",
            "cassiopeia.core",
            "cassiopeia.core.championapi",
            "cassiopeia.core.championmasteryapi",
            "cassiopeia.core.currentgameapi",
            "cassiopeia.core.featuredgamesapi",
            "cassiopeia.core.gameapi",
            "cassiopeia.core.leagueapi",
            "cassiopeia.core.matchapi",
            "cassiopeia.core.matchlistapi",
            "cassiopeia.core.requests",
            "cassiopeia.core.staticdataapi",
            "cassiopeia.core.statsapi",
            "cassiopeia.core.statusapi",
            "cassiopeia.core.summonerapi",
            "cassiopeia.core.teamapi",
            "cassiopeia.core.tournamentapi",
            "cassiopeia.dto",
            "cassiopeia.dto.championapi",
            "cassiopeia.dto.championmasteryapi",
            "cassiopeia.dto.currentgameapi",
            "cassiopeia.dto.featuredgamesapi",
            "cassiopeia.dto.gameapi",
            "cassiopeia.dto.leagueapi",
            "cassiopeia.dto.matchapi",
            "cassiopeia.dto.matchlistapi",
            "cassiopeia.dto.requests",
            "cassiopeia.dto.staticdataapi",
            "cassiopeia.dto.statsapi",
            "cassiopeia.dto.statusapi",
            "cassiopeia.dto.summonerapi",
            "cassiopeia.dto.teamapi",
            "cassiopeia.dto.tournamentapi",
            "cassiopeia.riotapi",
            "cassiopeia.type",
            "cassiopeia.type.api",
            "cassiopeia.type.api.exception",
            "cassiopeia.type.api.rates",
            "cassiopeia.type.api.store",
            "cassiopeia.type.core",
            "cassiopeia.type.core.champion",
            "cassiopeia.type.core.championmastery",
            "cassiopeia.type.core.common",
            "cassiopeia.type.core.currentgame",
            "cassiopeia.type.core.featuredgames",
            "cassiopeia.type.core.game",
            "cassiopeia.type.core.league",
            "cassiopeia.type.core.match",
            "cassiopeia.type.core.matchlist",
            "cassiopeia.type.core.staticdata",
            "cassiopeia.type.core.stats",
            "cassiopeia.type.core.status",
            "cassiopeia.type.core.summoner",
            "cassiopeia.type.core.team",
            "cassiopeia.type.core.tournament",
            "cassiopeia.type.dto",
            "cassiopeia.type.dto.champion",
            "cassiopeia.type.dto.championmastery",
            "cassiopeia.type.dto.common",
            "cassiopeia.type.dto.currentgame",
            "cassiopeia.type.dto.featuredgames",
            "cassiopeia.type.dto.game",
            "cassiopeia.type.dto.league",
            "cassiopeia.type.dto.match",
            "cassiopeia.type.dto.matchlist",
            "cassiopeia.type.dto.staticdata",
            "cassiopeia.type.dto.stats",
            "cassiopeia.type.dto.status",
            "cassiopeia.type.dto.summoner",
            "cassiopeia.type.dto.team",
            "cassiopeia.type.dto.tournament",
            "test",
            "test.integration",
            "test.integration.conftest",
            "test.integration.core",
            "test.integration.core.champion",
            "test.integration.core.currentgame",
            "test.integration.core.featuredgames",
            "test.integration.core.game",
            "test.integration.core.league",
            "test.integration.core.match",
            "test.integration.core.matchlist",
            "test.integration.core.staticdata",
            "test.integration.core.stats",
            "test.integration.core.status",
            "test.integration.core.summoner",
            "test.integration.core.team",
            "test.integration.dto",
            "test.integration.dto.champion",
            "test.integration.dto.currentgame",
            "test.integration.dto.featuredgames",
            "test.integration.dto.game",
            "test.integration.dto.league",
            "test.integration.dto.match",
            "test.integration.dto.matchlist",
            "test.integration.dto.rates",
            "test.integration.dto.staticdata",
            "test.integration.dto.stats",
            "test.integration.dto.status",
            "test.integration.dto.summoner",
            "test.integration.dto.team",
            "test.integration.int_test_handler",
            "test.python2_compatibility"
        ],
        "version": "0.1.4"
    },
    "casslr": {
        "cmdline": [],
        "modules": [
            "casslr",
            "casslr.app",
            "casslr.szradm",
            "casslr.test",
            "casslr.test.test_casslr",
            "casslr.test.test_szradm",
            "casslr.test.util",
            "casslr.version"
        ],
        "version": "0.4.0"
    },
    "cassone": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cassowary": {
        "cmdline": [],
        "modules": [
            "cassowary",
            "cassowary.edit_info",
            "cassowary.error",
            "cassowary.expression",
            "cassowary.simplex_solver",
            "cassowary.tableau",
            "cassowary.utils"
        ],
        "version": "0.5.1"
    },
    "cassowarypy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "casstest": {
        "cmdline": [],
        "modules": [
            "casstest",
            "casstest.casstest",
            "casstest.stresstest"
        ],
        "version": "0.7.0"
    },
    "cast": {
        "cmdline": [],
        "modules": [
            "cast"
        ],
        "version": "0.1.1"
    },
    "cast-ashu": {
        "cmdline": [],
        "modules": [
            "cast_ashu"
        ],
        "version": "1.2.0"
    },
    "cast-convert": {
        "cmdline": [],
        "modules": [
            "cast_convert",
            "cast_convert.chromecast_compat",
            "cast_convert.cmd",
            "cast_convert.convert",
            "cast_convert.exceptions",
            "cast_convert.media_info",
            "cast_convert.preferences",
            "cast_convert.version",
            "cast_convert.watch"
        ],
        "version": "0.12"
    },
    "castctrl": {
        "cmdline": [],
        "modules": [
            "castctrl",
            "castctrl.castctrl"
        ],
        "version": "1.1.0"
    },
    "castellan": {
        "cmdline": [],
        "modules": [],
        "version": "0.7.0"
    },
    "caster": {
        "cmdline": [],
        "modules": [
            "caster"
        ],
        "version": "0.1"
    },
    "castle": {
        "cmdline": [],
        "modules": [
            "castle",
            "castle.castle"
        ],
        "version": "0.0.1"
    },
    "castle-flask": {
        "cmdline": [],
        "modules": [
            "castle_flask",
            "castle_flask.castle"
        ],
        "version": "0.0.1"
    },
    "castle.cms": {
        "cmdline": [],
        "modules": [
            "castle",
            "castle.cms",
            "castle.cms._scripts",
            "castle.cms._scripts.cleanup-archive",
            "castle.cms._scripts.emptysite",
            "castle.cms._scripts.export-archives",
            "castle.cms._scripts.export-content",
            "castle.cms._scripts.find-broken-links",
            "castle.cms._scripts.generate-webpack",
            "castle.cms._scripts.importarchives",
            "castle.cms._scripts.importjson",
            "castle.cms._scripts.importtypes",
            "castle.cms._scripts.init-dev",
            "castle.cms._scripts.mjson",
            "castle.cms._scripts.sample-content",
            "castle.cms._scripts.utils",
            "castle.cms.archival",
            "castle.cms.audit",
            "castle.cms.authentication",
            "castle.cms.behaviors",
            "castle.cms.behaviors.leadimage",
            "castle.cms.behaviors.location",
            "castle.cms.behaviors.navigation",
            "castle.cms.behaviors.order",
            "castle.cms.behaviors.overview",
            "castle.cms.behaviors.search",
            "castle.cms.browser",
            "castle.cms.browser.actions",
            "castle.cms.browser.addsite",
            "castle.cms.browser.analytics",
            "castle.cms.browser.atd",
            "castle.cms.browser.audit",
            "castle.cms.browser.chat",
            "castle.cms.browser.contact",
            "castle.cms.browser.content",
            "castle.cms.browser.controlpanel",
            "castle.cms.browser.controlpanel.announcements",
            "castle.cms.browser.controlpanel.archival",
            "castle.cms.browser.controlpanel.audit",
            "castle.cms.browser.controlpanel.business",
            "castle.cms.browser.controlpanel.ccelery",
            "castle.cms.browser.controlpanel.crawler",
            "castle.cms.browser.controlpanel.dateandtime",
            "castle.cms.browser.controlpanel.mapper",
            "castle.cms.browser.controlpanel.security",
            "castle.cms.browser.controlpanel.sessions",
            "castle.cms.browser.controlpanel.settings",
            "castle.cms.browser.controlpanel.site",
            "castle.cms.browser.controlpanel.social",
            "castle.cms.browser.controlpanel.tags",
            "castle.cms.browser.controlpanel.usergroups",
            "castle.cms.browser.dashboard",
            "castle.cms.browser.discussion",
            "castle.cms.browser.error",
            "castle.cms.browser.fc",
            "castle.cms.browser.file",
            "castle.cms.browser.files",
            "castle.cms.browser.fourohfour",
            "castle.cms.browser.history",
            "castle.cms.browser.icon",
            "castle.cms.browser.impersonator",
            "castle.cms.browser.layout",
            "castle.cms.browser.lockout",
            "castle.cms.browser.login",
            "castle.cms.browser.main_template",
            "castle.cms.browser.navigation",
            "castle.cms.browser.nextprev",
            "castle.cms.browser.pad",
            "castle.cms.browser.redirects",
            "castle.cms.browser.registration",
            "castle.cms.browser.search",
            "castle.cms.browser.siteconfig",
            "castle.cms.browser.sitemap",
            "castle.cms.browser.subscribe",
            "castle.cms.browser.syndication",
            "castle.cms.browser.tiles",
            "castle.cms.browser.toolbar",
            "castle.cms.browser.tour",
            "castle.cms.browser.trash",
            "castle.cms.browser.users",
            "castle.cms.browser.utils",
            "castle.cms.cache",
            "castle.cms.caching",
            "castle.cms.caching.cloudflare",
            "castle.cms.commands",
            "castle.cms.constants",
            "castle.cms.content",
            "castle.cms.content.audio",
            "castle.cms.content.dashboard",
            "castle.cms.content.video",
            "castle.cms.cron",
            "castle.cms.cron._archive_content",
            "castle.cms.cron._clean_drafts",
            "castle.cms.cron._clean_users",
            "castle.cms.cron._crawler",
            "castle.cms.cron._empty_trash",
            "castle.cms.cron._forced_publish_alert",
            "castle.cms.cron._popularity",
            "castle.cms.cron._reindex_es",
            "castle.cms.cron._social_counts",
            "castle.cms.cron._twitter_monitor",
            "castle.cms.cron.utils",
            "castle.cms.events",
            "castle.cms.exportimport",
            "castle.cms.exportimport.frontpagecontent",
            "castle.cms.exportimport.install",
            "castle.cms.files",
            "castle.cms.files.aws",
            "castle.cms.files.duplicates",
            "castle.cms.fragments",
            "castle.cms.fragments.interfaces",
            "castle.cms.fragments.tiles",
            "castle.cms.fragments.utils",
            "castle.cms.impersonator",
            "castle.cms.indexers",
            "castle.cms.install",
            "castle.cms.interfaces",
            "castle.cms.interfaces.archive",
            "castle.cms.interfaces.authentication",
            "castle.cms.interfaces.content",
            "castle.cms.interfaces.controlpanel",
            "castle.cms.interfaces.layers",
            "castle.cms.interfaces.metadata",
            "castle.cms.interfaces.tiles",
            "castle.cms.interfaces.toolbar",
            "castle.cms.interfaces.utils",
            "castle.cms.interfaces.views",
            "castle.cms.interfaces.widgets",
            "castle.cms.jbot",
            "castle.cms.ld",
            "castle.cms.lead",
            "castle.cms.linkintegrity",
            "castle.cms.locking",
            "castle.cms.lockout",
            "castle.cms.logger",
            "castle.cms.media",
            "castle.cms.media.video",
            "castle.cms.ordering",
            "castle.cms.ordering.reversed",
            "castle.cms.patches",
            "castle.cms.patterns",
            "castle.cms.pdf",
            "castle.cms.pdf.generator",
            "castle.cms.pdf.utils",
            "castle.cms.registration",
            "castle.cms.schema",
            "castle.cms.search",
            "castle.cms.security",
            "castle.cms.services",
            "castle.cms.services.google",
            "castle.cms.services.twitter",
            "castle.cms.settings",
            "castle.cms.shield",
            "castle.cms.social",
            "castle.cms.statusmessages",
            "castle.cms.subscribe",
            "castle.cms.subscribers",
            "castle.cms.syndication",
            "castle.cms.taskinfo",
            "castle.cms.tasks",
            "castle.cms.tasks.archive",
            "castle.cms.tasks.content",
            "castle.cms.tasks.email",
            "castle.cms.tasks.files",
            "castle.cms.tasks.media",
            "castle.cms.tasks.pdf",
            "castle.cms.testing",
            "castle.cms.tests",
            "castle.cms.tests.test_analytics",
            "castle.cms.tests.test_archival",
            "castle.cms.tests.test_content",
            "castle.cms.tests.test_crawl",
            "castle.cms.tests.test_files",
            "castle.cms.tests.test_imaging",
            "castle.cms.tests.test_lead",
            "castle.cms.tests.test_login",
            "castle.cms.tests.test_metadata",
            "castle.cms.tests.test_ordering",
            "castle.cms.tests.test_selenium",
            "castle.cms.tests.test_shield",
            "castle.cms.tests.test_sitemap",
            "castle.cms.tests.test_slots",
            "castle.cms.tests.test_subscribe",
            "castle.cms.tests.test_syndication",
            "castle.cms.tests.test_theming",
            "castle.cms.tests.test_tiles",
            "castle.cms.tests.test_toolbar",
            "castle.cms.tests.test_trash",
            "castle.cms.tests.test_utils",
            "castle.cms.tests.test_vhm",
            "castle.cms.tests.utils",
            "castle.cms.texting",
            "castle.cms.theming",
            "castle.cms.tiles",
            "castle.cms.tiles.audio",
            "castle.cms.tiles.base",
            "castle.cms.tiles.calendar",
            "castle.cms.tiles.common",
            "castle.cms.tiles.content",
            "castle.cms.tiles.discussion",
            "castle.cms.tiles.documentviewer",
            "castle.cms.tiles.embed",
            "castle.cms.tiles.existing",
            "castle.cms.tiles.facebook",
            "castle.cms.tiles.fields",
            "castle.cms.tiles.fragment",
            "castle.cms.tiles.gallery",
            "castle.cms.tiles.image",
            "castle.cms.tiles.map",
            "castle.cms.tiles.meta",
            "castle.cms.tiles.metadata",
            "castle.cms.tiles.navigation",
            "castle.cms.tiles.pinterest",
            "castle.cms.tiles.querylisting",
            "castle.cms.tiles.search",
            "castle.cms.tiles.sharing",
            "castle.cms.tiles.slider",
            "castle.cms.tiles.subscription",
            "castle.cms.tiles.tweet",
            "castle.cms.tiles.twittertimeline",
            "castle.cms.tiles.video",
            "castle.cms.tiles.views",
            "castle.cms.toolbar",
            "castle.cms.transformer",
            "castle.cms.trash",
            "castle.cms.ua",
            "castle.cms.upgrades",
            "castle.cms.upgrades.upgrade_2_0_12",
            "castle.cms.upgrades.upgrade_2_0_16",
            "castle.cms.utils",
            "castle.cms.vhm",
            "castle.cms.vocabularies",
            "castle.cms.widgets"
        ],
        "version": "2.0.33"
    },
    "castle.theme": {
        "cmdline": [],
        "modules": [
            "castle",
            "castle.theme",
            "castle.theme.interfaces",
            "castle.theme.tiles",
            "castle.theme.tiles.feature"
        ],
        "version": "1.0.0"
    },
    "castor": {
        "cmdline": [],
        "modules": [
            "castor",
            "castor.repo"
        ],
        "version": "0.2.3"
    },
    "castra": {
        "cmdline": [],
        "modules": [
            "castra",
            "castra.core"
        ],
        "version": "0.1.7"
    },
    "castro": {
        "cmdline": [],
        "modules": [
            "castro",
            "castro.lib",
            "castro.lib.messageboard",
            "castro.lib.pyvnc2swf",
            "castro.lib.pyvnc2swf.d3des",
            "castro.lib.pyvnc2swf.edit",
            "castro.lib.pyvnc2swf.html_templates",
            "castro.lib.pyvnc2swf.image",
            "castro.lib.pyvnc2swf.movie",
            "castro.lib.pyvnc2swf.mp3",
            "castro.lib.pyvnc2swf.output",
            "castro.lib.pyvnc2swf.play",
            "castro.lib.pyvnc2swf.record_sound",
            "castro.lib.pyvnc2swf.rfb",
            "castro.lib.pyvnc2swf.swf",
            "castro.lib.pyvnc2swf.vnc2swf"
        ],
        "version": "1.0.6"
    },
    "castroredux": {
        "cmdline": [],
        "modules": [
            "castroredux",
            "castroredux.castroredux",
            "castroredux.flvrec",
            "castroredux/vnc2flv",
            "castroredux/vnc2flv.audio",
            "castroredux/vnc2flv.d3des",
            "castroredux/vnc2flv.flv",
            "castroredux/vnc2flv.rfb",
            "castroredux/vnc2flv.video"
        ],
        "version": "0.1.5"
    },
    "casuarius": {
        "cmdline": [],
        "modules": [],
        "version": "1.1"
    },
    "casutils": {
        "cmdline": [
            "CASutils_runner"
        ],
        "modules": [
            "CASutils",
            "CASutils.CASutils"
        ],
        "version": "0.191111"
    },
    "caswsgimiddleware": {
        "cmdline": [],
        "modules": [
            "cas",
            "cas.casmiddleware",
            "cas.djangocas",
            "cas.werkzeugcas"
        ],
        "version": "1.2.1"
    },
    "cat": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cat-alyst": {
        "cmdline": [],
        "modules": [
            "Cat_Alyst"
        ],
        "version": "1.0.0"
    },
    "cat-in-a-box": {
        "cmdline": [],
        "modules": [
            "catbox",
            "catbox.devbin",
            "catbox.main"
        ],
        "version": "14.8.2"
    },
    "cataium-sample": {
        "cmdline": [],
        "modules": [
            "cataium",
            "cataium.catcher"
        ],
        "version": "0.0.0.1"
    },
    "catalog": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "catalog-cli": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "catalogcrawler": {
        "cmdline": [],
        "modules": [
            "CatalogCrawler",
            "CatalogCrawler.catalog",
            "CatalogCrawler.course",
            "CatalogCrawler.crawler",
            "CatalogCrawler.extractor",
            "CatalogCrawler.pred",
            "CatalogCrawler.school"
        ],
        "version": "0.1"
    },
    "catalogue": {
        "cmdline": [],
        "modules": [
            "catalogue"
        ],
        "version": "0.1.0"
    },
    "catalpagination": {
        "cmdline": [],
        "modules": [
            "endless_pagination",
            "endless_pagination.decorators",
            "endless_pagination.exceptions",
            "endless_pagination.loaders",
            "endless_pagination.models",
            "endless_pagination.paginators",
            "endless_pagination.settings",
            "endless_pagination.templatetags",
            "endless_pagination.templatetags.endless",
            "endless_pagination.tests",
            "endless_pagination.tests.integration",
            "endless_pagination.tests.integration.test_callbacks",
            "endless_pagination.tests.integration.test_chunks",
            "endless_pagination.tests.integration.test_digg",
            "endless_pagination.tests.integration.test_multiple",
            "endless_pagination.tests.integration.test_onscroll",
            "endless_pagination.tests.integration.test_twitter",
            "endless_pagination.tests.templatetags",
            "endless_pagination.tests.templatetags.test_endless",
            "endless_pagination.tests.test_decorators",
            "endless_pagination.tests.test_loaders",
            "endless_pagination.tests.test_models",
            "endless_pagination.tests.test_paginators",
            "endless_pagination.tests.test_utils",
            "endless_pagination.tests.test_views",
            "endless_pagination.utils",
            "endless_pagination.views"
        ],
        "version": "2.2"
    },
    "catalyst": {
        "cmdline": [],
        "modules": [
            "catalyst",
            "catalyst.actors",
            "catalyst.cli",
            "catalyst.core",
            "catalyst.event",
            "catalyst.resolver"
        ],
        "version": "0.1.post1"
    },
    "catalyze": {
        "cmdline": [],
        "modules": [
            "catalyze",
            "catalyze.client",
            "catalyze.commands",
            "catalyze.commands.associate",
            "catalyze.commands.backup",
            "catalyze.commands.console",
            "catalyze.commands.dashboard",
            "catalyze.commands.db",
            "catalyze.commands.environments",
            "catalyze.commands.metrics",
            "catalyze.commands.rake",
            "catalyze.commands.redeploy",
            "catalyze.commands.status",
            "catalyze.commands.support_ids",
            "catalyze.commands.users",
            "catalyze.commands.variables",
            "catalyze.commands.worker",
            "catalyze.config",
            "catalyze.git",
            "catalyze.helpers",
            "catalyze.helpers.AESCrypto",
            "catalyze.helpers.environment_variables",
            "catalyze.helpers.environments",
            "catalyze.helpers.jobs",
            "catalyze.helpers.logs",
            "catalyze.helpers.pods",
            "catalyze.helpers.services",
            "catalyze.helpers.tasks",
            "catalyze.output",
            "catalyze.project"
        ],
        "version": "1.4.2"
    },
    "catan": {
        "cmdline": [],
        "modules": [
            "catan",
            "catan.board",
            "catan.boardbuilder",
            "catan.game",
            "catan.pieces",
            "catan.states",
            "catan.trading"
        ],
        "version": "0.4.2"
    },
    "catan-spectator": {
        "cmdline": [],
        "modules": [
            "main",
            "tkinterutils",
            "views",
            "views_trading"
        ],
        "version": "0.1.3"
    },
    "catanlog": {
        "cmdline": [],
        "modules": [
            "catanlog"
        ],
        "version": "0.10.1"
    },
    "catapult": {
        "cmdline": [],
        "modules": [
            "catapult",
            "catapult._version",
            "catapult.formatters",
            "catapult.plugin",
            "catapult.result",
            "catapult.runner"
        ],
        "version": "0.2.5"
    },
    "catarc": {
        "cmdline": [],
        "modules": [],
        "version": "1.1"
    },
    "catbox": {
        "cmdline": [
            "catbox"
        ],
        "modules": [],
        "version": "1.7.0"
    },
    "catch-pic": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "catchments": {
        "cmdline": [
            "catchments-here.py",
            "catchments-skobbler.py"
        ],
        "modules": [
            "catchments",
            "catchments.here",
            "catchments.parsers",
            "catchments.skobbler",
            "catchments.utils"
        ],
        "version": "1.1.1"
    },
    "catchy": {
        "cmdline": [],
        "modules": [
            "catchy",
            "catchy.directorycacher",
            "catchy.status",
            "catchy.tarballs",
            "catchy.tempdir"
        ],
        "version": "0.2.0"
    },
    "catdb": {
        "cmdline": [],
        "modules": [
            "catdb",
            "catdb.db",
            "catdb.main",
            "catdb.mysql",
            "catdb.postgres"
        ],
        "version": "0.0.2"
    },
    "catebot": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "catechin": {
        "cmdline": [],
        "modules": [
            "catechin",
            "catechin.catechin"
        ],
        "version": "0.0.3"
    },
    "categorical": {
        "cmdline": [],
        "modules": [
            "categorical",
            "categorical.cat",
            "categorical.test"
        ],
        "version": "0.1.4"
    },
    "categorical-distance": {
        "cmdline": [],
        "modules": [
            "categorical",
            "categorical.categorical"
        ],
        "version": "1.9"
    },
    "categorical-encoder": {
        "cmdline": [],
        "modules": [
            "categorical_encoder",
            "categorical_encoder.base_encoder",
            "categorical_encoder.binary_encoder",
            "categorical_encoder.encoder_service",
            "categorical_encoder.ordinal_encoder",
            "categorical_encoder.utils"
        ],
        "version": "0.1"
    },
    "category": {
        "cmdline": [],
        "modules": [
            "category",
            "category.admin",
            "category.api",
            "category.forms",
            "category.models",
            "category.sitemap",
            "category.tests",
            "category.urls",
            "category.views"
        ],
        "version": "0.9.10"
    },
    "category-encoders": {
        "cmdline": [],
        "modules": [
            "category_encoders",
            "category_encoders.backward_difference",
            "category_encoders.binary",
            "category_encoders.hashing",
            "category_encoders.helmert",
            "category_encoders.one_hot",
            "category_encoders.ordinal",
            "category_encoders.polynomial",
            "category_encoders.sum_coding",
            "category_encoders.tests",
            "category_encoders.tests.test_encoders",
            "category_encoders.tests.test_estimators",
            "category_encoders.utils",
            "examples",
            "examples.benchmarking",
            "examples.benchmarking.benchmarking",
            "examples.benchmarking.reporting",
            "examples.encoding_examples",
            "examples.source_data",
            "examples.source_data.loaders"
        ],
        "version": "1.2.3"
    },
    "caterpillar": {
        "cmdline": [],
        "modules": [
            "caterpillar",
            "caterpillar.composition",
            "caterpillar.conftest",
            "caterpillar.locking",
            "caterpillar.processing",
            "caterpillar.processing.analysis",
            "caterpillar.processing.analysis.analyse",
            "caterpillar.processing.analysis.filter",
            "caterpillar.processing.analysis.stopwords",
            "caterpillar.processing.analysis.tokenize",
            "caterpillar.processing.index",
            "caterpillar.processing.plugin",
            "caterpillar.processing.schema",
            "caterpillar.resources",
            "caterpillar.storage",
            "caterpillar.storage._sqlite_schema",
            "caterpillar.storage.sqlite",
            "caterpillar.test_util"
        ],
        "version": "1.0.0.dev17"
    },
    "catest1": {
        "cmdline": [],
        "modules": [
            "catest1"
        ],
        "version": "1.0.4"
    },
    "catex": {
        "cmdline": [],
        "modules": [
            "catex",
            "catex.cli",
            "catex.constants",
            "catex.core",
            "catex.version"
        ],
        "version": "0.0.10"
    },
    "catfacts": {
        "cmdline": [],
        "modules": [
            "catfacts",
            "catfacts.forms"
        ],
        "version": "0.1.0"
    },
    "catfeed": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "catg": {
        "cmdline": [],
        "modules": [
            "cat",
            "cat.cli",
            "cat.cli.cat",
            "cat.cli.operators",
            "cat.pages",
            "cat.pages.hello",
            "cat.server",
            "cat.server.blog",
            "cat.server.config"
        ],
        "version": "0.5"
    },
    "cathead": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "catho": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "catidb-api": {
        "cmdline": [
            "catidb_ui"
        ],
        "modules": [
            "catidb_api",
            "catidb_api.info",
            "catidb_api.store_passwords",
            "catidb_ui",
            "catidb_ui.api_constants",
            "catidb_ui.customqtablewidget",
            "catidb_ui.portfolio",
            "catidb_ui.roles",
            "catidb_ui.selector",
            "catidb_ui.selector_container",
            "catidb_ui.studies"
        ],
        "version": "1.0.2"
    },
    "catimg": {
        "cmdline": [],
        "modules": [
            "catimg",
            "catimg._version",
            "catimg.imgur",
            "catimg.util"
        ],
        "version": "1.1.1"
    },
    "catkin": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "catkin-lint": {
        "cmdline": [
            "catkin_lint"
        ],
        "modules": [
            "catkin_lint",
            "catkin_lint.checks",
            "catkin_lint.checks.build",
            "catkin_lint.checks.cuda",
            "catkin_lint.checks.fkie",
            "catkin_lint.checks.manifest",
            "catkin_lint.checks.misc",
            "catkin_lint.checks.python",
            "catkin_lint.cmake",
            "catkin_lint.diagnostics",
            "catkin_lint.environment",
            "catkin_lint.linter",
            "catkin_lint.main",
            "catkin_lint.output",
            "catkin_lint.ros",
            "catkin_lint.util"
        ],
        "version": "1.4.16"
    },
    "catkin-pkg": {
        "cmdline": [],
        "modules": [
            "catkin_pkg",
            "catkin_pkg.changelog",
            "catkin_pkg.changelog_generator",
            "catkin_pkg.changelog_generator_vcs",
            "catkin_pkg.cli",
            "catkin_pkg.cli.create_pkg",
            "catkin_pkg.cli.find_pkg",
            "catkin_pkg.cli.generate_changelog",
            "catkin_pkg.cli.tag_changelog",
            "catkin_pkg.cli.test_changelog",
            "catkin_pkg.cmake",
            "catkin_pkg.metapackage",
            "catkin_pkg.package",
            "catkin_pkg.package_templates",
            "catkin_pkg.package_version",
            "catkin_pkg.packages",
            "catkin_pkg.python_setup",
            "catkin_pkg.rospack",
            "catkin_pkg.tool_detection",
            "catkin_pkg.topological_order",
            "catkin_pkg.workspaces"
        ],
        "version": "0.3.1"
    },
    "catkin-sphinx": {
        "cmdline": [],
        "modules": [
            "catkin_sphinx",
            "catkin_sphinx.ShLexer",
            "catkin_sphinx.cmake"
        ],
        "version": "0.2.2"
    },
    "catkin-tools": {
        "cmdline": [],
        "modules": [
            "catkin_tools",
            "catkin_tools.argument_parsing",
            "catkin_tools.commands",
            "catkin_tools.commands.catkin",
            "catkin_tools.common",
            "catkin_tools.config",
            "catkin_tools.context",
            "catkin_tools.execution",
            "catkin_tools.execution.controllers",
            "catkin_tools.execution.events",
            "catkin_tools.execution.executor",
            "catkin_tools.execution.io",
            "catkin_tools.execution.job_server",
            "catkin_tools.execution.jobs",
            "catkin_tools.execution.stages",
            "catkin_tools.jobs",
            "catkin_tools.jobs.catkin",
            "catkin_tools.jobs.cmake",
            "catkin_tools.jobs.commands",
            "catkin_tools.jobs.commands.cmake",
            "catkin_tools.jobs.commands.make",
            "catkin_tools.jobs.output",
            "catkin_tools.jobs.utils",
            "catkin_tools.metadata",
            "catkin_tools.notifications",
            "catkin_tools.notifications.impl",
            "catkin_tools.resultspace",
            "catkin_tools.terminal_color",
            "catkin_tools.utils",
            "catkin_tools.verbs",
            "catkin_tools.verbs.catkin_build",
            "catkin_tools.verbs.catkin_build.build",
            "catkin_tools.verbs.catkin_build.cli",
            "catkin_tools.verbs.catkin_build.color",
            "catkin_tools.verbs.catkin_clean",
            "catkin_tools.verbs.catkin_clean.clean",
            "catkin_tools.verbs.catkin_clean.cli",
            "catkin_tools.verbs.catkin_clean.color",
            "catkin_tools.verbs.catkin_config",
            "catkin_tools.verbs.catkin_config.cli",
            "catkin_tools.verbs.catkin_create",
            "catkin_tools.verbs.catkin_create.cli",
            "catkin_tools.verbs.catkin_env",
            "catkin_tools.verbs.catkin_env.cli",
            "catkin_tools.verbs.catkin_init",
            "catkin_tools.verbs.catkin_init.cli",
            "catkin_tools.verbs.catkin_list",
            "catkin_tools.verbs.catkin_list.cli",
            "catkin_tools.verbs.catkin_locate",
            "catkin_tools.verbs.catkin_locate.cli",
            "catkin_tools.verbs.catkin_profile",
            "catkin_tools.verbs.catkin_profile.cli"
        ],
        "version": "0.4.4"
    },
    "catkin-tools-document": {
        "cmdline": [],
        "modules": [
            "catkin_tools_document",
            "catkin_tools_document.builders",
            "catkin_tools_document.cli",
            "catkin_tools_document.document",
            "catkin_tools_document.doxygen",
            "catkin_tools_document.messages",
            "catkin_tools_document.util"
        ],
        "version": "0.1.0"
    },
    "catkin-tools-fetch": {
        "cmdline": [],
        "modules": [
            "catkin_tools_fetch",
            "catkin_tools_fetch.cli",
            "catkin_tools_fetch.lib",
            "catkin_tools_fetch.lib.dependency_parser",
            "catkin_tools_fetch.lib.downloader",
            "catkin_tools_fetch.lib.tools",
            "catkin_tools_fetch.lib.update"
        ],
        "version": "0.1.0"
    },
    "catkin-tools-python": {
        "cmdline": [],
        "modules": [
            "catkin_tools_python",
            "catkin_tools_python.create_pypi_gbp",
            "catkin_tools_python.create_python_package_xmls",
            "catkin_tools_python.filters",
            "catkin_tools_python.fix_python_script_shebangs",
            "catkin_tools_python.job"
        ],
        "version": "0.1.0"
    },
    "catmat-parser": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "catnap": {
        "cmdline": [
            "catnap"
        ],
        "modules": [
            "catnap",
            "catnap.compat",
            "catnap.models",
            "catnap.tabbing",
            "catnap.worker",
            "catnap.yaml_parser"
        ],
        "version": "0.4.5"
    },
    "cato": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "catokit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "catools": {
        "cmdline": [],
        "modules": [
            "catools",
            "catools.rest",
            "catools.soap",
            "catools.soap.soap"
        ],
        "version": "0.0.1"
    },
    "catplot": {
        "cmdline": [],
        "modules": [
            "catplot",
            "catplot.canvas",
            "catplot.chem_parser",
            "catplot.descriptors",
            "catplot.ep_components",
            "catplot.ep_components.ep_canvas",
            "catplot.ep_components.ep_chain",
            "catplot.ep_components.ep_lines",
            "catplot.grid_components",
            "catplot.grid_components.edges",
            "catplot.grid_components.grid_canvas",
            "catplot.grid_components.nodes",
            "catplot.grid_components.planes",
            "catplot.grid_components.supercell",
            "catplot.interpolate"
        ],
        "version": "1.3.2"
    },
    "catprep": {
        "cmdline": [],
        "modules": [
            "catprep"
        ],
        "version": "0.0.4"
    },
    "catq": {
        "cmdline": [],
        "modules": [
            "catq",
            "catq.expression",
            "catq.parser",
            "catq.tokenizer"
        ],
        "version": "0.2.0"
    },
    "cats": {
        "cmdline": [],
        "modules": [
            "cats",
            "cats.database",
            "cats.parsers",
            "cats.parsers.asciiworld",
            "cats.parsers.helpers",
            "cats.parsers.user_xmission_com"
        ],
        "version": "0.2.0"
    },
    "catsass": {
        "cmdline": [],
        "modules": [
            "catsass",
            "catsass.catsass",
            "catsass.colorz",
            "catsass.test_catsass"
        ],
        "version": "1.1.3"
    },
    "catscan": {
        "cmdline": [],
        "modules": [
            "catscan",
            "catscan.install",
            "catscan.scan"
        ],
        "version": "0.0.6"
    },
    "catsim": {
        "cmdline": [],
        "modules": [
            "catsim",
            "catsim.cat",
            "catsim.estimation",
            "catsim.initialization",
            "catsim.irt",
            "catsim.plot",
            "catsim.selection",
            "catsim.simulation",
            "catsim.stats",
            "catsim.stopping",
            "catsim.testing"
        ],
        "version": "0.13.3"
    },
    "catsite": {
        "cmdline": [
            "catsite.py"
        ],
        "modules": [
            "libcatsite",
            "libcatsite.camera"
        ],
        "version": "0.0.6"
    },
    "catsnap": {
        "cmdline": [
            "catsnap"
        ],
        "modules": [
            "catsnap",
            "catsnap.app",
            "catsnap.batch",
            "catsnap.batch.image_batch",
            "catsnap.batch.tag_batch",
            "catsnap.config",
            "catsnap.config.argument_config",
            "catsnap.config.base",
            "catsnap.config.env_config",
            "catsnap.config.file_config",
            "catsnap.document",
            "catsnap.document.image",
            "catsnap.document.tag",
            "catsnap.image_metadata",
            "catsnap.image_truck",
            "catsnap.ordered_set",
            "catsnap.reorient_image",
            "catsnap.resize_image",
            "catsnap.singleton"
        ],
        "version": "4.2.0"
    },
    "catsql": {
        "cmdline": [],
        "modules": [
            "catsql",
            "catsql.cmdline",
            "catsql.daffsql",
            "catsql.daffsql.dictify",
            "catsql.daffsql.sqlalchemy_database",
            "catsql.daffsql.sqlalchemy_helper",
            "catsql.database",
            "catsql.filter",
            "catsql.main",
            "catsql.nullify",
            "catsql.patch"
        ],
        "version": "0.3.7"
    },
    "catstalker": {
        "cmdline": [
            "catstalker.py"
        ],
        "modules": [],
        "version": "0.0.3"
    },
    "catsup": {
        "cmdline": [],
        "modules": [
            "catsup",
            "catsup.cli",
            "catsup.deploy",
            "catsup.generator",
            "catsup.generator.renderer",
            "catsup.generator.utils",
            "catsup.logger",
            "catsup.models",
            "catsup.options",
            "catsup.parser",
            "catsup.parser.config",
            "catsup.parser.themes",
            "catsup.parser.utils",
            "catsup.reader",
            "catsup.reader.html",
            "catsup.reader.markdown",
            "catsup.reader.meta",
            "catsup.reader.txt",
            "catsup.reader.utils",
            "catsup.server",
            "catsup.themes",
            "catsup.themes.install",
            "catsup.themes.utils",
            "catsup.utils"
        ],
        "version": "0.3.6"
    },
    "catt": {
        "cmdline": [],
        "modules": [
            "catt",
            "catt.cli",
            "catt.controllers",
            "catt.http_server"
        ],
        "version": "0.5.0"
    },
    "cattle": {
        "cmdline": [],
        "modules": [
            "cattle"
        ],
        "version": "0.5.4"
    },
    "cattle-qiniu": {
        "cmdline": [],
        "modules": [
            "cattle",
            "cattle.cattle",
            "cattle.request",
            "cattle.t",
            "cattle.token",
            "cattle.utils"
        ],
        "version": "0.0.2"
    },
    "cattleprod": {
        "cmdline": [],
        "modules": [
            "cattleprod",
            "tests",
            "tests.configdata",
            "tests.testbasic"
        ],
        "version": "0.6.0"
    },
    "cattrs": {
        "cmdline": [],
        "modules": [
            "cattr",
            "cattr._compat",
            "cattr.converters",
            "cattr.disambiguators",
            "cattr.typing"
        ],
        "version": "0.3.0"
    },
    "catwalk": {
        "cmdline": [],
        "modules": [
            "catwalk",
            "catwalk.resources",
            "catwalk.static",
            "catwalk.templates",
            "catwalk.test",
            "catwalk.test.base",
            "catwalk.test.model",
            "catwalk.tg2",
            "catwalk.tg2.controller",
            "catwalk.tg2.decorators",
            "catwalk.tg2.dojo_controller",
            "catwalk.tg2.test",
            "catwalk.tg2.test.base",
            "catwalk.tg2.test.controllers",
            "catwalk.tg2.test.controllers.root",
            "catwalk.tg2.test.lib",
            "catwalk.tg2.test.lib.base",
            "catwalk.tg2.test.lib.helpers",
            "catwalk.tg2.test.model",
            "catwalk.tg2.test.templates",
            "catwalk.tg2.test.test_controller"
        ],
        "version": "2.0.2"
    },
    "catzzz": {
        "cmdline": [],
        "modules": [
            "catzzz"
        ],
        "version": "0.1.6"
    },
    "caucase": {
        "cmdline": [],
        "modules": [
            "caucase",
            "caucase.ca",
            "caucase.cli",
            "caucase.cli_flask",
            "caucase.exceptions",
            "caucase.storage",
            "caucase.test",
            "caucase.test.testca",
            "caucase.test.testcaweb",
            "caucase.test.teststorage",
            "caucase.utils",
            "caucase.web",
            "caucase.wsgi"
        ],
        "version": "0.1.2"
    },
    "cauldron": {
        "cmdline": [],
        "modules": [
            "cauldron",
            "cauldron.redis_cache",
            "cauldron.sql"
        ],
        "version": "1.0.14"
    },
    "cauldron-notebook": {
        "cmdline": [],
        "modules": [
            "cauldron",
            "cauldron.cli",
            "cauldron.cli.batcher",
            "cauldron.cli.commander",
            "cauldron.cli.commands",
            "cauldron.cli.commands.alias",
            "cauldron.cli.commands.clear",
            "cauldron.cli.commands.close",
            "cauldron.cli.commands.configure",
            "cauldron.cli.commands.configure.actions",
            "cauldron.cli.commands.create",
            "cauldron.cli.commands.exit",
            "cauldron.cli.commands.export",
            "cauldron.cli.commands.open",
            "cauldron.cli.commands.open.actions",
            "cauldron.cli.commands.open.opener",
            "cauldron.cli.commands.purge",
            "cauldron.cli.commands.refresh",
            "cauldron.cli.commands.reload",
            "cauldron.cli.commands.run",
            "cauldron.cli.commands.run.actions",
            "cauldron.cli.commands.save",
            "cauldron.cli.commands.show",
            "cauldron.cli.commands.snapshot",
            "cauldron.cli.commands.snapshot.actions",
            "cauldron.cli.commands.status",
            "cauldron.cli.commands.steps",
            "cauldron.cli.commands.steps.actions",
            "cauldron.cli.commands.steps.removal",
            "cauldron.cli.commands.steps.renaming",
            "cauldron.cli.commands.version",
            "cauldron.cli.interaction",
            "cauldron.cli.interaction.autocompletion",
            "cauldron.cli.interaction.query",
            "cauldron.cli.parse",
            "cauldron.cli.server",
            "cauldron.cli.server.routes",
            "cauldron.cli.server.routes.display",
            "cauldron.cli.server.routes.execution",
            "cauldron.cli.server.routes.status",
            "cauldron.cli.server.routes.synchronize",
            "cauldron.cli.server.routes.synchronize.status",
            "cauldron.cli.server.run",
            "cauldron.cli.shell",
            "cauldron.cli.threads",
            "cauldron.docgen",
            "cauldron.docgen.conversions",
            "cauldron.docgen.function_returns",
            "cauldron.docgen.params",
            "cauldron.docgen.parsing",
            "cauldron.environ",
            "cauldron.environ.configuration",
            "cauldron.environ.logger",
            "cauldron.environ.modes",
            "cauldron.environ.paths",
            "cauldron.environ.response",
            "cauldron.environ.systems",
            "cauldron.plotting",
            "cauldron.render",
            "cauldron.render.encoding",
            "cauldron.render.inspection",
            "cauldron.render.plots",
            "cauldron.render.syntax_highlighting",
            "cauldron.render.texts",
            "cauldron.render.utils",
            "cauldron.runner",
            "cauldron.runner.html_file",
            "cauldron.runner.markdown_file",
            "cauldron.runner.python_file",
            "cauldron.runner.redirection",
            "cauldron.runner.source",
            "cauldron.scripts",
            "cauldron.scripts.cauldron_server",
            "cauldron.scripts.cauldron_shell",
            "cauldron.session",
            "cauldron.session.buffering",
            "cauldron.session.caching",
            "cauldron.session.definitions",
            "cauldron.session.display",
            "cauldron.session.exposed",
            "cauldron.session.naming",
            "cauldron.session.projects",
            "cauldron.session.reloading",
            "cauldron.session.report",
            "cauldron.session.spark",
            "cauldron.session.writing",
            "cauldron.session.writing.components",
            "cauldron.session.writing.components.bokeh_component",
            "cauldron.session.writing.components.definitions",
            "cauldron.session.writing.components.plotly_component",
            "cauldron.session.writing.components.project_component",
            "cauldron.session.writing.components.shared_component",
            "cauldron.session.writing.file_io",
            "cauldron.session.writing.html",
            "cauldron.session.writing.step",
            "cauldron.steptest",
            "cauldron.templating",
            "cauldron.test",
            "cauldron.test.projects",
            "cauldron.test.projects.test_Project",
            "cauldron.test.projects.test_ProjectStep",
            "cauldron.test.projects.test_exposed",
            "cauldron.test.projects.test_refresh",
            "cauldron.test.server",
            "cauldron.test.server.routes",
            "cauldron.test.server.routes.synchronize",
            "cauldron.test.server.routes.synchronize.test_status",
            "cauldron.test.steptesting",
            "cauldron.test.steptesting.S01-first",
            "cauldron.test.steptesting.test_steptest",
            "cauldron.test.support",
            "cauldron.test.support.messages",
            "cauldron.test.support.scaffolds",
            "cauldron.test.test_alias",
            "cauldron.test.test_batcher",
            "cauldron.test.test_clear",
            "cauldron.test.test_cli_commands",
            "cauldron.test.test_close",
            "cauldron.test.test_commander",
            "cauldron.test.test_configuration",
            "cauldron.test.test_configure",
            "cauldron.test.test_create",
            "cauldron.test.test_definitions",
            "cauldron.test.test_docgen_parsing",
            "cauldron.test.test_error_display",
            "cauldron.test.test_exit",
            "cauldron.test.test_export",
            "cauldron.test.test_init",
            "cauldron.test.test_interaction_query",
            "cauldron.test.test_naming",
            "cauldron.test.test_open",
            "cauldron.test.test_open_actions",
            "cauldron.test.test_open_opener",
            "cauldron.test.test_plotting",
            "cauldron.test.test_printing",
            "cauldron.test.test_purge",
            "cauldron.test.test_refresh",
            "cauldron.test.test_reload",
            "cauldron.test.test_render",
            "cauldron.test.test_render_encoding",
            "cauldron.test.test_render_texts",
            "cauldron.test.test_response",
            "cauldron.test.test_run",
            "cauldron.test.test_runner",
            "cauldron.test.test_runner_markdown_file",
            "cauldron.test.test_runner_redirection",
            "cauldron.test.test_runner_source",
            "cauldron.test.test_save",
            "cauldron.test.test_server",
            "cauldron.test.test_server_display",
            "cauldron.test.test_server_run_status",
            "cauldron.test.test_server_status",
            "cauldron.test.test_server_synchronize",
            "cauldron.test.test_session_buffer",
            "cauldron.test.test_session_display",
            "cauldron.test.test_session_reloading",
            "cauldron.test.test_session_spark",
            "cauldron.test.test_show",
            "cauldron.test.test_snapshot",
            "cauldron.test.test_status",
            "cauldron.test.test_steps",
            "cauldron.test.test_syntax_highlighting",
            "cauldron.test.test_systems",
            "cauldron.test.test_templating",
            "cauldron.test.test_test_support",
            "cauldron.test.test_version",
            "cauldron.test.writing",
            "cauldron.test.writing.test_writing"
        ],
        "version": "0.0.31"
    },
    "caulk": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "causal": {
        "cmdline": [],
        "modules": [
            "causal",
            "causal.delicious",
            "causal.delicious.models",
            "causal.delicious.service",
            "causal.delicious.tests",
            "causal.delicious.urls",
            "causal.delicious.views",
            "causal.facebook",
            "causal.facebook.models",
            "causal.facebook.service",
            "causal.facebook.tests",
            "causal.facebook.urls",
            "causal.facebook.views",
            "causal.flickr",
            "causal.flickr.models",
            "causal.flickr.service",
            "causal.flickr.tests",
            "causal.flickr.urls",
            "causal.flickr.views",
            "causal.foursquare",
            "causal.foursquare.models",
            "causal.foursquare.service",
            "causal.foursquare.tests",
            "causal.foursquare.urls",
            "causal.foursquare.views",
            "causal.github",
            "causal.github.models",
            "causal.github.service",
            "causal.github.tests",
            "causal.github.urls",
            "causal.github.views",
            "causal.googlereader",
            "causal.googlereader.models",
            "causal.googlereader.service",
            "causal.googlereader.tests",
            "causal.googlereader.urls",
            "causal.googlereader.views",
            "causal.lastfm",
            "causal.lastfm.models",
            "causal.lastfm.service",
            "causal.lastfm.tests",
            "causal.lastfm.urls",
            "causal.lastfm.views",
            "causal.local_settings",
            "causal.main",
            "causal.main.admin",
            "causal.main.context_processors",
            "causal.main.context_processors.registration",
            "causal.main.decorators",
            "causal.main.exceptions",
            "causal.main.forms",
            "causal.main.handlers",
            "causal.main.middleware",
            "causal.main.middleware.messaging",
            "causal.main.middleware.service_apps",
            "causal.main.migrations",
            "causal.main.migrations.0001_initial",
            "causal.main.models",
            "causal.main.templatetags",
            "causal.main.templatetags.extras",
            "causal.main.templatetags.media_loaders",
            "causal.main.templatetags.messages",
            "causal.main.tests",
            "causal.main.utils",
            "causal.main.utils.services",
            "causal.main.utils.views",
            "causal.main.views",
            "causal.manage",
            "causal.settings",
            "causal.twitter",
            "causal.twitter.models",
            "causal.twitter.service",
            "causal.twitter.tests",
            "causal.twitter.urls",
            "causal.twitter.utils",
            "causal.twitter.views",
            "causal.urls",
            "causal.wingdbstub"
        ],
        "version": "1.0.21"
    },
    "causalinference": {
        "cmdline": [],
        "modules": [
            "causalinference",
            "causalinference.causal",
            "causalinference.core",
            "causalinference.core.data",
            "causalinference.core.propensity",
            "causalinference.core.strata",
            "causalinference.core.summary",
            "causalinference.estimators",
            "causalinference.estimators.base",
            "causalinference.estimators.blocking",
            "causalinference.estimators.matching",
            "causalinference.estimators.ols",
            "causalinference.estimators.weighting",
            "causalinference.utils",
            "causalinference.utils.tools"
        ],
        "version": "0.1.2"
    },
    "causalinfo": {
        "cmdline": [],
        "modules": [
            "causalinfo",
            "causalinfo.equations",
            "causalinfo.graph",
            "causalinfo.measure",
            "causalinfo.payoff",
            "causalinfo.probability",
            "causalinfo.util",
            "tests",
            "tests.test_causalinfo",
            "tests.test_measure",
            "tests.test_probability"
        ],
        "version": "1.2.0"
    },
    "causality": {
        "cmdline": [],
        "modules": [
            "causality",
            "causality.inference",
            "causality.inference.independence_tests",
            "causality.inference.search",
            "causality.nonparametric",
            "causality.nonparametric.causal_reg"
        ],
        "version": "0.0.3"
    },
    "causalmodels": {
        "cmdline": [],
        "modules": [
            "causalmodels",
            "causalmodels.exception",
            "causalmodels.interface",
            "causalmodels.lingam",
            "causalmodels.result"
        ],
        "version": "0.4.0"
    },
    "cause": {
        "cmdline": [],
        "modules": [
            "cause"
        ],
        "version": "0.1.0"
    },
    "cause-effect": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "causeyo-couch": {
        "cmdline": [],
        "modules": [
            "causeyo_couch"
        ],
        "version": "1.5.0"
    },
    "causeyo-nester": {
        "cmdline": [],
        "modules": [
            "causeyo_nester"
        ],
        "version": "1.5.0"
    },
    "cauth": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cavaconn": {
        "cmdline": [],
        "modules": [
            "cavaconn"
        ],
        "version": "0.1"
    },
    "cavalete": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cavatina": {
        "cmdline": [],
        "modules": [
            "cavatina",
            "cavatina._version",
            "cavatina.language",
            "cavatina.lexer",
            "cavatina.rtf2xml",
            "cavatina.test",
            "cavatina.translator",
            "cavatina.writeRTF"
        ],
        "version": "0.1.2"
    },
    "cavejohnson": {
        "cmdline": [],
        "modules": [
            "cavejohnson"
        ],
        "version": "1.3"
    },
    "caveman": {
        "cmdline": [
            "check_manifest.py"
        ],
        "modules": [
            "caveman",
            "caveman.checker",
            "caveman.env",
            "caveman.manifest",
            "caveman.urls"
        ],
        "version": "1.0"
    },
    "cavirtex-sdk": {
        "cmdline": [],
        "modules": [
            "cavirtex",
            "cavirtex.config",
            "cavirtex.exception",
            "cavirtex.private",
            "cavirtex.public"
        ],
        "version": "0.2.00"
    },
    "caxes": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cayenne-mqtt": {
        "cmdline": [],
        "modules": [
            "cayenne",
            "cayenne.client"
        ],
        "version": "1.0.0"
    },
    "cazy-parser": {
        "cmdline": [],
        "modules": [
            "cazy_parser",
            "cazy_parser.create_cazy_db",
            "cazy_parser.extract_cazy_ids"
        ],
        "version": "1.0.1"
    },
    "cb": {
        "cmdline": [],
        "modules": [
            "cb",
            "cb.cli",
            "cb.commands",
            "cb.log",
            "cb.server",
            "cb.tools"
        ],
        "version": "1.0.7"
    },
    "cbagent": {
        "cmdline": [],
        "modules": [
            "cbagent",
            "cbagent.collectors",
            "cbagent.collectors.active_tasks",
            "cbagent.collectors.atop",
            "cbagent.collectors.collector",
            "cbagent.collectors.iostat",
            "cbagent.collectors.latency",
            "cbagent.collectors.libstats",
            "cbagent.collectors.libstats.atopstats",
            "cbagent.collectors.libstats.iostat",
            "cbagent.collectors.libstats.net",
            "cbagent.collectors.libstats.pool",
            "cbagent.collectors.libstats.psstats",
            "cbagent.collectors.libstats.remotestats",
            "cbagent.collectors.net",
            "cbagent.collectors.ns_server",
            "cbagent.collectors.observe",
            "cbagent.collectors.ps",
            "cbagent.collectors.spring_latency",
            "cbagent.collectors.sync_gateway",
            "cbagent.collectors.xdcr_lag",
            "cbagent.metadata_client",
            "cbagent.settings",
            "cbagent.stores"
        ],
        "version": "2.5.0"
    },
    "cbapi": {
        "cmdline": [
            "cbapi-protection",
            "cbapi-response"
        ],
        "modules": [
            "cbapi",
            "cbapi.auth",
            "cbapi.cache",
            "cbapi.cache.lru",
            "cbapi.cache.redis",
            "cbapi.connection",
            "cbapi.errors",
            "cbapi.event",
            "cbapi.example_helpers",
            "cbapi.models",
            "cbapi.oldmodels",
            "cbapi.protection",
            "cbapi.protection.cli",
            "cbapi.protection.models",
            "cbapi.protection.rest_api",
            "cbapi.query",
            "cbapi.response",
            "cbapi.response.cli",
            "cbapi.response.event",
            "cbapi.response.live_response_api",
            "cbapi.response.models",
            "cbapi.response.rest_api",
            "cbapi.response.sensor_events",
            "cbapi.response.threat_feed",
            "cbapi.response.utils",
            "cbapi.utils",
            "cbapi.winerror"
        ],
        "version": "1.0.1"
    },
    "cbar": {
        "cmdline": [],
        "modules": [
            "cbar",
            "cbar.classifier",
            "cbar.cross_validation",
            "cbar.evaluation",
            "cbar.loreta",
            "cbar.main",
            "cbar.pamir",
            "cbar.preprocess",
            "cbar.settings",
            "cbar.utils"
        ],
        "version": "0.1"
    },
    "cbas": {
        "cmdline": [
            "cbas"
        ],
        "modules": [
            "cbas",
            "cbas.auth_server",
            "cbas.configuration",
            "cbas.log",
            "cbas.password_providers"
        ],
        "version": "156"
    },
    "cbase62": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "cbcli": {
        "cmdline": [],
        "modules": [
            "cbcli"
        ],
        "version": "0.1.2"
    },
    "cbeams": {
        "cmdline": [],
        "modules": [
            "cbeams",
            "cbeams.animate",
            "cbeams.cmdline",
            "cbeams.shape",
            "cbeams.terminal"
        ],
        "version": "1.0.1"
    },
    "cbemd": {
        "cmdline": [
            "cbemd.h"
        ],
        "modules": [],
        "version": "1.0"
    },
    "cbexchange": {
        "cmdline": [],
        "modules": [
            "cbexchange",
            "cbexchange.client",
            "cbexchange.error",
            "cbexchange.market",
            "cbexchange.orderbook",
            "cbexchange.private",
            "cbexchange.websock"
        ],
        "version": "1.0.3"
    },
    "cbf": {
        "cmdline": [],
        "modules": [
            "__init__",
            "cbf"
        ],
        "version": "1.1.3"
    },
    "cbfeeds": {
        "cmdline": [],
        "modules": [
            "cbfeeds",
            "cbfeeds.feed"
        ],
        "version": "0.8.0"
    },
    "cbg": {
        "cmdline": [],
        "modules": [
            "cbg",
            "cbg.bitvector",
            "cbg.bytearray",
            "cbg.cmds",
            "cbg.cmds.bitcount",
            "cbg.cmds.bloom",
            "cbg.cmds.build",
            "cbg.cmds.compress",
            "cbg.cmds.delete",
            "cbg.cmds.dump",
            "cbg.cmds.insert",
            "cbg.cmds.jaccard_index",
            "cbg.cmds.kmers",
            "cbg.cmds.load",
            "cbg.cmds.merge",
            "cbg.cmds.rowjoin",
            "cbg.cmds.samples",
            "cbg.cmds.search",
            "cbg.cmds.shutdown",
            "cbg.cmds.stats",
            "cbg.cmds.uncompress",
            "cbg.decorators",
            "cbg.graph",
            "cbg.graph.base",
            "cbg.graph.probabilistic",
            "cbg.matrix",
            "cbg.matrix.transpose",
            "cbg.sketch",
            "cbg.sketch.hll",
            "cbg.sketch.minhash",
            "cbg.storage",
            "cbg.storage.base",
            "cbg.storage.graph.base",
            "cbg.storage.graph.probabilistic",
            "cbg.tasks",
            "cbg.tasks.tasks",
            "cbg.utils",
            "cbg.utils.cortex",
            "cbg.utils.fncts",
            "cbg.version"
        ],
        "version": "0.1.5"
    },
    "cbh-chembl-id-generator": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cbh-chembl-ws-extension": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cbh-core-ws": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cbint": {
        "cmdline": [],
        "modules": [
            "cbint",
            "cbint.utils",
            "cbint.utils.bridge",
            "cbint.utils.cbserver",
            "cbint.utils.daemon",
            "cbint.utils.detonation",
            "cbint.utils.detonation.binary_analysis",
            "cbint.utils.detonation.binary_queue",
            "cbint.utils.feed",
            "cbint.utils.filesystem",
            "cbint.utils.flaskfeed",
            "cbint.utils.json",
            "cbint.version"
        ],
        "version": "0.8.5"
    },
    "cbipy": {
        "cmdline": [],
        "modules": [
            "cbipy"
        ],
        "version": "0.1"
    },
    "cbktree": {
        "cmdline": [],
        "modules": [
            "cbktree",
            "cbktree.version"
        ],
        "version": "0.3.1"
    },
    "cblog": {
        "cmdline": [],
        "modules": [
            "cblog",
            "cblog.cachecontrol",
            "cblog.commands",
            "cblog.config",
            "cblog.controllers",
            "cblog.controllers.feed",
            "cblog.fflash",
            "cblog.model",
            "cblog.release",
            "cblog.spamfilters",
            "cblog.spamfilters.blacklist",
            "cblog.spamfilters.content",
            "cblog.templates",
            "cblog.templates.SiteBase",
            "cblog.templates.SiteTemplate",
            "cblog.templates.archive",
            "cblog.templates.blog",
            "cblog.templates.edit",
            "cblog.templates.featured",
            "cblog.templates.feed",
            "cblog.templates.login",
            "cblog.templates.view",
            "cblog.tests",
            "cblog.tests.test_controllers",
            "cblog.tests.test_model",
            "cblog.utils",
            "cblog.utils.bunch",
            "cblog.utils.formatting",
            "cblog.utils.misc",
            "cblog.widgets",
            "cblog.widgets.articleform",
            "cblog.widgets.base",
            "cblog.widgets.commentform",
            "cblog.widgets.fancyflash",
            "cblog.widgets.gravatar",
            "cblog.widgets.gravatar.gravatar",
            "cblog.widgets.jslibs",
            "cblog.widgets.sitewide",
            "cblog.widgets.validators"
        ],
        "version": "0.1a"
    },
    "cbm-utils": {
        "cmdline": [],
        "modules": [
            "Utils"
        ],
        "version": "1.0.0"
    },
    "cbmcodecs": {
        "cmdline": [],
        "modules": [
            "cbmcodecs",
            "cbmcodecs.petscii_c64en_lc",
            "cbmcodecs.petscii_c64en_uc",
            "cbmcodecs.petscii_vic20en_lc",
            "cbmcodecs.petscii_vic20en_uc"
        ],
        "version": "0.1.0"
    },
    "cbmock": {
        "cmdline": [],
        "modules": [
            "cbmock",
            "cbmock.cbmock",
            "cbmock.helpers",
            "cbmock.httpmock",
            "cbmock.mcbackend",
            "cbmock.mcmock",
            "cbmock.smartserver"
        ],
        "version": "0.3.2"
    },
    "cbmpy": {
        "cmdline": [],
        "modules": [
            "cbmpy",
            "cbmpy.CBCPLEX",
            "cbmpy.CBCommon",
            "cbmpy.CBConfig",
            "cbmpy.CBDataStruct",
            "cbmpy.CBGLPK",
            "cbmpy.CBGUI",
            "cbmpy.CBModel",
            "cbmpy.CBModelTools",
            "cbmpy.CBMultiCore",
            "cbmpy.CBMultiEnv",
            "cbmpy.CBMultiModel",
            "cbmpy.CBNetDB",
            "cbmpy.CBPlot",
            "cbmpy.CBQt4",
            "cbmpy.CBRead",
            "cbmpy.CBReadtxt",
            "cbmpy.CBSandBox",
            "cbmpy.CBSolver",
            "cbmpy.CBSolver.cplx",
            "cbmpy.CBSolver2",
            "cbmpy.CBTools",
            "cbmpy.CBWrite",
            "cbmpy.CBWx",
            "cbmpy.CBXML",
            "cbmpy.PyscesSED",
            "cbmpy.PyscesStoich",
            "cbmpy._multicoreenvfva",
            "cbmpy._multicorefva",
            "cbmpy._qtloader",
            "cbmpy.fluxmodules",
            "cbmpy.fluxmodules.TestDecomposition",
            "cbmpy.fluxmodules.TestEnumerate",
            "cbmpy.fluxmodules.TestFluxModules",
            "cbmpy.fluxmodules.TestMatroid",
            "cbmpy.fluxmodules.TestSparseRationals",
            "cbmpy.fluxmodules.decomposition",
            "cbmpy.fluxmodules.enumerate",
            "cbmpy.fluxmodules.fluxmodules",
            "cbmpy.fluxmodules.matroid",
            "cbmpy.fluxmodules.random_color",
            "cbmpy.fluxmodules.sparserationals",
            "cbmpy.miriamids",
            "cbmpy.models.default_models.zip",
            "cbmpy.nosetests",
            "cbmpy.nosetests.cbmpy_test_bundle_v1.zip",
            "cbmpy.nosetests.test_Fbase",
            "cbmpy.nosetests.test_Reagent",
            "cbmpy.nosetests.test_loadSBML",
            "cbmpy.pyparsing",
            "cbmpy.solver",
            "cbmpy.solver.CBCPLEX",
            "cbmpy.solver.CBGLPK",
            "cbmpy.solver.CBSolver"
        ],
        "version": "0.7.13"
    },
    "cbms": {
        "cmdline": [],
        "modules": [
            "cbms",
            "cbms.cbms"
        ],
        "version": "1.2.0"
    },
    "cbor": {
        "cmdline": [],
        "modules": [
            "cbor",
            "cbor.VERSION",
            "cbor.cbor",
            "cbor.cbor_rpc_client",
            "cbor.tagmap"
        ],
        "version": "1.0.0"
    },
    "cbor2": {
        "cmdline": [],
        "modules": [
            "cbor2",
            "cbor2.compat",
            "cbor2.decoder",
            "cbor2.encoder",
            "cbor2.types"
        ],
        "version": "4.0.0"
    },
    "cbrf": {
        "cmdline": [],
        "modules": [
            "cbrf",
            "cbrf.api",
            "cbrf.const",
            "cbrf.models",
            "cbrf.tests",
            "cbrf.utils"
        ],
        "version": "0.3.3"
    },
    "cbrf-rates": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cbs": {
        "cmdline": [],
        "modules": [
            "cbs"
        ],
        "version": "1.0.0"
    },
    "cbshell": {
        "cmdline": [
            "cbshell"
        ],
        "modules": [],
        "version": "0.1"
    },
    "cbsodata": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "cbstats": {
        "cmdline": [],
        "modules": [
            "cbstats"
        ],
        "version": "1.0.4"
    },
    "cbtestlib": {
        "cmdline": [],
        "modules": [
            "cbtestlib",
            "cbtestlib.EC2",
            "cbtestlib.builds",
            "cbtestlib.builds.BeautifulSoup",
            "cbtestlib.builds.build_query",
            "cbtestlib.cbkarma",
            "cbtestlib.cbkarma.rest_client",
            "cbtestlib.cli_interface",
            "cbtestlib.couchbase",
            "cbtestlib.couchbase.cluster",
            "cbtestlib.couchbase.document",
            "cbtestlib.couchbase.documentgenerator",
            "cbtestlib.couchbase.stats_tools",
            "cbtestlib.couchbase.view_helper",
            "cbtestlib.couchdb",
            "cbtestlib.couchdb.client",
            "cbtestlib.couchdb.design",
            "cbtestlib.couchdb.http",
            "cbtestlib.couchdb.json",
            "cbtestlib.couchdb.mapping",
            "cbtestlib.couchdb.multipart",
            "cbtestlib.couchdb.view",
            "cbtestlib.crc32",
            "cbtestlib.exception",
            "cbtestlib.load_runner",
            "cbtestlib.logger",
            "cbtestlib.mc_ascii_client",
            "cbtestlib.mc_bin_client",
            "cbtestlib.mc_bin_server",
            "cbtestlib.membase",
            "cbtestlib.membase.api",
            "cbtestlib.membase.api.exception",
            "cbtestlib.membase.api.httplib2",
            "cbtestlib.membase.api.httplib2.iri2uri",
            "cbtestlib.membase.api.mimeTypes",
            "cbtestlib.membase.api.rest_client",
            "cbtestlib.membase.api.tap",
            "cbtestlib.membase.helper",
            "cbtestlib.membase.helper.bucket_helper",
            "cbtestlib.membase.helper.checkpoints",
            "cbtestlib.membase.helper.cluster_helper",
            "cbtestlib.membase.helper.failover_helper",
            "cbtestlib.membase.helper.rebalance_helper",
            "cbtestlib.membase.helper.spatial_helper",
            "cbtestlib.membase.helper.stats",
            "cbtestlib.membase.performance",
            "cbtestlib.membase.performance.stats",
            "cbtestlib.memcacheConstants",
            "cbtestlib.memcached",
            "cbtestlib.memcached.helper",
            "cbtestlib.memcached.helper.data_helper",
            "cbtestlib.memcached.helper.kvstore",
            "cbtestlib.memcached.helper.old_kvstore",
            "cbtestlib.perf_engines",
            "cbtestlib.perf_engines.cbsoda",
            "cbtestlib.perf_engines.libobserve",
            "cbtestlib.perf_engines.libobserve.obs",
            "cbtestlib.perf_engines.libobserve.obs_def",
            "cbtestlib.perf_engines.libobserve.obs_helper",
            "cbtestlib.perf_engines.libobserve.obs_mcsoda",
            "cbtestlib.perf_engines.libobserve.obs_req",
            "cbtestlib.perf_engines.libobserve.obs_res",
            "cbtestlib.perf_engines.libstats",
            "cbtestlib.perf_engines.libstats.carbon_feeder",
            "cbtestlib.perf_engines.libstats.carbon_key",
            "cbtestlib.perf_engines.libstats.carbon_msg",
            "cbtestlib.perf_engines.mcsoda",
            "cbtestlib.perf_engines.mcsoda_mongo",
            "cbtestlib.perf_engines.sys_helper",
            "cbtestlib.remote",
            "cbtestlib.remote.Installer",
            "cbtestlib.remote.remote_util",
            "cbtestlib.remote.stats_windows_helper",
            "cbtestlib.results_helper",
            "cbtestlib.tap",
            "cbtestlib.tasks",
            "cbtestlib.tasks.future",
            "cbtestlib.tasks.task",
            "cbtestlib.tasks.taskmanager",
            "cbtestlib.testconstants",
            "cbtestlib.testrunner_common",
            "cbtestlib.xunit"
        ],
        "version": "1.0.0"
    },
    "cbtests": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cbtop": {
        "cmdline": [],
        "modules": [
            "lib",
            "lib.EC2",
            "lib.bson",
            "lib.bson.binary",
            "lib.bson.code",
            "lib.bson.dbref",
            "lib.bson.errors",
            "lib.bson.json_util",
            "lib.bson.max_key",
            "lib.bson.min_key",
            "lib.bson.objectid",
            "lib.bson.son",
            "lib.bson.timestamp",
            "lib.bson.tz_util",
            "lib.builds",
            "lib.builds.BeautifulSoup",
            "lib.builds.build_query",
            "lib.cbkarma",
            "lib.cbkarma.rest_client",
            "lib.cli_interface",
            "lib.couchbase",
            "lib.couchbase.cluster",
            "lib.couchbase.document",
            "lib.couchbase.documentgenerator",
            "lib.couchbase.stats_tools",
            "lib.couchbase.view_helper",
            "lib.couchdb",
            "lib.couchdb.client",
            "lib.couchdb.design",
            "lib.couchdb.http",
            "lib.couchdb.json",
            "lib.couchdb.mapping",
            "lib.couchdb.multipart",
            "lib.couchdb.view",
            "lib.crc32",
            "lib.exception",
            "lib.load_runner",
            "lib.logger",
            "lib.mc_ascii_client",
            "lib.mc_bin_client",
            "lib.mc_bin_server",
            "lib.membase",
            "lib.membase.api",
            "lib.membase.api.exception",
            "lib.membase.api.httplib2",
            "lib.membase.api.httplib2.iri2uri",
            "lib.membase.api.mimeTypes",
            "lib.membase.api.rest_client",
            "lib.membase.api.tap",
            "lib.membase.helper",
            "lib.membase.helper.bucket_helper",
            "lib.membase.helper.checkpoints",
            "lib.membase.helper.cluster_helper",
            "lib.membase.helper.failover_helper",
            "lib.membase.helper.rebalance_helper",
            "lib.membase.helper.spatial_helper",
            "lib.membase.helper.stats",
            "lib.membase.performance",
            "lib.membase.performance.stats",
            "lib.memcacheConstants",
            "lib.memcached",
            "lib.memcached.helper",
            "lib.memcached.helper.data_helper",
            "lib.memcached.helper.kvstore",
            "lib.memcached.helper.old_kvstore",
            "lib.old_tasks",
            "lib.old_tasks.task",
            "lib.old_tasks.taskhelper",
            "lib.old_tasks.taskmanager",
            "lib.perf_engines",
            "lib.perf_engines.cbsoda",
            "lib.perf_engines.libobserve",
            "lib.perf_engines.libobserve.obs",
            "lib.perf_engines.libobserve.obs_def",
            "lib.perf_engines.libobserve.obs_helper",
            "lib.perf_engines.libobserve.obs_mcsoda",
            "lib.perf_engines.libobserve.obs_req",
            "lib.perf_engines.libobserve.obs_res",
            "lib.perf_engines.libstats",
            "lib.perf_engines.libstats.carbon_feeder",
            "lib.perf_engines.libstats.carbon_key",
            "lib.perf_engines.libstats.carbon_msg",
            "lib.perf_engines.mcsoda",
            "lib.perf_engines.mcsoda_mongo",
            "lib.perf_engines.sys_helper",
            "lib.pymongo",
            "lib.pymongo.collection",
            "lib.pymongo.common",
            "lib.pymongo.connection",
            "lib.pymongo.cursor",
            "lib.pymongo.cursor_manager",
            "lib.pymongo.database",
            "lib.pymongo.errors",
            "lib.pymongo.helpers",
            "lib.pymongo.master_slave_connection",
            "lib.pymongo.message",
            "lib.pymongo.pool",
            "lib.pymongo.replica_set_connection",
            "lib.pymongo.son_manipulator",
            "lib.pymongo.uri_parser",
            "lib.remote",
            "lib.remote.Installer",
            "lib.remote.remote_util",
            "lib.remote.stats_windows_helper",
            "lib.results_helper",
            "lib.tap",
            "lib.tasks",
            "lib.tasks.future",
            "lib.tasks.task",
            "lib.tasks.taskmanager",
            "lib.testconstants",
            "lib.testrunner_common",
            "lib.xunit",
            "libcbtop",
            "libcbtop.collector",
            "libcbtop.data_helper",
            "libcbtop.handler",
            "libcbtop.json_handler",
            "libcbtop.main",
            "libcbtop.mc_collector",
            "libcbtop.mc_source",
            "libcbtop.paint",
            "libcbtop.seriesly_handler",
            "libcbtop.server",
            "libcbtop.source",
            "libcbtop.sys_helper",
            "libcbtop.visit_cb",
            "metadata",
            "metadata.visit",
            "tabula",
            "tabula.painter",
            "tabula.section",
            "tabula.table",
            "whisper",
            "whisper.core",
            "whisper.exceptions"
        ],
        "version": "1.0.1"
    },
    "cbucho": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "cbuh": {
        "cmdline": [
            "cbuh"
        ],
        "modules": [
            "cbuh",
            "cbuh.config",
            "cbuh.index",
            "cbuh.main",
            "cbuh.mutt",
            "cbuh.search",
            "cbuh.sort"
        ],
        "version": "0.0.1"
    },
    "cbv-utils": {
        "cmdline": [],
        "modules": [
            "cbv_utils",
            "cbv_utils.mixins",
            "cbv_utils.models",
            "cbv_utils.tests",
            "cbv_utils.tests._utils",
            "cbv_utils.tests.mixins",
            "cbv_utils.tests.views",
            "cbv_utils.views"
        ],
        "version": "0.1.2"
    },
    "cc": {
        "cmdline": [],
        "modules": [
            "cc",
            "cc.c",
            "cc.create_db"
        ],
        "version": "0.1"
    },
    "cc-nester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cc-plugin-glider": {
        "cmdline": [],
        "modules": [
            "cc_plugin_glider",
            "cc_plugin_glider.glider_dac",
            "cc_plugin_glider.tests",
            "cc_plugin_glider.tests.test_glidercheck"
        ],
        "version": "1.0.2"
    },
    "cc-plugin-ncei": {
        "cmdline": [],
        "modules": [
            "cc_plugin_ncei",
            "cc_plugin_ncei.ncei_base",
            "cc_plugin_ncei.ncei_grid",
            "cc_plugin_ncei.ncei_point",
            "cc_plugin_ncei.ncei_profile",
            "cc_plugin_ncei.ncei_swath",
            "cc_plugin_ncei.ncei_timeseries",
            "cc_plugin_ncei.ncei_timeseries_profile",
            "cc_plugin_ncei.ncei_trajectory",
            "cc_plugin_ncei.ncei_trajectory_profile",
            "cc_plugin_ncei.tests",
            "cc_plugin_ncei.tests.ncei_test_case",
            "cc_plugin_ncei.tests.resources",
            "cc_plugin_ncei.tests.test_feature_detection",
            "cc_plugin_ncei.tests.test_ncei_point",
            "cc_plugin_ncei.tests.test_ncei_profile",
            "cc_plugin_ncei.tests.test_ncei_timeseries",
            "cc_plugin_ncei.tests.test_ncei_timeseries_profile",
            "cc_plugin_ncei.tests.test_ncei_trajectory",
            "cc_plugin_ncei.tests.test_ncei_trajectory_profile",
            "cc_plugin_ncei.util"
        ],
        "version": "2.0.1"
    },
    "cc.buildout-reports": {
        "cmdline": [],
        "modules": [
            "cc",
            "cc.buildout_reports",
            "cc.buildout_reports.XXXreport2html",
            "cc.buildout_reports.xxx"
        ],
        "version": "0.1"
    },
    "cc.gettext": {
        "cmdline": [],
        "modules": [
            "cc",
            "cc.gettext"
        ],
        "version": "0.7"
    },
    "cc.license": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cc.licenserdf": {
        "cmdline": [],
        "modules": [
            "cc",
            "cc.licenserdf",
            "cc.licenserdf.tests",
            "cc.licenserdf.tests.test_jurisdiction_tool",
            "cc.licenserdf.tests.test_license_tool",
            "cc.licenserdf.tests.util",
            "cc.licenserdf.tools",
            "cc.licenserdf.tools.add",
            "cc.licenserdf.tools.gen_i18n_titles",
            "cc.licenserdf.tools.jurisdiction",
            "cc.licenserdf.tools.license",
            "cc.licenserdf.tools.make_schema",
            "cc.licenserdf.tools.merge",
            "cc.licenserdf.tools.rebuild_images",
            "cc.licenserdf.tools.support",
            "cc.licenserdf.tools.translate_rdf",
            "cc.licenserdf.util"
        ],
        "version": "0.2.29"
    },
    "cc.utils": {
        "cmdline": [],
        "modules": [
            "cutils",
            "cutils.check_list",
            "cutils.create_sh",
            "cutils.gmail",
            "cutils.location",
            "cutils.progress_bar",
            "cutils.requests_util",
            "cutils.split_merge",
            "cutils.unique",
            "cutils.update_input"
        ],
        "version": "0.0.14"
    },
    "cc42": {
        "cmdline": [],
        "modules": [
            "cc42",
            "cc42.cc42"
        ],
        "version": "0.0.2"
    },
    "ccall": {
        "cmdline": [],
        "modules": [
            "ccall",
            "ccall.__meta__",
            "ccall.base",
            "ccall.safe"
        ],
        "version": "0.1.0"
    },
    "ccbupgrade": {
        "cmdline": [
            "ccbup.py"
        ],
        "modules": [],
        "version": "0.2.0"
    },
    "ccc-gistemp": {
        "cmdline": [
            "ccc-gistemp.py"
        ],
        "modules": [
            "CCCgistemp",
            "CCCgistemp.code",
            "CCCgistemp.code.earth",
            "CCCgistemp.code.eqarea",
            "CCCgistemp.code.giss_data",
            "CCCgistemp.code.parameters",
            "CCCgistemp.code.read_config",
            "CCCgistemp.code.series",
            "CCCgistemp.code.step0",
            "CCCgistemp.code.step1",
            "CCCgistemp.code.step2",
            "CCCgistemp.code.step3",
            "CCCgistemp.code.step4",
            "CCCgistemp.code.step5",
            "CCCgistemp.tool",
            "CCCgistemp.tool.SBBXtotext",
            "CCCgistemp.tool.camatch",
            "CCCgistemp.tool.cascrape",
            "CCCgistemp.tool.ccc-gistemp",
            "CCCgistemp.tool.ccc_tarfile",
            "CCCgistemp.tool.ccc_zipfile",
            "CCCgistemp.tool.cmpv2",
            "CCCgistemp.tool.compare_results",
            "CCCgistemp.tool.extend_path",
            "CCCgistemp.tool.fetch",
            "CCCgistemp.tool.fort",
            "CCCgistemp.tool.fortrantotext",
            "CCCgistemp.tool.gio",
            "CCCgistemp.tool.grid",
            "CCCgistemp.tool.kml",
            "CCCgistemp.tool.landmask",
            "CCCgistemp.tool.maskpng",
            "CCCgistemp.tool.multi",
            "CCCgistemp.tool.ncartotext",
            "CCCgistemp.tool.popchart",
            "CCCgistemp.tool.preflight",
            "CCCgistemp.tool.rectmask",
            "CCCgistemp.tool.ref_test_data",
            "CCCgistemp.tool.regression",
            "CCCgistemp.tool.stationmask",
            "CCCgistemp.tool.stationplot",
            "CCCgistemp.tool.subboxcmp",
            "CCCgistemp.tool.subboxpng",
            "CCCgistemp.tool.subboxtotext",
            "CCCgistemp.tool.subboxv2",
            "CCCgistemp.tool.ukmetv2",
            "CCCgistemp.tool.unbdb",
            "CCCgistemp.tool.v2index",
            "CCCgistemp.tool.v2records",
            "CCCgistemp.tool.v2split",
            "CCCgistemp.tool.vischeck",
            "CCCgistemp.tool.zontotext"
        ],
        "version": "0.6.1"
    },
    "cccolutils": {
        "cmdline": [],
        "modules": [],
        "version": "1.5"
    },
    "cccp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ccd-tools": {
        "cmdline": [
            "ccd_list_ip.py",
            "dd_single.py",
            "dd_space_time.py",
            "dd_test.py",
            "dd_time.py",
            "ddplot.py",
            "ddps.py",
            "ddpst.py",
            "ddpt.py"
        ],
        "modules": [
            "lib_ccd_test",
            "lib_ccd_test.run_test",
            "lib_dd",
            "lib_dd.Jacobian",
            "lib_dd.base_class",
            "lib_dd.conductivity",
            "lib_dd.conductivity.model",
            "lib_dd.config",
            "lib_dd.config.cfg_base",
            "lib_dd.config.cfg_single",
            "lib_dd.config.cfg_time",
            "lib_dd.decomposition",
            "lib_dd.decomposition.ccd_single",
            "lib_dd.decomposition.ccd_single_stateless",
            "lib_dd.int_pars",
            "lib_dd.interface",
            "lib_dd.io",
            "lib_dd.io.ascii",
            "lib_dd.io.ascii_audit",
            "lib_dd.io.helper",
            "lib_dd.io.io_general",
            "lib_dd.models",
            "lib_dd.models.ccd_res",
            "lib_dd.plot",
            "lib_dd.plot_stats",
            "lib_dd.starting_parameters",
            "lib_dd.test_functions",
            "lib_dd.version"
        ],
        "version": "0.8.3"
    },
    "ccdproc": {
        "cmdline": [],
        "modules": [
            "astropy_helpers",
            "astropy_helpers.commands",
            "astropy_helpers.commands._dummy",
            "astropy_helpers.commands._test_compat",
            "astropy_helpers.commands.build_ext",
            "astropy_helpers.commands.build_py",
            "astropy_helpers.commands.build_sphinx",
            "astropy_helpers.commands.install",
            "astropy_helpers.commands.install_lib",
            "astropy_helpers.commands.register",
            "astropy_helpers.commands.setup_package",
            "astropy_helpers.commands.test",
            "astropy_helpers.compat",
            "astropy_helpers.compat._subprocess_py2",
            "astropy_helpers.compat.subprocess",
            "astropy_helpers.distutils_helpers",
            "astropy_helpers.git_helpers",
            "astropy_helpers.setup_helpers",
            "astropy_helpers.sphinx",
            "astropy_helpers.sphinx.conf",
            "astropy_helpers.sphinx.ext",
            "astropy_helpers.sphinx.ext.astropyautosummary",
            "astropy_helpers.sphinx.ext.autodoc_enhancements",
            "astropy_helpers.sphinx.ext.automodapi",
            "astropy_helpers.sphinx.ext.automodsumm",
            "astropy_helpers.sphinx.ext.changelog_links",
            "astropy_helpers.sphinx.ext.comment_eater",
            "astropy_helpers.sphinx.ext.compiler_unparse",
            "astropy_helpers.sphinx.ext.docscrape",
            "astropy_helpers.sphinx.ext.docscrape_sphinx",
            "astropy_helpers.sphinx.ext.doctest",
            "astropy_helpers.sphinx.ext.edit_on_github",
            "astropy_helpers.sphinx.ext.numpydoc",
            "astropy_helpers.sphinx.ext.phantom_import",
            "astropy_helpers.sphinx.ext.smart_resolver",
            "astropy_helpers.sphinx.ext.tests",
            "astropy_helpers.sphinx.ext.tests.test_autodoc_enhancements",
            "astropy_helpers.sphinx.ext.tests.test_automodapi",
            "astropy_helpers.sphinx.ext.tests.test_automodsumm",
            "astropy_helpers.sphinx.ext.tests.test_docscrape",
            "astropy_helpers.sphinx.ext.tests.test_utils",
            "astropy_helpers.sphinx.ext.tocdepthfix",
            "astropy_helpers.sphinx.ext.traitsdoc",
            "astropy_helpers.sphinx.ext.utils",
            "astropy_helpers.sphinx.setup_package",
            "astropy_helpers.test_helpers",
            "astropy_helpers.utils",
            "astropy_helpers.version",
            "astropy_helpers.version_helpers",
            "ccdproc",
            "ccdproc._astropy_init",
            "ccdproc.ccddata",
            "ccdproc.combiner",
            "ccdproc.conftest",
            "ccdproc.core",
            "ccdproc.image_collection",
            "ccdproc.log_meta",
            "ccdproc.tests",
            "ccdproc.tests.pytest_fixtures",
            "ccdproc.tests.setup_package",
            "ccdproc.tests.test_ccddata",
            "ccdproc.tests.test_ccdmask",
            "ccdproc.tests.test_ccdproc",
            "ccdproc.tests.test_ccdproc_logging",
            "ccdproc.tests.test_combiner",
            "ccdproc.tests.test_cosmicray",
            "ccdproc.tests.test_gain",
            "ccdproc.tests.test_image_collection",
            "ccdproc.tests.test_keyword",
            "ccdproc.tests.test_wrapped_external_funcs",
            "ccdproc.utils",
            "ccdproc.utils.slices",
            "ccdproc.utils.tests",
            "ccdproc.utils.tests.test_slices",
            "ccdproc.version"
        ],
        "version": "1.2.0"
    },
    "ccepy": {
        "cmdline": [],
        "modules": [
            "ccepy",
            "ccepy.aritmetica_elemental",
            "ccepy.cuerpos_finitos",
            "ccepy.curvas_elipticas",
            "ccepy.esquemas_criptograficos",
            "ccepy.listado_curvas_elipticas"
        ],
        "version": "1.0.1"
    },
    "ccfreeze": {
        "cmdline": [],
        "modules": [
            "ccfreeze",
            "ccfreeze.bdist_bbfreeze",
            "ccfreeze.codehack",
            "ccfreeze.eggutil",
            "ccfreeze.ensure_setuptools",
            "ccfreeze.freezer",
            "ccfreeze.getdeps",
            "ccfreeze.load_console",
            "ccfreeze.modulegraph",
            "ccfreeze.modulegraph._compat",
            "ccfreeze.modulegraph.find_modules",
            "ccfreeze.modulegraph.modulegraph",
            "ccfreeze.modulegraph.util",
            "ccfreeze.modulegraph.zipio",
            "ccfreeze.py",
            "ccfreeze.recipes",
            "ccfreeze.winexeutil"
        ],
        "version": "1.1.5"
    },
    "ccfreeze-loader": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.2"
    },
    "ccg-django-utils": {
        "cmdline": [],
        "modules": [
            "ccg_django_utils",
            "ccg_django_utils.conf",
            "ccg_django_utils.http",
            "ccg_django_utils.loghandlers",
            "ccg_django_utils.webhelpers"
        ],
        "version": "0.4.2"
    },
    "cch": {
        "cmdline": [],
        "modules": [
            "cch",
            "cch.cli"
        ],
        "version": "0.1.19"
    },
    "cchardet": {
        "cmdline": [
            "cchardetect"
        ],
        "modules": [
            "cchardet",
            "cchardet.version"
        ],
        "version": "2.1.0"
    },
    "cchen224-ec2": {
        "cmdline": [],
        "modules": [
            "canalysis",
            "canalysis.analysis",
            "canalysis.emoji",
            "canalysis.lda_gibbs",
            "canalysis.lda_template",
            "canalysis.ml",
            "canalysis.ml_utilities",
            "canalysis.nmfsc",
            "canalysis.nmfsc_test",
            "canalysis.sentiment",
            "canalysis.stats",
            "pyAPIs",
            "pyAPIs.foursquare",
            "pyAPIs.foursquare.access_tokens",
            "pyAPIs.foursquare.main",
            "pyAPIs.foursquare.parser_location",
            "pyAPIs.instagram",
            "pyAPIs.instagram.GetPhotoByUsername",
            "pyAPIs.instagram.access_tokens",
            "pyAPIs.instagram.main",
            "pyAPIs.instagram.parser_media",
            "pyAPIs.instagram.parser_user_info",
            "pyAPIs.twitter",
            "pyAPIs.twitter.twitter_accounts",
            "pyAPIs.twitter.twitter_followers",
            "pyAPIs.twitter.twitter_followers_NFL",
            "pyAPIs.twitter.twitter_following",
            "pyAPIs.twitter.twitter_timeline",
            "pyAPIs.twitter.twitter_user",
            "pycrawlers",
            "pycrawlers.requests_util",
            "pycrawlers.twitter",
            "pycrawlers.twitter.crawl_tweets",
            "pycrawlers.twitter.main",
            "pycrawlers.twitter.webparser_error",
            "pycrawlers.twitter.webparser_threads",
            "pycrawlers.twitter.webparser_tweet",
            "pycrawlers.twitter.webparser_user_info",
            "pycrawlers.twitter.webparser_user_timeline",
            "pycrawlers.twitter.webparser_utility",
            "pycrawlers.zillow",
            "pycrawlers.zillow.main",
            "pycrawlers.zillow.template",
            "pycrawlers.zillow.webparser"
        ],
        "version": "0.0.150"
    },
    "cciaa.modulistica": {
        "cmdline": [],
        "modules": [
            "cciaa",
            "cciaa.modulistica",
            "cciaa.modulistica.browser",
            "cciaa.modulistica.browser.modulistica",
            "cciaa.modulistica.extender",
            "cciaa.modulistica.interfaces",
            "cciaa.modulistica.tests",
            "cciaa.modulistica.tests.base",
            "cciaa.modulistica.tests.test_view"
        ],
        "version": "2.1.1"
    },
    "cciaa.portlet.calendar": {
        "cmdline": [],
        "modules": [
            "cciaa",
            "cciaa.portlet",
            "cciaa.portlet.calendar",
            "cciaa.portlet.calendar.browser",
            "cciaa.portlet.calendar.browser.searchevents",
            "cciaa.portlet.calendar.browser.searchmonth",
            "cciaa.portlet.calendar.portletcalendariocamerale",
            "cciaa.portlet.calendar.tests",
            "cciaa.portlet.calendar.tests.base",
            "cciaa.portlet.calendar.tests.test_portlet"
        ],
        "version": "1.3.0"
    },
    "ccj-to-puz": {
        "cmdline": [],
        "modules": [
            "ccj_to_puz",
            "ccj_to_puz.ccj_parse",
            "ccj_to_puz.commonccj"
        ],
        "version": "0.2"
    },
    "cclib": {
        "cmdline": [
            "ccget",
            "ccwrite",
            "cda"
        ],
        "modules": [
            "cclib",
            "cclib.bridge",
            "cclib.bridge.cclib2biopython",
            "cclib.bridge.cclib2openbabel",
            "cclib.bridge.cclib2pyquante",
            "cclib.io",
            "cclib.io.ccio",
            "cclib.io.cjsonreader",
            "cclib.io.cjsonwriter",
            "cclib.io.cmlwriter",
            "cclib.io.filewriter",
            "cclib.io.xyzwriter",
            "cclib.method",
            "cclib.method.calculationmethod",
            "cclib.method.cda",
            "cclib.method.cspa",
            "cclib.method.density",
            "cclib.method.electrons",
            "cclib.method.fragments",
            "cclib.method.lpa",
            "cclib.method.mbo",
            "cclib.method.mpa",
            "cclib.method.nuclear",
            "cclib.method.opa",
            "cclib.method.orbitals",
            "cclib.method.population",
            "cclib.method.volume",
            "cclib.parser",
            "cclib.parser.adfparser",
            "cclib.parser.daltonparser",
            "cclib.parser.data",
            "cclib.parser.gamessparser",
            "cclib.parser.gamessukparser",
            "cclib.parser.gaussianparser",
            "cclib.parser.jaguarparser",
            "cclib.parser.logfileparser",
            "cclib.parser.molproparser",
            "cclib.parser.mopacparser",
            "cclib.parser.nwchemparser",
            "cclib.parser.orcaparser",
            "cclib.parser.psiparser",
            "cclib.parser.qchemparser",
            "cclib.parser.utils",
            "cclib.progress",
            "cclib.progress.qt4progress",
            "cclib.progress.textprogress"
        ],
        "version": "1.5.1"
    },
    "cclint": {
        "cmdline": [
            "cclint"
        ],
        "modules": [
            "cclint",
            "cclint.command",
            "cclint.file_stream",
            "cclint.utility"
        ],
        "version": "0.2"
    },
    "ccm": {
        "cmdline": [
            "ccm"
        ],
        "modules": [
            "ccmlib",
            "ccmlib.cli_session",
            "ccmlib.cluster",
            "ccmlib.cluster_factory",
            "ccmlib.cmds",
            "ccmlib.cmds.cluster_cmds",
            "ccmlib.cmds.command",
            "ccmlib.cmds.node_cmds",
            "ccmlib.common",
            "ccmlib.dse_cluster",
            "ccmlib.dse_node",
            "ccmlib.extension",
            "ccmlib.node",
            "ccmlib.repository"
        ],
        "version": "2.6.2"
    },
    "ccmval-cdx": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ccnmtldjango": {
        "cmdline": [],
        "modules": [
            "ccnmtldjango"
        ],
        "version": "1.10.0"
    },
    "ccnmtlsettings": {
        "cmdline": [],
        "modules": [
            "ccnmtlsettings",
            "ccnmtlsettings.compose",
            "ccnmtlsettings.docker",
            "ccnmtlsettings.production",
            "ccnmtlsettings.shared",
            "ccnmtlsettings.staging"
        ],
        "version": "1.3.0"
    },
    "ccodeinline": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "ccollab-client": {
        "cmdline": [],
        "modules": [
            "collab",
            "collab.CodeCollab",
            "collab.test",
            "collab.test.CodeCollab"
        ],
        "version": "0.1.9"
    },
    "ccompiler": {
        "cmdline": [],
        "modules": [
            "ccompiler"
        ],
        "version": "0.2.0"
    },
    "cconfig": {
        "cmdline": [],
        "modules": [
            "cconfig",
            "cconfig.cconfig",
            "cconfig.cmdconfig",
            "cconfig.typedconfig"
        ],
        "version": "1.2.1"
    },
    "ccp": {
        "cmdline": [],
        "modules": [
            "ccp",
            "ccp.client"
        ],
        "version": "1.1"
    },
    "ccp-sde-parser": {
        "cmdline": [],
        "modules": [
            "ccp_sde_parser",
            "ccp_sde_parser.bigqueryize",
            "ccp_sde_parser.csvize",
            "ccp_sde_parser.merge_ccp_yaml",
            "ccp_sde_parser.schema_converter",
            "ccp_sde_parser.split_tables",
            "ccp_sde_parser.sqlize"
        ],
        "version": "1.0.1"
    },
    "ccplot": {
        "cmdline": [
            "ccplot"
        ],
        "modules": [
            "ccplot",
            "ccplot.config",
            "ccplot.utils"
        ],
        "version": "1.5.2"
    },
    "ccrdf": {
        "cmdline": [],
        "modules": [],
        "version": "0.6a4"
    },
    "ccrypt": {
        "cmdline": [],
        "modules": [],
        "version": "0.10"
    },
    "ccs": {
        "cmdline": [],
        "modules": [
            "ccs",
            "ccs.abstract",
            "ccs.bitfinex",
            "ccs.bitfinex.configuration",
            "ccs.bitfinex.public",
            "ccs.bitfinex.public.response",
            "ccs.bitstamp",
            "ccs.bitstamp.configuration",
            "ccs.bitstamp.public",
            "ccs.bitstamp.public.response",
            "ccs.bittrex",
            "ccs.bittrex.configuration",
            "ccs.bittrex.public",
            "ccs.bittrex.public.response",
            "ccs.btcc",
            "ccs.btcc.configuration",
            "ccs.btcc.public",
            "ccs.btcc.public.response",
            "ccs.btccpro",
            "ccs.btccpro.configuration",
            "ccs.btccpro.public",
            "ccs.btccpro.public.response",
            "ccs.btccusd",
            "ccs.btccusd.configuration",
            "ccs.btccusd.public",
            "ccs.btccusd.public.response",
            "ccs.btce",
            "ccs.btce.configuration",
            "ccs.btce.public",
            "ccs.btce.public.response",
            "ccs.bter",
            "ccs.bter.configuration",
            "ccs.bter.public",
            "ccs.bter.public.response",
            "ccs.cexio",
            "ccs.cexio.configuration",
            "ccs.cexio.public",
            "ccs.cexio.public.response",
            "ccs.constants",
            "ccs.core",
            "ccs.default",
            "ccs.initials",
            "ccs.kraken",
            "ccs.kraken.configuration",
            "ccs.kraken.public",
            "ccs.kraken.public.response",
            "ccs.logger",
            "ccs.okcoin",
            "ccs.okcoin.configuration",
            "ccs.okcoin.public",
            "ccs.okcoin.public.response",
            "ccs.okcoincn",
            "ccs.okcoincn.configuration",
            "ccs.okcoincn.public",
            "ccs.okcoincn.public.response",
            "ccs.okcoincom",
            "ccs.okcoincom.configuration",
            "ccs.okcoincom.public",
            "ccs.okcoincom.public.response",
            "ccs.poloniex",
            "ccs.poloniex.configuration",
            "ccs.poloniex.public",
            "ccs.poloniex.public.response"
        ],
        "version": "0.1.11"
    },
    "ccsdk": {
        "cmdline": [],
        "modules": [
            "ccsdk",
            "ccsdk.help"
        ],
        "version": "0.0.2"
    },
    "ccsgp-get-started": {
        "cmdline": [],
        "modules": [
            "ccsgp_get_started",
            "ccsgp_get_started.ccsgp",
            "ccsgp_get_started.ccsgp.Gnuplot",
            "ccsgp_get_started.ccsgp.Gnuplot.Errors",
            "ccsgp_get_started.ccsgp.Gnuplot.PlotItems",
            "ccsgp_get_started.ccsgp.Gnuplot._Gnuplot",
            "ccsgp_get_started.ccsgp.Gnuplot.demo",
            "ccsgp_get_started.ccsgp.Gnuplot.funcutils",
            "ccsgp_get_started.ccsgp.Gnuplot.gnuplot_Suites",
            "ccsgp_get_started.ccsgp.Gnuplot.gp",
            "ccsgp_get_started.ccsgp.Gnuplot.gp_cygwin",
            "ccsgp_get_started.ccsgp.Gnuplot.gp_java",
            "ccsgp_get_started.ccsgp.Gnuplot.gp_mac",
            "ccsgp_get_started.ccsgp.Gnuplot.gp_macosx",
            "ccsgp_get_started.ccsgp.Gnuplot.gp_unix",
            "ccsgp_get_started.ccsgp.Gnuplot.gp_win32",
            "ccsgp_get_started.ccsgp.Gnuplot.setup",
            "ccsgp_get_started.ccsgp.Gnuplot.termdefs",
            "ccsgp_get_started.ccsgp.Gnuplot.test",
            "ccsgp_get_started.ccsgp.Gnuplot.utils",
            "ccsgp_get_started.ccsgp.ccsgp",
            "ccsgp_get_started.ccsgp.config",
            "ccsgp_get_started.ccsgp.myplot",
            "ccsgp_get_started.ccsgp.utils",
            "ccsgp_get_started.examples",
            "ccsgp_get_started.examples.gp_background",
            "ccsgp_get_started.examples.gp_ccX",
            "ccsgp_get_started.examples.gp_datdir",
            "ccsgp_get_started.examples.gp_effcorr",
            "ccsgp_get_started.examples.gp_lcltpt",
            "ccsgp_get_started.examples.gp_panel",
            "ccsgp_get_started.examples.gp_ptspec",
            "ccsgp_get_started.examples.gp_purity",
            "ccsgp_get_started.examples.gp_rapp",
            "ccsgp_get_started.examples.gp_rdiff",
            "ccsgp_get_started.examples.gp_sims",
            "ccsgp_get_started.examples.gp_stack",
            "ccsgp_get_started.examples.gp_tbw",
            "ccsgp_get_started.examples.gp_xfac",
            "ccsgp_get_started.examples.utils"
        ],
        "version": "2.1.0"
    },
    "ccsnmultivar": {
        "cmdline": [],
        "modules": [
            "ccsnmultivar",
            "ccsnmultivar.GWUtils",
            "ccsnmultivar.basis",
            "ccsnmultivar.catalog",
            "ccsnmultivar.designmatrix",
            "ccsnmultivar.multivar"
        ],
        "version": "0.0.5"
    },
    "ccsyspath": {
        "cmdline": [],
        "modules": [
            "ccsyspath",
            "ccsyspath.paths",
            "tests",
            "tests.test_paths"
        ],
        "version": "1.1.0"
    },
    "cct": {
        "cmdline": [],
        "modules": [
            "cct",
            "cct.core",
            "cct.core.commands",
            "cct.core.commands.circulator",
            "cct.core.commands.command",
            "cct.core.commands.detector",
            "cct.core.commands.device",
            "cct.core.commands.jump",
            "cct.core.commands.motor",
            "cct.core.commands.scan",
            "cct.core.commands.script",
            "cct.core.commands.transmission",
            "cct.core.commands.vacuumgauge",
            "cct.core.commands.xray_source",
            "cct.core.devices",
            "cct.core.devices.circulator",
            "cct.core.devices.detector",
            "cct.core.devices.device",
            "cct.core.devices.device.device",
            "cct.core.devices.device.device_modbustcp",
            "cct.core.devices.device.device_tcp",
            "cct.core.devices.device.exceptions",
            "cct.core.devices.motor",
            "cct.core.devices.vacuumgauge",
            "cct.core.devices.xray_source",
            "cct.core.instrument",
            "cct.core.instrument.instrument",
            "cct.core.instrument.motor",
            "cct.core.instrument.privileges",
            "cct.core.instrument.sample",
            "cct.core.services",
            "cct.core.services.accounting",
            "cct.core.services.exposureanalyzer",
            "cct.core.services.filesequence",
            "cct.core.services.interpreter",
            "cct.core.services.samples",
            "cct.core.services.service",
            "cct.core.services.webstate",
            "cct.core.utils",
            "cct.core.utils.arithmetic",
            "cct.core.utils.errorvalue",
            "cct.core.utils.geometrycorrections",
            "cct.core.utils.io",
            "cct.core.utils.pathutils",
            "cct.core.utils.sascurve",
            "cct.core.utils.sasimage",
            "cct.core.utils.telemetry",
            "cct.gui",
            "cct.gui.accounting",
            "cct.gui.accounting.projectmanager",
            "cct.gui.accounting.usermanager",
            "cct.gui.core",
            "cct.gui.core.exposureloader",
            "cct.gui.core.indicator",
            "cct.gui.core.plotcurve",
            "cct.gui.core.plotimage",
            "cct.gui.core.scangraph",
            "cct.gui.core.toolframe",
            "cct.gui.core.toolwindow",
            "cct.gui.devices",
            "cct.gui.devices.genix",
            "cct.gui.devices.haakephoenix",
            "cct.gui.devices.motors",
            "cct.gui.devices.pilatus",
            "cct.gui.devices.tpg201",
            "cct.gui.diagnostics",
            "cct.gui.diagnostics.telemetry",
            "cct.gui.mainwindow",
            "cct.gui.measurement",
            "cct.gui.measurement.scan",
            "cct.gui.measurement.script",
            "cct.gui.measurement.singleexposure",
            "cct.gui.measurement.transmission",
            "cct.gui.setup",
            "cct.gui.setup.calibration",
            "cct.gui.setup.definegeometry",
            "cct.gui.setup.editconfig",
            "cct.gui.setup.sampleedit",
            "cct.gui.toolframes",
            "cct.gui.toolframes.accounting",
            "cct.gui.toolframes.nextfsn",
            "cct.gui.toolframes.resourceusage",
            "cct.gui.toolframes.shutter",
            "cct.gui.tools",
            "cct.gui.tools.capillarymeasurement",
            "cct.gui.tools.datareduction",
            "cct.gui.tools.exposureviewer",
            "cct.gui.tools.maskeditor",
            "cct.gui.tools.scanviewer"
        ],
        "version": "1.3.1"
    },
    "cctagutils": {
        "cmdline": [],
        "modules": [
            "cctagutils",
            "cctagutils.base32",
            "cctagutils.cli",
            "cctagutils.const",
            "cctagutils.handler",
            "cctagutils.handler.base",
            "cctagutils.handler.mp3",
            "cctagutils.handler.ogg",
            "cctagutils.handler.xmp",
            "cctagutils.lookup",
            "cctagutils.metadata",
            "cctagutils.rdf"
        ],
        "version": "0.5a2"
    },
    "cctm": {
        "cmdline": [],
        "modules": [
            "cctm",
            "cctm.config",
            "cctm.exceptions",
            "cctm.github",
            "cctm.json",
            "cctm.management",
            "cctm.management.alias",
            "cctm.management.fetching",
            "cctm.management.listing",
            "cctm.management.merging",
            "cctm.management.removing",
            "cctm.path",
            "cctm.services",
            "cctm.services.installer",
            "cctm.services.lookup",
            "cctm.services.resolver",
            "cctm.services.store",
            "cctm.services.wrapper"
        ],
        "version": "0.2"
    },
    "cctrial": {
        "cmdline": [],
        "modules": [
            "cctrial",
            "cctrial.cctrial",
            "cctrial.freedesktop",
            "cctrial.notify",
            "cctrial.osx",
            "cctrial.reporter",
            "cctrial.runner",
            "cctrial.smart",
            "cctrial.watcher"
        ],
        "version": "1.2.7"
    },
    "cctrl": {
        "cmdline": [
            "cctrlapp",
            "cctrluser",
            "cnhapp",
            "cnhuser",
            "dcapp",
            "dcuser",
            "exoapp",
            "exouser"
        ],
        "modules": [
            "cctrl",
            "cctrl.addonoptionhelpers",
            "cctrl.app",
            "cctrl.app_commands",
            "cctrl.auth",
            "cctrl.common",
            "cctrl.error",
            "cctrl.keyhelpers",
            "cctrl.oshelpers",
            "cctrl.output",
            "cctrl.settings",
            "cctrl.user",
            "cctrl.user_commands",
            "cctrl.version",
            "tests",
            "tests.app_test",
            "tests.config_test",
            "tests.keyhelpers_test",
            "tests.settings_test",
            "tests.user_test"
        ],
        "version": "1.16.1"
    },
    "ccuapi": {
        "cmdline": [],
        "modules": [
            "ccuapi",
            "ccuapi.ccu_purge",
            "ccuapi.exceptions",
            "ccuapi.purge",
            "ccuapi.test"
        ],
        "version": "1.2.1"
    },
    "ccv": {
        "cmdline": [],
        "modules": [
            "ccv",
            "ccv.face_detect",
            "ccv.util"
        ],
        "version": "0.0.5"
    },
    "ccw-get-forecast": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "ccw-nester": {
        "cmdline": [],
        "modules": [
            "ccw_nester"
        ],
        "version": "1.4.1"
    },
    "ccw-news-parser": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "ccw-sanitize": {
        "cmdline": [],
        "modules": [
            "ccw_sanitize"
        ],
        "version": "1.0.0"
    },
    "ccwt": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.6"
    },
    "ccxxv": {
        "cmdline": [],
        "modules": [
            "ccxxv"
        ],
        "version": "0.1.4"
    },
    "ccy": {
        "cmdline": [],
        "modules": [
            "ccy",
            "ccy.core",
            "ccy.core.country",
            "ccy.core.currency",
            "ccy.core.daycounter",
            "ccy.data",
            "ccy.data.currency",
            "ccy.dates",
            "ccy.dates.converters",
            "ccy.dates.futures",
            "ccy.dates.period",
            "ccy.tradingcentres",
            "ccy.tradingcentres.centres",
            "ccy.tradingcentres.holiday"
        ],
        "version": "0.7.0"
    },
    "ccyg": {
        "cmdline": [],
        "modules": [
            "ccyg",
            "ccyg.net",
            "ccyg.starter",
            "ccyg.utils",
            "ccyg.value"
        ],
        "version": "0.0.1.9"
    },
    "cd": {
        "cmdline": [],
        "modules": [
            "CD"
        ],
        "version": "1.1.0"
    },
    "cd-perf-promotion": {
        "cmdline": [],
        "modules": [
            "cd_perf_promotion",
            "cd_perf_promotion.engines",
            "cd_perf_promotion.engines.argumentengine",
            "cd_perf_promotion.engines.comparisonengine",
            "cd_perf_promotion.engines.configengine",
            "cd_perf_promotion.engines.dataengine",
            "cd_perf_promotion.engines.outputengine",
            "cd_perf_promotion.main",
            "cd_perf_promotion.modules",
            "cd_perf_promotion.modules.appdynamics",
            "cd_perf_promotion.modules.blazemeter",
            "cd_perf_promotion.modules.perftools",
            "cd_perf_promotion.modules.webpagetest"
        ],
        "version": "1.0.0"
    },
    "cdap-auth-client": {
        "cmdline": [],
        "modules": [
            "cdap_auth_client",
            "cdap_auth_client.AbstractAuthenticationClient",
            "cdap_auth_client.AccessToken",
            "cdap_auth_client.AuthenticationClient",
            "cdap_auth_client.BasicAuthenticationClient",
            "cdap_auth_client.Credential",
            "cdap_auth_client.RestClientUtils"
        ],
        "version": "1.0.2"
    },
    "cdap-stream-client": {
        "cmdline": [],
        "modules": [
            "cdap_stream_client",
            "cdap_stream_client.config",
            "cdap_stream_client.serviceconnector",
            "cdap_stream_client.streamclient",
            "cdap_stream_client.streampromise",
            "cdap_stream_client.streamwriter"
        ],
        "version": "1.0.2"
    },
    "cdat-lite": {
        "cmdline": [],
        "modules": [
            "Lib",
            "Lib.ASCII",
            "Lib.AutoAPI",
            "Lib.CDML",
            "Lib.CDMLParser",
            "Lib.Filler",
            "Lib.MV2",
            "Lib.Properties",
            "Lib.Properties_version",
            "Lib.ValidationFunctions",
            "Lib.array_indexing_emulate",
            "Lib.arrayindexing",
            "Lib.auxcoord",
            "Lib.avariable",
            "Lib.averager",
            "Lib.axis",
            "Lib.bindex",
            "Lib.cache",
            "Lib.cdmsNode",
            "Lib.cdmsURLopener",
            "Lib.cdmsobj",
            "Lib.cdurllib",
            "Lib.cdurlparse",
            "Lib.cdutil_version",
            "Lib.cdxmllib",
            "Lib.colors",
            "Lib.convention",
            "Lib.coord",
            "Lib.create_landsea_mask",
            "Lib.crossSection",
            "Lib.cs",
            "Lib.csParse",
            "Lib.cudsinterface",
            "Lib.database",
            "Lib.dataset",
            "Lib.error",
            "Lib.filters",
            "Lib.forecast",
            "Lib.fvariable",
            "Lib.gengrid",
            "Lib.genutil_version",
            "Lib.grid",
            "Lib.grower",
            "Lib.gsHost",
            "Lib.gsMosaic",
            "Lib.gsRegrid",
            "Lib.gsStaticVariable",
            "Lib.gsTimeVariable",
            "Lib.gs_horizontal",
            "Lib.gui",
            "Lib.hgrid",
            "Lib.horizontal",
            "Lib.internattr",
            "Lib.minmax",
            "Lib.mvBaseWriter",
            "Lib.mvSphereMesh",
            "Lib.mvVTKSGWriter",
            "Lib.mvVTKUGWriter",
            "Lib.mvVsWriter",
            "Lib.ncml",
            "Lib.ncmlParse",
            "Lib.netcdfwriter",
            "Lib.pressure",
            "Lib.region",
            "Lib.restApi",
            "Lib.retrieve",
            "Lib.salstat",
            "Lib.scrip",
            "Lib.selectors",
            "Lib.selval",
            "Lib.sftbyrgn",
            "Lib.slabinterface",
            "Lib.sliceut",
            "Lib.statistics",
            "Lib.statusbar",
            "Lib.times",
            "Lib.tvariable",
            "Lib.typeconv",
            "Lib.udunits",
            "Lib.variable",
            "Lib.vertical",
            "Lib.worldmap",
            "Lib.xlink",
            "Lib.xmgrace",
            "cdat_lite",
            "cdat_lite.scripts",
            "cdat_lite.scripts.cddump",
            "cdat_lite.scripts.cdscan",
            "cdat_lite.scripts.convertcdms",
            "cdat_lite.test",
            "cdat_lite.test.fulltest_scratchpad",
            "cdat_lite.test.fulltest_zero_rank",
            "cdat_lite.test.test_attributes",
            "cdat_lite.test.test_axis",
            "cdat_lite.test.test_cdms",
            "cdat_lite.test.test_cdms.cdtest",
            "cdat_lite.test.test_cdms.cdtest01",
            "cdat_lite.test.test_cdms.cdtest02",
            "cdat_lite.test.test_cdms.cdtest03",
            "cdat_lite.test.test_cdms.cdtest04",
            "cdat_lite.test.test_cdms.cdtest05",
            "cdat_lite.test.test_cdms.cdtest06",
            "cdat_lite.test.test_cdms.cdtest07",
            "cdat_lite.test.test_cdms.cdtest08",
            "cdat_lite.test.test_cdms.cdtest10",
            "cdat_lite.test.test_cdms.cdtest11",
            "cdat_lite.test.test_cdms.cdtest12",
            "cdat_lite.test.test_cdms.cdtest13",
            "cdat_lite.test.test_cdms.cdtest14",
            "cdat_lite.test.test_cdms.cdtest18",
            "cdat_lite.test.test_cdms.genTestDataset",
            "cdat_lite.test.test_cdms.markError",
            "cdat_lite.test.test_cdms.test_cdms",
            "cdat_lite.test.test_cdscan",
            "cdat_lite.test.test_dimensions",
            "cdat_lite.test.test_import",
            "cdat_lite.test.test_makevar",
            "cdat_lite.test.test_numeric",
            "cdat_lite.test.test_open",
            "cdat_lite.test.test_rotgrid",
            "deprecated_warns"
        ],
        "version": "6.0.1"
    },
    "cdb-api": {
        "cmdline": [],
        "modules": [
            "cdb",
            "cdb.cdb_web_service",
            "cdb.cdb_web_service.api",
            "cdb.cdb_web_service.api.fileSystemRestApi",
            "cdb.cdb_web_service.api.itemRestApi",
            "cdb.cdb_web_service.api.logRestApi",
            "cdb.cdb_web_service.api.propertyRestApi",
            "cdb.cdb_web_service.api.userRestApi",
            "cdb.common",
            "cdb.common.api",
            "cdb.common.api.cdbApi",
            "cdb.common.api.cdbRestApi",
            "cdb.common.client",
            "cdb.common.client.cdbExceptionMapper",
            "cdb.common.client.cdbHttpsConnection",
            "cdb.common.client.cdbHttpsHandler",
            "cdb.common.client.sessionManager",
            "cdb.common.constants",
            "cdb.common.constants.cdbHttpHeaders",
            "cdb.common.constants.cdbHttpStatus",
            "cdb.common.constants.cdbRole",
            "cdb.common.constants.cdbServiceConstants",
            "cdb.common.constants.cdbStatus",
            "cdb.common.exceptions",
            "cdb.common.exceptions.authenticationError",
            "cdb.common.exceptions.authorizationError",
            "cdb.common.exceptions.cdbException",
            "cdb.common.exceptions.cdbExceptionMap",
            "cdb.common.exceptions.cdbHttpError",
            "cdb.common.exceptions.commandFailed",
            "cdb.common.exceptions.communicationError",
            "cdb.common.exceptions.configurationError",
            "cdb.common.exceptions.dbError",
            "cdb.common.exceptions.externalServiceError",
            "cdb.common.exceptions.imageProcessingFailed",
            "cdb.common.exceptions.internalError",
            "cdb.common.exceptions.invalidArgument",
            "cdb.common.exceptions.invalidObjectState",
            "cdb.common.exceptions.invalidRequest",
            "cdb.common.exceptions.invalidSession",
            "cdb.common.exceptions.multipleObjectsFound",
            "cdb.common.exceptions.objectAlreadyExists",
            "cdb.common.exceptions.objectNotFound",
            "cdb.common.exceptions.urlError",
            "cdb.common.objects",
            "cdb.common.objects.allowedChildEntityType",
            "cdb.common.objects.allowedEntityTypeDomain",
            "cdb.common.objects.allowedPropertyValue",
            "cdb.common.objects.attachment",
            "cdb.common.objects.authorizationPrincipal",
            "cdb.common.objects.cdbObject",
            "cdb.common.objects.cdbObjectManager",
            "cdb.common.objects.connector",
            "cdb.common.objects.connectorType",
            "cdb.common.objects.domain",
            "cdb.common.objects.entityInfo",
            "cdb.common.objects.entityType",
            "cdb.common.objects.item",
            "cdb.common.objects.itemCategory",
            "cdb.common.objects.itemConnector",
            "cdb.common.objects.itemElement",
            "cdb.common.objects.itemElementLog",
            "cdb.common.objects.itemElementProperty",
            "cdb.common.objects.itemElementRelationship",
            "cdb.common.objects.itemElementRelationshipHistory",
            "cdb.common.objects.itemEntityType",
            "cdb.common.objects.itemItemCategory",
            "cdb.common.objects.itemItemProject",
            "cdb.common.objects.itemItemType",
            "cdb.common.objects.itemProject",
            "cdb.common.objects.itemSource",
            "cdb.common.objects.itemType",
            "cdb.common.objects.log",
            "cdb.common.objects.logAttachment",
            "cdb.common.objects.logLevel",
            "cdb.common.objects.logTopic",
            "cdb.common.objects.propertyMetadata",
            "cdb.common.objects.propertyType",
            "cdb.common.objects.propertyTypeCategory",
            "cdb.common.objects.propertyTypeHandler",
            "cdb.common.objects.propertyValue",
            "cdb.common.objects.propertyValueHistory",
            "cdb.common.objects.relationshipType",
            "cdb.common.objects.relationshipTypeHandler",
            "cdb.common.objects.resourceType",
            "cdb.common.objects.resourceTypeCategory",
            "cdb.common.objects.source",
            "cdb.common.objects.systemLog",
            "cdb.common.objects.userGroup",
            "cdb.common.objects.userInfo",
            "cdb.common.objects.userUserGroup",
            "cdb.common.utility",
            "cdb.common.utility.cdbEmailUtility",
            "cdb.common.utility.cdbModuleManager",
            "cdb.common.utility.cdbPortalUrlUtility",
            "cdb.common.utility.cdbSubprocess",
            "cdb.common.utility.configurationManager",
            "cdb.common.utility.consoleLoggingHandler",
            "cdb.common.utility.cryptUtility",
            "cdb.common.utility.encoder",
            "cdb.common.utility.ldapUtility",
            "cdb.common.utility.loggingManager",
            "cdb.common.utility.objectCache",
            "cdb.common.utility.osUtility",
            "cdb.common.utility.sslUtility",
            "cdb.common.utility.storageUtility",
            "cdb.common.utility.timeUtility",
            "cdb.common.utility.timedRotatingFileLoggingHandler",
            "cdb.common.utility.urllibFileStreamUtility",
            "cdb.common.utility.valueUtility"
        ],
        "version": "3.3.0.dev4"
    },
    "cdb-query": {
        "cmdline": [],
        "modules": [
            "cdb_query",
            "cdb_query.commands",
            "cdb_query.commands_parser",
            "cdb_query.core",
            "cdb_query.data",
            "cdb_query.data.testing_data",
            "cdb_query.data.testing_data_fx",
            "cdb_query.logging_server",
            "cdb_query.nc_Database",
            "cdb_query.nc_Database.db_manager",
            "cdb_query.nc_Database.db_utils",
            "cdb_query.netcdf4_soft_links",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.certificates",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.commands",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.core",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.data",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.data.testing_data",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.data.testing_data_fx",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.ncutils",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.ncutils.append",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.ncutils.compare_dataset",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.ncutils.core",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.ncutils.dataset_compat",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.ncutils.defaults",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.ncutils.defaults.append",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.ncutils.defaults.core",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.ncutils.defaults.dimensions",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.ncutils.defaults.indices",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.ncutils.defaults.replicate",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.ncutils.defaults.retrieval",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.ncutils.defaults.time",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.ncutils.dimensions",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.ncutils.indices",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.ncutils.replicate",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.ncutils.retrieval",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.ncutils.subset",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.ncutils.time",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.get_data",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.core",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.httpserver",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.bootstrap",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.setup",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.apis",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.apis.netCDF4",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.cas",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.cas.esgf",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.cas.get_cookies",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.cas.urs",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.client",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.exceptions",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.handlers",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.handlers.csv",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.handlers.dap",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.handlers.lib",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.handlers.netcdf",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.lib",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.model",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.net",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.parsers",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.parsers.das",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.parsers.dds",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.responses",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.responses.ascii",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.responses.das",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.responses.dds",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.responses.dods",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.responses.error",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.responses.html",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.responses.lib",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.responses.version",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.simple_server",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.datasets",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_D1",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_api_netcdf4",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_cas_esgf",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_cas_urs",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_client",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_constrain",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_dapper",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_devel_server",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_exceptions",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_handlers_csv",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_handlers_dap",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_handlers_lib",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_handlers_netcdf",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_iter_data",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_lib",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_model",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_parsers",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_parsers_das",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_parsers_dds",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_pydap",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_responses_ascii",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_responses_das",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_responses_dds",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_responses_dods",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_responses_error",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_responses_html",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_responses_lib",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_responses_version",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_special_chars",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_webtest",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_wsgi_app",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_wsgi_functions",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.tests.test_wsgi_ssf",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.wsgi",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.wsgi.app",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.wsgi.functions",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.pydap_fork.pydap.src.pydap.wsgi.ssf",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.netcdf4_pydap.sessions",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.netcdf4_pydap.netcdf4_pydap.setup",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.parsers",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.queues_manager",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.remote_netcdf",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.remote_netcdf.http_netcdf",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.remote_netcdf.queryable_netcdf",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.remote_netcdf.remote_netcdf",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.remote_netcdf.safe_handling",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.remote_netcdf.timeaxis_mod",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.requests_sessions",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.retrieval_manager",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.retrieval_utils",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.soft_links",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.soft_links.create_soft_links",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.netcdf4_soft_links.soft_links.read_soft_links",
            "cdb_query.netcdf4_soft_links.netcdf4_soft_links.setup",
            "cdb_query.parsers",
            "cdb_query.queries",
            "cdb_query.queries.esgf",
            "cdb_query.queries.filesystem",
            "cdb_query.queries.ftp",
            "cdb_query.queries.http",
            "cdb_query.queries.pyesgf",
            "cdb_query.queries.pyesgf.pyesgf",
            "cdb_query.queries.pyesgf.pyesgf.pyesgf",
            "cdb_query.queries.pyesgf.pyesgf.pyesgf.exceptions",
            "cdb_query.queries.pyesgf.pyesgf.pyesgf.logon",
            "cdb_query.queries.pyesgf.pyesgf.pyesgf.manifest",
            "cdb_query.queries.pyesgf.pyesgf.pyesgf.multidict",
            "cdb_query.queries.pyesgf.pyesgf.pyesgf.node",
            "cdb_query.queries.pyesgf.pyesgf.pyesgf.search",
            "cdb_query.queries.pyesgf.pyesgf.pyesgf.search.connection",
            "cdb_query.queries.pyesgf.pyesgf.pyesgf.search.constraints",
            "cdb_query.queries.pyesgf.pyesgf.pyesgf.search.consts",
            "cdb_query.queries.pyesgf.pyesgf.pyesgf.search.context",
            "cdb_query.queries.pyesgf.pyesgf.pyesgf.search.exceptions",
            "cdb_query.queries.pyesgf.pyesgf.pyesgf.search.results",
            "cdb_query.queries.pyesgf.pyesgf.pyesgf.security",
            "cdb_query.queries.pyesgf.pyesgf.pyesgf.security.ats",
            "cdb_query.queries.pyesgf.pyesgf.pyesgf.util",
            "cdb_query.queries.pyesgf.pyesgf.setup",
            "cdb_query.queues_manager",
            "cdb_query.remote_archive",
            "cdb_query.remote_archive.CMIP5",
            "cdb_query.remote_archive.CORDEX",
            "cdb_query.remote_archive.CREATEIP",
            "cdb_query.remote_archive.CanSISE",
            "cdb_query.remote_archive.LRFTIP",
            "cdb_query.remote_archive.NMME",
            "cdb_query.utils",
            "cdb_query.utils.ask_utils",
            "cdb_query.utils.downloads_utils",
            "cdb_query.utils.find_functions",
            "cdb_query.utils.reduce_utils",
            "cdb_query.utils.validate_utils"
        ],
        "version": "2.0"
    },
    "cdbcli": {
        "cmdline": [],
        "modules": [
            "cdbcli",
            "cdbcli.commands",
            "cdbcli.completer",
            "cdbcli.environment",
            "cdbcli.grammar",
            "cdbcli.highlighters",
            "cdbcli.lexer",
            "cdbcli.main",
            "cdbcli.repl",
            "cdbcli.style",
            "cdbcli.utils",
            "tests",
            "tests.integration",
            "tests.integration.fixtures",
            "tests.integration.test_completer",
            "tests.integration.test_repl",
            "tests.unit",
            "tests.unit.test_command_line",
            "tests.unit.test_config",
            "tests.unit.test_grammar",
            "tests.unit.test_lexer"
        ],
        "version": "0.9.1"
    },
    "cdbclient": {
        "cmdline": [],
        "modules": [
            "cdbclient",
            "cdbclient.auth_plugin",
            "cdbclient.base",
            "cdbclient.cdb_cmd",
            "cdbclient.client",
            "cdbclient.common",
            "cdbclient.exceptions",
            "cdbclient.extension",
            "cdbclient.novaclient",
            "cdbclient.openstack",
            "cdbclient.openstack.common",
            "cdbclient.openstack.common.apiclient",
            "cdbclient.openstack.common.apiclient.auth",
            "cdbclient.openstack.common.apiclient.base",
            "cdbclient.openstack.common.apiclient.client",
            "cdbclient.openstack.common.apiclient.exceptions",
            "cdbclient.openstack.common.apiclient.fake_client",
            "cdbclient.openstack.common.gettextutils",
            "cdbclient.openstack.common.importutils",
            "cdbclient.openstack.common.strutils",
            "cdbclient.service_catalog",
            "cdbclient.shell",
            "cdbclient.utils",
            "cdbclient.v1",
            "cdbclient.v1.backups",
            "cdbclient.v1.config_parameters",
            "cdbclient.v1.configurations",
            "cdbclient.v1.databases",
            "cdbclient.v1.datastore_versions",
            "cdbclient.v1.datastores",
            "cdbclient.v1.flavors",
            "cdbclient.v1.ha",
            "cdbclient.v1.instances",
            "cdbclient.v1.limits",
            "cdbclient.v1.root",
            "cdbclient.v1.schedules",
            "cdbclient.v1.users",
            "cdbclient.v1.versions"
        ],
        "version": "1.0.8"
    },
    "cdblib": {
        "cmdline": [],
        "modules": [
            "cdblib"
        ],
        "version": "0.5"
    },
    "cdbookmarks": {
        "cmdline": [
            "cdb.sh",
            "cdbookmarks"
        ],
        "modules": [],
        "version": "0.0.1"
    },
    "cdbx": {
        "cmdline": [],
        "modules": [
            "_setup",
            "_setup.py2",
            "_setup.py2.commands",
            "_setup.py2.data",
            "_setup.py2.dist",
            "_setup.py2.ext",
            "_setup.py2.setup",
            "_setup.py2.shell",
            "_setup.py2.util",
            "_setup.py3",
            "_setup.py3.commands",
            "_setup.py3.data",
            "_setup.py3.dist",
            "_setup.py3.ext",
            "_setup.py3.setup",
            "_setup.py3.shell",
            "_setup.py3.util",
            "cdbx",
            "cdbx._util",
            "cdbx._version"
        ],
        "version": "0.1.0"
    },
    "cdcover": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cdecimal": {
        "cmdline": [],
        "modules": [],
        "version": "2.3"
    },
    "cdent": {
        "cmdline": [],
        "modules": [
            "cdent",
            "cdent.ast",
            "cdent.command",
            "cdent.compiler",
            "cdent.emitter",
            "cdent.emitter.actionscript",
            "cdent.emitter.cdent",
            "cdent.emitter.cdent.yaml",
            "cdent.emitter.go",
            "cdent.emitter.java",
            "cdent.emitter.javascript",
            "cdent.emitter.perl",
            "cdent.emitter.perl6",
            "cdent.emitter.php",
            "cdent.emitter.pir",
            "cdent.emitter.python",
            "cdent.emitter.python3",
            "cdent.emitter.ruby",
            "cdent.emitter.scala",
            "cdent.grammar",
            "cdent.parser",
            "cdent.parser.base",
            "cdent.parser.base.grammar",
            "cdent.parser.cdent",
            "cdent.parser.cdent.yaml",
            "cdent.parser.javascript",
            "cdent.parser.javascript.grammar",
            "cdent.parser.perl",
            "cdent.parser.perl.grammar",
            "cdent.parser.perl6",
            "cdent.parser.perl6.grammar",
            "cdent.parser.pir",
            "cdent.parser.pir.grammar",
            "cdent.parser.python",
            "cdent.parser.python.grammar",
            "cdent.runtime",
            "cdent.test",
            "package",
            "package.errors",
            "package.info",
            "package.unittest"
        ],
        "version": "0.5.7"
    },
    "cdeploy": {
        "cmdline": [],
        "modules": [
            "cdeploy",
            "cdeploy.cqlexecutor",
            "cdeploy.exceptions",
            "cdeploy.migrator",
            "cdeploy.test",
            "cdeploy.test.cqlexecutor_test",
            "cdeploy.test.integration_test",
            "cdeploy.test.migrator_test"
        ],
        "version": "1.8"
    },
    "cdf": {
        "cmdline": [],
        "modules": [
            "cdf",
            "cdf.attribute",
            "cdf.entry",
            "cdf.framework",
            "cdf.interface",
            "cdf.internal",
            "cdf.istp",
            "cdf.istp.interface",
            "cdf.standard",
            "cdf.typing"
        ],
        "version": "0.32"
    },
    "cdf2cim": {
        "cmdline": [],
        "modules": [
            "cdf2cim",
            "cdf2cim.constants",
            "cdf2cim.exceptions",
            "cdf2cim.hashifier",
            "cdf2cim.io_manager",
            "cdf2cim.logger",
            "cdf2cim.mapper",
            "cdf2cim.options",
            "cdf2cim.parser",
            "cdf2cim.publisher",
            "cdf2cim.reducer"
        ],
        "version": "0.1.8.1"
    },
    "cdhistory": {
        "cmdline": [
            "cdhistory"
        ],
        "modules": [
            "cdhistory",
            "cdhistory.history"
        ],
        "version": "0.1"
    },
    "cdiff": {
        "cmdline": [
            "cdiff"
        ],
        "modules": [
            "cdiff"
        ],
        "version": "1.0"
    },
    "cdifflib": {
        "cmdline": [],
        "modules": [
            "cdifflib"
        ],
        "version": "1.0.0"
    },
    "cdifflint": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "cdis-pipe-utils": {
        "cmdline": [],
        "modules": [
            "cdis_pipe_utils",
            "cdis_pipe_utils.df_util",
            "cdis_pipe_utils.fastq_util",
            "cdis_pipe_utils.pipe_util",
            "cdis_pipe_utils.postgres",
            "cdis_pipe_utils.time_util"
        ],
        "version": "0.23"
    },
    "cdisc-endtoend": {
        "cmdline": [],
        "modules": [
            "define",
            "define.define",
            "define.defineXML",
            "define.tests.testDefine"
        ],
        "version": "0.2dev"
    },
    "cdist": {
        "cmdline": [
            "cdist"
        ],
        "modules": [
            "cdist",
            "cdist.argparse",
            "cdist.banner",
            "cdist.config",
            "cdist.core",
            "cdist.core.cdist_object",
            "cdist.core.cdist_type",
            "cdist.core.code",
            "cdist.core.explorer",
            "cdist.core.manifest",
            "cdist.emulator",
            "cdist.exec",
            "cdist.exec.local",
            "cdist.exec.remote",
            "cdist.exec.util",
            "cdist.hostsource",
            "cdist.install",
            "cdist.log",
            "cdist.message",
            "cdist.shell",
            "cdist.util",
            "cdist.util.fsproperty",
            "cdist.util.ipaddr",
            "cdist.util.remoteutil",
            "cdist.version"
        ],
        "version": "4.4.2"
    },
    "cdk": {
        "cmdline": [],
        "modules": [
            "cdk",
            "cdk.b64",
            "cdk.to6"
        ],
        "version": "1.0.12"
    },
    "cdl-convert": {
        "cmdline": [],
        "modules": [
            "cdl_convert",
            "cdl_convert.base",
            "cdl_convert.cdl_convert",
            "cdl_convert.collection",
            "cdl_convert.config",
            "cdl_convert.correction",
            "cdl_convert.decision",
            "cdl_convert.parse",
            "cdl_convert.utils",
            "cdl_convert.write"
        ],
        "version": "0.9.2"
    },
    "cdmc": {
        "cmdline": [],
        "modules": [
            "cdmc",
            "cdmc.cal",
            "cdmc.console"
        ],
        "version": "0.1.1"
    },
    "cdmetro": {
        "cmdline": [],
        "modules": [
            "cdmetro",
            "cdmetro.admin",
            "cdmetro.forms",
            "cdmetro.models",
            "cdmetro.tests",
            "cdmetro.urls",
            "cdmetro.views"
        ],
        "version": "1.0.18"
    },
    "cdmi-client": {
        "cmdline": [],
        "modules": [
            "cdmi_cli",
            "cdmi_cli.command_line"
        ],
        "version": "0.3"
    },
    "cdn": {
        "cmdline": [],
        "modules": [
            "settings",
            "settings.base",
            "settings.local",
            "settings.prod"
        ],
        "version": "0.0.1"
    },
    "cdn-assets": {
        "cmdline": [],
        "modules": [
            "cdn_assets",
            "cdn_assets.management",
            "cdn_assets.management.commands",
            "cdn_assets.management.commands.download",
            "cdn_assets.templatetags",
            "cdn_assets.templatetags.cdn_assets"
        ],
        "version": "0.2.3"
    },
    "cdn-fastly": {
        "cmdline": [
            "fastly_purge_url.py",
            "fastly_upload_vcl.py"
        ],
        "modules": [
            "fastly",
            "tests"
        ],
        "version": "1.0.4"
    },
    "cdn-it": {
        "cmdline": [],
        "modules": [
            "cdn_it",
            "cdn_it.cdn_it"
        ],
        "version": "1.0.8"
    },
    "cdn77": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cdnget": {
        "cmdline": [
            "cdnget"
        ],
        "modules": [
            "cdnget"
        ],
        "version": "1.0.0"
    },
    "cdnupload": {
        "cmdline": [],
        "modules": [
            "cdnupload"
        ],
        "version": "1.0.3"
    },
    "cdo": {
        "cmdline": [],
        "modules": [
            "cdo"
        ],
        "version": "1.3.3"
    },
    "cdo-api-client": {
        "cmdline": [],
        "modules": [
            "cdo_api_client",
            "cdo_api_client.Client",
            "cdo_api_client.conf",
            "cdo_api_client.exceptions",
            "cdo_api_client.util"
        ],
        "version": "1.0.0.dev4"
    },
    "cdo-api-py": {
        "cmdline": [],
        "modules": [
            "cdo_api_py",
            "cdo_api_py.Client",
            "cdo_api_py.conf",
            "cdo_api_py.exceptions"
        ],
        "version": "1.0.0.dev12"
    },
    "cdochain": {
        "cmdline": [],
        "modules": [
            "cdochain",
            "cdochain.chaining",
            "cdochain.exceptions",
            "cdochain.helpers",
            "cdochain.repository"
        ],
        "version": "0.2b3"
    },
    "cdp": {
        "cmdline": [],
        "modules": [
            "cdp",
            "cdp.cdp"
        ],
        "version": "0.0.2"
    },
    "cdpipelines": {
        "cmdline": [],
        "modules": [
            "cdpipelines",
            "cdpipelines.atacseq",
            "cdpipelines.convert_bed_to_saf",
            "cdpipelines.general",
            "cdpipelines.make_mbased_input",
            "cdpipelines.make_wasp_input",
            "cdpipelines.prepare",
            "cdpipelines.rnaseq",
            "cdpipelines.scale_bedgraph"
        ],
        "version": "0.0.7"
    },
    "cdproj": {
        "cmdline": [],
        "modules": [
            "cdproj",
            "cdproj.proj"
        ],
        "version": "0.0.6"
    },
    "cdpybio": {
        "cmdline": [],
        "modules": [
            "cdpybio",
            "cdpybio.analysis",
            "cdpybio.bedtools",
            "cdpybio.biobambam",
            "cdpybio.cghub",
            "cdpybio.express",
            "cdpybio.featureCounts",
            "cdpybio.gencode",
            "cdpybio.general",
            "cdpybio.moodsext",
            "cdpybio.mutect",
            "cdpybio.picard",
            "cdpybio.pysamext",
            "cdpybio.star",
            "cdpybio.variants"
        ],
        "version": "0.0.7"
    },
    "cdrouter": {
        "cmdline": [],
        "modules": [
            "cdrouter",
            "cdrouter.annotations",
            "cdrouter.attachments",
            "cdrouter.captures",
            "cdrouter.cdr_datetime",
            "cdrouter.cdr_dictfield",
            "cdrouter.cdr_error",
            "cdrouter.cdrouter",
            "cdrouter.configs",
            "cdrouter.devices",
            "cdrouter.exports",
            "cdrouter.filters",
            "cdrouter.highlights",
            "cdrouter.history",
            "cdrouter.imports",
            "cdrouter.jobs",
            "cdrouter.packages",
            "cdrouter.results",
            "cdrouter.system",
            "cdrouter.tags",
            "cdrouter.testresults",
            "cdrouter.testsuites",
            "cdrouter.users"
        ],
        "version": "0.4.7"
    },
    "cds": {
        "cmdline": [],
        "modules": [
            "cds",
            "cds.celery",
            "cds.cli",
            "cds.config",
            "cds.factory",
            "cds.modules",
            "cds.modules.access",
            "cds.modules.access.access_control",
            "cds.modules.cds_iiif",
            "cds.modules.cds_iiif.ext",
            "cds.modules.cds_iiif.utils",
            "cds.modules.fixtures",
            "cds.modules.fixtures.cli",
            "cds.modules.fixtures.ext",
            "cds.modules.home",
            "cds.modules.home.views",
            "cds.modules.migrator",
            "cds.modules.migrator.records",
            "cds.modules.records",
            "cds.modules.records.bundles",
            "cds.modules.records.mappings",
            "cds.modules.records.minters",
            "cds.modules.records.providers",
            "cds.modules.records.views",
            "cds.modules.search_ui",
            "cds.modules.search_ui.views",
            "cds.modules.theme",
            "cds.modules.theme.bundles",
            "cds.modules.theme.views",
            "cds.version",
            "cds.wsgi"
        ],
        "version": "0.3.0"
    },
    "cds-dojson": {
        "cmdline": [],
        "modules": [
            "cds_dojson",
            "cds_dojson.matcher",
            "cds_dojson.overdo",
            "cds_dojson.utils",
            "cds_dojson.version"
        ],
        "version": "0.3.2"
    },
    "cds-utils": {
        "cmdline": [],
        "modules": [
            "cds_utils"
        ],
        "version": "0.0.4"
    },
    "cdsapi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cdstarcat": {
        "cmdline": [],
        "modules": [
            "cdstarcat",
            "cdstarcat.catalog",
            "cdstarcat.cli",
            "cdstarcat.tests",
            "cdstarcat.tests.test_catalog",
            "cdstarcat.tests.test_cli",
            "cdstarcat.tests.util"
        ],
        "version": "0.2.1"
    },
    "cdtw": {
        "cmdline": [],
        "modules": [
            "cdtw",
            "cdtw.pydtw",
            "cdtw.stepstr",
            "cdtw.test",
            "cdtw.test.test"
        ],
        "version": "0.0.1"
    },
    "cdu": {
        "cmdline": [],
        "modules": [
            "cdu",
            "cdu.main",
            "cdu.node",
            "cdu.pathinfo",
            "cdu.progress"
        ],
        "version": "0.2.0a1"
    },
    "cdumay-rest-client": {
        "cmdline": [],
        "modules": [
            "cdumay_rest_client",
            "cdumay_rest_client.client",
            "cdumay_rest_client.exceptions",
            "cdumay_rest_client.tests",
            "cdumay_rest_client.tests.test_base"
        ],
        "version": "0.0.14"
    },
    "cdx.client": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cdx.datawrappers": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cdx.dav": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cdxsite.databrowser": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cdxsite.policy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cdxsite.theme": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ceacoest": {
        "cmdline": [],
        "modules": [
            "ceacoest",
            "ceacoest.kalman",
            "ceacoest.oem",
            "ceacoest.rk",
            "ceacoest.sde",
            "ceacoest.testsupport",
            "ceacoest.testsupport.array_cmp",
            "ceacoest.utils"
        ],
        "version": "0.1.dev3"
    },
    "cec": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.5"
    },
    "cec2005real": {
        "cmdline": [],
        "modules": [
            "cec2005real"
        ],
        "version": "0.1"
    },
    "cec2013lsgo": {
        "cmdline": [],
        "modules": [
            "cec2013lsgo"
        ],
        "version": "0.1"
    },
    "cec2013single": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cecs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cecstat": {
        "cmdline": [],
        "modules": [
            "cecresl"
        ],
        "version": "1.0.2"
    },
    "ceda-cc": {
        "cmdline": [],
        "modules": [
            "ceda_cc",
            "ceda_cc.amap2nco",
            "ceda_cc.c4",
            "ceda_cc.c4_run",
            "ceda_cc.ccinit",
            "ceda_cc.checkT",
            "ceda_cc.comp_mip",
            "ceda_cc.config_c4",
            "ceda_cc.extractMipInfo",
            "ceda_cc.fcc_utils",
            "ceda_cc.fcc_utils2",
            "ceda_cc.file_utils",
            "ceda_cc.ncq3",
            "ceda_cc.summary",
            "ceda_cc.summary_by_error_code",
            "ceda_cc.unitTestsS1",
            "ceda_cc.unitTestsS2",
            "ceda_cc.utils_c4",
            "ceda_cc.versionConfig",
            "ceda_cc.xceptions"
        ],
        "version": "1.3.1"
    },
    "cedar": {
        "cmdline": [],
        "modules": [
            "cedar",
            "cedar.ast",
            "cedar.cli",
            "cedar.errors",
            "cedar.languages",
            "cedar.languages.cedar",
            "cedar.languages.elm",
            "cedar.languages.go",
            "cedar.parser",
            "cedar.pretty",
            "cedar.tokenizer",
            "cedar.typechecker",
            "tests",
            "tests.common",
            "tests.test_cli",
            "tests.test_codegen",
            "tests.test_parser",
            "tests.test_typechecker"
        ],
        "version": "0.3.3"
    },
    "cedexis.radar": {
        "cmdline": [],
        "modules": [
            "cedexis",
            "cedexis.radar",
            "cedexis.radar._crlogging",
            "cedexis.radar.cli",
            "cedexis.radar.probe",
            "cedexis.radar.provider",
            "cedexis.radar.python2",
            "cedexis.radar.python2.cli",
            "cedexis.radar.python3",
            "cedexis.radar.python3.cli",
            "cedexis.radar.session",
            "cedexis.radar.session.errors",
            "cedexis.radar.session.init",
            "cedexis.radar.session.measure",
            "cedexis.radar.session.probeserver",
            "cedexis.radar.session.report",
            "cedexis.radar.session.uni",
            "cedexis.radar.session.uni.akamai_r",
            "cedexis.radar.session.uni.chinacache",
            "cedexis.radar.session.uni.cloudfront",
            "cedexis.radar.session.uni.limelight",
            "cedexis.radar.session.uni.unireader",
            "cedexis.radar.tests",
            "cedexis.radar.tests.test_cli",
            "cedexis.radar.tests.test_radar"
        ],
        "version": "0.3.1"
    },
    "cee-formatter": {
        "cmdline": [],
        "modules": [
            "cee_formatter"
        ],
        "version": "0.4.1"
    },
    "cee-syslog-handler": {
        "cmdline": [],
        "modules": [
            "cee_syslog_handler",
            "cee_syslog_handler._version"
        ],
        "version": "0.3.4"
    },
    "ceed": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ceek": {
        "cmdline": [],
        "modules": [
            "ceek",
            "ceek.ceek"
        ],
        "version": "0.1.3"
    },
    "ceexample": {
        "cmdline": [],
        "modules": [
            "ceexample",
            "ceexample.command"
        ],
        "version": "0.0.0"
    },
    "cef": {
        "cmdline": [],
        "modules": [
            "cef"
        ],
        "version": "0.5"
    },
    "cefevent": {
        "cmdline": [],
        "modules": [
            "cefevent",
            "cefevent.run",
            "cefevent.syslog"
        ],
        "version": "0.4.8"
    },
    "cefpanda": {
        "cmdline": [],
        "modules": [
            "cefpanda"
        ],
        "version": "0.1"
    },
    "cefpython3": {
        "cmdline": [],
        "modules": [
            "cefpython3"
        ],
        "version": "57.0"
    },
    "cegads-domestic-model": {
        "cmdline": [],
        "modules": [
            "cegads",
            "cegads.ECUK",
            "cegads.appliances",
            "cegads.appliances.appliance",
            "cegads.appliances.factory",
            "cegads.appliances.model",
            "cegads.exceptions",
            "cegads.households",
            "cegads.households.household",
            "cegads.model_data",
            "cegads.scenarios",
            "cegads.scenarios.factory",
            "cegads.scenarios.scenario"
        ],
        "version": "0.5"
    },
    "ceiclient": {
        "cmdline": [],
        "modules": [
            "ceiclient",
            "ceiclient.cli",
            "ceiclient.client",
            "ceiclient.commands",
            "ceiclient.common",
            "ceiclient.connection",
            "ceiclient.exception"
        ],
        "version": "0.2.2"
    },
    "ceilometer": {
        "cmdline": [
            "ceilometer-agent-central",
            "ceilometer-agent-compute",
            "ceilometer-api",
            "ceilometer-collector"
        ],
        "modules": [
            "ceilometer",
            "ceilometer.api",
            "ceilometer.api.acl",
            "ceilometer.api.app",
            "ceilometer.api.v1",
            "ceilometer.central",
            "ceilometer.central.manager",
            "ceilometer.central.plugin",
            "ceilometer.collector",
            "ceilometer.collector.service",
            "ceilometer.compute",
            "ceilometer.compute.instance",
            "ceilometer.compute.libvirt",
            "ceilometer.compute.manager",
            "ceilometer.compute.notifications",
            "ceilometer.compute.nova_notifier",
            "ceilometer.compute.plugin",
            "ceilometer.counter",
            "ceilometer.extension_manager",
            "ceilometer.image",
            "ceilometer.image.glance",
            "ceilometer.image.notifications",
            "ceilometer.meter",
            "ceilometer.network",
            "ceilometer.network.floatingip",
            "ceilometer.network.notifications",
            "ceilometer.nova_client",
            "ceilometer.openstack",
            "ceilometer.openstack.common",
            "ceilometer.openstack.common.cfg",
            "ceilometer.openstack.common.context",
            "ceilometer.openstack.common.eventlet_backdoor",
            "ceilometer.openstack.common.excutils",
            "ceilometer.openstack.common.gettextutils",
            "ceilometer.openstack.common.importutils",
            "ceilometer.openstack.common.iniparser",
            "ceilometer.openstack.common.jsonutils",
            "ceilometer.openstack.common.local",
            "ceilometer.openstack.common.log",
            "ceilometer.openstack.common.loopingcall",
            "ceilometer.openstack.common.network_utils",
            "ceilometer.openstack.common.notifier",
            "ceilometer.openstack.common.notifier.api",
            "ceilometer.openstack.common.notifier.list_notifier",
            "ceilometer.openstack.common.notifier.log_notifier",
            "ceilometer.openstack.common.notifier.no_op_notifier",
            "ceilometer.openstack.common.notifier.rabbit_notifier",
            "ceilometer.openstack.common.notifier.test_notifier",
            "ceilometer.openstack.common.policy",
            "ceilometer.openstack.common.rpc",
            "ceilometer.openstack.common.rpc.amqp",
            "ceilometer.openstack.common.rpc.common",
            "ceilometer.openstack.common.rpc.dispatcher",
            "ceilometer.openstack.common.rpc.impl_fake",
            "ceilometer.openstack.common.rpc.impl_kombu",
            "ceilometer.openstack.common.rpc.impl_qpid",
            "ceilometer.openstack.common.rpc.impl_zmq",
            "ceilometer.openstack.common.rpc.matchmaker",
            "ceilometer.openstack.common.rpc.proxy",
            "ceilometer.openstack.common.rpc.service",
            "ceilometer.openstack.common.service",
            "ceilometer.openstack.common.setup",
            "ceilometer.openstack.common.threadgroup",
            "ceilometer.openstack.common.timeutils",
            "ceilometer.plugin",
            "ceilometer.policy",
            "ceilometer.publish",
            "ceilometer.service",
            "ceilometer.storage",
            "ceilometer.storage.base",
            "ceilometer.storage.impl_log",
            "ceilometer.storage.impl_mongodb",
            "ceilometer.storage.impl_sqlalchemy",
            "ceilometer.storage.migration",
            "ceilometer.storage.sqlalchemy",
            "ceilometer.storage.sqlalchemy.migrate_repo",
            "ceilometer.storage.sqlalchemy.migrate_repo.manage",
            "ceilometer.storage.sqlalchemy.migrate_repo.versions",
            "ceilometer.storage.sqlalchemy.migrate_repo.versions.001_add_meter_table",
            "ceilometer.storage.sqlalchemy.migrate_repo.versions.002_remove_duration",
            "ceilometer.storage.sqlalchemy.migration",
            "ceilometer.storage.sqlalchemy.models",
            "ceilometer.storage.sqlalchemy.session",
            "ceilometer.tests",
            "ceilometer.tests.api",
            "ceilometer.tests.base",
            "ceilometer.tests.db",
            "ceilometer.tests.skip",
            "ceilometer.utils",
            "ceilometer.volume",
            "ceilometer.volume.notifications",
            "tests",
            "tests.api",
            "tests.api.test_acl",
            "tests.api.v1",
            "tests.api.v1.test_compute_duration_by_resource",
            "tests.api.v1.test_get_query_ts",
            "tests.api.v1.test_list_events",
            "tests.api.v1.test_list_projects",
            "tests.api.v1.test_list_resources",
            "tests.api.v1.test_list_sources",
            "tests.api.v1.test_list_users",
            "tests.api.v1.test_max_project_volume",
            "tests.api.v1.test_max_resource_volume",
            "tests.api.v1.test_sum_project_volume",
            "tests.api.v1.test_sum_resource_volume",
            "tests.collector",
            "tests.collector.test_manager",
            "tests.compute",
            "tests.compute.test_instance",
            "tests.compute.test_libvirt",
            "tests.compute.test_manager",
            "tests.compute.test_notifications",
            "tests.compute.test_nova_notifier",
            "tests.image",
            "tests.image.test_glance",
            "tests.image.test_notifications",
            "tests.network",
            "tests.network.test_floatingip",
            "tests.network.test_notifications",
            "tests.storage",
            "tests.storage.test_get_engine",
            "tests.storage.test_impl_log",
            "tests.storage.test_impl_mongodb",
            "tests.storage.test_impl_sqlalchemy",
            "tests.storage.test_register_opts",
            "tests.test_meter",
            "tests.test_publish",
            "tests.test_service",
            "tests.test_tools_notificationclient",
            "tests.utils",
            "tests.volume",
            "tests.volume.test_notifications"
        ],
        "version": "0.2"
    },
    "ceilometer-infoblox": {
        "cmdline": [],
        "modules": [],
        "version": "2.0.0"
    },
    "ceilometer-janitor": {
        "cmdline": [],
        "modules": [
            "ceilometer_janitor"
        ],
        "version": "0.1.5"
    },
    "ceilometer-powervm": {
        "cmdline": [],
        "modules": [],
        "version": "5.0.0.0b1"
    },
    "ceilometer-publisher-vaultaire": {
        "cmdline": [],
        "modules": [
            "ceilometer_publisher_vaultaire",
            "ceilometer_publisher_vaultaire.vaultaire"
        ],
        "version": "0.0.4"
    },
    "ceilometer-riemann": {
        "cmdline": [],
        "modules": [
            "ceilometer_riemann",
            "ceilometer_riemann.riemann"
        ],
        "version": "0.2.6"
    },
    "ceilometermiddleware": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "cejob": {
        "cmdline": [],
        "modules": [
            "cejob",
            "cejob.ext",
            "cejob.ext.call_maker",
            "cejob.job",
            "cejob.job_manager"
        ],
        "version": "0.0.6"
    },
    "celcius": {
        "cmdline": [
            "celcius-init",
            "celcius-schedule",
            "celcius-status",
            "celcius-unschedule"
        ],
        "modules": [
            "celcius",
            "celcius.tasks",
            "celcius.unix",
            "celcius.unix.commands",
            "celcius.unix.commands.cat",
            "celcius.unix.commands.crontab",
            "celcius.unix.commands.curl",
            "celcius.unix.commands.diff",
            "celcius.unix.commands.mv",
            "celcius.unix.commands.rm",
            "celcius.unix.commands.touch",
            "celcius.unix.commands.wget",
            "celcius.unix.operations",
            "celcius.unix.operations.ampersand",
            "celcius.unix.operations.concat",
            "celcius.unix.operations.pipe",
            "celcius.unix.operations.redirect",
            "celcius.utils",
            "celcius.utils.cron_utils",
            "celcius.utils.file_utils",
            "celcius.utils.terminal_utils"
        ],
        "version": "0.1"
    },
    "celebid": {
        "cmdline": [],
        "modules": [
            "celebid"
        ],
        "version": "1.1.1"
    },
    "celementtree": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "celeriac": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "celerite": {
        "cmdline": [],
        "modules": [
            "celerite",
            "celerite.build",
            "celerite.celerite",
            "celerite.modeling",
            "celerite.plot_setup",
            "celerite.terms",
            "celerite.timer"
        ],
        "version": "0.2.0"
    },
    "celery": {
        "cmdline": [],
        "modules": [
            "celery",
            "celery._state",
            "celery.app",
            "celery.app.amqp",
            "celery.app.annotations",
            "celery.app.backends",
            "celery.app.base",
            "celery.app.builtins",
            "celery.app.control",
            "celery.app.defaults",
            "celery.app.events",
            "celery.app.log",
            "celery.app.registry",
            "celery.app.routes",
            "celery.app.task",
            "celery.app.trace",
            "celery.app.utils",
            "celery.apps",
            "celery.apps.beat",
            "celery.apps.multi",
            "celery.apps.worker",
            "celery.backends",
            "celery.backends.amqp",
            "celery.backends.async",
            "celery.backends.base",
            "celery.backends.cache",
            "celery.backends.cassandra",
            "celery.backends.consul",
            "celery.backends.couchbase",
            "celery.backends.couchdb",
            "celery.backends.database",
            "celery.backends.database.models",
            "celery.backends.database.session",
            "celery.backends.elasticsearch",
            "celery.backends.filesystem",
            "celery.backends.mongodb",
            "celery.backends.redis",
            "celery.backends.riak",
            "celery.backends.rpc",
            "celery.beat",
            "celery.bin",
            "celery.bin.amqp",
            "celery.bin.base",
            "celery.bin.beat",
            "celery.bin.call",
            "celery.bin.celery",
            "celery.bin.celeryd_detach",
            "celery.bin.control",
            "celery.bin.events",
            "celery.bin.graph",
            "celery.bin.list",
            "celery.bin.logtool",
            "celery.bin.migrate",
            "celery.bin.multi",
            "celery.bin.purge",
            "celery.bin.result",
            "celery.bin.shell",
            "celery.bin.upgrade",
            "celery.bin.worker",
            "celery.bootsteps",
            "celery.canvas",
            "celery.concurrency",
            "celery.concurrency.asynpool",
            "celery.concurrency.base",
            "celery.concurrency.eventlet",
            "celery.concurrency.gevent",
            "celery.concurrency.prefork",
            "celery.concurrency.solo",
            "celery.contrib",
            "celery.contrib.abortable",
            "celery.contrib.migrate",
            "celery.contrib.pytest",
            "celery.contrib.rdb",
            "celery.contrib.sphinx",
            "celery.contrib.testing",
            "celery.contrib.testing.app",
            "celery.contrib.testing.manager",
            "celery.contrib.testing.mocks",
            "celery.contrib.testing.tasks",
            "celery.contrib.testing.worker",
            "celery.events",
            "celery.events.cursesmon",
            "celery.events.dispatcher",
            "celery.events.dumper",
            "celery.events.event",
            "celery.events.receiver",
            "celery.events.snapshot",
            "celery.events.state",
            "celery.exceptions",
            "celery.five",
            "celery.fixups",
            "celery.fixups.django",
            "celery.loaders",
            "celery.loaders.app",
            "celery.loaders.base",
            "celery.loaders.default",
            "celery.local",
            "celery.platforms",
            "celery.result",
            "celery.schedules",
            "celery.security",
            "celery.security.certificate",
            "celery.security.key",
            "celery.security.serialization",
            "celery.security.utils",
            "celery.signals",
            "celery.states",
            "celery.task",
            "celery.task.base",
            "celery.utils",
            "celery.utils.abstract",
            "celery.utils.collections",
            "celery.utils.debug",
            "celery.utils.deprecated",
            "celery.utils.dispatch",
            "celery.utils.dispatch.signal",
            "celery.utils.dispatch.weakref_backports",
            "celery.utils.encoding",
            "celery.utils.functional",
            "celery.utils.graph",
            "celery.utils.imports",
            "celery.utils.iso8601",
            "celery.utils.log",
            "celery.utils.nodenames",
            "celery.utils.objects",
            "celery.utils.saferepr",
            "celery.utils.serialization",
            "celery.utils.static",
            "celery.utils.sysinfo",
            "celery.utils.term",
            "celery.utils.text",
            "celery.utils.threads",
            "celery.utils.time",
            "celery.utils.timer2",
            "celery.worker",
            "celery.worker.autoscale",
            "celery.worker.components",
            "celery.worker.consumer",
            "celery.worker.consumer.agent",
            "celery.worker.consumer.connection",
            "celery.worker.consumer.consumer",
            "celery.worker.consumer.control",
            "celery.worker.consumer.events",
            "celery.worker.consumer.gossip",
            "celery.worker.consumer.heart",
            "celery.worker.consumer.mingle",
            "celery.worker.consumer.tasks",
            "celery.worker.control",
            "celery.worker.heartbeat",
            "celery.worker.loops",
            "celery.worker.pidbox",
            "celery.worker.request",
            "celery.worker.state",
            "celery.worker.strategy",
            "celery.worker.worker",
            "celery_http_gateway",
            "celery_http_gateway.manage",
            "celery_http_gateway.settings",
            "celery_http_gateway.tasks",
            "celery_http_gateway.urls",
            "demoapp",
            "demoapp.models",
            "demoapp.tasks",
            "demoapp.views",
            "proj",
            "proj.celery",
            "proj.settings",
            "proj.urls",
            "proj.wsgi",
            "t",
            "t.integration",
            "t.integration.conftest",
            "t.integration.tasks",
            "t.integration.test_canvas",
            "t.integration.test_tasks",
            "t.unit",
            "t.unit.app",
            "t.unit.app.test_amqp",
            "t.unit.app.test_annotations",
            "t.unit.app.test_app",
            "t.unit.app.test_backends",
            "t.unit.app.test_beat",
            "t.unit.app.test_builtins",
            "t.unit.app.test_celery",
            "t.unit.app.test_control",
            "t.unit.app.test_defaults",
            "t.unit.app.test_exceptions",
            "t.unit.app.test_loaders",
            "t.unit.app.test_log",
            "t.unit.app.test_registry",
            "t.unit.app.test_routes",
            "t.unit.app.test_schedules",
            "t.unit.app.test_utils",
            "t.unit.apps",
            "t.unit.apps.test_multi",
            "t.unit.backends",
            "t.unit.backends.test_amqp",
            "t.unit.backends.test_base",
            "t.unit.backends.test_cache",
            "t.unit.backends.test_cassandra",
            "t.unit.backends.test_consul",
            "t.unit.backends.test_couchbase",
            "t.unit.backends.test_couchdb",
            "t.unit.backends.test_database",
            "t.unit.backends.test_elasticsearch",
            "t.unit.backends.test_filesystem",
            "t.unit.backends.test_mongodb",
            "t.unit.backends.test_redis",
            "t.unit.backends.test_riak",
            "t.unit.backends.test_rpc",
            "t.unit.bin",
            "t.unit.bin.celery",
            "t.unit.bin.proj",
            "t.unit.bin.proj.app",
            "t.unit.bin.test_amqp",
            "t.unit.bin.test_base",
            "t.unit.bin.test_beat",
            "t.unit.bin.test_call",
            "t.unit.bin.test_celery",
            "t.unit.bin.test_celeryd_detach",
            "t.unit.bin.test_celeryevdump",
            "t.unit.bin.test_control",
            "t.unit.bin.test_events",
            "t.unit.bin.test_list",
            "t.unit.bin.test_migrate",
            "t.unit.bin.test_multi",
            "t.unit.bin.test_purge",
            "t.unit.bin.test_result",
            "t.unit.bin.test_worker",
            "t.unit.compat_modules",
            "t.unit.compat_modules.test_compat",
            "t.unit.compat_modules.test_compat_utils",
            "t.unit.compat_modules.test_decorators",
            "t.unit.compat_modules.test_messaging",
            "t.unit.concurrency",
            "t.unit.concurrency.test_concurrency",
            "t.unit.concurrency.test_eventlet",
            "t.unit.concurrency.test_gevent",
            "t.unit.concurrency.test_pool",
            "t.unit.concurrency.test_prefork",
            "t.unit.concurrency.test_solo",
            "t.unit.conftest",
            "t.unit.contrib",
            "t.unit.contrib.test_abortable",
            "t.unit.contrib.test_migrate",
            "t.unit.contrib.test_rdb",
            "t.unit.events",
            "t.unit.events.test_cursesmon",
            "t.unit.events.test_events",
            "t.unit.events.test_snapshot",
            "t.unit.events.test_state",
            "t.unit.fixups",
            "t.unit.fixups.test_django",
            "t.unit.security",
            "t.unit.security.case",
            "t.unit.security.test_certificate",
            "t.unit.security.test_key",
            "t.unit.security.test_security",
            "t.unit.security.test_serialization",
            "t.unit.tasks",
            "t.unit.tasks.test_canvas",
            "t.unit.tasks.test_chord",
            "t.unit.tasks.test_context",
            "t.unit.tasks.test_result",
            "t.unit.tasks.test_states",
            "t.unit.tasks.test_tasks",
            "t.unit.tasks.test_trace",
            "t.unit.utils",
            "t.unit.utils.test_collections",
            "t.unit.utils.test_debug",
            "t.unit.utils.test_deprecated",
            "t.unit.utils.test_dispatcher",
            "t.unit.utils.test_encoding",
            "t.unit.utils.test_functional",
            "t.unit.utils.test_graph",
            "t.unit.utils.test_imports",
            "t.unit.utils.test_local",
            "t.unit.utils.test_nodenames",
            "t.unit.utils.test_objects",
            "t.unit.utils.test_pickle",
            "t.unit.utils.test_platforms",
            "t.unit.utils.test_saferepr",
            "t.unit.utils.test_serialization",
            "t.unit.utils.test_sysinfo",
            "t.unit.utils.test_term",
            "t.unit.utils.test_text",
            "t.unit.utils.test_threads",
            "t.unit.utils.test_time",
            "t.unit.utils.test_timer2",
            "t.unit.utils.test_utils",
            "t.unit.worker",
            "t.unit.worker.test_autoscale",
            "t.unit.worker.test_bootsteps",
            "t.unit.worker.test_components",
            "t.unit.worker.test_consumer",
            "t.unit.worker.test_control",
            "t.unit.worker.test_heartbeat",
            "t.unit.worker.test_loops",
            "t.unit.worker.test_request",
            "t.unit.worker.test_revoke",
            "t.unit.worker.test_state",
            "t.unit.worker.test_strategy",
            "t.unit.worker.test_worker"
        ],
        "version": "4.0.2"
    },
    "celery-aide": {
        "cmdline": [],
        "modules": [
            "celery_aide",
            "celery_aide.admin",
            "celery_aide.apps",
            "celery_aide.celeryconfig",
            "celery_aide.conf",
            "celery_aide.migrations",
            "celery_aide.migrations.0001_initial",
            "celery_aide.migrations.0002_add_created_on",
            "celery_aide.models",
            "celery_aide.signals",
            "celery_aide.tasks",
            "celery_aide.test_settings",
            "celery_aide.tests"
        ],
        "version": "0.1.0"
    },
    "celery-api": {
        "cmdline": [],
        "modules": [
            "celery_api"
        ],
        "version": "0.1"
    },
    "celery-bungiesearch": {
        "cmdline": [],
        "modules": [
            "celery_bungiesearch",
            "celery_bungiesearch.signals",
            "celery_bungiesearch.tasks",
            "celery_bungiesearch.tasks.bulkdelete",
            "celery_bungiesearch.tasks.celerybungie",
            "celery_bungiesearch.tasks.celeryindex",
            "celery_bungiesearch.utils"
        ],
        "version": "1.2.4"
    },
    "celery-cloudwatch": {
        "cmdline": [],
        "modules": [
            "celery_cloudwatch",
            "celery_cloudwatch.camera",
            "celery_cloudwatch.cloudwatch_camera",
            "celery_cloudwatch.import_class",
            "celery_cloudwatch.print_camera",
            "celery_cloudwatch.state",
            "celery_cloudwatch.stats",
            "celery_cloudwatch.task_monitor"
        ],
        "version": "1.1.1"
    },
    "celery-cloudwatch-logs": {
        "cmdline": [],
        "modules": [
            "celery_cloudwatch",
            "celery_cloudwatch.monitor"
        ],
        "version": "1.7"
    },
    "celery-dill-serializer": {
        "cmdline": [],
        "modules": [
            "celery_dill_serializer"
        ],
        "version": "0.1.3"
    },
    "celery-enqueue": {
        "cmdline": [],
        "modules": [
            "celery_enqueue",
            "celery_enqueue.cli",
            "celery_enqueue.config",
            "celery_enqueue.queue"
        ],
        "version": "1.0.1"
    },
    "celery-geolocator": {
        "cmdline": [],
        "modules": [
            "celery_geolocator",
            "celery_geolocator.celery",
            "celery_geolocator.config",
            "celery_geolocator.geocoders",
            "celery_geolocator.helpers",
            "celery_geolocator.helpers.decorators",
            "celery_geolocator.helpers.singleton",
            "celery_geolocator.tasks",
            "examples",
            "examples.celeryconfig",
            "examples.django_celery",
            "examples.django_celery.demoapp",
            "examples.django_celery.demoapp.models",
            "examples.django_celery.demoapp.tasks",
            "examples.django_celery.demoapp.tests",
            "examples.django_celery.demoapp.urls",
            "examples.django_celery.demoapp.views",
            "examples.django_celery.manage",
            "examples.django_celery.proj",
            "examples.django_celery.proj.celery",
            "examples.django_celery.proj.settings",
            "examples.django_celery.proj.urls",
            "examples.django_celery.proj.wsgi",
            "examples.strait_celery",
            "examples.strait_celery.test_celery_task"
        ],
        "version": "0.0.11"
    },
    "celery-graceful-stop": {
        "cmdline": [],
        "modules": [
            "celery_graceful_stop",
            "celery_graceful_stop.bootsteps",
            "celery_graceful_stop.utils"
        ],
        "version": "0.0.1"
    },
    "celery-haystack": {
        "cmdline": [],
        "modules": [],
        "version": "0.10"
    },
    "celery-mock": {
        "cmdline": [],
        "modules": [
            "celery_mock",
            "celery_mock.celery_mock"
        ],
        "version": "1.0.1"
    },
    "celery-mongodb-nobinary-backend": {
        "cmdline": [],
        "modules": [
            "zcelerybackend",
            "zcelerybackend.mongodb"
        ],
        "version": "0.0.15"
    },
    "celery-multibeat": {
        "cmdline": [],
        "modules": [
            "multibeat",
            "multibeat.decoders",
            "multibeat.schedulers"
        ],
        "version": "0.0.3"
    },
    "celery-mutex": {
        "cmdline": [],
        "modules": [
            "celery_mutex"
        ],
        "version": "0.1.0"
    },
    "celery-once": {
        "cmdline": [],
        "modules": [
            "celery_once",
            "celery_once.helpers",
            "celery_once.tasks",
            "tests",
            "tests.conftest"
        ],
        "version": "0.1.4"
    },
    "celery-pipeline": {
        "cmdline": [],
        "modules": [
            "pipeline",
            "pipeline.actions",
            "pipeline.command",
            "pipeline.context",
            "pipeline.criteria",
            "pipeline.executor",
            "pipeline.registry",
            "pipeline.signals",
            "pipeline.tasks",
            "pipeline.utils",
            "pipeline.workspace"
        ],
        "version": "0.15"
    },
    "celery-pipelines": {
        "cmdline": [],
        "modules": [
            "pipelines",
            "pipelines.models"
        ],
        "version": "0.1.0"
    },
    "celery-prometheus-exporter": {
        "cmdline": [],
        "modules": [
            "celery_prometheus_exporter"
        ],
        "version": "1.0.0"
    },
    "celery-pubsub": {
        "cmdline": [],
        "modules": [
            "celery_pubsub",
            "celery_pubsub.pubsub"
        ],
        "version": "0.1.2"
    },
    "celery-pylons": {
        "cmdline": [],
        "modules": [
            "celerypylons",
            "celerypylons.commands",
            "celerypylons.loader"
        ],
        "version": "2.1.4dev"
    },
    "celery-queued-once": {
        "cmdline": [],
        "modules": [
            "queued_once",
            "queued_once.task",
            "queued_once.tests"
        ],
        "version": "0.2"
    },
    "celery-redbeat": {
        "cmdline": [],
        "modules": [
            "redbeat",
            "redbeat.decoder",
            "redbeat.schedulers"
        ],
        "version": "0.10.0"
    },
    "celery-redis-cluster-backend": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "celery-redis-sentinel": {
        "cmdline": [],
        "modules": [
            "celery_redis_sentinel",
            "celery_redis_sentinel.backend",
            "celery_redis_sentinel.redis_sentinel",
            "celery_redis_sentinel.register",
            "celery_redis_sentinel.task",
            "celery_redis_sentinel.transport"
        ],
        "version": "0.3.0"
    },
    "celery-redis-task-monitor": {
        "cmdline": [],
        "modules": [
            "task_monitor"
        ],
        "version": "0.2.0"
    },
    "celery-redis-unixsocket": {
        "cmdline": [],
        "modules": [
            "celery_redis_unixsocket",
            "celery_redis_unixsocket.broker",
            "celery_redis_unixsocket.store"
        ],
        "version": "0.3"
    },
    "celery-redundant-scheduler": {
        "cmdline": [],
        "modules": [
            "celery_redundant_scheduler",
            "celery_redundant_scheduler.backends",
            "celery_redundant_scheduler.backends.base",
            "celery_redundant_scheduler.backends.redis",
            "celery_redundant_scheduler.scheduler"
        ],
        "version": "0.0.1"
    },
    "celery-s3": {
        "cmdline": [],
        "modules": [
            "celery_s3",
            "celery_s3.backends",
            "celery_s3.backends.s3"
        ],
        "version": "0.1.1"
    },
    "celery-schedulers": {
        "cmdline": [],
        "modules": [
            "celery_schedulers",
            "celery_schedulers.mongo_scheduler",
            "celery_schedulers.redis_scheduler"
        ],
        "version": "0.0.3"
    },
    "celery-singleton": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "celery-sprout": {
        "cmdline": [],
        "modules": [
            "sprout"
        ],
        "version": "0.0.3"
    },
    "celery-statsd": {
        "cmdline": [],
        "modules": [
            "celery_statsd",
            "celery_statsd.__about__",
            "tests",
            "tests.test_celery_statsd"
        ],
        "version": "0.1.3"
    },
    "celery-task-tigger": {
        "cmdline": [],
        "modules": [
            "celery_tasktigger",
            "celery_tasktigger.decorator"
        ],
        "version": "0.4"
    },
    "celery-tasks-ctl": {
        "cmdline": [
            "celery_tasks_ctl"
        ],
        "modules": [
            "celery_tasks_ctl",
            "celery_tasks_ctl._version",
            "celery_tasks_ctl.celery_tasks_ctl",
            "tests",
            "tests.test_celery_tasks_ctl"
        ],
        "version": "0.2.1"
    },
    "celery-tasktree": {
        "cmdline": [],
        "modules": [
            "celery_tasktree"
        ],
        "version": "0.3.4"
    },
    "celery-testutils": {
        "cmdline": [],
        "modules": [
            "celery_testutils",
            "celery_testutils.__version__",
            "celery_testutils.config",
            "celery_testutils.testcase",
            "celery_testutils.tests",
            "celery_testutils.worker"
        ],
        "version": "0.1.2"
    },
    "celery-tracker": {
        "cmdline": [],
        "modules": [
            "tracker",
            "tracker.bin",
            "tracker.bin.tracker",
            "tracker.configs",
            "tracker.configs.celeryconfig",
            "tracker.management",
            "tracker.management.commands",
            "tracker.management.commands.tracker",
            "tracker.plugins",
            "tracker.plugins.base",
            "tracker.plugins.fluent",
            "tracker.plugins.logging",
            "tracker.plugins.receive",
            "tracker.plugins.web",
            "tracker.plugins.zabbix",
            "tracker.receivers",
            "tracker.receivers.base",
            "tracker.senders",
            "tracker.senders.base",
            "tracker.senders.fluent",
            "tracker.senders.logging",
            "tracker.service",
            "tracker.tracking",
            "tracker.tracking.state",
            "tracker.tracking.storage",
            "tracker.utils",
            "tracker.utils.loader"
        ],
        "version": "0.3.2"
    },
    "celery-tryton": {
        "cmdline": [],
        "modules": [
            "celery_tryton"
        ],
        "version": "0.3"
    },
    "celery-ui": {
        "cmdline": [],
        "modules": [
            "celery_ui",
            "celery_ui.arguments",
            "celery_ui.cmdline",
            "celery_ui.contrib",
            "celery_ui.contrib.sphinx",
            "celery_ui.quickstart",
            "celery_ui.utils",
            "celery_ui.views"
        ],
        "version": "0.0.3"
    },
    "celery-unique": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "celery-with-beanstalk": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "celery-with-couchdb": {
        "cmdline": [],
        "modules": [],
        "version": "3.0"
    },
    "celery-with-mongodb": {
        "cmdline": [],
        "modules": [],
        "version": "3.0"
    },
    "celery-with-redis": {
        "cmdline": [],
        "modules": [],
        "version": "3.0"
    },
    "celerybeat-mongo": {
        "cmdline": [],
        "modules": [
            "celerybeatmongo",
            "celerybeatmongo.models",
            "celerybeatmongo.schedulers"
        ],
        "version": "0.1.0"
    },
    "celerybeat-redis": {
        "cmdline": [],
        "modules": [
            "celerybeatredis",
            "celerybeatredis.decoder",
            "celerybeatredis.exceptions",
            "celerybeatredis.globals",
            "celerybeatredis.schedulers",
            "celerybeatredis.task"
        ],
        "version": "0.1.5"
    },
    "celerybeatmongo": {
        "cmdline": [],
        "modules": [
            "celerybeatmongo",
            "celerybeatmongo.schedulers",
            "celerybeatmongo.schemas"
        ],
        "version": "0.1.1"
    },
    "celerycontrib.sqlalchemyscheduler": {
        "cmdline": [],
        "modules": [
            "celerycontrib",
            "celerycontrib.sqlalchemyscheduler",
            "celerycontrib.sqlalchemyscheduler.model",
            "celerycontrib.sqlalchemyscheduler.scheduler"
        ],
        "version": "0.1.1.dev0"
    },
    "celerydeploy": {
        "cmdline": [],
        "modules": [
            "celerydeploy",
            "celerydeploy.broker",
            "celerydeploy.utils",
            "celerydeploy.worker"
        ],
        "version": "0.2.0"
    },
    "celerylog": {
        "cmdline": [],
        "modules": [
            "celerylog",
            "celerylog.monit"
        ],
        "version": "0.1.0"
    },
    "celerymon": {
        "cmdline": [],
        "modules": [
            "celerymon",
            "celerymon.bin",
            "celerymon.bin.celerymon",
            "celerymon.consumer",
            "celerymon.handlers",
            "celerymon.handlers.api",
            "celerymon.handlers.main",
            "celerymon.management",
            "celerymon.management.commands",
            "celerymon.management.commands.celerymon",
            "celerymon.service",
            "celerymon.web"
        ],
        "version": "1.0.3"
    },
    "celerytest": {
        "cmdline": [],
        "modules": [
            "celerytest",
            "celerytest.config",
            "celerytest.testcase",
            "celerytest.tests",
            "celerytest.worker"
        ],
        "version": "0.1.1"
    },
    "celerytestworker": {
        "cmdline": [],
        "modules": [
            "celerytestworker",
            "celerytestworker.utils",
            "celerytestworker.worker"
        ],
        "version": "0.0.4"
    },
    "celerywatch": {
        "cmdline": [],
        "modules": [
            "celerywatch",
            "celerywatch.daemon",
            "celerywatch.management",
            "celerywatch.management.commands",
            "celerywatch.management.commands.celeryd_watch",
            "celerywatch.watcher"
        ],
        "version": "0.1.1"
    },
    "celestiasunrise": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "celestron-point": {
        "cmdline": [],
        "modules": [
            "point",
            "point.nexstar"
        ],
        "version": "0.0.2"
    },
    "celiagg": {
        "cmdline": [],
        "modules": [
            "celiagg",
            "celiagg.setup",
            "celiagg.tests",
            "celiagg.tests.test_canvas",
            "celiagg.tests.test_no_text",
            "celiagg.tests.test_paint",
            "celiagg.tests.test_path",
            "celiagg.tests.test_state",
            "celiagg.tests.test_transform"
        ],
        "version": "0.1.3"
    },
    "cell": {
        "cmdline": [],
        "modules": [
            "cell",
            "cell.actors",
            "cell.agents",
            "cell.bin",
            "cell.bin.base",
            "cell.bin.cell",
            "cell.exceptions",
            "cell.g",
            "cell.g.eventlet",
            "cell.models",
            "cell.presence",
            "cell.results",
            "cell.utils"
        ],
        "version": "0.0.3"
    },
    "cell-acceptance": {
        "cmdline": [
            "cell-acceptance-load-calc"
        ],
        "modules": [
            "cell_acceptance",
            "cell_acceptance.oosheet",
            "cell_acceptance.oosheet.columns",
            "cell_acceptance.server"
        ],
        "version": "0.3.0"
    },
    "cell-tree2d": {
        "cmdline": [],
        "modules": [
            "cell_tree2d",
            "cell_tree2d/test",
            "cell_tree2d/test.test_cell_tree2d"
        ],
        "version": "0.1.1"
    },
    "cellar": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "cellardoor": {
        "cmdline": [],
        "modules": [
            "cellardoor",
            "cellardoor.api",
            "cellardoor.api.interface",
            "cellardoor.api.methods",
            "cellardoor.authentication",
            "cellardoor.authentication.basic",
            "cellardoor.authentication.token",
            "cellardoor.authorization",
            "cellardoor.errors",
            "cellardoor.events",
            "cellardoor.model",
            "cellardoor.model.dateparsers",
            "cellardoor.model.fields",
            "cellardoor.model.mixins",
            "cellardoor.model.model",
            "cellardoor.serializers",
            "cellardoor.serializers.json_serializer",
            "cellardoor.serializers.msgpack_serializer",
            "cellardoor.spec",
            "cellardoor.spec.jsonschema",
            "cellardoor.storage",
            "cellardoor.storage.mongodb",
            "cellardoor.version",
            "cellardoor.views",
            "cellardoor.views.minimal",
            "cellardoor.wsgi",
            "cellardoor.wsgi.falcon_integration",
            "cellardoor.wsgi.flask_integration"
        ],
        "version": "0.3.4"
    },
    "cellarpy": {
        "cmdline": [],
        "modules": [
            "cellar",
            "cellar.fs",
            "cellar.menu",
            "cellar.password",
            "cellar.photos",
            "cellar.settings",
            "cellar.web"
        ],
        "version": "1.1"
    },
    "cellbell": {
        "cmdline": [],
        "modules": [
            "cellbell",
            "cellbell.cellbell"
        ],
        "version": "0.0.3"
    },
    "cellh5": {
        "cmdline": [],
        "modules": [
            "cellh5",
            "cellh5.cellh5",
            "cellh5.cellh5write",
            "cellh5.hmm_wrapper"
        ],
        "version": "1.3.0"
    },
    "cellmethy": {
        "cmdline": [
            "CellMethy.py"
        ],
        "modules": [],
        "version": "1.2.0"
    },
    "cellml.recipe.api": {
        "cmdline": [],
        "modules": [
            "cellml",
            "cellml.recipe",
            "cellml.recipe.api",
            "cellml.recipe.api.tests",
            "cellml.recipe.api.tests.test_docs"
        ],
        "version": "0.4"
    },
    "cellnopt.admin": {
        "cmdline": [],
        "modules": [
            "admin",
            "admin.distribute",
            "admin.install",
            "admin.multidistribute",
            "cellnopt",
            "cellnopt.admin",
            "cellnopt.admin.distribute",
            "cellnopt.admin.install",
            "cellnopt.admin.multidistribute"
        ],
        "version": "0.2.3"
    },
    "cellnopt.core": {
        "cmdline": [],
        "modules": [
            "cellnopt",
            "cellnopt.core",
            "cellnopt.core.XMLMidas",
            "cellnopt.core.adj2sif",
            "cellnopt.core.analysis",
            "cellnopt.core.asp",
            "cellnopt.core.cnograph",
            "cellnopt.core.converter",
            "cellnopt.core.makecnolist",
            "cellnopt.core.mapback",
            "cellnopt.core.metabolites",
            "cellnopt.core.midas",
            "cellnopt.core.misc",
            "cellnopt.core.models",
            "cellnopt.core.normalisation",
            "cellnopt.core.oldmidas",
            "cellnopt.core.plot",
            "cellnopt.core.reactions",
            "cellnopt.core.sbml",
            "cellnopt.core.sif",
            "cellnopt.core.sif2asp",
            "cellnopt.core.sop2sif",
            "cellnopt.core.tools",
            "core",
            "core.XMLMidas",
            "core.adj2sif",
            "core.analysis",
            "core.asp",
            "core.cnograph",
            "core.converter",
            "core.io",
            "core.io.csv2pd",
            "core.io.eda",
            "core.io.kinexus",
            "core.makecnolist",
            "core.mapback",
            "core.metabolites",
            "core.midas",
            "core.misc",
            "core.models",
            "core.normalisation",
            "core.oldmidas",
            "core.plot",
            "core.reactions",
            "core.sbml",
            "core.sif",
            "core.sif2asp",
            "core.sop2sif",
            "core.tools"
        ],
        "version": "1.0.0"
    },
    "cellnopt.data": {
        "cmdline": [],
        "modules": [
            "cellnopt",
            "cellnopt.data",
            "cellnopt.data.cnodata",
            "cellnopt.data.plotting",
            "data",
            "data.cnodata",
            "data.plotting"
        ],
        "version": "1.0.3"
    },
    "cellnopt.wrapper": {
        "cmdline": [],
        "modules": [
            "cellnopt",
            "cellnopt.wrapper",
            "cellnopt.wrapper.cnor",
            "cellnopt.wrapper.data",
            "cellnopt.wrapper.help",
            "cellnopt.wrapper.tools",
            "cellnopt.wrapper.wrapper_cnor",
            "cellnopt.wrapper.wrapper_dt",
            "cellnopt.wrapper.wrapper_fuzzy",
            "cellnopt.wrapper.wrapper_ode",
            "wrapper",
            "wrapper.cnor",
            "wrapper.data",
            "wrapper.help",
            "wrapper.tools",
            "wrapper.wrapper_cnor",
            "wrapper.wrapper_dt",
            "wrapper.wrapper_fuzzy",
            "wrapper.wrapper_ode"
        ],
        "version": "1.0.5"
    },
    "cello": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cellom2tif": {
        "cmdline": [
            "cellom2tif"
        ],
        "modules": [
            "cellom2tif",
            "cellom2tif.cellom2tif",
            "cellom2tif.filetypes",
            "cellom2tif.tifffile"
        ],
        "version": "0.2.0"
    },
    "cellprofiler": {
        "cmdline": [],
        "modules": [
            "cellprofiler",
            "cellprofiler.analysis",
            "cellprofiler.analysis_worker",
            "cellprofiler.cpgridinfo",
            "cellprofiler.cpimage",
            "cellprofiler.cpmath",
            "cellprofiler.cpmath.bg_compensate",
            "cellprofiler.cpmath.cpmorphology",
            "cellprofiler.cpmath.filter",
            "cellprofiler.cpmath.haralick",
            "cellprofiler.cpmath.index",
            "cellprofiler.cpmath.lapjv",
            "cellprofiler.cpmath.otsu",
            "cellprofiler.cpmath.outline",
            "cellprofiler.cpmath.princomp",
            "cellprofiler.cpmath.propagate",
            "cellprofiler.cpmath.radial_power_spectrum",
            "cellprofiler.cpmath.rankorder",
            "cellprofiler.cpmath.smooth",
            "cellprofiler.cpmath.threshold",
            "cellprofiler.cpmath.watershed",
            "cellprofiler.cpmath.zernike",
            "cellprofiler.cpmodule",
            "cellprofiler.frozen_version",
            "cellprofiler.gui",
            "cellprofiler.gui.addmoduleframe",
            "cellprofiler.gui.app",
            "cellprofiler.gui.bitmaplabelbutton",
            "cellprofiler.gui.cornerbuttonmixin",
            "cellprofiler.gui.cpartists",
            "cellprofiler.gui.cpfigure",
            "cellprofiler.gui.cpfigure_tools",
            "cellprofiler.gui.cpframe",
            "cellprofiler.gui.cpgrid",
            "cellprofiler.gui.datatoolframe",
            "cellprofiler.gui.dialog",
            "cellprofiler.gui.directoryview",
            "cellprofiler.gui.editobjectsdlg",
            "cellprofiler.gui.errordialog",
            "cellprofiler.gui.fileselector",
            "cellprofiler.gui.help",
            "cellprofiler.gui.html",
            "cellprofiler.gui.html.content",
            "cellprofiler.gui.html.htmlwindow",
            "cellprofiler.gui.html.manual",
            "cellprofiler.gui.htmldialog",
            "cellprofiler.gui.imagesetctrl",
            "cellprofiler.gui.metadatactrl",
            "cellprofiler.gui.moduleview",
            "cellprofiler.gui.movieslider",
            "cellprofiler.gui.namesubscriber",
            "cellprofiler.gui.omerologin",
            "cellprofiler.gui.parametersampleframe",
            "cellprofiler.gui.pathlist",
            "cellprofiler.gui.pipelinecontroller",
            "cellprofiler.gui.pipelinelistview",
            "cellprofiler.gui.plateviewer",
            "cellprofiler.gui.preferencesdlg",
            "cellprofiler.gui.preferencesview",
            "cellprofiler.gui.regexp_editor",
            "cellprofiler.gui.runmultiplepipelinesdialog",
            "cellprofiler.gui.sashwindow_tools",
            "cellprofiler.gui.scrollable_text",
            "cellprofiler.gui.treecheckboxdialog",
            "cellprofiler.gui.viewworkspace",
            "cellprofiler.icons",
            "cellprofiler.knime_bridge",
            "cellprofiler.matlab",
            "cellprofiler.matlab.cputils",
            "cellprofiler.measurements",
            "cellprofiler.modules",
            "cellprofiler.modules.align",
            "cellprofiler.modules.applythreshold",
            "cellprofiler.modules.calculateimageoverlap",
            "cellprofiler.modules.calculatemath",
            "cellprofiler.modules.calculatestatistics",
            "cellprofiler.modules.classifyobjects",
            "cellprofiler.modules.classifypixels",
            "cellprofiler.modules.colortogray",
            "cellprofiler.modules.conservememory",
            "cellprofiler.modules.convertobjectstoimage",
            "cellprofiler.modules.correctilluminationapply",
            "cellprofiler.modules.correctilluminationcalculate",
            "cellprofiler.modules.createbatchfiles",
            "cellprofiler.modules.createwebpage",
            "cellprofiler.modules.crop",
            "cellprofiler.modules.definegrid",
            "cellprofiler.modules.displaydataonimage",
            "cellprofiler.modules.displaydensityplot",
            "cellprofiler.modules.displayhistogram",
            "cellprofiler.modules.displayplatemap",
            "cellprofiler.modules.displayscatterplot",
            "cellprofiler.modules.editobjectsmanually",
            "cellprofiler.modules.enhanceedges",
            "cellprofiler.modules.enhanceorsuppressfeatures",
            "cellprofiler.modules.expandorshrinkobjects",
            "cellprofiler.modules.exporttocellh5",
            "cellprofiler.modules.exporttodatabase",
            "cellprofiler.modules.exporttospreadsheet",
            "cellprofiler.modules.filterobjects",
            "cellprofiler.modules.flagimage",
            "cellprofiler.modules.flipandrotate",
            "cellprofiler.modules.graytocolor",
            "cellprofiler.modules.groups",
            "cellprofiler.modules.identify",
            "cellprofiler.modules.identifydeadworms",
            "cellprofiler.modules.identifyobjectsingrid",
            "cellprofiler.modules.identifyobjectsmanually",
            "cellprofiler.modules.identifyprimaryobjects",
            "cellprofiler.modules.identifysecondaryobjects",
            "cellprofiler.modules.identifytertiaryobjects",
            "cellprofiler.modules.ilastik_pixel_classification",
            "cellprofiler.modules.imagemath",
            "cellprofiler.modules.images",
            "cellprofiler.modules.injectimage",
            "cellprofiler.modules.inputexternal",
            "cellprofiler.modules.invertforprinting",
            "cellprofiler.modules.labelimages",
            "cellprofiler.modules.loaddata",
            "cellprofiler.modules.loadimages",
            "cellprofiler.modules.loadsingleimage",
            "cellprofiler.modules.makeprojection",
            "cellprofiler.modules.maskimage",
            "cellprofiler.modules.maskobjects",
            "cellprofiler.modules.measurecorrelation",
            "cellprofiler.modules.measuregranularity",
            "cellprofiler.modules.measureimageareaoccupied",
            "cellprofiler.modules.measureimageintensity",
            "cellprofiler.modules.measureimagequality",
            "cellprofiler.modules.measureneurons",
            "cellprofiler.modules.measureobjectintensity",
            "cellprofiler.modules.measureobjectintensitydistribution",
            "cellprofiler.modules.measureobjectneighbors",
            "cellprofiler.modules.measureobjectsizeshape",
            "cellprofiler.modules.measuretexture",
            "cellprofiler.modules.mergeoutputfiles",
            "cellprofiler.modules.metadata",
            "cellprofiler.modules.morph",
            "cellprofiler.modules.namesandtypes",
            "cellprofiler.modules.outputexternal",
            "cellprofiler.modules.overlayoutlines",
            "cellprofiler.modules.plugins",
            "cellprofiler.modules.plugins.imagetemplate",
            "cellprofiler.modules.plugins.measurementtemplate",
            "cellprofiler.modules.reassignobjectnumbers",
            "cellprofiler.modules.relateobjects",
            "cellprofiler.modules.renameorrenumberfiles",
            "cellprofiler.modules.rescaleintensity",
            "cellprofiler.modules.resize",
            "cellprofiler.modules.run_imagej",
            "cellprofiler.modules.saveimages",
            "cellprofiler.modules.sendemail",
            "cellprofiler.modules.smooth",
            "cellprofiler.modules.straightenworms",
            "cellprofiler.modules.tile",
            "cellprofiler.modules.trackobjects",
            "cellprofiler.modules.unmixcolors",
            "cellprofiler.modules.untangleworms",
            "cellprofiler.objects",
            "cellprofiler.pipeline",
            "cellprofiler.preferences",
            "cellprofiler.settings",
            "cellprofiler.utilities",
            "cellprofiler.utilities.cpjvm",
            "cellprofiler.utilities.filefinder",
            "cellprofiler.utilities.hdf5_dict",
            "cellprofiler.utilities.read_directory_url",
            "cellprofiler.utilities.rules",
            "cellprofiler.utilities.run_loop",
            "cellprofiler.utilities.thread_excepthook",
            "cellprofiler.utilities.utf16encode",
            "cellprofiler.utilities.version",
            "cellprofiler.utilities.walk_in_background",
            "cellprofiler.utilities.zmqrequest",
            "cellprofiler.workspace",
            "imagej",
            "imagej.imagej2",
            "imagej.imageplus",
            "imagej.imageprocessor",
            "imagej.macros"
        ],
        "version": "2.3.0rc1"
    },
    "cellpy": {
        "cmdline": [],
        "modules": [
            "cellpy",
            "cellpy._version",
            "cellpy.cellpy_setup",
            "cellpy.log",
            "cellpy.parameters",
            "cellpy.parameters.prmreader",
            "cellpy.parameters.prms",
            "cellpy.readers",
            "cellpy.readers.cellreader",
            "cellpy.readers.dbreader",
            "cellpy.readers.filefinder",
            "cellpy.readers.instruments",
            "cellpy.readers.instruments.Loader",
            "cellpy.readers.instruments.arbin",
            "cellpy.readers.instruments.arbin_experimental",
            "cellpy.readers.instruments.biologic",
            "cellpy.readers.instruments.biologic_file_format",
            "cellpy.readers.instruments.maccor",
            "cellpy.readers.instruments.pec",
            "cellpy.utils",
            "cellpy.utils.batch",
            "cellpy.utils.cell_ocv",
            "cellpy.utils.dqdv",
            "cellpy.utils.fitting_cell_ocv",
            "cellpy.utils.ica",
            "cellpy.utils.live",
            "cellpy.utils.ocv_rlx_read_ex",
            "cellpy.utils.perform_fit",
            "cellpy.utils.plotutils",
            "cellpy.utils.run_cellpy",
            "cellpy.utils.testscripts_ocv_rlx",
            "cellpy.utils.testscripts_ocv_rlx.ex",
            "cellpy.utils.testscripts_ocv_rlx.examples",
            "tests",
            "tests.test_cell_readers",
            "tests.test_cellpy",
            "tests.test_dbreaders",
            "tests.test_ica",
            "tests.test_ocv_relax",
            "tests.tests_for_travis"
        ],
        "version": "0.1.13"
    },
    "celltypeclassifier": {
        "cmdline": [],
        "modules": [
            "CellTypeCLassifier",
            "CellTypeCLassifier.FeaturesExploitation_Classifier",
            "CellTypeCLassifier.FeaturesExtraction"
        ],
        "version": "0.1"
    },
    "cellular-automata": {
        "cmdline": [],
        "modules": [
            "ca",
            "ca.grid",
            "ca.grid.grid2d",
            "ca.gui",
            "ca.gui.tk",
            "ca.rules",
            "ca.rules.conway"
        ],
        "version": "0.1.dev1"
    },
    "cellulario": {
        "cmdline": [],
        "modules": [
            "cellulario",
            "cellulario.coordination",
            "cellulario.iocell",
            "cellulario.tier",
            "test",
            "test.coordination",
            "test.gc",
            "test.iocell"
        ],
        "version": "2"
    },
    "cellulist": {
        "cmdline": [],
        "modules": [
            "cellulist",
            "cellulist.cell_list",
            "tests",
            "tests.test_cellulist"
        ],
        "version": "0.1.1"
    },
    "cellulose": {
        "cmdline": [],
        "modules": [
            "cellulose",
            "cellulose.cells",
            "cellulose.celltypes",
            "cellulose.descriptors",
            "cellulose.extra",
            "cellulose.extra.restrictions",
            "cellulose.observers"
        ],
        "version": "0.2"
    },
    "celstash": {
        "cmdline": [],
        "modules": [
            "celstash"
        ],
        "version": "0.1.0"
    },
    "cement": {
        "cmdline": [],
        "modules": [
            "cement",
            "cement.core",
            "cement.core.arg",
            "cement.core.backend",
            "cement.core.cache",
            "cement.core.config",
            "cement.core.controller",
            "cement.core.exc",
            "cement.core.extension",
            "cement.core.foundation",
            "cement.core.handler",
            "cement.core.hook",
            "cement.core.interface",
            "cement.core.log",
            "cement.core.mail",
            "cement.core.meta",
            "cement.core.output",
            "cement.core.plugin",
            "cement.ext",
            "cement.ext.ext_alarm",
            "cement.ext.ext_argcomplete",
            "cement.ext.ext_argparse",
            "cement.ext.ext_colorlog",
            "cement.ext.ext_configobj",
            "cement.ext.ext_configparser",
            "cement.ext.ext_daemon",
            "cement.ext.ext_dummy",
            "cement.ext.ext_genshi",
            "cement.ext.ext_handlebars",
            "cement.ext.ext_jinja2",
            "cement.ext.ext_json",
            "cement.ext.ext_json_configobj",
            "cement.ext.ext_logging",
            "cement.ext.ext_memcached",
            "cement.ext.ext_mustache",
            "cement.ext.ext_plugin",
            "cement.ext.ext_redis",
            "cement.ext.ext_reload_config",
            "cement.ext.ext_smtp",
            "cement.ext.ext_tabulate",
            "cement.ext.ext_watchdog",
            "cement.ext.ext_yaml",
            "cement.ext.ext_yaml_configobj",
            "cement.utils",
            "cement.utils.fs",
            "cement.utils.misc",
            "cement.utils.shell",
            "cement.utils.test",
            "cement.utils.version",
            "examples"
        ],
        "version": "2.10.2"
    },
    "cena": {
        "cmdline": [],
        "modules": [
            "cena"
        ],
        "version": "1.0.0"
    },
    "cenaming": {
        "cmdline": [],
        "modules": [
            "cenaming",
            "cenaming._version",
            "cenaming.name_shortener",
            "cenaming.us_states"
        ],
        "version": "1.0.2"
    },
    "cengbot": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cengbot2": {
        "cmdline": [],
        "modules": [
            "cengbot",
            "dcc",
            "irc",
            "irc_codes",
            "irc_msg"
        ],
        "version": "1"
    },
    "cenpy": {
        "cmdline": [],
        "modules": [
            "cenpy",
            "cenpy._version",
            "cenpy.base",
            "cenpy.explorer",
            "cenpy.geoparser",
            "cenpy.remote",
            "cenpy.tiger"
        ],
        "version": "0.9.2"
    },
    "censored-regression": {
        "cmdline": [],
        "modules": [
            "censored_regression",
            "censored_regression.base_estimator",
            "censored_regression.lasso",
            "censored_regression.least_squares",
            "tests.test_lasso",
            "tests.test_least_squares"
        ],
        "version": "0.0.1"
    },
    "census": {
        "cmdline": [],
        "modules": [
            "census",
            "census.core",
            "census.tests",
            "census.tests.test_census"
        ],
        "version": "0.8.2"
    },
    "census-area": {
        "cmdline": [],
        "modules": [
            "census_area"
        ],
        "version": "0.2"
    },
    "census-cli": {
        "cmdline": [],
        "modules": [
            "census_cli",
            "census_cli.cli"
        ],
        "version": "0.4.3"
    },
    "census-extract": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "census2dbf": {
        "cmdline": [],
        "modules": [
            "census2dbf",
            "census2dbf.censuscsv",
            "census2dbf.cli",
            "census2dbf.dbfwriter"
        ],
        "version": "0.2.0"
    },
    "censusgeocode": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "censusname": {
        "cmdline": [],
        "modules": [
            "censusname",
            "censusname.censusname",
            "censusname.formatters"
        ],
        "version": "0.2.2"
    },
    "censusprotocollib": {
        "cmdline": [],
        "modules": [
            "censusprotocollib",
            "censusprotocollib.census",
            "censusprotocollib.crypto"
        ],
        "version": "1.0.2"
    },
    "censys": {
        "cmdline": [],
        "modules": [
            "censys",
            "censys.admin",
            "censys.admin.maxmind",
            "censys.base",
            "censys.certificates",
            "censys.data",
            "censys.export",
            "censys.ipv4",
            "censys.query",
            "censys.websites"
        ],
        "version": "0.0.7"
    },
    "cent": {
        "cmdline": [],
        "modules": [
            "cent",
            "cent.console",
            "cent.core"
        ],
        "version": "2.1.0"
    },
    "centaur": {
        "cmdline": [],
        "modules": [
            "centaur",
            "centaur.applications",
            "centaur.bridges",
            "centaur.contrib",
            "centaur.contrib.ping",
            "centaur.datatypes",
            "centaur.datatypes.classes",
            "centaur.datatypes.context",
            "centaur.datatypes.decorators",
            "centaur.datatypes.defaults",
            "centaur.datatypes.exceptions",
            "centaur.datatypes.mixins",
            "centaur.di",
            "centaur.funcprog",
            "centaur.queries",
            "centaur.safe_import",
            "centaur.services",
            "centaur.switches",
            "centaur.utils",
            "centaur.version"
        ],
        "version": "0.3.3"
    },
    "center": {
        "cmdline": [],
        "modules": [
            "center"
        ],
        "version": "0.1.0"
    },
    "centerline": {
        "cmdline": [
            "shp2centerline"
        ],
        "modules": [
            "centerline",
            "centerline.centerline"
        ],
        "version": "0.1"
    },
    "centiment-alpha": {
        "cmdline": [],
        "modules": [
            "centiment_alpha",
            "centiment_alpha.CMUTweetTagger",
            "centiment_alpha.centiment"
        ],
        "version": "0.0.33"
    },
    "centinel": {
        "cmdline": [],
        "modules": [
            "centinel",
            "centinel.backend",
            "centinel.cli",
            "centinel.client",
            "centinel.command",
            "centinel.config",
            "centinel.daemonize",
            "centinel.experiment",
            "centinel.primitives",
            "centinel.primitives.dnslib",
            "centinel.primitives.headless_browser",
            "centinel.primitives.http",
            "centinel.primitives.http_helper",
            "centinel.primitives.tcp_connect",
            "centinel.primitives.tcpdump",
            "centinel.primitives.tls",
            "centinel.primitives.traceroute",
            "centinel.utils",
            "centinel.vpn",
            "centinel.vpn.cli",
            "centinel.vpn.hma",
            "centinel.vpn.ipvanish",
            "centinel.vpn.openvpn",
            "centinel.vpn.purevpn",
            "centinel.vpn.vpngate"
        ],
        "version": "0.1.5.7.1"
    },
    "centinel-dev": {
        "cmdline": [],
        "modules": [
            "centinel",
            "centinel.backend",
            "centinel.cli",
            "centinel.client",
            "centinel.command",
            "centinel.config",
            "centinel.daemonize",
            "centinel.experiment",
            "centinel.primitives",
            "centinel.primitives.dnslib",
            "centinel.primitives.http",
            "centinel.primitives.http_helper",
            "centinel.primitives.tcpdump",
            "centinel.primitives.tls",
            "centinel.primitives.traceroute",
            "centinel.utils",
            "centinel.vpn",
            "centinel.vpn.cli",
            "centinel.vpn.hma",
            "centinel.vpn.openvpn"
        ],
        "version": "0.1.5.4.1"
    },
    "centipede": {
        "cmdline": [],
        "modules": [
            "centipede",
            "centipede.framework"
        ],
        "version": "0.2.5"
    },
    "centos": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "centos-package-cron": {
        "cmdline": [],
        "modules": [
            "centos_package_cron",
            "centos_package_cron.annoyance_check",
            "centos_package_cron.annoyance_fetcher",
            "centos_package_cron.command_line",
            "centos_package_cron.db_base",
            "centos_package_cron.db_session_fetcher",
            "centos_package_cron.errata_fetcher",
            "centos_package_cron.errata_item",
            "centos_package_cron.mockable_execute",
            "centos_package_cron.os_version_fetcher",
            "centos_package_cron.package",
            "centos_package_cron.package_checker",
            "centos_package_cron.package_fetcher",
            "centos_package_cron.package_parser",
            "centos_package_cron.report_producer"
        ],
        "version": "1.0.8.1"
    },
    "centralfile": {
        "cmdline": [],
        "modules": [
            "CentralFile",
            "CentralFile.Config",
            "CentralFile.Run",
            "CentralFile.Service"
        ],
        "version": "0.0.1"
    },
    "centralgo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "centralsession": {
        "cmdline": [],
        "modules": [
            "centralsession",
            "centralsession.backend",
            "centralsession.django_session",
            "centralsession.flask_session",
            "centralsession.version",
            "tests",
            "tests.base",
            "tests.dj_settings",
            "tests.djmirror",
            "tests.djmirror.custom_db_backend",
            "tests.djmirror.session_test",
            "tests.test_backend",
            "tests.test_django",
            "tests.test_flask",
            "tests.test_version"
        ],
        "version": "0.3.0"
    },
    "centric8python": {
        "cmdline": [],
        "modules": [
            "centric8python",
            "centric8python.client",
            "centric8python.enum",
            "centric8python.exceptions",
            "centric8python.google_analytics_subscriber",
            "centric8python.logging_subscriber",
            "centric8python.observer",
            "centric8python.table_subscriber",
            "centric8python.test",
            "centric8python.test.config",
            "centric8python.test.test_client",
            "centric8python.test.test_enum",
            "centric8python.test.test_google_analytics_observer",
            "centric8python.test.test_log_observer",
            "centric8python.test.test_upload_doc_img",
            "centric8python.test.test_xml_node_operations",
            "centric8python.utils",
            "centric8python.utils.cleanup",
            "centric8python.xml_node_operations"
        ],
        "version": "3.7.4"
    },
    "centrifuge": {
        "cmdline": [],
        "modules": [
            "centrifuge",
            "centrifuge.auth",
            "centrifuge.client",
            "centrifuge.core",
            "centrifuge.handlers",
            "centrifuge.log",
            "centrifuge.metrics",
            "centrifuge.node",
            "centrifuge.response",
            "centrifuge.schema",
            "centrifuge.structure",
            "centrifuge.utils",
            "centrifuge/engine",
            "centrifuge/engine.memory",
            "centrifuge/engine.redis",
            "centrifuge/web",
            "centrifuge/web.handlers"
        ],
        "version": "0.8.4"
    },
    "centrifuge-mongodb": {
        "cmdline": [],
        "modules": [
            "centrifuge_mongodb"
        ],
        "version": "0.3.0"
    },
    "centrifuge-postgresql": {
        "cmdline": [],
        "modules": [
            "centrifuge_postgresql"
        ],
        "version": "0.2.2"
    },
    "centrifuge-python": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "centroid": {
        "cmdline": [],
        "modules": [
            "centroid"
        ],
        "version": "1.2.1"
    },
    "centrosome": {
        "cmdline": [],
        "modules": [
            "centrosome",
            "centrosome.bg_compensate",
            "centrosome.cpmorphology",
            "centrosome.fastemd",
            "centrosome.filter",
            "centrosome.haralick",
            "centrosome.index",
            "centrosome.kirsch",
            "centrosome.lapjv",
            "centrosome.mode",
            "centrosome.otsu",
            "centrosome.outline",
            "centrosome.princomp",
            "centrosome.propagate",
            "centrosome.radial_power_spectrum",
            "centrosome.rankorder",
            "centrosome.smooth",
            "centrosome.threshold",
            "centrosome.watershed",
            "centrosome.zernike"
        ],
        "version": "1.0.7"
    },
    "centurion": {
        "cmdline": [],
        "modules": [
            "centurion",
            "centurion.centromeres_calls",
            "centurion.config",
            "centurion.externals",
            "centurion.externals.iced",
            "centurion.externals.iced.datasets",
            "centurion.externals.iced.datasets.base",
            "centurion.externals.iced.datasets.dldata",
            "centurion.externals.iced.datasets.setup",
            "centurion.externals.iced.filter",
            "centurion.externals.iced.io",
            "centurion.externals.iced.io._io_else",
            "centurion.externals.iced.io._io_pandas",
            "centurion.externals.iced.io.setup",
            "centurion.externals.iced.normalization",
            "centurion.externals.iced.setup",
            "centurion.externals.iced.utils",
            "centurion.externals.iced.utils._genome",
            "centurion.externals.iced.utils._validation",
            "centurion.externals.iced.utils.validation",
            "centurion.externals.joblib",
            "centurion.externals.joblib._compat",
            "centurion.externals.joblib._multiprocessing_helpers",
            "centurion.externals.joblib.disk",
            "centurion.externals.joblib.format_stack",
            "centurion.externals.joblib.func_inspect",
            "centurion.externals.joblib.hashing",
            "centurion.externals.joblib.logger",
            "centurion.externals.joblib.memory",
            "centurion.externals.joblib.my_exceptions",
            "centurion.externals.joblib.numpy_pickle",
            "centurion.externals.joblib.parallel",
            "centurion.externals.joblib.pool",
            "centurion.externals.joblib.testing",
            "centurion.externals.setup",
            "centurion.optimization",
            "centurion.prelocalization_",
            "centurion.setup",
            "centurion.utils",
            "centurion.validation"
        ],
        "version": "0.1.1"
    },
    "cenvars-client": {
        "cmdline": [],
        "modules": [
            "cenvars",
            "cenvars.api",
            "cenvars.cli",
            "cenvars.codec",
            "cenvars.constants"
        ],
        "version": "0.0.1.3"
    },
    "ceodbc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ceof": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cep": {
        "cmdline": [],
        "modules": [
            "cep"
        ],
        "version": "0.1.1"
    },
    "cepbr": {
        "cmdline": [
            "cep.py"
        ],
        "modules": [
            "cepbr",
            "cepbr.cep"
        ],
        "version": "0.1.0"
    },
    "ceph-api": {
        "cmdline": [],
        "modules": [
            "ceph_api",
            "ceph_api.ceph_command",
            "ceph_api.firefly",
            "ceph_api.firefly.ceph_command",
            "ceph_api.giant",
            "ceph_api.giant.ceph_command",
            "ceph_api.hammer",
            "ceph_api.hammer.ceph_command",
            "ceph_api.infernalis",
            "ceph_api.infernalis.ceph_command",
            "ceph_api.jewel",
            "ceph_api.jewel.ceph_command",
            "ceph_api.validator"
        ],
        "version": "0.4.0"
    },
    "ceph-deploy": {
        "cmdline": [],
        "modules": [
            "ceph_deploy",
            "ceph_deploy.admin",
            "ceph_deploy.calamari",
            "ceph_deploy.cli",
            "ceph_deploy.cliutil",
            "ceph_deploy.conf",
            "ceph_deploy.conf.ceph",
            "ceph_deploy.conf.cephdeploy",
            "ceph_deploy.config",
            "ceph_deploy.connection",
            "ceph_deploy.exc",
            "ceph_deploy.forgetkeys",
            "ceph_deploy.gatherkeys",
            "ceph_deploy.hosts",
            "ceph_deploy.hosts.centos",
            "ceph_deploy.hosts.centos.install",
            "ceph_deploy.hosts.centos.mon",
            "ceph_deploy.hosts.centos.uninstall",
            "ceph_deploy.hosts.common",
            "ceph_deploy.hosts.debian",
            "ceph_deploy.hosts.debian.install",
            "ceph_deploy.hosts.debian.mon",
            "ceph_deploy.hosts.debian.uninstall",
            "ceph_deploy.hosts.fedora",
            "ceph_deploy.hosts.fedora.install",
            "ceph_deploy.hosts.fedora.mon",
            "ceph_deploy.hosts.fedora.uninstall",
            "ceph_deploy.hosts.remotes",
            "ceph_deploy.hosts.rhel",
            "ceph_deploy.hosts.rhel.install",
            "ceph_deploy.hosts.rhel.mon",
            "ceph_deploy.hosts.rhel.uninstall",
            "ceph_deploy.hosts.suse",
            "ceph_deploy.hosts.suse.install",
            "ceph_deploy.hosts.suse.mon",
            "ceph_deploy.hosts.suse.uninstall",
            "ceph_deploy.hosts.util",
            "ceph_deploy.install",
            "ceph_deploy.lib",
            "ceph_deploy.lib.vendor",
            "ceph_deploy.lib.vendor.remoto",
            "ceph_deploy.lib.vendor.remoto.connection",
            "ceph_deploy.lib.vendor.remoto.exc",
            "ceph_deploy.lib.vendor.remoto.file_sync",
            "ceph_deploy.lib.vendor.remoto.lib",
            "ceph_deploy.lib.vendor.remoto.lib.vendor",
            "ceph_deploy.lib.vendor.remoto.lib.vendor.execnet",
            "ceph_deploy.lib.vendor.remoto.lib.vendor.execnet.apipkg",
            "ceph_deploy.lib.vendor.remoto.lib.vendor.execnet.deprecated",
            "ceph_deploy.lib.vendor.remoto.lib.vendor.execnet.gateway",
            "ceph_deploy.lib.vendor.remoto.lib.vendor.execnet.gateway_base",
            "ceph_deploy.lib.vendor.remoto.lib.vendor.execnet.gateway_bootstrap",
            "ceph_deploy.lib.vendor.remoto.lib.vendor.execnet.gateway_io",
            "ceph_deploy.lib.vendor.remoto.lib.vendor.execnet.gateway_socket",
            "ceph_deploy.lib.vendor.remoto.lib.vendor.execnet.multi",
            "ceph_deploy.lib.vendor.remoto.lib.vendor.execnet.rsync",
            "ceph_deploy.lib.vendor.remoto.lib.vendor.execnet.rsync_remote",
            "ceph_deploy.lib.vendor.remoto.lib.vendor.execnet.script",
            "ceph_deploy.lib.vendor.remoto.lib.vendor.execnet.script.loop_socketserver",
            "ceph_deploy.lib.vendor.remoto.lib.vendor.execnet.script.quitserver",
            "ceph_deploy.lib.vendor.remoto.lib.vendor.execnet.script.shell",
            "ceph_deploy.lib.vendor.remoto.lib.vendor.execnet.script.socketserver",
            "ceph_deploy.lib.vendor.remoto.lib.vendor.execnet.script.socketserverservice",
            "ceph_deploy.lib.vendor.remoto.lib.vendor.execnet.script.xx",
            "ceph_deploy.lib.vendor.remoto.lib.vendor.execnet.xspec",
            "ceph_deploy.lib.vendor.remoto.log",
            "ceph_deploy.lib.vendor.remoto.process",
            "ceph_deploy.lib.vendor.remoto.util",
            "ceph_deploy.mds",
            "ceph_deploy.misc",
            "ceph_deploy.mon",
            "ceph_deploy.new",
            "ceph_deploy.osd",
            "ceph_deploy.pkg",
            "ceph_deploy.repo",
            "ceph_deploy.rgw",
            "ceph_deploy.tests",
            "ceph_deploy.tests.conftest",
            "ceph_deploy.tests.directory",
            "ceph_deploy.tests.fakes",
            "ceph_deploy.tests.parser",
            "ceph_deploy.tests.parser.test_admin",
            "ceph_deploy.tests.parser.test_calamari",
            "ceph_deploy.tests.parser.test_config",
            "ceph_deploy.tests.parser.test_disk",
            "ceph_deploy.tests.parser.test_gatherkeys",
            "ceph_deploy.tests.parser.test_install",
            "ceph_deploy.tests.parser.test_main",
            "ceph_deploy.tests.parser.test_mds",
            "ceph_deploy.tests.parser.test_mon",
            "ceph_deploy.tests.parser.test_new",
            "ceph_deploy.tests.parser.test_osd",
            "ceph_deploy.tests.parser.test_pkg",
            "ceph_deploy.tests.parser.test_purge",
            "ceph_deploy.tests.parser.test_purgedata",
            "ceph_deploy.tests.parser.test_repo",
            "ceph_deploy.tests.parser.test_rgw",
            "ceph_deploy.tests.parser.test_uninstall",
            "ceph_deploy.tests.test_cli_admin",
            "ceph_deploy.tests.test_cli_mon",
            "ceph_deploy.tests.test_cli_new",
            "ceph_deploy.tests.test_cli_rgw",
            "ceph_deploy.tests.test_conf",
            "ceph_deploy.tests.test_gather_keys",
            "ceph_deploy.tests.test_gather_keys_missing",
            "ceph_deploy.tests.test_gather_keys_with_mon",
            "ceph_deploy.tests.test_install",
            "ceph_deploy.tests.test_keys_equivalent",
            "ceph_deploy.tests.test_mon",
            "ceph_deploy.tests.test_remotes",
            "ceph_deploy.tests.util",
            "ceph_deploy.util",
            "ceph_deploy.util.arg_validators",
            "ceph_deploy.util.constants",
            "ceph_deploy.util.decorators",
            "ceph_deploy.util.files",
            "ceph_deploy.util.help_formatters",
            "ceph_deploy.util.log",
            "ceph_deploy.util.net",
            "ceph_deploy.util.packages",
            "ceph_deploy.util.paths",
            "ceph_deploy.util.paths.gpg",
            "ceph_deploy.util.paths.mon",
            "ceph_deploy.util.paths.osd",
            "ceph_deploy.util.pkg_managers",
            "ceph_deploy.util.ssh",
            "ceph_deploy.util.system",
            "ceph_deploy.util.templates",
            "ceph_deploy.util.versions",
            "ceph_deploy.validate"
        ],
        "version": "1.5.37"
    },
    "ceph-installer": {
        "cmdline": [
            "ceph-installer",
            "ceph-installer-celery",
            "ceph-installer-gunicorn"
        ],
        "modules": [
            "ceph_installer",
            "ceph_installer.app",
            "ceph_installer.async",
            "ceph_installer.cli",
            "ceph_installer.cli.constants",
            "ceph_installer.cli.decorators",
            "ceph_installer.cli.dev",
            "ceph_installer.cli.log",
            "ceph_installer.cli.main",
            "ceph_installer.cli.task",
            "ceph_installer.cli.util",
            "ceph_installer.commands",
            "ceph_installer.commands.populate",
            "ceph_installer.controllers",
            "ceph_installer.controllers.agent",
            "ceph_installer.controllers.calamari",
            "ceph_installer.controllers.errors",
            "ceph_installer.controllers.mon",
            "ceph_installer.controllers.osd",
            "ceph_installer.controllers.rgw",
            "ceph_installer.controllers.root",
            "ceph_installer.controllers.setup",
            "ceph_installer.controllers.status",
            "ceph_installer.controllers.tasks",
            "ceph_installer.hooks",
            "ceph_installer.models",
            "ceph_installer.models.tasks",
            "ceph_installer.process",
            "ceph_installer.schemas",
            "ceph_installer.tasks",
            "ceph_installer.templates",
            "ceph_installer.tests",
            "ceph_installer.tests.config",
            "ceph_installer.tests.conftest",
            "ceph_installer.tests.test_hooks",
            "ceph_installer.tests.test_process",
            "ceph_installer.tests.test_tasks",
            "ceph_installer.tests.test_util",
            "ceph_installer.util"
        ],
        "version": "1.3.0"
    },
    "ceph-lazy": {
        "cmdline": [],
        "modules": [
            "ceph-lazy"
        ],
        "version": "0.0.4"
    },
    "ceph-request": {
        "cmdline": [],
        "modules": [
            "ceph_request",
            "ceph_request.awsauth",
            "ceph_request.ceph_request",
            "ceph_request.ceph_request_exceptions",
            "ceph_request.http_s3_requests",
            "ceph_request.http_swift_requests"
        ],
        "version": "2.0.1"
    },
    "ceph-workbench": {
        "cmdline": [],
        "modules": [],
        "version": "1.5.19"
    },
    "cephalopod": {
        "cmdline": [],
        "modules": [
            "cephalopod",
            "cephalopod.file_exploration",
            "cephalopod.file_handler",
            "cephalopod.interact_test_plot",
            "cephalopod.interactive_plotting",
            "cephalopod.meta",
            "cephalopod.path_handler",
            "cephalopod.plotting_module"
        ],
        "version": "0.15a0"
    },
    "cepheus": {
        "cmdline": [],
        "modules": [
            "Cepheus"
        ],
        "version": "1.0.1"
    },
    "cepko": {
        "cmdline": [],
        "modules": [
            "cepko"
        ],
        "version": "1.0.1"
    },
    "ceptacle": {
        "cmdline": [],
        "modules": [
            "ceptacle",
            "ceptacle.application",
            "ceptacle.architecture",
            "ceptacle.bus",
            "ceptacle.bus.partners",
            "ceptacle.bus.partners.adhoc",
            "ceptacle.bus.partners.cluster",
            "ceptacle.bus.partners.main",
            "ceptacle.bus.services",
            "ceptacle.bus.spline",
            "ceptacle.client",
            "ceptacle.client.cli",
            "ceptacle.client.support",
            "ceptacle.config",
            "ceptacle.debugging",
            "ceptacle.encoding",
            "ceptacle.network",
            "ceptacle.packaging",
            "ceptacle.runtime",
            "ceptacle.security",
            "ceptacle.server",
            "ceptacle.servicelib",
            "ceptacle.servicelib.cron",
            "ceptacle.servicelib.docmgr",
            "ceptacle.servicelib.registry",
            "ceptacle.servicelib.web",
            "ceptacle.servicelib.web.falcon",
            "ceptacle.servicelib.web.falcon.manage",
            "ceptacle.servicelib.web.falcon.settings",
            "ceptacle.servicelib.web.falcon.urls",
            "ceptacle.servicelib.web.falcon.views",
            "ceptacle.storage"
        ],
        "version": "0.4"
    },
    "cepton-sdk": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.4"
    },
    "ceranubis": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cerastes": {
        "cmdline": [],
        "modules": [
            "cerastes",
            "cerastes.channel",
            "cerastes.client",
            "cerastes.controller",
            "cerastes.errors",
            "cerastes.kerberos",
            "cerastes.protobuf",
            "cerastes.protobuf.HAServiceProtocol_pb2",
            "cerastes.protobuf.IpcConnectionContext_pb2",
            "cerastes.protobuf.ProtobufRpcEngine_pb2",
            "cerastes.protobuf.RpcHeader_pb2",
            "cerastes.protobuf.Security_pb2",
            "cerastes.protobuf.application_history_client_pb2",
            "cerastes.protobuf.application_history_server_pb2",
            "cerastes.protobuf.applicationclient_protocol_pb2",
            "cerastes.protobuf.applicationmaster_protocol_pb2",
            "cerastes.protobuf.containermanagement_protocol_pb2",
            "cerastes.protobuf.resourcemanager_administration_protocol_pb2",
            "cerastes.protobuf.yarn_protos_pb2",
            "cerastes.protobuf.yarn_server_resourcemanager_service_protos_pb2",
            "cerastes.protobuf.yarn_service_protos_pb2",
            "cerastes.rpc_sasl",
            "cerastes.utils"
        ],
        "version": "1.0.0"
    },
    "cerates": {
        "cmdline": [],
        "modules": [
            "cerates",
            "cerates.cerates",
            "cerates.helpers",
            "examples",
            "examples.example"
        ],
        "version": "0.1.0"
    },
    "cerberos": {
        "cmdline": [],
        "modules": [
            "cerberos",
            "cerberos.admin",
            "cerberos.decorators",
            "cerberos.forms",
            "cerberos.migrations",
            "cerberos.migrations.0001_initial",
            "cerberos.migrations.0002_auto",
            "cerberos.migrations.0003_auto__add_field_failedaccessattempt_locked",
            "cerberos.migrations.0004_auto__chg_field_failedaccessattempt_http_accept",
            "cerberos.migrations.0005_auto__add_field_failedaccessattempt_expired",
            "cerberos.models",
            "cerberos.settings",
            "cerberos.templatetags",
            "cerberos.templatetags.tt_cerberos",
            "cerberos.tests",
            "cerberos.tests.basic",
            "cerberos.urls",
            "cerberos.views",
            "testapp",
            "testapp.manage",
            "testapp.settings",
            "testapp.urls"
        ],
        "version": "0.2.1"
    },
    "cerberus": {
        "cmdline": [],
        "modules": [
            "cerberus",
            "cerberus.errors",
            "cerberus.platform",
            "cerberus.schema",
            "cerberus.tests",
            "cerberus.tests.conftest",
            "cerberus.tests.test_assorted",
            "cerberus.tests.test_customization",
            "cerberus.tests.test_errors",
            "cerberus.tests.test_legacy",
            "cerberus.tests.test_normalization",
            "cerberus.tests.test_registries",
            "cerberus.tests.test_schema",
            "cerberus.tests.test_validation",
            "cerberus.utils",
            "cerberus.validator"
        ],
        "version": "1.1"
    },
    "cerberus-collections": {
        "cmdline": [],
        "modules": [
            "cerberus_collections",
            "cerberus_collections.utils",
            "cerberus_collections.versions"
        ],
        "version": "1.2016.9a1"
    },
    "cerberus-python-client": {
        "cmdline": [],
        "modules": [
            "cerberus",
            "cerberus.aws_auth",
            "cerberus.client",
            "cerberus.user_auth"
        ],
        "version": "0.3"
    },
    "cerda": {
        "cmdline": [],
        "modules": [
            "cerda",
            "cerda.errors",
            "cerda.farm_watcher",
            "cerda.helpers"
        ],
        "version": "0.1.2"
    },
    "cereal": {
        "cmdline": [],
        "modules": [
            "cereal"
        ],
        "version": "0.2"
    },
    "cereal-box": {
        "cmdline": [],
        "modules": [
            "cereal",
            "cereal.cereal",
            "cereal.functions",
            "cereal.serializers",
            "cereal.urls",
            "cereal.views"
        ],
        "version": "1.0.4"
    },
    "cereal-jar": {
        "cmdline": [],
        "modules": [
            "cereal_jar",
            "cereal_jar.cookiejar",
            "cereal_jar.recordjar",
            "cereal_jar.util"
        ],
        "version": "0.0.1"
    },
    "cerealizer": {
        "cmdline": [],
        "modules": [],
        "version": "0.8.1"
    },
    "cerebrate": {
        "cmdline": [],
        "modules": [
            "cerebrate",
            "replaymanager",
            "replaymanager.replaymanager",
            "replaysearch",
            "replaysearch.ReplaySearcher"
        ],
        "version": "0.0.11"
    },
    "cerebro": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cerebrod": {
        "cmdline": [],
        "modules": [
            "clusterconsole.main",
            "clustersitter",
            "clustersitter.actions",
            "clustersitter.clusterstate",
            "clustersitter.clusterstats",
            "clustersitter.datarecord",
            "clustersitter.deploymentrecipe",
            "clustersitter.dnsprovider",
            "clustersitter.dreamhost",
            "clustersitter.dynect",
            "clustersitter.eventmanager",
            "clustersitter.jobfiller",
            "clustersitter.machineconfig",
            "clustersitter.machinemonitor",
            "clustersitter.main",
            "clustersitter.manage",
            "clustersitter.monitoredmachine",
            "clustersitter.productionjob",
            "clustersitter.providers",
            "clustersitter.providers.aws",
            "clustersitter.providers.machineprovider",
            "clustersitter.settings",
            "clustersitter.sitter",
            "clustersitter.urls",
            "machineconsole",
            "machineconsole.main",
            "machineconsole.menu",
            "machinesitter",
            "machinesitter.machinemanager",
            "machinesitter.machinestats",
            "machinesitter.main",
            "machinesitter.taskmanager",
            "sittercommon",
            "sittercommon.address",
            "sittercommon.api",
            "sittercommon.arg_parser",
            "sittercommon.http_monitor",
            "sittercommon.logmanager",
            "sittercommon.machinedata",
            "sittercommon.utils",
            "sittercommon.utils.change_debug_level",
            "sittercommon.utils.list_jobs",
            "sittercommon.utils.list_machines",
            "sittercommon.utils.login",
            "sittercommon.utils.main",
            "sittercommon.utils.update_idle_limit",
            "sittercommon.utils.update_job",
            "sittercommon.utils.update_job_cfg",
            "tasksitter",
            "tasksitter.constraints",
            "tasksitter.main",
            "tasksitter.process",
            "tasksitter.process_harness",
            "tasksitter.stats_collector"
        ],
        "version": "1.2.11"
    },
    "cerebrum": {
        "cmdline": [],
        "modules": [
            "cerebrum",
            "cerebrum.crossmodal",
            "cerebrum.crossmodal.mapper",
            "cerebrum.crossmodal.utilities",
            "cerebrum.hearing",
            "cerebrum.hearing.perception",
            "cerebrum.hearing.utilities",
            "cerebrum.language",
            "cerebrum.language.analysis",
            "cerebrum.language.utilities",
            "cerebrum.neuralnet",
            "cerebrum.neuralnet.elements",
            "cerebrum.neuralnet.elements.neuron",
            "cerebrum.neuralnet.elements.rbm",
            "cerebrum.neuralnet.utilities",
            "cerebrum.neuralnet.weaver",
            "cerebrum.remove_database",
            "cerebrum.vision",
            "cerebrum.vision.perception",
            "cerebrum.vision.utilities"
        ],
        "version": "0.1.81"
    },
    "ceremony": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "ceres": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cern-cpymad": {
        "cmdline": [],
        "modules": [
            "cern",
            "cern.cpymad",
            "cern.cpymad._couch",
            "cern.cpymad._libmadx_rpc",
            "cern.cpymad._madx_tools",
            "cern.cpymad.libmadx",
            "cern.cpymad.madx",
            "cern.cpymad.model",
            "cern.cpymad.model_locator",
            "cern.cpymad.modeldefs",
            "cern.cpymad.service",
            "cern.cpymad.types",
            "cern.resource",
            "cern.resource.base",
            "cern.resource.couch",
            "cern.resource.file",
            "cern.resource.package"
        ],
        "version": "0.9"
    },
    "cern-sso": {
        "cmdline": [],
        "modules": [
            "cernsso",
            "cernsso.cookie"
        ],
        "version": "0.1.1"
    },
    "cernent": {
        "cmdline": [],
        "modules": [
            "NessusCom",
            "NessusCom.NessusCommunicator",
            "ReportFramework",
            "ReportFramework.RFReportProcs",
            "ReportFramework.RFTargetProcs",
            "ReportFramework.RFVulnProcs",
            "ReportFramework.ReportFramework",
            "ReportFramework.ReportManager",
            "ScanEvent",
            "ScanEvent.InitMode",
            "ScanEvent.MarkerFileIO",
            "ScanEvent.ScanEvent",
            "ScanEvent.ScanRunner",
            "ScanEvent.testBatchMode",
            "config",
            "config.config",
            "deliveryMethod",
            "deliveryMethod.Mailer",
            "etc",
            "gui",
            "gui.cGui",
            "gui.cGui.config",
            "gui.cGui.config.GuiConfig",
            "gui.cGui.controller",
            "gui.cGui.controller.CGuiController",
            "gui.cGui.main",
            "gui.cGui.main.Launchpad",
            "gui.cGui.main.ReportsView",
            "gui.cGui.main.ScanEventEditor",
            "gui.cGui.main.ScanLaunchFrame",
            "gui.cGui.widgets",
            "gui.cGui.widgets.CButton",
            "gui.cGui.widgets.CCheckButton",
            "gui.cGui.widgets.CEntry",
            "gui.cGui.widgets.CFrame",
            "gui.cGui.widgets.CInitialValueEntry",
            "gui.cGui.widgets.CInitialValueText",
            "gui.cGui.widgets.CLabel",
            "gui.cGui.widgets.CListBox",
            "gui.cGui.widgets.COptionMenu",
            "gui.cGui.widgets.CSpinBox",
            "gui.cGui.widgets.CText",
            "gui.cGui.widgets.Notebook",
            "gui.cGui.widgets.compounds",
            "gui.cGui.widgets.compounds.CEmailFrame",
            "gui.cGui.widgets.compounds.CEmailItemDisplayFrame",
            "gui.cGui.widgets.compounds.CEmailItemListFrame",
            "gui.cGui.widgets.compounds.CIVEntry",
            "gui.cGui.widgets.compounds.CIVText",
            "gui.test",
            "gui.test.testGui",
            "lib",
            "lib.Daemon",
            "lib.NessusXMLRPC",
            "lib.dotnessus_v2",
            "reports",
            "reports.Concise",
            "reports.Credentialed",
            "reports.JavaJRE",
            "reports.RebootRequired",
            "reports.TargetList",
            "resources"
        ],
        "version": "0.1.0"
    },
    "cernopendata-pages": {
        "cmdline": [],
        "modules": [
            "cernopendata_pages",
            "cernopendata_pages.config",
            "cernopendata_pages.version",
            "cernopendata_pages.views"
        ],
        "version": "1.0.0"
    },
    "cernopendata-theme": {
        "cmdline": [],
        "modules": [
            "cernopendata_theme",
            "cernopendata_theme.bundles",
            "cernopendata_theme.config",
            "cernopendata_theme.version",
            "cernopendata_theme.views"
        ],
        "version": "1.0.1"
    },
    "cernservicexml": {
        "cmdline": [],
        "modules": [
            "cernservicexml",
            "cernservicexml._compat",
            "cernservicexml.document",
            "cernservicexml.publisher",
            "cernservicexml.version"
        ],
        "version": "0.2.1"
    },
    "cernsso": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cerridwen": {
        "cmdline": [],
        "modules": [
            "cerridwen",
            "cerridwen.api_server",
            "cerridwen.cerridwen",
            "cerridwen.cli",
            "cerridwen.tests"
        ],
        "version": "1.3.1"
    },
    "cert-core": {
        "cmdline": [],
        "modules": [
            "cert_core",
            "cert_core.helpers",
            "cert_core.model",
            "tests",
            "tests.test_init",
            "tests.test_model"
        ],
        "version": "2.0b7"
    },
    "cert-issuer": {
        "cmdline": [],
        "modules": [
            "cert_issuer",
            "cert_issuer.certificate_handler",
            "cert_issuer.config",
            "cert_issuer.connectors",
            "cert_issuer.errors",
            "cert_issuer.helpers",
            "cert_issuer.issue_certificates",
            "cert_issuer.issuer",
            "cert_issuer.secure_signer",
            "cert_issuer.transaction_handler",
            "cert_issuer.tx_utils",
            "tests",
            "tests.test_connectors",
            "tests.test_secure_signer",
            "tests.test_tx_utils"
        ],
        "version": "2.0b6"
    },
    "cert-schema": {
        "cmdline": [],
        "modules": [
            "cert_schema",
            "cert_schema.schema_tools",
            "cert_schema.schema_tools.document_loader",
            "cert_schema.schema_tools.schema_validator",
            "tests",
            "tests.test_document_loader",
            "tests.test_schema_validator"
        ],
        "version": "2.0b12"
    },
    "cert-store": {
        "cmdline": [],
        "modules": [
            "cert_store",
            "cert_store.certificate_store",
            "cert_store.config",
            "cert_store.gridfs_key_value_store",
            "tests",
            "tests.test_certificate_store"
        ],
        "version": "2.0b7"
    },
    "cert-tools": {
        "cmdline": [],
        "modules": [
            "cert_tools",
            "cert_tools.config",
            "cert_tools.create_certificate_template",
            "cert_tools.create_issuer",
            "cert_tools.create_revocation_addresses",
            "cert_tools.extract_links",
            "cert_tools.helpers",
            "cert_tools.instantiate_certificate_batch",
            "cert_tools.jsonpath_helpers",
            "tests",
            "tests.test_cert_tools"
        ],
        "version": "1.2.2"
    },
    "cert-verifier": {
        "cmdline": [],
        "modules": [
            "cert_verifier",
            "cert_verifier.checks",
            "cert_verifier.connectors",
            "cert_verifier.errors",
            "cert_verifier.verifier",
            "tests",
            "tests.test_checks",
            "tests.test_connectors",
            "tests.test_verifier"
        ],
        "version": "2.0b6"
    },
    "certauth": {
        "cmdline": [],
        "modules": [
            "certauth",
            "certauth.certauth"
        ],
        "version": "1.2"
    },
    "certbot": {
        "cmdline": [],
        "modules": [
            "certbot",
            "certbot.account",
            "certbot.achallenges",
            "certbot.auth_handler",
            "certbot.cert_manager",
            "certbot.cli",
            "certbot.client",
            "certbot.configuration",
            "certbot.constants",
            "certbot.crypto_util",
            "certbot.display",
            "certbot.display.completer",
            "certbot.display.dummy_readline",
            "certbot.display.enhancements",
            "certbot.display.ops",
            "certbot.display.util",
            "certbot.eff",
            "certbot.error_handler",
            "certbot.errors",
            "certbot.hooks",
            "certbot.interfaces",
            "certbot.lock",
            "certbot.log",
            "certbot.main",
            "certbot.notify",
            "certbot.ocsp",
            "certbot.plugins",
            "certbot.plugins.common",
            "certbot.plugins.common_test",
            "certbot.plugins.disco",
            "certbot.plugins.disco_test",
            "certbot.plugins.manual",
            "certbot.plugins.manual_test",
            "certbot.plugins.null",
            "certbot.plugins.null_test",
            "certbot.plugins.selection",
            "certbot.plugins.selection_test",
            "certbot.plugins.standalone",
            "certbot.plugins.standalone_test",
            "certbot.plugins.util",
            "certbot.plugins.util_test",
            "certbot.plugins.webroot",
            "certbot.plugins.webroot_test",
            "certbot.renewal",
            "certbot.reporter",
            "certbot.reverter",
            "certbot.storage",
            "certbot.tests",
            "certbot.tests.account_test",
            "certbot.tests.acme_util",
            "certbot.tests.auth_handler_test",
            "certbot.tests.cert_manager_test",
            "certbot.tests.cli_test",
            "certbot.tests.client_test",
            "certbot.tests.configuration_test",
            "certbot.tests.crypto_util_test",
            "certbot.tests.display",
            "certbot.tests.display.completer_test",
            "certbot.tests.display.enhancements_test",
            "certbot.tests.display.ops_test",
            "certbot.tests.display.util_test",
            "certbot.tests.eff_test",
            "certbot.tests.error_handler_test",
            "certbot.tests.errors_test",
            "certbot.tests.hook_test",
            "certbot.tests.lock_test",
            "certbot.tests.log_test",
            "certbot.tests.main_test",
            "certbot.tests.notify_test",
            "certbot.tests.ocsp_test",
            "certbot.tests.renewal_test",
            "certbot.tests.reporter_test",
            "certbot.tests.reverter_test",
            "certbot.tests.storage_test",
            "certbot.tests.util",
            "certbot.tests.util_test",
            "certbot.util"
        ],
        "version": "0.14.1"
    },
    "certbot-apache": {
        "cmdline": [],
        "modules": [
            "certbot_apache",
            "certbot_apache.augeas_configurator",
            "certbot_apache.configurator",
            "certbot_apache.constants",
            "certbot_apache.display_ops",
            "certbot_apache.obj",
            "certbot_apache.parser",
            "certbot_apache.tests",
            "certbot_apache.tests.augeas_configurator_test",
            "certbot_apache.tests.complex_parsing_test",
            "certbot_apache.tests.configurator_test",
            "certbot_apache.tests.constants_test",
            "certbot_apache.tests.display_ops_test",
            "certbot_apache.tests.obj_test",
            "certbot_apache.tests.parser_test",
            "certbot_apache.tests.tls_sni_01_test",
            "certbot_apache.tests.util",
            "certbot_apache.tls_sni_01"
        ],
        "version": "0.14.1"
    },
    "certbot-compatibility-test": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "certbot-cwebroot": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "certbot-django": {
        "cmdline": [],
        "modules": [
            "certbot_django",
            "certbot_django.coordinator",
            "certbot_django.coordinator.authenticator",
            "certbot_django.coordinator.tests",
            "certbot_django.coordinator.tests.test_authenticator",
            "certbot_django.server",
            "certbot_django.server.admin",
            "certbot_django.server.apps",
            "certbot_django.server.migrations",
            "certbot_django.server.migrations.0001_initial",
            "certbot_django.server.models",
            "certbot_django.server.serializers",
            "certbot_django.server.tests",
            "certbot_django.server.tests.test_models",
            "certbot_django.server.tests.test_views",
            "certbot_django.server.urls",
            "certbot_django.server.views"
        ],
        "version": "0.1.0"
    },
    "certbot-dns-cloudflare": {
        "cmdline": [],
        "modules": [
            "certbot_dns_cloudflare"
        ],
        "version": "0.14.0.dev0"
    },
    "certbot-dns-cloudxns": {
        "cmdline": [],
        "modules": [],
        "version": "0.15.0.dev0"
    },
    "certbot-dns-digitalocean": {
        "cmdline": [],
        "modules": [],
        "version": "0.15.0.dev0"
    },
    "certbot-dns-dnsimple": {
        "cmdline": [],
        "modules": [],
        "version": "0.15.0.dev0"
    },
    "certbot-dns-dnsmadeeasy": {
        "cmdline": [],
        "modules": [],
        "version": "0.15.0.dev0"
    },
    "certbot-dns-google": {
        "cmdline": [],
        "modules": [],
        "version": "0.15.0.dev0"
    },
    "certbot-dns-luadns": {
        "cmdline": [],
        "modules": [],
        "version": "0.15.0.dev0"
    },
    "certbot-dns-nsone": {
        "cmdline": [],
        "modules": [],
        "version": "0.15.0.dev0"
    },
    "certbot-dns-route53": {
        "cmdline": [],
        "modules": [],
        "version": "0.15.0.dev0"
    },
    "certbot-external-auth": {
        "cmdline": [],
        "modules": [
            "certbot_external_auth",
            "certbot_external_auth.plugin"
        ],
        "version": "0.0.8"
    },
    "certbot-loopia": {
        "cmdline": [],
        "modules": [
            "certbot_loopia"
        ],
        "version": "0.1.0"
    },
    "certbot-nginx": {
        "cmdline": [],
        "modules": [
            "certbot_nginx",
            "certbot_nginx.configurator",
            "certbot_nginx.constants",
            "certbot_nginx.nginxparser",
            "certbot_nginx.obj",
            "certbot_nginx.parser",
            "certbot_nginx.tests",
            "certbot_nginx.tests.configurator_test",
            "certbot_nginx.tests.nginxparser_test",
            "certbot_nginx.tests.obj_test",
            "certbot_nginx.tests.parser_test",
            "certbot_nginx.tests.tls_sni_01_test",
            "certbot_nginx.tests.util",
            "certbot_nginx.tls_sni_01"
        ],
        "version": "0.14.1"
    },
    "certbot-openshift": {
        "cmdline": [],
        "modules": [
            "certbot_openshift",
            "certbot_openshift.installer",
            "certbot_openshift.tests",
            "certbot_openshift.tests.test_installer"
        ],
        "version": "0.1.0"
    },
    "certbot-py": {
        "cmdline": [],
        "modules": [
            "certbot_py",
            "certbot_py.client"
        ],
        "version": "0.10.1"
    },
    "certbot-route53": {
        "cmdline": [],
        "modules": [
            "certbot_route53",
            "certbot_route53.authenticator"
        ],
        "version": "0.1.5"
    },
    "certbot-s3front": {
        "cmdline": [],
        "modules": [
            "certbot_s3front",
            "certbot_s3front.authenticator",
            "certbot_s3front.installer"
        ],
        "version": "0.2.1"
    },
    "certbuilder": {
        "cmdline": [],
        "modules": [
            "certbuilder"
        ],
        "version": "0.14.2"
    },
    "certcenter": {
        "cmdline": [],
        "modules": [
            "CertCenter"
        ],
        "version": "1.13.7"
    },
    "certchecker": {
        "cmdline": [],
        "modules": [
            "certchecker",
            "certchecker.certchecker"
        ],
        "version": "0.2.4"
    },
    "certdata": {
        "cmdline": [],
        "modules": [
            "certdata",
            "certdata.certdata"
        ],
        "version": "0.1.1"
    },
    "certidude": {
        "cmdline": [
            "certidude"
        ],
        "modules": [
            "certidude",
            "certidude.api",
            "certidude.api.cfg",
            "certidude.api.lease",
            "certidude.api.log",
            "certidude.api.request",
            "certidude.api.revoked",
            "certidude.api.signed",
            "certidude.api.tag",
            "certidude.api.whois",
            "certidude.auth",
            "certidude.authority",
            "certidude.cli",
            "certidude.common",
            "certidude.config",
            "certidude.constants",
            "certidude.decorators",
            "certidude.errors",
            "certidude.firewall",
            "certidude.helpers",
            "certidude.mailer",
            "certidude.mysqllog",
            "certidude.push",
            "certidude.relational",
            "certidude.signer",
            "certidude.user",
            "certidude.wrappers",
            "certidude.wsgi"
        ],
        "version": "0.1.21"
    },
    "certifi": {
        "cmdline": [],
        "modules": [
            "certifi",
            "certifi.core"
        ],
        "version": "2017.4.17"
    },
    "certifier": {
        "cmdline": [],
        "modules": [
            "certifier",
            "certifier.core"
        ],
        "version": "0.2"
    },
    "certify": {
        "cmdline": [],
        "modules": [
            "certify",
            "certify.exceptions",
            "certify.signature",
            "certify.signature.manual",
            "certify.utils",
            "certify.x509"
        ],
        "version": "1.0rc6"
    },
    "certitude": {
        "cmdline": [],
        "modules": [
            "certitude",
            "certitude._certitude",
            "certitude.api",
            "certitude.build",
            "certitude.certitude"
        ],
        "version": "1.0.1"
    },
    "certografia": {
        "cmdline": [],
        "modules": [
            "certografia",
            "certografia.functions"
        ],
        "version": "0.1b"
    },
    "certsling": {
        "cmdline": [],
        "modules": [
            "certsling"
        ],
        "version": "0.8.0"
    },
    "certsrv": {
        "cmdline": [],
        "modules": [
            "certsrv"
        ],
        "version": "1.0.0"
    },
    "certstore": {
        "cmdline": [],
        "modules": [
            "certstore",
            "certstore.certstore"
        ],
        "version": "0.0.2"
    },
    "certvalidator": {
        "cmdline": [],
        "modules": [
            "certvalidator",
            "certvalidator._errors",
            "certvalidator._types",
            "certvalidator._version",
            "certvalidator.context",
            "certvalidator.crl_client",
            "certvalidator.errors",
            "certvalidator.ocsp_client",
            "certvalidator.path",
            "certvalidator.registry",
            "certvalidator.validate"
        ],
        "version": "0.11.1"
    },
    "cesarvaliente-mswl-webcrawler": {
        "cmdline": [
            "mycraaawler.py"
        ],
        "modules": [
            "pymycraaawler",
            "pymycraaawler.CheckArguments",
            "pymycraaawler.ConnectionManager",
            "pymycraaawler.HtmlParser",
            "pymycraaawler.Log",
            "pymycraaawler.Settings"
        ],
        "version": "1.0"
    },
    "ceshi": {
        "cmdline": [],
        "modules": [],
        "version": "1.6.0"
    },
    "cesium": {
        "cmdline": [],
        "modules": [
            "cesium",
            "cesium.data_management",
            "cesium.datasets",
            "cesium.datasets.andrzejak",
            "cesium.datasets.asas_training",
            "cesium.datasets.util",
            "cesium.features",
            "cesium.features.amplitude",
            "cesium.features.cadence_features",
            "cesium.features.common_functions",
            "cesium.features.graphs",
            "cesium.features.lomb_scargle",
            "cesium.features.lomb_scargle_fast",
            "cesium.features.num_alias",
            "cesium.features.period_folding",
            "cesium.features.periodic_model",
            "cesium.features.qso_model",
            "cesium.features.scatter_res_raw",
            "cesium.features.setup",
            "cesium.features.stetson",
            "cesium.features.tests",
            "cesium.features.tests.test_cadence_features",
            "cesium.features.tests.test_general_features",
            "cesium.features.tests.test_graphs",
            "cesium.features.tests.test_lomb_scargle_features",
            "cesium.features.tests.util",
            "cesium.featurize",
            "cesium.setup",
            "cesium.tests",
            "cesium.tests.fixtures",
            "cesium.tests.test_data_management",
            "cesium.tests.test_featurize",
            "cesium.tests.test_time_series",
            "cesium.tests.test_util",
            "cesium.time_series",
            "cesium.util",
            "cesium.version"
        ],
        "version": "0.9.2"
    },
    "cesium-grpc": {
        "cmdline": [
            "cesium"
        ],
        "modules": [
            "cesium_grpc"
        ],
        "version": "1.0"
    },
    "cesiumpy": {
        "cmdline": [],
        "modules": [
            "cesiumpy",
            "cesiumpy.base",
            "cesiumpy.camera",
            "cesiumpy.constants",
            "cesiumpy.data",
            "cesiumpy.data.country",
            "cesiumpy.data.tests",
            "cesiumpy.data.tests.test_country",
            "cesiumpy.datasource",
            "cesiumpy.entities",
            "cesiumpy.entities.cartesian",
            "cesiumpy.entities.color",
            "cesiumpy.entities.entity",
            "cesiumpy.entities.material",
            "cesiumpy.entities.model",
            "cesiumpy.entities.pinbuilder",
            "cesiumpy.entities.tests",
            "cesiumpy.entities.tests.test_cartesian",
            "cesiumpy.entities.tests.test_color",
            "cesiumpy.entities.tests.test_entity",
            "cesiumpy.entities.tests.test_material",
            "cesiumpy.entities.tests.test_model",
            "cesiumpy.entities.tests.test_pinbuilder",
            "cesiumpy.entities.tests.test_transform",
            "cesiumpy.entities.transform",
            "cesiumpy.extension",
            "cesiumpy.extension.geocode",
            "cesiumpy.extension.io",
            "cesiumpy.extension.shapefile",
            "cesiumpy.extension.spatial",
            "cesiumpy.extension.tests",
            "cesiumpy.extension.tests.test_geocode",
            "cesiumpy.extension.tests.test_io",
            "cesiumpy.extension.tests.test_shapely",
            "cesiumpy.extension.tests.test_spatial",
            "cesiumpy.plotting",
            "cesiumpy.plotting.plot",
            "cesiumpy.plotting.tests",
            "cesiumpy.plotting.tests.test_plotting",
            "cesiumpy.provider",
            "cesiumpy.scene",
            "cesiumpy.testing",
            "cesiumpy.tests",
            "cesiumpy.tests.test_base",
            "cesiumpy.tests.test_camera",
            "cesiumpy.tests.test_datasource",
            "cesiumpy.tests.test_math",
            "cesiumpy.tests.test_provider",
            "cesiumpy.util",
            "cesiumpy.util.common",
            "cesiumpy.util.html",
            "cesiumpy.util.tests",
            "cesiumpy.util.tests.test_common",
            "cesiumpy.util.tests.test_html",
            "cesiumpy.util.tests.test_trait",
            "cesiumpy.util.trait",
            "cesiumpy.version",
            "cesiumpy.viewer",
            "cesiumpy.widget"
        ],
        "version": "0.3.3"
    },
    "cess": {
        "cmdline": [],
        "modules": [
            "cess",
            "cess.agent",
            "cess.agent.action",
            "cess.agent.outcome",
            "cess.agent.prereq",
            "cess.agent.search",
            "cess.agent.state",
            "cess.agent.utility",
            "cess.cli",
            "cess.cluster",
            "cess.cluster.arbiter",
            "cess.cluster.client",
            "cess.cluster.protocol",
            "cess.cluster.server",
            "cess.cluster.worker",
            "cess.sim",
            "cess.util"
        ],
        "version": "0.0.1"
    },
    "cesspool": {
        "cmdline": [],
        "modules": [
            "cesspool",
            "cesspool.downloaders",
            "cesspool.downloaders.downloader",
            "cesspool.downloaders.torrent",
            "cesspool.pool"
        ],
        "version": "2.1.0"
    },
    "cet": {
        "cmdline": [],
        "modules": [
            "cet"
        ],
        "version": "0.1.2"
    },
    "cetacean": {
        "cmdline": [],
        "modules": [
            "cetacean",
            "cetacean.embedded_resource",
            "cetacean.embedded_resource_collection",
            "cetacean.resource",
            "spec",
            "spec.acceptance_spec"
        ],
        "version": "1.0.1"
    },
    "cetup": {
        "cmdline": [],
        "modules": [
            "cetup",
            "cetup.cetup"
        ],
        "version": "0.1"
    },
    "cetus": {
        "cmdline": [],
        "modules": [
            "cetus",
            "cetus.data_access",
            "cetus.data_access.connectors",
            "cetus.data_access.deletion",
            "cetus.data_access.execution",
            "cetus.data_access.reading",
            "cetus.data_access.saving",
            "cetus.data_access.updating",
            "cetus.data_access.utils",
            "cetus.queries",
            "cetus.queries.deletion",
            "cetus.queries.filters",
            "cetus.queries.reading",
            "cetus.queries.saving",
            "cetus.queries.updating",
            "cetus.queries.utils",
            "cetus.sqlalchemy",
            "cetus.sqlalchemy.query",
            "cetus.types",
            "cetus.utils",
            "tests",
            "tests.conftest",
            "tests.data_access_tests",
            "tests.data_access_tests.test_deletion",
            "tests.data_access_tests.test_reading",
            "tests.data_access_tests.test_saving",
            "tests.data_access_tests.test_transaction",
            "tests.data_access_tests.test_updating",
            "tests.data_access_tests.test_utils",
            "tests.fixtures",
            "tests.fixtures.data_access",
            "tests.fixtures.records",
            "tests.fixtures.tables",
            "tests.queries_tests",
            "tests.queries_tests.test_filters",
            "tests.strategies",
            "tests.strategies.data_access",
            "tests.strategies.filters",
            "tests.strategies.records",
            "tests.strategies.tables",
            "tests.strategies.utils",
            "tests.utils"
        ],
        "version": "0.9.1"
    },
    "cex": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cexbot": {
        "cmdline": [
            "cexbot-cli"
        ],
        "modules": [
            "cexbot",
            "cexbot.appdirs",
            "cexbot.cex",
            "cexbot.cexapi",
            "cexbot.command_utils",
            "cexbot.config",
            "cexbot.db",
            "cexbot.gui",
            "cexbot.parser",
            "cexbot.singleton",
            "cexbot.tasks",
            "cexbot.timer",
            "cexbot.updater"
        ],
        "version": "0.0.14a3"
    },
    "cexprtk": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "ceygen": {
        "cmdline": [],
        "modules": [
            "ceygen",
            "ceygen.tests",
            "ceygen.tests.support",
            "support",
            "support.dist",
            "support.dist_cmd_build_ext",
            "support.dist_cmd_clean",
            "support.dist_cmd_test",
            "support.visualize_stats"
        ],
        "version": "0.3"
    },
    "cf": {
        "cmdline": [
            "cf"
        ],
        "modules": [],
        "version": "0.41.0"
    },
    "cf-app-utils": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cf-boot": {
        "cmdline": [],
        "modules": [
            "cfboot",
            "cfboot.master",
            "cfboot.master.bootstrap",
            "cfboot.scripts"
        ],
        "version": "1.5.0"
    },
    "cf-check-apps": {
        "cmdline": [
            "cf_check_apps.py"
        ],
        "modules": [],
        "version": "1.1"
    },
    "cf-configuration-exporter": {
        "cmdline": [],
        "modules": [
            "exporter",
            "exporter.config",
            "exporter.exceptions",
            "exporter.exporter",
            "exporter.run"
        ],
        "version": "0.0.12"
    },
    "cf-ddns": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.3"
    },
    "cf-deployment-tracker": {
        "cmdline": [],
        "modules": [
            "cf_deployment_tracker"
        ],
        "version": "1.0.4"
    },
    "cf-plot": {
        "cmdline": [],
        "modules": [
            "cfplot",
            "cfplot.cfplot"
        ],
        "version": "2.1.22"
    },
    "cf-predict": {
        "cmdline": [],
        "modules": [
            "cf_predict",
            "cf_predict.api",
            "cf_predict.config",
            "cf_predict.errors",
            "cf_predict.resources",
            "cf_predict.test",
            "cf_predict.test.conftest",
            "cf_predict.test.test_cf_predict",
            "cf_predict.wsgi",
            "site",
            "tests",
            "tests.conftest",
            "tests.test_all"
        ],
        "version": "0.1.2"
    },
    "cf-pretty-form-errors": {
        "cmdline": [],
        "modules": [
            "cf_pretty_form_errors",
            "cf_pretty_form_errors.apps",
            "cf_pretty_form_errors.form_mixins"
        ],
        "version": "1.0.4"
    },
    "cf-python": {
        "cmdline": [
            "cfa",
            "cfdump"
        ],
        "modules": [
            "cf",
            "cf.aggregate",
            "cf.cellmeasure",
            "cf.cellmethods",
            "cf.cfdatetime",
            "cf.constants",
            "cf.coordinate",
            "cf.coordinatebounds",
            "cf.coordinatereference",
            "cf.data",
            "cf.data.array",
            "cf.data.collapse_functions",
            "cf.data.data",
            "cf.data.filearray",
            "cf.data.partition",
            "cf.data.partitionmatrix",
            "cf.domain",
            "cf.field",
            "cf.flags",
            "cf.functions",
            "cf.netcdf",
            "cf.netcdf.filearray",
            "cf.netcdf.functions",
            "cf.netcdf.read",
            "cf.netcdf.write",
            "cf.query",
            "cf.read",
            "cf.regrid",
            "cf.timeduration",
            "cf.um",
            "cf.um.filearray",
            "cf.um.functions",
            "cf.um.read",
            "cf.um.umread",
            "cf.um.umread.cInterface",
            "cf.um.umread.extraData",
            "cf.um.umread.umfile",
            "cf.units",
            "cf.utils",
            "cf.variable",
            "cf.write"
        ],
        "version": "1.5.3.post1"
    },
    "cf-recommender": {
        "cmdline": [],
        "modules": [
            "cf_recommender",
            "cf_recommender.default_settings",
            "cf_recommender.mutex",
            "cf_recommender.recommender",
            "cf_recommender.repository",
            "cf_recommender.timeit"
        ],
        "version": "1.0.1"
    },
    "cf-s3field": {
        "cmdline": [],
        "modules": [
            "cf_s3field",
            "cf_s3field.fields",
            "cf_s3field.files"
        ],
        "version": "0.0.4"
    },
    "cf-slumber": {
        "cmdline": [],
        "modules": [
            "cf_slumber"
        ],
        "version": "0.3"
    },
    "cf-units": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cf-view": {
        "cmdline": [
            "cfview"
        ],
        "modules": [],
        "version": "1.0.4"
    },
    "cf2-python": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cfa-hermes": {
        "cmdline": [
            "hcmd.py",
            "hermesd.py"
        ],
        "modules": [
            "hermes",
            "hermes._version",
            "hermes.connection",
            "hermes.exception",
            "hermes.ftp",
            "hermes.sftp",
            "hermes.thread"
        ],
        "version": "2.5.2b1"
    },
    "cfa-zeus": {
        "cmdline": [
            "zcrypt.py",
            "zkey.py"
        ],
        "modules": [
            "zeus",
            "zeus._version",
            "zeus.crypto",
            "zeus.date",
            "zeus.exception",
            "zeus.file",
            "zeus.log",
            "zeus.parser"
        ],
        "version": "3.3.0b1"
    },
    "cfanalyze": {
        "cmdline": [],
        "modules": [
            "cfanalyze",
            "cfanalyze.analyze",
            "cfanalyze.fetch"
        ],
        "version": "0.0.1"
    },
    "cfat": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cfautodoc": {
        "cmdline": [],
        "modules": [
            "cfautodoc",
            "cfautodoc.autodoc"
        ],
        "version": "0.1.4"
    },
    "cfb": {
        "cmdline": [],
        "modules": [
            "cfb",
            "cfb.constants",
            "cfb.directory",
            "cfb.directory.entry",
            "cfb.exceptions",
            "cfb.header",
            "cfb.helpers",
            "tests",
            "tests.test_directory",
            "tests.test_entry",
            "tests.test_exceptions",
            "tests.test_header",
            "tests.test_helpers"
        ],
        "version": "0.8.3"
    },
    "cfblog": {
        "cmdline": [],
        "modules": [
            "cfblog",
            "cfblog.admin",
            "cfblog.conf",
            "cfblog.conf.global_settings",
            "cfblog.managers",
            "cfblog.middleware",
            "cfblog.migrations",
            "cfblog.migrations.0001_initial",
            "cfblog.migrations.0002_create_static_page_category",
            "cfblog.migrations.0003_auto_20151126_1212",
            "cfblog.migrations.0004_auto_20160406_1820",
            "cfblog.migrations.0005_auto_20160406_1825",
            "cfblog.migrations.0006_category_is_static",
            "cfblog.models",
            "cfblog.response",
            "cfblog.signals",
            "cfblog.tests",
            "cfblog.urls",
            "cfblog.utils",
            "cfblog.validators",
            "cfblog.views"
        ],
        "version": "0.2.13"
    },
    "cfc-barpy": {
        "cmdline": [],
        "modules": [
            "barpy",
            "barpy.barcode",
            "barpy.barcode.base",
            "barpy.barcode.code_128",
            "barpy.barcode.ean_13",
            "barpy.barcode.gs1_128",
            "barpy.barcode.qr_code",
            "barpy.outputter",
            "barpy.outputter.ascii_outputter",
            "barpy.outputter.base",
            "barpy.outputter.html_outputter",
            "barpy.outputter.png_outputter"
        ],
        "version": "0.1.3"
    },
    "cfchecker": {
        "cmdline": [],
        "modules": [
            "cfchecker",
            "cfchecker.cfchecks"
        ],
        "version": "3.0.4"
    },
    "cfclient": {
        "cmdline": [],
        "modules": [
            "cfclient",
            "cfclient.gui",
            "cfclient.headless",
            "cfclient.ui",
            "cfclient.ui.dialogs",
            "cfclient.ui.dialogs.about",
            "cfclient.ui.dialogs.bootloader",
            "cfclient.ui.dialogs.cf1config",
            "cfclient.ui.dialogs.cf2config",
            "cfclient.ui.dialogs.inputconfigdialogue",
            "cfclient.ui.dialogs.logconfigdialogue",
            "cfclient.ui.main",
            "cfclient.ui.pluginhelper",
            "cfclient.ui.tab",
            "cfclient.ui.tabs",
            "cfclient.ui.tabs.ConsoleTab",
            "cfclient.ui.tabs.ExampleTab",
            "cfclient.ui.tabs.FlightTab",
            "cfclient.ui.tabs.GpsTab",
            "cfclient.ui.tabs.LEDTab",
            "cfclient.ui.tabs.LogBlockDebugTab",
            "cfclient.ui.tabs.LogBlockTab",
            "cfclient.ui.tabs.LogTab",
            "cfclient.ui.tabs.ParamTab",
            "cfclient.ui.tabs.PlotTab",
            "cfclient.ui.tabs.locopositioning_tab",
            "cfclient.ui.toolboxes",
            "cfclient.ui.toolboxes.ConsoleToolbox",
            "cfclient.ui.toolboxes.CrtpSharkToolbox",
            "cfclient.ui.toolboxes.DebugDriverToolbox",
            "cfclient.ui.widgets",
            "cfclient.ui.widgets.ai",
            "cfclient.ui.widgets.hexspinbox",
            "cfclient.ui.widgets.plotwidget",
            "cfclient.utils",
            "cfclient.utils.config",
            "cfclient.utils.config_manager",
            "cfclient.utils.input",
            "cfclient.utils.input.inputinterfaces",
            "cfclient.utils.input.inputinterfaces.leapmotion",
            "cfclient.utils.input.inputinterfaces.wiimote",
            "cfclient.utils.input.inputinterfaces.zmqpull",
            "cfclient.utils.input.inputreaderinterface",
            "cfclient.utils.input.inputreaders",
            "cfclient.utils.input.inputreaders.linuxjsdev",
            "cfclient.utils.input.inputreaders.pysdl2",
            "cfclient.utils.input.mux",
            "cfclient.utils.input.mux.nomux",
            "cfclient.utils.input.mux.takeovermux",
            "cfclient.utils.input.mux.takeoverselectivemux",
            "cfclient.utils.logconfigreader",
            "cfclient.utils.logdatawriter",
            "cfclient.utils.periodictimer",
            "cfclient.utils.singleton",
            "cfclient.utils.zmq_led_driver",
            "cfclient.utils.zmq_param",
            "cfclient.version",
            "cfloader",
            "cfzmq"
        ],
        "version": "2017.4"
    },
    "cfconfigurator": {
        "cmdline": [],
        "modules": [
            "cfconfigurator",
            "cfconfigurator.cf",
            "cfconfigurator.exceptions",
            "cfconfigurator.uaa"
        ],
        "version": "0.2.4"
    },
    "cfdi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cfdilib": {
        "cmdline": [],
        "modules": [
            "cfdilib",
            "cfdilib.cfdicli",
            "cfdilib.cfdilib",
            "cfdilib.cfdv32",
            "cfdilib.cfdv33",
            "cfdilib.signatory",
            "cfdilib.tools"
        ],
        "version": "0.5.1"
    },
    "cfdns": {
        "cmdline": [],
        "modules": [
            "cfdns"
        ],
        "version": "0.1.1"
    },
    "cfeatures": {
        "cmdline": [],
        "modules": [
            "cfeatures",
            "cfeatures.groups",
            "cfeatures.version"
        ],
        "version": "1.0.0"
    },
    "cfedemands": {
        "cmdline": [],
        "modules": [
            "cfe",
            "cfe.df_utils",
            "cfe.estimation"
        ],
        "version": "0.1.3.1dev"
    },
    "cfenv": {
        "cmdline": [],
        "modules": [
            "cfenv"
        ],
        "version": "0.5.2"
    },
    "cfeprintlist": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "cff-utily": {
        "cmdline": [],
        "modules": [
            "cff_utily"
        ],
        "version": "1.1.0"
    },
    "cffi": {
        "cmdline": [],
        "modules": [
            "cffi",
            "cffi.api",
            "cffi.backend_ctypes",
            "cffi.cffi_opcode",
            "cffi.commontypes",
            "cffi.cparser",
            "cffi.error",
            "cffi.ffiplatform",
            "cffi.lock",
            "cffi.model",
            "cffi.recompiler",
            "cffi.setuptools_ext",
            "cffi.vengine_cpy",
            "cffi.vengine_gen",
            "cffi.verifier",
            "snip_basic_verify1",
            "snip_basic_verify2",
            "snip_infrastructure",
            "snip_setuptools_verify1",
            "snip_setuptools_verify2",
            "testing",
            "testing.cffi0",
            "testing.cffi0.backend_tests",
            "testing.cffi0.callback_in_thread",
            "testing.cffi0.test_cdata",
            "testing.cffi0.test_ctypes",
            "testing.cffi0.test_ffi_backend",
            "testing.cffi0.test_function",
            "testing.cffi0.test_model",
            "testing.cffi0.test_ownlib",
            "testing.cffi0.test_parsing",
            "testing.cffi0.test_platform",
            "testing.cffi0.test_unicode_literals",
            "testing.cffi0.test_verify",
            "testing.cffi0.test_verify2",
            "testing.cffi0.test_version",
            "testing.cffi0.test_vgen",
            "testing.cffi0.test_vgen2",
            "testing.cffi0.test_zdistutils",
            "testing.cffi0.test_zintegration",
            "testing.cffi1",
            "testing.cffi1.test_cffi_binary",
            "testing.cffi1.test_commontypes",
            "testing.cffi1.test_dlopen",
            "testing.cffi1.test_dlopen_unicode_literals",
            "testing.cffi1.test_ffi_obj",
            "testing.cffi1.test_new_ffi_1",
            "testing.cffi1.test_parse_c_type",
            "testing.cffi1.test_re_python",
            "testing.cffi1.test_realize_c_type",
            "testing.cffi1.test_recompiler",
            "testing.cffi1.test_unicode_literals",
            "testing.cffi1.test_verify1",
            "testing.cffi1.test_zdist",
            "testing.embedding",
            "testing.embedding.add1",
            "testing.embedding.add2",
            "testing.embedding.add3",
            "testing.embedding.add_recursive",
            "testing.embedding.empty",
            "testing.embedding.perf",
            "testing.embedding.test_basic",
            "testing.embedding.test_performance",
            "testing.embedding.test_recursive",
            "testing.embedding.test_thread",
            "testing.embedding.test_tlocal",
            "testing.embedding.tlocal",
            "testing.support",
            "testing.udir"
        ],
        "version": "1.10.0"
    },
    "cffi-glpk": {
        "cmdline": [],
        "modules": [
            "cffi_glpk",
            "cffi_glpk.cffi_glpk_build"
        ],
        "version": "0.2"
    },
    "cffi-magic": {
        "cmdline": [],
        "modules": [
            "cffi_magic"
        ],
        "version": "0.0.5"
    },
    "cffi-re2": {
        "cmdline": [],
        "modules": [
            "cffi_re2"
        ],
        "version": "0.2.1"
    },
    "cffi-utils": {
        "cmdline": [],
        "modules": [
            "api",
            "api.errors",
            "api.merge",
            "api.pypi",
            "api.stats",
            "api.stdlib",
            "core",
            "core.logger",
            "core.patches",
            "core.utils"
        ],
        "version": "0.79"
    },
    "cfficloak": {
        "cmdline": [],
        "modules": [],
        "version": "1.5"
    },
    "cffipp": {
        "cmdline": [],
        "modules": [
            "cffipp",
            "cffipp.cffipp",
            "cffipp.cwrapper",
            "cffipp.python_classer"
        ],
        "version": "0.1.0.dev2"
    },
    "cfflib": {
        "cmdline": [],
        "modules": [
            "cfflib",
            "cfflib.cff",
            "cfflib.cfflib",
            "cfflib.cfflib2",
            "cfflib.info",
            "cfflib.loadsave",
            "cfflib.tests",
            "cfflib.tests.test_cfflib",
            "cfflib.util"
        ],
        "version": "2.0.5"
    },
    "cfg": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cfgen": {
        "cmdline": [
            "cfgen"
        ],
        "modules": [
            "cfgen",
            "cfgen.cfgen"
        ],
        "version": "0.2.5"
    },
    "cfgov-setup": {
        "cmdline": [],
        "modules": [
            "cfgov_setup"
        ],
        "version": "1.2"
    },
    "cfgovbuild": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cfgparse": {
        "cmdline": [],
        "modules": [
            "cfgparse"
        ],
        "version": "1.3"
    },
    "cfgparse.py": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cfgtodict": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "cfgtool": {
        "cmdline": [],
        "modules": [
            "cfgtool",
            "cfgtool._version",
            "cfgtool.cmd_belief",
            "cfgtool.cmd_check",
            "cfgtool.cmd_clean",
            "cfgtool.cmd_process",
            "cfgtool.cmd_pyinstall",
            "cfgtool.cmd_sample",
            "cfgtool.cmd_status",
            "cfgtool.cmd_write",
            "cfgtool.cmdbase",
            "cfgtool.cmdio",
            "cfgtool.cmds",
            "cfgtool.main"
        ],
        "version": "0.3.post6"
    },
    "cfio": {
        "cmdline": [],
        "modules": [
            "cfio",
            "cfio.cfio"
        ],
        "version": "0.2.3"
    },
    "cfirst": {
        "cmdline": [],
        "modules": [
            "cfirst",
            "cfirst.cfirst"
        ],
        "version": "0.1.0"
    },
    "cflib": {
        "cmdline": [],
        "modules": [
            "cflib",
            "cflib.bootloader",
            "cflib.bootloader.boottypes",
            "cflib.bootloader.cloader",
            "cflib.crazyflie",
            "cflib.crazyflie.commander",
            "cflib.crazyflie.console",
            "cflib.crazyflie.extpos",
            "cflib.crazyflie.localization",
            "cflib.crazyflie.log",
            "cflib.crazyflie.mem",
            "cflib.crazyflie.param",
            "cflib.crazyflie.platformservice",
            "cflib.crazyflie.swarm",
            "cflib.crazyflie.syncCrazyflie",
            "cflib.crazyflie.syncLogger",
            "cflib.crazyflie.toc",
            "cflib.crazyflie.toccache",
            "cflib.crtp",
            "cflib.crtp.crtpdriver",
            "cflib.crtp.crtpstack",
            "cflib.crtp.debugdriver",
            "cflib.crtp.exceptions",
            "cflib.crtp.radiodriver",
            "cflib.crtp.serialdriver",
            "cflib.crtp.udpdriver",
            "cflib.crtp.usbdriver",
            "cflib.drivers",
            "cflib.drivers.cfusb",
            "cflib.drivers.crazyradio",
            "cflib.utils",
            "cflib.utils.callbacks",
            "lpslib",
            "lpslib.lopoanchor",
            "test",
            "test.crazyflie",
            "test.crazyflie.test_swarm",
            "test.crazyflie.test_syncCrazyflie",
            "test.crazyflie.test_syncLogger",
            "test.crtp",
            "test.crtp.test_crtpstack",
            "test.support",
            "test.support.asyncCallbackCaller",
            "test.utils",
            "test.utils.test_callbacks"
        ],
        "version": "0.1.2"
    },
    "cfm": {
        "cmdline": [],
        "modules": [],
        "version": "0.3"
    },
    "cfmeta": {
        "cmdline": [],
        "modules": [
            "cfmeta",
            "cfmeta.cmip3file",
            "cfmeta.cmip5file",
            "cfmeta.cmipfile",
            "cfmeta.exceptions",
            "cfmeta.path"
        ],
        "version": "0.2.1"
    },
    "cfn": {
        "cmdline": [],
        "modules": [
            "cfn"
        ],
        "version": "0.0.11"
    },
    "cfn-flip": {
        "cmdline": [],
        "modules": [
            "cfn_flip",
            "cfn_flip.clean",
            "cfn_flip.custom_json",
            "cfn_flip.custom_yaml",
            "cfn_flip.main"
        ],
        "version": "0.2.1"
    },
    "cfn-get-export-value": {
        "cmdline": [],
        "modules": [
            "cfn_get_export_value",
            "cfn_get_export_value.cfn_get_export_value"
        ],
        "version": "0.0.3"
    },
    "cfn-lambda-handler": {
        "cmdline": [],
        "modules": [
            "cfn_lambda_handler",
            "cfn_lambda_handler.cfn_lambda_handler"
        ],
        "version": "1.0.4"
    },
    "cfn-pyplates": {
        "cmdline": [],
        "modules": [],
        "version": "0.6.0"
    },
    "cfn-resource": {
        "cmdline": [],
        "modules": [
            "cfn_resource"
        ],
        "version": "0.2.2"
    },
    "cfn-resource-timeout": {
        "cmdline": [],
        "modules": [
            "cfn_resource"
        ],
        "version": "1.2.0"
    },
    "cfn-response": {
        "cmdline": [],
        "modules": [
            "cfnresponse"
        ],
        "version": "0.0.4"
    },
    "cfn-sphere": {
        "cmdline": [
            "cf"
        ],
        "modules": [
            "cfn_sphere",
            "cfn_sphere.aws",
            "cfn_sphere.aws.cfn",
            "cfn_sphere.aws.ec2",
            "cfn_sphere.aws.kms",
            "cfn_sphere.aws.s3",
            "cfn_sphere.cli",
            "cfn_sphere.exceptions",
            "cfn_sphere.file_loader",
            "cfn_sphere.stack_configuration",
            "cfn_sphere.stack_configuration.dependency_resolver",
            "cfn_sphere.stack_configuration.parameter_resolver",
            "cfn_sphere.template",
            "cfn_sphere.template.template_handler",
            "cfn_sphere.template.transformer",
            "cfn_sphere.util"
        ],
        "version": "0.1.38"
    },
    "cfn-tools": {
        "cmdline": [],
        "modules": [
            "cfntools",
            "cfntools.cli",
            "cfntools.diff",
            "cfntools.ls",
            "cfntools.validate"
        ],
        "version": "0.1.2"
    },
    "cfnbot": {
        "cmdline": [],
        "modules": [
            "cfnbot",
            "cfnbot.cfnbot",
            "cfnbot.cli"
        ],
        "version": "1.0.0"
    },
    "cfncluster": {
        "cmdline": [],
        "modules": [
            "cfncluster",
            "cfncluster.cfncluster",
            "cfncluster.cfnconfig",
            "cfncluster.cli",
            "cfncluster.config_sanity",
            "cfncluster.easyconfig"
        ],
        "version": "1.3.1"
    },
    "cfncluster-node": {
        "cmdline": [],
        "modules": [
            "nodewatcher",
            "nodewatcher.nodewatcher",
            "nodewatcher.plugins",
            "nodewatcher.plugins.openlava",
            "nodewatcher.plugins.sge",
            "nodewatcher.plugins.slurm",
            "nodewatcher.plugins.test",
            "nodewatcher.plugins.torque",
            "sqswatcher",
            "sqswatcher.plugins",
            "sqswatcher.plugins.openlava",
            "sqswatcher.plugins.sge",
            "sqswatcher.plugins.slurm",
            "sqswatcher.plugins.test",
            "sqswatcher.plugins.torque",
            "sqswatcher.sqswatcher"
        ],
        "version": "1.3.3"
    },
    "cfncluster-node-fork-hcluster": {
        "cmdline": [],
        "modules": [
            "nodewatcher",
            "nodewatcher.nodewatcher",
            "nodewatcher.plugins",
            "nodewatcher.plugins.openlava",
            "nodewatcher.plugins.sge",
            "nodewatcher.plugins.slurm",
            "nodewatcher.plugins.test",
            "nodewatcher.plugins.torque",
            "sqswatcher",
            "sqswatcher.plugins",
            "sqswatcher.plugins.openlava",
            "sqswatcher.plugins.sge",
            "sqswatcher.plugins.slurm",
            "sqswatcher.plugins.test",
            "sqswatcher.plugins.torque",
            "sqswatcher.sqswatcher"
        ],
        "version": "1.3.5.1"
    },
    "cfnjsontoyaml": {
        "cmdline": [],
        "modules": [
            "cfnjsontoyaml",
            "cfnjsontoyaml.convertor",
            "cfnjsontoyaml.functionparser",
            "cfnjsontoyaml.mixins",
            "cfnjsontoyaml.mixins.type_checker",
            "cfnjsontoyaml.nodeparser",
            "cfnjsontoyaml.parser",
            "cfnjsontoyaml.parser.subbuilder",
            "cfnjsontoyaml.yamlobject",
            "cfnjsontoyaml.yamlobject.base64",
            "cfnjsontoyaml.yamlobject.cfnfunction",
            "cfnjsontoyaml.yamlobject.equals",
            "cfnjsontoyaml.yamlobject.findinmap",
            "cfnjsontoyaml.yamlobject.fnand",
            "cfnjsontoyaml.yamlobject.fnif",
            "cfnjsontoyaml.yamlobject.fnnot",
            "cfnjsontoyaml.yamlobject.fnor",
            "cfnjsontoyaml.yamlobject.getatt",
            "cfnjsontoyaml.yamlobject.getazs",
            "cfnjsontoyaml.yamlobject.importvalue",
            "cfnjsontoyaml.yamlobject.join",
            "cfnjsontoyaml.yamlobject.ordereddict",
            "cfnjsontoyaml.yamlobject.ref",
            "cfnjsontoyaml.yamlobject.select",
            "cfnjsontoyaml.yamlobject.sub",
            "cfnjsontoyaml.yamlobject.unicode"
        ],
        "version": "1.0.5"
    },
    "cfnlambda": {
        "cmdline": [],
        "modules": [
            "cfnlambda"
        ],
        "version": "1.0.2"
    },
    "cfnparams": {
        "cmdline": [],
        "modules": [
            "cfnparams",
            "cfnparams.arguments",
            "cfnparams.exceptions",
            "cfnparams.main",
            "cfnparams.params",
            "cfnparams.resolution",
            "cfnparams.template"
        ],
        "version": "0.12"
    },
    "cfnplan": {
        "cmdline": [
            "cfnplan"
        ],
        "modules": [
            "cfnplan",
            "cfnplan.template"
        ],
        "version": "1.0.1"
    },
    "cfnupdateservice": {
        "cmdline": [],
        "modules": [
            "cfnupdateservice",
            "cfnupdateservice.logging",
            "cfnupdateservice.tests"
        ],
        "version": "1.0.1"
    },
    "cfpa": {
        "cmdline": [],
        "modules": [
            "cfpa"
        ],
        "version": "1.0.0"
    },
    "cfping": {
        "cmdline": [
            "cfping"
        ],
        "modules": [],
        "version": "0.2.0"
    },
    "cfpp": {
        "cmdline": [],
        "modules": [
            "cfpp",
            "cfpp._version",
            "cfpp.extrinsics"
        ],
        "version": "0.1.6"
    },
    "cfpropertylist": {
        "cmdline": [],
        "modules": [
            "CFPropertyList",
            "CFPropertyList.CFPListErrors",
            "CFPropertyList.CFPropertyList",
            "CFPropertyList.CFTypes"
        ],
        "version": "0.0.1"
    },
    "cfpy": {
        "cmdline": [],
        "modules": [
            "cfpy"
        ],
        "version": "0.3"
    },
    "cfscrape": {
        "cmdline": [],
        "modules": [
            "cfscrape"
        ],
        "version": "1.8.0"
    },
    "cfscrapefork": {
        "cmdline": [],
        "modules": [
            "cfscrape",
            "cfscrape.cfscrape"
        ],
        "version": "1.0.4"
    },
    "cfssl": {
        "cmdline": [],
        "modules": [
            "cfssl",
            "cfssl.cfssl",
            "cfssl.defaults",
            "cfssl.exceptions",
            "cfssl.models",
            "cfssl.models.certificate_request",
            "cfssl.models.config_client",
            "cfssl.models.config_key",
            "cfssl.models.config_mixer",
            "cfssl.models.config_server",
            "cfssl.models.host",
            "cfssl.models.policy_auth",
            "cfssl.models.policy_sign",
            "cfssl.models.policy_use",
            "cfssl.models.subject_info",
            "cfssl.tests",
            "cfssl.tests.test_certificate_request",
            "cfssl.tests.test_cfssl",
            "cfssl.tests.test_config_client",
            "cfssl.tests.test_config_key",
            "cfssl.tests.test_config_mixer",
            "cfssl.tests.test_host",
            "cfssl.tests.test_policy_auth",
            "cfssl.tests.test_policy_sign",
            "cfssl.tests.test_policy_use",
            "cfssl.tests.test_subject_info"
        ],
        "version": "0.0.2b215"
    },
    "cftool": {
        "cmdline": [],
        "modules": [
            "cf",
            "cf.cf",
            "cf.compile",
            "cf.html",
            "cf.run",
            "cf.save"
        ],
        "version": "1.0.2"
    },
    "cftools": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cftp": {
        "cmdline": [],
        "modules": [
            "cftp",
            "cftp.base",
            "cftp.base_exceptions",
            "cftp.s3",
            "cftp.s3_exceptions"
        ],
        "version": "0.4.1a0"
    },
    "cftpl": {
        "cmdline": [],
        "modules": [
            "cftpl",
            "cftpl.config",
            "cftpl.run",
            "cftpl.stack",
            "cftpl.template",
            "cftpl.tests",
            "cftpl.tests.test_config",
            "cftpl.tests.test_run",
            "cftpl.tests.test_stack",
            "cftpl.tests.test_template",
            "cftpl.uploader"
        ],
        "version": "1.0"
    },
    "cfunits": {
        "cmdline": [],
        "modules": [
            "cfunits",
            "cfunits.units"
        ],
        "version": "1.5.1"
    },
    "cfupload": {
        "cmdline": [
            "cfupload"
        ],
        "modules": [],
        "version": "0.5.1"
    },
    "cg": {
        "cmdline": [],
        "modules": [
            "cg",
            "cg.apps",
            "cg.apps.admin",
            "cg.apps.coverage",
            "cg.apps.email",
            "cg.apps.gt",
            "cg.apps.hk",
            "cg.apps.lims",
            "cg.apps.loqus",
            "cg.apps.omim",
            "cg.apps.qc",
            "cg.apps.scoutold",
            "cg.apps.scoutprod",
            "cg.apps.tb",
            "cg.cli",
            "cg.commands",
            "cg.exc",
            "cg.invoice",
            "cg.queue",
            "cg.queue.api",
            "cg.queue.cli",
            "cg.queue.models",
            "cg.utils",
            "cg.version"
        ],
        "version": "0.9.1"
    },
    "cg-acc": {
        "cmdline": [],
        "modules": [
            "CG-Acc"
        ],
        "version": "1.2.2"
    },
    "cg-awesome-helloworld-script": {
        "cmdline": [
            "helloworld.py"
        ],
        "modules": [],
        "version": "1.2"
    },
    "cg-django-uaa": {
        "cmdline": [],
        "modules": [
            "uaa_client",
            "uaa_client.authentication",
            "uaa_client.configuration",
            "uaa_client.fake_uaa_provider",
            "uaa_client.middleware",
            "uaa_client.runtests",
            "uaa_client.tests",
            "uaa_client.tests.test_authentication",
            "uaa_client.tests.test_configuration",
            "uaa_client.tests.test_middleware",
            "uaa_client.tests.test_views",
            "uaa_client.tests.urls",
            "uaa_client.urls",
            "uaa_client.views"
        ],
        "version": "1.0.1"
    },
    "cg-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "cgadmin": {
        "cmdline": [],
        "modules": [
            "cgadmin",
            "cgadmin.cli",
            "cgadmin.constants",
            "cgadmin.invoice",
            "cgadmin.invoice.cli",
            "cgadmin.invoice.render",
            "cgadmin.lims",
            "cgadmin.log",
            "cgadmin.orderform",
            "cgadmin.report",
            "cgadmin.report.core",
            "cgadmin.schema",
            "cgadmin.server",
            "cgadmin.server.admin",
            "cgadmin.server.app",
            "cgadmin.server.flask_sqlservice",
            "cgadmin.server.mailgun",
            "cgadmin.server.publicbp",
            "cgadmin.server.publicbp.views",
            "cgadmin.store",
            "cgadmin.store.api",
            "cgadmin.store.models",
            "cgadmin.store.parse"
        ],
        "version": "1.0.2"
    },
    "cgal-bindings": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.9"
    },
    "cgal4py": {
        "cmdline": [],
        "modules": [
            "cgal4py",
            "cgal4py.delaunay",
            "cgal4py.domain_decomp",
            "cgal4py.parallel",
            "cgal4py.plot",
            "cgal4py.run_parallel_delaunay",
            "cgal4py.tests",
            "cgal4py.tests.scaling",
            "cgal4py.tests.test_cgal4py",
            "cgal4py.tests.test_delaunay",
            "cgal4py.tests.test_delaunay2",
            "cgal4py.tests.test_delaunay3",
            "cgal4py.tests.test_delaunayD",
            "cgal4py.tests.test_domain_decomp",
            "cgal4py.tests.test_parallel",
            "cgal4py.tests.test_periodic_delaunay2",
            "cgal4py.tests.test_periodic_delaunay3",
            "cgal4py.tests.test_plot"
        ],
        "version": "0.2.1"
    },
    "cgat": {
        "cmdline": [],
        "modules": [
            "CGAT",
            "CGAT.AGP",
            "CGAT.AString",
            "CGAT.BamTools",
            "CGAT.Bed",
            "CGAT.Biomart",
            "CGAT.Bioprospector",
            "CGAT.Blat",
            "CGAT.CBioPortal",
            "CGAT.CSV",
            "CGAT.CSV2DB",
            "CGAT.CorrespondenceAnalysis",
            "CGAT.Counts",
            "CGAT.Database",
            "CGAT.Diamond",
            "CGAT.Experiment",
            "CGAT.Expression",
            "CGAT.FastaIterator",
            "CGAT.Fastq",
            "CGAT.GFF3",
            "CGAT.GO",
            "CGAT.GTF",
            "CGAT.Genomics",
            "CGAT.Glam2",
            "CGAT.Glam2Scan",
            "CGAT.Histogram",
            "CGAT.Histogram2D",
            "CGAT.IGV",
            "CGAT.IOTools",
            "CGAT.IndexedFasta",
            "CGAT.IndexedGenome",
            "CGAT.Intervals",
            "CGAT.Iterators",
            "CGAT.LCA",
            "CGAT.Logfile",
            "CGAT.MAST",
            "CGAT.MEME",
            "CGAT.Mali",
            "CGAT.Maq",
            "CGAT.Masker",
            "CGAT.MatlabTools",
            "CGAT.MatrixTools",
            "CGAT.Metaphlan",
            "CGAT.Motifs",
            "CGAT.NCL",
            "CGAT.PipelineGWAS",
            "CGAT.R",
            "CGAT.RLE",
            "CGAT.RateEstimation",
            "CGAT.Requirements",
            "CGAT.SVGdraw",
            "CGAT.SequencePairProperties",
            "CGAT.SequenceProperties",
            "CGAT.SetTools",
            "CGAT.Sra",
            "CGAT.Stats",
            "CGAT.Style",
            "CGAT.Timeseries",
            "CGAT.Tophat",
            "CGAT.Tree",
            "CGAT.TreeTools",
            "CGAT.VCF",
            "CGAT.Variants",
            "CGAT.WrapperCodeML",
            "CGAT.WrapperIDR",
            "CGAT.WrapperMACS",
            "CGAT.WrapperMuscle",
            "CGAT.WrapperZinba",
            "CGAT.cgat",
            "CGAT.dictzip",
            "CGAT.makeGeneset",
            "CGAT.scripts",
            "CGAT.scripts.bam2bam",
            "CGAT.scripts.bam2bed",
            "CGAT.scripts.bam2fastq",
            "CGAT.scripts.bam2geneprofile",
            "CGAT.scripts.bam2peakshape",
            "CGAT.scripts.bam2stats",
            "CGAT.scripts.bam2wiggle",
            "CGAT.scripts.bam_vs_bam",
            "CGAT.scripts.bam_vs_bed",
            "CGAT.scripts.bam_vs_gtf",
            "CGAT.scripts.bed2bed",
            "CGAT.scripts.bed2fasta",
            "CGAT.scripts.bed2gff",
            "CGAT.scripts.bed2stats",
            "CGAT.scripts.bed2table",
            "CGAT.scripts.beds2beds",
            "CGAT.scripts.beds2counts",
            "CGAT.scripts.chain2psl",
            "CGAT.scripts.chain2stats",
            "CGAT.scripts.diff_bam",
            "CGAT.scripts.diff_bed",
            "CGAT.scripts.diff_chains",
            "CGAT.scripts.diff_fasta",
            "CGAT.scripts.diff_gtf",
            "CGAT.scripts.fasta2bed",
            "CGAT.scripts.fasta2fasta",
            "CGAT.scripts.fasta2kmercontent",
            "CGAT.scripts.fasta2table",
            "CGAT.scripts.fasta2variants",
            "CGAT.scripts.fastas2fasta",
            "CGAT.scripts.fastq2fastq",
            "CGAT.scripts.fastq2table",
            "CGAT.scripts.fastqs2fasta",
            "CGAT.scripts.fastqs2fastqs",
            "CGAT.scripts.gff2bed",
            "CGAT.scripts.gff2coverage",
            "CGAT.scripts.gff2fasta",
            "CGAT.scripts.gff2gff",
            "CGAT.scripts.gff2histogram",
            "CGAT.scripts.gff2psl",
            "CGAT.scripts.gff2stats",
            "CGAT.scripts.gtf2fasta",
            "CGAT.scripts.gtf2gff",
            "CGAT.scripts.gtf2gtf",
            "CGAT.scripts.gtf2table",
            "CGAT.scripts.gtf2tsv",
            "CGAT.scripts.gtfs2tsv",
            "CGAT.scripts.index_fasta",
            "CGAT.scripts.randomize_lines",
            "CGAT.scripts.split_gff",
            "CGAT.scripts.vcf2vcf",
            "CGAT.version",
            "scripts",
            "scripts.cgat_fasta2cDNA",
            "scripts.extract_stats",
            "scripts.fastq2tpm",
            "scripts.snp2eigen"
        ],
        "version": "0.2.6"
    },
    "cgatreport": {
        "cmdline": [],
        "modules": [
            "CGATReport",
            "CGATReport.Cache",
            "CGATReport.Capabilities",
            "CGATReport.Component",
            "CGATReport.Config",
            "CGATReport.CorrespondenceAnalysis",
            "CGATReport.DataTree",
            "CGATReport.DataTypes",
            "CGATReport.Dispatcher",
            "CGATReport.Histogram",
            "CGATReport.Logger",
            "CGATReport.Logger_test",
            "CGATReport.Options",
            "CGATReport.Plugins",
            "CGATReport.Plugins.BokehPlotter",
            "CGATReport.Plugins.BokehPlugin",
            "CGATReport.Plugins.Collector",
            "CGATReport.Plugins.GGPlotter",
            "CGATReport.Plugins.HTMLPlugin",
            "CGATReport.Plugins.MatplotlibPlugin",
            "CGATReport.Plugins.PandasPlotter",
            "CGATReport.Plugins.Plotter",
            "CGATReport.Plugins.RPlotPlugin",
            "CGATReport.Plugins.RPlotter",
            "CGATReport.Plugins.RSTPlugin",
            "CGATReport.Plugins.Renderer",
            "CGATReport.Plugins.Seaborn",
            "CGATReport.Plugins.SlideShow",
            "CGATReport.Plugins.Transformer",
            "CGATReport.Plugins.TransformersGeneLists",
            "CGATReport.Plugins.XLSPlugin",
            "CGATReport.ResultBlock",
            "CGATReport.SQLDatabase",
            "CGATReport.Stats",
            "CGATReport.Tracker",
            "CGATReport.Types",
            "CGATReport.Utils",
            "CGATReport.build",
            "CGATReport.clean",
            "CGATReport.errors_directive",
            "CGATReport.gallery",
            "CGATReport.get",
            "CGATReport.profile",
            "CGATReport.quickstart",
            "CGATReport.report_directive",
            "CGATReport.roles",
            "CGATReport.serve",
            "CGATReport.test",
            "CGATReport.version",
            "CGATReport.warnings_directive",
            "tests",
            "tests.SphinxReport_test",
            "tests.TestTrackers",
            "tests.test_cgatreport-test",
            "tests.test_conversion",
            "tests.test_pep8",
            "tests.test_report"
        ],
        "version": "0.7.6.1"
    },
    "cgc-cli": {
        "cmdline": [],
        "modules": [
            "sbg_cli",
            "sbg_cli.command",
            "sbg_cli.config",
            "sbg_cli.context",
            "sbg_cli.main",
            "sbg_cli.sbg_docker",
            "sbg_cli.sbg_docker.auth",
            "sbg_cli.sbg_docker.auth.error",
            "sbg_cli.sbg_docker.auth.sbg_auth",
            "sbg_cli.sbg_docker.commands",
            "sbg_cli.sbg_docker.commands.appget",
            "sbg_cli.sbg_docker.commands.images",
            "sbg_cli.sbg_docker.commands.login",
            "sbg_cli.sbg_docker.commands.push",
            "sbg_cli.sbg_docker.commands.remove",
            "sbg_cli.sbg_docker.commands.sh",
            "sbg_cli.sbg_docker.docker_client",
            "sbg_cli.sbg_docker.docker_client.client",
            "sbg_cli.sbg_docker.docker_client.error",
            "sbg_cli.sbg_docker.docker_client.shell",
            "sbg_cli.sbg_docker.docker_client.utils",
            "sbg_cli.sbg_docker.error",
            "sbg_cli.sbg_docker.main",
            "sbg_cli.sbg_docker.tests",
            "sbg_cli.sbg_docker.tests.tests_utils"
        ],
        "version": "0.1.5"
    },
    "cgc1": {
        "cmdline": [],
        "modules": [
            "cgc1",
            "cgc1.fsutil",
            "cgc1.log_call",
            "cgc1.lxcconfig",
            "cgc1.main",
            "cgc1.subid"
        ],
        "version": "0.0.1"
    },
    "cgcloud-agent": {
        "cmdline": [],
        "modules": [],
        "version": "1.6.0"
    },
    "cgcloud-core": {
        "cmdline": [],
        "modules": [],
        "version": "1.6.0"
    },
    "cgcloud-jenkins": {
        "cmdline": [],
        "modules": [],
        "version": "1.6.0"
    },
    "cgcloud-lib": {
        "cmdline": [],
        "modules": [
            "cgcloud",
            "cgcloud.lib",
            "cgcloud.lib.context",
            "cgcloud.lib.ec2",
            "cgcloud.lib.message",
            "cgcloud.lib.test",
            "cgcloud.lib.util",
            "cgcloud_Crypto",
            "cgcloud_Crypto.Hash",
            "cgcloud_Crypto.Hash.MD5",
            "cgcloud_Crypto.IO",
            "cgcloud_Crypto.IO.PEM",
            "cgcloud_Crypto.IO.PKCS8",
            "cgcloud_Crypto.PublicKey",
            "cgcloud_Crypto.PublicKey.RSA",
            "cgcloud_Crypto.PublicKey._slowmath",
            "cgcloud_Crypto.Util",
            "cgcloud_Crypto.Util.asn1",
            "cgcloud_Crypto.Util.number",
            "cgcloud_Crypto.Util.py3compat",
            "cgcloud_Crypto.pct_warnings"
        ],
        "version": "1.6.0"
    },
    "cgcloud-mesos": {
        "cmdline": [],
        "modules": [],
        "version": "1.6.0"
    },
    "cgcloud-mesos-tools": {
        "cmdline": [],
        "modules": [],
        "version": "1.6.0"
    },
    "cgcloud-spark": {
        "cmdline": [],
        "modules": [],
        "version": "1.6.0"
    },
    "cgcloud-spark-tools": {
        "cmdline": [],
        "modules": [],
        "version": "1.6.0"
    },
    "cgcloud-toil": {
        "cmdline": [],
        "modules": [],
        "version": "1.6.0"
    },
    "cgea": {
        "cmdline": [],
        "modules": [
            "CGEA",
            "CGEA.CGEA",
            "CGEA.test"
        ],
        "version": "0.919"
    },
    "cgen": {
        "cmdline": [],
        "modules": [
            "cgen",
            "cgen.cuda",
            "cgen.ispc",
            "cgen.mapper",
            "cgen.opencl"
        ],
        "version": "2016.2.3"
    },
    "cgenerator": {
        "cmdline": [],
        "modules": [
            "cgenerator",
            "cgenerator.cgenerator",
            "tests",
            "tests.test_main"
        ],
        "version": "0.1.4"
    },
    "cget": {
        "cmdline": [],
        "modules": [
            "cget",
            "cget.builder",
            "cget.cli",
            "cget.package",
            "cget.prefix",
            "cget.types",
            "cget.util"
        ],
        "version": "0.1.3"
    },
    "cgettext": {
        "cmdline": [],
        "modules": [
            "cgettext"
        ],
        "version": "0.1.post1"
    },
    "cghq-common": {
        "cmdline": [],
        "modules": [
            "cghq_common",
            "cghq_common.compat",
            "cghq_common.config",
            "cghq_common.constants",
            "cghq_common.utils"
        ],
        "version": "0.0.2"
    },
    "cgi-app": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cgi-tools": {
        "cmdline": [],
        "modules": [
            "cgi_tools",
            "cgi_tools.http_responses",
            "cgi_tools.params",
            "cgi_tools.system",
            "cgi_tools.types",
            "cgi_tools.validators",
            "cgi_tools.version"
        ],
        "version": "0.0.2"
    },
    "cgi-wsgi": {
        "cmdline": [],
        "modules": [
            "cgi_wsgi"
        ],
        "version": "0.1"
    },
    "cgi.unescape": {
        "cmdline": [],
        "modules": [
            "cgi"
        ],
        "version": "0.0.2"
    },
    "cgiauth": {
        "cmdline": [],
        "modules": [
            "cgiauth"
        ],
        "version": "0.9.1"
    },
    "cgifileupload": {
        "cmdline": [],
        "modules": [
            "cgifileupload",
            "cgifileupload.image_reduce",
            "cgifileupload.thumbnailer",
            "cgifileupload.upload"
        ],
        "version": "0.1.5dev"
    },
    "cgitestconvert": {
        "cmdline": [],
        "modules": [
            "CGITestConvert"
        ],
        "version": "0.1"
    },
    "cgivar2gvcf": {
        "cmdline": [],
        "modules": [
            "cgivar2gvcf"
        ],
        "version": "0.1.7"
    },
    "cgkit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cgkit1": {
        "cmdline": [],
        "modules": [
            "cgkitinfo",
            "pycgtypes",
            "pycgtypes.mat3",
            "pycgtypes.mat4",
            "pycgtypes.quat",
            "pycgtypes.vec3",
            "pycgtypes.vec4"
        ],
        "version": "1.2.2"
    },
    "cglims": {
        "cmdline": [],
        "modules": [
            "cglims",
            "cglims.api",
            "cglims.apptag",
            "cglims.check",
            "cglims.cli",
            "cglims.cli.base",
            "cglims.cli.commands",
            "cglims.cli.core",
            "cglims.cli.log",
            "cglims.cli.utils",
            "cglims.config",
            "cglims.constants",
            "cglims.exc",
            "cglims.export",
            "cglims.panels",
            "cglims.pedigree"
        ],
        "version": "1.2.0"
    },
    "cgns": {
        "cmdline": [],
        "modules": [
            "CGNS",
            "CGNS.CGNS"
        ],
        "version": "2009.10.30"
    },
    "cgnstk": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cgp-django-core": {
        "cmdline": [],
        "modules": [
            "base_account",
            "base_account.admin",
            "base_account.forms",
            "base_account.manager",
            "base_account.models",
            "base_account.search_indexes",
            "base_account.urls",
            "base_account.utils",
            "base_account.views",
            "base_media",
            "base_media.admin",
            "base_media.forms",
            "base_media.models",
            "base_media.urls",
            "base_media.utils",
            "base_media.views",
            "base_page",
            "base_page.admin",
            "base_page.decorators",
            "base_page.forms",
            "base_page.manager",
            "base_page.models",
            "base_page.search_indexes",
            "base_page.sitemap",
            "base_page.utils",
            "base_page.views",
            "form",
            "form.forms",
            "form.widgets",
            "monomail",
            "monomail.admin",
            "monomail.client",
            "monomail.forms",
            "monomail.models",
            "monomail.tasks",
            "monomail.tests",
            "monomail.urls",
            "monomail.utils",
            "monomail.views",
            "sharing",
            "sharing.admin",
            "sharing.forms",
            "sharing.models",
            "sharing.urls",
            "sharing.views",
            "site_admin",
            "site_admin.admin",
            "site_admin.context_processors",
            "site_admin.csv",
            "site_admin.dashboard",
            "site_admin.forms",
            "site_admin.manager",
            "site_admin.middleware",
            "site_admin.models",
            "site_admin.urls",
            "site_admin.views",
            "site_admin.views_admindocs",
            "tracking",
            "tracking.admin",
            "tracking.models",
            "tracking.urls",
            "tracking.views"
        ],
        "version": "0.20"
    },
    "cgpio": {
        "cmdline": [],
        "modules": [
            "cgpio",
            "cgpio.cgpio"
        ],
        "version": "0.7"
    },
    "cgpolyencode": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "cgptoolbox": {
        "cmdline": [],
        "modules": [
            "cgp",
            "cgp.cvodeint",
            "cgp.cvodeint.core",
            "cgp.cvodeint.example_ode",
            "cgp.cvodeint.namedcvodeint",
            "cgp.cvodeint.odeint",
            "cgp.examples",
            "cgp.examples.basic",
            "cgp.examples.hpc",
            "cgp.examples.noerror",
            "cgp.examples.sensitivity",
            "cgp.examples.sensitivity_beeler",
            "cgp.examples.sensitivity_service",
            "cgp.examples.sigmoid",
            "cgp.examples.simple",
            "cgp.examples.simple_hdfcache",
            "cgp.examples.simple_ipython_parallel",
            "cgp.examples.simple_joblib",
            "cgp.examples.test_nonexistent_folder_in_pythonpath",
            "cgp.gt",
            "cgp.gt.genotype",
            "cgp.gt.gt2par",
            "cgp.phenotyping",
            "cgp.phenotyping.attractor",
            "cgp.physmod",
            "cgp.physmod.cellmlmodel",
            "cgp.physmod.cythonize",
            "cgp.sigmoidmodels",
            "cgp.sigmoidmodels.doseresponse",
            "cgp.sigmoidmodels.sigmoid_cvode",
            "cgp.test",
            "cgp.test._test_clampable",
            "cgp.test.test_arrayjob",
            "cgp.test.test_attractor",
            "cgp.test.test_cellmlmodel",
            "cgp.test.test_clampable",
            "cgp.test.test_cvodeint_core",
            "cgp.test.test_elphys_analytic",
            "cgp.test.test_elphys_examples",
            "cgp.test.test_genotype",
            "cgp.test.test_hdfcache",
            "cgp.test.test_joblib",
            "cgp.test.test_namedcvodeint",
            "cgp.test.test_pickle",
            "cgp.test.test_placevalue",
            "cgp.test.test_poormanslock",
            "cgp.test.test_rec2dict",
            "cgp.test.test_recfun",
            "cgp.test.test_unstruct",
            "cgp.utils",
            "cgp.utils.argrec",
            "cgp.utils.arrayjob",
            "cgp.utils.codegen",
            "cgp.utils.commands",
            "cgp.utils.dotdict",
            "cgp.utils.extrema",
            "cgp.utils.failwith",
            "cgp.utils.flatten",
            "cgp.utils.hdfcache",
            "cgp.utils.load_memmap_offset",
            "cgp.utils.numpy_hdf",
            "cgp.utils.oat-ccd4f7c",
            "cgp.utils.oat.bak",
            "cgp.utils.ordereddict",
            "cgp.utils.placevalue",
            "cgp.utils.plot_directive_ggplot",
            "cgp.utils.poormanslock",
            "cgp.utils.qsubwrap",
            "cgp.utils.qsubwrapmpi",
            "cgp.utils.rec2dict",
            "cgp.utils.recfun",
            "cgp.utils.rnumpy",
            "cgp.utils.splom",
            "cgp.utils.thinrange",
            "cgp.utils.trim",
            "cgp.utils.unstruct",
            "cgp.utils.write_if_not_exists",
            "cgp.virtexp",
            "cgp.virtexp.elphys",
            "cgp.virtexp.elphys.ap_stats",
            "cgp.virtexp.elphys.clampable",
            "cgp.virtexp.elphys.examples",
            "cgp.virtexp.elphys.paceable"
        ],
        "version": "0.1.2"
    },
    "cgquery-xml-to-bamlibrary-capture-json": {
        "cmdline": [],
        "modules": [
            "cgquery_xml_to_bamlibrary_capture_json",
            "cgquery_xml_to_bamlibrary_capture_json.main"
        ],
        "version": "0.2"
    },
    "cgraph": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "cgrlib": {
        "cmdline": [],
        "modules": [
            "cgrlib",
            "cgrlib.test",
            "cgrlib.tools",
            "cgrlib.tools.cgr_cal",
            "cgrlib.tools.cgr_capture",
            "cgrlib.utils"
        ],
        "version": "0.1.2"
    },
    "cgroup-utils": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cgroups": {
        "cmdline": [],
        "modules": [
            "cgroups",
            "cgroups.cgroup",
            "cgroups.common",
            "cgroups.user",
            "cgroups.utils"
        ],
        "version": "0.1.0"
    },
    "cgroupspy": {
        "cmdline": [],
        "modules": [
            "cgroupspy",
            "cgroupspy.contenttypes",
            "cgroupspy.controllers",
            "cgroupspy.interfaces",
            "cgroupspy.nodes",
            "cgroupspy.trees",
            "cgroupspy.utils"
        ],
        "version": "0.1.5"
    },
    "cgrspy": {
        "cmdline": [],
        "modules": [
            "cgrspy",
            "cgrspy.tests",
            "cgrspy.tests.test_main"
        ],
        "version": "1.1.1rc1"
    },
    "cgrtools": {
        "cmdline": [],
        "modules": [
            "CGRtools",
            "CGRtools.CGRcore",
            "CGRtools.CGRpreparer",
            "CGRtools.CGRreactor",
            "CGRtools.CLI",
            "CGRtools.CLI.main_balanser",
            "CGRtools.CLI.main_condenser",
            "CGRtools.CLI.main_fear",
            "CGRtools.CLI.parser",
            "CGRtools.FEAR",
            "CGRtools.files",
            "CGRtools.files.CGRrw",
            "CGRtools.files.RDFrw",
            "CGRtools.files.SDFrw",
            "CGRtools.utils",
            "CGRtools.utils.cxcalc",
            "CGRtools.version"
        ],
        "version": "2.6.10"
    },
    "cgutils": {
        "cmdline": [],
        "modules": [
            "cgutils",
            "cgutils.commands",
            "cgutils.commands.search_replace",
            "cgutils.commands.sequences",
            "cgutils.packages",
            "cgutils.packages.click",
            "cgutils.packages.click._bashcomplete",
            "cgutils.packages.click._compat",
            "cgutils.packages.click._termui_impl",
            "cgutils.packages.click._textwrap",
            "cgutils.packages.click.core",
            "cgutils.packages.click.decorators",
            "cgutils.packages.click.exceptions",
            "cgutils.packages.click.formatting",
            "cgutils.packages.click.parser",
            "cgutils.packages.click.termui",
            "cgutils.packages.click.testing",
            "cgutils.packages.click.types",
            "cgutils.packages.click.utils",
            "tests"
        ],
        "version": "0.1.2"
    },
    "ch-data": {
        "cmdline": [],
        "modules": [],
        "version": "1.4.0"
    },
    "ch-demo": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "ch-frontend": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.24"
    },
    "ch-solutions": {
        "cmdline": [],
        "modules": [
            "ch_solutions",
            "ch_solutions.archive",
            "ch_solutions.archive.zip",
            "ch_solutions.database",
            "ch_solutions.database.mysql",
            "ch_solutions.email",
            "ch_solutions.email.mailgun",
            "ch_solutions.util",
            "ch_solutions.util.dir_tools",
            "ch_solutions.util.logger",
            "ch_solutions.util.scripts",
            "ch_solutions.util.timer",
            "ch_solutions.util.timestamp"
        ],
        "version": "0.2.2"
    },
    "ch-styles": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.4"
    },
    "ch03-sketch-volnet": {
        "cmdline": [],
        "modules": [
            "sketch"
        ],
        "version": "1.0.3"
    },
    "ch04-sketch-volnet": {
        "cmdline": [],
        "modules": [
            "sketch"
        ],
        "version": "1.0.0"
    },
    "ch05-dealinfo-volnet": {
        "cmdline": [],
        "modules": [
            "deal"
        ],
        "version": "1.0.0"
    },
    "ch2print": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "ch2tester": {
        "cmdline": [],
        "modules": [
            "ch2tester"
        ],
        "version": "1.5.0"
    },
    "ch5": {
        "cmdline": [],
        "modules": [
            "for_list_split",
            "readtxt",
            "time_split"
        ],
        "version": "1.1.1"
    },
    "cha": {
        "cmdline": [],
        "modules": [
            "cc",
            "cc.c",
            "cc.create_db"
        ],
        "version": "0.2"
    },
    "chaco": {
        "cmdline": [],
        "modules": [
            "chaco",
            "chaco._speedups_fallback",
            "chaco._version",
            "chaco.abstract_colormap",
            "chaco.abstract_controller",
            "chaco.abstract_data_range",
            "chaco.abstract_data_source",
            "chaco.abstract_mapper",
            "chaco.abstract_overlay",
            "chaco.abstract_plot_data",
            "chaco.abstract_plot_renderer",
            "chaco.api",
            "chaco.array_data_source",
            "chaco.array_plot_data",
            "chaco.axis",
            "chaco.axis_view",
            "chaco.barplot",
            "chaco.base",
            "chaco.base_1d_mapper",
            "chaco.base_1d_plot",
            "chaco.base_2d_plot",
            "chaco.base_candle_plot",
            "chaco.base_contour_plot",
            "chaco.base_data_range",
            "chaco.base_plot_container",
            "chaco.base_plot_frame",
            "chaco.base_xy_plot",
            "chaco.candle_plot",
            "chaco.chaco_plot_container_editor",
            "chaco.chaco_plot_editor",
            "chaco.chaco_traits",
            "chaco.chaco_version",
            "chaco.cmap_image_plot",
            "chaco.color_bar",
            "chaco.color_mapper",
            "chaco.color_spaces",
            "chaco.colormap_generators",
            "chaco.colormapped_scatterplot",
            "chaco.colormapped_selection_overlay",
            "chaco.contour",
            "chaco.contour.setup",
            "chaco.contour_line_plot",
            "chaco.contour_poly_plot",
            "chaco.cross_plot_frame",
            "chaco.data_label",
            "chaco.data_range_1d",
            "chaco.data_range_2d",
            "chaco.data_view",
            "chaco.datamapper",
            "chaco.default_colormaps",
            "chaco.default_colors",
            "chaco.discrete_color_mapper",
            "chaco.downsample",
            "chaco.downsample.lttb",
            "chaco.downsample.tests",
            "chaco.downsample.tests.test_lttb",
            "chaco.errorbar_plot",
            "chaco.example_support",
            "chaco.filled_line_plot",
            "chaco.function_data_source",
            "chaco.function_image_data",
            "chaco.grid",
            "chaco.grid_data_source",
            "chaco.grid_mapper",
            "chaco.horizon_plot",
            "chaco.image_data",
            "chaco.image_plot",
            "chaco.image_utils",
            "chaco.jitterplot",
            "chaco.label",
            "chaco.label_axis",
            "chaco.lasso_overlay",
            "chaco.layers",
            "chaco.layers.api",
            "chaco.layers.status_layer",
            "chaco.layers.svg_range_selection_overlay",
            "chaco.legend",
            "chaco.line_scatterplot_1d",
            "chaco.linear_mapper",
            "chaco.lineplot",
            "chaco.log_mapper",
            "chaco.multi_array_data_source",
            "chaco.multi_line_plot",
            "chaco.overlays",
            "chaco.overlays.aligned_container_overlay",
            "chaco.overlays.api",
            "chaco.overlays.container_overlay",
            "chaco.overlays.coordinate_line_overlay",
            "chaco.overlays.databox",
            "chaco.overlays.simple_inspector_overlay",
            "chaco.overlays.text_grid_overlay",
            "chaco.pdf_graphics_context",
            "chaco.plot",
            "chaco.plot_canvas",
            "chaco.plot_canvas_toolbar",
            "chaco.plot_component",
            "chaco.plot_containers",
            "chaco.plot_factory",
            "chaco.plot_graphics_context",
            "chaco.plot_label",
            "chaco.plot_template",
            "chaco.plotscrollbar",
            "chaco.plugin",
            "chaco.plugin.chaco_plugin",
            "chaco.plugin.plot_editor",
            "chaco.plugin.workbench_session",
            "chaco.point_data_source",
            "chaco.polar_line_renderer",
            "chaco.polar_mapper",
            "chaco.polygon_plot",
            "chaco.quiverplot",
            "chaco.scales",
            "chaco.scales.api",
            "chaco.scales.formatters",
            "chaco.scales.safetime",
            "chaco.scales.scales",
            "chaco.scales.scales_test_case",
            "chaco.scales.tests",
            "chaco.scales.tests.test_formatters",
            "chaco.scales.tests.test_time_scale",
            "chaco.scales.time_scale",
            "chaco.scales.time_scale_test_case",
            "chaco.scales_tick_generator",
            "chaco.scatter_inspector_overlay",
            "chaco.scatter_markers",
            "chaco.scatterplot",
            "chaco.scatterplot_1d",
            "chaco.selectable_legend",
            "chaco.selectable_overlay_container",
            "chaco.serializable",
            "chaco.shell",
            "chaco.shell.chaco_shell_error",
            "chaco.shell.commands",
            "chaco.shell.plot_maker",
            "chaco.shell.plot_window",
            "chaco.shell.preferences",
            "chaco.shell.scaly_plot",
            "chaco.shell.session",
            "chaco.simple_plot_frame",
            "chaco.speedups",
            "chaco.subdivision_cells",
            "chaco.subdivision_mapper",
            "chaco.svg_graphics_context",
            "chaco.tests",
            "chaco.tests._tools",
            "chaco.tests.array_plot_data_test_case",
            "chaco.tests.arraydatasource_test_case",
            "chaco.tests.base_utils_test_case",
            "chaco.tests.border_test_case",
            "chaco.tests.colormapper_test_case",
            "chaco.tests.component_tests",
            "chaco.tests.data_view_test_case",
            "chaco.tests.datarange_1d_test_case",
            "chaco.tests.datarange_2d_test_case",
            "chaco.tests.default_colormaps_test_case",
            "chaco.tests.discrete_colormapper_test_case",
            "chaco.tests.function_data_source_test_case",
            "chaco.tests.grid_data_source_test_case",
            "chaco.tests.grid_mapper_test_case",
            "chaco.tests.hittest_test_case",
            "chaco.tests.image_data_test_case",
            "chaco.tests.instantiation_order_test_case",
            "chaco.tests.jitterplot_test_case",
            "chaco.tests.line_scatterplot_test_case",
            "chaco.tests.linearmapper_test_case",
            "chaco.tests.logmapper_test_case",
            "chaco.tests.multi_array_data_source_test_case",
            "chaco.tests.plot_test_case",
            "chaco.tests.plotcontainer_test_case",
            "chaco.tests.scatterplot_1d_test_case",
            "chaco.tests.scatterplot_renderers_test_case",
            "chaco.tests.serializable_base",
            "chaco.tests.serializable_test_case",
            "chaco.tests.speedups_test_case",
            "chaco.tests.test_cmap_image_plot",
            "chaco.tests.test_colormapped_scatterplot",
            "chaco.tests.test_contour",
            "chaco.tests.test_data_label",
            "chaco.tests.test_image_plot",
            "chaco.tests.test_image_utils",
            "chaco.tests.test_ticks",
            "chaco.tests.text_plot_1d_test_case",
            "chaco.text_box_overlay",
            "chaco.text_plot_1d",
            "chaco.ticks",
            "chaco.toolbar_plot",
            "chaco.tools",
            "chaco.tools.api",
            "chaco.tools.base_zoom_tool",
            "chaco.tools.better_selecting_zoom",
            "chaco.tools.better_zoom",
            "chaco.tools.broadcaster",
            "chaco.tools.cursor_tool",
            "chaco.tools.data_label_tool",
            "chaco.tools.dataprinter",
            "chaco.tools.drag_tool",
            "chaco.tools.drag_zoom",
            "chaco.tools.draw_points_tool",
            "chaco.tools.highlight_tool",
            "chaco.tools.image_inspector_tool",
            "chaco.tools.lasso_selection",
            "chaco.tools.legend_highlighter",
            "chaco.tools.legend_tool",
            "chaco.tools.line_inspector",
            "chaco.tools.line_segment_tool",
            "chaco.tools.move_tool",
            "chaco.tools.pan_tool",
            "chaco.tools.pan_tool2",
            "chaco.tools.point_marker",
            "chaco.tools.range_selection",
            "chaco.tools.range_selection_2d",
            "chaco.tools.range_selection_overlay",
            "chaco.tools.rect_zoom",
            "chaco.tools.regression_lasso",
            "chaco.tools.save_tool",
            "chaco.tools.scatter_inspector",
            "chaco.tools.select_tool",
            "chaco.tools.simple_inspector",
            "chaco.tools.simple_zoom",
            "chaco.tools.tests",
            "chaco.tools.tests.better_zoom_test_case",
            "chaco.tools.tests.pan_tool_test_case",
            "chaco.tools.tests.range_selection_test_case",
            "chaco.tools.tests.range_zoom_test_case",
            "chaco.tools.tool_history_mixin",
            "chaco.tools.tool_states",
            "chaco.tools.toolbars",
            "chaco.tools.toolbars.plot_toolbar",
            "chaco.tools.toolbars.toolbar_buttons",
            "chaco.tools.tracking_pan_tool",
            "chaco.tools.tracking_zoom",
            "chaco.tools.traits_tool",
            "chaco.tools.zoom_tool",
            "chaco.tooltip",
            "chaco.transform_color_mapper",
            "chaco.ui",
            "chaco.ui.axis_ui",
            "chaco.ui.plot_window",
            "chaco.ui.popupable_plot",
            "chaco.variable_size_scatterplot"
        ],
        "version": "4.6.1"
    },
    "chacractl": {
        "cmdline": [
            "chacractl"
        ],
        "modules": [
            "chacractl",
            "chacractl.api",
            "chacractl.api.binaries",
            "chacractl.api.exists",
            "chacractl.api.projects",
            "chacractl.api.repos",
            "chacractl.decorators",
            "chacractl.log",
            "chacractl.main",
            "chacractl.tests",
            "chacractl.tests.conftest",
            "chacractl.tests.test_main",
            "chacractl.tests.test_util",
            "chacractl.util"
        ],
        "version": "0.0.15"
    },
    "chad": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chadnester": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "chado": {
        "cmdline": [
            "chado"
        ],
        "modules": [
            "chado",
            "chado.actions",
            "chado.actions.create_analysis",
            "chado.actions.create_organism",
            "chado.actions.dbshell",
            "chado.actions.export_fa",
            "chado.actions.export_gbk",
            "chado.actions.export_gff3",
            "chado.actions.list_organisms",
            "chado.actions.purge_organism"
        ],
        "version": "1.2"
    },
    "chag": {
        "cmdline": [],
        "modules": [
            "chag",
            "chag.changelog",
            "chag.git",
            "chag.main"
        ],
        "version": "0.5.0"
    },
    "chagallpy": {
        "cmdline": [],
        "modules": [
            "chagallpy",
            "chagallpy.argument_parser",
            "chagallpy.exif_data_reader",
            "chagallpy.gallery_info",
            "chagallpy.gallery_info_reader",
            "chagallpy.gallery_page_creator",
            "chagallpy.image_collector",
            "chagallpy.image_info",
            "chagallpy.image_page_creator",
            "chagallpy.image_resizer",
            "chagallpy.image_sorter",
            "chagallpy.meta_data_reader",
            "chagallpy.resource_copy",
            "chagallpy.thumbnail_creator"
        ],
        "version": "0.1.3"
    },
    "chai": {
        "cmdline": [],
        "modules": [
            "chai",
            "chai._termcolor",
            "chai.chai",
            "chai.comparators",
            "chai.exception",
            "chai.expectation",
            "chai.mock",
            "chai.python2",
            "chai.spy",
            "chai.stub"
        ],
        "version": "1.1.1"
    },
    "chaid": {
        "cmdline": [],
        "modules": [
            "CHAID",
            "CHAID.column",
            "CHAID.mapping_dict",
            "CHAID.node",
            "CHAID.split",
            "CHAID.stats",
            "CHAID.tree"
        ],
        "version": "4.0.0a1"
    },
    "chaidenester": {
        "cmdline": [],
        "modules": [
            "chaidenester"
        ],
        "version": "1.2.0"
    },
    "chain": {
        "cmdline": [],
        "modules": [
            "chain"
        ],
        "version": "1.0"
    },
    "chain-api": {
        "cmdline": [],
        "modules": [
            "chain",
            "chain.client",
            "tests",
            "tests.test_client"
        ],
        "version": "0.1.5"
    },
    "chain-bitcoin": {
        "cmdline": [],
        "modules": [
            "chain_bitcoin",
            "chain_bitcoin.chain",
            "chain_bitcoin.config",
            "chain_bitcoin.endpoints",
            "chain_bitcoin.exceptions",
            "chain_bitcoin.func_util",
            "chain_bitcoin.map_list",
            "chain_bitcoin.models",
            "chain_bitcoin.namedtuple",
            "chain_bitcoin.urls"
        ],
        "version": "0.4"
    },
    "chain-call": {
        "cmdline": [],
        "modules": [
            "chain",
            "chain.call",
            "chain.chain"
        ],
        "version": "0.0.2"
    },
    "chain-python": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "chain-sdk": {
        "cmdline": [],
        "modules": [
            "chain",
            "chain.lib",
            "chain.shared"
        ],
        "version": "1.1"
    },
    "chainable-validators": {
        "cmdline": [],
        "modules": [
            "validators",
            "validators.chain",
            "validators.helpers",
            "validators.re_patterns",
            "validators.validators"
        ],
        "version": "0.8.2"
    },
    "chainclient": {
        "cmdline": [],
        "modules": [
            "chainclient"
        ],
        "version": "0.5.0"
    },
    "chainconsumer": {
        "cmdline": [],
        "modules": [
            "chainconsumer",
            "chainconsumer.chain"
        ],
        "version": "0.16.5"
    },
    "chainer": {
        "cmdline": [],
        "modules": [
            "chainer",
            "chainer.computational_graph",
            "chainer.configuration",
            "chainer.cuda",
            "chainer.dataset",
            "chainer.dataset.convert",
            "chainer.dataset.dataset_mixin",
            "chainer.dataset.download",
            "chainer.dataset.iterator",
            "chainer.datasets",
            "chainer.datasets.cifar",
            "chainer.datasets.dict_dataset",
            "chainer.datasets.image_dataset",
            "chainer.datasets.mnist",
            "chainer.datasets.ptb",
            "chainer.datasets.sub_dataset",
            "chainer.datasets.tuple_dataset",
            "chainer.function",
            "chainer.function_hooks",
            "chainer.function_hooks.debug_print",
            "chainer.function_hooks.timer",
            "chainer.functions",
            "chainer.functions.activation",
            "chainer.functions.activation.clipped_relu",
            "chainer.functions.activation.crelu",
            "chainer.functions.activation.elu",
            "chainer.functions.activation.hard_sigmoid",
            "chainer.functions.activation.leaky_relu",
            "chainer.functions.activation.log_softmax",
            "chainer.functions.activation.lstm",
            "chainer.functions.activation.maxout",
            "chainer.functions.activation.prelu",
            "chainer.functions.activation.relu",
            "chainer.functions.activation.sigmoid",
            "chainer.functions.activation.slstm",
            "chainer.functions.activation.softmax",
            "chainer.functions.activation.softplus",
            "chainer.functions.activation.tanh",
            "chainer.functions.array",
            "chainer.functions.array.broadcast",
            "chainer.functions.array.cast",
            "chainer.functions.array.concat",
            "chainer.functions.array.copy",
            "chainer.functions.array.depth2space",
            "chainer.functions.array.dstack",
            "chainer.functions.array.expand_dims",
            "chainer.functions.array.flatten",
            "chainer.functions.array.fliplr",
            "chainer.functions.array.flipud",
            "chainer.functions.array.get_item",
            "chainer.functions.array.hstack",
            "chainer.functions.array.pad",
            "chainer.functions.array.permutate",
            "chainer.functions.array.reshape",
            "chainer.functions.array.rollaxis",
            "chainer.functions.array.select_item",
            "chainer.functions.array.separate",
            "chainer.functions.array.space2depth",
            "chainer.functions.array.split_axis",
            "chainer.functions.array.squeeze",
            "chainer.functions.array.stack",
            "chainer.functions.array.swapaxes",
            "chainer.functions.array.tile",
            "chainer.functions.array.transpose",
            "chainer.functions.array.transpose_sequence",
            "chainer.functions.array.vstack",
            "chainer.functions.array.where",
            "chainer.functions.connection",
            "chainer.functions.connection.bilinear",
            "chainer.functions.connection.convolution_2d",
            "chainer.functions.connection.convolution_nd",
            "chainer.functions.connection.deconvolution_2d",
            "chainer.functions.connection.deconvolution_nd",
            "chainer.functions.connection.dilated_convolution_2d",
            "chainer.functions.connection.embed_id",
            "chainer.functions.connection.linear",
            "chainer.functions.connection.n_step_lstm",
            "chainer.functions.evaluation",
            "chainer.functions.evaluation.accuracy",
            "chainer.functions.evaluation.binary_accuracy",
            "chainer.functions.evaluation.classification_summary",
            "chainer.functions.evaluation.r2_score",
            "chainer.functions.loss",
            "chainer.functions.loss.black_out",
            "chainer.functions.loss.contrastive",
            "chainer.functions.loss.crf1d",
            "chainer.functions.loss.cross_covariance",
            "chainer.functions.loss.ctc",
            "chainer.functions.loss.decov",
            "chainer.functions.loss.hinge",
            "chainer.functions.loss.huber_loss",
            "chainer.functions.loss.mean_absolute_error",
            "chainer.functions.loss.mean_squared_error",
            "chainer.functions.loss.negative_sampling",
            "chainer.functions.loss.sigmoid_cross_entropy",
            "chainer.functions.loss.softmax_cross_entropy",
            "chainer.functions.loss.triplet",
            "chainer.functions.loss.vae",
            "chainer.functions.math",
            "chainer.functions.math.basic_math",
            "chainer.functions.math.batch_l2_norm_squared",
            "chainer.functions.math.bias",
            "chainer.functions.math.ceil",
            "chainer.functions.math.clip",
            "chainer.functions.math.det",
            "chainer.functions.math.exponential",
            "chainer.functions.math.exponential_m1",
            "chainer.functions.math.floor",
            "chainer.functions.math.fmod",
            "chainer.functions.math.hyperbolic",
            "chainer.functions.math.identity",
            "chainer.functions.math.inv",
            "chainer.functions.math.linear_interpolate",
            "chainer.functions.math.logarithm_1p",
            "chainer.functions.math.logsumexp",
            "chainer.functions.math.matmul",
            "chainer.functions.math.maximum",
            "chainer.functions.math.minimum",
            "chainer.functions.math.minmax",
            "chainer.functions.math.scale",
            "chainer.functions.math.sqrt",
            "chainer.functions.math.square",
            "chainer.functions.math.squared_difference",
            "chainer.functions.math.sum",
            "chainer.functions.math.trigonometric",
            "chainer.functions.noise",
            "chainer.functions.noise.dropout",
            "chainer.functions.noise.gaussian",
            "chainer.functions.noise.zoneout",
            "chainer.functions.normalization",
            "chainer.functions.normalization.batch_normalization",
            "chainer.functions.normalization.l2_normalization",
            "chainer.functions.normalization.local_response_normalization",
            "chainer.functions.pooling",
            "chainer.functions.pooling.average_pooling_2d",
            "chainer.functions.pooling.average_pooling_nd",
            "chainer.functions.pooling.average_pooling_nd_kernel",
            "chainer.functions.pooling.max_pooling_2d",
            "chainer.functions.pooling.max_pooling_nd",
            "chainer.functions.pooling.max_pooling_nd_kernel",
            "chainer.functions.pooling.pooling_2d",
            "chainer.functions.pooling.pooling_nd",
            "chainer.functions.pooling.pooling_nd_kernel",
            "chainer.functions.pooling.roi_pooling_2d",
            "chainer.functions.pooling.spatial_pyramid_pooling_2d",
            "chainer.functions.pooling.unpooling_2d",
            "chainer.functions.pooling.unpooling_nd",
            "chainer.functions.pooling.upsampling_2d",
            "chainer.functions.theano",
            "chainer.functions.theano.theano_function",
            "chainer.functions.util",
            "chainer.functions.util.forget",
            "chainer.gradient_check",
            "chainer.initializer",
            "chainer.initializers",
            "chainer.initializers.constant",
            "chainer.initializers.normal",
            "chainer.initializers.orthogonal",
            "chainer.initializers.uniform",
            "chainer.iterators",
            "chainer.iterators.multiprocess_iterator",
            "chainer.iterators.serial_iterator",
            "chainer.link",
            "chainer.links",
            "chainer.links.activation",
            "chainer.links.activation.maxout",
            "chainer.links.activation.prelu",
            "chainer.links.caffe",
            "chainer.links.caffe.caffe_function",
            "chainer.links.caffe.protobuf2",
            "chainer.links.caffe.protobuf2.caffe_pb2",
            "chainer.links.caffe.protobuf3",
            "chainer.links.caffe.protobuf3.caffe_pb2",
            "chainer.links.connection",
            "chainer.links.connection.bias",
            "chainer.links.connection.bilinear",
            "chainer.links.connection.convolution_2d",
            "chainer.links.connection.convolution_nd",
            "chainer.links.connection.deconvolution_2d",
            "chainer.links.connection.deconvolution_nd",
            "chainer.links.connection.dilated_convolution_2d",
            "chainer.links.connection.embed_id",
            "chainer.links.connection.gru",
            "chainer.links.connection.highway",
            "chainer.links.connection.inception",
            "chainer.links.connection.inceptionbn",
            "chainer.links.connection.linear",
            "chainer.links.connection.lstm",
            "chainer.links.connection.mlp_convolution_2d",
            "chainer.links.connection.n_step_lstm",
            "chainer.links.connection.peephole",
            "chainer.links.connection.scale",
            "chainer.links.connection.zoneoutlstm",
            "chainer.links.loss",
            "chainer.links.loss.black_out",
            "chainer.links.loss.crf1d",
            "chainer.links.loss.hierarchical_softmax",
            "chainer.links.loss.negative_sampling",
            "chainer.links.model",
            "chainer.links.model.classifier",
            "chainer.links.model.vision",
            "chainer.links.model.vision.resnet",
            "chainer.links.model.vision.vgg",
            "chainer.links.normalization",
            "chainer.links.normalization.batch_normalization",
            "chainer.links.normalization.layer_normalization",
            "chainer.links.theano",
            "chainer.links.theano.theano_function",
            "chainer.optimizer",
            "chainer.optimizers",
            "chainer.optimizers.ada_delta",
            "chainer.optimizers.ada_grad",
            "chainer.optimizers.adam",
            "chainer.optimizers.momentum_sgd",
            "chainer.optimizers.nesterov_ag",
            "chainer.optimizers.rmsprop",
            "chainer.optimizers.rmsprop_graves",
            "chainer.optimizers.sgd",
            "chainer.optimizers.smorms3",
            "chainer.reporter",
            "chainer.serializer",
            "chainer.serializers",
            "chainer.serializers.hdf5",
            "chainer.serializers.npz",
            "chainer.testing",
            "chainer.testing.array",
            "chainer.testing.attr",
            "chainer.testing.condition",
            "chainer.testing.helper",
            "chainer.testing.parameterized",
            "chainer.testing.unary_math_function_test",
            "chainer.training",
            "chainer.training.extension",
            "chainer.training.extensions",
            "chainer.training.extensions._snapshot",
            "chainer.training.extensions.computational_graph",
            "chainer.training.extensions.evaluator",
            "chainer.training.extensions.exponential_shift",
            "chainer.training.extensions.linear_shift",
            "chainer.training.extensions.log_report",
            "chainer.training.extensions.micro_average",
            "chainer.training.extensions.plot_report",
            "chainer.training.extensions.print_report",
            "chainer.training.extensions.progress_bar",
            "chainer.training.extensions.util",
            "chainer.training.extensions.value_observation",
            "chainer.training.trainer",
            "chainer.training.trigger",
            "chainer.training.triggers",
            "chainer.training.triggers.interval",
            "chainer.training.triggers.minmax_value_trigger",
            "chainer.training.updater",
            "chainer.training.util",
            "chainer.utils",
            "chainer.utils.array",
            "chainer.utils.conv",
            "chainer.utils.conv_nd",
            "chainer.utils.conv_nd_kernel",
            "chainer.utils.experimental",
            "chainer.utils.imgproc",
            "chainer.utils.type_check",
            "chainer.utils.walker_alias",
            "chainer.variable"
        ],
        "version": "2.0.0b1"
    },
    "chainer-cuda-deps": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0.1"
    },
    "chainer-cv": {
        "cmdline": [],
        "modules": [
            "chainer_cv",
            "chainer_cv.datasets",
            "chainer_cv.datasets.image_retrieval",
            "chainer_cv.datasets.image_retrieval.online_products_dataset",
            "chainer_cv.datasets.semantic_segmentation",
            "chainer_cv.datasets.semantic_segmentation.pascal_voc_dataset",
            "chainer_cv.evaluations",
            "chainer_cv.evaluations.eval_semantic_segmentation",
            "chainer_cv.extensions",
            "chainer_cv.extensions.embed_images",
            "chainer_cv.extensions.image_retrieval",
            "chainer_cv.extensions.image_retrieval.measure_k_recall",
            "chainer_cv.extensions.semantic_segmentation",
            "chainer_cv.extensions.semantic_segmentation.semantic_segmentation_vis_out",
            "chainer_cv.extensions.utils",
            "chainer_cv.external",
            "chainer_cv.external.tensorboard",
            "chainer_cv.external.tensorboard.embedding_tensorboard",
            "chainer_cv.functions",
            "chainer_cv.models",
            "chainer_cv.models.googlenet",
            "chainer_cv.testing",
            "chainer_cv.testing.helper",
            "chainer_cv.training",
            "chainer_cv.training.test_mode_evaluator",
            "chainer_cv.utils",
            "chainer_cv.utils.download",
            "chainer_cv.wrappers",
            "chainer_cv.wrappers.cache_dataset",
            "chainer_cv.wrappers.cache_dataset.cache_array_dataset_wrapper",
            "chainer_cv.wrappers.cache_dataset.cache_dataset_wrapper",
            "chainer_cv.wrappers.data_augmentation",
            "chainer_cv.wrappers.data_augmentation.crop_wrapper",
            "chainer_cv.wrappers.data_augmentation.random_mirror_wrapper",
            "chainer_cv.wrappers.dataset_wrapper",
            "chainer_cv.wrappers.preprocessing",
            "chainer_cv.wrappers.preprocessing.pad_wrapper",
            "chainer_cv.wrappers.preprocessing.resize_wrapper",
            "chainer_cv.wrappers.preprocessing.subtract_wrapper",
            "chainer_cv.wrappers.split_dataset",
            "chainer_cv.wrappers.split_dataset.keep_subset_wrapper"
        ],
        "version": "0.2.1"
    },
    "chainer-dashboard": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chainer-libdnn": {
        "cmdline": [],
        "modules": [
            "libdnn",
            "libdnn.autoencoder",
            "libdnn.classification",
            "libdnn.nnbase",
            "libdnn.regression",
            "libdnn.visualizer"
        ],
        "version": "2.1.0"
    },
    "chainercv": {
        "cmdline": [],
        "modules": [
            "chainercv",
            "chainercv.datasets",
            "chainercv.datasets.cub",
            "chainercv.datasets.cub.cub_keypoint_dataset",
            "chainercv.datasets.cub.cub_label_dataset",
            "chainercv.datasets.cub.cub_utils",
            "chainercv.datasets.online_products",
            "chainercv.datasets.online_products.online_products_dataset",
            "chainercv.datasets.pascal_voc",
            "chainercv.datasets.pascal_voc.voc_detection_dataset",
            "chainercv.datasets.pascal_voc.voc_semantic_segmentation_dataset",
            "chainercv.datasets.pascal_voc.voc_utils",
            "chainercv.datasets.transform_dataset",
            "chainercv.extensions",
            "chainercv.extensions.detection",
            "chainercv.extensions.detection.detection_vis_report",
            "chainercv.extensions.image_retrieval",
            "chainercv.extensions.image_retrieval.measure_k_recall",
            "chainercv.extensions.misc",
            "chainercv.extensions.misc.embed_images",
            "chainercv.extensions.semantic_segmentation",
            "chainercv.extensions.semantic_segmentation.semantic_segmentation_vis_report",
            "chainercv.functions",
            "chainercv.links",
            "chainercv.links.googlenet",
            "chainercv.tasks",
            "chainercv.tasks.detection",
            "chainercv.tasks.detection.vis_bbox",
            "chainercv.tasks.keypoint_matching",
            "chainercv.tasks.keypoint_matching.eval_pck",
            "chainercv.tasks.keypoint_matching.vis_keypoint",
            "chainercv.tasks.semantic_segmentation",
            "chainercv.tasks.semantic_segmentation.eval_semantic_segmentation",
            "chainercv.transforms",
            "chainercv.transforms.bbox",
            "chainercv.transforms.bbox.flip_bbox",
            "chainercv.transforms.bbox.non_maximum_suppression",
            "chainercv.transforms.bbox.resize_bbox",
            "chainercv.transforms.bbox.translate_bbox",
            "chainercv.transforms.image",
            "chainercv.transforms.image.center_crop",
            "chainercv.transforms.image.chw_to_pil_image",
            "chainercv.transforms.image.flip",
            "chainercv.transforms.image.pca_lighting",
            "chainercv.transforms.image.random_crop",
            "chainercv.transforms.image.random_expand",
            "chainercv.transforms.image.random_flip",
            "chainercv.transforms.image.random_rotate",
            "chainercv.transforms.image.resize",
            "chainercv.transforms.image.resize_contain",
            "chainercv.transforms.image.scale",
            "chainercv.transforms.image.ten_crop",
            "chainercv.transforms.keypoint",
            "chainercv.transforms.keypoint.flip_keypoint",
            "chainercv.transforms.keypoint.resize_keypoint",
            "chainercv.utils",
            "chainercv.utils.dataset_utils",
            "chainercv.utils.download",
            "chainercv.utils.extension_utils",
            "chainercv.utils.image_utils",
            "chainercv.utils.test_utils"
        ],
        "version": "0.4.5"
    },
    "chainermn": {
        "cmdline": [],
        "modules": [
            "chainermn",
            "chainermn.communicators",
            "chainermn.communicators._base",
            "chainermn.communicators._communication_utility",
            "chainermn.communicators._memory_utility",
            "chainermn.communicators.dummy_communicator",
            "chainermn.communicators.flat_communicator",
            "chainermn.communicators.hierarchical_communicator",
            "chainermn.communicators.naive_communicator",
            "chainermn.communicators.single_node_communicator",
            "chainermn.communicators.two_dimensional_communicator",
            "chainermn.dataset",
            "chainermn.multi_node_evaluator",
            "chainermn.multi_node_optimizer",
            "chainermn.nccl"
        ],
        "version": "1.0.0b1"
    },
    "chainerrl": {
        "cmdline": [],
        "modules": [
            "chainerrl",
            "chainerrl.action_value",
            "chainerrl.agent",
            "chainerrl.agents",
            "chainerrl.agents.a3c",
            "chainerrl.agents.acer",
            "chainerrl.agents.al",
            "chainerrl.agents.ddpg",
            "chainerrl.agents.double_dqn",
            "chainerrl.agents.double_pal",
            "chainerrl.agents.dpp",
            "chainerrl.agents.dqn",
            "chainerrl.agents.nsq",
            "chainerrl.agents.pal",
            "chainerrl.agents.pcl",
            "chainerrl.agents.pgt",
            "chainerrl.agents.residual_dqn",
            "chainerrl.agents.sarsa",
            "chainerrl.distribution",
            "chainerrl.env",
            "chainerrl.envs",
            "chainerrl.envs.abc",
            "chainerrl.envs.ale",
            "chainerrl.experiments",
            "chainerrl.experiments.evaluator",
            "chainerrl.experiments.prepare_output_dir",
            "chainerrl.experiments.train_agent",
            "chainerrl.experiments.train_agent_async",
            "chainerrl.explorer",
            "chainerrl.explorers",
            "chainerrl.explorers.additive_gaussian",
            "chainerrl.explorers.additive_ou",
            "chainerrl.explorers.boltzmann",
            "chainerrl.explorers.epsilon_greedy",
            "chainerrl.functions",
            "chainerrl.functions.bound_by_tanh",
            "chainerrl.functions.invert_gradients",
            "chainerrl.functions.lower_triangular_matrix",
            "chainerrl.functions.mellowmax",
            "chainerrl.functions.scale_grad",
            "chainerrl.functions.sum_arrays",
            "chainerrl.functions.weighted_sum_arrays",
            "chainerrl.links",
            "chainerrl.links.dqn_head",
            "chainerrl.links.mlp",
            "chainerrl.links.mlp_bn",
            "chainerrl.links.sequence",
            "chainerrl.misc",
            "chainerrl.misc.ask_yes_no",
            "chainerrl.misc.async",
            "chainerrl.misc.batch_states",
            "chainerrl.misc.copy_param",
            "chainerrl.misc.env_modifiers",
            "chainerrl.misc.init_like_torch",
            "chainerrl.misc.makedirs",
            "chainerrl.misc.prioritized",
            "chainerrl.misc.random_seed",
            "chainerrl.misc.reward_filter",
            "chainerrl.optimizers",
            "chainerrl.optimizers.nonbias_weight_decay",
            "chainerrl.optimizers.rmsprop_async",
            "chainerrl.policies",
            "chainerrl.policies.deterministic_policy",
            "chainerrl.policies.gaussian_policy",
            "chainerrl.policies.mellowmax_policy",
            "chainerrl.policies.softmax_policy",
            "chainerrl.policy",
            "chainerrl.q_function",
            "chainerrl.q_functions",
            "chainerrl.q_functions.dueling_dqn",
            "chainerrl.q_functions.state_action_q_functions",
            "chainerrl.q_functions.state_q_functions",
            "chainerrl.recurrent",
            "chainerrl.replay_buffer",
            "chainerrl.spaces",
            "chainerrl.v_function",
            "chainerrl.v_functions",
            "chainerrl.v_functions.v_functions"
        ],
        "version": "0.1.0"
    },
    "chainester": {
        "cmdline": [],
        "modules": [
            "chaiNester"
        ],
        "version": "1.0.0"
    },
    "chainlet": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chainload": {
        "cmdline": [],
        "modules": [
            "chainload",
            "chainload.chainload"
        ],
        "version": "1.4"
    },
    "chainmail": {
        "cmdline": [],
        "modules": [
            "chainmail",
            "chainmail.chainmail"
        ],
        "version": "0.1.2"
    },
    "chainmap": {
        "cmdline": [],
        "modules": [
            "chainmap",
            "chainmap.chainmap",
            "chainmap.version"
        ],
        "version": "1.0.2"
    },
    "chainplot": {
        "cmdline": [],
        "modules": [
            "chainplot",
            "chainplot.core",
            "chainplot.core.layers",
            "chainplot.core.mapping",
            "chainplot.core.old_plot",
            "chainplot.core.plot",
            "chainplot.core.style",
            "chainplot.utils",
            "chainplot.utils.dict_tools",
            "chainplot.utils.string_tools"
        ],
        "version": "0.2.1"
    },
    "chainpoint": {
        "cmdline": [],
        "modules": [
            "chainpoint",
            "chainpoint.chainpoint",
            "chainpoint.tests",
            "chainpoint.tests.chainpoint_test"
        ],
        "version": "0.0.2"
    },
    "chainreaction": {
        "cmdline": [],
        "modules": [
            "chainreaction",
            "chainreaction.reactor"
        ],
        "version": "0.2.0"
    },
    "chains": {
        "cmdline": [
            "netwatch",
            "urlwatch",
            "weird_dns"
        ],
        "modules": [
            "chains",
            "chains.links",
            "chains.links.dns_meta",
            "chains.links.flows",
            "chains.links.http_meta",
            "chains.links.link",
            "chains.links.packet_meta",
            "chains.links.packet_tags",
            "chains.links.reverse_dns",
            "chains.links.tls_meta",
            "chains.links.transport_meta",
            "chains.sinks",
            "chains.sinks.packet_printer",
            "chains.sinks.packet_summary",
            "chains.sinks.sink",
            "chains.sources",
            "chains.sources.packet_streamer",
            "chains.sources.source",
            "chains.utils",
            "chains.utils.cache",
            "chains.utils.compat",
            "chains.utils.data_utils",
            "chains.utils.file_utils",
            "chains.utils.flow_utils",
            "chains.utils.log_utils",
            "chains.utils.net_utils",
            "chains.utils.signal_utils"
        ],
        "version": "0.2.0"
    },
    "chainscan": {
        "cmdline": [],
        "modules": [
            "chainscan",
            "chainscan._block",
            "chainscan.block",
            "chainscan.blockchain",
            "chainscan.defs",
            "chainscan.loggers",
            "chainscan.misc",
            "chainscan.rawfiles",
            "chainscan.scan",
            "chainscan.track",
            "chainscan.tx",
            "chainscan.utils",
            "chainscan.version",
            "experimental",
            "experimental.balances",
            "experimental.parallel"
        ],
        "version": "0.2.1"
    },
    "chainson": {
        "cmdline": [],
        "modules": [
            "chainson"
        ],
        "version": "0.2"
    },
    "chainz": {
        "cmdline": [],
        "modules": [
            "chainz",
            "chainz.chain",
            "chainz.utils"
        ],
        "version": "0.14"
    },
    "chairs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chakert": {
        "cmdline": [],
        "modules": [
            "chakert",
            "chakert._compat",
            "chakert.langs",
            "chakert.langs.en",
            "chakert.langs.ru",
            "chakert.tokenizer",
            "chakert.tokens",
            "chakert.util"
        ],
        "version": "0.2.1"
    },
    "chakraversiontracker": {
        "cmdline": [],
        "modules": [
            "chakraversiontracker",
            "chakraversiontracker._version"
        ],
        "version": "1.2.1.20160917"
    },
    "chakula": {
        "cmdline": [],
        "modules": [
            "chakula",
            "chakula.formatter",
            "chakula.main"
        ],
        "version": "0.8.0"
    },
    "chalice": {
        "cmdline": [],
        "modules": [
            "chalice",
            "chalice.analyzer",
            "chalice.app",
            "chalice.awsclient",
            "chalice.cli",
            "chalice.cli.factory",
            "chalice.compat",
            "chalice.config",
            "chalice.constants",
            "chalice.deploy",
            "chalice.deploy.deployer",
            "chalice.deploy.packager",
            "chalice.deploy.swagger",
            "chalice.local",
            "chalice.logs",
            "chalice.package",
            "chalice.pipeline",
            "chalice.policy",
            "chalice.utils"
        ],
        "version": "0.8.2"
    },
    "chalice-view": {
        "cmdline": [],
        "modules": [
            "chalice_view",
            "chalice_view.app",
            "chalice_view.cli",
            "chalice_view.config",
            "chalice_view.exceptions",
            "chalice_view.manager",
            "chalice_view.router",
            "chalice_view.routes",
            "chalice_view.test",
            "chalice_view.utils",
            "chalice_view.view",
            "chalice_view.views"
        ],
        "version": "0.1.4"
    },
    "chalk": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "challenge": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "challenge-cli": {
        "cmdline": [],
        "modules": [
            "challenges",
            "challenges.cli",
            "challenges.local_exceptions",
            "challenges.platformids",
            "challenges.utilities",
            "challenges.writers"
        ],
        "version": "0.0.1.0"
    },
    "challenge-me": {
        "cmdline": [],
        "modules": [
            "challenge_me",
            "challenge_me.challenge_me",
            "challenge_me.cli",
            "main"
        ],
        "version": "0.1.0"
    },
    "challenge.uccs": {
        "cmdline": [],
        "modules": [
            "challenge",
            "challenge.uccs",
            "challenge.uccs.baseline",
            "challenge.uccs.baseline.detector",
            "challenge.uccs.baseline.recognizer",
            "challenge.uccs.evaluate",
            "challenge.uccs.evaluate.detector",
            "challenge.uccs.evaluate.recognizer",
            "challenge.uccs.utils",
            "challenge.uccs.utils.read_data"
        ],
        "version": "1.0.2"
    },
    "challenges": {
        "cmdline": [
            "challenge"
        ],
        "modules": [
            "HelloWorld",
            "HelloWorld.challenge",
            "HelloWorld.test",
            "challenges",
            "challenges.challenge",
            "challenges.conf",
            "challenges.graph",
            "challenges.main",
            "challenges.runner",
            "challenges.scaffold"
        ],
        "version": "0.6.0"
    },
    "challonge-service": {
        "cmdline": [],
        "modules": [
            "challongeservice",
            "challongeservice.api",
            "challongeservice.challongeservice",
            "challongeservice.tournamentsresource"
        ],
        "version": "0.0.1"
    },
    "challonge2elo": {
        "cmdline": [],
        "modules": [
            "challonge2elo"
        ],
        "version": "0.1.0"
    },
    "challongeranking": {
        "cmdline": [],
        "modules": [
            "challongeranking",
            "challongeranking.challongeranking"
        ],
        "version": "1.0.0"
    },
    "chalmers": {
        "cmdline": [],
        "modules": [
            "chalmers",
            "chalmers._version",
            "chalmers.commands",
            "chalmers.commands.add",
            "chalmers.commands.at_login",
            "chalmers.commands.at_startup",
            "chalmers.commands.bg",
            "chalmers.commands.edit",
            "chalmers.commands.export",
            "chalmers.commands.import",
            "chalmers.commands.list",
            "chalmers.commands.log",
            "chalmers.commands.procfile",
            "chalmers.commands.remove",
            "chalmers.commands.set",
            "chalmers.commands.show",
            "chalmers.commands.start",
            "chalmers.commands.stop",
            "chalmers.config",
            "chalmers.errors",
            "chalmers.event_dispatcher",
            "chalmers.program",
            "chalmers.program.base",
            "chalmers.program.nt",
            "chalmers.program.posix",
            "chalmers.program.tests",
            "chalmers.program.tests.test_nt_program",
            "chalmers.program.tests.test_posix_program",
            "chalmers.program.tests.test_program",
            "chalmers.program.utils",
            "chalmers.program_manager",
            "chalmers.scripts",
            "chalmers.scripts.chalmers_main",
            "chalmers.scripts.runner",
            "chalmers.scripts.service",
            "chalmers.service",
            "chalmers.service.cron_service",
            "chalmers.service.darwin_service",
            "chalmers.service.posix_service",
            "chalmers.service.systemd_service",
            "chalmers.service.sysv_service",
            "chalmers.service.tests",
            "chalmers.service.tests.test_cron_service",
            "chalmers.service.tests.test_darwin_service",
            "chalmers.service.tests.test_systemd_service",
            "chalmers.service.upstart_service",
            "chalmers.service.win32_local_service",
            "chalmers.service.win32_system_service",
            "chalmers.tests",
            "chalmers.tests.test_commands",
            "chalmers.tests.test_event_dispatcher",
            "chalmers.tests.test_program_manager",
            "chalmers.utils",
            "chalmers.utils.appdirs",
            "chalmers.utils.cli",
            "chalmers.utils.color_picker",
            "chalmers.utils.daemonize",
            "chalmers.utils.file_echo",
            "chalmers.utils.kill_tree",
            "chalmers.utils.mutiplex_io_pool",
            "chalmers.utils.persistent_dict",
            "chalmers.utils.tests",
            "chalmers.utils.tests.test_kill_tree",
            "chalmers.utils.tests.test_persistent_dict",
            "chalmers.utils.tests.test_utils",
            "chalmers.windows",
            "chalmers.windows.chalmers_service",
            "chalmers.windows.install",
            "chalmers.windows.service_base"
        ],
        "version": "0.7.9"
    },
    "chama": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chamberconnectlibrary": {
        "cmdline": [
            "chamberconnectlibrary-test.py"
        ],
        "modules": [
            "chamberconnectlibrary",
            "chamberconnectlibrary.EspecInteract",
            "chamberconnectlibrary.P300",
            "chamberconnectlibrary.WatlowF4T",
            "chamberconnectlibrary.controllerinterface",
            "chamberconnectlibrary.espec",
            "chamberconnectlibrary.modbus",
            "chamberconnectlibrary.scp220",
            "chamberconnectlibrary.watlowf4"
        ],
        "version": "2.0.2"
    },
    "chameleon": {
        "cmdline": [],
        "modules": [
            "chameleon",
            "chameleon.ast25",
            "chameleon.astutil",
            "chameleon.benchmark",
            "chameleon.codegen",
            "chameleon.compiler",
            "chameleon.config",
            "chameleon.exc",
            "chameleon.i18n",
            "chameleon.interfaces",
            "chameleon.loader",
            "chameleon.metal",
            "chameleon.namespaces",
            "chameleon.nodes",
            "chameleon.parser",
            "chameleon.program",
            "chameleon.py25",
            "chameleon.py26",
            "chameleon.tal",
            "chameleon.tales",
            "chameleon.template",
            "chameleon.tests",
            "chameleon.tests.test_doctests",
            "chameleon.tests.test_exc",
            "chameleon.tests.test_loader",
            "chameleon.tests.test_parser",
            "chameleon.tests.test_sniffing",
            "chameleon.tests.test_templates",
            "chameleon.tests.test_tokenizer",
            "chameleon.tokenize",
            "chameleon.utils",
            "chameleon.zpt",
            "chameleon.zpt.loader",
            "chameleon.zpt.program",
            "chameleon.zpt.template"
        ],
        "version": "3.1"
    },
    "chameleon.core": {
        "cmdline": [],
        "modules": [
            "chameleon"
        ],
        "version": "1.0.4"
    },
    "chameleon.genshi": {
        "cmdline": [],
        "modules": [
            "chameleon",
            "chameleon.genshi",
            "chameleon.genshi.expressions",
            "chameleon.genshi.language",
            "chameleon.genshi.loader",
            "chameleon.genshi.template",
            "chameleon.genshi.tests",
            "chameleon.genshi.tests.helloworld.html",
            "chameleon.genshi.tests.helloworld.txt",
            "chameleon.genshi.tests.test_doctests",
            "chameleon.genshi.tests.test_edges"
        ],
        "version": "1.0b4"
    },
    "chameleon.html": {
        "cmdline": [],
        "modules": [
            "chameleon",
            "chameleon.html",
            "chameleon.html.interfaces",
            "chameleon.html.language",
            "chameleon.html.template",
            "chameleon.html.tests",
            "chameleon.html.tests.test_doctests",
            "chameleon.html.xss"
        ],
        "version": "1.0b4"
    },
    "chameleon.zpt": {
        "cmdline": [],
        "modules": [
            "chameleon"
        ],
        "version": "1.1.3"
    },
    "chamomile": {
        "cmdline": [],
        "modules": [
            "chamomile",
            "chamomile.test"
        ],
        "version": "1.0.1"
    },
    "chamonix": {
        "cmdline": [],
        "modules": [
            "chamonix",
            "chamonix.code",
            "chamonix.config",
            "chamonix.db",
            "chamonix.manage",
            "chamonix.utils",
            "chamonix.views",
            "chamonix.views.base",
            "chamonix.views.i18n"
        ],
        "version": "0.1"
    },
    "chan": {
        "cmdline": [],
        "modules": [
            "chan",
            "chan.chan"
        ],
        "version": "0.3.1"
    },
    "chan-arc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chance": {
        "cmdline": [],
        "modules": [
            "chance",
            "chance.chance",
            "chance.chance_exceptions",
            "chance.dictionaries",
            "chance.tests"
        ],
        "version": "0.104"
    },
    "chandan": {
        "cmdline": [],
        "modules": [
            "chandan",
            "chandan.main"
        ],
        "version": "0.3"
    },
    "chandere": {
        "cmdline": [],
        "modules": [
            "chandere",
            "chandere.cli",
            "chandere.connection",
            "chandere.core",
            "chandere.formatters",
            "chandere.scraper",
            "chandere.threads",
            "chandere.urls",
            "chandere.write"
        ],
        "version": "1.0.0"
    },
    "chandere2": {
        "cmdline": [],
        "modules": [
            "chandere2",
            "chandere2.cli",
            "chandere2.connection",
            "chandere2.context",
            "chandere2.core",
            "chandere2.output",
            "chandere2.post",
            "chandere2.validate",
            "chandere2.write"
        ],
        "version": "2.4.0"
    },
    "chandl": {
        "cmdline": [],
        "modules": [
            "chandl",
            "chandl.downloader",
            "chandl.model",
            "chandl.model.file",
            "chandl.model.post",
            "chandl.model.thread",
            "chandl.tests",
            "chandl.tests.model",
            "chandl.tests.model.test_file",
            "chandl.tests.model.test_post",
            "chandl.tests.model.test_thread",
            "chandl.tests.test_util",
            "chandl.util"
        ],
        "version": "0.3.0"
    },
    "chandler": {
        "cmdline": [],
        "modules": [
            "chandler",
            "chandler.configuration",
            "chandler.main",
            "chandler.utils"
        ],
        "version": "0.1.0"
    },
    "chandler-amazonplugin": {
        "cmdline": [],
        "modules": [
            "amazon",
            "amazon.AmazonBlocks",
            "amazon.AmazonDialog",
            "amazon.AmazonKinds",
            "amazon.amazon"
        ],
        "version": "0.8-r16144"
    },
    "chandler-debugplugin": {
        "cmdline": [],
        "modules": [
            "debug",
            "debug.DebugMenu",
            "debug.GenerateItemsFromFile",
            "debug.MeMenu",
            "debug.SharingMenu",
            "debug.TestMenu",
            "debug.blockviewer",
            "debug.blockviewer.blockviewer",
            "debug.createItems",
            "debug.generate",
            "debug.generate_dialog",
            "debug.generate_dialog.ItemGenerator",
            "debug.generate_dialog.itemGenHelp_xrc",
            "debug.mail",
            "debug.repositoryviewer",
            "debug.repositoryviewer.Repository",
            "debug.scripts",
            "debug.scripts.BlockInspector",
            "debug.scripts.BrowseSelected",
            "debug.scripts.EventTiming",
            "debug.scripts.ItemInspector",
            "debug.scripts.NewScript",
            "debug.scripts.PasteNewItem",
            "debug.scripts.StdoutSelected",
            "tests",
            "tests.TestCreateItems",
            "tests.TestGenerated",
            "tests.TestI18n",
            "tests.TestI18nMessage",
            "tests.TestScripting"
        ],
        "version": "1.0"
    },
    "chandler-dependencyplugin": {
        "cmdline": [],
        "modules": [
            "dependency",
            "dependency.Dependency",
            "dependency.ui"
        ],
        "version": "0.1"
    },
    "chandler-evdbplugin": {
        "cmdline": [],
        "modules": [
            "evdb",
            "evdb.EVDBDialog",
            "evdb.dialogs",
            "evdb.evdb"
        ],
        "version": "0.8-r16144"
    },
    "chandler-feedsplugin": {
        "cmdline": [],
        "modules": [
            "feeds",
            "feeds.blocks",
            "feeds.channels",
            "feeds.feedparser"
        ],
        "version": "0.8-r16144"
    },
    "chandler-flickrplugin": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chandler-gdataplugin": {
        "cmdline": [],
        "modules": [
            "gdatasync",
            "gdatasync.classes",
            "gdatasync.ui"
        ],
        "version": "0.7-r15284"
    },
    "chandler-helloworldplugin": {
        "cmdline": [],
        "modules": [
            "hello_world",
            "hello_world.tests"
        ],
        "version": "0.7-r15094"
    },
    "chandler-photoplugin": {
        "cmdline": [],
        "modules": [
            "photos",
            "photos.EXIF",
            "photos.Photos"
        ],
        "version": "1.0-r16584"
    },
    "chandler-reportplugin": {
        "cmdline": [],
        "modules": [
            "reports",
            "reports.History",
            "reports.ProgressReports",
            "reports.ReportStamps",
            "reports.reportsentry_commands"
        ],
        "version": "0.1"
    },
    "chandler-xmppplugin": {
        "cmdline": [],
        "modules": [
            "chandler_xmpp"
        ],
        "version": "0.8-r1761"
    },
    "changanya": {
        "cmdline": [],
        "modules": [
            "changanya",
            "changanya.bloom",
            "changanya.geohash",
            "changanya.hashtype",
            "changanya.nilsimsa",
            "changanya.simhash",
            "examples",
            "examples.usage"
        ],
        "version": "0.5.0"
    },
    "change-bootstrap": {
        "cmdline": [],
        "modules": [
            "changebootstrap",
            "changebootstrap.Change",
            "changebootstrap.LocalDeployment",
            "changebootstrap.LocalDeploymentSettings"
        ],
        "version": "0.0.2"
    },
    "change-build": {
        "cmdline": [],
        "modules": [
            "changebuild",
            "changebuild.Build"
        ],
        "version": "0.0.1"
    },
    "change-case": {
        "cmdline": [],
        "modules": [
            "change_case",
            "change_case.change_case"
        ],
        "version": "0.5.2"
    },
    "change-finder": {
        "cmdline": [],
        "modules": [
            "change_finder"
        ],
        "version": "0.0.1"
    },
    "change-lrc-to-txt": {
        "cmdline": [],
        "modules": [
            "change_lrc_to_txt"
        ],
        "version": "0.5.0"
    },
    "changecase": {
        "cmdline": [],
        "modules": [
            "change_case",
            "change_case.no_case"
        ],
        "version": "0.0.2"
    },
    "changed": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "changefinder": {
        "cmdline": [],
        "modules": [
            "changefinder"
        ],
        "version": "0.03"
    },
    "changegdssetup": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "changeless": {
        "cmdline": [],
        "modules": [
            "changeless",
            "changeless.compare",
            "changeless.decorators",
            "changeless.methods",
            "changeless.test",
            "changeless.test.decorators",
            "changeless.test.test_compare",
            "changeless.test.test_convert",
            "changeless.test.test_decorators",
            "changeless.test.test_helpers",
            "changeless.test.test_object_creation",
            "changeless.types",
            "changeless.types.conversion_helpers",
            "changeless.types.fancy",
            "changeless.types.immutable"
        ],
        "version": "0.1.27"
    },
    "changeling": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "changelog": {
        "cmdline": [],
        "modules": [
            "changelog",
            "changelog.changelog"
        ],
        "version": "0.3.5"
    },
    "changelog-suggest": {
        "cmdline": [],
        "modules": [
            "changelog",
            "changelog.command_line",
            "changelog.tests",
            "changelog.tests.test_command_line"
        ],
        "version": "0.1.0"
    },
    "changelogbuilder": {
        "cmdline": [],
        "modules": [
            "changelogbuilder",
            "changelogbuilder.changelogbuilder"
        ],
        "version": "1.0.0"
    },
    "changelogs": {
        "cmdline": [],
        "modules": [
            "changelogs",
            "changelogs.changelogs",
            "changelogs.cli",
            "changelogs.finder",
            "changelogs.launchpad",
            "changelogs.npm",
            "changelogs.parser",
            "changelogs.pypi",
            "changelogs.rubygems"
        ],
        "version": "0.12.0"
    },
    "changeo": {
        "cmdline": [
            "CreateGermlines.py",
            "DefineClones.py",
            "MakeDb.py",
            "ParseDb.py"
        ],
        "modules": [
            "changeo",
            "changeo.Commandline",
            "changeo.Defaults",
            "changeo.Distance",
            "changeo.IO",
            "changeo.Multiprocessing",
            "changeo.Parsers",
            "changeo.Receptor",
            "changeo.Version"
        ],
        "version": "0.3.5"
    },
    "changepoint": {
        "cmdline": [],
        "modules": [
            "changepoint",
            "changepoint.changepoint",
            "changepoint.mean_shift_model",
            "changepoint.rchangepoint",
            "changepoint.utils",
            "changepoint.utils.ts_stats"
        ],
        "version": "0.1.1"
    },
    "changepy": {
        "cmdline": [],
        "modules": [
            "changepy",
            "changepy.costs",
            "changepy.pelt"
        ],
        "version": "0.3.1"
    },
    "changer-c5": {
        "cmdline": [],
        "modules": [
            "changer",
            "changer.c5",
            "changer.c5.blog",
            "changer.c5.blog.admin",
            "changer.c5.blog.migrations",
            "changer.c5.blog.migrations.0001_initial",
            "changer.c5.blog.models",
            "changer.c5.blog.tests",
            "changer.c5.blog.urls",
            "changer.c5.blog.views",
            "changer.c5.emaillogin",
            "changer.c5.filebrowser",
            "changer.c5.filebrowser.base",
            "changer.c5.filebrowser.fields",
            "changer.c5.filebrowser.forms",
            "changer.c5.filebrowser.functions",
            "changer.c5.filebrowser.models",
            "changer.c5.filebrowser.settings",
            "changer.c5.filebrowser.templatetags",
            "changer.c5.filebrowser.templatetags.fb_csrf",
            "changer.c5.filebrowser.templatetags.fb_pagination",
            "changer.c5.filebrowser.templatetags.fb_tags",
            "changer.c5.filebrowser.templatetags.fb_versions",
            "changer.c5.filebrowser.upload_frontends",
            "changer.c5.filebrowser.upload_frontends.simple",
            "changer.c5.filebrowser.upload_frontends.simple.urls",
            "changer.c5.filebrowser.upload_frontends.simple.views",
            "changer.c5.filebrowser.upload_frontends.uploadify",
            "changer.c5.filebrowser.upload_frontends.uploadify.decorators",
            "changer.c5.filebrowser.upload_frontends.uploadify.urls",
            "changer.c5.filebrowser.upload_frontends.uploadify.views",
            "changer.c5.filebrowser.urls",
            "changer.c5.filebrowser.views",
            "changer.c5.menus",
            "changer.c5.menus.models",
            "changer.c5.menus.templatetags",
            "changer.c5.menus.templatetags.flatpage_menu_tags",
            "changer.c5.menus.tests",
            "changer.c5.menus.views",
            "changer.c5.meta",
            "changer.c5.meta.urls",
            "changer.c5.rating",
            "changer.c5.rating.managers",
            "changer.c5.rating.models",
            "changer.c5.rating.templatetags",
            "changer.c5.rating.templatetags.rating_tags",
            "changer.c5.rating.tests",
            "changer.c5.rating.tests.models",
            "changer.c5.rating.tests.runtests",
            "changer.c5.rating.tests.settings",
            "changer.c5.rating.tests.tests",
            "changer.c5.rating.urls",
            "changer.c5.rating.utils",
            "changer.c5.rating.views",
            "changer.c5.registration",
            "changer.c5.registration.admin",
            "changer.c5.registration.auth_urls",
            "changer.c5.registration.backends",
            "changer.c5.registration.backends.default",
            "changer.c5.registration.backends.default.urls",
            "changer.c5.registration.email",
            "changer.c5.registration.forms",
            "changer.c5.registration.management",
            "changer.c5.registration.management.commands",
            "changer.c5.registration.management.commands.cleanupregistration",
            "changer.c5.registration.models",
            "changer.c5.registration.signals",
            "changer.c5.registration.tests",
            "changer.c5.registration.tests.backends",
            "changer.c5.registration.tests.forms",
            "changer.c5.registration.tests.models",
            "changer.c5.registration.tests.urls",
            "changer.c5.registration.tests.views",
            "changer.c5.registration.urls",
            "changer.c5.registration.views",
            "changer.c5.shoppingcart",
            "changer.c5.shoppingcart.forms",
            "changer.c5.shoppingcart.models",
            "changer.c5.shoppingcart.urls",
            "changer.c5.shoppingcart.views",
            "changer.c5.simpleprofile",
            "changer.c5.simpleprofile.forms",
            "changer.c5.simpleprofile.models",
            "changer.c5.simpleprofile.views",
            "changer.c5.simplesjop",
            "changer.c5.simplesjop.admin",
            "changer.c5.simplesjop.forms",
            "changer.c5.simplesjop.migrations",
            "changer.c5.simplesjop.migrations.0001_initial",
            "changer.c5.simplesjop.migrations.0002_category_slug",
            "changer.c5.simplesjop.migrations.0003_added_category_image",
            "changer.c5.simplesjop.migrations.0004_added_price",
            "changer.c5.simplesjop.migrations.0005_profile_model",
            "changer.c5.simplesjop.migrations.0006_auto__add_productbase__del_field_product_description__del_field_produc",
            "changer.c5.simplesjop.migrations.0007_auto__del_profile__add_field_category_path",
            "changer.c5.simplesjop.migrations.0008_auto__add_field_category_sort_id__add_field_productbase_sort_id",
            "changer.c5.simplesjop.models",
            "changer.c5.simplesjop.templatetags",
            "changer.c5.simplesjop.templatetags.category_extra",
            "changer.c5.simplesjop.urls",
            "changer.c5.simplesjop.views"
        ],
        "version": "1.2"
    },
    "changes": {
        "cmdline": [],
        "modules": [
            "changes",
            "changes.attributes",
            "changes.changelog",
            "changes.cli",
            "changes.compat",
            "changes.config",
            "changes.exceptions",
            "changes.flow",
            "changes.packaging",
            "changes.probe",
            "changes.shell",
            "changes.util",
            "changes.vcs",
            "changes.venv",
            "changes.verification",
            "changes.version"
        ],
        "version": "0.7.0"
    },
    "changetip": {
        "cmdline": [],
        "modules": [
            "changetip",
            "changetip.bots",
            "changetip.bots.base"
        ],
        "version": "0.3.6"
    },
    "changsihengin9": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "chanjo": {
        "cmdline": [],
        "modules": [
            "chanjo",
            "chanjo.calculate",
            "chanjo.calculate.cli",
            "chanjo.calculate.mixins",
            "chanjo.calculate.utils",
            "chanjo.cli",
            "chanjo.exc",
            "chanjo.init",
            "chanjo.init.bootstrap",
            "chanjo.init.cli",
            "chanjo.init.demo",
            "chanjo.load",
            "chanjo.load.cli",
            "chanjo.load.link",
            "chanjo.load.parse",
            "chanjo.load.parse.bed",
            "chanjo.load.parse.sambamba",
            "chanjo.load.sambamba",
            "chanjo.load.utils",
            "chanjo.sambamba",
            "chanjo.sambamba.cli",
            "chanjo.sambamba.run",
            "chanjo.sex",
            "chanjo.sex.cli",
            "chanjo.sex.core",
            "chanjo.store",
            "chanjo.store.api",
            "chanjo.store.cli",
            "chanjo.store.constants",
            "chanjo.store.models"
        ],
        "version": "4.2.0"
    },
    "chanjo-ccds": {
        "cmdline": [],
        "modules": [
            "chanjo_ccds"
        ],
        "version": "0.4"
    },
    "chanjo-report": {
        "cmdline": [],
        "modules": [
            "chanjo_report",
            "chanjo_report.cli",
            "chanjo_report.cli.core",
            "chanjo_report.cli.utils",
            "chanjo_report.compat",
            "chanjo_report.interfaces",
            "chanjo_report.interfaces.html",
            "chanjo_report.interfaces.html.core",
            "chanjo_report.interfaces.pdf",
            "chanjo_report.interfaces.pdf.core",
            "chanjo_report.server",
            "chanjo_report.server.app",
            "chanjo_report.server.blueprints",
            "chanjo_report.server.blueprints.index",
            "chanjo_report.server.blueprints.index.views",
            "chanjo_report.server.blueprints.report",
            "chanjo_report.server.blueprints.report.views",
            "chanjo_report.server.config",
            "chanjo_report.server.constants",
            "chanjo_report.server.extensions",
            "chanjo_report.server.utils"
        ],
        "version": "4.1.0"
    },
    "channel": {
        "cmdline": [],
        "modules": [
            "channel"
        ],
        "version": "0.1.0"
    },
    "channelarchiver": {
        "cmdline": [],
        "modules": [
            "channelarchiver",
            "channelarchiver.channelarchiver",
            "channelarchiver.codes",
            "channelarchiver.exceptions",
            "channelarchiver.models",
            "channelarchiver.structures",
            "channelarchiver.utils"
        ],
        "version": "0.0.5"
    },
    "channelflux": {
        "cmdline": [],
        "modules": [
            "channelFlux",
            "channelFlux.r1_6",
            "channelFlux.r1_6_dev",
            "channelFlux.r2_0_0"
        ],
        "version": "2.1"
    },
    "channelpack": {
        "cmdline": [],
        "modules": [
            "channelpack",
            "channelpack.datautils",
            "channelpack.pack",
            "channelpack.pulldbf",
            "channelpack.pulltxt",
            "channelpack.pullxl"
        ],
        "version": "0.3.2"
    },
    "channelpy": {
        "cmdline": [],
        "modules": [
            "channelpy",
            "channelpy.base_connection",
            "channelpy.chan",
            "channelpy.connections",
            "channelpy.exceptions",
            "channelpy.rabbitpy_connection"
        ],
        "version": "0.2"
    },
    "channels": {
        "cmdline": [],
        "modules": [
            "channels",
            "channels.apps",
            "channels.asgi",
            "channels.auth",
            "channels.binding",
            "channels.binding.base",
            "channels.binding.websockets",
            "channels.channel",
            "channels.delay",
            "channels.delay.apps",
            "channels.delay.management",
            "channels.delay.management.commands",
            "channels.delay.management.commands.rundelay",
            "channels.delay.migrations",
            "channels.delay.migrations.0001_initial",
            "channels.delay.models",
            "channels.delay.worker",
            "channels.exceptions",
            "channels.generic",
            "channels.generic.base",
            "channels.generic.websockets",
            "channels.hacks",
            "channels.handler",
            "channels.log",
            "channels.management",
            "channels.management.commands",
            "channels.management.commands.runserver",
            "channels.management.commands.runworker",
            "channels.message",
            "channels.package_checks",
            "channels.routing",
            "channels.sessions",
            "channels.signals",
            "channels.staticfiles",
            "channels.test",
            "channels.test.base",
            "channels.test.http",
            "channels.tests",
            "channels.utils",
            "channels.worker"
        ],
        "version": "1.1.3"
    },
    "channels-api": {
        "cmdline": [],
        "modules": [
            "channels_api",
            "channels_api.bindings",
            "channels_api.mixins",
            "channels_api.settings",
            "channels_api.urls",
            "tests",
            "tests.migrations",
            "tests.migrations.0001_initial",
            "tests.models",
            "tests.routing",
            "tests.test_bindings",
            "tests.test_settings"
        ],
        "version": "0.3.1"
    },
    "channels-sendmail": {
        "cmdline": [],
        "modules": [
            "sendmail",
            "sendmail.consumers",
            "sendmail.routing",
            "sendmail.wrap"
        ],
        "version": "0.0.1"
    },
    "channels-slack-notifications": {
        "cmdline": [],
        "modules": [
            "channels_slack_notifications",
            "channels_slack_notifications.backends",
            "channels_slack_notifications.conf",
            "channels_slack_notifications.consumers",
            "channels_slack_notifications.management",
            "channels_slack_notifications.management.commands",
            "channels_slack_notifications.management.commands.test_slack_notification",
            "channels_slack_notifications.routing"
        ],
        "version": "0.0.2"
    },
    "channelsrestframework": {
        "cmdline": [],
        "modules": [
            "channels_framework",
            "channels_framework.bindings",
            "channels_framework.mixins",
            "channels_framework.settings",
            "channels_framework.urls",
            "tests",
            "tests.migrations",
            "tests.migrations.0001_initial",
            "tests.models",
            "tests.test_bindings",
            "tests.test_settings"
        ],
        "version": "0.1.4"
    },
    "channelstream": {
        "cmdline": [],
        "modules": [
            "channelstream",
            "channelstream.channel",
            "channelstream.cli",
            "channelstream.connection",
            "channelstream.events",
            "channelstream.ext_json",
            "channelstream.gc",
            "channelstream.policy_server",
            "channelstream.tests",
            "channelstream.user",
            "channelstream.utils",
            "channelstream.ws_app",
            "channelstream.wsgi_app",
            "channelstream.wsgi_views",
            "channelstream.wsgi_views.demo",
            "channelstream.wsgi_views.server",
            "channelstream.wsgi_views.wsgi_security"
        ],
        "version": "0.6.0"
    },
    "channing": {
        "cmdline": [],
        "modules": [
            "channing"
        ],
        "version": "1.4.0"
    },
    "chanroid-nester": {
        "cmdline": [],
        "modules": [
            "chanroid_nester"
        ],
        "version": "1.0.5"
    },
    "chaoflow.testing.crawler": {
        "cmdline": [],
        "modules": [
            "chaoflow",
            "chaoflow.testing",
            "chaoflow.testing.crawler",
            "chaoflow.testing.crawler.fail",
            "chaoflow.testing.crawler.globs",
            "chaoflow.testing.crawler.module",
            "chaoflow.testing.crawler.package",
            "chaoflow.testing.crawler.package.module",
            "chaoflow.testing.crawler.package.subpackage",
            "chaoflow.testing.crawler.package.subpackage.module",
            "chaoflow.testing.crawler.testing",
            "chaoflow.testing.crawler.tests",
            "chaoflow.testing.crawler.utils"
        ],
        "version": "0.5"
    },
    "chaoflow.testing.ipython": {
        "cmdline": [],
        "modules": [
            "chaoflow",
            "chaoflow.testing",
            "chaoflow.testing.ipython",
            "chaoflow.testing.ipython.tests"
        ],
        "version": "0.4"
    },
    "chaos": {
        "cmdline": [],
        "modules": [
            "chaos",
            "chaos.amqp",
            "chaos.amqp.exceptions",
            "chaos.amqp.exchange",
            "chaos.amqp.queue",
            "chaos.amqp.rpc",
            "chaos.arguments",
            "chaos.cli",
            "chaos.config",
            "chaos.db",
            "chaos.globber",
            "chaos.logging",
            "chaos.multiprocessing",
            "chaos.multiprocessing.workers",
            "chaos.threading",
            "chaos.threading.scheduler",
            "chaos.threading.threads",
            "chaos.version"
        ],
        "version": "0.2.3"
    },
    "chaos-basispy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chaoslib": {
        "cmdline": [],
        "modules": [
            "chaoslib"
        ],
        "version": "0.0.1-Alpha"
    },
    "chaosmonkey": {
        "cmdline": [],
        "modules": [
            "chaosmonkey",
            "chaosmonkey.api",
            "chaosmonkey.api.api_errors",
            "chaosmonkey.api.app",
            "chaosmonkey.api.attacks_blueprint",
            "chaosmonkey.api.executors_blueprint",
            "chaosmonkey.api.planners_blueprint",
            "chaosmonkey.api.plans_blueprint",
            "chaosmonkey.api.request_validator",
            "chaosmonkey.api.utils",
            "chaosmonkey.attacks",
            "chaosmonkey.attacks.attack",
            "chaosmonkey.attacks.executor",
            "chaosmonkey.cm",
            "chaosmonkey.cm.cm",
            "chaosmonkey.dal",
            "chaosmonkey.dal.cme_sqlalchemy_store",
            "chaosmonkey.dal.database",
            "chaosmonkey.dal.executor_model",
            "chaosmonkey.dal.plan_model",
            "chaosmonkey.drivers",
            "chaosmonkey.drivers.ec2_driver",
            "chaosmonkey.engine",
            "chaosmonkey.engine.app",
            "chaosmonkey.engine.cme_manager",
            "chaosmonkey.engine.scheduler",
            "chaosmonkey.modules",
            "chaosmonkey.modules.module_store",
            "chaosmonkey.planners",
            "chaosmonkey.planners.planner",
            "test",
            "test.attacks",
            "test.attacks.attack1",
            "test.attacks.attack2",
            "test.attacks.required_schema",
            "test.planners",
            "test.planners.planner1",
            "test.planners.planner2",
            "test.planners.required_schema",
            "test.planners.two_executors",
            "test.unit",
            "test.unit.chaosmonkey",
            "test.unit.chaosmonkey.api",
            "test.unit.chaosmonkey.api.attacks_blueprint_test",
            "test.unit.chaosmonkey.api.executors_blueprint_test",
            "test.unit.chaosmonkey.api.planners_blueprint_test",
            "test.unit.chaosmonkey.api.plans_blueprint_test",
            "test.unit.chaosmonkey.modules",
            "test.unit.chaosmonkey.modules.module_store_test",
            "test.unit.conftest"
        ],
        "version": "1.1.0"
    },
    "chaospy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chaosrouter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chapeau": {
        "cmdline": [],
        "modules": [
            "chapeau"
        ],
        "version": "0.0.2"
    },
    "chaperone": {
        "cmdline": [],
        "modules": [
            "chaperone",
            "chaperone.cproc",
            "chaperone.cproc.client",
            "chaperone.cproc.commands",
            "chaperone.cproc.process_manager",
            "chaperone.cproc.pt",
            "chaperone.cproc.pt.cron",
            "chaperone.cproc.pt.forking",
            "chaperone.cproc.pt.inetd",
            "chaperone.cproc.pt.notify",
            "chaperone.cproc.pt.oneshot",
            "chaperone.cproc.pt.simple",
            "chaperone.cproc.subproc",
            "chaperone.cproc.version",
            "chaperone.cproc.watcher",
            "chaperone.cutil",
            "chaperone.cutil.config",
            "chaperone.cutil.env",
            "chaperone.cutil.errors",
            "chaperone.cutil.events",
            "chaperone.cutil.format",
            "chaperone.cutil.logging",
            "chaperone.cutil.misc",
            "chaperone.cutil.notify",
            "chaperone.cutil.patches",
            "chaperone.cutil.proc",
            "chaperone.cutil.servers",
            "chaperone.cutil.syslog",
            "chaperone.cutil.syslog_handlers",
            "chaperone.cutil.syslog_info",
            "chaperone.exec",
            "chaperone.exec.chaperone",
            "chaperone.exec.envcp",
            "chaperone.exec.sdnotify",
            "chaperone.exec.sdnotify_exec",
            "chaperone.exec.telchap"
        ],
        "version": "0.3.9"
    },
    "chapman": {
        "cmdline": [],
        "modules": [
            "chapman",
            "chapman.actor",
            "chapman.canvas",
            "chapman.context",
            "chapman.decorators",
            "chapman.exc",
            "chapman.function",
            "chapman.meta",
            "chapman.model",
            "chapman.tests",
            "chapman.tests.test_actor",
            "chapman.worker"
        ],
        "version": "0.1dev"
    },
    "chappie": {
        "cmdline": [],
        "modules": [
            "chappie",
            "chappie.machine"
        ],
        "version": "0.0.1"
    },
    "chaps": {
        "cmdline": [],
        "modules": [
            "chaps",
            "chaps.scope",
            "chaps.scope.instance",
            "chaps.scope.singleton",
            "chaps.scope.thread"
        ],
        "version": "0.3"
    },
    "chapter-two-module-sharer": {
        "cmdline": [],
        "modules": [
            "chapter_two_module_sharer"
        ],
        "version": "1.3.0"
    },
    "chapter1": {
        "cmdline": [],
        "modules": [
            "chapter1"
        ],
        "version": "1.3.0"
    },
    "chapter1-2": {
        "cmdline": [],
        "modules": [
            "chapter1_2"
        ],
        "version": "1.5.0"
    },
    "chapter1-2-practice": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "chapter2": {
        "cmdline": [],
        "modules": [
            "chapter2"
        ],
        "version": "1.0.1"
    },
    "chapter3": {
        "cmdline": [],
        "modules": [
            "chapter3"
        ],
        "version": "1.1.3"
    },
    "chapter4": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chapter4-headfirst": {
        "cmdline": [],
        "modules": [
            "mainFile"
        ],
        "version": "2.99.0"
    },
    "chapter5-headfirstpython": {
        "cmdline": [],
        "modules": [
            "mainFile"
        ],
        "version": "1.99.0"
    },
    "chapter6-headfirstpython": {
        "cmdline": [],
        "modules": [
            "mainFile"
        ],
        "version": "1.99.0"
    },
    "chapter7": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "chapterize": {
        "cmdline": [],
        "modules": [
            "chapterize.chapterize"
        ],
        "version": "0.1.1"
    },
    "chaptertest": {
        "cmdline": [],
        "modules": [
            "chapter2"
        ],
        "version": "1.1.0"
    },
    "char-classifer": {
        "cmdline": [],
        "modules": [
            "base_classifier",
            "phrase_classifier"
        ],
        "version": "0.6.0"
    },
    "char2image": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "chara": {
        "cmdline": [],
        "modules": [
            "chara",
            "chara.chara",
            "chara.decorator",
            "chara.detectors",
            "chara.exceptions",
            "chara.integration",
            "chara.patchers",
            "chara.recorders",
            "chara.replayers",
            "chara.replayers.interface",
            "chara.replayers.pattern_match",
            "chara.replayers.sequence",
            "chara.storage",
            "tests",
            "tests.fixtures",
            "tests.test_chara",
            "tests.test_detectors",
            "tests.test_integration"
        ],
        "version": "0.1.5"
    },
    "characteristic": {
        "cmdline": [],
        "modules": [
            "characteristic",
            "test_characteristic"
        ],
        "version": "14.3.0"
    },
    "characterize": {
        "cmdline": [],
        "modules": [
            "characterize",
            "characterize.characterize",
            "characterize.modulehacker",
            "characterize.test_characterize"
        ],
        "version": "0.1"
    },
    "characters": {
        "cmdline": [],
        "modules": [
            "characters",
            "characters.charset",
            "characters.hex"
        ],
        "version": "0.1.0"
    },
    "charade": {
        "cmdline": [
            "charade"
        ],
        "modules": [
            "charade",
            "charade.big5freq",
            "charade.big5prober",
            "charade.chardistribution",
            "charade.charsetgroupprober",
            "charade.charsetprober",
            "charade.codingstatemachine",
            "charade.compat",
            "charade.constants",
            "charade.escprober",
            "charade.escsm",
            "charade.eucjpprober",
            "charade.euckrfreq",
            "charade.euckrprober",
            "charade.euctwfreq",
            "charade.euctwprober",
            "charade.gb2312freq",
            "charade.gb2312prober",
            "charade.hebrewprober",
            "charade.jisfreq",
            "charade.jpcntx",
            "charade.langbulgarianmodel",
            "charade.langcyrillicmodel",
            "charade.langgreekmodel",
            "charade.langhebrewmodel",
            "charade.langhungarianmodel",
            "charade.langthaimodel",
            "charade.latin1prober",
            "charade.mbcharsetprober",
            "charade.mbcsgroupprober",
            "charade.mbcssm",
            "charade.sbcharsetprober",
            "charade.sbcsgroupprober",
            "charade.sjisprober",
            "charade.universaldetector",
            "charade.utf8prober"
        ],
        "version": "1.0.3"
    },
    "charbeat": {
        "cmdline": [],
        "modules": [
            "chartbeat"
        ],
        "version": "0.2"
    },
    "charbycharprinter": {
        "cmdline": [],
        "modules": [
            "CharByCharPrinter"
        ],
        "version": "1.1.0"
    },
    "charc": {
        "cmdline": [],
        "modules": [
            "charc",
            "charc.charc",
            "charc.nn",
            "charc.old_test",
            "charc.old_train",
            "charc.resources"
        ],
        "version": "0.00001"
    },
    "charc-math": {
        "cmdline": [],
        "modules": [
            "charc_math",
            "charc_math.gcd",
            "charc_math.is_ap",
            "charc_math.is_gp",
            "charc_math.is_palindrome",
            "charc_math.is_prime",
            "charc_math.is_seq",
            "charc_math.lcm",
            "charc_math.primes",
            "charc_math.start",
            "charc_math.to_base",
            "charc_math.to_base10"
        ],
        "version": "1.1"
    },
    "charcoal": {
        "cmdline": [],
        "modules": [
            "charcoal",
            "charcoal.client",
            "charcoal.helpers",
            "charcoal.packets"
        ],
        "version": "0.2.0"
    },
    "chard": {
        "cmdline": [],
        "modules": [
            "chard"
        ],
        "version": "0"
    },
    "chardb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chardet": {
        "cmdline": [],
        "modules": [
            "chardet",
            "chardet.big5freq",
            "chardet.big5prober",
            "chardet.chardistribution",
            "chardet.charsetgroupprober",
            "chardet.charsetprober",
            "chardet.cli",
            "chardet.cli.chardetect",
            "chardet.codingstatemachine",
            "chardet.compat",
            "chardet.cp949prober",
            "chardet.enums",
            "chardet.escprober",
            "chardet.escsm",
            "chardet.eucjpprober",
            "chardet.euckrfreq",
            "chardet.euckrprober",
            "chardet.euctwfreq",
            "chardet.euctwprober",
            "chardet.gb2312freq",
            "chardet.gb2312prober",
            "chardet.hebrewprober",
            "chardet.jisfreq",
            "chardet.jpcntx",
            "chardet.langbulgarianmodel",
            "chardet.langcyrillicmodel",
            "chardet.langgreekmodel",
            "chardet.langhebrewmodel",
            "chardet.langhungarianmodel",
            "chardet.langthaimodel",
            "chardet.langturkishmodel",
            "chardet.latin1prober",
            "chardet.mbcharsetprober",
            "chardet.mbcsgroupprober",
            "chardet.mbcssm",
            "chardet.sbcharsetprober",
            "chardet.sbcsgroupprober",
            "chardet.sjisprober",
            "chardet.universaldetector",
            "chardet.utf8prober",
            "chardet.version"
        ],
        "version": "3.0.3"
    },
    "chardet2": {
        "cmdline": [
            "chardet2"
        ],
        "modules": [
            "chardet",
            "chardet.big5freq",
            "chardet.big5prober",
            "chardet.chardistribution",
            "chardet.charsetgroupprober",
            "chardet.charsetprober",
            "chardet.codingstatemachine",
            "chardet.constants",
            "chardet.escprober",
            "chardet.escsm",
            "chardet.eucjpprober",
            "chardet.euckrfreq",
            "chardet.euckrprober",
            "chardet.euctwfreq",
            "chardet.euctwprober",
            "chardet.gb2312freq",
            "chardet.gb2312prober",
            "chardet.hebrewprober",
            "chardet.jisfreq",
            "chardet.jpcntx",
            "chardet.langbulgarianmodel",
            "chardet.langcyrillicmodel",
            "chardet.langgreekmodel",
            "chardet.langhebrewmodel",
            "chardet.langhungarianmodel",
            "chardet.langthaimodel",
            "chardet.latin1prober",
            "chardet.mbcharsetprober",
            "chardet.mbcsgroupprober",
            "chardet.mbcssm",
            "chardet.sbcharsetprober",
            "chardet.sbcsgroupprober",
            "chardet.sjisprober",
            "chardet.test",
            "chardet.universaldetector",
            "chardet.utf8prober"
        ],
        "version": "2.0.3"
    },
    "chardetails": {
        "cmdline": [],
        "modules": [
            "chardetails",
            "chardetails.core",
            "chardetails.tests",
            "chardetails.tests.chardetails_test"
        ],
        "version": "0.3"
    },
    "chargebee": {
        "cmdline": [],
        "modules": [
            "chargebee",
            "chargebee.api_error",
            "chargebee.compat",
            "chargebee.environment",
            "chargebee.http_request",
            "chargebee.list_result",
            "chargebee.main",
            "chargebee.model",
            "chargebee.models",
            "chargebee.models.addon",
            "chargebee.models.address",
            "chargebee.models.card",
            "chargebee.models.comment",
            "chargebee.models.content",
            "chargebee.models.coupon",
            "chargebee.models.coupon_code",
            "chargebee.models.credit_note",
            "chargebee.models.credit_note_estimate",
            "chargebee.models.customer",
            "chargebee.models.download",
            "chargebee.models.estimate",
            "chargebee.models.event",
            "chargebee.models.hosted_page",
            "chargebee.models.invoice",
            "chargebee.models.invoice_estimate",
            "chargebee.models.order",
            "chargebee.models.payment_source",
            "chargebee.models.plan",
            "chargebee.models.portal_session",
            "chargebee.models.resource_migration",
            "chargebee.models.shipping_address",
            "chargebee.models.site_migration_detail",
            "chargebee.models.subscription",
            "chargebee.models.subscription_estimate",
            "chargebee.models.third_party_payment_method",
            "chargebee.models.transaction",
            "chargebee.models.unbilled_charge",
            "chargebee.request",
            "chargebee.result",
            "chargebee.util",
            "chargebee.version",
            "tests",
            "tests.util"
        ],
        "version": "2.2.9"
    },
    "chargehound": {
        "cmdline": [],
        "modules": [
            "chargehound",
            "chargehound.api_requestor",
            "chargehound.error",
            "chargehound.models",
            "chargehound.resources",
            "chargehound.version"
        ],
        "version": "2.0.0"
    },
    "chargify": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "charguana": {
        "cmdline": [],
        "modules": [
            "charguana",
            "charguana.cjk",
            "charguana.perluniprops"
        ],
        "version": "0.1.7"
    },
    "charimage": {
        "cmdline": [],
        "modules": [
            "charimage",
            "charimage.converter",
            "charimage.encoder",
            "charimage.main",
            "libcharimage",
            "libcharimage.converter",
            "libcharimage.encoder",
            "libcharimage.main"
        ],
        "version": "0.3"
    },
    "chariot-runtime": {
        "cmdline": [
            "chariot-dm",
            "chariot-me",
            "chariot-nm",
            "chariot-nmw",
            "chariot-rm",
            "chariot-sna"
        ],
        "modules": [
            "chariot_runtime_libs",
            "chariot_runtime_libs.chariot_helpers",
            "chariot_runtime_libs.configuration_solver",
            "chariot_runtime_libs.deployment_manager",
            "chariot_runtime_libs.logger",
            "chariot_runtime_libs.management_engine",
            "chariot_runtime_libs.new_configuration_solver",
            "chariot_runtime_libs.new_configuration_solver_bound",
            "chariot_runtime_libs.solver_backend"
        ],
        "version": "0.0.5"
    },
    "charitycheck": {
        "cmdline": [],
        "modules": [
            "charitycheck",
            "charitycheck.charitycheck",
            "charitycheck.test"
        ],
        "version": "1.1"
    },
    "charlatan": {
        "cmdline": [],
        "modules": [
            "charlatan",
            "charlatan._compat",
            "charlatan.builder",
            "charlatan.depgraph",
            "charlatan.file_format",
            "charlatan.fixture",
            "charlatan.fixture_collection",
            "charlatan.fixtures_manager",
            "charlatan.testcase",
            "charlatan.testing",
            "charlatan.utils"
        ],
        "version": "0.4.6"
    },
    "charlcd": {
        "cmdline": [],
        "modules": [
            "charlcd",
            "charlcd.abstract",
            "charlcd.abstract.buffered_interface",
            "charlcd.abstract.direct_interface",
            "charlcd.abstract.flush_event_interface",
            "charlcd.abstract.lcd",
            "charlcd.abstract.lcd_virtual",
            "charlcd.buffered",
            "charlcd.demos",
            "charlcd.demos.lcd_buffered",
            "charlcd.demos.lcd_direct",
            "charlcd.demos.lcd_virtual_buffered",
            "charlcd.demos.lcd_virtual_direct",
            "charlcd.demos.lcd_wifi_content",
            "charlcd.demos.lcd_wifi_direct",
            "charlcd.direct",
            "charlcd.drivers",
            "charlcd.drivers.base",
            "charlcd.drivers.gpio",
            "charlcd.drivers.i2c",
            "charlcd.drivers.null",
            "charlcd.drivers.null_events",
            "charlcd.drivers.wifi_content",
            "charlcd.drivers.wifi_direct",
            "charlcd.virtual_buffered",
            "charlcd.virtual_direct",
            "piader_1_1",
            "piader_1_1.bomb",
            "piader_1_1.ctrl_keyboard",
            "piader_1_1.enemy",
            "piader_1_1.event_server",
            "piader_1_1.game",
            "piader_1_1.item",
            "piader_1_1.local_key",
            "piader_1_1.missile",
            "piader_1_1.player"
        ],
        "version": "0.4.0"
    },
    "charles87-001": {
        "cmdline": [],
        "modules": [
            "charles87_001"
        ],
        "version": "1.3.0"
    },
    "charles87-002": {
        "cmdline": [],
        "modules": [],
        "version": "2.0.0"
    },
    "charlesbot": {
        "cmdline": [],
        "modules": [
            "charlesbot",
            "charlesbot.base_object",
            "charlesbot.base_plugin",
            "charlesbot.config",
            "charlesbot.config.configuration",
            "charlesbot.plugins",
            "charlesbot.plugins.help_plugin",
            "charlesbot.plugins.ping_plugin",
            "charlesbot.robot",
            "charlesbot.slack",
            "charlesbot.slack.slack_attachment",
            "charlesbot.slack.slack_base_object",
            "charlesbot.slack.slack_channel_joined",
            "charlesbot.slack.slack_channel_left",
            "charlesbot.slack.slack_connection",
            "charlesbot.slack.slack_group_joined",
            "charlesbot.slack.slack_group_left",
            "charlesbot.slack.slack_message",
            "charlesbot.slack.slack_pong",
            "charlesbot.slack.slack_room_joined",
            "charlesbot.slack.slack_user",
            "charlesbot.util",
            "charlesbot.util.borg",
            "charlesbot.util.http",
            "charlesbot.util.parse",
            "charlesbot.util.slack"
        ],
        "version": "0.10.1"
    },
    "charlesbot-broadcast-message": {
        "cmdline": [],
        "modules": [
            "charlesbot_broadcast_message",
            "charlesbot_broadcast_message.broadcast_message"
        ],
        "version": "0.2.2"
    },
    "charlesbot-jira": {
        "cmdline": [],
        "modules": [
            "charlesbot_jira",
            "charlesbot_jira.jira",
            "charlesbot_jira.jira_helpers",
            "charlesbot_jira.jira_issue"
        ],
        "version": "0.2.0"
    },
    "charlesbot-pagerduty": {
        "cmdline": [],
        "modules": [
            "charlesbot_pagerduty",
            "charlesbot_pagerduty.pagerduty",
            "charlesbot_pagerduty.pagerduty_helpers",
            "charlesbot_pagerduty.pagerduty_schedule",
            "charlesbot_pagerduty.pagerduty_user"
        ],
        "version": "1.0.1"
    },
    "charlesbot-pagerduty-escalations": {
        "cmdline": [],
        "modules": [
            "charlesbot_pagerduty_escalations",
            "charlesbot_pagerduty_escalations.http",
            "charlesbot_pagerduty_escalations.pagerdutyescalations"
        ],
        "version": "0.2.0"
    },
    "charlesbot-rundeck": {
        "cmdline": [],
        "modules": [
            "charlesbot_rundeck",
            "charlesbot_rundeck.http",
            "charlesbot_rundeck.rundeck",
            "charlesbot_rundeck.rundeck_job",
            "charlesbot_rundeck.rundeck_lock"
        ],
        "version": "0.2.2"
    },
    "charlie": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "charlockholmes": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "charm": {
        "cmdline": [],
        "modules": [
            "charm"
        ],
        "version": "1.0b4"
    },
    "charm-benchmark": {
        "cmdline": [],
        "modules": [
            "charmbenchmark",
            "charmbenchmark.cli",
            "charmbenchmark.cli.actions",
            "charmbenchmark.cli.composite",
            "charmbenchmark.cli.data",
            "charmbenchmark.cli.finish",
            "charmbenchmark.cli.meta",
            "charmbenchmark.cli.raw",
            "charmbenchmark.cli.start"
        ],
        "version": "1.1.4"
    },
    "charm-crypto": {
        "cmdline": [],
        "modules": [
            "charm",
            "charm.adapters",
            "charm.adapters.abenc_adapt_hybrid",
            "charm.adapters.dabenc_adapt_hybrid",
            "charm.adapters.ibenc_adapt_hybrid",
            "charm.adapters.ibenc_adapt_identityhash",
            "charm.adapters.kpabenc_adapt_hybrid",
            "charm.adapters.pkenc_adapt_bchk05",
            "charm.adapters.pkenc_adapt_chk04",
            "charm.adapters.pkenc_adapt_hybrid",
            "charm.adapters.pksig_adapt_naor01",
            "charm.config",
            "charm.core",
            "charm.core.benchmark",
            "charm.core.crypto",
            "charm.core.crypto.AES",
            "charm.core.crypto.DES",
            "charm.core.crypto.DES3",
            "charm.core.crypto.cryptobase",
            "charm.core.engine",
            "charm.core.engine.protocol",
            "charm.core.engine.util",
            "charm.core.math",
            "charm.core.math.elliptic_curve",
            "charm.core.math.integer",
            "charm.core.math.pairing",
            "charm.schemes",
            "charm.schemes.abenc",
            "charm.schemes.abenc.abenc_bsw07",
            "charm.schemes.abenc.abenc_lsw08",
            "charm.schemes.abenc.abenc_waters09",
            "charm.schemes.abenc.abenc_yct14",
            "charm.schemes.abenc.dac-macs-yang-14",
            "charm.schemes.abenc.dfa_fe12",
            "charm.schemes.abenc.maabe-yang-14",
            "charm.schemes.abenc.pk_hve08",
            "charm.schemes.abenc.tbpre-liu-14",
            "charm.schemes.chamhash_adm05",
            "charm.schemes.chamhash_rsa_hw09",
            "charm.schemes.commit",
            "charm.schemes.commit.commit_gs08",
            "charm.schemes.commit.commit_pedersen92",
            "charm.schemes.dabe_aw11",
            "charm.schemes.encap_bchk05",
            "charm.schemes.grpsig",
            "charm.schemes.grpsig.groupsig_bgls04",
            "charm.schemes.grpsig.groupsig_bgls04_var",
            "charm.schemes.hibenc",
            "charm.schemes.hibenc.hibenc_bb04",
            "charm.schemes.hibenc.hibenc_lew11",
            "charm.schemes.ibenc",
            "charm.schemes.ibenc.ibenc_CW13_z",
            "charm.schemes.ibenc.ibenc_bb03",
            "charm.schemes.ibenc.ibenc_bf01",
            "charm.schemes.ibenc.ibenc_ckrs09",
            "charm.schemes.ibenc.ibenc_cllww12_z",
            "charm.schemes.ibenc.ibenc_lsw08",
            "charm.schemes.ibenc.ibenc_sw05",
            "charm.schemes.ibenc.ibenc_waters05",
            "charm.schemes.ibenc.ibenc_waters05_z",
            "charm.schemes.ibenc.ibenc_waters09",
            "charm.schemes.ibenc.ibenc_waters09_z",
            "charm.schemes.joye_scheme",
            "charm.schemes.lem_scheme",
            "charm.schemes.pk_fre_ccv11",
            "charm.schemes.pk_vrf",
            "charm.schemes.pkenc",
            "charm.schemes.pkenc.pkenc_cs98",
            "charm.schemes.pkenc.pkenc_elgamal85",
            "charm.schemes.pkenc.pkenc_gm82",
            "charm.schemes.pkenc.pkenc_paillier99",
            "charm.schemes.pkenc.pkenc_rabin",
            "charm.schemes.pkenc.pkenc_rsa",
            "charm.schemes.pksig",
            "charm.schemes.pksig.pksig_CW13_z",
            "charm.schemes.pksig.pksig_bls04",
            "charm.schemes.pksig.pksig_boyen",
            "charm.schemes.pksig.pksig_chch",
            "charm.schemes.pksig.pksig_chp",
            "charm.schemes.pksig.pksig_cl03",
            "charm.schemes.pksig.pksig_cl04",
            "charm.schemes.pksig.pksig_cllww12_z",
            "charm.schemes.pksig.pksig_cyh",
            "charm.schemes.pksig.pksig_dsa",
            "charm.schemes.pksig.pksig_ecdsa",
            "charm.schemes.pksig.pksig_hess",
            "charm.schemes.pksig.pksig_hw",
            "charm.schemes.pksig.pksig_rsa_hw09",
            "charm.schemes.pksig.pksig_schnorr91",
            "charm.schemes.pksig.pksig_waters",
            "charm.schemes.pksig.pksig_waters05",
            "charm.schemes.pksig.pksig_waters09",
            "charm.schemes.pre_mg07",
            "charm.schemes.protocol_a01",
            "charm.schemes.protocol_ao00",
            "charm.schemes.protocol_cns07",
            "charm.schemes.protocol_schnorr91",
            "charm.schemes.sigma1",
            "charm.schemes.sigma2",
            "charm.schemes.sigma3",
            "charm.test",
            "charm.test.schemes",
            "charm.test.schemes.abenc_test",
            "charm.test.schemes.chamhash_test",
            "charm.test.schemes.commit_test",
            "charm.test.schemes.dabenc_test",
            "charm.test.schemes.encap_bchk05_test",
            "charm.test.schemes.grpsig_test",
            "charm.test.schemes.hibenc_test",
            "charm.test.schemes.ibenc_test",
            "charm.test.schemes.pk_vrf_test",
            "charm.test.schemes.pkenc_test",
            "charm.test.schemes.pksig_test",
            "charm.test.schemes.rsa_alg_test",
            "charm.test.toolbox",
            "charm.test.toolbox.conversion_test",
            "charm.test.toolbox.paddingschemes_test",
            "charm.test.toolbox.secretshare_test",
            "charm.test.toolbox.symcrypto_test",
            "charm.toolbox",
            "charm.toolbox.ABEnc",
            "charm.toolbox.ABEncMultiAuth",
            "charm.toolbox.Commit",
            "charm.toolbox.DFA",
            "charm.toolbox.FSA",
            "charm.toolbox.Hash",
            "charm.toolbox.IBEnc",
            "charm.toolbox.IBSig",
            "charm.toolbox.PKEnc",
            "charm.toolbox.PKSig",
            "charm.toolbox.bitstring",
            "charm.toolbox.conversion",
            "charm.toolbox.eccurve",
            "charm.toolbox.ecgroup",
            "charm.toolbox.enum",
            "charm.toolbox.hash_module",
            "charm.toolbox.integergroup",
            "charm.toolbox.iterate",
            "charm.toolbox.matrixops",
            "charm.toolbox.node",
            "charm.toolbox.paddingschemes",
            "charm.toolbox.paddingschemes_test",
            "charm.toolbox.pairingcurves",
            "charm.toolbox.pairinggroup",
            "charm.toolbox.policytree",
            "charm.toolbox.reCompiler",
            "charm.toolbox.redundancyschemes",
            "charm.toolbox.schemebase",
            "charm.toolbox.secretshare",
            "charm.toolbox.secretutil",
            "charm.toolbox.securerandom",
            "charm.toolbox.sigmaprotocol",
            "charm.toolbox.specialprimes",
            "charm.toolbox.symcrypto",
            "charm.toolbox.xmlserialize",
            "charm.toolbox.zknode",
            "charm.zkp_compiler",
            "charm.zkp_compiler.zk_demo",
            "charm.zkp_compiler.zkp_generator",
            "charm.zkp_compiler.zkparser"
        ],
        "version": "0.43"
    },
    "charm-test": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.2"
    },
    "charm-tools": {
        "cmdline": [],
        "modules": [
            "charmtools",
            "charmtools.build",
            "charmtools.build.builder",
            "charmtools.build.config",
            "charmtools.build.errors",
            "charmtools.build.fetchers",
            "charmtools.build.inspector",
            "charmtools.build.tactics",
            "charmtools.bundles",
            "charmtools.charms",
            "charmtools.cli",
            "charmtools.create",
            "charmtools.diff_match_patch",
            "charmtools.fetchers",
            "charmtools.generate",
            "charmtools.generators",
            "charmtools.generators.generator",
            "charmtools.generators.prompt",
            "charmtools.generators.template",
            "charmtools.generators.utils",
            "charmtools.linter",
            "charmtools.list",
            "charmtools.mr",
            "charmtools.proof",
            "charmtools.pullsource",
            "charmtools.repofinder",
            "charmtools.templates",
            "charmtools.templates.ansible",
            "charmtools.templates.ansible.template",
            "charmtools.templates.bash",
            "charmtools.templates.bash.template",
            "charmtools.templates.chef",
            "charmtools.templates.chef.template",
            "charmtools.templates.powershell",
            "charmtools.templates.powershell.template",
            "charmtools.templates.python",
            "charmtools.templates.python.template",
            "charmtools.templates.python_services",
            "charmtools.templates.python_services.template",
            "charmtools.templates.reactive_bash",
            "charmtools.templates.reactive_bash.template",
            "charmtools.templates.reactive_python",
            "charmtools.templates.reactive_python.template",
            "charmtools.test",
            "charmtools.unpromulgate",
            "charmtools.utils",
            "charmtools.version"
        ],
        "version": "2.2.0"
    },
    "charmhelpers": {
        "cmdline": [
            "charmsupport",
            "chlp",
            "salt-call"
        ],
        "modules": [
            "charmhelpers",
            "charmhelpers.cli",
            "charmhelpers.cli.benchmark",
            "charmhelpers.cli.commands",
            "charmhelpers.cli.hookenv",
            "charmhelpers.cli.host",
            "charmhelpers.cli.unitdata",
            "charmhelpers.context",
            "charmhelpers.contrib",
            "charmhelpers.contrib.amulet",
            "charmhelpers.contrib.amulet.deployment",
            "charmhelpers.contrib.amulet.utils",
            "charmhelpers.contrib.ansible",
            "charmhelpers.contrib.benchmark",
            "charmhelpers.contrib.charmhelpers",
            "charmhelpers.contrib.charmsupport",
            "charmhelpers.contrib.charmsupport.nrpe",
            "charmhelpers.contrib.charmsupport.volumes",
            "charmhelpers.contrib.database",
            "charmhelpers.contrib.database.mysql",
            "charmhelpers.contrib.hahelpers",
            "charmhelpers.contrib.hahelpers.apache",
            "charmhelpers.contrib.hahelpers.cluster",
            "charmhelpers.contrib.hardening",
            "charmhelpers.contrib.hardening.apache",
            "charmhelpers.contrib.hardening.apache.checks",
            "charmhelpers.contrib.hardening.apache.checks.config",
            "charmhelpers.contrib.hardening.audits",
            "charmhelpers.contrib.hardening.audits.apache",
            "charmhelpers.contrib.hardening.audits.apt",
            "charmhelpers.contrib.hardening.audits.file",
            "charmhelpers.contrib.hardening.harden",
            "charmhelpers.contrib.hardening.host",
            "charmhelpers.contrib.hardening.host.checks",
            "charmhelpers.contrib.hardening.host.checks.apt",
            "charmhelpers.contrib.hardening.host.checks.limits",
            "charmhelpers.contrib.hardening.host.checks.login",
            "charmhelpers.contrib.hardening.host.checks.minimize_access",
            "charmhelpers.contrib.hardening.host.checks.pam",
            "charmhelpers.contrib.hardening.host.checks.profile",
            "charmhelpers.contrib.hardening.host.checks.securetty",
            "charmhelpers.contrib.hardening.host.checks.suid_sgid",
            "charmhelpers.contrib.hardening.host.checks.sysctl",
            "charmhelpers.contrib.hardening.mysql",
            "charmhelpers.contrib.hardening.mysql.checks",
            "charmhelpers.contrib.hardening.mysql.checks.config",
            "charmhelpers.contrib.hardening.ssh",
            "charmhelpers.contrib.hardening.ssh.checks",
            "charmhelpers.contrib.hardening.ssh.checks.config",
            "charmhelpers.contrib.hardening.templating",
            "charmhelpers.contrib.hardening.utils",
            "charmhelpers.contrib.mellanox",
            "charmhelpers.contrib.mellanox.infiniband",
            "charmhelpers.contrib.network",
            "charmhelpers.contrib.network.ip",
            "charmhelpers.contrib.network.ovs",
            "charmhelpers.contrib.network.ufw",
            "charmhelpers.contrib.openstack",
            "charmhelpers.contrib.openstack.alternatives",
            "charmhelpers.contrib.openstack.amulet",
            "charmhelpers.contrib.openstack.amulet.deployment",
            "charmhelpers.contrib.openstack.amulet.utils",
            "charmhelpers.contrib.openstack.context",
            "charmhelpers.contrib.openstack.exceptions",
            "charmhelpers.contrib.openstack.files",
            "charmhelpers.contrib.openstack.ha",
            "charmhelpers.contrib.openstack.ha.utils",
            "charmhelpers.contrib.openstack.ip",
            "charmhelpers.contrib.openstack.keystone",
            "charmhelpers.contrib.openstack.neutron",
            "charmhelpers.contrib.openstack.templates",
            "charmhelpers.contrib.openstack.templating",
            "charmhelpers.contrib.openstack.utils",
            "charmhelpers.contrib.peerstorage",
            "charmhelpers.contrib.python",
            "charmhelpers.contrib.python.debug",
            "charmhelpers.contrib.python.packages",
            "charmhelpers.contrib.python.rpdb",
            "charmhelpers.contrib.python.version",
            "charmhelpers.contrib.saltstack",
            "charmhelpers.contrib.ssl",
            "charmhelpers.contrib.ssl.service",
            "charmhelpers.contrib.storage",
            "charmhelpers.contrib.storage.linux",
            "charmhelpers.contrib.storage.linux.ceph",
            "charmhelpers.contrib.storage.linux.loopback",
            "charmhelpers.contrib.storage.linux.lvm",
            "charmhelpers.contrib.storage.linux.utils",
            "charmhelpers.contrib.templating",
            "charmhelpers.contrib.templating.contexts",
            "charmhelpers.contrib.templating.jinja",
            "charmhelpers.contrib.templating.pyformat",
            "charmhelpers.contrib.unison",
            "charmhelpers.coordinator",
            "charmhelpers.core",
            "charmhelpers.core.decorators",
            "charmhelpers.core.files",
            "charmhelpers.core.fstab",
            "charmhelpers.core.hookenv",
            "charmhelpers.core.host",
            "charmhelpers.core.host_factory",
            "charmhelpers.core.host_factory.centos",
            "charmhelpers.core.host_factory.ubuntu",
            "charmhelpers.core.hugepage",
            "charmhelpers.core.kernel",
            "charmhelpers.core.kernel_factory",
            "charmhelpers.core.kernel_factory.centos",
            "charmhelpers.core.kernel_factory.ubuntu",
            "charmhelpers.core.services",
            "charmhelpers.core.services.base",
            "charmhelpers.core.services.helpers",
            "charmhelpers.core.strutils",
            "charmhelpers.core.sysctl",
            "charmhelpers.core.templating",
            "charmhelpers.core.unitdata",
            "charmhelpers.fetch",
            "charmhelpers.fetch.archiveurl",
            "charmhelpers.fetch.bzrurl",
            "charmhelpers.fetch.centos",
            "charmhelpers.fetch.giturl",
            "charmhelpers.fetch.snap",
            "charmhelpers.fetch.ubuntu",
            "charmhelpers.osplatform",
            "charmhelpers.payload",
            "charmhelpers.payload.archive",
            "charmhelpers.payload.execd",
            "tests",
            "tests.cli",
            "tests.cli.test_cmdline",
            "tests.cli.test_function_signature_analysis",
            "tests.context",
            "tests.context.test_context",
            "tests.contrib",
            "tests.contrib.amulet",
            "tests.contrib.amulet.test_utils",
            "tests.contrib.ansible",
            "tests.contrib.ansible.test_ansible",
            "tests.contrib.benchmark",
            "tests.contrib.benchmark.test_benchmark",
            "tests.contrib.charmhelpers",
            "tests.contrib.charmhelpers.test_charmhelpers",
            "tests.contrib.charmsupport",
            "tests.contrib.charmsupport.test_nrpe",
            "tests.contrib.database",
            "tests.contrib.database.test_mysql",
            "tests.contrib.hahelpers",
            "tests.contrib.hahelpers.test_apache_utils",
            "tests.contrib.hahelpers.test_cluster_utils",
            "tests.contrib.hardening",
            "tests.contrib.hardening.apache",
            "tests.contrib.hardening.apache.checks",
            "tests.contrib.hardening.apache.checks.test_config",
            "tests.contrib.hardening.audits",
            "tests.contrib.hardening.audits.test_apache_audits",
            "tests.contrib.hardening.audits.test_apt_audits",
            "tests.contrib.hardening.audits.test_base_audits",
            "tests.contrib.hardening.audits.test_file_audits",
            "tests.contrib.hardening.host",
            "tests.contrib.hardening.host.checks",
            "tests.contrib.hardening.host.checks.test_apt",
            "tests.contrib.hardening.host.checks.test_limits",
            "tests.contrib.hardening.host.checks.test_login",
            "tests.contrib.hardening.host.checks.test_minimize_access",
            "tests.contrib.hardening.host.checks.test_pam",
            "tests.contrib.hardening.host.checks.test_profile",
            "tests.contrib.hardening.host.checks.test_securetty",
            "tests.contrib.hardening.host.checks.test_suid_guid",
            "tests.contrib.hardening.mysql",
            "tests.contrib.hardening.mysql.checks",
            "tests.contrib.hardening.mysql.checks.test_config",
            "tests.contrib.hardening.ssh",
            "tests.contrib.hardening.ssh.checks",
            "tests.contrib.hardening.ssh.checks.test_config",
            "tests.contrib.hardening.test_defaults",
            "tests.contrib.hardening.test_harden",
            "tests.contrib.hardening.test_templating",
            "tests.contrib.hardening.test_utils",
            "tests.contrib.network",
            "tests.contrib.network.test_ip",
            "tests.contrib.network.test_ovs",
            "tests.contrib.network.test_ufw",
            "tests.contrib.openstack",
            "tests.contrib.openstack.ha",
            "tests.contrib.openstack.ha.test_ha_utils",
            "tests.contrib.openstack.test_alternatives",
            "tests.contrib.openstack.test_ip",
            "tests.contrib.openstack.test_keystone_utils",
            "tests.contrib.openstack.test_neutron_utils",
            "tests.contrib.openstack.test_openstack_utils",
            "tests.contrib.openstack.test_os_contexts",
            "tests.contrib.openstack.test_os_templating",
            "tests.contrib.openstack.test_os_utils",
            "tests.contrib.peerstorage",
            "tests.contrib.peerstorage.test_peerstorage",
            "tests.contrib.python",
            "tests.contrib.python.test_debug",
            "tests.contrib.python.test_packages",
            "tests.contrib.python.test_version",
            "tests.contrib.saltstack",
            "tests.contrib.saltstack.test_saltstates",
            "tests.contrib.ssl",
            "tests.contrib.ssl.test_service",
            "tests.contrib.ssl.test_ssl",
            "tests.contrib.storage",
            "tests.contrib.storage.test_linux_ceph",
            "tests.contrib.storage.test_linux_storage_loopback",
            "tests.contrib.storage.test_linux_storage_lvm",
            "tests.contrib.storage.test_linux_storage_utils",
            "tests.contrib.templating",
            "tests.contrib.templating.test_contexts",
            "tests.contrib.templating.test_jinja",
            "tests.contrib.templating.test_pyformat",
            "tests.contrib.unison",
            "tests.contrib.unison.test_unison",
            "tests.coordinator",
            "tests.coordinator.test_coordinator",
            "tests.core",
            "tests.core.test_files",
            "tests.core.test_fstab",
            "tests.core.test_hookenv",
            "tests.core.test_host",
            "tests.core.test_hugepage",
            "tests.core.test_kernel",
            "tests.core.test_services",
            "tests.core.test_strutils",
            "tests.core.test_sysctl",
            "tests.core.test_templating",
            "tests.core.test_unitdata",
            "tests.fetch",
            "tests.fetch.test_archiveurl",
            "tests.fetch.test_bzrurl",
            "tests.fetch.test_fetch",
            "tests.fetch.test_giturl",
            "tests.fetch.test_snap",
            "tests.helpers",
            "tests.payload",
            "tests.payload.test_archive",
            "tests.payload.test_execd",
            "tests.tools",
            "tests.tools.test_charm_helper_sync",
            "tools",
            "tools.charm_helpers_sync",
            "tools.charm_helpers_sync.charm_helpers_sync"
        ],
        "version": "0.15.0"
    },
    "charmrunner": {
        "cmdline": [],
        "modules": [
            "charmrunner",
            "charmrunner.dumpzk",
            "charmrunner.env",
            "charmrunner.graph",
            "charmrunner.loader",
            "charmrunner.planner",
            "charmrunner.recorder",
            "charmrunner.runner",
            "charmrunner.sftp",
            "charmrunner.snapshot",
            "charmrunner.watcher"
        ],
        "version": "0.2.5"
    },
    "charms.benchmark": {
        "cmdline": [],
        "modules": [
            "charms",
            "charms.benchmark",
            "charms.benchmark.cli",
            "charms.benchmark.cli.actions",
            "charms.benchmark.cli.composite",
            "charms.benchmark.cli.data",
            "charms.benchmark.cli.finish",
            "charms.benchmark.cli.meta",
            "charms.benchmark.cli.raw",
            "charms.benchmark.cli.start",
            "tests",
            "tests.helpers",
            "tests.test_charms-benchmark",
            "tests.test_cli"
        ],
        "version": "1.0.5"
    },
    "charms.docker": {
        "cmdline": [],
        "modules": [
            "charms.docker",
            "charms.docker.compose",
            "charms.docker.docker",
            "charms.docker.dockeropts",
            "charms.docker.runner",
            "charms.docker.workspace"
        ],
        "version": "0.1.16"
    },
    "charms.reactive": {
        "cmdline": [
            "charms.reactive",
            "charms.reactive.sh"
        ],
        "modules": [
            "charms",
            "charms.reactive",
            "charms.reactive.bus",
            "charms.reactive.cli",
            "charms.reactive.decorators",
            "charms.reactive.helpers",
            "charms.reactive.relations"
        ],
        "version": "0.4.7"
    },
    "charms.templating.jinja2": {
        "cmdline": [],
        "modules": [
            "charms",
            "charms.templating",
            "charms.templating.jinja2"
        ],
        "version": "1.0.2"
    },
    "charmworldlib": {
        "cmdline": [],
        "modules": [
            "charmworldlib",
            "charmworldlib.api",
            "charmworldlib.bundle",
            "charmworldlib.charm",
            "charmworldlib.utils"
        ],
        "version": "0.4.2"
    },
    "charmy": {
        "cmdline": [
            "charmy"
        ],
        "modules": [
            "charmy",
            "charmy.base",
            "charmy.commands",
            "charmy.commands.installer",
            "charmy.constants",
            "charmy.helpers",
            "charmy.installers",
            "charmy.installers.linux",
            "charmy.installers.linux.installer",
            "charmy.installers.linux.other",
            "charmy.installers.linux.other.installer",
            "charmy.installers.linux.ubuntu",
            "charmy.installers.linux.ubuntu.constants",
            "charmy.installers.linux.ubuntu.installer",
            "charmy.test",
            "charmy.utils"
        ],
        "version": "0.1.7"
    },
    "charon": {
        "cmdline": [],
        "modules": [
            "charon",
            "charon.api",
            "charon.loader",
            "charon.server"
        ],
        "version": "0.1.2"
    },
    "charon-client": {
        "cmdline": [],
        "modules": [
            "charonrpc"
        ],
        "version": "0.9.14"
    },
    "charpyls": {
        "cmdline": [],
        "modules": [
            "jpeg_ls",
            "jpeg_ls.CharLS",
            "jpeg_ls.data_io",
            "jpeg_ls.example"
        ],
        "version": "1.0.0"
    },
    "charset": {
        "cmdline": [],
        "modules": [
            "charset",
            "charset.cmd"
        ],
        "version": "1.0.1"
    },
    "chartbeatpy": {
        "cmdline": [],
        "modules": [
            "chartbeatpy"
        ],
        "version": "0.2.1"
    },
    "chartdirector-for-python": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "charticle": {
        "cmdline": [],
        "modules": [
            "charticle",
            "charticle._validators",
            "charticle.hierarchy",
            "charticle.venn"
        ],
        "version": "0.0.3"
    },
    "chartio": {
        "cmdline": [
            "chartio_connect",
            "chartio_setup"
        ],
        "modules": [
            "version"
        ],
        "version": "6.0.1"
    },
    "chartjs": {
        "cmdline": [],
        "modules": [
            "chartjs",
            "chartjs.chartjs"
        ],
        "version": "1.2"
    },
    "chartkick": {
        "cmdline": [],
        "modules": [
            "chartkick",
            "chartkick.ext",
            "chartkick.options",
            "chartkick.template",
            "chartkick.templatetags",
            "chartkick.templatetags.chartkick"
        ],
        "version": "0.5.0"
    },
    "chartmogul": {
        "cmdline": [],
        "modules": [
            "chartmogul",
            "chartmogul.api",
            "chartmogul.api.activity",
            "chartmogul.api.attributes",
            "chartmogul.api.config",
            "chartmogul.api.custom_attrs",
            "chartmogul.api.customer",
            "chartmogul.api.data_source",
            "chartmogul.api.invoice",
            "chartmogul.api.metrics",
            "chartmogul.api.ping",
            "chartmogul.api.plan",
            "chartmogul.api.subscription",
            "chartmogul.api.tags",
            "chartmogul.api.transaction",
            "chartmogul.errors",
            "chartmogul.imp",
            "chartmogul.imp.invoice",
            "chartmogul.imp.subscription",
            "chartmogul.imp.transaction",
            "chartmogul.resource",
            "chartmogul.util"
        ],
        "version": "1.1.2"
    },
    "chartpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "charts": {
        "cmdline": [],
        "modules": [
            "charts",
            "charts.chart",
            "charts.core",
            "charts.data",
            "charts.jsonencoder",
            "charts.options",
            "charts.plot",
            "charts.server",
            "charts.settings"
        ],
        "version": "0.4.6"
    },
    "charty": {
        "cmdline": [],
        "modules": [
            "charty",
            "charty.charty",
            "charty.example",
            "charty.utils",
            "charty.utils.nice"
        ],
        "version": "0.1.0"
    },
    "chash": {
        "cmdline": [],
        "modules": [
            "chash",
            "chash.ccache",
            "chash.chash"
        ],
        "version": "0.1.1"
    },
    "chassis": {
        "cmdline": [],
        "modules": [
            "chassis",
            "chassis.models",
            "chassis.services",
            "chassis.services.cache",
            "chassis.services.data_context",
            "chassis.services.dependency_injection",
            "chassis.services.dependency_injection.resolver",
            "chassis.test",
            "chassis.test.example_classes",
            "chassis.test.services",
            "chassis.test.services.cache_test",
            "chassis.test.services.data_context_test",
            "chassis.test.services.dependency_injection",
            "chassis.test.services.dependency_injection.resolver_test",
            "chassis.test.util",
            "chassis.test.util.decorators_test",
            "chassis.test.util.encoders_test",
            "chassis.test.util.params_test",
            "chassis.test.util.validators_test",
            "chassis.tools",
            "chassis.tools.lint",
            "chassis.util",
            "chassis.util.decorators",
            "chassis.util.encoders",
            "chassis.util.params",
            "chassis.util.tree",
            "chassis.util.validators",
            "chassis.web"
        ],
        "version": "0.1.6"
    },
    "chat": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.5.dev39"
    },
    "chatapp": {
        "cmdline": [],
        "modules": [
            "client",
            "server"
        ],
        "version": "0.1"
    },
    "chatbot": {
        "cmdline": [],
        "modules": [
            "chatbot"
        ],
        "version": "1.5.2b"
    },
    "chatbot-script": {
        "cmdline": [],
        "modules": [
            "chatbotx1",
            "chatbotx1.AWNDatabaseManagement",
            "chatbotx1.DB",
            "chatbotx1.Female_chatbot",
            "chatbotx1.Male_chatbot",
            "chatbotx1.ar_autocorrectlist",
            "chatbotx1.ar_ctype",
            "chatbotx1.ar_ghalat",
            "chatbotx1.arabic_const",
            "chatbotx1.main_chatbot",
            "chatbotx1.normalize",
            "chatbotx1.stanford-postagger-full-2015-04-20",
            "chatbotx1.stanford-postagger-full-2015-04-20.data",
            "chatbotx1.stanford-postagger-full-2015-04-20.models",
            "chatbotx1.stem_const",
            "chatbotx1.stemming"
        ],
        "version": "1.20.0"
    },
    "chatbotai": {
        "cmdline": [],
        "modules": [
            "chatbot",
            "chatbot.DefaultSubs",
            "chatbot.learn"
        ],
        "version": "0.1.2.4"
    },
    "chatcraft": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chatexchange": {
        "cmdline": [],
        "modules": [
            "chatexchange",
            "chatexchange._utils",
            "chatexchange.browser",
            "chatexchange.client",
            "chatexchange.events",
            "chatexchange.messages",
            "chatexchange.rooms",
            "chatexchange.users"
        ],
        "version": "0.0.3"
    },
    "chatfirst": {
        "cmdline": [],
        "modules": [
            "chatfirst",
            "chatfirst.auth",
            "chatfirst.client",
            "chatfirst.models",
            "chatfirst.utils"
        ],
        "version": "0.2"
    },
    "chatimusmaximus": {
        "cmdline": [],
        "modules": [
            "chatimusmaximus",
            "chatimusmaximus.gui",
            "chatimusmaximus.gui.central_widget",
            "chatimusmaximus.gui.command_line",
            "chatimusmaximus.gui.main_window",
            "chatimusmaximus.gui.menu_bar",
            "chatimusmaximus.gui.message_area",
            "chatimusmaximus.gui.models",
            "chatimusmaximus.gui.models.settings_model",
            "chatimusmaximus.gui.status_bar",
            "chatimusmaximus.messaging",
            "chatimusmaximus.scratch"
        ],
        "version": "0.5.1"
    },
    "chatpy": {
        "cmdline": [],
        "modules": [
            "chatpy",
            "chatpy.api",
            "chatpy.auth",
            "chatpy.binder",
            "chatpy.cache",
            "chatpy.error",
            "chatpy.models",
            "chatpy.parsers",
            "chatpy.utils"
        ],
        "version": "0.2.2"
    },
    "chatrelater": {
        "cmdline": [],
        "modules": [
            "chatrelater",
            "chatrelater.analyzer",
            "chatrelater.nicknames",
            "chatrelater.serialization",
            "chatrelater.visualization"
        ],
        "version": "0.3"
    },
    "chatter": {
        "cmdline": [],
        "modules": [
            "chatter",
            "chatter.base"
        ],
        "version": "0.1.3"
    },
    "chatterbot": {
        "cmdline": [],
        "modules": [
            "chatterbot",
            "chatterbot.adapters",
            "chatterbot.chatterbot",
            "chatterbot.comparisons",
            "chatterbot.conversation",
            "chatterbot.conversation.response",
            "chatterbot.conversation.session",
            "chatterbot.conversation.statement",
            "chatterbot.corpus",
            "chatterbot.corpus.corpus",
            "chatterbot.ext",
            "chatterbot.ext.django_chatterbot",
            "chatterbot.ext.django_chatterbot.admin",
            "chatterbot.ext.django_chatterbot.apps",
            "chatterbot.ext.django_chatterbot.factories",
            "chatterbot.ext.django_chatterbot.management",
            "chatterbot.ext.django_chatterbot.management.commands",
            "chatterbot.ext.django_chatterbot.management.commands.train",
            "chatterbot.ext.django_chatterbot.migrations",
            "chatterbot.ext.django_chatterbot.migrations.0001_initial",
            "chatterbot.ext.django_chatterbot.migrations.0002_statement_extra_data",
            "chatterbot.ext.django_chatterbot.migrations.0003_change_occurrence_default",
            "chatterbot.ext.django_chatterbot.migrations.0004_rename_in_response_to",
            "chatterbot.ext.django_chatterbot.migrations.0005_statement_created_at",
            "chatterbot.ext.django_chatterbot.migrations.0006_create_conversation",
            "chatterbot.ext.django_chatterbot.models",
            "chatterbot.ext.django_chatterbot.settings",
            "chatterbot.ext.django_chatterbot.urls",
            "chatterbot.ext.django_chatterbot.views",
            "chatterbot.filters",
            "chatterbot.input",
            "chatterbot.input.gitter",
            "chatterbot.input.hipchat",
            "chatterbot.input.input_adapter",
            "chatterbot.input.mailgun",
            "chatterbot.input.microsoft",
            "chatterbot.input.terminal",
            "chatterbot.input.variable_input_type_adapter",
            "chatterbot.logic",
            "chatterbot.logic.best_match",
            "chatterbot.logic.logic_adapter",
            "chatterbot.logic.low_confidence",
            "chatterbot.logic.mathematical_evaluation",
            "chatterbot.logic.multi_adapter",
            "chatterbot.logic.no_knowledge_adapter",
            "chatterbot.logic.specific_response",
            "chatterbot.logic.time_adapter",
            "chatterbot.output",
            "chatterbot.output.gitter",
            "chatterbot.output.hipchat",
            "chatterbot.output.mailgun",
            "chatterbot.output.microsoft",
            "chatterbot.output.output_adapter",
            "chatterbot.output.terminal",
            "chatterbot.parsing",
            "chatterbot.preprocessors",
            "chatterbot.queues",
            "chatterbot.response_selection",
            "chatterbot.storage",
            "chatterbot.storage.django_storage",
            "chatterbot.storage.jsonfile",
            "chatterbot.storage.mongodb",
            "chatterbot.storage.storage_adapter",
            "chatterbot.trainers",
            "chatterbot.utils"
        ],
        "version": "0.6.0"
    },
    "chatterbot-corpus": {
        "cmdline": [],
        "modules": [
            "chatterbot_corpus",
            "chatterbot_corpus.corpus"
        ],
        "version": "0.0.1"
    },
    "chatterbot-voice": {
        "cmdline": [],
        "modules": [
            "chatterbot_voice",
            "chatterbot_voice.voice"
        ],
        "version": "0.1.3"
    },
    "chatterbot-weather": {
        "cmdline": [],
        "modules": [
            "chatterbot_weather",
            "chatterbot_weather.weather_adapter"
        ],
        "version": "0.1.1"
    },
    "chatterbox": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chatterlearning": {
        "cmdline": [],
        "modules": [
            "chatter_learning",
            "chatter_learning.brains",
            "chatter_learning.brains.base_brain",
            "chatter_learning.brains.closest_mean",
            "chatter_learning.brains.closest_method",
            "chatter_learning.brains.pick_strategy",
            "chatter_learning.chatter",
            "chatter_learning.exceptions",
            "chatter_learning.main",
            "chatter_learning.store_adapters",
            "chatter_learning.store_adapters.base_store",
            "chatter_learning.store_adapters.mongodb",
            "examples",
            "examples.demo",
            "tests",
            "tests.brains_tests",
            "tests.brains_tests.test_closest_mean",
            "tests.store_adapters_tests",
            "tests.store_adapters_tests.test_mongodb"
        ],
        "version": "1.0.9"
    },
    "chattie": {
        "cmdline": [],
        "modules": [
            "chattie",
            "chattie.bot",
            "chattie.cli",
            "chattie.connectors",
            "chattie.connectors.matrix",
            "chattie.connectors.telegram",
            "chattie.connectors.term",
            "chattie.plugins",
            "chattie.tricks"
        ],
        "version": "0.1.6"
    },
    "chattyparallel": {
        "cmdline": [],
        "modules": [
            "chattyparallel"
        ],
        "version": "0.3"
    },
    "chausette": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chaussette": {
        "cmdline": [],
        "modules": [
            "chaussette",
            "chaussette._paste",
            "chaussette.backend",
            "chaussette.backend._bjoern",
            "chaussette.backend._eventlet",
            "chaussette.backend._fastgevent",
            "chaussette.backend._gevent",
            "chaussette.backend._geventwebsocket",
            "chaussette.backend._geventws4py",
            "chaussette.backend._meinheld",
            "chaussette.backend._socketio",
            "chaussette.backend._tornado",
            "chaussette.backend._waitress",
            "chaussette.backend._wsgiref",
            "chaussette.server",
            "chaussette.tests",
            "chaussette.tests.support",
            "chaussette.tests.test_backend",
            "chaussette.tests.test_paste",
            "chaussette.tests.test_server",
            "chaussette.tests.test_util",
            "chaussette.util"
        ],
        "version": "1.3.0"
    },
    "chaversine": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.0"
    },
    "chavo": {
        "cmdline": [],
        "modules": [
            "app",
            "app.chavo",
            "app.package_store",
            "app.package_store.constructor",
            "app.package_store.constructor.constructor",
            "app.package_store.oscar",
            "app.package_store.oscar.components",
            "app.package_store.oscar.components.boot_box",
            "app.package_store.oscar.components.boot_nav",
            "app.package_store.oscar.components.bootstrap_form",
            "app.package_store.oscar.components.css_box",
            "app.package_store.oscar.components.html_box",
            "app.package_store.oscar.components.materialize_form",
            "app.package_store.oscar.components.portfolio_materialize",
            "app.package_store.oscar.oscar"
        ],
        "version": "0.1.13"
    },
    "chazutsu": {
        "cmdline": [],
        "modules": [
            "chazutsu",
            "chazutsu.datasets",
            "chazutsu.datasets.customer_review",
            "chazutsu.datasets.framework",
            "chazutsu.datasets.framework.dataset",
            "chazutsu.datasets.framework.resource",
            "chazutsu.datasets.framework.xtqdm",
            "chazutsu.datasets.imdb",
            "chazutsu.datasets.movie_review",
            "chazutsu.datasets.news_group20",
            "chazutsu.datasets.ptb",
            "chazutsu.datasets.reuters_news",
            "chazutsu.datasets.wikitext103",
            "chazutsu.datasets.wikitext2"
        ],
        "version": "0.4.3"
    },
    "chclassifier": {
        "cmdline": [],
        "modules": [
            "chClassifier",
            "chClassifier.base_classifier",
            "chClassifier.phrase_classifier"
        ],
        "version": "0.6.4"
    },
    "chconsole": {
        "cmdline": [],
        "modules": [
            "chconsole",
            "chconsole._version",
            "chconsole.entry",
            "chconsole.entry.chat_area",
            "chconsole.entry.chat_area_filter",
            "chconsole.entry.code_area",
            "chconsole.entry.code_area_filter",
            "chconsole.entry.entry",
            "chconsole.entry.history",
            "chconsole.entry.history_filter",
            "chconsole.entry.line_prompt",
            "chconsole.entry.line_prompt_filter",
            "chconsole.entry.named_stacked_layout",
            "chconsole.main",
            "chconsole.main.chat_console_app",
            "chconsole.main.expanded_main_window",
            "chconsole.main.launch_app",
            "chconsole.main.push_button",
            "chconsole.main.statusbar",
            "chconsole.main.toggle_button",
            "chconsole.media",
            "chconsole.media.image",
            "chconsole.media.line_iter",
            "chconsole.media.right_aligned",
            "chconsole.media.text",
            "chconsole.media.text_register",
            "chconsole.menus",
            "chconsole.menus.image_context_menu",
            "chconsole.menus.text_context_menu",
            "chconsole.messages",
            "chconsole.messages.export_item",
            "chconsole.messages.import_item",
            "chconsole.messages.kernel_message",
            "chconsole.messages.source",
            "chconsole.pager",
            "chconsole.pager.pager",
            "chconsole.pager.pager_filter",
            "chconsole.receiver",
            "chconsole.receiver.outbuffer",
            "chconsole.receiver.receiver",
            "chconsole.receiver.receiver_filter",
            "chconsole.run_kernel",
            "chconsole.run_kernel.chc_python",
            "chconsole.standards",
            "chconsole.standards.base_event_filter",
            "chconsole.standards.document_config",
            "chconsole.standards.exceptions",
            "chconsole.standards.importable",
            "chconsole.standards.selective_highlighter",
            "chconsole.standards.text_area_filter",
            "chconsole.standards.viewport_filter",
            "chconsole.storage",
            "chconsole.storage.default_names",
            "chconsole.storage.file_chooser",
            "chconsole.storage.json_storage",
            "chconsole.storage.paths",
            "chconsole.storage.persistent",
            "chconsole.tab",
            "chconsole.tab.importer",
            "chconsole.tab.tab_content",
            "chconsole.tab.tab_main"
        ],
        "version": "0.1.8"
    },
    "chdkptp.py": {
        "cmdline": [],
        "modules": [
            "chdkptp",
            "chdkptp.device",
            "chdkptp.lua",
            "chdkptp.util"
        ],
        "version": "0.1.3"
    },
    "chealpy": {
        "cmdline": [],
        "modules": [
            "chealpy",
            "chealpy.high",
            "chealpy.low",
            "chealpy.test"
        ],
        "version": "0.1.0"
    },
    "cheap": {
        "cmdline": [],
        "modules": [
            "cheap"
        ],
        "version": "0.1"
    },
    "cheapnamedtuple": {
        "cmdline": [],
        "modules": [
            "cheapnamedtuple"
        ],
        "version": "1.1.2"
    },
    "cheat": {
        "cmdline": [
            "cheat"
        ],
        "modules": [
            "cheat",
            "cheat.cheatsheets",
            "cheat.sheet",
            "cheat.sheets",
            "cheat.test",
            "cheat.utils"
        ],
        "version": "2.2.0"
    },
    "cheat-ext": {
        "cmdline": [],
        "modules": [
            "cheat_ext",
            "cheat_ext.exceptions",
            "cheat_ext.info",
            "cheat_ext.installer",
            "cheat_ext.linker",
            "cheat_ext.main",
            "cheat_ext.tests",
            "cheat_ext.tests.test_info",
            "cheat_ext.tests.test_installer",
            "cheat_ext.tests.test_linker",
            "cheat_ext.tests.test_utils",
            "cheat_ext.utils",
            "cheat_ext.version"
        ],
        "version": "0.1"
    },
    "cheater": {
        "cmdline": [],
        "modules": [
            "cheater",
            "cheater.app",
            "cheater.cheatsheets",
            "cheater.cheatsheets_discovery",
            "cheater.cli",
            "cheater.render"
        ],
        "version": "0.1.2"
    },
    "chebotarev": {
        "cmdline": [],
        "modules": [
            "Chebotarev"
        ],
        "version": "0.1.0"
    },
    "chebpy": {
        "cmdline": [],
        "modules": [
            "chebpy",
            "chebpy.cheb",
            "chebpy.cheba",
            "chebpy.chebd",
            "chebpy.chebi",
            "chebpy.chebq",
            "chebpy.chebt",
            "chebpy.integral",
            "chebpy.misc"
        ],
        "version": "0.2"
    },
    "check": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "check-arg": {
        "cmdline": [],
        "modules": [
            "check_arg",
            "check_arg.test_valid"
        ],
        "version": "0.1.3"
    },
    "check-bacula": {
        "cmdline": [],
        "modules": [
            "check_bacula",
            "check_bacula.check_bacula"
        ],
        "version": "1.0.0"
    },
    "check-docking": {
        "cmdline": [],
        "modules": [
            "check_docking",
            "check_docking.inspect",
            "check_docking.management",
            "check_docking.management.commands",
            "check_docking.management.commands.inspectprofile",
            "check_docking.middleware",
            "check_docking.stored",
            "check_docking.stored.django",
            "check_docking.stored.django.admin",
            "check_docking.stored.django.models",
            "check_docking.stored.django.tests",
            "check_docking.stored.django.views",
            "check_docking.utility",
            "check_docking.utility.exports",
            "check_docking.utility.imports",
            "check_docking.utility.urls_conf",
            "check_docking.utility.urls_data"
        ],
        "version": "1.2"
    },
    "check-email-status": {
        "cmdline": [],
        "modules": [
            "check_email_status",
            "check_email_status.resolvers"
        ],
        "version": "1.1.3"
    },
    "check-filemaker": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.2"
    },
    "check-ganglia-metric": {
        "cmdline": [],
        "modules": [],
        "version": "2012.02.28"
    },
    "check-graylog-lag": {
        "cmdline": [
            "check_graylog_lag"
        ],
        "modules": [],
        "version": "1.0.1"
    },
    "check-gunicorn": {
        "cmdline": [
            "check_gunicorn.py"
        ],
        "modules": [],
        "version": "0.0.3.6"
    },
    "check-iftraffic-nrpe": {
        "cmdline": [
            "check_iftraffic_nrpe.py"
        ],
        "modules": [],
        "version": "0.12.1"
    },
    "check-list": {
        "cmdline": [],
        "modules": [
            "check_list",
            "check_list2",
            "print_lol"
        ],
        "version": "1.2.0"
    },
    "check-manifest": {
        "cmdline": [],
        "modules": [],
        "version": "0.35"
    },
    "check-megaraid": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "check-mk-web-api": {
        "cmdline": [],
        "modules": [
            "check_mk_web_api",
            "check_mk_web_api.exception"
        ],
        "version": "1.1"
    },
    "check-mysql-slave": {
        "cmdline": [],
        "modules": [
            "check_mysql_slave"
        ],
        "version": "0.2.1"
    },
    "check-no-scheduled-ec2-events": {
        "cmdline": [],
        "modules": [
            "check_no_scheduled_ec2_events"
        ],
        "version": "0.2.1"
    },
    "check-nscp": {
        "cmdline": [
            "check_nscp"
        ],
        "modules": [],
        "version": "0.1.1"
    },
    "check-paloalto": {
        "cmdline": [],
        "modules": [
            "check_pa",
            "check_pa.check_paloalto",
            "check_pa.modules",
            "check_pa.modules.certificate",
            "check_pa.modules.diskspace",
            "check_pa.modules.environmental",
            "check_pa.modules.load",
            "check_pa.modules.sessioninfo",
            "check_pa.modules.thermal",
            "check_pa.modules.throughput",
            "check_pa.modules.useragent",
            "check_pa.utils",
            "check_pa.xml_reader"
        ],
        "version": "0.3.2"
    },
    "check-po": {
        "cmdline": [],
        "modules": [
            "check_po",
            "check_po._compat",
            "check_po.check_urls",
            "check_po.pochecker",
            "check_po.podiff",
            "check_po.tests",
            "check_po.tests.check_po",
            "check_po.tests.check_urls",
            "check_po.tests.podiff"
        ],
        "version": "0.7.0"
    },
    "check-project": {
        "cmdline": [],
        "modules": [
            "check_project",
            "check_project.cli",
            "check_project.gitproject"
        ],
        "version": "0.1.0"
    },
    "check-puppet-agent": {
        "cmdline": [],
        "modules": [
            "check_puppet_agent"
        ],
        "version": "1.0.0"
    },
    "check-puppetdb-node": {
        "cmdline": [],
        "modules": [
            "check_puppetdb_node"
        ],
        "version": "0.0.1"
    },
    "check-qbeanstalk": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "check-rabbitmq-queues": {
        "cmdline": [],
        "modules": [
            "check_rabbitmq_queues",
            "check_rabbitmq_queues.check"
        ],
        "version": "1.0.2"
    },
    "check-reserved-instances": {
        "cmdline": [],
        "modules": [
            "check_reserved_instances",
            "check_reserved_instances.calculate",
            "check_reserved_instances.config",
            "check_reserved_instances.report"
        ],
        "version": "0.0.6"
    },
    "check-run-over": {
        "cmdline": [],
        "modules": [
            "check_run_over",
            "check_run_over.check_run_over"
        ],
        "version": "0.1a"
    },
    "check-s3-bucket": {
        "cmdline": [],
        "modules": [
            "check_s3_bucket"
        ],
        "version": "0.1.0"
    },
    "check-springboot": {
        "cmdline": [
            "check_springboot"
        ],
        "modules": [
            "check_springboot"
        ],
        "version": "0.1"
    },
    "check-tier": {
        "cmdline": [],
        "modules": [
            "check_tier",
            "check_tier.management",
            "check_tier.management.commands",
            "check_tier.management.commands.get_tier"
        ],
        "version": "1.0.0.3"
    },
    "check-tls-certs": {
        "cmdline": [],
        "modules": [
            "check_tls_certs"
        ],
        "version": "0.9.1"
    },
    "check-x224": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "check50": {
        "cmdline": [
            "check50"
        ],
        "modules": [],
        "version": "0.0.0"
    },
    "checkbed": {
        "cmdline": [],
        "modules": [
            "checkbed",
            "checkbed.Checkcoll"
        ],
        "version": "0.2.8"
    },
    "checkbox-ng": {
        "cmdline": [],
        "modules": [
            "checkbox_ng",
            "checkbox_ng.certification",
            "checkbox_ng.commands",
            "checkbox_ng.commands.cli",
            "checkbox_ng.commands.launcher",
            "checkbox_ng.commands.newcli",
            "checkbox_ng.commands.sru",
            "checkbox_ng.commands.submit",
            "checkbox_ng.commands.test_sru",
            "checkbox_ng.config",
            "checkbox_ng.launcher",
            "checkbox_ng.launcher.checkbox_cli",
            "checkbox_ng.launcher.stages",
            "checkbox_ng.launcher.subcommands",
            "checkbox_ng.main",
            "checkbox_ng.misc",
            "checkbox_ng.test_certification",
            "checkbox_ng.test_config",
            "checkbox_ng.test_main",
            "checkbox_ng.test_misc",
            "checkbox_ng.tests",
            "checkbox_ng.tools",
            "checkbox_ng.ui"
        ],
        "version": "0.32.0"
    },
    "checkbox-support": {
        "cmdline": [],
        "modules": [
            "checkbox_support",
            "checkbox_support.contrib",
            "checkbox_support.contrib.xrandr",
            "checkbox_support.dbus",
            "checkbox_support.dbus.udisks2",
            "checkbox_support.helpers",
            "checkbox_support.helpers.human_readable_bytes",
            "checkbox_support.heuristics",
            "checkbox_support.heuristics.tests",
            "checkbox_support.heuristics.tests.test_udisks2",
            "checkbox_support.heuristics.udev",
            "checkbox_support.heuristics.udisks2",
            "checkbox_support.lib",
            "checkbox_support.lib.bit",
            "checkbox_support.lib.conversion",
            "checkbox_support.lib.dmi",
            "checkbox_support.lib.input",
            "checkbox_support.lib.path",
            "checkbox_support.lib.pci",
            "checkbox_support.lib.template",
            "checkbox_support.lib.tz",
            "checkbox_support.lib.usb",
            "checkbox_support.log_watcher",
            "checkbox_support.parsers",
            "checkbox_support.parsers.cpuinfo",
            "checkbox_support.parsers.cputable",
            "checkbox_support.parsers.dkms_info",
            "checkbox_support.parsers.dmidecode",
            "checkbox_support.parsers.efi",
            "checkbox_support.parsers.image_info",
            "checkbox_support.parsers.kernel_cmdline",
            "checkbox_support.parsers.lshwjson",
            "checkbox_support.parsers.meminfo",
            "checkbox_support.parsers.modinfo",
            "checkbox_support.parsers.modprobe",
            "checkbox_support.parsers.pactl",
            "checkbox_support.parsers.pci_config",
            "checkbox_support.parsers.submission",
            "checkbox_support.parsers.tests",
            "checkbox_support.parsers.tests.test_cpuinfo",
            "checkbox_support.parsers.tests.test_cputable",
            "checkbox_support.parsers.tests.test_dkms_info",
            "checkbox_support.parsers.tests.test_dmi",
            "checkbox_support.parsers.tests.test_dmidecode",
            "checkbox_support.parsers.tests.test_efi",
            "checkbox_support.parsers.tests.test_image_info",
            "checkbox_support.parsers.tests.test_modinfo",
            "checkbox_support.parsers.tests.test_modprobe",
            "checkbox_support.parsers.tests.test_pactl",
            "checkbox_support.parsers.tests.test_pci_config",
            "checkbox_support.parsers.tests.test_submission",
            "checkbox_support.parsers.tests.test_udevadm",
            "checkbox_support.parsers.tests.test_version",
            "checkbox_support.parsers.tests.test_xinput",
            "checkbox_support.parsers.udevadm",
            "checkbox_support.parsers.xinput",
            "checkbox_support.scripts",
            "checkbox_support.scripts.audio_settings",
            "checkbox_support.scripts.fwts_test",
            "checkbox_support.scripts.gputest_benchmark",
            "checkbox_support.scripts.network",
            "checkbox_support.scripts.run_watcher",
            "checkbox_support.scripts.tests",
            "checkbox_support.scripts.tests.test_audio_settings",
            "checkbox_support.scripts.tests.test_gputest_benchmark",
            "checkbox_support.tests",
            "checkbox_support.tests.test_human_readable_bytes",
            "checkbox_support.udev",
            "checkbox_support.vendor",
            "checkbox_support.vendor.mock"
        ],
        "version": "0.33.0"
    },
    "checkboxtable": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "checkdata": {
        "cmdline": [],
        "modules": [
            "checkData"
        ],
        "version": "1.2.0"
    },
    "checker": {
        "cmdline": [],
        "modules": [
            "checker",
            "checker.checkers",
            "checker.checkers.buildout",
            "checker.checkers.command",
            "checker.checkers.crontab",
            "checker.checkers.init",
            "checker.checkers.jenkins",
            "checker.checkers.os_packages",
            "checker.checkers.path",
            "checker.checkers.svn",
            "checker.tests",
            "checker.tests.base",
            "checker.tests.test_buildout",
            "checker.tests.test_crontab",
            "checker.tests.test_docs",
            "checker.tests.test_init",
            "checker.tests.test_jenkins",
            "checker.tests.test_main",
            "checker.tests.test_os_packages",
            "checker.tests.test_path"
        ],
        "version": "1.9"
    },
    "checkerproxy": {
        "cmdline": [],
        "modules": [
            "Checkerproxy"
        ],
        "version": "0.2"
    },
    "checkers": {
        "cmdline": [],
        "modules": [
            "checkers"
        ],
        "version": "0.2"
    },
    "checkexpect": {
        "cmdline": [],
        "modules": [
            "checkexpect",
            "checkexpect.core"
        ],
        "version": "1.0.19"
    },
    "checkfiledup": {
        "cmdline": [],
        "modules": [
            "checkFileDup"
        ],
        "version": "1.0.0"
    },
    "checkforlist": {
        "cmdline": [],
        "modules": [
            "CheckForList"
        ],
        "version": "1.0.0"
    },
    "checkfort": {
        "cmdline": [],
        "modules": [
            "checkfort",
            "checkfort.exceptions",
            "checkfort.filegen",
            "checkfort.files",
            "checkfort.forcheck",
            "checkfort.launcher",
            "checkfort.lexer",
            "checkfort.logging",
            "checkfort.parser"
        ],
        "version": "0.1.1"
    },
    "checkgear": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "checkgit": {
        "cmdline": [
            "checkgit"
        ],
        "modules": [
            "checkgit"
        ],
        "version": "0.1"
    },
    "checkio": {
        "cmdline": [],
        "modules": [
            "checkio",
            "checkio.ELEMENTARY",
            "checkio.ELEMENTARY.absolute-sorting",
            "checkio.ELEMENTARY.binary-count",
            "checkio.ELEMENTARY.boolean-algebra",
            "checkio.ELEMENTARY.building-base",
            "checkio.ELEMENTARY.common-words",
            "checkio.ELEMENTARY.count-inversions",
            "checkio.ELEMENTARY.days-diff",
            "checkio.ELEMENTARY.digits-multiplication",
            "checkio.ELEMENTARY.end-of-other",
            "checkio.ELEMENTARY.even-last",
            "checkio.ELEMENTARY.fizz-buzz",
            "checkio.ELEMENTARY.friends",
            "checkio.ELEMENTARY.i-love-python",
            "checkio.ELEMENTARY.index-power",
            "checkio.ELEMENTARY.monkey-typing",
            "checkio.ELEMENTARY.most-numbers",
            "checkio.ELEMENTARY.number-radix",
            "checkio.ELEMENTARY.pangram",
            "checkio.ELEMENTARY.right-to-left",
            "checkio.ELEMENTARY.secret-message",
            "checkio.ELEMENTARY.three-words",
            "checkio.HOME",
            "checkio.HOME.break-rings",
            "checkio.HOME.count-neighbours",
            "checkio.HOME.find-friends",
            "checkio.HOME.flatten-dict",
            "checkio.HOME.golden-pyramid",
            "checkio.HOME.house-password",
            "checkio.HOME.median",
            "checkio.HOME.min-max",
            "checkio.HOME.most-wanted-letter",
            "checkio.HOME.non-unique-elements",
            "checkio.HOME.open-labyrinth",
            "checkio.HOME.pawn-brotherhood",
            "checkio.HOME.prime-palindrome-golf",
            "checkio.HOME.roman-numerals",
            "checkio.HOME.solution-for-anything",
            "checkio.HOME.speechmodule",
            "checkio.HOME.the-best-number-ever",
            "checkio.HOME.x-o-referee",
            "checkio.Lib",
            "checkio.Lib.graph",
            "checkio.Lib.roman"
        ],
        "version": "2.0"
    },
    "checkio-cli": {
        "cmdline": [],
        "modules": [
            "checkio_cli",
            "checkio_cli.cli",
            "checkio_cli.config",
            "checkio_cli.config.exceptions",
            "checkio_cli.config.initial_config",
            "checkio_cli.config.settings",
            "checkio_cli.config.tools",
            "checkio_cli.folder",
            "checkio_cli.getters",
            "checkio_cli.initial",
            "checkio_cli.interfaces",
            "checkio_cli.interfaces.ifile",
            "checkio_cli.interfaces.ifolder",
            "checkio_cli.interfaces.igit",
            "checkio_cli.testing"
        ],
        "version": "0.0.21"
    },
    "checkio-docker": {
        "cmdline": [],
        "modules": [
            "checkio_docker",
            "checkio_docker.client",
            "checkio_docker.container",
            "checkio_docker.parser",
            "checkio_docker.utils"
        ],
        "version": "0.0.25"
    },
    "checkio-executor-python": {
        "cmdline": [],
        "modules": [
            "checkio_executor_python",
            "checkio_executor_python.client",
            "checkio_executor_python.execs",
            "checkio_executor_python.permissions",
            "checkio_executor_python.utils"
        ],
        "version": "0.0.9"
    },
    "checkio-task-tester": {
        "cmdline": [],
        "modules": [
            "checkio_task_tester",
            "checkio_task_tester.__settings_local",
            "checkio_task_tester.center_client",
            "checkio_task_tester.checkio",
            "checkio_task_tester.checkio.api",
            "checkio_task_tester.checkio.referees",
            "checkio_task_tester.checkio.referees.checkers",
            "checkio_task_tester.checkio.referees.code",
            "checkio_task_tester.checkio.referees.cover_codes",
            "checkio_task_tester.checkio.referees.inspectors",
            "checkio_task_tester.checkio.referees.io",
            "checkio_task_tester.checkio.referees.multicall",
            "checkio_task_tester.checkio.runner_types",
            "checkio_task_tester.checkio.signals",
            "checkio_task_tester.checkio.utils",
            "checkio_task_tester.echo",
            "checkio_task_tester.runner",
            "checkio_task_tester.settings",
            "checkio_task_tester.tools",
            "checkio_task_tester.uch",
            "checkio_task_tester.uch_server"
        ],
        "version": "0.0.7"
    },
    "checkist": {
        "cmdline": [],
        "modules": [
            "checkist",
            "checkist.checkist"
        ],
        "version": "1.0.0"
    },
    "checkit": {
        "cmdline": [],
        "modules": [
            "checkit"
        ],
        "version": "0.3.2b"
    },
    "checklist": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "checklistdsl": {
        "cmdline": [],
        "modules": [
            "checklistdsl",
            "checklistdsl.lex",
            "checklistdsl.parse",
            "checklistdsl.version"
        ],
        "version": "0.0.1.alpha.5"
    },
    "checklists": {
        "cmdline": [],
        "modules": [
            "checklists",
            "checklists.admin",
            "checklists.api",
            "checklists.api.checklist",
            "checklists.api.entry",
            "checklists.autocomplete_light_registry",
            "checklists.filters",
            "checklists.forms",
            "checklists.management",
            "checklists.management.commands",
            "checklists.management.commands.load_checklists",
            "checklists.migrations",
            "checklists.migrations.0001_initial",
            "checklists.migrations.0002_add_speciesgroup",
            "checklists.migrations.0003_add_source_identifiers",
            "checklists.migrations.0004_add_species_include",
            "checklists.migrations.0005_set_species_include",
            "checklists.migrations.0006_add_protocol",
            "checklists.migrations.0007_set_protocol",
            "checklists.migrations.0008_clean_protocol",
            "checklists.migrations.0009_rename_detail_long",
            "checklists.migrations.0010_set_detail_coordinates",
            "checklists.migrations.0011_clean_coordinates",
            "checklists.migrations.0012_add_types",
            "checklists.migrations.0013_set_types",
            "checklists.migrations.0014_clean_types",
            "checklists.migrations.0015_prepare_for_constraints",
            "checklists.migrations.0016_tighten_constraints",
            "checklists.migrations.0017_add_delete_rules_and_rename",
            "checklists.migrations.0018_rename_protocol",
            "checklists.migrations.0019_rename_protocol_type",
            "checklists.migrations.0020_add_code",
            "checklists.migrations.0021_add_activity",
            "checklists.migrations.0022_add_time",
            "checklists.migrations.0023_set_method_time",
            "checklists.migrations.0024_delete_checklist_time",
            "checklists.migrations.0025_rename_observers",
            "checklists.migrations.0026_add_many_observers_and_reporter",
            "checklists.migrations.0027_set_many_observers_and_reporter",
            "checklists.migrations.0028_delete_observer_names_and_submitted_by",
            "checklists.migrations.0029_add_filter",
            "checklists.migrations.0030_add_detail_identifier",
            "checklists.migrations.0031_copy_subspecies",
            "checklists.migrations.0032_delete_entry_subspecies",
            "checklists.migrations.0033_add_field_location_national",
            "checklists.migrations.0034_entry_comments_are_text",
            "checklists.migrations.0035_del_photo",
            "checklists.migrations.0036_rebuild_locationalias",
            "checklists.migrations.0037_set_original_location",
            "checklists.migrations.0038_delete_locationalias_name",
            "checklists.migrations.0039_add_status",
            "checklists.migrations.0040_set_entry_status",
            "checklists.migrations.0041_delete_slugs",
            "checklists.migrations.0042_detail_time_and_duration",
            "checklists.migrations.0043_add_map",
            "checklists.migrations.0044_rename_code_to_slug",
            "checklists.migrations.0045_blank_fields",
            "checklists.migrations.0046_method_time_optional",
            "checklists.migrations.0047_added_audit_fields",
            "checklists.migrations.0048_species_field_sizes",
            "checklists.migrations.0049_remove_audit_fields",
            "checklists.migrations.0050_change_map_name",
            "checklists.models",
            "checklists.scripts",
            "checklists.scripts.avibase_names",
            "checklists.scripts.finalizedb",
            "checklists.scripts.initdb",
            "checklists.scripts.load_activities",
            "checklists.scripts.load_ages",
            "checklists.scripts.load_directions",
            "checklists.scripts.load_map",
            "checklists.scripts.load_plumages",
            "checklists.scripts.load_protocols",
            "checklists.scripts.load_ranks",
            "checklists.scripts.load_sexes",
            "checklists.scripts.load_species_names",
            "checklists.scripts.load_taxonomy",
            "checklists.scripts.utils",
            "checklists.tests",
            "checklists.tests.api",
            "checklists.tests.api.test_checklists",
            "checklists.tests.api.test_checklists_added_on",
            "checklists.tests.api.test_checklists_between",
            "checklists.tests.api.test_checklists_on",
            "checklists.tests.api.test_entries",
            "checklists.tests.api.test_entries_added_between",
            "checklists.tests.api.test_entries_added_on",
            "checklists.tests.api.test_entries_between",
            "checklists.tests.api.test_entries_for",
            "checklists.tests.api.test_entries_on",
            "checklists.tests.commands",
            "checklists.tests.commands.test_load_checklists",
            "checklists.tests.factories",
            "checklists.tests.models",
            "checklists.tests.models.test_activity",
            "checklists.tests.models.test_age",
            "checklists.tests.models.test_checklist",
            "checklists.tests.models.test_detail",
            "checklists.tests.models.test_direction",
            "checklists.tests.models.test_entry",
            "checklists.tests.models.test_location",
            "checklists.tests.models.test_method",
            "checklists.tests.models.test_plumage",
            "checklists.tests.models.test_protocol",
            "checklists.tests.models.test_sex",
            "checklists.tests.models.test_species",
            "checklists.tests.models.test_species_group",
            "checklists.tests.models.test_species_type",
            "checklists.tests.runner",
            "checklists.tests.runtests",
            "checklists.tests.translations",
            "checklists.tests.translations.test_translation_strings",
            "checklists.utils",
            "scripts",
            "scripts.create_group",
            "scripts.isblank",
            "scripts.issubset",
            "scripts.utils"
        ],
        "version": "0.4.12"
    },
    "checklists-scrapers": {
        "cmdline": [],
        "modules": [
            "checklists_scrapers",
            "checklists_scrapers.exceptions",
            "checklists_scrapers.extensions",
            "checklists_scrapers.settings",
            "checklists_scrapers.spiders",
            "checklists_scrapers.spiders.ebird_spider",
            "checklists_scrapers.spiders.utils",
            "checklists_scrapers.spiders.worldbirds_spider",
            "checklists_scrapers.tests",
            "checklists_scrapers.tests.scripts",
            "checklists_scrapers.tests.scripts.validate_ebird_scraper",
            "checklists_scrapers.tests.scripts.validate_worldbirds_scraper",
            "checklists_scrapers.tests.spiders",
            "checklists_scrapers.tests.spiders.ebird",
            "checklists_scrapers.tests.spiders.ebird.test_html_parser",
            "checklists_scrapers.tests.spiders.ebird.test_json_parser",
            "checklists_scrapers.tests.spiders.ebird.test_merge_checklists",
            "checklists_scrapers.tests.spiders.ebird.test_parse_locations",
            "checklists_scrapers.tests.spiders.ebird.test_parse_region",
            "checklists_scrapers.tests.spiders.ebird.test_spider",
            "checklists_scrapers.tests.spiders.worldbirds",
            "checklists_scrapers.tests.spiders.worldbirds.test_checklist_parser",
            "checklists_scrapers.tests.spiders.worldbirds.test_location_parser",
            "checklists_scrapers.tests.spiders.worldbirds.test_observer_parser",
            "checklists_scrapers.tests.spiders.worldbirds.test_spider",
            "checklists_scrapers.tests.spiders.worldbirds.test_visit_parser",
            "checklists_scrapers.tests.utils",
            "checklists_scrapers.tests.validation",
            "checklists_scrapers.tests.validation.test_checklist",
            "checklists_scrapers.tests.validation.test_details",
            "checklists_scrapers.tests.validation.test_entry",
            "checklists_scrapers.tests.validation.test_location",
            "checklists_scrapers.tests.validation.test_observers",
            "checklists_scrapers.tests.validation.test_protocol",
            "checklists_scrapers.tests.validation.test_source",
            "checklists_scrapers.tests.validation.test_species",
            "checklists_scrapers.utils"
        ],
        "version": "0.2.3"
    },
    "checkm": {
        "cmdline": [
            "bagitmanifest",
            "checkm"
        ],
        "modules": [
            "checkm",
            "checkm.checkm"
        ],
        "version": "0.4"
    },
    "checkm-genome": {
        "cmdline": [
            "checkm"
        ],
        "modules": [
            "checkm",
            "checkm.PCA",
            "checkm.aminoAcidIdentity",
            "checkm.binComparer",
            "checkm.binStatistics",
            "checkm.binTools",
            "checkm.binUnion",
            "checkm.checkmData",
            "checkm.common",
            "checkm.coverage",
            "checkm.coverageWindows",
            "checkm.customHelpFormatter",
            "checkm.defaultValues",
            "checkm.genomicSignatures",
            "checkm.hmmer",
            "checkm.hmmerAligner",
            "checkm.hmmerModelParser",
            "checkm.main",
            "checkm.markerGeneFinder",
            "checkm.markerSets",
            "checkm.merger",
            "checkm.plot",
            "checkm.plot.AbstractPlot",
            "checkm.plot.binQAPlot",
            "checkm.plot.codingDensityPlots",
            "checkm.plot.cumulativeLengthPlot",
            "checkm.plot.distributionPlots",
            "checkm.plot.gcBiasPlots",
            "checkm.plot.gcPlots",
            "checkm.plot.lengthHistogram",
            "checkm.plot.markerGenePosPlot",
            "checkm.plot.nxPlot",
            "checkm.plot.parallelCoordPlot",
            "checkm.plot.pcaPlot",
            "checkm.plot.tetraDistPlots",
            "checkm.pplacer",
            "checkm.prettytable",
            "checkm.prodigal",
            "checkm.profile",
            "checkm.resultsParser",
            "checkm.ssuFinder",
            "checkm.taxonParser",
            "checkm.test",
            "checkm.test.test_aminoAcidIdentity",
            "checkm.test.test_binStatistics",
            "checkm.test.test_ecoli",
            "checkm.test.test_genomicSignatures",
            "checkm.test.test_markerSets",
            "checkm.test.test_seqUtils",
            "checkm.test.test_taxonomyUtils",
            "checkm.timeKeeper",
            "checkm.treeParser",
            "checkm.unbinned",
            "checkm.uniqueMarkers",
            "checkm.util",
            "checkm.util.img",
            "checkm.util.pfam",
            "checkm.util.seqUtils",
            "checkm.util.taxonomyUtils"
        ],
        "version": "1.0.7"
    },
    "checkmail": {
        "cmdline": [],
        "modules": [
            "checkmail",
            "checkmail.api",
            "checkmail.api.requesthandler",
            "checkmail.client",
            "checkmail.exception",
            "checkmail.exception.exception"
        ],
        "version": "1.0.0"
    },
    "checkmate": {
        "cmdline": [],
        "modules": [
            "checkmate",
            "checkmate.contrib",
            "checkmate.contrib.plugins",
            "checkmate.contrib.plugins.git",
            "checkmate.contrib.plugins.git.commands",
            "checkmate.contrib.plugins.git.commands.analyze",
            "checkmate.contrib.plugins.git.commands.base",
            "checkmate.contrib.plugins.git.commands.diff",
            "checkmate.contrib.plugins.git.commands.update_stats",
            "checkmate.contrib.plugins.git.helpers",
            "checkmate.contrib.plugins.git.hooks",
            "checkmate.contrib.plugins.git.hooks.project",
            "checkmate.contrib.plugins.git.lib",
            "checkmate.contrib.plugins.git.lib.repository",
            "checkmate.contrib.plugins.git.lib.repository_pygit2",
            "checkmate.contrib.plugins.git.models",
            "checkmate.contrib.plugins.git.setup",
            "checkmate.contrib.plugins.git.test",
            "checkmate.contrib.plugins.git.test.analysis",
            "checkmate.contrib.plugins.git.test.analysis.test_analysis",
            "checkmate.contrib.plugins.git.test.analysis.test_diffing",
            "checkmate.contrib.plugins.git.test.git",
            "checkmate.contrib.plugins.git.test.git.test_git",
            "checkmate.contrib.plugins.git.test.helpers",
            "checkmate.contrib.plugins.git.test.lib",
            "checkmate.contrib.plugins.git.test.lib.test_repository",
            "checkmate.contrib.plugins.github",
            "checkmate.contrib.plugins.github.commands",
            "checkmate.contrib.plugins.github.commands.analyze_pull_requests",
            "checkmate.contrib.plugins.github.models",
            "checkmate.contrib.plugins.github.setup",
            "checkmate.contrib.plugins.javascript",
            "checkmate.contrib.plugins.javascript.jshint",
            "checkmate.contrib.plugins.javascript.jshint.analyzer",
            "checkmate.contrib.plugins.javascript.jshint.issues_data",
            "checkmate.contrib.plugins.javascript.jshint.setup",
            "checkmate.contrib.plugins.python",
            "checkmate.contrib.plugins.python.metrics",
            "checkmate.contrib.plugins.python.metrics.analyzer",
            "checkmate.contrib.plugins.python.metrics.issues_data",
            "checkmate.contrib.plugins.python.metrics.setup",
            "checkmate.contrib.plugins.python.pep8",
            "checkmate.contrib.plugins.python.pep8.analyzer",
            "checkmate.contrib.plugins.python.pep8.issues_data",
            "checkmate.contrib.plugins.python.pep8.setup",
            "checkmate.contrib.plugins.python.pyflakes",
            "checkmate.contrib.plugins.python.pyflakes.analyzer",
            "checkmate.contrib.plugins.python.pyflakes.issues_data",
            "checkmate.contrib.plugins.python.pyflakes.setup",
            "checkmate.contrib.plugins.python.pylint",
            "checkmate.contrib.plugins.python.pylint.analyzer",
            "checkmate.contrib.plugins.python.pylint.issues_data",
            "checkmate.contrib.plugins.python.pylint.setup",
            "checkmate.helpers",
            "checkmate.helpers.facts",
            "checkmate.helpers.hashing",
            "checkmate.helpers.issue",
            "checkmate.helpers.settings",
            "checkmate.lib",
            "checkmate.lib.analysis",
            "checkmate.lib.analysis.base",
            "checkmate.lib.code",
            "checkmate.lib.code.environment",
            "checkmate.lib.models",
            "checkmate.lib.stats",
            "checkmate.lib.stats.helpers",
            "checkmate.lib.stats.mapreduce",
            "checkmate.management",
            "checkmate.management.commands",
            "checkmate.management.commands.alembic",
            "checkmate.management.commands.analyze",
            "checkmate.management.commands.analyzers",
            "checkmate.management.commands.base",
            "checkmate.management.commands.compare",
            "checkmate.management.commands.export",
            "checkmate.management.commands.info",
            "checkmate.management.commands.init",
            "checkmate.management.commands.issues",
            "checkmate.management.commands.props",
            "checkmate.management.commands.props.delete",
            "checkmate.management.commands.props.get",
            "checkmate.management.commands.props.set",
            "checkmate.management.commands.reset",
            "checkmate.management.commands.shell",
            "checkmate.management.commands.snapshots",
            "checkmate.management.commands.stats",
            "checkmate.management.commands.summary",
            "checkmate.management.commands.sync",
            "checkmate.management.commands.trend",
            "checkmate.management.commands.watch",
            "checkmate.management.decorators",
            "checkmate.management.helpers",
            "checkmate.scripts",
            "checkmate.scripts.manage",
            "checkmate.settings",
            "checkmate.settings.base",
            "checkmate.settings.defaults",
            "checkmate.test",
            "checkmate.test.diff",
            "checkmate.test.diff.test_basic_diff",
            "checkmate.test.diff.test_object_diffing",
            "checkmate.test.helpers",
            "checkmate.test.settings",
            "checkmate.test.settings.test_analyzers",
            "checkmate.test.settings.test_checkignore"
        ],
        "version": "0.2.0"
    },
    "checkmate-api": {
        "cmdline": [],
        "modules": [
            "checkmate",
            "checkmate.api_requester",
            "checkmate.checkmate",
            "checkmate.properties",
            "checkmate.reservations",
            "checkmate.version"
        ],
        "version": "1.0.0"
    },
    "checkmon": {
        "cmdline": [],
        "modules": [
            "checkmon"
        ],
        "version": "1.0.0"
    },
    "checkmyclones": {
        "cmdline": [
            "checkmyclones.py"
        ],
        "modules": [
            "clonechecker",
            "clonechecker.TabFile",
            "clonechecker.align",
            "clonechecker.filetools"
        ],
        "version": "0.0.10"
    },
    "checkmyreqs": {
        "cmdline": [
            "checkmyreqs"
        ],
        "modules": [
            "tests",
            "tests.test_checkmyreqs"
        ],
        "version": "0.3.1"
    },
    "checkmyws-python": {
        "cmdline": [],
        "modules": [
            "checkmyws",
            "checkmyws.client",
            "checkmyws.exception"
        ],
        "version": "0.1.8"
    },
    "checknest": {
        "cmdline": [],
        "modules": [
            "checknest"
        ],
        "version": "1.1.0"
    },
    "checkopenbgpd": {
        "cmdline": [],
        "modules": [
            "checkopenbgpd",
            "checkopenbgpd.checkopenbgpd"
        ],
        "version": "0.9"
    },
    "checkout": {
        "cmdline": [],
        "modules": [
            "checkout"
        ],
        "version": "0.2.0"
    },
    "checkout-by-amazon": {
        "cmdline": [],
        "modules": [
            "cba",
            "cba.actions",
            "cba.cba",
            "cba.core",
            "cba.models",
            "cba.test"
        ],
        "version": "0.1.6"
    },
    "checkoutmanager": {
        "cmdline": [],
        "modules": [
            "checkoutmanager",
            "checkoutmanager.config",
            "checkoutmanager.dirinfo",
            "checkoutmanager.executors",
            "checkoutmanager.runner",
            "checkoutmanager.utils"
        ],
        "version": "2.5"
    },
    "checkouts": {
        "cmdline": [],
        "modules": [
            "checkouts",
            "checkouts.find",
            "checkouts.report"
        ],
        "version": "1.0"
    },
    "checkpkgaudit": {
        "cmdline": [],
        "modules": [
            "checkpkgaudit",
            "checkpkgaudit.checkpkgaudit"
        ],
        "version": "0.7.1"
    },
    "checkpoint": {
        "cmdline": [],
        "modules": [
            "checkpoint",
            "checkpoint.command",
            "checkpoint.constants",
            "checkpoint.database",
            "checkpoint.error",
            "checkpoint.filestore",
            "checkpoint.manager",
            "checkpoint.release",
            "checkpoint.release.googlecode_upload",
            "checkpoint.repository",
            "checkpoint.tests",
            "checkpoint.tests.database",
            "checkpoint.tests.filestore",
            "checkpoint.tests.repository",
            "checkpoint.tests.util",
            "checkpoint.util"
        ],
        "version": "0.2b1"
    },
    "checkpoints": {
        "cmdline": [],
        "modules": [
            "checkpoints",
            "checkpoints.checkpoints"
        ],
        "version": "0.0.1"
    },
    "checkpy": {
        "cmdline": [],
        "modules": [
            "checkpy",
            "checkpy.assertlib",
            "checkpy.caches",
            "checkpy.downloader",
            "checkpy.exception",
            "checkpy.lib",
            "checkpy.printer",
            "checkpy.tester",
            "checkpy.tests"
        ],
        "version": "0.2.15"
    },
    "checkrunner": {
        "cmdline": [],
        "modules": [
            "checkrunner"
        ],
        "version": "0.0.2"
    },
    "checkselect": {
        "cmdline": [],
        "modules": [
            "checkselect",
            "checkselect.release",
            "checkselect.templates",
            "checkselect.widgets"
        ],
        "version": "1.2"
    },
    "checkstylebear": {
        "cmdline": [],
        "modules": [
            "coalaCheckstyleBear",
            "coalaCheckstyleBear.CheckstyleBear"
        ],
        "version": "0.10.0"
    },
    "checksum": {
        "cmdline": [],
        "modules": [
            "checksum"
        ],
        "version": "1.0.3"
    },
    "checksumdir": {
        "cmdline": [],
        "modules": [
            "checksumdir",
            "checksumdir.cli"
        ],
        "version": "1.1.4"
    },
    "checktveps": {
        "cmdline": [],
        "modules": [
            "autoPathTv",
            "checkFilms",
            "checkTvEps",
            "filename_config"
        ],
        "version": "0.2"
    },
    "checktype": {
        "cmdline": [],
        "modules": [
            "checktype"
        ],
        "version": "1.1.4"
    },
    "cheddar": {
        "cmdline": [],
        "modules": [
            "cheddar",
            "cheddar.app",
            "cheddar.auth",
            "cheddar.configure",
            "cheddar.controllers",
            "cheddar.defaults",
            "cheddar.development",
            "cheddar.errorhandlers",
            "cheddar.exceptions",
            "cheddar.history",
            "cheddar.index",
            "cheddar.index.combined",
            "cheddar.index.index",
            "cheddar.index.local",
            "cheddar.index.remote",
            "cheddar.index.storage",
            "cheddar.model",
            "cheddar.model.distribution",
            "cheddar.model.versions",
            "cheddar.production"
        ],
        "version": "1.4"
    },
    "cheerio": {
        "cmdline": [],
        "modules": [
            "cheerio",
            "cheerio.cheerio",
            "cheerio.goodbye"
        ],
        "version": "1.4"
    },
    "cheerled": {
        "cmdline": [
            "cheer-alarm",
            "cheer-auto-off",
            "cheer-auto-on",
            "cheer-graphic",
            "cheer-text",
            "cheer-timed-file",
            "cheer-update-time"
        ],
        "modules": [
            "cheerled"
        ],
        "version": "1.0"
    },
    "cheerlights": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "cheers": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cheese": {
        "cmdline": [],
        "modules": [
            "cheese",
            "cheese.cheese"
        ],
        "version": "0.1.0"
    },
    "cheese-cli": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cheese-freezer": {
        "cmdline": [],
        "modules": [
            "cheese_freezer"
        ],
        "version": "0.0.3"
    },
    "cheesecake": {
        "cmdline": [],
        "modules": [
            "cheesecake",
            "cheesecake.ast_pp",
            "cheesecake.cheesecake_index",
            "cheesecake.codeparser",
            "cheesecake.logger",
            "cheesecake.model",
            "cheesecake.pep8",
            "cheesecake.subprocess",
            "cheesecake.util"
        ],
        "version": "0.6.2"
    },
    "cheesemaker": {
        "cmdline": [],
        "modules": [
            "cheesemaker",
            "cheesemaker.editimage",
            "cheesemaker.gui",
            "cheesemaker.preferences"
        ],
        "version": "0.3.8"
    },
    "cheesemonger": {
        "cmdline": [],
        "modules": [
            "cheesemonger",
            "cheesemonger.reculture",
            "cheesemonger.wheel_info"
        ],
        "version": "0.1"
    },
    "cheesepi": {
        "cmdline": [],
        "modules": [
            "cheesepi",
            "cheesepi.config",
            "cheesepi.dispatcher",
            "cheesepi.exceptions",
            "cheesepi.utils"
        ],
        "version": "1.9.22"
    },
    "cheesepilib": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "cheeseprism": {
        "cmdline": [],
        "modules": [
            "cheeseprism",
            "cheeseprism.archiveutil",
            "cheeseprism.auth",
            "cheeseprism.desc",
            "cheeseprism.event",
            "cheeseprism.index",
            "cheeseprism.jenv",
            "cheeseprism.pipext",
            "cheeseprism.request",
            "cheeseprism.resources",
            "cheeseprism.rpc",
            "cheeseprism.sync",
            "cheeseprism.utils",
            "cheeseprism.views",
            "cheeseprism.wsgiapp"
        ],
        "version": "0.4.0b5"
    },
    "cheesy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cheetah": {
        "cmdline": [
            "cheetah",
            "cheetah-analyze",
            "cheetah-compile"
        ],
        "modules": [
            "Cheetah",
            "Cheetah.CacheRegion",
            "Cheetah.CacheStore",
            "Cheetah.CheetahWrapper",
            "Cheetah.Compiler",
            "Cheetah.DirectiveAnalyzer",
            "Cheetah.Django",
            "Cheetah.DummyTransaction",
            "Cheetah.ErrorCatchers",
            "Cheetah.FileUtils",
            "Cheetah.Filters",
            "Cheetah.ImportHooks",
            "Cheetah.ImportManager",
            "Cheetah.Macros",
            "Cheetah.Macros.I18n",
            "Cheetah.NameMapper",
            "Cheetah.Parser",
            "Cheetah.Servlet",
            "Cheetah.SettingsManager",
            "Cheetah.SourceReader",
            "Cheetah.Template",
            "Cheetah.TemplateCmdLineIface",
            "Cheetah.Templates",
            "Cheetah.Templates.SkeletonPage",
            "Cheetah.Templates._SkeletonPage",
            "Cheetah.Tests",
            "Cheetah.Tests.Analyzer",
            "Cheetah.Tests.CheetahWrapper",
            "Cheetah.Tests.Cheps",
            "Cheetah.Tests.Filters",
            "Cheetah.Tests.Misc",
            "Cheetah.Tests.NameMapper",
            "Cheetah.Tests.Parser",
            "Cheetah.Tests.Performance",
            "Cheetah.Tests.Regressions",
            "Cheetah.Tests.SyntaxAndOutput",
            "Cheetah.Tests.Template",
            "Cheetah.Tests.Test",
            "Cheetah.Tests.Unicode",
            "Cheetah.Tests.xmlrunner",
            "Cheetah.Tools",
            "Cheetah.Tools.CGITemplate",
            "Cheetah.Tools.MondoReport",
            "Cheetah.Tools.RecursiveNull",
            "Cheetah.Tools.SiteHierarchy",
            "Cheetah.Unspecified",
            "Cheetah.Utils",
            "Cheetah.Utils.Indenter",
            "Cheetah.Utils.Misc",
            "Cheetah.Utils.WebInputMixin",
            "Cheetah.Utils.htmlDecode",
            "Cheetah.Utils.htmlEncode",
            "Cheetah.Utils.statprof",
            "Cheetah.Version",
            "Cheetah.convertTmplPathToModuleName"
        ],
        "version": "2.4.4"
    },
    "cheetah-lint": {
        "cmdline": [],
        "modules": [
            "cheetah_lint",
            "cheetah_lint.directives",
            "cheetah_lint.five",
            "cheetah_lint.flake",
            "cheetah_lint.imports",
            "cheetah_lint.reorder_imports",
            "cheetah_lint.util"
        ],
        "version": "0.3.4"
    },
    "cheetah3": {
        "cmdline": [],
        "modules": [
            "Cheetah",
            "Cheetah.CacheRegion",
            "Cheetah.CacheStore",
            "Cheetah.CheetahWrapper",
            "Cheetah.Compiler",
            "Cheetah.DirectiveAnalyzer",
            "Cheetah.Django",
            "Cheetah.DummyTransaction",
            "Cheetah.ErrorCatchers",
            "Cheetah.FileUtils",
            "Cheetah.Filters",
            "Cheetah.ImportHooks",
            "Cheetah.ImportManager",
            "Cheetah.Macros",
            "Cheetah.Macros.I18n",
            "Cheetah.NameMapper",
            "Cheetah.Parser",
            "Cheetah.Servlet",
            "Cheetah.SettingsManager",
            "Cheetah.SourceReader",
            "Cheetah.Template",
            "Cheetah.TemplateCmdLineIface",
            "Cheetah.Templates",
            "Cheetah.Templates.SkeletonPage",
            "Cheetah.Templates._SkeletonPage",
            "Cheetah.Tests",
            "Cheetah.Tests.Analyzer",
            "Cheetah.Tests.Boinker",
            "Cheetah.Tests.CheetahWrapper",
            "Cheetah.Tests.Cheps",
            "Cheetah.Tests.Filters",
            "Cheetah.Tests.Misc",
            "Cheetah.Tests.NameMapper",
            "Cheetah.Tests.NameMapper_pure",
            "Cheetah.Tests.Parser",
            "Cheetah.Tests.Performance",
            "Cheetah.Tests.Pinger",
            "Cheetah.Tests.Regressions",
            "Cheetah.Tests.SyntaxAndOutput",
            "Cheetah.Tests.Template",
            "Cheetah.Tests.Test",
            "Cheetah.Tests.Unicode",
            "Cheetah.Tests.xmlrunner",
            "Cheetah.Tools",
            "Cheetah.Tools.CGITemplate",
            "Cheetah.Tools.MondoReport",
            "Cheetah.Tools.RecursiveNull",
            "Cheetah.Tools.SiteHierarchy",
            "Cheetah.Unspecified",
            "Cheetah.Utils",
            "Cheetah.Utils.Indenter",
            "Cheetah.Utils.Misc",
            "Cheetah.Utils.WebInputMixin",
            "Cheetah.Utils.htmlDecode",
            "Cheetah.Utils.htmlEncode",
            "Cheetah.Utils.statprof",
            "Cheetah.Version",
            "Cheetah.compat",
            "Cheetah.convertTmplPathToModuleName"
        ],
        "version": "3.0.0"
    },
    "chef": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chef-gae": {
        "cmdline": [],
        "modules": [
            "chef_gae",
            "chef_gae.chef",
            "chef_gae.encoder",
            "chef_gae.tests",
            "chef_gae.tests.sample_data",
            "chef_gae.tests.test_client",
            "chef_gae.tests.test_encode"
        ],
        "version": "1.0.3"
    },
    "chef-hat": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chef-solo-cup": {
        "cmdline": [
            "chef-solo-cup"
        ],
        "modules": [
            "chef_solo_cup",
            "chef_solo_cup.commands",
            "chef_solo_cup.commands.bootstrap",
            "chef_solo_cup.commands.chef",
            "chef_solo_cup.commands.clean",
            "chef_solo_cup.commands.default",
            "chef_solo_cup.commands.gem",
            "chef_solo_cup.commands.inspect",
            "chef_solo_cup.commands.ruby",
            "chef_solo_cup.commands.runner",
            "chef_solo_cup.commands.sync",
            "chef_solo_cup.commands.test",
            "chef_solo_cup.commands.update",
            "chef_solo_cup.helpers",
            "chef_solo_cup.log",
            "chef_solo_cup.parse_args",
            "chef_solo_cup.version"
        ],
        "version": "0.3.1"
    },
    "chef-ssh": {
        "cmdline": [],
        "modules": [
            "chefssh",
            "chefssh.commandbase",
            "chefssh.entry",
            "chefssh.scp",
            "chefssh.ssh"
        ],
        "version": "0.1"
    },
    "cheffab": {
        "cmdline": [],
        "modules": [
            "cheffab",
            "cheffab.base",
            "cheffab.events",
            "cheffab.events.base",
            "cheffab.events.graphite",
            "cheffab.events.sendgrid",
            "cheffab.exceptions",
            "cheffab.tests",
            "cheffab.tests.test_base"
        ],
        "version": "0.0.2"
    },
    "cheffy": {
        "cmdline": [],
        "modules": [
            "cheffy",
            "cheffy.auth",
            "cheffy.client",
            "cheffy.rsa"
        ],
        "version": "0.3.8"
    },
    "chefpy": {
        "cmdline": [
            "chefpy"
        ],
        "modules": [
            "chefpy",
            "chefpy.chefpy"
        ],
        "version": "0.321"
    },
    "chegg-marc-condon": {
        "cmdline": [],
        "modules": [
            "chegg",
            "chegg.chegg_helpers",
            "chegg.matching_pattern_collector",
            "chegg.scripts",
            "chegg.scripts.main",
            "chegg.tie_breaker"
        ],
        "version": "0.0.3"
    },
    "chell": {
        "cmdline": [],
        "modules": [
            "chell",
            "chell.bin"
        ],
        "version": "0.1.5"
    },
    "chellow": {
        "cmdline": [],
        "modules": [
            "amazon",
            "amazon.ion",
            "amazon.ion.core",
            "amazon.ion.equivalence",
            "amazon.ion.exceptions",
            "amazon.ion.reader",
            "amazon.ion.reader_binary",
            "amazon.ion.reader_managed",
            "amazon.ion.reader_text",
            "amazon.ion.simple_types",
            "amazon.ion.simpleion",
            "amazon.ion.symbols",
            "amazon.ion.util",
            "amazon.ion.writer",
            "amazon.ion.writer_binary",
            "amazon.ion.writer_binary_raw",
            "amazon.ion.writer_binary_raw_fields",
            "amazon.ion.writer_buffer",
            "amazon.ion.writer_text",
            "chellow",
            "chellow._version",
            "chellow.aahedc",
            "chellow.bank_holidays",
            "chellow.bill_importer",
            "chellow.bill_parser_bgb_edi",
            "chellow.bill_parser_csv",
            "chellow.bill_parser_engie_xls",
            "chellow.bill_parser_gdf_csv",
            "chellow.bill_parser_mm",
            "chellow.bill_parser_sse_edi",
            "chellow.bsuos",
            "chellow.ccl",
            "chellow.commands",
            "chellow.computer",
            "chellow.dloads",
            "chellow.duos",
            "chellow.edi_lib",
            "chellow.g_bill_import",
            "chellow.g_bill_parser_engie_xlsx",
            "chellow.g_bill_parser_total_csv",
            "chellow.g_bill_parser_total_xlsx",
            "chellow.g_ccl",
            "chellow.g_cv",
            "chellow.g_engine",
            "chellow.general_import",
            "chellow.hh_importer",
            "chellow.hh_parser_bg_csv",
            "chellow.hh_parser_df2",
            "chellow.hh_parser_simple_csv",
            "chellow.models",
            "chellow.rcrc",
            "chellow.reports",
            "chellow.reports.report_109",
            "chellow.reports.report_111",
            "chellow.reports.report_149",
            "chellow.reports.report_155",
            "chellow.reports.report_163",
            "chellow.reports.report_169",
            "chellow.reports.report_177",
            "chellow.reports.report_181",
            "chellow.reports.report_183",
            "chellow.reports.report_187",
            "chellow.reports.report_207",
            "chellow.reports.report_215",
            "chellow.reports.report_219",
            "chellow.reports.report_231",
            "chellow.reports.report_233",
            "chellow.reports.report_241",
            "chellow.reports.report_247",
            "chellow.reports.report_29",
            "chellow.reports.report_291",
            "chellow.reports.report_33",
            "chellow.reports.report_387",
            "chellow.reports.report_41",
            "chellow.reports.report_429",
            "chellow.reports.report_59",
            "chellow.reports.report_81",
            "chellow.reports.report_87",
            "chellow.reports.report_csv_gas_virtual_bills",
            "chellow.reports.report_csv_site_hh_data",
            "chellow.reports.report_ecoes_comparison",
            "chellow.ro",
            "chellow.scenario",
            "chellow.system_price",
            "chellow.tlms",
            "chellow.triad",
            "chellow.utils",
            "chellow.views"
        ],
        "version": "1842"
    },
    "chem-gm": {
        "cmdline": [
            "gm_apidemo.py",
            "module_analysis.py"
        ],
        "modules": [
            "chem_gm",
            "chem_gm.api",
            "chem_gm.api.GM_API",
            "chem_gm.api.GM_DEMO",
            "chem_gm.api.cleancfg",
            "chem_gm.api.demo_jupyter",
            "chem_gm.api.gm_api_service",
            "chem_gm.api.gm_apidemo",
            "chem_gm.api.module_analysis",
            "chem_gm.components",
            "chem_gm.components.gmExcelUtils",
            "chem_gm.components.gmmEngine",
            "chem_gm.components.lex",
            "chem_gm.components.mplUtils",
            "chem_gm.components.updatemgr",
            "chem_gm.components.yacc",
            "chem_gm.core",
            "chem_gm.core.GMmodel",
            "chem_gm.core.atoms",
            "chem_gm.core.bonds",
            "chem_gm.core.gmconst",
            "chem_gm.core.gmprograms",
            "chem_gm.core.gmtoolbox",
            "chem_gm.core.gmutils",
            "chem_gm.core.graphmachineworkshop",
            "chem_gm.core.metamolecule",
            "chem_gm.core.smilexer",
            "chem_gm.core.smiparserspec",
            "chem_gm.core.smitokens",
            "chem_gm.gmconstants",
            "chem_gm.version"
        ],
        "version": "3.4.0.10"
    },
    "chembl-assay-network": {
        "cmdline": [],
        "modules": [
            "chembl_assay_network",
            "chembl_assay_network.matrix",
            "chembl_assay_network.models",
            "chembl_assay_network.tests",
            "chembl_assay_network.urls",
            "chembl_assay_network.views"
        ],
        "version": "0.8.1"
    },
    "chembl-beaker": {
        "cmdline": [],
        "modules": [
            "chembl_beaker",
            "chembl_beaker.beaker",
            "chembl_beaker.beaker.cache",
            "chembl_beaker.beaker.cache.backends",
            "chembl_beaker.beaker.cache.backends.base",
            "chembl_beaker.beaker.cache.backends.locmem",
            "chembl_beaker.beaker.cache.backends.memcached",
            "chembl_beaker.beaker.cache.backends.mongo",
            "chembl_beaker.beaker.cache.backends.sqlite",
            "chembl_beaker.beaker.core_apps",
            "chembl_beaker.beaker.core_apps.D3Coords",
            "chembl_beaker.beaker.core_apps.D3Coords.impl",
            "chembl_beaker.beaker.core_apps.D3Coords.views",
            "chembl_beaker.beaker.core_apps.autoDocs",
            "chembl_beaker.beaker.core_apps.autoDocs.views",
            "chembl_beaker.beaker.core_apps.calculations",
            "chembl_beaker.beaker.core_apps.calculations.impl",
            "chembl_beaker.beaker.core_apps.calculations.views",
            "chembl_beaker.beaker.core_apps.conversions",
            "chembl_beaker.beaker.core_apps.conversions.impl",
            "chembl_beaker.beaker.core_apps.conversions.views",
            "chembl_beaker.beaker.core_apps.descriptors",
            "chembl_beaker.beaker.core_apps.descriptors.impl",
            "chembl_beaker.beaker.core_apps.descriptors.views",
            "chembl_beaker.beaker.core_apps.fingerprints",
            "chembl_beaker.beaker.core_apps.fingerprints.impl",
            "chembl_beaker.beaker.core_apps.fingerprints.views",
            "chembl_beaker.beaker.core_apps.jsonImages",
            "chembl_beaker.beaker.core_apps.jsonImages.impl",
            "chembl_beaker.beaker.core_apps.jsonImages.jsonCanvas",
            "chembl_beaker.beaker.core_apps.jsonImages.views",
            "chembl_beaker.beaker.core_apps.marvin",
            "chembl_beaker.beaker.core_apps.marvin.MarvinJSONEncoder",
            "chembl_beaker.beaker.core_apps.marvin.impl",
            "chembl_beaker.beaker.core_apps.marvin.views",
            "chembl_beaker.beaker.core_apps.mcs",
            "chembl_beaker.beaker.core_apps.mcs.impl",
            "chembl_beaker.beaker.core_apps.mcs.views",
            "chembl_beaker.beaker.core_apps.osra",
            "chembl_beaker.beaker.core_apps.osra.impl",
            "chembl_beaker.beaker.core_apps.osra.views",
            "chembl_beaker.beaker.core_apps.rasterImages",
            "chembl_beaker.beaker.core_apps.rasterImages.impl",
            "chembl_beaker.beaker.core_apps.rasterImages.views",
            "chembl_beaker.beaker.core_apps.ringInfo",
            "chembl_beaker.beaker.core_apps.ringInfo.impl",
            "chembl_beaker.beaker.core_apps.ringInfo.views",
            "chembl_beaker.beaker.core_apps.similarityMaps",
            "chembl_beaker.beaker.core_apps.similarityMaps.impl",
            "chembl_beaker.beaker.core_apps.similarityMaps.views",
            "chembl_beaker.beaker.core_apps.standarisation",
            "chembl_beaker.beaker.core_apps.standarisation.impl",
            "chembl_beaker.beaker.core_apps.standarisation.views",
            "chembl_beaker.beaker.core_apps.svgImages",
            "chembl_beaker.beaker.core_apps.svgImages.impl",
            "chembl_beaker.beaker.core_apps.svgImages.views",
            "chembl_beaker.beaker.draw",
            "chembl_beaker.beaker.draw.cairoCanvas",
            "chembl_beaker.beaker.draw.canvasbase",
            "chembl_beaker.beaker.draw.molDrawing",
            "chembl_beaker.beaker.plugins",
            "chembl_beaker.beaker.plugins.caching",
            "chembl_beaker.beaker.plugins.enableCors",
            "chembl_beaker.beaker.plugins.restrictions",
            "chembl_beaker.beaker.plugins.throttling",
            "chembl_beaker.beaker.throttle",
            "chembl_beaker.beaker.throttle.backends",
            "chembl_beaker.beaker.throttle.backends.base",
            "chembl_beaker.beaker.throttle.backends.cacheThrottle",
            "chembl_beaker.beaker.utils",
            "chembl_beaker.beaker.utils.chemical_transformation",
            "chembl_beaker.beaker.utils.crypto",
            "chembl_beaker.beaker.utils.default_key",
            "chembl_beaker.beaker.utils.functional",
            "chembl_beaker.beaker.utils.io",
            "chembl_beaker.beaker.utils.synch",
            "chembl_beaker.beaker.views",
            "chembl_beaker.run_beaker",
            "chembl_beaker.tests"
        ],
        "version": "1.1.14"
    },
    "chembl-business-model": {
        "cmdline": [],
        "modules": [
            "chembl_business_model",
            "chembl_business_model.exceptions",
            "chembl_business_model.indigoWrapper",
            "chembl_business_model.listeners",
            "chembl_business_model.models",
            "chembl_business_model.models.approvedDrugData",
            "chembl_business_model.models.bindingSiteInformation",
            "chembl_business_model.models.compounds",
            "chembl_business_model.models.experimentalData",
            "chembl_business_model.models.general",
            "chembl_business_model.models.mechanismAnnotation",
            "chembl_business_model.models.meta",
            "chembl_business_model.models.sourceInformation",
            "chembl_business_model.models.targetInformation",
            "chembl_business_model.signals",
            "chembl_business_model.tasks",
            "chembl_business_model.tests",
            "chembl_business_model.utils"
        ],
        "version": "0.8.1"
    },
    "chembl-clippy": {
        "cmdline": [
            "clippy_all.py"
        ],
        "modules": [
            "chembl_clippy",
            "chembl_clippy.clippy_all",
            "chembl_clippy.settings",
            "chembl_clippy.singleton"
        ],
        "version": "0.1.6"
    },
    "chembl-compatibility": {
        "cmdline": [],
        "modules": [
            "chembl_compatibility",
            "chembl_compatibility.models",
            "chembl_compatibility.tests"
        ],
        "version": "2.1.3"
    },
    "chembl-core-db": {
        "cmdline": [],
        "modules": [
            "chembl_core_db",
            "chembl_core_db.cache",
            "chembl_core_db.cache.backends",
            "chembl_core_db.cache.backends.MongoDBCache",
            "chembl_core_db.chemicalValidators",
            "chembl_core_db.db",
            "chembl_core_db.db.backends",
            "chembl_core_db.db.backends.oracleChEmbl",
            "chembl_core_db.db.backends.oracleChEmbl.base",
            "chembl_core_db.db.backends.oracleChEmbl.features",
            "chembl_core_db.db.backends.oracleChEmbl.introspection",
            "chembl_core_db.db.backends.oracleChEmbl.operations",
            "chembl_core_db.db.backends.oracleChEmbl.utils",
            "chembl_core_db.db.customFields",
            "chembl_core_db.db.customManagers",
            "chembl_core_db.db.models",
            "chembl_core_db.db.models.abstractModel",
            "chembl_core_db.db.models.lookups",
            "chembl_core_db.models",
            "chembl_core_db.testing",
            "chembl_core_db.testing.tastypieTest",
            "chembl_core_db.tests",
            "chembl_core_db.utils"
        ],
        "version": "0.9.21"
    },
    "chembl-core-model": {
        "cmdline": [],
        "modules": [
            "chembl_core_model",
            "chembl_core_model.models",
            "chembl_core_model.models.approvedDrugData",
            "chembl_core_model.models.bindingSiteInformation",
            "chembl_core_model.models.compounds",
            "chembl_core_model.models.drugMetabolismData",
            "chembl_core_model.models.experimentalData",
            "chembl_core_model.models.general",
            "chembl_core_model.models.mechanismAnnotation",
            "chembl_core_model.models.sourceInformation",
            "chembl_core_model.models.targetInformation",
            "chembl_core_model.tests"
        ],
        "version": "0.9.22"
    },
    "chembl-extras": {
        "cmdline": [],
        "modules": [
            "chembl_extras",
            "chembl_extras.management",
            "chembl_extras.management.commands",
            "chembl_extras.management.commands.activate_cartridge",
            "chembl_extras.management.commands.cluster",
            "chembl_extras.management.commands.create_blastdb",
            "chembl_extras.management.commands.create_fasta",
            "chembl_extras.management.commands.generate_backbone_models",
            "chembl_extras.management.commands.generate_ora2pg_conf",
            "chembl_extras.management.commands.mysyncdb",
            "chembl_extras.management.commands.precache_charts",
            "chembl_extras.management.commands.release_skeleton",
            "chembl_extras.management.commands.sdf2fps",
            "chembl_extras.management.commands.sdfexport",
            "chembl_extras.management.commands.skeleton_resources",
            "chembl_extras.models",
            "chembl_extras.moleculeFinder",
            "chembl_extras.ontologies",
            "chembl_extras.tests"
        ],
        "version": "0.9.7"
    },
    "chembl-migrate": {
        "cmdline": [],
        "modules": [
            "chembl_migrate",
            "chembl_migrate.management",
            "chembl_migrate.management.commands",
            "chembl_migrate.management.commands.execute_sql_custom",
            "chembl_migrate.management.commands.migrate",
            "chembl_migrate.management.commands.migrate_table",
            "chembl_migrate.management.commands.reverseEngineer",
            "chembl_migrate.models",
            "chembl_migrate.tests"
        ],
        "version": "0.8.4"
    },
    "chembl-migration-model": {
        "cmdline": [],
        "modules": [
            "chembl_migration_model",
            "chembl_migration_model.models",
            "chembl_migration_model.tests",
            "chembl_migration_model.views"
        ],
        "version": "0.9.6"
    },
    "chembl-webresource-client": {
        "cmdline": [],
        "modules": [
            "chembl_webresource_client",
            "chembl_webresource_client.assay_resource",
            "chembl_webresource_client.cache",
            "chembl_webresource_client.compound_resource",
            "chembl_webresource_client.http_errors",
            "chembl_webresource_client.new_client",
            "chembl_webresource_client.query_set",
            "chembl_webresource_client.settings",
            "chembl_webresource_client.singleton",
            "chembl_webresource_client.spore_client",
            "chembl_webresource_client.target_resource",
            "chembl_webresource_client.tests",
            "chembl_webresource_client.unichem",
            "chembl_webresource_client.url_query",
            "chembl_webresource_client.utils",
            "chembl_webresource_client.web_resource"
        ],
        "version": "0.9.12"
    },
    "chembl-webservices": {
        "cmdline": [],
        "modules": [
            "chembl_webservices",
            "chembl_webservices.core",
            "chembl_webservices.core.api",
            "chembl_webservices.core.fields",
            "chembl_webservices.core.meta",
            "chembl_webservices.core.pagination",
            "chembl_webservices.core.resource",
            "chembl_webservices.core.serialization",
            "chembl_webservices.core.utils",
            "chembl_webservices.dis",
            "chembl_webservices.management",
            "chembl_webservices.management.commands",
            "chembl_webservices.management.commands.rebuild_chembl_index",
            "chembl_webservices.management.commands.update_chembl_index",
            "chembl_webservices.middleware",
            "chembl_webservices.models",
            "chembl_webservices.resources",
            "chembl_webservices.resources.activities",
            "chembl_webservices.resources.assays",
            "chembl_webservices.resources.atc",
            "chembl_webservices.resources.binding_site",
            "chembl_webservices.resources.bio_component",
            "chembl_webservices.resources.cell_line",
            "chembl_webservices.resources.chembl_id",
            "chembl_webservices.resources.compound_record",
            "chembl_webservices.resources.docs",
            "chembl_webservices.resources.document_similarity",
            "chembl_webservices.resources.document_terms",
            "chembl_webservices.resources.drug",
            "chembl_webservices.resources.go_slim",
            "chembl_webservices.resources.image",
            "chembl_webservices.resources.indication",
            "chembl_webservices.resources.mechanism",
            "chembl_webservices.resources.metabolism",
            "chembl_webservices.resources.molecule",
            "chembl_webservices.resources.molecule_forms",
            "chembl_webservices.resources.protein_class",
            "chembl_webservices.resources.similarity",
            "chembl_webservices.resources.source",
            "chembl_webservices.resources.status",
            "chembl_webservices.resources.structural_alerts",
            "chembl_webservices.resources.substructure",
            "chembl_webservices.resources.target",
            "chembl_webservices.resources.target_components",
            "chembl_webservices.resources.target_predictions",
            "chembl_webservices.resources.target_relations",
            "chembl_webservices.resources.tissue",
            "chembl_webservices.search_indexes",
            "chembl_webservices.tests",
            "chembl_webservices.urls"
        ],
        "version": "2.6.22"
    },
    "chemcoord": {
        "cmdline": [],
        "modules": [
            "chemcoord",
            "chemcoord._common_class",
            "chemcoord._exceptions",
            "chemcoord._pandas_wrapper",
            "chemcoord.constants",
            "chemcoord.pandas_wrapper",
            "chemcoord.settings",
            "chemcoord.test",
            "chemcoord.utilities",
            "chemcoord.xyz_functions",
            "chemcoord.zmat_functions"
        ],
        "version": "1.2.0"
    },
    "chemdataextractor": {
        "cmdline": [],
        "modules": [
            "chemdataextractor",
            "chemdataextractor.biblio",
            "chemdataextractor.biblio.bibtex",
            "chemdataextractor.biblio.person",
            "chemdataextractor.biblio.xmp",
            "chemdataextractor.cli",
            "chemdataextractor.cli.cem",
            "chemdataextractor.cli.chemdner",
            "chemdataextractor.cli.cluster",
            "chemdataextractor.cli.config",
            "chemdataextractor.cli.data",
            "chemdataextractor.cli.dict",
            "chemdataextractor.cli.evaluate",
            "chemdataextractor.cli.pos",
            "chemdataextractor.cli.tokenize",
            "chemdataextractor.config",
            "chemdataextractor.data",
            "chemdataextractor.doc",
            "chemdataextractor.doc.document",
            "chemdataextractor.doc.element",
            "chemdataextractor.doc.figure",
            "chemdataextractor.doc.table",
            "chemdataextractor.doc.text",
            "chemdataextractor.errors",
            "chemdataextractor.model",
            "chemdataextractor.nlp",
            "chemdataextractor.nlp.abbrev",
            "chemdataextractor.nlp.cem",
            "chemdataextractor.nlp.corpus",
            "chemdataextractor.nlp.lexicon",
            "chemdataextractor.nlp.pos",
            "chemdataextractor.nlp.tag",
            "chemdataextractor.nlp.tokenize",
            "chemdataextractor.parse",
            "chemdataextractor.parse.actions",
            "chemdataextractor.parse.base",
            "chemdataextractor.parse.cem",
            "chemdataextractor.parse.common",
            "chemdataextractor.parse.context",
            "chemdataextractor.parse.elements",
            "chemdataextractor.parse.ir",
            "chemdataextractor.parse.mp",
            "chemdataextractor.parse.nmr",
            "chemdataextractor.parse.table",
            "chemdataextractor.parse.tg",
            "chemdataextractor.parse.uvvis",
            "chemdataextractor.reader",
            "chemdataextractor.reader.acs",
            "chemdataextractor.reader.base",
            "chemdataextractor.reader.cssp",
            "chemdataextractor.reader.markup",
            "chemdataextractor.reader.nlm",
            "chemdataextractor.reader.pdf",
            "chemdataextractor.reader.plaintext",
            "chemdataextractor.reader.rsc",
            "chemdataextractor.reader.uspto",
            "chemdataextractor.scrape",
            "chemdataextractor.scrape.base",
            "chemdataextractor.scrape.clean",
            "chemdataextractor.scrape.csstranslator",
            "chemdataextractor.scrape.entity",
            "chemdataextractor.scrape.fields",
            "chemdataextractor.scrape.pub",
            "chemdataextractor.scrape.pub.nlm",
            "chemdataextractor.scrape.pub.rsc",
            "chemdataextractor.scrape.pub.springer",
            "chemdataextractor.scrape.scraper",
            "chemdataextractor.scrape.selector",
            "chemdataextractor.text",
            "chemdataextractor.text.chem",
            "chemdataextractor.text.latex",
            "chemdataextractor.text.normalize",
            "chemdataextractor.text.processors",
            "chemdataextractor.text.unwrap",
            "chemdataextractor.utils"
        ],
        "version": "1.3.0"
    },
    "chemdb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chemesis3": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0-alpha"
    },
    "chemfp": {
        "cmdline": [
            "ob2fps",
            "oe2fps",
            "rdkit2fps",
            "sdf2fps",
            "simsearch"
        ],
        "modules": [
            "chemfp",
            "chemfp.Watcher",
            "chemfp.arena",
            "chemfp.argparse",
            "chemfp.bitops",
            "chemfp.commandline",
            "chemfp.commandline.cmdsupport",
            "chemfp.commandline.fpsmerge",
            "chemfp.commandline.ob2fps",
            "chemfp.commandline.oe2fps",
            "chemfp.commandline.rdkit2fps",
            "chemfp.commandline.sdf2fps",
            "chemfp.commandline.simsearch",
            "chemfp.decoders",
            "chemfp.encodings",
            "chemfp.error_handlers",
            "chemfp.fps_io",
            "chemfp.fps_search",
            "chemfp.futures",
            "chemfp.futures._base",
            "chemfp.futures._compat",
            "chemfp.futures.process",
            "chemfp.futures.thread",
            "chemfp.io",
            "chemfp.openbabel",
            "chemfp.openbabel_patterns",
            "chemfp.openeye",
            "chemfp.openeye_patterns",
            "chemfp.pattern_fingerprinter",
            "chemfp.progressbar",
            "chemfp.progressbar.compat",
            "chemfp.progressbar.widgets",
            "chemfp.rdkit",
            "chemfp.rdkit_patterns",
            "chemfp.sdf_reader",
            "chemfp.search",
            "chemfp.slow",
            "chemfp.types"
        ],
        "version": "1.1p1"
    },
    "chemlab": {
        "cmdline": [
            "chemlab"
        ],
        "modules": [
            "chemlab",
            "chemlab.contrib",
            "chemlab.contrib.gromacs",
            "chemlab.core",
            "chemlab.core.atom",
            "chemlab.core.attributes",
            "chemlab.core.base",
            "chemlab.core.fields",
            "chemlab.core.molecule",
            "chemlab.core.random",
            "chemlab.core.serialization",
            "chemlab.core.spacegroup",
            "chemlab.core.spacegroup.cell",
            "chemlab.core.spacegroup.crystal",
            "chemlab.core.spacegroup.spacegroup",
            "chemlab.core.system",
            "chemlab.core.trajectory",
            "chemlab.db",
            "chemlab.db.base",
            "chemlab.db.chemlabdb",
            "chemlab.db.chemspiderdb",
            "chemlab.db.cirdb",
            "chemlab.db.lj",
            "chemlab.db.local",
            "chemlab.db.localdb",
            "chemlab.db.localdb.data",
            "chemlab.db.localdb.molecule",
            "chemlab.db.rcsbdb",
            "chemlab.db.toxnetdb",
            "chemlab.db.units",
            "chemlab.db.utils",
            "chemlab.graphics",
            "chemlab.graphics.buffers",
            "chemlab.graphics.camera",
            "chemlab.graphics.colors",
            "chemlab.graphics.pickers",
            "chemlab.graphics.postprocessing",
            "chemlab.graphics.postprocessing.base",
            "chemlab.graphics.postprocessing.fxaa",
            "chemlab.graphics.postprocessing.gamma",
            "chemlab.graphics.postprocessing.glow",
            "chemlab.graphics.postprocessing.noeffect",
            "chemlab.graphics.postprocessing.outline",
            "chemlab.graphics.postprocessing.shaders",
            "chemlab.graphics.postprocessing.ssao",
            "chemlab.graphics.qt",
            "chemlab.graphics.qt.qchemlabwidget",
            "chemlab.graphics.qt.qttrajectory",
            "chemlab.graphics.qt.qtviewer",
            "chemlab.graphics.renderers",
            "chemlab.graphics.renderers.arrow",
            "chemlab.graphics.renderers.atom",
            "chemlab.graphics.renderers.ballandstick",
            "chemlab.graphics.renderers.base",
            "chemlab.graphics.renderers.bond",
            "chemlab.graphics.renderers.box",
            "chemlab.graphics.renderers.cylinder",
            "chemlab.graphics.renderers.cylinder_imp",
            "chemlab.graphics.renderers.line",
            "chemlab.graphics.renderers.point",
            "chemlab.graphics.renderers.shaders",
            "chemlab.graphics.renderers.sphere",
            "chemlab.graphics.renderers.sphere_imp",
            "chemlab.graphics.renderers.triangles",
            "chemlab.graphics.renderers.wireframe",
            "chemlab.graphics.shaders",
            "chemlab.graphics.textures",
            "chemlab.graphics.transformations",
            "chemlab.graphics.uis",
            "chemlab.io",
            "chemlab.io.datafile",
            "chemlab.io.handlers",
            "chemlab.io.handlers._cclib",
            "chemlab.io.handlers.base",
            "chemlab.io.handlers.cif",
            "chemlab.io.handlers.cml",
            "chemlab.io.handlers.edr",
            "chemlab.io.handlers.gamess",
            "chemlab.io.handlers.gro",
            "chemlab.io.handlers.gro_map",
            "chemlab.io.handlers.hdf",
            "chemlab.io.handlers.mol",
            "chemlab.io.handlers.mol2",
            "chemlab.io.handlers.pdb",
            "chemlab.io.handlers.tinker",
            "chemlab.io.handlers.utils",
            "chemlab.io.handlers.xtctrr",
            "chemlab.io.handlers.xyz",
            "chemlab.io.textutils",
            "chemlab.io.trajectory",
            "chemlab.ipython",
            "chemlab.libs",
            "chemlab.libs.chemspipy",
            "chemlab.libs.cirpy",
            "chemlab.libs.periodic_kdtree",
            "chemlab.libs.pyxdr",
            "chemlab.libs.termcolor",
            "chemlab.md",
            "chemlab.md.analysis",
            "chemlab.md.energy",
            "chemlab.md.ewald",
            "chemlab.md.interactions",
            "chemlab.md.potential",
            "chemlab.md.simulation",
            "chemlab.mviewer",
            "chemlab.mviewer.QIPythonWidget",
            "chemlab.mviewer.api",
            "chemlab.mviewer.api.appeareance",
            "chemlab.mviewer.api.core",
            "chemlab.mviewer.api.display",
            "chemlab.mviewer.api.init",
            "chemlab.mviewer.api.selections",
            "chemlab.mviewer.api.ui",
            "chemlab.mviewer.events",
            "chemlab.mviewer.qtmolecularviewer",
            "chemlab.mviewer.representations",
            "chemlab.mviewer.representations.ballandstick",
            "chemlab.mviewer.representations.obsarray",
            "chemlab.mviewer.representations.state",
            "chemlab.mviewer.representations.vdw",
            "chemlab.notebook",
            "chemlab.notebook.display",
            "chemlab.qc",
            "chemlab.qc.cgbf",
            "chemlab.qc.one",
            "chemlab.qc.pgbf",
            "chemlab.qc.utils",
            "chemlab.qc.wavefunction",
            "chemlab.resources",
            "chemlab.table",
            "chemlab.utils",
            "chemlab.utils.covertree",
            "chemlab.utils.distances",
            "chemlab.utils.formula",
            "chemlab.utils.geometry",
            "chemlab.utils.neighbors",
            "chemlab.utils.numbaz",
            "chemlab.utils.pbc",
            "chemlab.utils.progressbar",
            "examples",
            "examples.nacl",
            "examples.offline_rendering",
            "examples.silicon",
            "examples.tetrahedra_tutorial",
            "examples.view_trajectory",
            "tests",
            "tests.mock",
            "tests.test_base",
            "tests.test_core",
            "tests.test_covertree",
            "tests.test_db",
            "tests.test_io",
            "tests.test_md",
            "tests.test_table",
            "tests.test_trajectory",
            "tests.test_utils",
            "tests.testtools"
        ],
        "version": "1.1"
    },
    "chemlistem": {
        "cmdline": [],
        "modules": [
            "chemlistem",
            "chemlistem.chebiobo",
            "chemlistem.corpusreader",
            "chemlistem.ensemblemodel",
            "chemlistem.extract_rf",
            "chemlistem.featurizer",
            "chemlistem.minimodel",
            "chemlistem.tradmodel",
            "chemlistem.utils",
            "chemtok",
            "chemtok.ChemTokeniser",
            "chemtok.HyphenTokeniser",
            "chemtok.SentenceSplitter",
            "chemtok.StringTools",
            "chemtok.Token"
        ],
        "version": "0.0.2"
    },
    "chempy": {
        "cmdline": [],
        "modules": [
            "chempy",
            "chempy._eqsys",
            "chempy._equilibrium",
            "chempy._release",
            "chempy._solution",
            "chempy._url",
            "chempy._util",
            "chempy.arrhenius",
            "chempy.chemistry",
            "chempy.debye_huckel",
            "chempy.einstein_smoluchowski",
            "chempy.electrochemistry",
            "chempy.electrochemistry.nernst",
            "chempy.electrochemistry.tests",
            "chempy.electrochemistry.tests.test_nernst",
            "chempy.electrolytes",
            "chempy.equilibria",
            "chempy.eyring",
            "chempy.henry",
            "chempy.kinetics",
            "chempy.kinetics._native",
            "chempy.kinetics._rates",
            "chempy.kinetics.analysis",
            "chempy.kinetics.arrhenius",
            "chempy.kinetics.eyring",
            "chempy.kinetics.integrated",
            "chempy.kinetics.ode",
            "chempy.kinetics.rates",
            "chempy.kinetics.tests",
            "chempy.kinetics.tests.test__native",
            "chempy.kinetics.tests.test__rates",
            "chempy.kinetics.tests.test_arrhenius",
            "chempy.kinetics.tests.test_eyring",
            "chempy.kinetics.tests.test_integrated",
            "chempy.kinetics.tests.test_ode",
            "chempy.kinetics.tests.test_rates",
            "chempy.printing",
            "chempy.printing.numbers",
            "chempy.printing.table",
            "chempy.printing.tests",
            "chempy.printing.tests.test_numbers",
            "chempy.printing.tests.test_table",
            "chempy.properties",
            "chempy.properties.debye_huckel_radii",
            "chempy.properties.sulfuric_acid_density_myhre_1998",
            "chempy.properties.tests",
            "chempy.properties.tests.test_sulfuric_acid_density_myhre_1998",
            "chempy.properties.tests.test_water_density_tanaka_2001",
            "chempy.properties.tests.test_water_diffusivity_holz_2000",
            "chempy.properties.tests.test_water_permittivity_bradley_pitzer_1979",
            "chempy.properties.water_density_tanaka_2001",
            "chempy.properties.water_diffusivity_holz_2000",
            "chempy.properties.water_permittivity_bradley_pitzer_1979",
            "chempy.reactionsystem",
            "chempy.symbolic",
            "chempy.tests",
            "chempy.tests.ammonical_cupric_solution",
            "chempy.tests.test__equilibrium",
            "chempy.tests.test_chemistry",
            "chempy.tests.test_core",
            "chempy.tests.test_einstein_smoluchowski",
            "chempy.tests.test_electrolytes",
            "chempy.tests.test_equilibria",
            "chempy.tests.test_henry",
            "chempy.tests.test_reactionsystem",
            "chempy.tests.test_solution",
            "chempy.tests.test_units",
            "chempy.tests.test_util",
            "chempy.thermodynamics",
            "chempy.thermodynamics.expressions",
            "chempy.thermodynamics.tests",
            "chempy.thermodynamics.tests.test_expressions",
            "chempy.units",
            "chempy.util",
            "chempy.util._aqueous",
            "chempy.util._dimensionality",
            "chempy.util._expr",
            "chempy.util._expr_deprecated",
            "chempy.util._quantities",
            "chempy.util.arithmeticdict",
            "chempy.util.bkh",
            "chempy.util.deprecation",
            "chempy.util.graph",
            "chempy.util.numutil",
            "chempy.util.parsing",
            "chempy.util.periodic",
            "chempy.util.pyutil",
            "chempy.util.regression",
            "chempy.util.stoich",
            "chempy.util.table",
            "chempy.util.testing",
            "chempy.util.tests",
            "chempy.util.tests.test_arithmeticdict",
            "chempy.util.tests.test_expr",
            "chempy.util.tests.test_graph",
            "chempy.util.tests.test_numutil",
            "chempy.util.tests.test_parsing",
            "chempy.util.tests.test_periodic",
            "chempy.util.tests.test_pyutil",
            "chempy.util.tests.test_regression",
            "chempy.util.tests.test_stoich",
            "chempy.util.tests.test_table"
        ],
        "version": "0.5.1"
    },
    "chemreac": {
        "cmdline": [],
        "modules": [
            "chemreac",
            "chemreac._config",
            "chemreac._release",
            "chemreac.chemistry",
            "chemreac.constants",
            "chemreac.core",
            "chemreac.integrate",
            "chemreac.serialization",
            "chemreac.symbolic",
            "chemreac.tests",
            "chemreac.tests.test_binary_system",
            "chemreac.tests.test_chemistry",
            "chemreac.tests.test_constants",
            "chemreac.tests.test_decay_chain",
            "chemreac.tests.test_four_species",
            "chemreac.tests.test_integrate",
            "chemreac.tests.test_reactiondiffusion",
            "chemreac.tests.test_serialization",
            "chemreac.tests.test_symbolic",
            "chemreac.units",
            "chemreac.util",
            "chemreac.util.analysis",
            "chemreac.util.banded",
            "chemreac.util.grid",
            "chemreac.util.plotting",
            "chemreac.util.pyutil",
            "chemreac.util.stoich",
            "chemreac.util.table",
            "chemreac.util.testing",
            "chemreac.util.tests",
            "chemreac.util.tests.test_analysis",
            "chemreac.util.tests.test_banded",
            "chemreac.util.tests.test_grid",
            "chemreac.util.tests.test_plotting",
            "chemreac.util.tests.test_pyutil",
            "chemreac.util.tests.test_stoich",
            "chemreac.util.tests.test_table"
        ],
        "version": "0.7.0"
    },
    "chemspipy": {
        "cmdline": [],
        "modules": [
            "chemspipy",
            "chemspipy.api",
            "chemspipy.errors",
            "chemspipy.objects",
            "chemspipy.search",
            "chemspipy.utils"
        ],
        "version": "1.0.5"
    },
    "chemtagger": {
        "cmdline": [],
        "modules": [
            "ChemTagger"
        ],
        "version": "1.0.0"
    },
    "chemview": {
        "cmdline": [],
        "modules": [
            "chemview",
            "chemview._version",
            "chemview.app",
            "chemview.contrib",
            "chemview.export",
            "chemview.gg",
            "chemview.install",
            "chemview.layout",
            "chemview.marchingcubes",
            "chemview.render",
            "chemview.scene",
            "chemview.trajectory",
            "chemview.utils",
            "chemview.viewer",
            "chemview.widget",
            "tests",
            "tests.test_gg",
            "tests.test_povray",
            "tests.test_scene"
        ],
        "version": "0.7.0.dev0"
    },
    "chen": {
        "cmdline": [],
        "modules": [
            "chen"
        ],
        "version": "1.4.0"
    },
    "chen-nester": {
        "cmdline": [],
        "modules": [
            "chen_nester"
        ],
        "version": "1.1.0"
    },
    "chen-nester-1": {
        "cmdline": [],
        "modules": [
            "chen_nester_1"
        ],
        "version": "1.3.0"
    },
    "chenfeiprintlist": {
        "cmdline": [],
        "modules": [
            "chenfeiPrintList"
        ],
        "version": "1.1.0"
    },
    "chenfirst": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "chenjingnester": {
        "cmdline": [],
        "modules": [
            "chenjingnester"
        ],
        "version": "1.3"
    },
    "chenlayz": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "chenonne-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.1"
    },
    "chenopy": {
        "cmdline": [],
        "modules": [
            "chenopy",
            "chenopy.fen",
            "chenopy.pgn",
            "chenopy.san",
            "chenopy.tests",
            "chenopy.tests.fen_tests",
            "chenopy.tests.pgn_tests",
            "chenopy.tests.san_tests"
        ],
        "version": "1.0"
    },
    "chenugnester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chenyangnester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chenzgi1": {
        "cmdline": [],
        "modules": [
            "chengzi1"
        ],
        "version": "1.3.1"
    },
    "cheops": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chephren": {
        "cmdline": [],
        "modules": [
            "chephren",
            "chephren.domain",
            "chephren.website"
        ],
        "version": "0.1.0"
    },
    "cheqlist": {
        "cmdline": [],
        "modules": [
            "cheqlist",
            "cheqlist.app",
            "cheqlist.appdirs",
            "cheqlist.pastewindow",
            "cheqlist.undocommands",
            "cheqlist.undowidget",
            "cheqlist.utils"
        ],
        "version": "0.3.1"
    },
    "chequeconvert": {
        "cmdline": [],
        "modules": [
            "chequeconvert",
            "chequeconvert.base",
            "chequeconvert.main"
        ],
        "version": "0.0.2"
    },
    "cherepanov": {
        "cmdline": [],
        "modules": [
            "Cherepanov"
        ],
        "version": "0.1.0"
    },
    "cherkasov": {
        "cmdline": [],
        "modules": [
            "Cherkasov"
        ],
        "version": "0.1.0"
    },
    "cherniaev": {
        "cmdline": [],
        "modules": [
            "Cherniaev"
        ],
        "version": "0.1.0"
    },
    "chernov": {
        "cmdline": [],
        "modules": [
            "Chernov"
        ],
        "version": "0.1.0"
    },
    "chernyi": {
        "cmdline": [],
        "modules": [
            "Chernyi"
        ],
        "version": "0.1.0"
    },
    "chernykh": {
        "cmdline": [],
        "modules": [
            "Chernykh"
        ],
        "version": "0.1.0"
    },
    "chernyshev": {
        "cmdline": [],
        "modules": [
            "Chernyshev"
        ],
        "version": "0.1.0"
    },
    "cheroids": {
        "cmdline": [],
        "modules": [
            "cheroids",
            "cheroids.json",
            "cheroids.json.base",
            "cheroids.routers",
            "cheroids.routers.crud",
            "cheroids.tools",
            "cheroids.tools.authentication",
            "cheroids.tools.authentication.base",
            "cheroids.tools.authentication.session_plugin",
            "cheroids.tools.authorization",
            "cheroids.tools.authorization.base",
            "cheroids.tools.db",
            "cheroids.tools.db.sa_plugin",
            "cheroids.tools.db.tool"
        ],
        "version": "0.2"
    },
    "cheroot": {
        "cmdline": [],
        "modules": [
            "cheroot",
            "cheroot._compat",
            "cheroot.errors",
            "cheroot.makefile",
            "cheroot.server",
            "cheroot.ssl",
            "cheroot.ssl.builtin",
            "cheroot.ssl.pyopenssl",
            "cheroot.test",
            "cheroot.test.helper",
            "cheroot.test.test_compat",
            "cheroot.test.test_config_server",
            "cheroot.test.test_conn",
            "cheroot.test.test_core",
            "cheroot.test.test_http",
            "cheroot.test.test_wsgiapps",
            "cheroot.test.webtest",
            "cheroot.workers",
            "cheroot.workers.threadpool",
            "cheroot.wsgi"
        ],
        "version": "5.5.0"
    },
    "cherrybase": {
        "cmdline": [
            "cherrybased"
        ],
        "modules": [
            "cherrybase",
            "cherrybase.base",
            "cherrybase.conf",
            "cherrybase.db",
            "cherrybase.db.base",
            "cherrybase.db.drivers",
            "cherrybase.db.drivers.mongodb",
            "cherrybase.db.drivers.mysql",
            "cherrybase.db.drivers.pgsql",
            "cherrybase.db.drivers.sqlite",
            "cherrybase.orm",
            "cherrybase.orm.base",
            "cherrybase.orm.drivers",
            "cherrybase.orm.drivers.alchemy",
            "cherrybase.plugins",
            "cherrybase.rpc",
            "cherrybase.tools",
            "cherrybase.tools.auth",
            "cherrybase.tools.auth.base",
            "cherrybase.tools.auth.controller",
            "cherrybase.tools.jinja",
            "cherrybase.utils"
        ],
        "version": "0.5.1"
    },
    "cherrymusic": {
        "cmdline": [],
        "modules": [
            "audiotranscode",
            "audiotranscode.test",
            "audiotranscode.test.test_transcode",
            "backport",
            "backport.collections",
            "backport.collections._backported",
            "backport.configparser",
            "backport.logging",
            "backport.urllib",
            "backport.urllib.parse",
            "backport.urllib.request",
            "cherrymusicserver",
            "cherrymusicserver.albumartfetcher",
            "cherrymusicserver.api",
            "cherrymusicserver.api.test",
            "cherrymusicserver.api.test.test_v1",
            "cherrymusicserver.api.v1",
            "cherrymusicserver.api.v1.jsontools",
            "cherrymusicserver.api.v1.models",
            "cherrymusicserver.api.v1.resources",
            "cherrymusicserver.api.v1.test",
            "cherrymusicserver.api.v1.test.test_models",
            "cherrymusicserver.api.v1.users",
            "cherrymusicserver.browsersetup",
            "cherrymusicserver.cherrymodel",
            "cherrymusicserver.configuration",
            "cherrymusicserver.database",
            "cherrymusicserver.database.connect",
            "cherrymusicserver.database.defs",
            "cherrymusicserver.database.sql",
            "cherrymusicserver.ext",
            "cherrymusicserver.ext.peewee",
            "cherrymusicserver.ext.zipstream",
            "cherrymusicserver.httphandler",
            "cherrymusicserver.i18n_client",
            "cherrymusicserver.log",
            "cherrymusicserver.metainfo",
            "cherrymusicserver.migrations",
            "cherrymusicserver.migrations.migration_0001",
            "cherrymusicserver.migrations.migration_0002",
            "cherrymusicserver.migrations.migration_0003",
            "cherrymusicserver.migrations.test",
            "cherrymusicserver.migrations.test.test_migration_0003",
            "cherrymusicserver.pathprovider",
            "cherrymusicserver.playlistdb",
            "cherrymusicserver.progress",
            "cherrymusicserver.resultorder",
            "cherrymusicserver.service",
            "cherrymusicserver.sqlitecache",
            "cherrymusicserver.test",
            "cherrymusicserver.test.helpers",
            "cherrymusicserver.test.test_albumartfetcher",
            "cherrymusicserver.test.test_cherrymodel",
            "cherrymusicserver.test.test_configuration",
            "cherrymusicserver.test.test_database",
            "cherrymusicserver.test.test_httphandler",
            "cherrymusicserver.test.test_init",
            "cherrymusicserver.test.test_pathprovider",
            "cherrymusicserver.test.test_playlistdb",
            "cherrymusicserver.test.test_service",
            "cherrymusicserver.test.test_sqlitecache",
            "cherrymusicserver.test.test_userdb",
            "cherrymusicserver.test.test_useroptiondb",
            "cherrymusicserver.test.test_util",
            "cherrymusicserver.tweak",
            "cherrymusicserver.userdb",
            "cherrymusicserver.useroptiondb",
            "cherrymusicserver.util",
            "cmbootstrap",
            "tinytag",
            "tinytag.tinytag"
        ],
        "version": "0.40.0"
    },
    "cherryontop": {
        "cmdline": [],
        "modules": [
            "cherryontop",
            "cherryontop.cache",
            "cherryontop.cache.controller",
            "cherryontop.cache.route",
            "cherryontop.controller",
            "cherryontop.decorators",
            "cherryontop.decorators.body",
            "cherryontop.decorators.qp",
            "cherryontop.decorators.routes",
            "cherryontop.errors",
            "cherryontop.errors.base",
            "cherryontop.errors.req",
            "cherryontop.spinup"
        ],
        "version": "0.0.7"
    },
    "cherrypaste": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cherryproxy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cherrypy": {
        "cmdline": [],
        "modules": [
            "cherrypy",
            "cherrypy._cpchecker",
            "cherrypy._cpcompat",
            "cherrypy._cpconfig",
            "cherrypy._cpdispatch",
            "cherrypy._cperror",
            "cherrypy._cplogging",
            "cherrypy._cpmodpy",
            "cherrypy._cpnative_server",
            "cherrypy._cpreqbody",
            "cherrypy._cprequest",
            "cherrypy._cpserver",
            "cherrypy._cptools",
            "cherrypy._cptree",
            "cherrypy._cpwsgi",
            "cherrypy._cpwsgi_server",
            "cherrypy._helper",
            "cherrypy.daemon",
            "cherrypy.lib",
            "cherrypy.lib.auth",
            "cherrypy.lib.auth_basic",
            "cherrypy.lib.auth_digest",
            "cherrypy.lib.caching",
            "cherrypy.lib.covercp",
            "cherrypy.lib.cpstats",
            "cherrypy.lib.cptools",
            "cherrypy.lib.encoding",
            "cherrypy.lib.gctools",
            "cherrypy.lib.httpauth",
            "cherrypy.lib.httputil",
            "cherrypy.lib.jsontools",
            "cherrypy.lib.lockfile",
            "cherrypy.lib.locking",
            "cherrypy.lib.profiler",
            "cherrypy.lib.reprconf",
            "cherrypy.lib.sessions",
            "cherrypy.lib.static",
            "cherrypy.lib.xmlrpcutil",
            "cherrypy.process",
            "cherrypy.process.plugins",
            "cherrypy.process.servers",
            "cherrypy.process.win32",
            "cherrypy.process.wspbus",
            "cherrypy.scaffold",
            "cherrypy.test",
            "cherrypy.test._test_decorators",
            "cherrypy.test._test_states_demo",
            "cherrypy.test.benchmark",
            "cherrypy.test.checkerdemo",
            "cherrypy.test.helper",
            "cherrypy.test.logtest",
            "cherrypy.test.modfastcgi",
            "cherrypy.test.modfcgid",
            "cherrypy.test.modpy",
            "cherrypy.test.modwsgi",
            "cherrypy.test.sessiondemo",
            "cherrypy.test.test_auth_basic",
            "cherrypy.test.test_auth_digest",
            "cherrypy.test.test_bus",
            "cherrypy.test.test_caching",
            "cherrypy.test.test_compat",
            "cherrypy.test.test_config",
            "cherrypy.test.test_config_server",
            "cherrypy.test.test_conn",
            "cherrypy.test.test_core",
            "cherrypy.test.test_dynamicobjectmapping",
            "cherrypy.test.test_encoding",
            "cherrypy.test.test_etags",
            "cherrypy.test.test_http",
            "cherrypy.test.test_httpauth",
            "cherrypy.test.test_httplib",
            "cherrypy.test.test_iterator",
            "cherrypy.test.test_json",
            "cherrypy.test.test_logging",
            "cherrypy.test.test_mime",
            "cherrypy.test.test_misc_tools",
            "cherrypy.test.test_objectmapping",
            "cherrypy.test.test_params",
            "cherrypy.test.test_proxy",
            "cherrypy.test.test_refleaks",
            "cherrypy.test.test_request_obj",
            "cherrypy.test.test_routes",
            "cherrypy.test.test_session",
            "cherrypy.test.test_sessionauthenticate",
            "cherrypy.test.test_states",
            "cherrypy.test.test_static",
            "cherrypy.test.test_tools",
            "cherrypy.test.test_tutorials",
            "cherrypy.test.test_virtualhost",
            "cherrypy.test.test_wsgi_ns",
            "cherrypy.test.test_wsgi_unix_socket",
            "cherrypy.test.test_wsgi_vhost",
            "cherrypy.test.test_wsgiapps",
            "cherrypy.test.test_xmlrpc",
            "cherrypy.test.webtest",
            "cherrypy.tutorial",
            "cherrypy.tutorial.tut01_helloworld",
            "cherrypy.tutorial.tut02_expose_methods",
            "cherrypy.tutorial.tut03_get_and_post",
            "cherrypy.tutorial.tut04_complex_site",
            "cherrypy.tutorial.tut05_derived_objects",
            "cherrypy.tutorial.tut06_default_method",
            "cherrypy.tutorial.tut07_sessions",
            "cherrypy.tutorial.tut08_generators_and_yield",
            "cherrypy.tutorial.tut09_files",
            "cherrypy.tutorial.tut10_http_errors"
        ],
        "version": "10.2.2"
    },
    "cherrypy-cgiserver": {
        "cmdline": [],
        "modules": [
            "cpcgiserver",
            "cpcgiserver.lib",
            "cpcgiserver.lib.format_"
        ],
        "version": "0.3.6"
    },
    "cherrypy-cors": {
        "cmdline": [],
        "modules": [],
        "version": "1.5"
    },
    "cherrypy-dynpool": {
        "cmdline": [],
        "modules": [
            "cherrypy_dynpool"
        ],
        "version": "2.2.1"
    },
    "cherrypy-jinja2": {
        "cmdline": [],
        "modules": [
            "cherrypy_jinja2"
        ],
        "version": "1.1"
    },
    "cherrypy-jsonrpcserver": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cherrypy-misfortune": {
        "cmdline": [],
        "modules": [
            "cherrypy_misfortune"
        ],
        "version": "1.0"
    },
    "cherrypy-psycopg2": {
        "cmdline": [],
        "modules": [
            "cherrypy_psycopg2"
        ],
        "version": "1.2"
    },
    "cherrypy-psycopg2-crud": {
        "cmdline": [],
        "modules": [
            "cherrypy_psycopg2_crud"
        ],
        "version": "1.3"
    },
    "cherrypy-sqlalchemy": {
        "cmdline": [],
        "modules": [
            "cp_sqlalchemy",
            "cp_sqlalchemy.plugin",
            "cp_sqlalchemy.tool"
        ],
        "version": "0.5.2"
    },
    "cherrypy-wsgiserver": {
        "cmdline": [],
        "modules": [
            "wsgiserver",
            "wsgiserver.ssl_builtin",
            "wsgiserver.ssl_pyopenssl"
        ],
        "version": "0.1dev"
    },
    "cherrypyelixir": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.1"
    },
    "cherrypymako": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.1"
    },
    "cherrypymongodb": {
        "cmdline": [],
        "modules": [
            "mongodb_tool"
        ],
        "version": "0.2.1"
    },
    "cherrys": {
        "cmdline": [],
        "modules": [
            "cherrys"
        ],
        "version": "0.4"
    },
    "chert": {
        "cmdline": [],
        "modules": [
            "chert",
            "chert.core",
            "chert.fal",
            "chert.log",
            "chert.parsers",
            "chert.toc",
            "chert.utils",
            "chert.version"
        ],
        "version": "0.2.1"
    },
    "chesh-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.3"
    },
    "cheshire": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cheshire3": {
        "cmdline": [
            "DocumentConverter.py"
        ],
        "modules": [
            "cheshire3",
            "cheshire3.baseObjects",
            "cheshire3.baseStore",
            "cheshire3.bootstrap",
            "cheshire3.configParser",
            "cheshire3.cqlParser",
            "cheshire3.database",
            "cheshire3.document",
            "cheshire3.documentFactory",
            "cheshire3.documentStore",
            "cheshire3.dynamic",
            "cheshire3.exceptions",
            "cheshire3.extractor",
            "cheshire3.index",
            "cheshire3.indexStore",
            "cheshire3.internal",
            "cheshire3.licensing",
            "cheshire3.logger",
            "cheshire3.marc_to_unicode",
            "cheshire3.marc_utils",
            "cheshire3.normalizer",
            "cheshire3.objectStore",
            "cheshire3.parser",
            "cheshire3.permissionHandler",
            "cheshire3.preParser",
            "cheshire3.protocolMap",
            "cheshire3.queryFactory",
            "cheshire3.queryStore",
            "cheshire3.record",
            "cheshire3.recordStore",
            "cheshire3.resultSet",
            "cheshire3.resultSetStore",
            "cheshire3.selector",
            "cheshire3.server",
            "cheshire3.session",
            "cheshire3.tokenMerger",
            "cheshire3.tokenizer",
            "cheshire3.transformer",
            "cheshire3.user",
            "cheshire3.utils",
            "cheshire3.workflow",
            "cheshire3.xpathProcessor"
        ],
        "version": "1.1.8"
    },
    "chesnokov": {
        "cmdline": [],
        "modules": [
            "Chesnokov"
        ],
        "version": "0.1.0"
    },
    "chess": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chess-py": {
        "cmdline": [],
        "modules": [
            "chess_py",
            "chess_py.core",
            "chess_py.core.algebraic",
            "chess_py.core.algebraic.converter",
            "chess_py.core.algebraic.location",
            "chess_py.core.algebraic.move",
            "chess_py.core.algebraic.notation_const",
            "chess_py.core.board",
            "chess_py.core.color",
            "chess_py.game",
            "chess_py.game.game",
            "chess_py.game.game_state",
            "chess_py.game.interface",
            "chess_py.pieces",
            "chess_py.pieces.bishop",
            "chess_py.pieces.king",
            "chess_py.pieces.knight",
            "chess_py.pieces.pawn",
            "chess_py.pieces.piece",
            "chess_py.pieces.piece_const",
            "chess_py.pieces.queen",
            "chess_py.pieces.rook",
            "chess_py.players",
            "chess_py.players.human",
            "chess_py.players.player",
            "tests",
            "tests.test_core",
            "tests.test_core.test_algebraic",
            "tests.test_core.test_algebraic.test_converter",
            "tests.test_core.test_algebraic.test_location",
            "tests.test_core.test_algebraic.test_move",
            "tests.test_core.test_board",
            "tests.test_core.test_color",
            "tests.test_pieces",
            "tests.test_pieces.test_bishop",
            "tests.test_pieces.test_king",
            "tests.test_pieces.test_knight",
            "tests.test_pieces.test_pawn"
        ],
        "version": "2.6.6"
    },
    "chessboard": {
        "cmdline": [],
        "modules": [
            "chessboard",
            "chessboard.benchmark",
            "chessboard.board",
            "chessboard.cli",
            "chessboard.pieces",
            "chessboard.solver",
            "chessboard.tests",
            "chessboard.tests.test_board",
            "chessboard.tests.test_pieces",
            "chessboard.tests.test_solver"
        ],
        "version": "1.5.3"
    },
    "chessil-tourney-inserter": {
        "cmdline": [],
        "modules": [
            "chessil_tourney_inserter",
            "chessil_tourney_inserter.chessil_tourney_inserter",
            "chessil_tourney_inserter.command_line",
            "chessil_tourney_inserter.swiss98_text_parser"
        ],
        "version": "1.2.3"
    },
    "chessmaster": {
        "cmdline": [],
        "modules": [
            "masterchess",
            "masterchess.chess",
            "masterchess.playchess",
            "masterchess.utils",
            "tests",
            "tests.tests_chess",
            "tests.tests_utils"
        ],
        "version": "1.1.1"
    },
    "chessmind.core": {
        "cmdline": [],
        "modules": [],
        "version": "0.3"
    },
    "chessmind.grok": {
        "cmdline": [],
        "modules": [],
        "version": "0.3"
    },
    "chessmoves": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chessnut": {
        "cmdline": [],
        "modules": [
            "Chessnut",
            "Chessnut.board",
            "Chessnut.game",
            "Chessnut.moves"
        ],
        "version": "0.3.1"
    },
    "chessproblem.ui": {
        "cmdline": [
            "cpd2ffen.py",
            "cpd2png.py",
            "cpd2popeye.py",
            "cpdb.py",
            "cpe.py",
            "demo.py",
            "import_authors.py",
            "import_check.py",
            "import_cities.py",
            "import_countries.py",
            "import_sources.py",
            "schwalbe_urdrucke.py"
        ],
        "modules": [
            "chessproblem",
            "chessproblem.board_drawing",
            "chessproblem.config",
            "chessproblem.config.config_template",
            "chessproblem.config.config_test",
            "chessproblem.image_files",
            "chessproblem.io",
            "chessproblem.io.parse_gridlines_test",
            "chessproblem.io.parse_latex_str_test",
            "chessproblem.io.parse_text_parameter_test",
            "chessproblem.io.read_write_test",
            "chessproblem.io.write_latex_test",
            "chessproblem.kph",
            "chessproblem.model",
            "chessproblem.model.chessproblem_document_test",
            "chessproblem.model.condition_config_template",
            "chessproblem.model.conditions",
            "chessproblem.model.db",
            "chessproblem.model.db_test",
            "chessproblem.model.db_util",
            "chessproblem.model.equals_test",
            "chessproblem.model.memory_db",
            "chessproblem.model.memory_db_test",
            "chessproblem.model.memory_db_test_util",
            "chessproblem.model.model_util",
            "chessproblem.model.normalize_string_test",
            "chessproblem.model.piecetypes",
            "chessproblem.model.piecetypes_config_template",
            "chessproblem.tools",
            "chessproblem.tools.ffen",
            "chessproblem.tools.ffen.ffen_test",
            "chessproblem.tools.ffen.parse_ffen_test",
            "chessproblem.tools.images",
            "chessproblem.tools.import_from_latex",
            "chessproblem.tools.latex",
            "chessproblem.tools.latex.latex_test",
            "chessproblem.tools.popeye",
            "chessproblem.tools.popeye.create_popeye_input_test",
            "chessproblem.tools.schwalbe",
            "chessproblem.ui",
            "chessproblem.ui.board",
            "chessproblem.ui.cairo_context_drawing_tool",
            "chessproblem.ui.database",
            "chessproblem.ui.database.file_importer",
            "chessproblem.ui.database.file_importer_test",
            "chessproblem.ui.database.generic_page",
            "chessproblem.ui.demo",
            "chessproblem.ui.display",
            "chessproblem.ui.help",
            "chessproblem.ui.input",
            "chessproblem.ui.search",
            "chessproblem.ui.search_descriptors",
            "chessproblem.ui.ui_common",
            "chessproblem.ui.ui_model",
            "chessproblem.version",
            "chessproblem.version_test"
        ],
        "version": "1.2.0"
    },
    "chesstab": {
        "cmdline": [],
        "modules": [
            "chesstab",
            "chesstab.apsw",
            "chesstab.apsw.chesssqlite3bit",
            "chesstab.apsw.chesssqlite3bitdu",
            "chesstab.apsw.runchesssqlite3bitdu",
            "chesstab.apsw.sqlite3analysisbit",
            "chesstab.apsw.sqlite3fullposbit",
            "chesstab.apsw.sqlite3partposbit",
            "chesstab.apsw.sqlite3selectionbit",
            "chesstab.chessgames",
            "chesstab.chessgames_winedptchunk",
            "chesstab.chessgames_winedptmulti",
            "chesstab.core",
            "chesstab.core.analysis",
            "chesstab.core.chessrecord",
            "chesstab.core.constants",
            "chesstab.core.engine",
            "chesstab.core.exporters",
            "chesstab.core.filespec",
            "chesstab.core.partialposition",
            "chesstab.core.selectionrule",
            "chesstab.core.uci",
            "chesstab.core.uci_to_pgn",
            "chesstab.db",
            "chesstab.db.chessdb",
            "chesstab.db.chessdbbit",
            "chesstab.db.chessdbbitdu",
            "chesstab.db.chessdbdu",
            "chesstab.db.dbanalysis",
            "chesstab.db.dbanalysisbit",
            "chesstab.db.dbfullpos",
            "chesstab.db.dbfullposbit",
            "chesstab.db.dbpartpos",
            "chesstab.db.dbpartposbit",
            "chesstab.db.dbselectionbit",
            "chesstab.db.runchessdbbitdu",
            "chesstab.db.runchessdbdu",
            "chesstab.dpt",
            "chesstab.dpt.chessdpt",
            "chesstab.dpt.chessdptdu",
            "chesstab.dpt.chessdptdumulti",
            "chesstab.dpt.dptanalysis",
            "chesstab.dpt.dptfullpos",
            "chesstab.dpt.dptpartpos",
            "chesstab.dpt.dptselection",
            "chesstab.dpt.runchessdptdu",
            "chesstab.dpt.runchessdptduchunk",
            "chesstab.dpt.runchessdptdumulti",
            "chesstab.gui",
            "chesstab.gui.board",
            "chesstab.gui.chess",
            "chesstab.gui.chess_ui",
            "chesstab.gui.chessdu",
            "chesstab.gui.chessexception",
            "chesstab.gui.colourscheme",
            "chesstab.gui.constants",
            "chesstab.gui.datadelete",
            "chesstab.gui.dataedit",
            "chesstab.gui.datashow",
            "chesstab.gui.display",
            "chesstab.gui.displayitems",
            "chesstab.gui.engine",
            "chesstab.gui.enginedbdelete",
            "chesstab.gui.enginedbedit",
            "chesstab.gui.enginedbshow",
            "chesstab.gui.enginedisplay",
            "chesstab.gui.engineedit",
            "chesstab.gui.enginegrid",
            "chesstab.gui.enginerow",
            "chesstab.gui.enginetext",
            "chesstab.gui.eventspec",
            "chesstab.gui.fonts",
            "chesstab.gui.game",
            "chesstab.gui.gamedbdelete",
            "chesstab.gui.gamedbedit",
            "chesstab.gui.gamedbshow",
            "chesstab.gui.gamedisplay",
            "chesstab.gui.gameedit",
            "chesstab.gui.gamelistgrid",
            "chesstab.gui.gamerow",
            "chesstab.gui.help",
            "chesstab.gui.options",
            "chesstab.gui.partial",
            "chesstab.gui.partialdbdelete",
            "chesstab.gui.partialdbedit",
            "chesstab.gui.partialdbshow",
            "chesstab.gui.partialdisplay",
            "chesstab.gui.partialedit",
            "chesstab.gui.partialgrid",
            "chesstab.gui.partialrow",
            "chesstab.gui.partialscore",
            "chesstab.gui.positionrow",
            "chesstab.gui.positionscore",
            "chesstab.gui.repertoiredbdelete",
            "chesstab.gui.repertoiredbedit",
            "chesstab.gui.repertoiredbshow",
            "chesstab.gui.repertoiredisplay",
            "chesstab.gui.repertoirerow",
            "chesstab.gui.score",
            "chesstab.gui.selection",
            "chesstab.gui.selectiondbdelete",
            "chesstab.gui.selectiondbedit",
            "chesstab.gui.selectiondbshow",
            "chesstab.gui.selectiondisplay",
            "chesstab.gui.selectionedit",
            "chesstab.gui.selectiongrid",
            "chesstab.gui.selectionrow",
            "chesstab.gui.selectiontext",
            "chesstab.gui.uci",
            "chesstab.help",
            "chesstab.sqlite",
            "chesstab.sqlite.chesssqlite3bit",
            "chesstab.sqlite.chesssqlite3bitdu",
            "chesstab.sqlite.runchesssqlite3bitdu",
            "chesstab.sqlite.sqlite3analysisbit",
            "chesstab.sqlite.sqlite3fullposbit",
            "chesstab.sqlite.sqlite3partposbit",
            "chesstab.sqlite.sqlite3selectionbit"
        ],
        "version": "0.41.7"
    },
    "chesstools": {
        "cmdline": [],
        "modules": [
            "chesstools",
            "chesstools.ai",
            "chesstools.board",
            "chesstools.book",
            "chesstools.list",
            "chesstools.move",
            "chesstools.piece",
            "chesstools.timer"
        ],
        "version": "0.1.8"
    },
    "chest": {
        "cmdline": [],
        "modules": [
            "chest",
            "chest._version",
            "chest.core",
            "chest.utils"
        ],
        "version": "0.2.3"
    },
    "chestnut-ftp-search": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chevah-buildbot-configuration-builder": {
        "cmdline": [],
        "modules": [
            "chevah",
            "chevah.buildbot_configuration_builder",
            "chevah.buildbot_configuration_builder.builder"
        ],
        "version": "0.3.0"
    },
    "chevah-keycert": {
        "cmdline": [],
        "modules": [
            "chevah",
            "chevah.keycert",
            "chevah.keycert.common",
            "chevah.keycert.exceptions",
            "chevah.keycert.sexpy",
            "chevah.keycert.ssh",
            "chevah.keycert.ssl",
            "chevah.keycert.tests",
            "chevah.keycert.tests.helpers",
            "chevah.keycert.tests.keydata",
            "chevah.keycert.tests.test_exceptions",
            "chevah.keycert.tests.test_ssh",
            "chevah.keycert.tests.test_ssl"
        ],
        "version": "1.4.5"
    },
    "chevron": {
        "cmdline": [],
        "modules": [
            "chevron",
            "chevron.main",
            "chevron.renderer",
            "chevron.tokenizer"
        ],
        "version": "0.9.0"
    },
    "chevrons": {
        "cmdline": [],
        "modules": [
            "chevrons",
            "chevrons.pipeline_base",
            "chevrons.pipeline_extra",
            "chevrons.pipeline_hof",
            "chevrons.pipeline_parallel",
            "chevrons.tests",
            "chevrons.tests.examples",
            "chevrons.tests.performance_tests",
            "chevrons.tests.tests"
        ],
        "version": "0.1.3"
    },
    "chewy": {
        "cmdline": [
            "chewy",
            "chewy-update-manifest"
        ],
        "modules": [
            "chewy",
            "chewy.fancy_grid",
            "chewy.manifest",
            "chewy.meta",
            "chewy.module",
            "chewy.session",
            "chewy.version"
        ],
        "version": "0.4"
    },
    "chgender": {
        "cmdline": [],
        "modules": [
            "chgender",
            "chgender.batch",
            "chgender.chgender"
        ],
        "version": "0.0.2"
    },
    "chhandak": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chi": {
        "cmdline": [],
        "modules": [
            "chi",
            "chi.app",
            "chi.argscope",
            "chi.board",
            "chi.board.experiment",
            "chi.board.main",
            "chi.board.resource",
            "chi.board.server",
            "chi.board.util",
            "chi.experiment",
            "chi.function",
            "chi.logger",
            "chi.main",
            "chi.model",
            "chi.ops",
            "chi.process",
            "chi.rl",
            "chi.rl.bdpg",
            "chi.rl.ddpg",
            "chi.rl.dqn",
            "chi.rl.legacy",
            "chi.rl.legacy.agent",
            "chi.rl.legacy.core",
            "chi.rl.legacy.dashboard",
            "chi.rl.legacy.ddpg",
            "chi.rl.legacy.ddpg_test",
            "chi.rl.legacy.filter_env",
            "chi.rl.legacy.run",
            "chi.rl.legacy.tensorfun",
            "chi.rl.legacy.util",
            "chi.rl.legacy.visualization",
            "chi.rl.memory",
            "chi.rl.util",
            "chi.subgraph",
            "chi.util",
            "legacy",
            "legacy.bla",
            "legacy.ddpg",
            "legacy.ddpg_continuous",
            "legacy.ddpg_convolutional",
            "legacy.ddpg_old",
            "legacy.model_function_class_prototype",
            "legacy.subgraph_old",
            "legacy.univtest",
            "legacy.wgan",
            "legacy.wgan_big"
        ],
        "version": "0.2"
    },
    "chiantipy": {
        "cmdline": [],
        "modules": [
            "ChiantiPy",
            "ChiantiPy.Gui",
            "ChiantiPy.Gui.gui_cl",
            "ChiantiPy.Gui.gui_cl.gui",
            "ChiantiPy.Gui.gui_qt",
            "ChiantiPy.Gui.gui_qt.gui",
            "ChiantiPy.Gui.gui_qt.ui",
            "ChiantiPy.Gui.gui_wx",
            "ChiantiPy.Gui.gui_wx.gui",
            "ChiantiPy.Gui.gui_wx.ui",
            "ChiantiPy.base",
            "ChiantiPy.base._IonTrails",
            "ChiantiPy.base._SpecTrails",
            "ChiantiPy.conftest",
            "ChiantiPy.core",
            "ChiantiPy.core.Continuum",
            "ChiantiPy.core.Ion",
            "ChiantiPy.core.Ion-2016-8-16",
            "ChiantiPy.core.Ion-diffs-2016-8-16",
            "ChiantiPy.core.IpyMspectrum",
            "ChiantiPy.core.Mspectrum",
            "ChiantiPy.core.RadLoss",
            "ChiantiPy.core.Spectrum",
            "ChiantiPy.core._IonNew",
            "ChiantiPy.core.tests",
            "ChiantiPy.core.tests.test_Continuum",
            "ChiantiPy.core.tests.test_Ion",
            "ChiantiPy.core.tests.test_RadLoss",
            "ChiantiPy.core.tests.test_Spectrum",
            "ChiantiPy.fortranformat",
            "ChiantiPy.fortranformat.FortranRecordReader",
            "ChiantiPy.fortranformat.FortranRecordWriter",
            "ChiantiPy.fortranformat._edit_descriptors",
            "ChiantiPy.fortranformat._exceptions",
            "ChiantiPy.fortranformat._input",
            "ChiantiPy.fortranformat._lexer",
            "ChiantiPy.fortranformat._misc",
            "ChiantiPy.fortranformat._output",
            "ChiantiPy.fortranformat._parser",
            "ChiantiPy.fortranformat.config",
            "ChiantiPy.tests",
            "ChiantiPy.tests.setup_package",
            "ChiantiPy.tools",
            "ChiantiPy.tools.archival",
            "ChiantiPy.tools.constants",
            "ChiantiPy.tools.data",
            "ChiantiPy.tools.filters",
            "ChiantiPy.tools.io",
            "ChiantiPy.tools.mputil",
            "ChiantiPy.tools.sources",
            "ChiantiPy.tools.util",
            "ChiantiPy.version",
            "astropy_helpers",
            "astropy_helpers.commands",
            "astropy_helpers.commands._dummy",
            "astropy_helpers.commands._test_compat",
            "astropy_helpers.commands.build_ext",
            "astropy_helpers.commands.build_py",
            "astropy_helpers.commands.build_sphinx",
            "astropy_helpers.commands.install",
            "astropy_helpers.commands.install_lib",
            "astropy_helpers.commands.register",
            "astropy_helpers.commands.setup_package",
            "astropy_helpers.commands.test",
            "astropy_helpers.compat",
            "astropy_helpers.compat._subprocess_py2",
            "astropy_helpers.compat.subprocess",
            "astropy_helpers.distutils_helpers",
            "astropy_helpers.git_helpers",
            "astropy_helpers.setup_helpers",
            "astropy_helpers.sphinx",
            "astropy_helpers.sphinx.conf",
            "astropy_helpers.sphinx.ext",
            "astropy_helpers.sphinx.ext.astropyautosummary",
            "astropy_helpers.sphinx.ext.autodoc_enhancements",
            "astropy_helpers.sphinx.ext.automodapi",
            "astropy_helpers.sphinx.ext.automodsumm",
            "astropy_helpers.sphinx.ext.changelog_links",
            "astropy_helpers.sphinx.ext.comment_eater",
            "astropy_helpers.sphinx.ext.compiler_unparse",
            "astropy_helpers.sphinx.ext.docscrape",
            "astropy_helpers.sphinx.ext.docscrape_sphinx",
            "astropy_helpers.sphinx.ext.doctest",
            "astropy_helpers.sphinx.ext.edit_on_github",
            "astropy_helpers.sphinx.ext.numpydoc",
            "astropy_helpers.sphinx.ext.phantom_import",
            "astropy_helpers.sphinx.ext.smart_resolver",
            "astropy_helpers.sphinx.ext.tests",
            "astropy_helpers.sphinx.ext.tests.test_autodoc_enhancements",
            "astropy_helpers.sphinx.ext.tests.test_automodapi",
            "astropy_helpers.sphinx.ext.tests.test_automodsumm",
            "astropy_helpers.sphinx.ext.tests.test_docscrape",
            "astropy_helpers.sphinx.ext.tests.test_utils",
            "astropy_helpers.sphinx.ext.tocdepthfix",
            "astropy_helpers.sphinx.ext.traitsdoc",
            "astropy_helpers.sphinx.ext.utils",
            "astropy_helpers.sphinx.setup_package",
            "astropy_helpers.test_helpers",
            "astropy_helpers.utils",
            "astropy_helpers.version",
            "astropy_helpers.version_helpers"
        ],
        "version": "0.7.dev412"
    },
    "chiasm-shell": {
        "cmdline": [],
        "modules": [
            "chiasm_shell",
            "chiasm_shell.assembler",
            "chiasm_shell.backend",
            "chiasm_shell.chiasm_shell",
            "chiasm_shell.config",
            "chiasm_shell.disassembler"
        ],
        "version": "1.0.0a9"
    },
    "chic": {
        "cmdline": [
            "chic-checker",
            "chic-epg-count-events",
            "chic-epg-get-timeholes",
            "chic-get",
            "chic-memcache",
            "chic-memcache-get",
            "chic-memcache-stats",
            "chic-snmp-trap",
            "chic-to-mosaic",
            "chic-to-zabbix",
            "chic-vz-update-network-details",
            "chic-zabbix-discovery-rule-epg-channels",
            "chic-zabbix-discovery-rule-files",
            "chic-zabbix-discovery-rule-streams",
            "chic-zabbix-discovery-rule-vz-dumps"
        ],
        "modules": [],
        "version": "0.15.1"
    },
    "chicago": {
        "cmdline": [],
        "modules": [
            "chicago",
            "chicago.base",
            "chicago.community_areas",
            "chicago.cook_suburbs",
            "chicago.cook_suburbs.precincts",
            "chicago.illinois",
            "chicago.illinois.counties",
            "chicago.neighborhoods",
            "chicago.precincts",
            "chicago.tracts",
            "chicago.version",
            "chicago.zip_codes"
        ],
        "version": "0.4.1"
    },
    "chicago-tap-scraper": {
        "cmdline": [],
        "modules": [
            "cts",
            "cts.menu",
            "cts.server",
            "cts.taps",
            "cts.taps.corridor",
            "cts.taps.dryhop"
        ],
        "version": "0.0.5"
    },
    "chicagotransit": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.2"
    },
    "chick": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chicken": {
        "cmdline": [],
        "modules": [
            "chicken",
            "chicken.chicken"
        ],
        "version": "0.1.0"
    },
    "chicken-turtle-project": {
        "cmdline": [],
        "modules": [
            "chicken_turtle_project",
            "chicken_turtle_project.common",
            "chicken_turtle_project.mkdoc",
            "chicken_turtle_project.mkproject",
            "chicken_turtle_project.mkvenv",
            "chicken_turtle_project.pre_commit_hook",
            "chicken_turtle_project.release",
            "chicken_turtle_project.specification",
            "chicken_turtle_project.tests",
            "chicken_turtle_project.tests.common",
            "chicken_turtle_project.tests.conftest",
            "chicken_turtle_project.tests.test_mkproject",
            "chicken_turtle_project.tests.test_mkvenv",
            "chicken_turtle_project.tests.test_release"
        ],
        "version": "2.3.0"
    },
    "chicken-turtle-util": {
        "cmdline": [],
        "modules": [
            "chicken_turtle_util",
            "chicken_turtle_util.algorithms",
            "chicken_turtle_util.asyncio",
            "chicken_turtle_util.click",
            "chicken_turtle_util.configuration",
            "chicken_turtle_util.data_frame",
            "chicken_turtle_util.debug",
            "chicken_turtle_util.dict",
            "chicken_turtle_util.exceptions",
            "chicken_turtle_util.function",
            "chicken_turtle_util.hashlib",
            "chicken_turtle_util.http",
            "chicken_turtle_util.inspect",
            "chicken_turtle_util.iterable",
            "chicken_turtle_util.logging",
            "chicken_turtle_util.multi_dict",
            "chicken_turtle_util.observable",
            "chicken_turtle_util.path",
            "chicken_turtle_util.pymysql",
            "chicken_turtle_util.series",
            "chicken_turtle_util.set",
            "chicken_turtle_util.sqlalchemy",
            "chicken_turtle_util.test",
            "chicken_turtle_util.tests",
            "chicken_turtle_util.tests.conftest",
            "chicken_turtle_util.tests.test_algorithms",
            "chicken_turtle_util.tests.test_asyncio",
            "chicken_turtle_util.tests.test_click",
            "chicken_turtle_util.tests.test_configuration",
            "chicken_turtle_util.tests.test_data_frame",
            "chicken_turtle_util.tests.test_debug",
            "chicken_turtle_util.tests.test_dict",
            "chicken_turtle_util.tests.test_function",
            "chicken_turtle_util.tests.test_hashlib",
            "chicken_turtle_util.tests.test_http",
            "chicken_turtle_util.tests.test_inspect",
            "chicken_turtle_util.tests.test_iterable",
            "chicken_turtle_util.tests.test_logging",
            "chicken_turtle_util.tests.test_multi_dict",
            "chicken_turtle_util.tests.test_observable",
            "chicken_turtle_util.tests.test_path",
            "chicken_turtle_util.tests.test_series",
            "chicken_turtle_util.tests.test_set",
            "chicken_turtle_util.tests.test_sqlalchemy"
        ],
        "version": "4.0.1"
    },
    "chickens": {
        "cmdline": [],
        "modules": [
            "chickens",
            "chickens.chicken"
        ],
        "version": "1.8.6"
    },
    "chide": {
        "cmdline": [],
        "modules": [
            "chide",
            "chide.collection",
            "chide.set",
            "chide.sqlalchemy",
            "tests",
            "tests.helpers",
            "tests.test_collection",
            "tests.test_docs",
            "tests.test_set",
            "tests.test_sqlalchemy_collection"
        ],
        "version": "2.0.1"
    },
    "chidg": {
        "cmdline": [],
        "modules": [
            "chidg",
            "chidg.chidg_classes",
            "chidg.chidg_generate_driver",
            "chidg.type_chidg",
            "chidg.type_chidgvis_bc",
            "chidg.type_dict"
        ],
        "version": "0.1.1.post17"
    },
    "chief": {
        "cmdline": [],
        "modules": [
            "chief",
            "chief.version"
        ],
        "version": "0.1.0"
    },
    "chief-james": {
        "cmdline": [],
        "modules": [
            "james"
        ],
        "version": "1.0"
    },
    "chieftain": {
        "cmdline": [],
        "modules": [
            "chieftain"
        ],
        "version": "0.0.0a1"
    },
    "chiffre": {
        "cmdline": [],
        "modules": [
            "chiffre",
            "chiffre.chiffre"
        ],
        "version": "1.0"
    },
    "chiki": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chileatiende": {
        "cmdline": [],
        "modules": [
            "chileatiende",
            "chileatiende.cliente",
            "demos",
            "demos.listaServicios"
        ],
        "version": "0.9"
    },
    "chilero": {
        "cmdline": [],
        "modules": [
            "chilero",
            "chilero.web",
            "chilero.web.application",
            "chilero.web.resource",
            "chilero.web.response",
            "chilero.web.test",
            "chilero.web.view",
            "tests",
            "tests.test_encoder",
            "tests.test_resource",
            "tests.test_web"
        ],
        "version": "0.4.3"
    },
    "chilero-pg": {
        "cmdline": [],
        "modules": [
            "chilero",
            "chilero.pg",
            "chilero.pg.application",
            "chilero.pg.connection",
            "chilero.pg.resource",
            "chilero.pg.test",
            "chilero.pg.utils"
        ],
        "version": "0.4.0"
    },
    "chilin2": {
        "cmdline": [
            "ChiLin2.py"
        ],
        "modules": [
            "chilin2",
            "chilin2.ChiLin2",
            "chilin2.config",
            "chilin2.function_template",
            "chilin2.function_template.qc_annotation",
            "chilin2.function_template.qc_bowtie",
            "chilin2.function_template.qc_ceas",
            "chilin2.function_template.qc_conservation",
            "chilin2.function_template.qc_contamination",
            "chilin2.function_template.qc_fastqc",
            "chilin2.function_template.qc_macs2",
            "chilin2.function_template.qc_mdseqpos",
            "chilin2.function_template.qc_summary_table",
            "chilin2.function_template.qc_venn",
            "chilin2.helpers"
        ],
        "version": "0.2"
    },
    "chill": {
        "cmdline": [],
        "modules": [
            "chill",
            "chill.api",
            "chill.app",
            "chill.cache",
            "chill.client",
            "chill.database",
            "chill.migrations",
            "chill.operate",
            "chill.public",
            "chill.script",
            "chill.shortcodes",
            "chill.test_api",
            "chill.test_loader",
            "chill.tests"
        ],
        "version": "0.3.1"
    },
    "chillaxd": {
        "cmdline": [],
        "modules": [
            "chillaxd",
            "chillaxd.chillax",
            "chillaxd.chillaxd",
            "chillaxd.commands",
            "chillaxd.consensus",
            "chillaxd.consensus.log",
            "chillaxd.consensus.message",
            "chillaxd.consensus.peer",
            "chillaxd.consensus.raft",
            "chillaxd.consensus.tests",
            "chillaxd.consensus.tests.test_message",
            "chillaxd.consensus.tests.test_peer",
            "chillaxd.consensus.tests.test_raft",
            "chillaxd.datanode",
            "chillaxd.datatree",
            "chillaxd.log"
        ],
        "version": "0.1a2"
    },
    "chimas": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chime": {
        "cmdline": [],
        "modules": [
            "chime",
            "chime.chime"
        ],
        "version": "1.0.0"
    },
    "chimeera": {
        "cmdline": [],
        "modules": [
            "chimeera",
            "chimeera.models",
            "chimeera.urls",
            "chimeera.views"
        ],
        "version": "0.1.0"
    },
    "chimera": {
        "cmdline": [],
        "modules": [
            "chimera",
            "chimera.chimera",
            "chimera.chimera_svg",
            "chimera.colors",
            "chimera.fontconfig",
            "chimera.pangocairo",
            "chimera.tests",
            "chimera.tests._test_cairo",
            "chimera.tests.runalltests",
            "chimera.tests.test_chimera",
            "chimera.tests.test_doctest",
            "chimera.tests.test_pango",
            "chimera.tests.test_pangocairo",
            "chimera.tests.test_snippets",
            "chimera.tests.test_stress",
            "chimera.tests.test_svg",
            "chimera.utils"
        ],
        "version": "0.4.7"
    },
    "chimera-python": {
        "cmdline": [
            "chimera",
            "chimera-cam",
            "chimera-console",
            "chimera-dome",
            "chimera-focus",
            "chimera-tel"
        ],
        "modules": [
            "chimera",
            "chimera.controllers",
            "chimera.controllers.admin",
            "chimera.controllers.admin.admin",
            "chimera.controllers.autofocus",
            "chimera.controllers.console",
            "chimera.controllers.console.command",
            "chimera.controllers.console.commander",
            "chimera.controllers.console.commands",
            "chimera.controllers.console.commands.alias",
            "chimera.controllers.console.commands.object",
            "chimera.controllers.console.commands.quit",
            "chimera.controllers.console.commands.site",
            "chimera.controllers.console.commands.unalias",
            "chimera.controllers.console.console",
            "chimera.controllers.console.controller",
            "chimera.controllers.console.message",
            "chimera.controllers.console.namespace",
            "chimera.controllers.scheduler",
            "chimera.controllers.scheduler.blocks",
            "chimera.controllers.scheduler.clock",
            "chimera.controllers.scheduler.constraints",
            "chimera.controllers.scheduler.create-tables",
            "chimera.controllers.scheduler.database",
            "chimera.controllers.scheduler.dummy",
            "chimera.controllers.scheduler.exposures",
            "chimera.controllers.scheduler.ischeduler",
            "chimera.controllers.scheduler.machine",
            "chimera.controllers.scheduler.model",
            "chimera.controllers.scheduler.observer",
            "chimera.controllers.scheduler.program",
            "chimera.controllers.scheduler.programs",
            "chimera.controllers.scheduler.scheduler",
            "chimera.controllers.scheduler.schedulers",
            "chimera.controllers.scheduler.sensors",
            "chimera.controllers.scheduler.sequential",
            "chimera.controllers.site",
            "chimera.controllers.site.config",
            "chimera.controllers.site.main",
            "chimera.core",
            "chimera.core.async",
            "chimera.core.callback",
            "chimera.core.chimeraobject",
            "chimera.core.classloader",
            "chimera.core.compat",
            "chimera.core.config",
            "chimera.core.constants",
            "chimera.core.event",
            "chimera.core.eventsproxy",
            "chimera.core.eventwrapper",
            "chimera.core.exceptions",
            "chimera.core.interface",
            "chimera.core.location",
            "chimera.core.lock",
            "chimera.core.lockwrapper",
            "chimera.core.log",
            "chimera.core.manager",
            "chimera.core.metaobject",
            "chimera.core.methodwrapper",
            "chimera.core.monitor",
            "chimera.core.proxy",
            "chimera.core.remoteobject",
            "chimera.core.resources",
            "chimera.core.rwlock",
            "chimera.core.site",
            "chimera.core.state",
            "chimera.core.threads",
            "chimera.core.util",
            "chimera.core.version",
            "chimera.drivers",
            "chimera.drivers.domelna40cm",
            "chimera.drivers.fakecamera",
            "chimera.drivers.fakedome",
            "chimera.drivers.fakefilterwheel",
            "chimera.drivers.fakefocuser",
            "chimera.drivers.faketelescope",
            "chimera.drivers.meade",
            "chimera.drivers.optectcfs",
            "chimera.drivers.remoteclient",
            "chimera.drivers.remoteserver",
            "chimera.drivers.sbig",
            "chimera.drivers.sbig.sbig",
            "chimera.drivers.sbig.sbigdrv",
            "chimera.drivers.theskytelescope",
            "chimera.instruments",
            "chimera.instruments.camera",
            "chimera.instruments.dome",
            "chimera.instruments.filterwheel",
            "chimera.instruments.focuser",
            "chimera.instruments.telescope",
            "chimera.interfaces",
            "chimera.interfaces.camera",
            "chimera.interfaces.cameradriver",
            "chimera.interfaces.dome",
            "chimera.interfaces.domedriver",
            "chimera.interfaces.filterwheel",
            "chimera.interfaces.filterwheeldriver",
            "chimera.interfaces.focuser",
            "chimera.interfaces.focuserdriver",
            "chimera.interfaces.lifecycle",
            "chimera.interfaces.telescope",
            "chimera.interfaces.telescopedriver",
            "chimera.interfaces.weatherstation",
            "chimera.util",
            "chimera.util.catalog",
            "chimera.util.ccd",
            "chimera.util.coord",
            "chimera.util.enum",
            "chimera.util.etree",
            "chimera.util.etree.ElementInclude",
            "chimera.util.etree.ElementPath",
            "chimera.util.etree.ElementTree",
            "chimera.util.etree.HTMLTreeBuilder",
            "chimera.util.etree.SgmlopXMLTreeBuilder",
            "chimera.util.etree.SimpleXMLTreeBuilder",
            "chimera.util.etree.SimpleXMLWriter",
            "chimera.util.etree.TidyHTMLTreeBuilder",
            "chimera.util.etree.TidyTools",
            "chimera.util.etree.XMLTreeBuilder",
            "chimera.util.filenamesequence",
            "chimera.util.imagesave",
            "chimera.util.observation",
            "chimera.util.output",
            "chimera.util.position",
            "chimera.util.sexcatalog",
            "chimera.util.sextractor",
            "chimera.util.telescopelimits"
        ],
        "version": "0.1"
    },
    "chimere": {
        "cmdline": [],
        "modules": [
            "chimere",
            "chimere.actions",
            "chimere.admin",
            "chimere.def_settings",
            "chimere.external_utils",
            "chimere.external_utils.OsmApi",
            "chimere.feeds",
            "chimere.forms",
            "chimere.manage",
            "chimere.management",
            "chimere.management.commands",
            "chimere.management.commands.chimere_export",
            "chimere.management.commands.chimere_import",
            "chimere.managers",
            "chimere.migrations",
            "chimere.migrations.0001_initial",
            "chimere.migrations.0002_rename_models",
            "chimere.migrations.0003_auto__add_field_route_submiter_session_key__add_field_route_submiter_e",
            "chimere.migrations.0004_auto__add_picturefile__add_multimediafile",
            "chimere.migrations.0005_auto__add_multimediatype__add_field_picturefile_order__del_field_multi",
            "chimere.migrations.0006_auto__add_importer__add_field_route_import_key__add_field_marker_impor",
            "chimere.migrations.0007_auto__add_field_marker_description",
            "chimere.migrations.0008_auto__del_field_importer_subcategory__add_field_route_import_source__a",
            "chimere.migrations.0009_auto__add_field_importer_state",
            "chimere.migrations.0010_auto__add_field_route_import_version__add_field_marker_import_version",
            "chimere.migrations.0011_auto__del_field_importer_source_url__add_field_importer_source",
            "chimere.migrations.0012_auto__chg_field_picturefile_name__chg_field_multimediafile_url__chg_fi",
            "chimere.migrations.0013_auto__add_field_multimediafile_miniature",
            "chimere.migrations.0014_auto__add_field_picturefile_marker__add_field_multimediafile_marker__a",
            "chimere.migrations.0015_auto__chg_field_picturefile_marker__chg_field_multimediafile_marker",
            "chimere.migrations.0016_auto__add_field_importer_zipped",
            "chimere.migrations.0017_auto__add_field_importer_srid",
            "chimere.migrations.0018_auto__add_layer__add_arealayers",
            "chimere.migrations.0019_auto__chg_field_layer_layer_code__add_field_area_welcome_message",
            "chimere.migrations.0020_auto",
            "chimere.migrations.0021_auto",
            "chimere.migrations.0022_auto__add_field_area_external_css",
            "chimere.migrations.0023_auto__add_field_area_restrict_to_extent",
            "chimere.migrations.0024_auto__add_field_marker_available_date",
            "chimere.migrations.0025_auto__add_field_area_dynamic_categories",
            "chimere.migrations.0026_auto__add_field_marker_submiter_name__add_field_route_submiter_name",
            "chimere.migrations.0027_auto__add_field_propertymodel_mandatory__chg_field_marker_submiter_com",
            "chimere.migrations.0028_auto__add_field_picturefile_thumbnailfile__add_field_picturefile_thumb",
            "chimere.migrations.0029_auto__add_field_marker_modified_since_import__add_field_marker_not_for",
            "chimere.migrations.0030_auto__add_field_importer_default_name",
            "chimere.migrations.0031_auto__chg_field_picturefile_width__chg_field_picturefile_height",
            "chimere.migrations.0032_auto__add_field_subcategory_submission",
            "chimere.migrations.0033_auto__add_field_importer_source_file",
            "chimere.migrations.0034_auto__add_field_importer_origin__add_field_importer_license__add_field",
            "chimere.migrations.0035_area_permissions",
            "chimere.migrations.0036_auto",
            "chimere.migrations.0037_auto__add_unique_area_order__add_field_importer_associate_marker_to_wa",
            "chimere.migrations.0038_osm_import_filtr",
            "chimere.migrations.0039_auto__add_multimediaextension__chg_field_multimediafile_multimedia_typ",
            "chimere.migrations.0040_remove_excluded_status",
            "chimere.migrations.0041_auto__add_field_importer_overwrite",
            "chimere.migrations.0042_fix_rights",
            "chimere.migrations.0043_auto__add_field_importer_get_description",
            "chimere.migrations.0044_auto__add_field_importer_default_description",
            "chimere.models",
            "chimere.runtests",
            "chimere.scripts",
            "chimere.scripts.migrate_properties",
            "chimere.scripts.upgrade",
            "chimere.tasks",
            "chimere.templatetags",
            "chimere.templatetags.chimere_tags",
            "chimere.templatetags.inline_formset",
            "chimere.templatetags.sanitize",
            "chimere.templatetags.unlocalize_point",
            "chimere.test_settings",
            "chimere.tests",
            "chimere.urls",
            "chimere.utils",
            "chimere.views",
            "chimere.widgets",
            "chimere_brest",
            "chimere_brest.local_settings",
            "chimere_brest.manage",
            "chimere_brest.settings",
            "chimere_brest.urls",
            "chimere_quiberon",
            "chimere_quiberon.local_settings",
            "chimere_quiberon.manage",
            "chimere_quiberon.settings",
            "chimere_quiberon.urls"
        ],
        "version": "2.0.3"
    },
    "chimney": {
        "cmdline": [],
        "modules": [
            "chimney",
            "chimney.api",
            "chimney.compilers",
            "chimney.executor",
            "chimney.flags",
            "chimney.scheduler",
            "chimney.watch"
        ],
        "version": "0.4"
    },
    "chimp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chimprewriter": {
        "cmdline": [],
        "modules": [
            "chimprewriter",
            "chimprewriter.exceptions",
            "chimprewriter.tests",
            "chimprewriter.tests.test_chimprewriter"
        ],
        "version": "0.1"
    },
    "chimpy": {
        "cmdline": [],
        "modules": [
            "chimpy",
            "chimpy.chimpy",
            "chimpy.test_chimpy",
            "chimpy.utils",
            "chimpy.v12"
        ],
        "version": "0.2b2"
    },
    "china-coord-utils": {
        "cmdline": [],
        "modules": [
            "China_coord_utils"
        ],
        "version": "0.0.1"
    },
    "china-stock": {
        "cmdline": [],
        "modules": [
            "chinastock",
            "chinastock.source",
            "chinastock.source.netease",
            "chinastock.stock",
            "chinastock.stock.basic",
            "chinastock.stock.service",
            "test",
            "test.stock_test"
        ],
        "version": "0.1.5"
    },
    "chinaapi": {
        "cmdline": [],
        "modules": [
            "chinaapi",
            "chinaapi.decorators",
            "chinaapi.douban",
            "chinaapi.douban.open",
            "chinaapi.exceptions",
            "chinaapi.jsonDict",
            "chinaapi.netease",
            "chinaapi.netease.web",
            "chinaapi.open",
            "chinaapi.qq",
            "chinaapi.qq.weibo",
            "chinaapi.qq.weibo.open",
            "chinaapi.renren",
            "chinaapi.renren.open",
            "chinaapi.renren.web",
            "chinaapi.request",
            "chinaapi.sina",
            "chinaapi.sina.weibo",
            "chinaapi.sina.weibo.apps",
            "chinaapi.sina.weibo.open",
            "chinaapi.sina.weibo.web",
            "chinaapi.sohu",
            "chinaapi.sohu.web",
            "chinaapi.taobao",
            "chinaapi.taobao.open",
            "chinaapi.utils",
            "chinaapi.wap",
            "chinaapi.web"
        ],
        "version": "0.8.9"
    },
    "chinaaqi": {
        "cmdline": [],
        "modules": [
            "chinaAQI"
        ],
        "version": "0.1.2"
    },
    "chinabankpay": {
        "cmdline": [],
        "modules": [
            "chinabankpay",
            "chinabankpay.pay"
        ],
        "version": "0.0.1"
    },
    "chinadns": {
        "cmdline": [],
        "modules": [
            "chinadns",
            "chinadns.dnsrelay"
        ],
        "version": "0.2.3"
    },
    "chinaweather": {
        "cmdline": [],
        "modules": [
            "ChinaWeather",
            "ChinaWeather.ChinaWeather"
        ],
        "version": "0.1.0"
    },
    "chinese-cloud": {
        "cmdline": [],
        "modules": [
            "chinese_cloud",
            "chinese_cloud.chinese_cloud",
            "chinese_cloud.integral_occupancy_map"
        ],
        "version": "1.2"
    },
    "chinese-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "chinese-rfid-access-control-library": {
        "cmdline": [],
        "modules": [
            "rfid"
        ],
        "version": "0.0.6"
    },
    "chinese-slugify": {
        "cmdline": [],
        "modules": [
            "chinese_slugify",
            "chinese_slugify.main"
        ],
        "version": "0.1.0"
    },
    "chinesepdflatex": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.7"
    },
    "chinesepostman": {
        "cmdline": [],
        "modules": [
            "chinesepostman",
            "chinesepostman.dijkstra",
            "chinesepostman.eularian",
            "chinesepostman.my_iter",
            "chinesepostman.my_math",
            "chinesepostman.network"
        ],
        "version": "0.0.2"
    },
    "chineseregion": {
        "cmdline": [],
        "modules": [
            "chineseregion",
            "chineseregion.main"
        ],
        "version": "0.0.5"
    },
    "chineseseg": {
        "cmdline": [],
        "modules": [
            "chineseseg"
        ],
        "version": "0.6"
    },
    "chinesestockapi": {
        "cmdline": [],
        "modules": [
            "cstock",
            "cstock.base_engine",
            "cstock.hexun_engine",
            "cstock.model",
            "cstock.request",
            "cstock.sina_engine",
            "cstock.yahoo_engine"
        ],
        "version": "1.4"
    },
    "chinesestockapi-py2": {
        "cmdline": [],
        "modules": [
            "cstock",
            "cstock.base_engine",
            "cstock.hexun_engine",
            "cstock.model",
            "cstock.request",
            "cstock.sina_engine",
            "cstock.yahoo_engine"
        ],
        "version": "1.1"
    },
    "chinesestockapi-py3": {
        "cmdline": [],
        "modules": [
            "cstock",
            "cstock.base_engine",
            "cstock.hexun_engine",
            "cstock.model",
            "cstock.request",
            "cstock.sina_engine",
            "cstock.yahoo_engine"
        ],
        "version": "1.0.1"
    },
    "chinesetone": {
        "cmdline": [],
        "modules": [
            "ChineseTone",
            "ChineseTone.chinesetone"
        ],
        "version": "0.1.4"
    },
    "chinesewordfinder": {
        "cmdline": [],
        "modules": [
            "ChineseWordFinder",
            "ChineseWordFinder.ChineseWordFinder"
        ],
        "version": "1.0.0"
    },
    "chino": {
        "cmdline": [],
        "modules": [
            "chino",
            "chino.api",
            "chino.exceptions",
            "chino.objects"
        ],
        "version": "1.0.3"
    },
    "chinup": {
        "cmdline": [],
        "modules": [
            "chinup",
            "chinup.allauth",
            "chinup.cache",
            "chinup.chinup",
            "chinup.exceptions",
            "chinup.lowlevel",
            "chinup.middleware",
            "chinup.queue",
            "chinup.settings",
            "chinup.testing",
            "chinup.util"
        ],
        "version": "0.3.2"
    },
    "chios": {
        "cmdline": [],
        "modules": [
            "chios",
            "chios.bolditalic",
            "chios.remotecode",
            "chios.remoteinclude"
        ],
        "version": "0.1.4"
    },
    "chip": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chip-arest": {
        "cmdline": [
            "chip-arest-basic.py"
        ],
        "modules": [
            "CHIP_aREST",
            "CHIP_aREST.aREST"
        ],
        "version": "0.2.0"
    },
    "chip-io": {
        "cmdline": [],
        "modules": [
            "CHIP_IO",
            "CHIP_IO.LRADC",
            "CHIP_IO.OverlayManager",
            "CHIP_IO.Utilities"
        ],
        "version": "0.5.8"
    },
    "chip-teststand": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chiplotle": {
        "cmdline": [
            "envelope.py",
            "find_hpgl_file_dimensions.py",
            "plot_hpgl_file.py",
            "plot_hpgl_file_max_size.py",
            "plot_hpgl_file_virtual.py",
            "typewriter.py",
            "view_hpgl_file.py"
        ],
        "modules": [
            "chiplotle"
        ],
        "version": "0.4"
    },
    "chipmunk": {
        "cmdline": [],
        "modules": [
            "chipmunk",
            "chipmunk.storage_rodent"
        ],
        "version": "1.0.1"
    },
    "chipper": {
        "cmdline": [],
        "modules": [
            "chipper"
        ],
        "version": "0.1"
    },
    "chippy": {
        "cmdline": [],
        "modules": [
            "chippy",
            "chippy.mmlparser",
            "chippy.synthesizer"
        ],
        "version": "0.1.0"
    },
    "chips": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chips-cnc-toolmanager": {
        "cmdline": [],
        "modules": [
            "chips",
            "chips.actions",
            "chips.application_admin",
            "chips.art",
            "chips.calculations",
            "chips.default_gcodes",
            "chips.fixtures",
            "chips.model",
            "chips.processors",
            "chips.test",
            "chips.unicodeCSV",
            "chips.utils",
            "chips.validators"
        ],
        "version": "0.1.a1"
    },
    "chipsec": {
        "cmdline": [],
        "modules": [
            "chipsec",
            "chipsec.cfg",
            "chipsec.cfg.common",
            "chipsec.chipset",
            "chipsec.command",
            "chipsec.defines",
            "chipsec.file",
            "chipsec.hal",
            "chipsec.hal.acpi",
            "chipsec.hal.acpi_tables",
            "chipsec.hal.cmos",
            "chipsec.hal.cpu",
            "chipsec.hal.cpuid",
            "chipsec.hal.ec",
            "chipsec.hal.hal_base",
            "chipsec.hal.igd",
            "chipsec.hal.interrupts",
            "chipsec.hal.io",
            "chipsec.hal.iobar",
            "chipsec.hal.iommu",
            "chipsec.hal.mmio",
            "chipsec.hal.msgbus",
            "chipsec.hal.msr",
            "chipsec.hal.paging",
            "chipsec.hal.pci",
            "chipsec.hal.pcidb",
            "chipsec.hal.physmem",
            "chipsec.hal.smbus",
            "chipsec.hal.spd",
            "chipsec.hal.spi",
            "chipsec.hal.spi_descriptor",
            "chipsec.hal.spi_uefi",
            "chipsec.hal.tpm",
            "chipsec.hal.tpm12_commands",
            "chipsec.hal.ucode",
            "chipsec.hal.uefi",
            "chipsec.hal.uefi_common",
            "chipsec.hal.uefi_platform",
            "chipsec.hal.uefi_search",
            "chipsec.hal.vmm",
            "chipsec.helper",
            "chipsec.helper.efi",
            "chipsec.helper.efi.efihelper",
            "chipsec.helper.helpers",
            "chipsec.helper.linux",
            "chipsec.helper.linux.helper",
            "chipsec.helper.oshelper",
            "chipsec.helper.osx",
            "chipsec.helper.osx.helper",
            "chipsec.helper.rwe",
            "chipsec.helper.rwe.rwehelper",
            "chipsec.helper.win",
            "chipsec.helper.win.win32helper",
            "chipsec.logger",
            "chipsec.module",
            "chipsec.module_common",
            "chipsec.modules",
            "chipsec.modules.bdw",
            "chipsec.modules.byt",
            "chipsec.modules.common",
            "chipsec.modules.common.bios_kbrd_buffer",
            "chipsec.modules.common.bios_smi",
            "chipsec.modules.common.bios_ts",
            "chipsec.modules.common.bios_wp",
            "chipsec.modules.common.ia32cfg",
            "chipsec.modules.common.rtclock",
            "chipsec.modules.common.secureboot",
            "chipsec.modules.common.secureboot.variables",
            "chipsec.modules.common.smm",
            "chipsec.modules.common.smrr",
            "chipsec.modules.common.spi_desc",
            "chipsec.modules.common.spi_fdopss",
            "chipsec.modules.common.spi_lock",
            "chipsec.modules.common.uefi",
            "chipsec.modules.common.uefi.access_uefispec",
            "chipsec.modules.common.uefi.s3bootscript",
            "chipsec.modules.hsw",
            "chipsec.modules.ivb",
            "chipsec.modules.memconfig",
            "chipsec.modules.remap",
            "chipsec.modules.smm_dma",
            "chipsec.modules.snb",
            "chipsec.modules.tools",
            "chipsec.modules.tools.cpu",
            "chipsec.modules.tools.cpu.sinkhole",
            "chipsec.modules.tools.secureboot",
            "chipsec.modules.tools.secureboot.te",
            "chipsec.modules.tools.smm",
            "chipsec.modules.tools.smm.rogue_mmio_bar",
            "chipsec.modules.tools.smm.smm_ptr",
            "chipsec.modules.tools.uefi",
            "chipsec.modules.tools.uefi.blacklist",
            "chipsec.modules.tools.uefi.s3script_modify",
            "chipsec.modules.tools.uefi.uefivar_fuzz",
            "chipsec.modules.tools.uefi.whitelist",
            "chipsec.modules.tools.vmm",
            "chipsec.modules.tools.vmm.common",
            "chipsec.modules.tools.vmm.cpuid_fuzz",
            "chipsec.modules.tools.vmm.hv",
            "chipsec.modules.tools.vmm.hv.define",
            "chipsec.modules.tools.vmm.hv.hypercall",
            "chipsec.modules.tools.vmm.hv.hypercallfuzz",
            "chipsec.modules.tools.vmm.hv.synth_dev",
            "chipsec.modules.tools.vmm.hv.synth_kbd",
            "chipsec.modules.tools.vmm.hv.vmbus",
            "chipsec.modules.tools.vmm.hv.vmbusfuzz",
            "chipsec.modules.tools.vmm.hypercallfuzz",
            "chipsec.modules.tools.vmm.iofuzz",
            "chipsec.modules.tools.vmm.msr_fuzz",
            "chipsec.modules.tools.vmm.pcie_fuzz",
            "chipsec.modules.tools.vmm.pcie_overlap_fuzz",
            "chipsec.modules.tools.vmm.vbox",
            "chipsec.modules.tools.vmm.vbox.vbox_crash_apicbase",
            "chipsec.modules.tools.vmm.venom",
            "chipsec.modules.tools.vmm.xen",
            "chipsec.modules.tools.vmm.xen.define",
            "chipsec.modules.tools.vmm.xen.hypercall",
            "chipsec.modules.tools.vmm.xen.hypercallfuzz",
            "chipsec.modules.tools.vmm.xen.xsa188",
            "chipsec.utilcmd",
            "chipsec.utilcmd.acpi_cmd",
            "chipsec.utilcmd.chipset_cmd",
            "chipsec.utilcmd.cmos_cmd",
            "chipsec.utilcmd.cpu_cmd",
            "chipsec.utilcmd.decode_cmd",
            "chipsec.utilcmd.desc_cmd",
            "chipsec.utilcmd.ec_cmd",
            "chipsec.utilcmd.igd_cmd",
            "chipsec.utilcmd.interrupts_cmd",
            "chipsec.utilcmd.io_cmd",
            "chipsec.utilcmd.iommu_cmd",
            "chipsec.utilcmd.mem_cmd",
            "chipsec.utilcmd.mmcfg_cmd",
            "chipsec.utilcmd.mmio_cmd",
            "chipsec.utilcmd.msgbus_cmd",
            "chipsec.utilcmd.msr_cmd",
            "chipsec.utilcmd.pci_cmd",
            "chipsec.utilcmd.smbus_cmd",
            "chipsec.utilcmd.spd_cmd",
            "chipsec.utilcmd.spi_cmd",
            "chipsec.utilcmd.spidesc_cmd",
            "chipsec.utilcmd.ucode_cmd",
            "chipsec.utilcmd.uefi_cmd",
            "chipsec.utilcmd.vmm_cmd",
            "chipsec.xmlout",
            "chipsec_main",
            "chipsec_tools",
            "chipsec_tools.linux",
            "chipsec_tools.windows",
            "chipsec_util"
        ],
        "version": "1.3.0"
    },
    "chipster-job-manager": {
        "cmdline": [],
        "modules": [
            "jobmanager",
            "jobmanager.manager",
            "jobmanager.models",
            "jobmanager.run_flask",
            "jobmanager.utils"
        ],
        "version": "3.1.8"
    },
    "chipwhisperer": {
        "cmdline": [
            "chipwhisperer-ana",
            "chipwhisperer-cap"
        ],
        "modules": [
            "chipwhisperer",
            "chipwhisperer.analyzer",
            "chipwhisperer.analyzer.attacks",
            "chipwhisperer.analyzer.attacks._base",
            "chipwhisperer.analyzer.attacks._channel_estimate_attack",
            "chipwhisperer.analyzer.attacks._stats",
            "chipwhisperer.analyzer.attacks.algorithmsbase",
            "chipwhisperer.analyzer.attacks.cpa",
            "chipwhisperer.analyzer.attacks.cpa_algorithms",
            "chipwhisperer.analyzer.attacks.cpa_algorithms.bayesian",
            "chipwhisperer.analyzer.attacks.cpa_algorithms.experimentalchannelinfo",
            "chipwhisperer.analyzer.attacks.cpa_algorithms.progressive",
            "chipwhisperer.analyzer.attacks.cpa_algorithms.progressive_caccel",
            "chipwhisperer.analyzer.attacks.cpa_algorithms.simpleloop",
            "chipwhisperer.analyzer.attacks.models",
            "chipwhisperer.analyzer.attacks.models.AES128_8bit",
            "chipwhisperer.analyzer.attacks.models.AES256_8bit",
            "chipwhisperer.analyzer.attacks.models.DES",
            "chipwhisperer.analyzer.attacks.models.aes",
            "chipwhisperer.analyzer.attacks.models.aes.funcs",
            "chipwhisperer.analyzer.attacks.models.aes.key_schedule",
            "chipwhisperer.analyzer.attacks.models.base",
            "chipwhisperer.analyzer.attacks.profiling",
            "chipwhisperer.analyzer.attacks.profiling_algorithms",
            "chipwhisperer.analyzer.attacks.profiling_algorithms.template",
            "chipwhisperer.analyzer.preprocessing",
            "chipwhisperer.analyzer.preprocessing.Normalize",
            "chipwhisperer.analyzer.preprocessing._base",
            "chipwhisperer.analyzer.preprocessing.add_noise_jitter",
            "chipwhisperer.analyzer.preprocessing.add_noise_random",
            "chipwhisperer.analyzer.preprocessing.cache_traces",
            "chipwhisperer.analyzer.preprocessing.decimation_clock_recovery",
            "chipwhisperer.analyzer.preprocessing.decimation_fixed",
            "chipwhisperer.analyzer.preprocessing.digital_filter",
            "chipwhisperer.analyzer.preprocessing.resync_cross_correlation",
            "chipwhisperer.analyzer.preprocessing.resync_dtw",
            "chipwhisperer.analyzer.preprocessing.resync_peak_detect",
            "chipwhisperer.analyzer.preprocessing.resync_resample_zc",
            "chipwhisperer.analyzer.preprocessing.resync_sad",
            "chipwhisperer.analyzer.scripts",
            "chipwhisperer.analyzer.scripts.cpaattack",
            "chipwhisperer.analyzer.ui",
            "chipwhisperer.analyzer.ui.CWAnalyzerGUI",
            "chipwhisperer.analyzer.utils",
            "chipwhisperer.analyzer.utils.Partition",
            "chipwhisperer.analyzer.utils.TraceExplorerDialog",
            "chipwhisperer.analyzer.utils.TraceExplorerScripts",
            "chipwhisperer.analyzer.utils.TraceExplorerScripts.PartitionDisplay",
            "chipwhisperer.analyzer.utils.TraceExplorerScripts.TextDisplay",
            "chipwhisperer.analyzer.utils.attackscriptgen",
            "chipwhisperer.analyzer.utils.fasterdtw",
            "chipwhisperer.analyzer.utils.partitiontools",
            "chipwhisperer.analyzer.utils.populations",
            "chipwhisperer.analyzer.utils.scripteditor",
            "chipwhisperer.analyzer.utils.syntaxhighlighter",
            "chipwhisperer.capture",
            "chipwhisperer.capture.acq_patterns",
            "chipwhisperer.capture.acq_patterns._base",
            "chipwhisperer.capture.acq_patterns.basic",
            "chipwhisperer.capture.acq_patterns.crittest",
            "chipwhisperer.capture.acq_patterns.dpahelper",
            "chipwhisperer.capture.api",
            "chipwhisperer.capture.api.acquisition_controller",
            "chipwhisperer.capture.api.programmers",
            "chipwhisperer.capture.auxiliary",
            "chipwhisperer.capture.auxiliary.FrequencyMeasure",
            "chipwhisperer.capture.auxiliary.GPIOToggle",
            "chipwhisperer.capture.auxiliary.ResetAVR",
            "chipwhisperer.capture.auxiliary.ResetCW1173Read",
            "chipwhisperer.capture.auxiliary._base",
            "chipwhisperer.capture.scopes",
            "chipwhisperer.capture.scopes.OpenADC",
            "chipwhisperer.capture.scopes.PicoScope",
            "chipwhisperer.capture.scopes.VisaScope",
            "chipwhisperer.capture.scopes._OpenADCInterface",
            "chipwhisperer.capture.scopes._qt",
            "chipwhisperer.capture.scopes.base",
            "chipwhisperer.capture.scopes.cwhardware",
            "chipwhisperer.capture.scopes.cwhardware.ChipWhispererDecodeTrigger",
            "chipwhisperer.capture.scopes.cwhardware.ChipWhispererDigitalPattern",
            "chipwhisperer.capture.scopes.cwhardware.ChipWhispererExtra",
            "chipwhisperer.capture.scopes.cwhardware.ChipWhispererFWLoader",
            "chipwhisperer.capture.scopes.cwhardware.ChipWhispererFWLoaderGUI",
            "chipwhisperer.capture.scopes.cwhardware.ChipWhispererGlitch",
            "chipwhisperer.capture.scopes.cwhardware.ChipWhispererLite",
            "chipwhisperer.capture.scopes.cwhardware.ChipWhispererSAD",
            "chipwhisperer.capture.scopes.cwhardware.ChipWhispererSAM3Update",
            "chipwhisperer.capture.scopes.cwhardware.ChipWhispererTargets",
            "chipwhisperer.capture.scopes.cwhardware.PartialReconfiguration",
            "chipwhisperer.capture.scopes.cwhardware.ztex_fwloader",
            "chipwhisperer.capture.scopes.openadc_interface",
            "chipwhisperer.capture.scopes.openadc_interface.ftdi",
            "chipwhisperer.capture.scopes.openadc_interface.naeusbchip",
            "chipwhisperer.capture.scopes.openadc_interface.oadc_serial",
            "chipwhisperer.capture.scopes.openadc_interface.ztex",
            "chipwhisperer.capture.scopes.visascope_interface",
            "chipwhisperer.capture.scopes.visascope_interface._base",
            "chipwhisperer.capture.scopes.visascope_interface.dso1024A",
            "chipwhisperer.capture.scopes.visascope_interface.mso54831D",
            "chipwhisperer.capture.scripts",
            "chipwhisperer.capture.scripts.cw305-cwlite",
            "chipwhisperer.capture.scripts.cwlite-simpleserialnotduino",
            "chipwhisperer.capture.scripts.cwlite-simpleserialxmega",
            "chipwhisperer.capture.scripts.cwlite-simpleserialxmega-spa",
            "chipwhisperer.capture.scripts.cwlite-simpleserialxmegades",
            "chipwhisperer.capture.scripts.cwlite-timingattack",
            "chipwhisperer.capture.scripts.cwrev2-simpleserial",
            "chipwhisperer.capture.scripts.sakurag-aes",
            "chipwhisperer.capture.scripts.sasebow-cardos",
            "chipwhisperer.capture.targets",
            "chipwhisperer.capture.targets.CW305",
            "chipwhisperer.capture.targets.ChipWhispererSPI",
            "chipwhisperer.capture.targets.SAKURAG",
            "chipwhisperer.capture.targets.SASEBOGII",
            "chipwhisperer.capture.targets.SimpleSerial",
            "chipwhisperer.capture.targets.SmartCard",
            "chipwhisperer.capture.targets._base",
            "chipwhisperer.capture.targets._smartcard_gui",
            "chipwhisperer.capture.targets.simpleserial_readers",
            "chipwhisperer.capture.targets.simpleserial_readers._base",
            "chipwhisperer.capture.targets.simpleserial_readers.cw",
            "chipwhisperer.capture.targets.simpleserial_readers.cwlite",
            "chipwhisperer.capture.targets.simpleserial_readers.sys_serial",
            "chipwhisperer.capture.targets.smartcard_protocols",
            "chipwhisperer.capture.targets.smartcard_protocols._base",
            "chipwhisperer.capture.targets.smartcard_protocols.dpav42",
            "chipwhisperer.capture.targets.smartcard_protocols.jcardtest",
            "chipwhisperer.capture.targets.smartcard_protocols.sasebowcardos",
            "chipwhisperer.capture.targets.smartcard_readers",
            "chipwhisperer.capture.targets.smartcard_readers._base",
            "chipwhisperer.capture.targets.smartcard_readers.chipwhisperer_scard",
            "chipwhisperer.capture.targets.smartcard_readers.chipwhisperer_ser",
            "chipwhisperer.capture.targets.smartcard_readers.chipwhisperer_usi",
            "chipwhisperer.capture.targets.smartcard_readers.chipwhispererlite_scard",
            "chipwhisperer.capture.targets.smartcard_readers.cwsasebow_scard",
            "chipwhisperer.capture.targets.smartcard_readers.pcsc",
            "chipwhisperer.capture.targets.smartcard_readers.system_ser",
            "chipwhisperer.capture.ui",
            "chipwhisperer.capture.ui.CWCaptureGUI",
            "chipwhisperer.capture.ui.EncryptionStatusMonitor",
            "chipwhisperer.capture.ui.GlitchExplorerDialog",
            "chipwhisperer.capture.ui.programmers_dialog",
            "chipwhisperer.capture.utils",
            "chipwhisperer.capture.utils.IntelHex",
            "chipwhisperer.capture.utils.SerialProtocols",
            "chipwhisperer.capture.utils.SerialTerminalDialog",
            "chipwhisperer.capture.utils.programming_files",
            "chipwhisperer.common",
            "chipwhisperer.common.api",
            "chipwhisperer.common.api.CWCoreAPI",
            "chipwhisperer.common.api.ProjectFormat",
            "chipwhisperer.common.api.TraceManager",
            "chipwhisperer.common.api.autoscript",
            "chipwhisperer.common.api.dictdiffer",
            "chipwhisperer.common.api.settings",
            "chipwhisperer.common.results",
            "chipwhisperer.common.results._plotdata",
            "chipwhisperer.common.results.attacksettings",
            "chipwhisperer.common.results.base",
            "chipwhisperer.common.results.corrvstraceplot",
            "chipwhisperer.common.results.outputvstimeplot",
            "chipwhisperer.common.results.pgevstraceplot",
            "chipwhisperer.common.results.save",
            "chipwhisperer.common.results.scatterplot",
            "chipwhisperer.common.results.table",
            "chipwhisperer.common.results.tracerecorder",
            "chipwhisperer.common.results.waveform_widget",
            "chipwhisperer.common.scripts",
            "chipwhisperer.common.scripts.base",
            "chipwhisperer.common.traces",
            "chipwhisperer.common.traces.TraceContainerDPAv3",
            "chipwhisperer.common.traces.TraceContainerMySQL",
            "chipwhisperer.common.traces.TraceContainerNative",
            "chipwhisperer.common.traces.TraceContainerTypes",
            "chipwhisperer.common.traces._base",
            "chipwhisperer.common.traces._cfgfile",
            "chipwhisperer.common.ui",
            "chipwhisperer.common.ui.CWMainGUI",
            "chipwhisperer.common.ui.GraphWidget",
            "chipwhisperer.common.ui.HelpWindow",
            "chipwhisperer.common.ui.KeyScheduleDialog",
            "chipwhisperer.common.ui.ParameterTypesCustom",
            "chipwhisperer.common.ui.PreferencesDialog",
            "chipwhisperer.common.ui.ProgressBar",
            "chipwhisperer.common.ui.ProjectTextEditor",
            "chipwhisperer.common.ui.PythonConsole",
            "chipwhisperer.common.ui.TraceManagerDialog",
            "chipwhisperer.common.ui.TraceManagerImport",
            "chipwhisperer.common.ui.ValidationDialog",
            "chipwhisperer.common.ui.logger_widget",
            "chipwhisperer.common.ui.projectdiffwidget",
            "chipwhisperer.common.ui.pysidegraph",
            "chipwhisperer.common.ui.qrc_resources",
            "chipwhisperer.common.ui.saveproject",
            "chipwhisperer.common.utils",
            "chipwhisperer.common.utils.aes_cipher",
            "chipwhisperer.common.utils.aes_tables",
            "chipwhisperer.common.utils.analysissource",
            "chipwhisperer.common.utils.parameter",
            "chipwhisperer.common.utils.pluginmanager",
            "chipwhisperer.common.utils.qt_tweaks",
            "chipwhisperer.common.utils.serialport",
            "chipwhisperer.common.utils.timer",
            "chipwhisperer.common.utils.tracereader_dpacontestv3",
            "chipwhisperer.common.utils.tracereader_native",
            "chipwhisperer.common.utils.tracesource",
            "chipwhisperer.common.utils.util",
            "chipwhisperer.hardware",
            "chipwhisperer.hardware.firmware",
            "chipwhisperer.hardware.firmware.cw1200",
            "chipwhisperer.hardware.firmware.cw305",
            "chipwhisperer.hardware.firmware.cwcr2",
            "chipwhisperer.hardware.firmware.cwlite",
            "chipwhisperer.hardware.firmware.generate_firmware_files",
            "chipwhisperer.hardware.naeusb",
            "chipwhisperer.hardware.naeusb.bootloader_sam3u",
            "chipwhisperer.hardware.naeusb.fpga",
            "chipwhisperer.hardware.naeusb.naeusb",
            "chipwhisperer.hardware.naeusb.pll_cdce906",
            "chipwhisperer.hardware.naeusb.programmer_avr",
            "chipwhisperer.hardware.naeusb.programmer_chipcon",
            "chipwhisperer.hardware.naeusb.programmer_xmega",
            "chipwhisperer.hardware.naeusb.serial",
            "chipwhisperer.tests",
            "chipwhisperer.tests.aescpaeattackscript",
            "chipwhisperer.tests.descpaeattackscript",
            "chipwhisperer.tests.glitchscript",
            "chipwhisperer.tests.templateattackscript",
            "chipwhisperer.tests.test_API"
        ],
        "version": "3.4.1"
    },
    "chipymap": {
        "cmdline": [],
        "modules": [
            "chipymap"
        ],
        "version": "0.1"
    },
    "chirp": {
        "cmdline": [],
        "modules": [
            "chirp",
            "chirp.common",
            "chirp.common._tools",
            "chirp.common.audio",
            "chirp.common.clg",
            "chirp.common.config",
            "chirp.common.geom",
            "chirp.common.graphics",
            "chirp.common.math",
            "chirp.common.plg",
            "chirp.common.postfilter",
            "chirp.common.progress",
            "chirp.common.signal",
            "chirp.compare",
            "chirp.compare._dtw",
            "chirp.compare.base_comparison",
            "chirp.compare.base_storage",
            "chirp.compare.ccompare",
            "chirp.compare.feat_dtw",
            "chirp.compare.file_storage",
            "chirp.compare.pitch_dtw",
            "chirp.compare.plugins",
            "chirp.compare.spcc",
            "chirp.compare.spec_dtw",
            "chirp.compare.sqlite_storage",
            "chirp.gui",
            "chirp.gui.BatchCompare",
            "chirp.gui.BatchPitch",
            "chirp.gui.BatchStats",
            "chirp.gui.DrawMask",
            "chirp.gui.HelpWindow",
            "chirp.gui.PitchOverlayMixin",
            "chirp.gui.SpecViewer",
            "chirp.gui.TSViewer",
            "chirp.gui.chirpgui",
            "chirp.gui.events",
            "chirp.gui.wxcommon",
            "chirp.gui.wxgeom",
            "chirp.misc",
            "chirp.misc.pitchstats",
            "chirp.misc.plotpitch",
            "chirp.pitch",
            "chirp.pitch._vitterbi",
            "chirp.pitch.batch",
            "chirp.pitch.particle",
            "chirp.pitch.template",
            "chirp.pitch.tracker",
            "chirp.pitch.vitterbi",
            "chirp.split",
            "chirp.split.csplit",
            "chirp.split.intervalsplit",
            "chirp.version"
        ],
        "version": "1.2.2"
    },
    "chirp-python": {
        "cmdline": [],
        "modules": [
            "chirp",
            "chirp.chirp",
            "chirp.chirp_broadcaster",
            "chirp.chirp_manager",
            "chirp.chirp_receiver",
            "chirp.config"
        ],
        "version": "1.0.0"
    },
    "chirpsdk": {
        "cmdline": [],
        "modules": [
            "chirpsdk",
            "chirpsdk.api",
            "chirpsdk.audio",
            "chirpsdk.chirp",
            "chirpsdk.chirpsdk",
            "chirpsdk.constants",
            "chirpsdk.exceptions",
            "chirpsdk.protocol",
            "chirpsdk.protocols",
            "chirpsdk.util"
        ],
        "version": "2.0.1"
    },
    "chirpy": {
        "cmdline": [
            "chirpy"
        ],
        "modules": [
            "chirpy",
            "chirpy.command_line",
            "chirpy.configModule",
            "chirpy.helpModule",
            "chirpy.logModule",
            "chirpy.parseModule",
            "chirpy.profileModule",
            "chirpy.searchModule",
            "chirpy.streamModule",
            "chirpy.streamer",
            "chirpy.userModule"
        ],
        "version": "1.0.6"
    },
    "chiru150": {
        "cmdline": [],
        "modules": [
            "gpsk",
            "gpsk.palindromee"
        ],
        "version": "0.1.1"
    },
    "chisel": {
        "cmdline": [],
        "modules": [
            "chisel",
            "chisel.action",
            "chisel.app",
            "chisel.app_defs",
            "chisel.doc",
            "chisel.model",
            "chisel.request",
            "chisel.spec",
            "chisel.url",
            "chisel.util"
        ],
        "version": "0.9.47"
    },
    "chishop": {
        "cmdline": [],
        "modules": [
            "djangopypi",
            "djangopypi.admin",
            "djangopypi.forms",
            "djangopypi.models",
            "djangopypi.urls",
            "djangopypi.views"
        ],
        "version": "0.2.0"
    },
    "chistiakov": {
        "cmdline": [],
        "modules": [
            "Chistiakov"
        ],
        "version": "0.1.0"
    },
    "chisubmit": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.3"
    },
    "chitchat": {
        "cmdline": [],
        "modules": [
            "chitchat",
            "chitchat.callbacks",
            "chitchat.client",
            "chitchat.connection",
            "chitchat.constants",
            "chitchat.exceptions",
            "chitchat.messaging",
            "chitchat.messaging.incoming",
            "chitchat.utils"
        ],
        "version": "0.0.1"
    },
    "chitwanabm": {
        "cmdline": [],
        "modules": [
            "chitwanabm",
            "chitwanabm.agents",
            "chitwanabm.initialize",
            "chitwanabm.misc",
            "chitwanabm.misc.SDSU_runmodel",
            "chitwanabm.modelloop",
            "chitwanabm.process_scenario",
            "chitwanabm.runmodel",
            "chitwanabm.statistics",
            "chitwanabm.test",
            "chitwanabm.threaded_batch_run"
        ],
        "version": "1.5"
    },
    "chiwassu": {
        "cmdline": [],
        "modules": [
            "chiwassu",
            "chiwassu.say"
        ],
        "version": "0.0.2"
    },
    "chizhov": {
        "cmdline": [],
        "modules": [
            "Chizhov"
        ],
        "version": "0.1.0"
    },
    "chj": {
        "cmdline": [],
        "modules": [
            "_CHJ",
            "_CHJ.Media",
            "_CHJ.Parameters",
            "_CHJ.VERSION",
            "_CHJ._CSS",
            "_CHJ._CSS.CS",
            "_CHJ._CSS.Calc",
            "_CHJ._CSS.Color",
            "_CHJ._CSS.Length",
            "_CHJ._CSS.Media",
            "_CHJ._CSS.Property",
            "_CHJ._CSS.Rule",
            "_CHJ._CSS.Shape",
            "_CHJ._CSS.Style_Sheet",
            "_CHJ._CSS._TRBL_",
            "_CHJ._CSS.import_CSS",
            "_CHJ.setup"
        ],
        "version": "2.2.6"
    },
    "chk": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chkcrontab": {
        "cmdline": [
            "chkcrontab"
        ],
        "modules": [
            "chkcrontab_lib"
        ],
        "version": "1.7"
    },
    "chkcsv": {
        "cmdline": [
            "chkcsv.py"
        ],
        "modules": [],
        "version": "0.8.0.0"
    },
    "chkfs": {
        "cmdline": [
            "chkfs"
        ],
        "modules": [
            "chkfs",
            "test_chkfs"
        ],
        "version": "0.990c613daa19960e8a900cbffc5472e44282b6f1"
    },
    "chkopy": {
        "cmdline": [
            "checkopy",
            "checkopy.py"
        ],
        "modules": [
            "chkopy"
        ],
        "version": "0.1.7b0"
    },
    "chkstore": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chlone": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chloop": {
        "cmdline": [],
        "modules": [
            "chloop"
        ],
        "version": "0.2.5"
    },
    "chloride": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chmutil": {
        "cmdline": [],
        "modules": [
            "chmutil",
            "chmutil.checkchmjob",
            "chmutil.chmrunner",
            "chmutil.cluster",
            "chmutil.core",
            "chmutil.createchmimage",
            "chmutil.createchmjob",
            "chmutil.createchmtrainjob",
            "chmutil.createprobmapoverlay",
            "chmutil.createtrainingmrcstack",
            "chmutil.image",
            "chmutil.mergetilerunner",
            "chmutil.mergetiles"
        ],
        "version": "0.6.0"
    },
    "chnester": {
        "cmdline": [],
        "modules": [
            "chnester"
        ],
        "version": "1.3.0"
    },
    "choco": {
        "cmdline": [],
        "modules": [
            "choco",
            "choco._ast_util",
            "choco.ast",
            "choco.cache",
            "choco.cmd",
            "choco.codegen",
            "choco.compat",
            "choco.errors",
            "choco.ext",
            "choco.ext.autohandler",
            "choco.ext.babelplugin",
            "choco.ext.beaker_cache",
            "choco.ext.extract",
            "choco.ext.linguaplugin",
            "choco.ext.preprocessors",
            "choco.ext.pygmentplugin",
            "choco.ext.turbogears",
            "choco.filters",
            "choco.lexer",
            "choco.lookup",
            "choco.nodes",
            "choco.pygen",
            "choco.pyparser",
            "choco.runtime",
            "choco.template",
            "choco.ui",
            "choco.util"
        ],
        "version": "1.0.5"
    },
    "choice": {
        "cmdline": [],
        "modules": [
            "choice",
            "choice.basicterm",
            "choice.util"
        ],
        "version": "0.1"
    },
    "choice-enum": {
        "cmdline": [],
        "modules": [
            "choice_enum"
        ],
        "version": "0.9"
    },
    "choices": {
        "cmdline": [],
        "modules": [
            "choices"
        ],
        "version": "0.1"
    },
    "choir": {
        "cmdline": [
            "choirc"
        ],
        "modules": [
            "choir"
        ],
        "version": "0.3.1"
    },
    "choix": {
        "cmdline": [],
        "modules": [
            "choix",
            "choix.convergence",
            "choix.ep",
            "choix.lsr",
            "choix.mm",
            "choix.opt",
            "choix.utils"
        ],
        "version": "0.1.0"
    },
    "chomp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chompack": {
        "cmdline": [],
        "modules": [
            "chompack",
            "chompack._version",
            "chompack.base",
            "chompack.conversion",
            "chompack.maxchord",
            "chompack.mcs",
            "chompack.misc",
            "chompack.pfcholesky",
            "chompack.pybase",
            "chompack.pybase.cholesky",
            "chompack.pybase.completion",
            "chompack.pybase.edmcompletion",
            "chompack.pybase.hessian",
            "chompack.pybase.llt",
            "chompack.pybase.mrcompletion",
            "chompack.pybase.plot",
            "chompack.pybase.projected_inverse",
            "chompack.pybase.psdcompletion",
            "chompack.pybase.trmm",
            "chompack.pybase.trsm",
            "chompack.symbolic"
        ],
        "version": "2.3.2"
    },
    "chompy": {
        "cmdline": [],
        "modules": [
            "chompy"
        ],
        "version": "1.0.0"
    },
    "chomsky": {
        "cmdline": [],
        "modules": [
            "chomsky",
            "chomsky.buffer",
            "chomsky.exceptions",
            "chomsky.grammar",
            "chomsky.matchers",
            "chomsky.result",
            "chomsky.util"
        ],
        "version": "1.0.2"
    },
    "choo": {
        "cmdline": [
            "choo",
            "choo-server"
        ],
        "modules": [
            "choo",
            "choo.choo",
            "choo.chooserver",
            "choo.models",
            "choo.models.base",
            "choo.models.fields",
            "choo.models.line",
            "choo.models.locations",
            "choo.models.realtime",
            "choo.models.ride",
            "choo.models.tickets",
            "choo.models.timeandplace",
            "choo.models.trip",
            "choo.models.way",
            "choo.networks",
            "choo.networks.apis",
            "choo.networks.apis.base",
            "choo.networks.apis.efa",
            "choo.networks.de"
        ],
        "version": "0.2.0"
    },
    "chooh": {
        "cmdline": [],
        "modules": [
            "chooh",
            "chooh.contrib",
            "chooh.contrib.bundling",
            "chooh.contrib.bundling.bundler",
            "chooh.contrib.bundling.bundlers",
            "chooh.contrib.bundling.bundlers.simple_js_bundler",
            "chooh.contrib.bundling.formatters",
            "chooh.contrib.bundling.processors",
            "chooh.contrib.bundling.processors.file_contents",
            "chooh.contrib.bundling.processors.jsx",
            "chooh.core",
            "chooh.core.application",
            "chooh.core.command_runner",
            "chooh.core.convention",
            "chooh.core.decorators",
            "chooh.util",
            "chooh.util.beep",
            "chooh.util.fs",
            "chooh.util.fs_observer",
            "chooh.util.read_yaml"
        ],
        "version": "0.2"
    },
    "choose": {
        "cmdline": [],
        "modules": [
            "choose"
        ],
        "version": "1.0.0"
    },
    "choose-next": {
        "cmdline": [],
        "modules": [],
        "version": "2.0.1"
    },
    "choosealicense": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "choosealicense-cli": {
        "cmdline": [],
        "modules": [
            "choosealicense",
            "choosealicense.cli",
            "choosealicense.ui",
            "choosealicense.utils"
        ],
        "version": "0.3.0"
    },
    "chooser": {
        "cmdline": [
            "chooser"
        ],
        "modules": [],
        "version": "0.3.4"
    },
    "chopoff": {
        "cmdline": [],
        "modules": [
            "__init__",
            "chopoff",
            "chopoff.chopoff",
            "tests"
        ],
        "version": "1.0"
    },
    "choppedpress": {
        "cmdline": [
            "choppedpress"
        ],
        "modules": [],
        "version": "0.0.1.1"
    },
    "chopper": {
        "cmdline": [],
        "modules": [
            "chopper",
            "chopper.css",
            "chopper.css.extractor",
            "chopper.css.parser",
            "chopper.css.rules",
            "chopper.css.translator",
            "chopper.extractor",
            "chopper.html",
            "chopper.html.extractor",
            "chopper.mixins",
            "chopper.tests"
        ],
        "version": "0.4.7"
    },
    "chopra": {
        "cmdline": [],
        "modules": [
            "chopra"
        ],
        "version": "1.0.0"
    },
    "chopro": {
        "cmdline": [],
        "modules": [
            "chopro",
            "chopro.chopro2html",
            "chopro.core",
            "chopro.utils"
        ],
        "version": "0.1.8"
    },
    "chopsticks": {
        "cmdline": [],
        "modules": [
            "chopsticks",
            "chopsticks.bubble",
            "chopsticks.facts",
            "chopsticks.group",
            "chopsticks.helpers",
            "chopsticks.ioloop",
            "chopsticks.streams",
            "chopsticks.tunnel"
        ],
        "version": "0.5"
    },
    "chopthin": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.1"
    },
    "choraoipsum": {
        "cmdline": [],
        "modules": [
            "choraoipsum",
            "choraoipsum.chorao_ipsum"
        ],
        "version": "0.0.1"
    },
    "chord-finder": {
        "cmdline": [
            "chord-finder"
        ],
        "modules": [
            "chordfinder",
            "chordfinder.ChordData",
            "chordfinder.DrawChord",
            "chordfinder.DrawRootFinder",
            "chordfinder.Gui",
            "chordfinder.Instruments",
            "chordfinder.Palettes"
        ],
        "version": "0.9.4"
    },
    "chord2vec": {
        "cmdline": [],
        "modules": [
            "chord2vec",
            "chord2vec.linear_model",
            "chord2vec.seq2seq_model",
            "chord2vec.seq2seqs",
            "chord2vec.seq2seqs_model"
        ],
        "version": "3.0"
    },
    "chordbook": {
        "cmdline": [
            "cbk.py"
        ],
        "modules": [
            "chordbook",
            "chordbook._version",
            "chordbook.examples",
            "chordbook.libcbk",
            "chordbook.output",
            "chordbook.output._base",
            "chordbook.output.html",
            "chordbook.output.text",
            "chordbook.test",
            "chordbook.test.test_libcbk"
        ],
        "version": "0.0.12"
    },
    "chorddb": {
        "cmdline": [],
        "modules": [
            "chorddb",
            "chorddb.chords",
            "chorddb.chords.drawer",
            "chorddb.chords.finder",
            "chorddb.chords.library",
            "chorddb.chords.variations",
            "chorddb.curses",
            "chorddb.curses.chord_drawer",
            "chorddb.curses.color",
            "chorddb.curses.pad",
            "chorddb.curses.render",
            "chorddb.curses.screen",
            "chorddb.curses.state",
            "chorddb.instrument",
            "chorddb.notes",
            "chorddb.tab",
            "chorddb.tab.objects",
            "chorddb.tab.parser",
            "chorddb.terminal",
            "chorddb.terminal.color",
            "chorddb.terminal.render",
            "chorddb.utils",
            "chorddb.utils.decorators",
            "chorddb.utils.regexp",
            "test",
            "test.test_chords",
            "test.test_chords.test_finder",
            "test.test_instrument",
            "test.test_notes",
            "test.test_tab",
            "test.test_tab.test_parser",
            "test.test_utils",
            "test.test_utils.test_decorators",
            "test.test_utils.test_regexp",
            "test.utils"
        ],
        "version": "0.0.5-dev"
    },
    "chorde": {
        "cmdline": [],
        "modules": [
            "chorde",
            "chorde.clients",
            "chorde.clients.async",
            "chorde.clients.base",
            "chorde.clients.coherent",
            "chorde.clients.elasticache",
            "chorde.clients.files",
            "chorde.clients.inproc",
            "chorde.clients.memcached",
            "chorde.clients.tiered",
            "chorde.decorators",
            "chorde.dnsutils",
            "chorde.mq",
            "chorde.mq.coherence",
            "chorde.mq.compat",
            "chorde.mq.ipsub",
            "chorde.mq.ipsub.base",
            "chorde.mq.ipsub.ipsub_zmq",
            "chorde.pylrucache",
            "chorde.sPickle",
            "chorde.serialize",
            "chorde.shmemutils",
            "chorde.threadpool",
            "chorde.worker"
        ],
        "version": "0.1"
    },
    "chordfinder": {
        "cmdline": [],
        "modules": [
            "chordfinder",
            "chordfinder.GUI",
            "chordfinder.backend"
        ],
        "version": "0.1"
    },
    "chordgenerator": {
        "cmdline": [],
        "modules": [
            "chordgenerator",
            "chordgenerator.forms",
            "chordgenerator.templatetags",
            "chordgenerator.templatetags.musictags",
            "chordgenerator.urls",
            "chordgenerator.views"
        ],
        "version": "0.8"
    },
    "chords": {
        "cmdline": [],
        "modules": [
            "chords",
            "chords.__version__",
            "chords._compat",
            "chords.chord",
            "chords.exceptions",
            "chords.fairness_policies",
            "chords.more",
            "chords.more.gevent_task",
            "chords.pool",
            "chords.registry",
            "chords.request",
            "chords.resource",
            "chords.task"
        ],
        "version": "0.5.0"
    },
    "chores": {
        "cmdline": [],
        "modules": [
            "chores",
            "chores.core",
            "chores.counterstuf",
            "chores.setspec",
            "chores.stages",
            "chores.version"
        ],
        "version": "0.6.3"
    },
    "chorescore": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chorogrid": {
        "cmdline": [],
        "modules": [
            "chorogrid",
            "chorogrid.Chorogrid",
            "chorogrid.Colorbin"
        ],
        "version": "0.0.1"
    },
    "choropleth-gen": {
        "cmdline": [],
        "modules": [
            "choropleth_gen",
            "choropleth_gen.choropleth",
            "choropleth_gen.gen_greyscale_choropleth",
            "choropleth_gen.gen_spectral_choropleth"
        ],
        "version": "0.2"
    },
    "chotot-trans": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "chou-test-1": {
        "cmdline": [],
        "modules": [
            "Chou_test_1"
        ],
        "version": "1.1.0"
    },
    "chouf": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chouwa": {
        "cmdline": [],
        "modules": [
            "chouwa",
            "chouwa.decorators",
            "chouwa.defaultglobals",
            "chouwa.environment",
            "chouwa.loader",
            "chouwa.shortcuts",
            "chouwa.views"
        ],
        "version": "0.2.0"
    },
    "chowda": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chr": {
        "cmdline": [],
        "modules": [
            "chru",
            "chru.api",
            "chru.api.manager",
            "chru.api.web",
            "chru.api.web.v1",
            "chru.chra",
            "chru.utility",
            "chru.utility.base62",
            "chru.utility.funcs",
            "chru.utility.struct",
            "chru.version",
            "chru.web",
            "chru.web.routes",
            "chru.web.settings",
            "chru.web.slug"
        ],
        "version": "2.1.1"
    },
    "chr-helpers": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chris-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "chrisapp": {
        "cmdline": [],
        "modules": [
            "chrisapp",
            "chrisapp.base"
        ],
        "version": "0.3"
    },
    "chrisecho": {
        "cmdline": [],
        "modules": [
            "chrisecho",
            "chrisecho.test"
        ],
        "version": "1.0.1"
    },
    "christmas": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "christofides": {
        "cmdline": [],
        "modules": [
            "Christofides",
            "Christofides.christofides",
            "Christofides.graph"
        ],
        "version": "1.0.1"
    },
    "chroma": {
        "cmdline": [],
        "modules": [
            "chroma",
            "chroma.core"
        ],
        "version": "0.2.0"
    },
    "chromacontrol": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chromalog": {
        "cmdline": [],
        "modules": [
            "chromalog",
            "chromalog.colorizer",
            "chromalog.log",
            "chromalog.mark",
            "chromalog.mark.helpers",
            "chromalog.mark.objects",
            "chromalog.stream"
        ],
        "version": "1.0.5"
    },
    "chromathicity": {
        "cmdline": [],
        "modules": [
            "chromathicity",
            "chromathicity.chromadapt",
            "chromathicity.convert",
            "chromathicity.error",
            "chromathicity.illuminant",
            "chromathicity.manage",
            "chromathicity.math",
            "chromathicity.mixin",
            "chromathicity.observer",
            "chromathicity.rgbspec",
            "chromathicity.spaces"
        ],
        "version": "0.1.0"
    },
    "chromatron": {
        "cmdline": [],
        "modules": [
            "chromatron",
            "chromatron.ast_test_code",
            "chromatron.astpp",
            "chromatron.chromatron",
            "chromatron.code_gen",
            "chromatron.explore_ast",
            "chromatron.graphics",
            "chromatron.kvservice",
            "chromatron.midi",
            "chromatron.midi.apc40",
            "chromatron.midi.midi",
            "chromatron.midi.midi_config",
            "chromatron.run_vm",
            "chromatron.slight",
            "chromatron.slight_sniffer",
            "chromatron.test_code_gen",
            "chromatron.test_service",
            "chromatron.trig"
        ],
        "version": "0.3.43"
    },
    "chrome": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chrome-driver": {
        "cmdline": [
            "chromedriver"
        ],
        "modules": [],
        "version": "2.26.0.1"
    },
    "chrome-edit-server": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chrome-edit-server-gmail-filter": {
        "cmdline": [],
        "modules": [
            "chrome_edit_server_gmail_filter",
            "chrome_edit_server_gmail_filter.filter"
        ],
        "version": "0.3.1"
    },
    "chrome-panel": {
        "cmdline": [],
        "modules": [
            "chrome_panel",
            "chrome_panel.apps",
            "chrome_panel.middleware",
            "chrome_panel.panel",
            "chrome_panel.settings",
            "chrome_panel.utils",
            "chrome_panel.views"
        ],
        "version": "0.0.1"
    },
    "chrome-pass": {
        "cmdline": [
            "nativePass"
        ],
        "modules": [],
        "version": "0.1.7"
    },
    "chrome-printtopdf": {
        "cmdline": [],
        "modules": [
            "chrome_printtopdf",
            "chrome_printtopdf.chrome_printtopdf"
        ],
        "version": "0.0.2"
    },
    "chrome-remote-shell": {
        "cmdline": [],
        "modules": [
            "chrome_remote_shell"
        ],
        "version": "1.2"
    },
    "chrome-webstore-deploy": {
        "cmdline": [
            "chrome-web-store.py"
        ],
        "modules": [],
        "version": "0.0.2"
    },
    "chromedriver": {
        "cmdline": [],
        "modules": [
            "chromedriver"
        ],
        "version": "2.24.1"
    },
    "chromedriver-binary": {
        "cmdline": [],
        "modules": [
            "chromedriver_binary",
            "chromedriver_binary.utils"
        ],
        "version": "2.29.1"
    },
    "chromedriver-installer": {
        "cmdline": [
            "BuildScripts",
            "be",
            "empty",
            "if",
            "ignored",
            "will"
        ],
        "modules": [
            "chromedriver_installer"
        ],
        "version": "0.0.6"
    },
    "chromedrvr": {
        "cmdline": [
            "chromedriver"
        ],
        "modules": [],
        "version": "2.27.post2"
    },
    "chromelogger": {
        "cmdline": [],
        "modules": [
            "chromelogger"
        ],
        "version": "0.4.3"
    },
    "chromescript": {
        "cmdline": [],
        "modules": [
            "chromescript"
        ],
        "version": "0.1"
    },
    "chrominance": {
        "cmdline": [],
        "modules": [
            "chrominance",
            "chrominance.components",
            "chrominance.context",
            "chrominance.shortcuts"
        ],
        "version": "0.1"
    },
    "chromium-compact-language-detector": {
        "cmdline": [],
        "modules": [],
        "version": "0.031415"
    },
    "chromogenic": {
        "cmdline": [],
        "modules": [
            "chromogenic",
            "chromogenic.boot",
            "chromogenic.clean",
            "chromogenic.common",
            "chromogenic.drivers",
            "chromogenic.drivers.base",
            "chromogenic.drivers.eucalyptus",
            "chromogenic.drivers.migration",
            "chromogenic.drivers.openstack",
            "chromogenic.drivers.virtualbox",
            "chromogenic.export",
            "chromogenic.migrate",
            "chromogenic.settings",
            "chromogenic.tasks",
            "chromogenic.version"
        ],
        "version": "0.4.7"
    },
    "chromosomer": {
        "cmdline": [],
        "modules": [
            "chromosomer",
            "chromosomer.cli",
            "chromosomer.exception",
            "chromosomer.fragment",
            "chromosomer.transfer",
            "chromosomer.wrapper",
            "chromosomer.wrapper.blast"
        ],
        "version": "0.1.4a0"
    },
    "chromote": {
        "cmdline": [],
        "modules": [
            "chromote"
        ],
        "version": "0.3.0"
    },
    "chronic": {
        "cmdline": [],
        "modules": [
            "chronic",
            "proxy",
            "signals",
            "signals.signals"
        ],
        "version": "0.3.4"
    },
    "chronicdb": {
        "cmdline": [
            "chd",
            "chronicdb"
        ],
        "modules": [
            "chronicdb",
            "chronicdb.UserSubmit"
        ],
        "version": "3.7.4"
    },
    "chronicle": {
        "cmdline": [],
        "modules": [
            "chronicle",
            "chronicle.flask",
            "chronicle.flask.wag",
            "chronicle.gunicorn",
            "chronicle.pyramid",
            "chronicle.sentry",
            "chronicle.sentry.flask",
            "chronicle.sentry.pyramid"
        ],
        "version": "1.0.7"
    },
    "chronicler": {
        "cmdline": [],
        "modules": [
            "chronicler",
            "chronicler.decorators",
            "chronicler.migrations",
            "chronicler.migrations.0001_initial",
            "chronicler.models",
            "chronicler.tests",
            "chronicler.tests.migrations",
            "chronicler.tests.migrations.0001_initial",
            "chronicler.tests.models",
            "chronicler.tests.test_audit_decorator",
            "chronicler.tests.test_create_audit",
            "chronicler.utils"
        ],
        "version": "0.2"
    },
    "chroniker": {
        "cmdline": [],
        "modules": [
            "chroniker",
            "chroniker.timer"
        ],
        "version": "0.0.0"
    },
    "chrono": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "chronograph": {
        "cmdline": [],
        "modules": [
            "chronograph",
            "chronograph.chronograph",
            "chronograph.tests",
            "chronograph.tests.test_chronograph"
        ],
        "version": "1.0.0"
    },
    "chronolog": {
        "cmdline": [],
        "modules": [
            "chronolog",
            "chronolog.chronolog"
        ],
        "version": "1.0a1"
    },
    "chronometer": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "chrononaut": {
        "cmdline": [],
        "modules": [
            "chrononaut",
            "chrononaut.exceptions",
            "chrononaut.flask_versioning",
            "chrononaut.history_mapper"
        ],
        "version": "0.1.0"
    },
    "chronophore": {
        "cmdline": [],
        "modules": [
            "chronophore",
            "chronophore.chronophore",
            "chronophore.config",
            "chronophore.controller",
            "chronophore.models",
            "chronophore.qtview",
            "chronophore.tkview"
        ],
        "version": "0.6.0"
    },
    "chronoplot": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "chronos": {
        "cmdline": [],
        "modules": [
            "chronos",
            "chronos.main",
            "test",
            "test.test_trigger"
        ],
        "version": "0.3"
    },
    "chronos-python": {
        "cmdline": [],
        "modules": [
            "chronos"
        ],
        "version": "1.0.0"
    },
    "chronospy": {
        "cmdline": [],
        "modules": [
            "chronos"
        ],
        "version": "0.1.7"
    },
    "chronyk": {
        "cmdline": [],
        "modules": [
            "chronyk",
            "chronyk.chronyk"
        ],
        "version": "1.0.1"
    },
    "chrw": {
        "cmdline": [],
        "modules": [
            "chrw",
            "chrw.exceptions",
            "chrw.v1",
            "chrw.version"
        ],
        "version": "1.0.1"
    },
    "chryso": {
        "cmdline": [],
        "modules": [
            "chryso",
            "chryso.connection",
            "chryso.constants",
            "chryso.errors",
            "chryso.fixtures",
            "chryso.queryadapter",
            "chryso.resource",
            "chryso.schema",
            "chryso.version"
        ],
        "version": "1.25"
    },
    "chschachtler": {
        "cmdline": [],
        "modules": [
            "schachtler"
        ],
        "version": "1.0.0"
    },
    "chssh": {
        "cmdline": [],
        "modules": [
            "chssh",
            "chssh.cmd"
        ],
        "version": "0.4.2"
    },
    "chswt": {
        "cmdline": [
            "chswt.py"
        ],
        "modules": [],
        "version": "0.0.2"
    },
    "cht": {
        "cmdline": [],
        "modules": [
            "cht"
        ],
        "version": "1.2.1"
    },
    "chtmultiregionflux": {
        "cmdline": [],
        "modules": [
            "chtMultiRegionFlux",
            "chtMultiRegionFlux.r1_5",
            "chtMultiRegionFlux.r1_5.coupleManager",
            "chtMultiRegionFlux.r1_5.derivedFvPatchFields",
            "chtMultiRegionFlux.r1_5.derivedFvPatchFields.solidWallHeatFluxTemperatureCoupledFvPatchScalarField",
            "chtMultiRegionFlux.r1_5.derivedFvPatchFields.solidWallTemperatureCoupledFvPatchScalarField",
            "chtMultiRegionFlux.r1_5.fluid",
            "chtMultiRegionFlux.r1_5.regionProperties",
            "chtMultiRegionFlux.r1_5.solid",
            "chtMultiRegionFlux.r1_6",
            "chtMultiRegionFlux.r1_6.derivedFvPatchFields",
            "chtMultiRegionFlux.r1_6.fluid",
            "chtMultiRegionFlux.r1_6.regionProperties",
            "chtMultiRegionFlux.r1_6.solid",
            "chtMultiRegionFlux.r1_6_dev",
            "chtMultiRegionFlux.r1_6_dev.derivedFvPatchFields",
            "chtMultiRegionFlux.r1_6_dev.fluid",
            "chtMultiRegionFlux.r1_6_dev.regionProperties",
            "chtMultiRegionFlux.r1_6_dev.solid",
            "chtMultiRegionFlux.r1_7_0",
            "chtMultiRegionFlux.r1_7_0.derivedFvPatchFields",
            "chtMultiRegionFlux.r1_7_0.fluid",
            "chtMultiRegionFlux.r1_7_0.regionProperties",
            "chtMultiRegionFlux.r1_7_0.solid",
            "chtMultiRegionFlux.r1_7_1",
            "chtMultiRegionFlux.r1_7_1.derivedFvPatchFields",
            "chtMultiRegionFlux.r1_7_1.fluid",
            "chtMultiRegionFlux.r1_7_1.regionProperties",
            "chtMultiRegionFlux.r1_7_1.solid",
            "chtMultiRegionFlux.r2_0_0",
            "chtMultiRegionFlux.r2_0_0.fluid",
            "chtMultiRegionFlux.r2_0_0.solid",
            "chtMultiRegionFlux.r2_1_0",
            "chtMultiRegionFlux.r2_1_0.fluid",
            "chtMultiRegionFlux.r2_1_0.solid",
            "chtMultiRegionFlux.r2_1_1",
            "chtMultiRegionFlux.r2_1_1.fluid",
            "chtMultiRegionFlux.r2_1_1.solid"
        ],
        "version": "2.1"
    },
    "chtmultiregionsimpleflux": {
        "cmdline": [],
        "modules": [
            "chtMultiRegionSimpleFlux",
            "chtMultiRegionSimpleFlux.r2_1_1",
            "chtMultiRegionSimpleFlux.r2_1_1.fluid",
            "chtMultiRegionSimpleFlux.r2_1_1.solid"
        ],
        "version": "2.0"
    },
    "chu": {
        "cmdline": [],
        "modules": [
            "chu",
            "chu.connection",
            "chu.rpc",
            "chu.worker"
        ],
        "version": "0.2.0"
    },
    "chuanwang66-helloworld-script": {
        "cmdline": [
            "helloworld"
        ],
        "modules": [],
        "version": "0.1"
    },
    "chube": {
        "cmdline": [
            "chuber"
        ],
        "modules": [
            "chube",
            "chube.api",
            "chube.datacenter",
            "chube.distribution",
            "chube.dns",
            "chube.kernel",
            "chube.linode_obj",
            "chube.model",
            "chube.nodebalancer",
            "chube.plan",
            "chube.stackscript",
            "chube.util"
        ],
        "version": "0.1.21"
    },
    "chuck": {
        "cmdline": [],
        "modules": [
            "chuck",
            "chuck.osc",
            "chuck.osc.OSC",
            "chuck.osc.oscAPI"
        ],
        "version": "0.0.1"
    },
    "chuck-norris-python": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "chuckbox": {
        "cmdline": [
            "chuckbox"
        ],
        "modules": [
            "chuckbox",
            "chuckbox.cmd",
            "chuckbox.log",
            "chuckbox.main",
            "chuckbox.package",
            "chuckbox.project"
        ],
        "version": "0.1.11"
    },
    "chucknorris": {
        "cmdline": [],
        "modules": [
            "chucknorris",
            "chucknorris.pmxbot",
            "chucknorris.pronoun",
            "chucknorris.quips",
            "chucknorris.test_plugin"
        ],
        "version": "2.7"
    },
    "chuk": {
        "cmdline": [],
        "modules": [
            "chuk",
            "chuk.Application",
            "chuk.Application.ConfigDir",
            "chuk.Application.ConfigReader",
            "chuk.Application.ConnChoice",
            "chuk.Application.CreateIcons",
            "chuk.Application.GUI",
            "chuk.Application.NumberFormats",
            "chuk.Application.PeerID",
            "chuk.Application.inifile",
            "chuk.Application.makemetafile",
            "chuk.Application.parseargs",
            "chuk.Application.parsedir",
            "chuk.Application.reannounce",
            "chuk.Client",
            "chuk.Client.Choker",
            "chuk.Client.Connecter",
            "chuk.Client.CurrentRateMeasure",
            "chuk.Client.Downloader",
            "chuk.Client.DownloaderFeedback",
            "chuk.Client.HTTPDownloader",
            "chuk.Client.PiecePicker",
            "chuk.Client.RateLimiter",
            "chuk.Client.RateMeasure",
            "chuk.Client.Rerequester",
            "chuk.Client.Statistics",
            "chuk.Client.Uploader",
            "chuk.Client.download_bt1",
            "chuk.Client.launchmanycore",
            "chuk.Download",
            "chuk.Download.depend",
            "chuk.Download.main",
            "chuk.Meta",
            "chuk.Meta.BTTree",
            "chuk.Meta.Info",
            "chuk.Meta.bencode",
            "chuk.Network",
            "chuk.Network.BTcrypto",
            "chuk.Network.Encrypter",
            "chuk.Network.NatCheck",
            "chuk.Network.NetworkAddress",
            "chuk.Network.RawServer",
            "chuk.Network.ServerPortHandler",
            "chuk.Network.SocketHandler",
            "chuk.Network.natpunch",
            "chuk.Network.selectpoll",
            "chuk.Network.zurllib",
            "chuk.Storage",
            "chuk.Storage.FileSelector",
            "chuk.Storage.PieceBuffer",
            "chuk.Storage.Storage",
            "chuk.Storage.StorageWrapper",
            "chuk.Tracker",
            "chuk.Tracker.Filter",
            "chuk.Tracker.HTTPHandler",
            "chuk.Tracker.T2T",
            "chuk.Tracker.torrentlistparse",
            "chuk.Tracker.track",
            "chuk.bitfield",
            "chuk.clock"
        ],
        "version": "0.4.0"
    },
    "chula": {
        "cmdline": [
            "chula-run"
        ],
        "modules": [
            "chula",
            "chula.app",
            "chula.cache",
            "chula.collection",
            "chula.collection.base",
            "chula.collection.restricted",
            "chula.collection.ubound",
            "chula.config",
            "chula.data",
            "chula.db",
            "chula.db.datastore",
            "chula.db.engines",
            "chula.db.engines.couch",
            "chula.db.engines.engine",
            "chula.db.engines.postgresql",
            "chula.db.engines.sqlite",
            "chula.db.functions",
            "chula.ecalendar",
            "chula.error",
            "chula.example",
            "chula.guid",
            "chula.json",
            "chula.logger",
            "chula.mail",
            "chula.nosql",
            "chula.nosql.couch",
            "chula.pager",
            "chula.passwd",
            "chula.queue",
            "chula.queue.client",
            "chula.queue.messages",
            "chula.queue.messages.echo",
            "chula.queue.messages.mail",
            "chula.queue.messages.message",
            "chula.queue.mqueue",
            "chula.queue.server",
            "chula.queue.tester",
            "chula.regex",
            "chula.session",
            "chula.session.backends",
            "chula.session.backends.base",
            "chula.session.backends.couchdb",
            "chula.session.backends.memcached",
            "chula.session.backends.postgresql",
            "chula.session.session",
            "chula.singleton",
            "chula.system",
            "chula.test",
            "chula.test.bat",
            "chula.test.selenium",
            "chula.testutils",
            "chula.vendor",
            "chula.vendor.fcgi",
            "chula.vendor.memcache",
            "chula.vendor.selenium",
            "chula.webservice",
            "chula.www",
            "chula.www.adapters",
            "chula.www.adapters.base",
            "chula.www.adapters.env",
            "chula.www.adapters.fcgi",
            "chula.www.adapters.fcgi.adapter",
            "chula.www.adapters.fcgi.env",
            "chula.www.adapters.mod_python",
            "chula.www.adapters.mod_python.adapter",
            "chula.www.adapters.mod_python.env",
            "chula.www.adapters.mod_python.fakerequest",
            "chula.www.adapters.wsgi",
            "chula.www.adapters.wsgi.adapter",
            "chula.www.adapters.wsgi.env",
            "chula.www.controller",
            "chula.www.controller.base",
            "chula.www.controller.error",
            "chula.www.cookie",
            "chula.www.http",
            "chula.www.mapper",
            "chula.www.mapper.base",
            "chula.www.mapper.classpath",
            "chula.www.mapper.regex"
        ],
        "version": "0.14.0.dev"
    },
    "chumakov": {
        "cmdline": [],
        "modules": [
            "Chumakov"
        ],
        "version": "0.1.0"
    },
    "chump": {
        "cmdline": [],
        "modules": [
            "chump"
        ],
        "version": "1.5.2"
    },
    "chumpy": {
        "cmdline": [],
        "modules": [
            "chumpy",
            "chumpy.api_compatibility",
            "chumpy.ch",
            "chumpy.ch_ops",
            "chumpy.ch_random",
            "chumpy.extras",
            "chumpy.linalg",
            "chumpy.logic",
            "chumpy.monitor",
            "chumpy.optimization",
            "chumpy.optimization_internal",
            "chumpy.reordering",
            "chumpy.test_ch",
            "chumpy.test_inner_composition",
            "chumpy.test_linalg",
            "chumpy.test_optimization",
            "chumpy.testing",
            "chumpy.utils",
            "chumpy.version"
        ],
        "version": "0.67.4"
    },
    "chungpy": {
        "cmdline": [],
        "modules": [
            "chungpy",
            "chungpy.mdsp",
            "chungpy.mmdsp",
            "chungpy.tests"
        ],
        "version": "1.0.1"
    },
    "chunk": {
        "cmdline": [],
        "modules": [
            "chunk",
            "chunk.python3_compat",
            "chunk.test"
        ],
        "version": "2.0.0"
    },
    "chunk2": {
        "cmdline": [],
        "modules": [
            "chunk2"
        ],
        "version": "0.1.0"
    },
    "chunker": {
        "cmdline": [],
        "modules": [
            "chunker",
            "chunker.chunks",
            "chunker.fields",
            "chunker.parsers",
            "chunker.tests",
            "chunker.utils"
        ],
        "version": "1.1"
    },
    "chunkify": {
        "cmdline": [],
        "modules": [
            "chunkify",
            "chunkify.test_chunkify"
        ],
        "version": "1.2"
    },
    "chunks": {
        "cmdline": [],
        "modules": [
            "chunks"
        ],
        "version": "0.1"
    },
    "chunksub": {
        "cmdline": [],
        "modules": [
            "chunksub",
            "chunksub.chunksub"
        ],
        "version": "0.1.3"
    },
    "chunkup": {
        "cmdline": [
            "chunkup"
        ],
        "modules": [
            "chunkup",
            "chunkup.chunkup"
        ],
        "version": "0.2.1"
    },
    "chunky": {
        "cmdline": [],
        "modules": [
            "chunky"
        ],
        "version": "0.5.1"
    },
    "chunkypipes": {
        "cmdline": [],
        "modules": [
            "chunkypipes",
            "chunkypipes.components",
            "chunkypipes.util",
            "chunkypipes.util.commands",
            "chunkypipes.util.commands.configure",
            "chunkypipes.util.commands.help",
            "chunkypipes.util.commands.init",
            "chunkypipes.util.commands.install",
            "chunkypipes.util.commands.list",
            "chunkypipes.util.commands.run",
            "chunkypipes.util.commands.show"
        ],
        "version": "0.2.3"
    },
    "chunnel": {
        "cmdline": [],
        "modules": [
            "chunnel",
            "chunnel.channel",
            "chunnel.main",
            "chunnel.messages",
            "chunnel.socket",
            "chunnel.transports",
            "chunnel.transports.base",
            "chunnel.transports.websocket",
            "chunnel.utils",
            "test",
            "test.conftest",
            "test.shared",
            "test.test_against_phoenix",
            "test.test_channel",
            "test.test_socket",
            "test.test_utils"
        ],
        "version": "0.1.0"
    },
    "chunyun": {
        "cmdline": [],
        "modules": [
            "chunyun",
            "chunyun.command",
            "chunyun.command_line",
            "chunyun.create_command",
            "chunyun.init_command",
            "chunyun.make_command",
            "chunyun.rollback_command",
            "chunyun.sync_command"
        ],
        "version": "0.9"
    },
    "church": {
        "cmdline": [],
        "modules": [
            "church",
            "church._common",
            "church.church",
            "church.exceptions",
            "church.utils"
        ],
        "version": "0.2.7"
    },
    "church-encoding": {
        "cmdline": [],
        "modules": [
            "church_encoding",
            "church_encoding.church",
            "church_encoding.test",
            "church_encoding.test.church_test"
        ],
        "version": "0.1.1"
    },
    "church.sermonaudio": {
        "cmdline": [],
        "modules": [
            "church",
            "church.sermonaudio",
            "church.sermonaudio.browser",
            "church.sermonaudio.browser.sermons",
            "church.sermonaudio.tests",
            "church.sermonaudio.upgrades"
        ],
        "version": "1.0a9"
    },
    "churchdir": {
        "cmdline": [
            "churchdir-quickstart"
        ],
        "modules": [
            "churchdir",
            "churchdir.quickstart"
        ],
        "version": "0.3"
    },
    "churchrepl": {
        "cmdline": [],
        "modules": [
            "churchrepl",
            "churchrepl.repl",
            "churchrepl.repl.lexer",
            "churchrepl.repl.parser"
        ],
        "version": "1.0.2"
    },
    "churn": {
        "cmdline": [],
        "modules": [
            "src",
            "src.cli",
            "src.errors",
            "src.subcommands",
            "src.subcommands.cards",
            "src.subcommands.config",
            "src.subcommands.initialize",
            "src.subcommands.issuers",
            "src.subcommands.networks",
            "src.subcommands.payments",
            "src.subcommands.programs",
            "src.subcommands.reward_types",
            "src.subcommands.rewards",
            "src.subcommands.stats",
            "src.subcommands.uninstall",
            "src.util"
        ],
        "version": "0.1.0"
    },
    "churro": {
        "cmdline": [],
        "modules": [
            "churro",
            "churro.collection_wrappers",
            "churro.tests"
        ],
        "version": "1.0a3"
    },
    "chushajo": {
        "cmdline": [],
        "modules": [
            "chushajo"
        ],
        "version": "0.1"
    },
    "chut": {
        "cmdline": [],
        "modules": [
            "chut",
            "chut.examples",
            "chut.examples.examples",
            "chut.examples.github_clone",
            "chut.examples.rfsync",
            "chut.examples.ssh_copy_id",
            "chut.examples.ssh_mount",
            "chut.examples.sudo",
            "chut.examples.translate",
            "chut.examples.vlserie",
            "chut.examples.webapp",
            "chut.recipe",
            "chut.scripts"
        ],
        "version": "0.16"
    },
    "chute": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "chutney": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "chval": {
        "cmdline": [
            "chval"
        ],
        "modules": [
            "chval_core",
            "chval_core.command_line_parser",
            "chval_core.config_file",
            "chval_core.crypto",
            "chval_core.daemon",
            "chval_core.enum",
            "chval_core.interfaces"
        ],
        "version": "0.6.7"
    },
    "chwrapper": {
        "cmdline": [],
        "modules": [
            "chwrapper",
            "chwrapper.services",
            "chwrapper.services.base",
            "chwrapper.services.search",
            "tests",
            "tests.test_base",
            "tests.test_search"
        ],
        "version": "0.3.0"
    },
    "chzip": {
        "cmdline": [],
        "modules": [
            "chzip",
            "chzip.ch_zip",
            "chzip.common",
            "chzip.exceptions",
            "chzip.zipcodes"
        ],
        "version": "0.1"
    },
    "ci-cloudconnector": {
        "cmdline": [],
        "modules": [
            "CI_CloudConnector",
            "CI_LC_BL"
        ],
        "version": "0.55"
    },
    "ci-diff-helper": {
        "cmdline": [],
        "modules": [
            "ci_diff_helper",
            "ci_diff_helper._config_base",
            "ci_diff_helper._github",
            "ci_diff_helper._utils",
            "ci_diff_helper.appveyor",
            "ci_diff_helper.circle_ci",
            "ci_diff_helper.environment_vars",
            "ci_diff_helper.git_tools",
            "ci_diff_helper.travis",
            "tests",
            "tests.test__config_base",
            "tests.test__github",
            "tests.test__init__",
            "tests.test__utils",
            "tests.test_appveyor",
            "tests.test_circle_ci",
            "tests.test_git_tools",
            "tests.test_travis",
            "tests.utils"
        ],
        "version": "0.2.0"
    },
    "ci-jira-releaser": {
        "cmdline": [],
        "modules": [
            "ci_jira_releaser"
        ],
        "version": "0.3.8.7"
    },
    "ci-localconnector": {
        "cmdline": [],
        "modules": [
            "CI_LC_BL",
            "CI_LocalConnector"
        ],
        "version": "0.18"
    },
    "ci-yml": {
        "cmdline": [
            "ci-yml"
        ],
        "modules": [
            "ci-yml"
        ],
        "version": "0.3.3"
    },
    "ciabatta": {
        "cmdline": [],
        "modules": [
            "ciabatta",
            "ciabatta.crandom",
            "ciabatta.ejm_rcparams",
            "ciabatta.fileio",
            "ciabatta.meta",
            "ciabatta.network",
            "ciabatta.parallel",
            "ciabatta.stats"
        ],
        "version": "0.5.1"
    },
    "ciao": {
        "cmdline": [],
        "modules": [
            "ciao"
        ],
        "version": "0.1.0"
    },
    "cib": {
        "cmdline": [],
        "modules": [
            "coala_package_manager",
            "coala_package_manager.installation_tool"
        ],
        "version": "0.5.7"
    },
    "cibopath": {
        "cmdline": [],
        "modules": [
            "cibopath",
            "cibopath.cli",
            "cibopath.github_api",
            "cibopath.log",
            "cibopath.readme_parser",
            "cibopath.scraper",
            "cibopath.templates",
            "cibopath.user_config"
        ],
        "version": "0.1.0"
    },
    "cibuildwheel": {
        "cmdline": [],
        "modules": [
            "cibuildwheel",
            "cibuildwheel.linux",
            "cibuildwheel.macos",
            "cibuildwheel.util",
            "cibuildwheel.windows"
        ],
        "version": "0.2.0"
    },
    "cibuildwheel-autopypi-example": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.11"
    },
    "cic": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cicada": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cicero": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ciciol": {
        "cmdline": [
            "ciciol"
        ],
        "modules": [
            "ciciol",
            "ciciol.backends",
            "ciciol.backends.dummy",
            "ciciol.backends.notify",
            "ciciol.config",
            "ciciol.handlers",
            "ciciol.handlers.dummy",
            "ciciol.handlers.twitter",
            "ciciol.helpers",
            "ciciol.utils",
            "ciciol.utils.setup"
        ],
        "version": "0.1.1"
    },
    "cicli": {
        "cmdline": [],
        "modules": [
            "cicli",
            "cicli.analyzers",
            "cicli.app"
        ],
        "version": "0.1.4"
    },
    "cid": {
        "cmdline": [],
        "modules": [
            "cid"
        ],
        "version": "0.1.1"
    },
    "cider": {
        "cmdline": [],
        "modules": [
            "cider",
            "cider._cli",
            "cider._lib",
            "cider._sh",
            "cider._tty",
            "cider.core",
            "cider.exceptions",
            "tests",
            "tests._lib",
            "tests.test_cli",
            "tests.test_core",
            "tests.test_sh"
        ],
        "version": "1.1.11"
    },
    "cidict": {
        "cmdline": [],
        "modules": [
            "cidict"
        ],
        "version": "0.1.1"
    },
    "cidl": {
        "cmdline": [],
        "modules": [
            "cidl"
        ],
        "version": "1.0.3"
    },
    "cidr-brewer": {
        "cmdline": [],
        "modules": [
            "cidrbrewer"
        ],
        "version": "1.0.0"
    },
    "cidr-list": {
        "cmdline": [],
        "modules": [
            "cidr_list",
            "cidr_list.cli"
        ],
        "version": "0.1.1"
    },
    "cidrize": {
        "cmdline": [
            "cidr"
        ],
        "modules": [
            "cidrize"
        ],
        "version": "0.6.4"
    },
    "cidrtrie": {
        "cmdline": [],
        "modules": [
            "cidrtrie"
        ],
        "version": "0.1"
    },
    "ciecam02": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.12"
    },
    "cielo24": {
        "cmdline": [],
        "modules": [
            "cielo24",
            "cielo24.actions",
            "cielo24.enums",
            "cielo24.options",
            "cielo24.web_utils"
        ],
        "version": "1.0.15"
    },
    "cielo24cli": {
        "cmdline": [],
        "modules": [
            "cielo24cli"
        ],
        "version": "1.0.9"
    },
    "cieloapi3": {
        "cmdline": [],
        "modules": [
            "cieloApi3",
            "cieloApi3.address",
            "cieloApi3.cieloEcommerce",
            "cieloApi3.creditCard",
            "cieloApi3.customer",
            "cieloApi3.environment",
            "cieloApi3.merchant",
            "cieloApi3.objectJSON",
            "cieloApi3.payment",
            "cieloApi3.recurrentPayment",
            "cieloApi3.request",
            "cieloApi3.request.base",
            "cieloApi3.request.createCardToken",
            "cieloApi3.request.createSale",
            "cieloApi3.request.deactivateRecorrency",
            "cieloApi3.request.queryRecorrency",
            "cieloApi3.request.querySale",
            "cieloApi3.request.reactivateRecorrency",
            "cieloApi3.request.updateSale",
            "cieloApi3.sale"
        ],
        "version": "0.1.5"
    },
    "ciex": {
        "cmdline": [],
        "modules": [
            "ciex",
            "ciex.ciexctl",
            "ciex.ciexd",
            "ciex.compat",
            "ciex.context",
            "ciex.contrib",
            "ciex.contrib.workers",
            "ciex.contrib.workers.elixir",
            "ciex.contrib.workers.golang",
            "ciex.core",
            "ciex.error",
            "ciex.util",
            "ciex.version",
            "ciex.worker"
        ],
        "version": "0.1.1a0"
    },
    "cif2ice": {
        "cmdline": [],
        "modules": [
            "cif2ice",
            "cif2ice.read_cif"
        ],
        "version": "0.1.9"
    },
    "ciffmbd2016mcegln": {
        "cmdline": [],
        "modules": [
            "ciffmbd2016mcegln"
        ],
        "version": "14.0.3"
    },
    "ciffmbd2016pfdg": {
        "cmdline": [],
        "modules": [
            "ciffmbd2016pfdg",
            "ciffmbd2016pfdg.CreacionYSeleccionVar",
            "ciffmbd2016pfdg.LimpiarDataFrame",
            "ciffmbd2016pfdg.seleccionCaracteristicas"
        ],
        "version": "0.8"
    },
    "ciffquantopian": {
        "cmdline": [],
        "modules": [
            "ciff_quantopian",
            "ciff_quantopian.fields",
            "ciff_quantopian.widgets"
        ],
        "version": "0.0.3"
    },
    "cifilter": {
        "cmdline": [
            "cifilter"
        ],
        "modules": [
            "cifilter",
            "cifilter.cifilter"
        ],
        "version": "0.4.2"
    },
    "cifit": {
        "cmdline": [],
        "modules": [
            "cifitlib",
            "cifitlib.appadm",
            "cifitlib.classes",
            "cifitlib.files",
            "cifitlib.network",
            "cifitlib.pkgs",
            "cifitlib.procs",
            "cifitlib.state",
            "cifitlib.test_files",
            "cifitlib.test_procs",
            "cifitlib.test_state",
            "cifitlib.version"
        ],
        "version": "0.4.post5-19272271c92e-20110127"
    },
    "cifparser": {
        "cmdline": [],
        "modules": [
            "cifparser",
            "cifparser.converters",
            "cifparser.errors",
            "cifparser.grammar",
            "cifparser.namespace",
            "cifparser.parser",
            "cifparser.path",
            "cifparser.valuetree",
            "cifparser.version"
        ],
        "version": "0.0.2"
    },
    "cifsdk": {
        "cmdline": [],
        "modules": [
            "cifsdk",
            "cifsdk._version",
            "cifsdk.client",
            "cifsdk.client.client",
            "cifsdk.client.dummy",
            "cifsdk.client.http",
            "cifsdk.client.plugin",
            "cifsdk.client.tokens",
            "cifsdk.client.zeromq",
            "cifsdk.constants",
            "cifsdk.exceptions",
            "cifsdk.msg",
            "cifsdk.utils",
            "cifsdk.utils.color",
            "cifsdk.utils.zarrow",
            "cifsdk.utils.zhelper",
            "cifsdk.utils.zsocket",
            "cifsdk.ztail",
            "test",
            "test.test_client",
            "test.test_client_http",
            "test.test_client_tokens",
            "test.test_client_zmq",
            "test.test_msgs",
            "test.test_timestamps"
        ],
        "version": "3.0.0a26"
    },
    "cifsdk-zyre": {
        "cmdline": [],
        "modules": [
            "cifsdk_zyre",
            "cifsdk_zyre._version",
            "cifsdk_zyre.client",
            "test",
            "test.test_basic"
        ],
        "version": "0.0.0a4"
    },
    "cigar": {
        "cmdline": [],
        "modules": [
            "cigar"
        ],
        "version": "0.1.3"
    },
    "cihai": {
        "cmdline": [],
        "modules": [
            "cihai",
            "cihai.__about__",
            "cihai._compat",
            "cihai.bootstrap",
            "cihai.cli",
            "cihai.conf",
            "cihai.conversion",
            "cihai.core",
            "cihai.exc",
            "cihai.log",
            "cihai.util"
        ],
        "version": "0.6.1"
    },
    "cihaidata-unihan": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.2"
    },
    "ciipromol": {
        "cmdline": [],
        "modules": [
            "ciip"
        ],
        "version": "0.1.0"
    },
    "cijfergemiddelde": {
        "cmdline": [],
        "modules": [
            "cijfergemiddelde"
        ],
        "version": "1.1.0"
    },
    "cilantro": {
        "cmdline": [],
        "modules": [
            "cilantro",
            "cilantro.admin",
            "cilantro.context_processors",
            "cilantro.managers",
            "cilantro.migrations",
            "cilantro.migrations.0001_initial",
            "cilantro.migrations.0002_auto__add_field_siteconfiguration_auth_required",
            "cilantro.migrations.0003_auto__chg_field_siteconfiguration_site",
            "cilantro.models",
            "cilantro.urls",
            "cilantro.views"
        ],
        "version": "2.0.11"
    },
    "cili": {
        "cmdline": [],
        "modules": [
            "cili",
            "cili.cleanup",
            "cili.extract",
            "cili.models",
            "cili.util"
        ],
        "version": "0.5.3"
    },
    "cim": {
        "cmdline": [],
        "modules": [
            "CDPSM",
            "CDPSM.CDPSMTreeNodeEditor",
            "CDPSM.IEC61968",
            "CDPSM.IEC61968.AssetModels",
            "CDPSM.IEC61968.Common",
            "CDPSM.IEC61968.WiresExt",
            "CDPSM.IEC61970",
            "CDPSM.IEC61970.Core",
            "CDPSM.IEC61970.Domain",
            "CDPSM.IEC61970.Generation",
            "CDPSM.IEC61970.Generation.Production",
            "CDPSM.IEC61970.LoadModel",
            "CDPSM.IEC61970.StateVariables",
            "CDPSM.IEC61970.Topology",
            "CDPSM.IEC61970.Wires",
            "CIM",
            "CIM.CIMTreeNodeEditor",
            "CIM.IEC61968",
            "CIM.IEC61968.AssetModels",
            "CIM.IEC61968.Assets",
            "CIM.IEC61968.Common",
            "CIM.IEC61968.Customers",
            "CIM.IEC61968.Informative",
            "CIM.IEC61968.Informative.EnergyScheduling",
            "CIM.IEC61968.Informative.Financial",
            "CIM.IEC61968.Informative.InfAssetModels",
            "CIM.IEC61968.Informative.InfAssets",
            "CIM.IEC61968.Informative.InfCommon",
            "CIM.IEC61968.Informative.InfCustomers",
            "CIM.IEC61968.Informative.InfERPSupport",
            "CIM.IEC61968.Informative.InfGMLSupport",
            "CIM.IEC61968.Informative.InfLoadControl",
            "CIM.IEC61968.Informative.InfLocations",
            "CIM.IEC61968.Informative.InfMetering",
            "CIM.IEC61968.Informative.InfOperations",
            "CIM.IEC61968.Informative.InfPaymentMetering",
            "CIM.IEC61968.Informative.InfTypeAsset",
            "CIM.IEC61968.Informative.InfWork",
            "CIM.IEC61968.Informative.MarketOperations",
            "CIM.IEC61968.Informative.Reservation",
            "CIM.IEC61968.LoadControl",
            "CIM.IEC61968.Metering",
            "CIM.IEC61968.PaymentMetering",
            "CIM.IEC61968.WiresExt",
            "CIM.IEC61968.Work",
            "CIM.IEC61970",
            "CIM.IEC61970.Contingency",
            "CIM.IEC61970.ControlArea",
            "CIM.IEC61970.Core",
            "CIM.IEC61970.Domain",
            "CIM.IEC61970.Equivalents",
            "CIM.IEC61970.Generation",
            "CIM.IEC61970.Generation.GenerationDynamics",
            "CIM.IEC61970.Generation.Production",
            "CIM.IEC61970.LoadModel",
            "CIM.IEC61970.Meas",
            "CIM.IEC61970.OperationalLimits",
            "CIM.IEC61970.Outage",
            "CIM.IEC61970.Protection",
            "CIM.IEC61970.SCADA",
            "CIM.IEC61970.StateVariables",
            "CIM.IEC61970.Topology",
            "CIM.IEC61970.Wires",
            "CIM.PackageDependencies",
            "CPSM",
            "CPSM.CPSMTreeNodeEditor",
            "CPSM.IEC61970",
            "CPSM.IEC61970.ControlArea",
            "CPSM.IEC61970.Core",
            "CPSM.IEC61970.Domain",
            "CPSM.IEC61970.Equivalents",
            "CPSM.IEC61970.Generation",
            "CPSM.IEC61970.Generation.Production",
            "CPSM.IEC61970.LoadModel",
            "CPSM.IEC61970.Meas",
            "CPSM.IEC61970.OperationalLimits",
            "CPSM.IEC61970.Topology",
            "CPSM.IEC61970.Wires",
            "Dynamics",
            "Dynamics.DynamicsTreeNodeEditor",
            "Dynamics.IEC61970",
            "Dynamics.IEC61970.Domain",
            "Dynamics.IEC61970.Dynamics",
            "Dynamics.IEC61970.Dynamics.ExcitationSystems",
            "Dynamics.IEC61970.Dynamics.Generators",
            "Dynamics.IEC61970.Dynamics.Loads",
            "Dynamics.IEC61970.Dynamics.Motors",
            "Dynamics.IEC61970.Dynamics.PowerSystemStabilizers",
            "Dynamics.IEC61970.Dynamics.TurbineGovernors",
            "Dynamics.IEC61970.Dynamics.VoltageCompensator",
            "UCTE",
            "UCTE.ControlArea",
            "UCTE.Core",
            "UCTE.Domain",
            "UCTE.Equivalents",
            "UCTE.Generation",
            "UCTE.Generation.Production",
            "UCTE.LoadModel",
            "UCTE.OperationalLimits",
            "UCTE.StateVariables",
            "UCTE.Topology",
            "UCTE.UCTETreeNodeEditor",
            "UCTE.Wires",
            "cdpsm",
            "cdpsm.iec61968",
            "cdpsm.iec61968.asset_models",
            "cdpsm.iec61968.common",
            "cdpsm.iec61968.wires_ext",
            "cdpsm.iec61970",
            "cdpsm.iec61970.core",
            "cdpsm.iec61970.domain",
            "cdpsm.iec61970.generation",
            "cdpsm.iec61970.generation.production",
            "cdpsm.iec61970.load_model",
            "cdpsm.iec61970.state_variables",
            "cdpsm.iec61970.topology",
            "cdpsm.iec61970.wires",
            "cim",
            "cim.iec61968",
            "cim.iec61968.asset_models",
            "cim.iec61968.assets",
            "cim.iec61968.common",
            "cim.iec61968.customers",
            "cim.iec61968.informative",
            "cim.iec61968.informative.energy_scheduling",
            "cim.iec61968.informative.financial",
            "cim.iec61968.informative.inf_asset_models",
            "cim.iec61968.informative.inf_assets",
            "cim.iec61968.informative.inf_common",
            "cim.iec61968.informative.inf_customers",
            "cim.iec61968.informative.inf_erpsupport",
            "cim.iec61968.informative.inf_gmlsupport",
            "cim.iec61968.informative.inf_load_control",
            "cim.iec61968.informative.inf_locations",
            "cim.iec61968.informative.inf_metering",
            "cim.iec61968.informative.inf_operations",
            "cim.iec61968.informative.inf_payment_metering",
            "cim.iec61968.informative.inf_type_asset",
            "cim.iec61968.informative.inf_work",
            "cim.iec61968.informative.market_operations",
            "cim.iec61968.informative.reservation",
            "cim.iec61968.load_control",
            "cim.iec61968.metering",
            "cim.iec61968.payment_metering",
            "cim.iec61968.wires_ext",
            "cim.iec61968.work",
            "cim.iec61970",
            "cim.iec61970.contingency",
            "cim.iec61970.control_area",
            "cim.iec61970.core",
            "cim.iec61970.domain",
            "cim.iec61970.equivalents",
            "cim.iec61970.generation",
            "cim.iec61970.generation.generation_dynamics",
            "cim.iec61970.generation.production",
            "cim.iec61970.load_model",
            "cim.iec61970.meas",
            "cim.iec61970.operational_limits",
            "cim.iec61970.outage",
            "cim.iec61970.protection",
            "cim.iec61970.scada",
            "cim.iec61970.state_variables",
            "cim.iec61970.topology",
            "cim.iec61970.wires",
            "cim.package_dependencies",
            "cimrdf",
            "cimrdf.cdpsm_pkg_map",
            "cimrdf.cim_pkg_map",
            "cimrdf.cpsm_pkg_map",
            "cimrdf.dynamics_pkg_map",
            "cimrdf.parser",
            "cimrdf.test",
            "cimrdf.test.CIMTestCase",
            "cimrdf.ucte_pkg_map",
            "cpsm",
            "cpsm.iec61970",
            "cpsm.iec61970.control_area",
            "cpsm.iec61970.core",
            "cpsm.iec61970.domain",
            "cpsm.iec61970.equivalents",
            "cpsm.iec61970.generation",
            "cpsm.iec61970.generation.production",
            "cpsm.iec61970.load_model",
            "cpsm.iec61970.meas",
            "cpsm.iec61970.operational_limits",
            "cpsm.iec61970.topology",
            "cpsm.iec61970.wires",
            "dynamics",
            "dynamics.iec61970",
            "dynamics.iec61970.domain",
            "dynamics.iec61970.dynamics",
            "dynamics.iec61970.dynamics.excitation_systems",
            "dynamics.iec61970.dynamics.generators",
            "dynamics.iec61970.dynamics.loads",
            "dynamics.iec61970.dynamics.motors",
            "dynamics.iec61970.dynamics.power_system_stabilizers",
            "dynamics.iec61970.dynamics.turbine_governors",
            "dynamics.iec61970.dynamics.voltage_compensator",
            "ucte",
            "ucte.control_area",
            "ucte.core",
            "ucte.domain",
            "ucte.equivalents",
            "ucte.generation",
            "ucte.generation.production",
            "ucte.load_model",
            "ucte.operational_limits",
            "ucte.state_variables",
            "ucte.topology",
            "ucte.wires"
        ],
        "version": "14.12"
    },
    "cim2busbranch": {
        "cmdline": [],
        "modules": [
            "cim2busbranch",
            "cim2busbranch.cim2bb",
            "cim2busbranch.ext_pypower",
            "cim2busbranch.topology"
        ],
        "version": "0.1"
    },
    "cimage": {
        "cmdline": [],
        "modules": [
            "cImage"
        ],
        "version": "1.4.1"
    },
    "cimbiote": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cimtools": {
        "cmdline": [
            "colorstart.sh",
            "dragosgfstarter.sh",
            "eedstart.sh"
        ],
        "modules": [
            "CIMtools",
            "CIMtools.CLI",
            "CIMtools.CLI.main_modeler",
            "CIMtools.CLI.parser",
            "CIMtools.config",
            "CIMtools.descriptors",
            "CIMtools.descriptors.basegenerator",
            "CIMtools.descriptors.cxcalc",
            "CIMtools.descriptors.descriptoragregator",
            "CIMtools.descriptors.eed",
            "CIMtools.descriptors.fragmentor",
            "CIMtools.estimators",
            "CIMtools.estimators.basemodeler",
            "CIMtools.estimators.kernels",
            "CIMtools.estimators.svmodel",
            "CIMtools.mbparser",
            "CIMtools.modelbuilder",
            "CIMtools.preparers",
            "CIMtools.preparers.colorize",
            "CIMtools.preparers.markers",
            "CIMtools.preparers.standardizers",
            "CIMtools.version"
        ],
        "version": "1.2.7b0"
    },
    "cin-auto-report": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cinc": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "cinch": {
        "cmdline": [],
        "modules": [
            "cinch",
            "cinch.bin",
            "cinch.bin.entry_point",
            "cinch.bin.wrappers"
        ],
        "version": "0.6.0"
    },
    "cinder": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cinder-data": {
        "cmdline": [],
        "modules": [
            "cinder_data",
            "cinder_data.cache",
            "cinder_data.model",
            "cinder_data.store"
        ],
        "version": "0.0.1"
    },
    "cinderdiags": {
        "cmdline": [],
        "modules": [],
        "version": "2.4.1"
    },
    "cindy-test": {
        "cmdline": [],
        "modules": [
            "cindy_test"
        ],
        "version": "1.1.0"
    },
    "cindyscriptpygments": {
        "cmdline": [],
        "modules": [
            "CindyScriptPygments"
        ],
        "version": "0.2.0"
    },
    "cine": {
        "cmdline": [
            "cine"
        ],
        "modules": [
            "cine",
            "cine.fluorescence"
        ],
        "version": "0.2.1"
    },
    "cine-io": {
        "cmdline": [],
        "modules": [
            "cine_io",
            "cine_io.cine_io",
            "cine_io.version"
        ],
        "version": "0.2.2"
    },
    "cinefiles": {
        "cmdline": [],
        "modules": [
            "cinefiles",
            "cinefiles.IMDBPageParser",
            "cinefiles.cinefiles",
            "cinefiles.cinefolders",
            "cinefiles.googlesearch",
            "cinefiles.templatex",
            "cinefiles.title",
            "cinefiles.tmdb",
            "cinefiles.tmdb.exceptions",
            "cinefiles.tmdb.movie",
            "cinefiles.tmdb.tmdb",
            "cinefiles.ydlhandlers"
        ],
        "version": "1.1.0"
    },
    "cinema": {
        "cmdline": [],
        "modules": [
            "cinema",
            "cinema.actor",
            "cinema.movie",
            "cinema.series",
            "scripts",
            "scripts.watch_movie",
            "tests",
            "tests.test_movie"
        ],
        "version": "0.0.10"
    },
    "cinemaflix": {
        "cmdline": [],
        "modules": [
            "cinemaflix",
            "cinemaflix.cli",
            "cinemaflix.main",
            "cinemaflix.providers",
            "cinemaflix.providers.constants",
            "cinemaflix.providers.cpasbien",
            "cinemaflix.providers.eztv",
            "cinemaflix.providers.kickass",
            "cinemaflix.providers.models",
            "cinemaflix.providers.nyaa",
            "cinemaflix.providers.provider",
            "cinemaflix.providers.rarbg",
            "cinemaflix.providers.rarbgapi",
            "cinemaflix.providers.searchapi",
            "cinemaflix.providers.tpb",
            "cinemaflix.providers.yts",
            "cinemaflix.utils",
            "cinemaflix.utils.handler",
            "tests"
        ],
        "version": "3.0.0"
    },
    "cinemark-python": {
        "cmdline": [],
        "modules": [
            "cinemark",
            "cinemark.api"
        ],
        "version": "0.0.6"
    },
    "cinemate": {
        "cmdline": [],
        "modules": [
            "cinemate",
            "cinemate.account",
            "cinemate.cinemate",
            "cinemate.lists",
            "cinemate.movie",
            "cinemate.person",
            "cinemate.stats",
            "cinemate.utils",
            "cinemate.version"
        ],
        "version": "0.2.1"
    },
    "cinephile": {
        "cmdline": [],
        "modules": [
            "cinephile"
        ],
        "version": "1.0.2"
    },
    "cinesync": {
        "cmdline": [],
        "modules": [
            "cinesync",
            "cinesync.commands",
            "cinesync.csc_xml",
            "cinesync.event_handler",
            "cinesync.frame_annotation",
            "cinesync.media_file",
            "cinesync.play_range",
            "cinesync.session"
        ],
        "version": "1.0"
    },
    "cineworld": {
        "cmdline": [],
        "modules": [
            "cineworld",
            "cineworld.cineworld",
            "cineworld.cineworld_api_key"
        ],
        "version": "0.1.0"
    },
    "cinfony": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cini": {
        "cmdline": [],
        "modules": [
            "cini",
            "cini.models"
        ],
        "version": "0.2.5"
    },
    "cinit": {
        "cmdline": [],
        "modules": [
            "cinit",
            "cinit.templates",
            "tests"
        ],
        "version": "0.1.0"
    },
    "cinje": {
        "cmdline": [],
        "modules": [
            "cinje",
            "cinje.block",
            "cinje.block.function",
            "cinje.block.generic",
            "cinje.block.module",
            "cinje.block.using",
            "cinje.encoding",
            "cinje.helpers",
            "cinje.importer",
            "cinje.inline",
            "cinje.inline.blank",
            "cinje.inline.code",
            "cinje.inline.comment",
            "cinje.inline.flush",
            "cinje.inline.pragma",
            "cinje.inline.require",
            "cinje.inline.text",
            "cinje.inline.use",
            "cinje.release",
            "cinje.std",
            "cinje.std.form",
            "cinje.std.form.input",
            "cinje.std.form.select",
            "cinje.std.html",
            "cinje.util"
        ],
        "version": "1.1.0"
    },
    "cinnamon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cinnamon-udev-locker": {
        "cmdline": [],
        "modules": [
            "cinnamon_udev_locker",
            "cinnamon_udev_locker.main"
        ],
        "version": "0.1.0"
    },
    "cintech": {
        "cmdline": [],
        "modules": [
            "cintech",
            "cintech.misc",
            "cintech.modbus_misc",
            "cintech.modix",
            "cintech.threads"
        ],
        "version": "0.0.6.6"
    },
    "cinterpol": {
        "cmdline": [],
        "modules": [
            "cInterpol",
            "cInterpol.codeexport",
            "cInterpol.model"
        ],
        "version": "0.3.5"
    },
    "cinvalidator": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.7"
    },
    "ciocheck": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cioppino.twothumbs": {
        "cmdline": [],
        "modules": [
            "cioppino",
            "cioppino.twothumbs",
            "cioppino.twothumbs.browser",
            "cioppino.twothumbs.browser.like",
            "cioppino.twothumbs.event",
            "cioppino.twothumbs.indexers",
            "cioppino.twothumbs.interfaces",
            "cioppino.twothumbs.rate",
            "cioppino.twothumbs.setuphandlers",
            "cioppino.twothumbs.testing",
            "cioppino.twothumbs.tests",
            "cioppino.twothumbs.tests.test_view",
            "cioppino.twothumbs.triggers_handlers",
            "cioppino.twothumbs.viewlets",
            "cioppino.twothumbs.viewlets.thumbs"
        ],
        "version": "2.1.1"
    },
    "cipher-utils": {
        "cmdline": [],
        "modules": [
            "cipher-utils"
        ],
        "version": "1.0"
    },
    "cipher.background": {
        "cmdline": [],
        "modules": [
            "cipher",
            "cipher.background",
            "cipher.background.contextmanagers",
            "cipher.background.testing",
            "cipher.background.tests",
            "cipher.background.tests.test_contextmanagers",
            "cipher.background.tests.test_thread",
            "cipher.background.thread"
        ],
        "version": "2.0.0a1"
    },
    "cipher.configstore": {
        "cmdline": [],
        "modules": [
            "cipher",
            "cipher.configstore",
            "cipher.configstore.configstore",
            "cipher.configstore.interfaces",
            "cipher.configstore.tests"
        ],
        "version": "2.0.0a2"
    },
    "cipher.encryptingstorage": {
        "cmdline": [],
        "modules": [
            "cipher",
            "cipher.encryptingstorage",
            "cipher.encryptingstorage.encrypt_util",
            "cipher.encryptingstorage.tests",
            "cipher.encryptingstorage.tests.test_doc",
            "cipher.encryptingstorage.tests.test_encrypt",
            "cipher.encryptingstorage.tests.test_zodb"
        ],
        "version": "1.1"
    },
    "cipher.googlepam": {
        "cmdline": [],
        "modules": [],
        "version": "1.7.0"
    },
    "cipher.lazydate": {
        "cmdline": [],
        "modules": [
            "cipher",
            "cipher.lazydate",
            "cipher.lazydate.interfaces",
            "cipher.lazydate.lazydate",
            "cipher.lazydate.parsedatetime",
            "cipher.lazydate.parsedatetime.parsedatetime",
            "cipher.lazydate.parsedatetime.parsedatetime_consts",
            "cipher.lazydate.parsedatetime.t2",
            "cipher.lazydate.tests"
        ],
        "version": "2.0.0"
    },
    "cipher.logview": {
        "cmdline": [],
        "modules": [
            "cipher",
            "cipher.logview",
            "cipher.logview.decorators",
            "cipher.logview.middleware",
            "cipher.logview.pagetemplate",
            "cipher.logview.publication",
            "cipher.logview.stackformatter",
            "cipher.logview.testing",
            "cipher.logview.tests",
            "cipher.logview.tests.test_decorators",
            "cipher.logview.tests.test_middleware",
            "cipher.logview.tests.test_pagetemplate",
            "cipher.logview.tests.test_publication",
            "cipher.logview.tests.test_stackformatter"
        ],
        "version": "1.1.0"
    },
    "cipher.longrequest": {
        "cmdline": [],
        "modules": [
            "cipher",
            "cipher.longrequest",
            "cipher.longrequest.interfaces",
            "cipher.longrequest.longrequest",
            "cipher.longrequest.tests"
        ],
        "version": "1.0.10"
    },
    "cipher.session": {
        "cmdline": [],
        "modules": [
            "cipher",
            "cipher.session",
            "cipher.session._compat",
            "cipher.session.bootstrap",
            "cipher.session.credentials",
            "cipher.session.interfaces",
            "cipher.session.session",
            "cipher.session.tests",
            "cipher.session.tests.test_appendict",
            "cipher.session.tests.test_data",
            "cipher.session.tests.test_session"
        ],
        "version": "2.1.0"
    },
    "cipherext": {
        "cmdline": [],
        "modules": [
            "cipherext"
        ],
        "version": "1.3"
    },
    "cipipe": {
        "cmdline": [
            "CIpipe"
        ],
        "modules": [
            "CIpipe"
        ],
        "version": "1.148"
    },
    "cipka": {
        "cmdline": [],
        "modules": [
            "cipka"
        ],
        "version": "0.0.1"
    },
    "cipr": {
        "cmdline": [],
        "modules": [
            "cipr",
            "cipr.commands",
            "cipr.commands.app",
            "cipr.commands.cfg",
            "cipr.commands.core",
            "cipr.commands.image",
            "cipr.commands.main",
            "cipr.commands.util"
        ],
        "version": "0.7.7"
    },
    "cipy": {
        "cmdline": [],
        "modules": [
            "cipy",
            "cipy.algorithms",
            "cipy.algorithms.core",
            "cipy.algorithms.pso",
            "cipy.algorithms.pso.base",
            "cipy.algorithms.pso.functions",
            "cipy.algorithms.pso.tests",
            "cipy.algorithms.pso.tests.test_base",
            "cipy.algorithms.pso.tests.test_functions",
            "cipy.algorithms.pso.types",
            "cipy.algorithms.tests",
            "cipy.algorithms.tests.test_core",
            "cipy.benchmarks",
            "cipy.benchmarks.functions",
            "cipy.optimizers",
            "cipy.optimizers.pso_optimizer",
            "examples",
            "examples.gbest_pso",
            "examples.gc_pso",
            "examples.lbest_pso",
            "examples.pso_optimizer",
            "examples.tests",
            "examples.tests.test_benchmarks",
            "examples.tests.test_examples"
        ],
        "version": "0.1.0"
    },
    "cirb.blog": {
        "cmdline": [],
        "modules": [
            "cirb",
            "cirb.blog",
            "cirb.blog.blog_view",
            "cirb.blog.i18n",
            "cirb.blog.interfaces",
            "cirb.blog.is_blog",
            "cirb.blog.layer",
            "cirb.blog.setup_view",
            "cirb.blog.testing",
            "cirb.blog.tests",
            "cirb.blog.tests.base",
            "cirb.blog.tests.test_blogview",
            "cirb.blog.tests.test_isblog",
            "cirb.blog.tests.test_setup",
            "cirb.blog.tests.utils",
            "cirb.blog.upgrades"
        ],
        "version": "1.0a3"
    },
    "circbuf": {
        "cmdline": [],
        "modules": [
            "circbuf"
        ],
        "version": "0.1b1"
    },
    "circe": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "circexplorer": {
        "cmdline": [],
        "modules": [
            "circ",
            "circ.CIRCexplorer",
            "circ.fetch_ucsc",
            "circ.genomic_interval",
            "circ.star_parse",
            "test",
            "test.test_annotate",
            "test.test_convert",
            "test.test_fix",
            "test.utils"
        ],
        "version": "1.1.10"
    },
    "circexplorer2": {
        "cmdline": [],
        "modules": [
            "circ2",
            "circ2.align",
            "circ2.annotate",
            "circ2.assemble",
            "circ2.command_parse",
            "circ2.denovo",
            "circ2.dir_func",
            "circ2.fast_circ",
            "circ2.fetch_ucsc",
            "circ2.genomic_interval",
            "circ2.helper",
            "circ2.parse",
            "circ2.parser",
            "circ2.version",
            "test",
            "test.test_annotate",
            "test.test_denovo",
            "test.test_parse",
            "test.utils"
        ],
        "version": "2.2.6"
    },
    "circlator": {
        "cmdline": [
            "circlator"
        ],
        "modules": [
            "circlator",
            "circlator.assemble",
            "circlator.assembly",
            "circlator.bamfilter",
            "circlator.clean",
            "circlator.common",
            "circlator.dnaa",
            "circlator.external_progs",
            "circlator.mapping",
            "circlator.merge",
            "circlator.minimus2",
            "circlator.program",
            "circlator.start_fixer",
            "circlator.tasks",
            "circlator.tasks.all",
            "circlator.tasks.assemble",
            "circlator.tasks.bam2reads",
            "circlator.tasks.clean",
            "circlator.tasks.fixstart",
            "circlator.tasks.get_dnaa",
            "circlator.tasks.mapreads",
            "circlator.tasks.merge",
            "circlator.tasks.minimus2",
            "circlator.tasks.progcheck",
            "circlator.tasks.test",
            "circlator.tasks.version",
            "circlator.versions"
        ],
        "version": "1.5.1"
    },
    "circle": {
        "cmdline": [],
        "modules": [],
        "version": "1.1"
    },
    "circle-asset": {
        "cmdline": [],
        "modules": [
            "circle_asset",
            "circle_asset.circle_api",
            "circle_asset.cli",
            "circle_asset.project",
            "circle_asset.version"
        ],
        "version": "0.1.0"
    },
    "circle-beacon": {
        "cmdline": [],
        "modules": [
            "alert_circle"
        ],
        "version": "2.0.0"
    },
    "circle-tickler": {
        "cmdline": [],
        "modules": [
            "tickle_circle"
        ],
        "version": "1.0.1"
    },
    "circleci-helpers": {
        "cmdline": [],
        "modules": [
            "circleci_helpers",
            "circleci_helpers.errors",
            "circleci_helpers.logger",
            "circleci_helpers.matrix",
            "circleci_helpers.matrix.cli",
            "circleci_helpers.matrix.config",
            "circleci_helpers.matrix.main",
            "circleci_helpers.matrix.matrix",
            "circleci_helpers.matrix.runner",
            "circleci_helpers.shellhelpers"
        ],
        "version": "0.1.1"
    },
    "circlecli": {
        "cmdline": [
            "circlecli"
        ],
        "modules": [
            "circlecli",
            "circlecli.circleapi",
            "circlecli.circleutils"
        ],
        "version": "1.3.0"
    },
    "circleclient": {
        "cmdline": [],
        "modules": [
            "circleclient",
            "circleclient.circleclient"
        ],
        "version": "0.1.6"
    },
    "circles": {
        "cmdline": [],
        "modules": [
            "Circles",
            "Circles.circles"
        ],
        "version": "0.1"
    },
    "circonus": {
        "cmdline": [],
        "modules": [
            "circonus",
            "circonus.annotation",
            "circonus.client",
            "circonus.collectd",
            "circonus.collectd.cpu",
            "circonus.collectd.df",
            "circonus.collectd.graph",
            "circonus.collectd.interface",
            "circonus.collectd.memory",
            "circonus.graph",
            "circonus.metric",
            "circonus.tag",
            "circonus.util"
        ],
        "version": "0.0.22"
    },
    "circonusapi": {
        "cmdline": [],
        "modules": [
            "circonusapi",
            "circonusapi.circonusapi",
            "circonusapi.config"
        ],
        "version": "0.1.4"
    },
    "circos": {
        "cmdline": [],
        "modules": [
            "circos",
            "circos.circos"
        ],
        "version": "1.3.5"
    },
    "circuit-breaker": {
        "cmdline": [],
        "modules": [
            "circuit_breaker",
            "circuit_breaker.circuit_breaker"
        ],
        "version": "0.1"
    },
    "circuitbreaker": {
        "cmdline": [],
        "modules": [
            "circuitbreaker"
        ],
        "version": "1.0.1"
    },
    "circuitpython-kernel": {
        "cmdline": [],
        "modules": [
            "circuitpython_kernel",
            "circuitpython_kernel.board",
            "circuitpython_kernel.install",
            "circuitpython_kernel.kernel"
        ],
        "version": "0.1.0"
    },
    "circuits": {
        "cmdline": [
            "circuits.bench",
            "htpasswd"
        ],
        "modules": [
            "circuits",
            "circuits.app",
            "circuits.app.daemon",
            "circuits.app.dropprivileges",
            "circuits.core",
            "circuits.core.bridge",
            "circuits.core.components",
            "circuits.core.debugger",
            "circuits.core.events",
            "circuits.core.handlers",
            "circuits.core.helpers",
            "circuits.core.loader",
            "circuits.core.manager",
            "circuits.core.pollers",
            "circuits.core.timers",
            "circuits.core.utils",
            "circuits.core.values",
            "circuits.core.workers",
            "circuits.io",
            "circuits.io.events",
            "circuits.io.file",
            "circuits.io.notify",
            "circuits.io.process",
            "circuits.io.serial",
            "circuits.net",
            "circuits.net.events",
            "circuits.net.sockets",
            "circuits.net.utils",
            "circuits.node",
            "circuits.node.client",
            "circuits.node.events",
            "circuits.node.node",
            "circuits.node.protocol",
            "circuits.node.server",
            "circuits.node.utils",
            "circuits.protocols",
            "circuits.protocols.http",
            "circuits.protocols.irc",
            "circuits.protocols.irc.commands",
            "circuits.protocols.irc.events",
            "circuits.protocols.irc.message",
            "circuits.protocols.irc.numerics",
            "circuits.protocols.irc.protocol",
            "circuits.protocols.irc.replies",
            "circuits.protocols.irc.utils",
            "circuits.protocols.line",
            "circuits.protocols.websocket",
            "circuits.six",
            "circuits.tools",
            "circuits.version",
            "circuits.web",
            "circuits.web._httpauth",
            "circuits.web.client",
            "circuits.web.constants",
            "circuits.web.controllers",
            "circuits.web.dispatchers",
            "circuits.web.dispatchers.dispatcher",
            "circuits.web.dispatchers.jsonrpc",
            "circuits.web.dispatchers.static",
            "circuits.web.dispatchers.virtualhosts",
            "circuits.web.dispatchers.xmlrpc",
            "circuits.web.errors",
            "circuits.web.events",
            "circuits.web.exceptions",
            "circuits.web.headers",
            "circuits.web.http",
            "circuits.web.loggers",
            "circuits.web.main",
            "circuits.web.parsers",
            "circuits.web.parsers.http",
            "circuits.web.parsers.multipart",
            "circuits.web.parsers.querystring",
            "circuits.web.processors",
            "circuits.web.servers",
            "circuits.web.sessions",
            "circuits.web.tools",
            "circuits.web.url",
            "circuits.web.utils",
            "circuits.web.websockets",
            "circuits.web.websockets.client",
            "circuits.web.websockets.dispatcher",
            "circuits.web.wrappers",
            "circuits.web.wsgi"
        ],
        "version": "3.2"
    },
    "circuits-bricks": {
        "cmdline": [],
        "modules": [
            "circuits_bricks",
            "circuits_bricks.app",
            "circuits_bricks.app.application",
            "circuits_bricks.app.config",
            "circuits_bricks.app.logger",
            "circuits_bricks.core",
            "circuits_bricks.core.timers",
            "circuits_bricks.misc",
            "circuits_bricks.misc.compquery",
            "circuits_bricks.net",
            "circuits_bricks.net.protocols",
            "circuits_bricks.net.protocols.websocket",
            "circuits_bricks.net.sockets",
            "circuits_bricks.web",
            "circuits_bricks.web.client",
            "circuits_bricks.web.dispatchers",
            "circuits_bricks.web.dispatchers.dispatcher",
            "circuits_bricks.web.dispatchers.websockets",
            "circuits_bricks.web.filters",
            "circuits_bricks.web.websocket",
            "tests",
            "tests.ConfigBasic",
            "tests.ScopeServers",
            "tests.Timer",
            "tests.WebClient",
            "tests.WebSocket",
            "tests.helpers"
        ],
        "version": "0.3"
    },
    "circuits-minpor": {
        "cmdline": [],
        "modules": [
            "circuits_minpor",
            "circuits_minpor.portal",
            "circuits_minpor.portlet",
            "circuits_minpor.portlets",
            "circuits_minpor.portlets.display",
            "circuits_minpor.portlets.helloworld",
            "circuits_minpor.portlets.servertime",
            "circuits_minpor.utils",
            "tests",
            "tests.TestPortal"
        ],
        "version": "0.3"
    },
    "circuits.app": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "circuits.core": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "circuits.io": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "circuits.net": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "circuits.node": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "circuits.paste": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "circuits.protocols": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "circuits.rest": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "circuits.tools": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "circuits.web": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "circuitscape": {
        "cmdline": [
            "csrun.py",
            "csverify.py"
        ],
        "modules": [
            "circuitscape",
            "circuitscape.cfg",
            "circuitscape.compute",
            "circuitscape.compute_base",
            "circuitscape.gui",
            "circuitscape.gui_options",
            "circuitscape.gui_options_rsrc",
            "circuitscape.gui_rsrc",
            "circuitscape.gui_rsrc_win8",
            "circuitscape.io",
            "circuitscape.profiler",
            "circuitscape.state",
            "circuitscape.verify",
            "circuitscape.verify.stress",
            "circuitscape.verify.verify_routines"
        ],
        "version": "4.0.5"
    },
    "circular": {
        "cmdline": [
            "circular"
        ],
        "modules": [
            "circular",
            "circular.circular"
        ],
        "version": "0.1"
    },
    "circulardependencya": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "circulardependencyb": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "circus": {
        "cmdline": [],
        "modules": [
            "circus",
            "circus._patch",
            "circus.arbiter",
            "circus.circusctl",
            "circus.circusd",
            "circus.client",
            "circus.commands",
            "circus.commands.addwatcher",
            "circus.commands.base",
            "circus.commands.decrproc",
            "circus.commands.dstats",
            "circus.commands.errors",
            "circus.commands.get",
            "circus.commands.globaloptions",
            "circus.commands.incrproc",
            "circus.commands.ipythonshell",
            "circus.commands.kill",
            "circus.commands.list",
            "circus.commands.listen",
            "circus.commands.listsockets",
            "circus.commands.numprocesses",
            "circus.commands.numwatchers",
            "circus.commands.options",
            "circus.commands.quit",
            "circus.commands.reload",
            "circus.commands.reloadconfig",
            "circus.commands.restart",
            "circus.commands.rmwatcher",
            "circus.commands.sendsignal",
            "circus.commands.set",
            "circus.commands.start",
            "circus.commands.stats",
            "circus.commands.status",
            "circus.commands.stop",
            "circus.commands.util",
            "circus.config",
            "circus.consumer",
            "circus.controller",
            "circus.exc",
            "circus.fixed_threading",
            "circus.green",
            "circus.green.arbiter",
            "circus.green.client",
            "circus.green.consumer",
            "circus.green.controller",
            "circus.green.sighandler",
            "circus.papa_process_proxy",
            "circus.pidfile",
            "circus.plugins",
            "circus.plugins._statsd",
            "circus.plugins.command_reloader",
            "circus.plugins.flapping",
            "circus.plugins.http_observer",
            "circus.plugins.redis_observer",
            "circus.plugins.resource_watcher",
            "circus.plugins.statsd",
            "circus.plugins.watchdog",
            "circus.process",
            "circus.py3compat",
            "circus.sighandler",
            "circus.sockets",
            "circus.stats",
            "circus.stats.client",
            "circus.stats.collector",
            "circus.stats.publisher",
            "circus.stats.streamer",
            "circus.stream",
            "circus.stream.file_stream",
            "circus.stream.papa_redirector",
            "circus.stream.redirector",
            "circus.tests",
            "circus.tests.generic",
            "circus.tests.support",
            "circus.tests.test_arbiter",
            "circus.tests.test_circusctl",
            "circus.tests.test_circusd",
            "circus.tests.test_client",
            "circus.tests.test_command_decrproc",
            "circus.tests.test_command_incrproc",
            "circus.tests.test_command_kill",
            "circus.tests.test_command_list",
            "circus.tests.test_command_quit",
            "circus.tests.test_command_set",
            "circus.tests.test_command_signal",
            "circus.tests.test_command_stats",
            "circus.tests.test_config",
            "circus.tests.test_controller",
            "circus.tests.test_convert_option",
            "circus.tests.test_logging",
            "circus.tests.test_papa_stream",
            "circus.tests.test_pidfile",
            "circus.tests.test_plugin_command_reloader",
            "circus.tests.test_plugin_flapping",
            "circus.tests.test_plugin_resource_watcher",
            "circus.tests.test_plugin_statsd",
            "circus.tests.test_plugin_watchdog",
            "circus.tests.test_process",
            "circus.tests.test_reloadconfig",
            "circus.tests.test_runner",
            "circus.tests.test_sighandler",
            "circus.tests.test_sockets",
            "circus.tests.test_stats_client",
            "circus.tests.test_stats_collector",
            "circus.tests.test_stats_publisher",
            "circus.tests.test_stats_streamer",
            "circus.tests.test_stdin_socket",
            "circus.tests.test_stream",
            "circus.tests.test_umask",
            "circus.tests.test_util",
            "circus.tests.test_validate_option",
            "circus.tests.test_watcher",
            "circus.util",
            "circus.watcher",
            "examples",
            "examples.addworkers",
            "examples.apis",
            "examples.byapi",
            "examples.demo",
            "examples.dummy_fly",
            "examples.dummy_fly2",
            "examples.flask_app",
            "examples.flask_redirect",
            "examples.flask_serve",
            "examples.hang",
            "examples.leaker",
            "examples.listener",
            "examples.plugin_watchdog",
            "examples.simplesocket_client",
            "examples.simplesocket_server",
            "examples.uwsgi_lossless_reload",
            "examples.verbose_fly"
        ],
        "version": "0.14.0"
    },
    "circus-env-modifier": {
        "cmdline": [],
        "modules": [
            "circus_env_modifier"
        ],
        "version": "0.1.1"
    },
    "circus-logstash": {
        "cmdline": [],
        "modules": [
            "circus_logstash",
            "circus_logstash.circus_logstash"
        ],
        "version": "0.0.5"
    },
    "circus-web": {
        "cmdline": [],
        "modules": [
            "circusweb",
            "circusweb.circushttpd",
            "circusweb.client",
            "circusweb.controller",
            "circusweb.namespace",
            "circusweb.server",
            "circusweb.session",
            "circusweb.stats_client",
            "circusweb.tests",
            "circusweb.tests.test_utils",
            "circusweb.tests.test_web",
            "circusweb.util"
        ],
        "version": "1.0.0"
    },
    "cirdan": {
        "cmdline": [],
        "modules": [
            "cirdan",
            "cirdan.decorators",
            "cirdan.registry",
            "cirdan.resource"
        ],
        "version": "1.1.1"
    },
    "cirpy": {
        "cmdline": [],
        "modules": [
            "cirpy"
        ],
        "version": "1.0.2"
    },
    "cirrina": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cirru-parser": {
        "cmdline": [],
        "modules": [
            "cirru_parser",
            "cirru_parser.parser",
            "cirru_parser.tail_call",
            "cirru_parser.tree"
        ],
        "version": "0.0.1"
    },
    "cirru-sepal": {
        "cmdline": [],
        "modules": [
            "cirru_sepal",
            "cirru_sepal.sepal"
        ],
        "version": "0.0.1"
    },
    "cirrus": {
        "cmdline": [],
        "modules": [],
        "version": "0.10"
    },
    "cirrus-cli": {
        "cmdline": [],
        "modules": [
            "cirrus",
            "cirrus.build",
            "cirrus.chef_tools",
            "cirrus.cirrus_setup",
            "cirrus.configuration",
            "cirrus.creds_plugin",
            "cirrus.delegate",
            "cirrus.deploy",
            "cirrus.deploy_plugins",
            "cirrus.docker",
            "cirrus.docs",
            "cirrus.documentation_utils",
            "cirrus.editor_plugin",
            "cirrus.environment",
            "cirrus.fabric_helpers",
            "cirrus.feature",
            "cirrus.git_tools",
            "cirrus.gitconfig",
            "cirrus.github_tools",
            "cirrus.hello",
            "cirrus.logger",
            "cirrus.package",
            "cirrus.package_container",
            "cirrus.plugins",
            "cirrus.plugins.creds",
            "cirrus.plugins.creds.default",
            "cirrus.plugins.creds.keyring",
            "cirrus.plugins.deployers",
            "cirrus.plugins.deployers.chef",
            "cirrus.plugins.editors",
            "cirrus.plugins.editors.sublime",
            "cirrus.plugins.editors.test_request_call",
            "cirrus.plugins.jenkins",
            "cirrus.plugins.publishers",
            "cirrus.plugins.publishers.doc_file_server",
            "cirrus.plugins.publishers.jenkins",
            "cirrus.plugins.uploaders",
            "cirrus.plugins.uploaders.fabric_put",
            "cirrus.plugins.uploaders.pypi",
            "cirrus.plusone",
            "cirrus.prestage",
            "cirrus.publish_plugins",
            "cirrus.pylint_tools",
            "cirrus.pypirc",
            "cirrus.quality_control",
            "cirrus.release",
            "cirrus.review",
            "cirrus.selfupdate",
            "cirrus.templates",
            "cirrus.test",
            "cirrus.upload_plugins",
            "cirrus.utils"
        ],
        "version": "0.1.17"
    },
    "cirruscluster": {
        "cmdline": [],
        "modules": [
            "cirruscluster",
            "cirruscluster.ami",
            "cirruscluster.ami.ami_cli",
            "cirruscluster.ami.builder",
            "cirruscluster.cluster",
            "cirruscluster.cluster.cluster_cli",
            "cirruscluster.cluster.config",
            "cirruscluster.cluster.ec2cluster",
            "cirruscluster.cluster.mapr",
            "cirruscluster.core",
            "cirruscluster.ext",
            "cirruscluster.ext.ansible",
            "cirruscluster.ext.ansible.callback_plugins",
            "cirruscluster.ext.ansible.callback_plugins.noop",
            "cirruscluster.ext.ansible.callbacks",
            "cirruscluster.ext.ansible.color",
            "cirruscluster.ext.ansible.constants",
            "cirruscluster.ext.ansible.errors",
            "cirruscluster.ext.ansible.inventory",
            "cirruscluster.ext.ansible.inventory.expand_hosts",
            "cirruscluster.ext.ansible.inventory.group",
            "cirruscluster.ext.ansible.inventory.host",
            "cirruscluster.ext.ansible.inventory.ini",
            "cirruscluster.ext.ansible.inventory.script",
            "cirruscluster.ext.ansible.inventory.vars_plugins",
            "cirruscluster.ext.ansible.inventory.vars_plugins.group_vars",
            "cirruscluster.ext.ansible.module_common",
            "cirruscluster.ext.ansible.playbook",
            "cirruscluster.ext.ansible.playbook.play",
            "cirruscluster.ext.ansible.playbook.task",
            "cirruscluster.ext.ansible.runner",
            "cirruscluster.ext.ansible.runner.action_plugins",
            "cirruscluster.ext.ansible.runner.action_plugins.add_host",
            "cirruscluster.ext.ansible.runner.action_plugins.async",
            "cirruscluster.ext.ansible.runner.action_plugins.copy",
            "cirruscluster.ext.ansible.runner.action_plugins.debug",
            "cirruscluster.ext.ansible.runner.action_plugins.fail",
            "cirruscluster.ext.ansible.runner.action_plugins.fetch",
            "cirruscluster.ext.ansible.runner.action_plugins.group_by",
            "cirruscluster.ext.ansible.runner.action_plugins.normal",
            "cirruscluster.ext.ansible.runner.action_plugins.pause",
            "cirruscluster.ext.ansible.runner.action_plugins.raw",
            "cirruscluster.ext.ansible.runner.action_plugins.script",
            "cirruscluster.ext.ansible.runner.action_plugins.template",
            "cirruscluster.ext.ansible.runner.connection",
            "cirruscluster.ext.ansible.runner.connection_plugins",
            "cirruscluster.ext.ansible.runner.connection_plugins.fireball",
            "cirruscluster.ext.ansible.runner.connection_plugins.local",
            "cirruscluster.ext.ansible.runner.connection_plugins.paramiko_ssh",
            "cirruscluster.ext.ansible.runner.connection_plugins.ssh",
            "cirruscluster.ext.ansible.runner.filter_plugins",
            "cirruscluster.ext.ansible.runner.filter_plugins.core",
            "cirruscluster.ext.ansible.runner.lookup_plugins",
            "cirruscluster.ext.ansible.runner.lookup_plugins.dnstxt",
            "cirruscluster.ext.ansible.runner.lookup_plugins.env",
            "cirruscluster.ext.ansible.runner.lookup_plugins.file",
            "cirruscluster.ext.ansible.runner.lookup_plugins.fileglob",
            "cirruscluster.ext.ansible.runner.lookup_plugins.items",
            "cirruscluster.ext.ansible.runner.lookup_plugins.lines",
            "cirruscluster.ext.ansible.runner.lookup_plugins.pipe",
            "cirruscluster.ext.ansible.runner.lookup_plugins.redis_kv",
            "cirruscluster.ext.ansible.runner.lookup_plugins.sequence",
            "cirruscluster.ext.ansible.runner.lookup_plugins.template",
            "cirruscluster.ext.ansible.runner.poller",
            "cirruscluster.ext.ansible.runner.return_data",
            "cirruscluster.ext.ansible.utils",
            "cirruscluster.ext.ansible.utils.module_docs",
            "cirruscluster.ext.ansible.utils.plugins",
            "cirruscluster.ext.ansible.utils.template",
            "cirruscluster.ext.nx",
            "cirruscluster.ext.nx.password",
            "cirruscluster.test",
            "cirruscluster.test.test_core",
            "cirruscluster.workstation",
            "cirruscluster.workstation_cli"
        ],
        "version": "0.0.1-17"
    },
    "cis": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cis-crypto": {
        "cmdline": [],
        "modules": [
            "publickey",
            "publickey.dstu4145",
            "publickey.ec",
            "publickey.gost",
            "publickey.stb",
            "symmetric",
            "symmetric.belt",
            "symmetric.dstu",
            "symmetric.gost"
        ],
        "version": "1.0.3"
    },
    "cis-jarvis": {
        "cmdline": [
            "jarvis.py"
        ],
        "modules": [],
        "version": "0.12"
    },
    "cis-service-generator": {
        "cmdline": [],
        "modules": [
            "cis_service_generator.example",
            "cis_service_generator.service_generator"
        ],
        "version": "1.0.1"
    },
    "cisco-decrypt": {
        "cmdline": [],
        "modules": [
            "cisco_decrypt",
            "cisco_decrypt.cisco_decrypt"
        ],
        "version": "0.8.3"
    },
    "cisco-deviot": {
        "cmdline": [],
        "modules": [
            "cisco_deviot",
            "cisco_deviot.gateway",
            "cisco_deviot.mqtt_connector",
            "cisco_deviot.thing"
        ],
        "version": "0.1.2"
    },
    "cisco-ironic-contrib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cisco-pass": {
        "cmdline": [],
        "modules": [
            "cisco_pass",
            "cisco_pass.password"
        ],
        "version": "0.2"
    },
    "cisco-ssapi": {
        "cmdline": [],
        "modules": [
            "cisco_ssapi",
            "cisco_ssapi.eox",
            "cisco_ssapi.scripts"
        ],
        "version": "1.0dev"
    },
    "cisco-vpn": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.14"
    },
    "cisco-zeus": {
        "cmdline": [],
        "modules": [
            "zeus",
            "zeus.client",
            "zeus.interfaces",
            "zeus.interfaces.alerts",
            "zeus.interfaces.logs",
            "zeus.interfaces.metrics",
            "zeus.interfaces.rest",
            "zeus.interfaces.trigalerts",
            "zeus.interfaces.utils"
        ],
        "version": "0.2.2.7"
    },
    "cisco79xx-exchange": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ciscoconfparse": {
        "cmdline": [],
        "modules": [
            "ciscoconfparse",
            "ciscoconfparse.ccp_abc",
            "ciscoconfparse.ccp_flask",
            "ciscoconfparse.ccp_util",
            "ciscoconfparse.ciscoconfparse",
            "ciscoconfparse.dammit",
            "ciscoconfparse.models_asa",
            "ciscoconfparse.models_cisco",
            "ciscoconfparse.models_junos",
            "ciscoconfparse.models_nxos",
            "ciscoconfparse.protocol_values",
            "ciscoconfparse.version",
            "version_info",
            "version_info.version"
        ],
        "version": "1.2.47"
    },
    "ciscoipphone": {
        "cmdline": [],
        "modules": [
            "ciscoipphone",
            "ciscoipphone.base",
            "ciscoipphone.services",
            "ciscoipphone.utils"
        ],
        "version": "0.1.0"
    },
    "ciscoreputation": {
        "cmdline": [],
        "modules": [
            "ciscoreputation",
            "ciscoreputation.__about__",
            "ciscoreputation.ciscoreputation"
        ],
        "version": "1.0.0"
    },
    "ciscospark": {
        "cmdline": [],
        "modules": [
            "ciscospark",
            "ciscospark.constants",
            "ciscospark.core",
            "ciscospark.exceptions"
        ],
        "version": "0.1.2"
    },
    "ciscosparkapi": {
        "cmdline": [],
        "modules": [
            "ciscosparkapi",
            "ciscosparkapi._version",
            "ciscosparkapi.api",
            "ciscosparkapi.api.accesstokens",
            "ciscosparkapi.api.licenses",
            "ciscosparkapi.api.memberships",
            "ciscosparkapi.api.messages",
            "ciscosparkapi.api.organizations",
            "ciscosparkapi.api.people",
            "ciscosparkapi.api.roles",
            "ciscosparkapi.api.rooms",
            "ciscosparkapi.api.teammemberships",
            "ciscosparkapi.api.teams",
            "ciscosparkapi.api.webhooks",
            "ciscosparkapi.exceptions",
            "ciscosparkapi.restsession",
            "ciscosparkapi.sparkdata",
            "ciscosparkapi.utils"
        ],
        "version": "0.5.5"
    },
    "ciscosparkbot": {
        "cmdline": [],
        "modules": [
            "ciscosparkbot",
            "ciscosparkbot.Spark",
            "ciscosparkbot.__about__"
        ],
        "version": "0.0.3"
    },
    "ciscotropo-webapi-python": {
        "cmdline": [],
        "modules": [
            "tropo"
        ],
        "version": "0.1.4"
    },
    "ciseau": {
        "cmdline": [],
        "modules": [
            "ciseau",
            "ciseau.constants",
            "ciseau.quoted_expressions",
            "ciseau.regular_expressions",
            "ciseau.sentence_tokenizer",
            "ciseau.wiki_markup_processing",
            "ciseau.word_tokenizer"
        ],
        "version": "1.0.0"
    },
    "cish": {
        "cmdline": [],
        "modules": [
            "cish",
            "cish.commands",
            "cish.pyenv",
            "cish.test_commands",
            "cish.test_pyenv"
        ],
        "version": "0.2.1"
    },
    "ciso8601": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.3"
    },
    "ciss": {
        "cmdline": [],
        "modules": [
            "ciss"
        ],
        "version": "0.2"
    },
    "cissp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cistern": {
        "cmdline": [],
        "modules": [
            "cistern",
            "cistern.cistern",
            "cistern.migrations"
        ],
        "version": "0.1.5"
    },
    "cisterna": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "citadel": {
        "cmdline": [],
        "modules": [
            "citadel",
            "citadel.api",
            "citadel.citadel",
            "citadel.config",
            "citadel.tcp",
            "citadel.tpl"
        ],
        "version": "0.2.1"
    },
    "citation-parser": {
        "cmdline": [],
        "modules": [
            "citation_parser",
            "citation_parser.__version__",
            "citation_parser.antlr",
            "citation_parser.antlr.cp_lexer",
            "citation_parser.antlr.cp_parser",
            "citation_parser.antlr.cp_treeparser",
            "citation_parser.kb_addenda"
        ],
        "version": "0.4.1"
    },
    "cite2c": {
        "cmdline": [],
        "modules": [
            "cite2c",
            "cite2c.handlers",
            "cite2c.install"
        ],
        "version": "0.1"
    },
    "citebib": {
        "cmdline": [
            "citebib",
            "citekey"
        ],
        "modules": [
            "libcitebib",
            "libcitebib.bibtexentry",
            "libcitebib.config",
            "libcitebib.importer",
            "libcitebib.info",
            "libcitebib.main",
            "libcitebib.utils",
            "libcitebib.writer"
        ],
        "version": "0.4.3"
    },
    "citedbyapi": {
        "cmdline": [],
        "modules": [
            "citedby",
            "citedby.citations",
            "citedby.client",
            "citedby.custom_query",
            "citedby.custom_query.journal_titles",
            "tests",
            "tests.test_citedby",
            "tests.test_custom_queries"
        ],
        "version": "1.3.10"
    },
    "citelementtree": {
        "cmdline": [],
        "modules": [
            "elementtree",
            "elementtree.ElementInclude",
            "elementtree.ElementIron",
            "elementtree.ElementPath",
            "elementtree.ElementTree",
            "elementtree.HTMLTreeBuilder",
            "elementtree.SgmlopXMLTreeBuilder",
            "elementtree.SimpleXMLTreeBuilder",
            "elementtree.SimpleXMLWriter",
            "elementtree.TidyHTMLTreeBuilder",
            "elementtree.TidyTools",
            "elementtree.XMLTreeBuilder"
        ],
        "version": "1.2.7"
    },
    "citeproc-py": {
        "cmdline": [],
        "modules": [
            "citeproc",
            "citeproc.formatter",
            "citeproc.formatter.html",
            "citeproc.formatter.plain",
            "citeproc.formatter.rst",
            "citeproc.frontend",
            "citeproc.model",
            "citeproc.py2compat",
            "citeproc.source",
            "citeproc.source.bibtex",
            "citeproc.source.bibtex.bibparse",
            "citeproc.source.bibtex.bibtex",
            "citeproc.source.bibtex.latex",
            "citeproc.source.bibtex.latex.macro",
            "citeproc.source.json",
            "citeproc.string",
            "citeproc.types",
            "citeproc.version"
        ],
        "version": "0.3.0"
    },
    "citeproc-py-styles": {
        "cmdline": [],
        "modules": [
            "citeproc_styles",
            "citeproc_styles.errors",
            "citeproc_styles.version"
        ],
        "version": "0.1.0"
    },
    "citeulike-api": {
        "cmdline": [],
        "modules": [
            "citeulike_api",
            "citeulike_api.citeulike_api",
            "citeulike_api.output",
            "citeulike_api.output.base",
            "citeulike_api.output.bibtex",
            "citeulike_api.output.rst",
            "citeulike_api.test_bibtex_output",
            "citeulike_api.test_citeulikeapi",
            "citeulike_api.util"
        ],
        "version": "0.1.3dev"
    },
    "citex": {
        "cmdline": [],
        "modules": [
            "__init__",
            "btx_io",
            "choose_best",
            "compare",
            "dedupe",
            "second_pass"
        ],
        "version": "0.2.2"
    },
    "citibike": {
        "cmdline": [
            "citibike_download_originals",
            "citibike_dump",
            "citibike_station_mapper",
            "citibike_stations"
        ],
        "modules": [
            "citibike",
            "citibike.cache",
            "citibike.download",
            "citibike.reader",
            "citibike/__init__",
            "citibike/download",
            "citibike/reader",
            "citibike/station/__init__",
            "citibike/station/mapper"
        ],
        "version": "0.0.4"
    },
    "citipy": {
        "cmdline": [],
        "modules": [
            "citipy",
            "citipy.citipy"
        ],
        "version": "0.0.5"
    },
    "citizen": {
        "cmdline": [],
        "modules": [
            "citizen"
        ],
        "version": "0.1.0"
    },
    "citools": {
        "cmdline": [
            "export_job_state",
            "merge_job_state",
            "mvn_incremental",
            "update_job_state"
        ],
        "modules": [
            "citools",
            "citools.data",
            "citools.jenkins",
            "citools.jenkins.report",
            "citools.maven",
            "citools.maven.data",
            "citools.maven.dependencies",
            "citools.maven.pom",
            "citools.persistence",
            "citools.persistence.persistence",
            "test",
            "test.jenkins",
            "test.jenkins.test_jenkins",
            "test.maven",
            "test.maven.test_dependencies",
            "test.maven.test_pom",
            "test.persistence",
            "test.persistence.test_persistence",
            "test.test_data"
        ],
        "version": "0.2.47"
    },
    "citrination": {
        "cmdline": [],
        "modules": [
            "citrination",
            "citrination.command_router",
            "citrination.commands",
            "citrination.commands.create_dataset",
            "citrination.commands.create_dataset_version",
            "citrination.commands.get_file",
            "citrination.commands.get_files",
            "citrination.commands.get_pif",
            "citrination.commands.update_dataset",
            "citrination.commands.upload",
            "citrination.util"
        ],
        "version": "1.0.8"
    },
    "citrination-client": {
        "cmdline": [],
        "modules": [
            "citrination_client",
            "citrination_client.client",
            "citrination_client.search",
            "citrination_client.search.dataset",
            "citrination_client.search.dataset.query",
            "citrination_client.search.dataset.query.dataset_multi_query",
            "citrination_client.search.dataset.query.dataset_query",
            "citrination_client.search.dataset.result",
            "citrination_client.search.dataset.result.dataset_multi_search_result",
            "citrination_client.search.dataset.result.dataset_search_hit",
            "citrination_client.search.dataset.result.dataset_search_result",
            "citrination_client.search.pif",
            "citrination_client.search.pif.query",
            "citrination_client.search.pif.query.chemical",
            "citrination_client.search.pif.query.chemical.chemical_field_operation",
            "citrination_client.search.pif.query.chemical.chemical_field_query",
            "citrination_client.search.pif.query.chemical.chemical_filter",
            "citrination_client.search.pif.query.chemical.composition_query",
            "citrination_client.search.pif.query.core",
            "citrination_client.search.pif.query.core.base_field_operation",
            "citrination_client.search.pif.query.core.base_field_query",
            "citrination_client.search.pif.query.core.base_object_query",
            "citrination_client.search.pif.query.core.classification_query",
            "citrination_client.search.pif.query.core.field_operation",
            "citrination_client.search.pif.query.core.field_query",
            "citrination_client.search.pif.query.core.file_reference_query",
            "citrination_client.search.pif.query.core.filter",
            "citrination_client.search.pif.query.core.id_query",
            "citrination_client.search.pif.query.core.name_query",
            "citrination_client.search.pif.query.core.pages_query",
            "citrination_client.search.pif.query.core.process_step_query",
            "citrination_client.search.pif.query.core.property_query",
            "citrination_client.search.pif.query.core.quantity_query",
            "citrination_client.search.pif.query.core.reference_query",
            "citrination_client.search.pif.query.core.sort_extracted",
            "citrination_client.search.pif.query.core.source_query",
            "citrination_client.search.pif.query.core.system_query",
            "citrination_client.search.pif.query.core.units_normalization",
            "citrination_client.search.pif.query.core.value_query",
            "citrination_client.search.pif.query.pif_multi_query",
            "citrination_client.search.pif.query.pif_query",
            "citrination_client.search.pif.result",
            "citrination_client.search.pif.result.pif_multi_search_result",
            "citrination_client.search.pif.result.pif_search_hit",
            "citrination_client.search.pif.result.pif_search_result",
            "citrination_client.util",
            "citrination_client.util.quote_finder"
        ],
        "version": "1.3.1"
    },
    "citycloud": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cityenergyanalyst": {
        "cmdline": [],
        "modules": [
            "bin",
            "bin.create_function_graph",
            "cea",
            "cea.analysis",
            "cea.analysis.benchmark",
            "cea.analysis.embodied",
            "cea.analysis.mcda",
            "cea.analysis.mobility",
            "cea.analysis.operation",
            "cea.analysis.sensitivity",
            "cea.analysis.sensitivity.sensitivity_demand_analyze",
            "cea.analysis.sensitivity.sensitivity_demand_count",
            "cea.analysis.sensitivity.sensitivity_demand_samples",
            "cea.analysis.sensitivity.sensitivity_demand_simulate",
            "cea.analysis.sensitivity.sensitivity_optimization",
            "cea.analysis.uncertainty",
            "cea.analysis.uncertainty.Individual_Evaluation",
            "cea.analysis.uncertainty.Uncertainty_parameters",
            "cea.cli",
            "cea.databases",
            "cea.databases.CH",
            "cea.demand",
            "cea.demand.airconditioning_model",
            "cea.demand.calibration",
            "cea.demand.calibration.clustering",
            "cea.demand.calibration.clustering.clustering_main",
            "cea.demand.calibration.clustering.sax",
            "cea.demand.calibration.clustering.sax_optimization",
            "cea.demand.control_heating_cooling_systems",
            "cea.demand.control_ventilation_systems",
            "cea.demand.datacenter_loads",
            "cea.demand.demand_main",
            "cea.demand.demand_writers",
            "cea.demand.electrical_loads",
            "cea.demand.hotwater_loads",
            "cea.demand.occupancy_model",
            "cea.demand.preprocessing",
            "cea.demand.preprocessing.properties",
            "cea.demand.rc_model_SIA",
            "cea.demand.rc_model_crank_nicholson_procedure",
            "cea.demand.refrigeration_loads",
            "cea.demand.sensible_loads",
            "cea.demand.space_emission_systems",
            "cea.demand.thermal_loads",
            "cea.demand.ventilation_air_flows_detailed",
            "cea.demand.ventilation_air_flows_simple",
            "cea.examples",
            "cea.geometry",
            "cea.geometry.geometry_reader",
            "cea.globalvar",
            "cea.inputlocator",
            "cea.interfaces",
            "cea.interfaces.arcgis",
            "cea.interfaces.arcgis.CityEnergyAnalyst",
            "cea.interfaces.arcgis.install_toolbox",
            "cea.interfaces.arcgis.modules",
            "cea.optimization",
            "cea.optimization.distribution",
            "cea.optimization.distribution.network_opt_main",
            "cea.optimization.master",
            "cea.optimization.master.check",
            "cea.optimization.master.cost_model",
            "cea.optimization.master.crossover",
            "cea.optimization.master.evaluation",
            "cea.optimization.master.generation",
            "cea.optimization.master.master_main",
            "cea.optimization.master.mutations",
            "cea.optimization.master.normalization",
            "cea.optimization.master.selection",
            "cea.optimization.master.summarize_network",
            "cea.optimization.optimization_main",
            "cea.optimization.preprocessing",
            "cea.optimization.preprocessing.cooling_net",
            "cea.optimization.preprocessing.decentralized_buildings",
            "cea.optimization.preprocessing.electricity",
            "cea.optimization.preprocessing.preprocessing_main",
            "cea.optimization.preprocessing.processheat",
            "cea.optimization.slave",
            "cea.optimization.slave.least_cost",
            "cea.optimization.slave.seasonal_storage",
            "cea.optimization.slave.seasonal_storage.Import_Network_Data_functions",
            "cea.optimization.slave.seasonal_storage.SolarPowerHandler_incl_Losses",
            "cea.optimization.slave.seasonal_storage.design_operation",
            "cea.optimization.slave.seasonal_storage.storage_main",
            "cea.optimization.slave.slave_main",
            "cea.optimization.slave_data",
            "cea.optimization.supportFn",
            "cea.plots",
            "cea.plots.clusters_plot",
            "cea.plots.graphs_demand",
            "cea.plots.graphs_optimization",
            "cea.plots.graphs_solar_potential",
            "cea.plots.heatmaps",
            "cea.plots.pareto_frontier_plot",
            "cea.plots.scenario_plots",
            "cea.plots.sensitivity_demand_graphs",
            "cea.plots.timeseries_interactive_graph",
            "cea.resources",
            "cea.resources.geothermal",
            "cea.resources.natural_gas",
            "cea.resources.radiation_arcgis",
            "cea.resources.radiation_arcgis.radiation",
            "cea.resources.radiation_daysim",
            "cea.resources.radiation_daysim.create_gml",
            "cea.resources.radiation_daysim.interface2py3d",
            "cea.resources.radiation_daysim.radiation_main",
            "cea.resources.radiation_daysim.settings",
            "cea.resources.radiation_daysim.visualization",
            "cea.resources.radiation_daysim.visuals_radiation",
            "cea.technologies",
            "cea.technologies.blinds",
            "cea.technologies.boilers",
            "cea.technologies.chillers",
            "cea.technologies.cogeneration",
            "cea.technologies.controllers",
            "cea.technologies.cooling_tower",
            "cea.technologies.furnace",
            "cea.technologies.heat_exchangers",
            "cea.technologies.heating_coils",
            "cea.technologies.heatpumps",
            "cea.technologies.photovoltaic",
            "cea.technologies.photovoltaic_thermal",
            "cea.technologies.pumps",
            "cea.technologies.radiators",
            "cea.technologies.sewage_heat_exchanger",
            "cea.technologies.solar_collector",
            "cea.technologies.storagetank",
            "cea.technologies.substation",
            "cea.technologies.tabs",
            "cea.technologies.thermal_network",
            "cea.technologies.thermal_storage",
            "cea.tests",
            "cea.tests.create_unittest_data",
            "cea.tests.dodo",
            "cea.tests.test_calc_thermal_loads",
            "cea.tests.test_check_for_radiation_input_in_demand_script",
            "cea.tests.test_helpers",
            "cea.tests.test_inputlocator",
            "cea.tests.test_sensible_loads",
            "cea.utilities",
            "cea.utilities.building_info",
            "cea.utilities.compile_pyd_files",
            "cea.utilities.dbfreader",
            "cea.utilities.epwreader",
            "cea.utilities.helpers",
            "cea.utilities.physics",
            "cea.utilities.reporting",
            "cea.utilities.solar_equations",
            "euler"
        ],
        "version": "2.3a0"
    },
    "citygml2stl": {
        "cmdline": [],
        "modules": [
            "citygml2stl",
            "citygml2stl.citygml",
            "citygml2stl.cli",
            "citygml2stl.exceptions",
            "citygml2stl.polygons",
            "citygml2stl.stl"
        ],
        "version": "0.1a1"
    },
    "cityhall": {
        "cmdline": [],
        "modules": [
            "cityhall",
            "cityhall.errors"
        ],
        "version": "0.0.11"
    },
    "cityhash": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.10.post0"
    },
    "citylink-utils": {
        "cmdline": [
            "citylink.py"
        ],
        "modules": [],
        "version": "0.8"
    },
    "citytraderpythonlib": {
        "cmdline": [],
        "modules": [
            "citytrader",
            "citytrader.auth",
            "citytrader.helpers",
            "citytrader.request_client"
        ],
        "version": "0.2"
    },
    "citytraderpythonlibpip": {
        "cmdline": [],
        "modules": [
            "citytraderpythonlibpip",
            "citytraderpythonlibpip.helpers",
            "citytraderpythonlibpip.request_client"
        ],
        "version": "0.3.1"
    },
    "ciunittest": {
        "cmdline": [],
        "modules": [
            "ciunittest"
        ],
        "version": "1.0.8"
    },
    "ciutils": {
        "cmdline": [],
        "modules": [
            "ciutils"
        ],
        "version": "0.0.6"
    },
    "civ5-wallpapers": {
        "cmdline": [],
        "modules": [
            "civ5_wallpapers",
            "civ5_wallpapers.applier",
            "civ5_wallpapers.cli",
            "civ5_wallpapers.extractor",
            "civ5_wallpapers.fpk"
        ],
        "version": "1.0.0"
    },
    "civeng": {
        "cmdline": [],
        "modules": [
            "civeng",
            "civeng.civeng_unittest",
            "civeng.dict_",
            "civeng.funcs",
            "civeng.mathml2",
            "civeng.results",
            "civeng/concrete",
            "civeng/concrete.cat262",
            "civeng/concrete.params",
            "civeng/concrete/modules",
            "civeng/concrete/modules.bending_force",
            "civeng/concrete/modules.shear_force",
            "civeng/steel.cat263",
            "civeng/steel.cat263_unittest",
            "civeng/steel.params",
            "civeng/steel.props",
            "civeng/steel.props_unittest",
            "civeng/steel.stats",
            "civeng/steel.szs",
            "civeng/steel/modules.amazius"
        ],
        "version": "0.3.0"
    },
    "civet": {
        "cmdline": [],
        "modules": [
            "civet",
            "civet.asset_precompiler",
            "civet.compilers",
            "civet.compilers.base_compiler",
            "civet.compilers.coffeescript",
            "civet.compilers.es6",
            "civet.compilers.sass",
            "civet.management",
            "civet.management.commands",
            "civet.management.commands.runserver",
            "civet.util"
        ],
        "version": "2.0.2"
    },
    "civicjson": {
        "cmdline": [],
        "modules": [
            "civicjson",
            "civicjson.civicjson",
            "civicjson.commands",
            "civicjson.version",
            "tests",
            "tests.test"
        ],
        "version": "0.1.1"
    },
    "civis": {
        "cmdline": [],
        "modules": [
            "civis",
            "civis._utils",
            "civis._version",
            "civis.base",
            "civis.civis",
            "civis.cli",
            "civis.cli._cli_commands",
            "civis.compat",
            "civis.futures",
            "civis.io",
            "civis.io._databases",
            "civis.io._files",
            "civis.io._tables",
            "civis.ml",
            "civis.ml._model",
            "civis.polling",
            "civis.pubnub",
            "civis.resources",
            "civis.resources._resources",
            "civis.response",
            "civis.tests",
            "civis.tests.test_base",
            "civis.tests.test_cli",
            "civis.tests.test_client",
            "civis.tests.test_deprecate",
            "civis.tests.test_futures",
            "civis.tests.test_io",
            "civis.tests.test_polling",
            "civis.tests.test_resources",
            "civis.tests.test_response",
            "civis.tests.test_utils",
            "civis.tests.testcase",
            "civis.utils",
            "civis.utils._deprecation",
            "civis.utils._jobs"
        ],
        "version": "1.5.2"
    },
    "civomega": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ciw": {
        "cmdline": [],
        "modules": [
            "ciw",
            "ciw.arrival_node",
            "ciw.auxiliary",
            "ciw.data_record",
            "ciw.deadlock_detector",
            "ciw.exactnode",
            "ciw.exit_node",
            "ciw.import_params",
            "ciw.individual",
            "ciw.network",
            "ciw.node",
            "ciw.server",
            "ciw.simulation",
            "ciw.state_tracker",
            "ciw.version"
        ],
        "version": "1.1.0"
    },
    "ciwatch": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ciwonderful": {
        "cmdline": [],
        "modules": [
            "ciwonderful"
        ],
        "version": "1.2.0"
    },
    "ciworker": {
        "cmdline": [],
        "modules": [
            "ciworker",
            "ciworker.arg_parser",
            "ciworker.base_worker",
            "ciworker.config_parser",
            "ciworker.id_generator",
            "ciworker.worker_builder",
            "test",
            "test.config_parser_test"
        ],
        "version": "0.2.3"
    },
    "ciyo": {
        "cmdline": [],
        "modules": [
            "Ciyo"
        ],
        "version": "1.0.0"
    },
    "cjdns": {
        "cmdline": [
            "cexec",
            "peerStats"
        ],
        "modules": [
            "cjdns",
            "cjdns.admin_tools",
            "cjdns.base32",
            "cjdns.bencode",
            "cjdns.cjdns",
            "cjdns.key_utils"
        ],
        "version": "0.2.4"
    },
    "cjdnsadmin": {
        "cmdline": [
            "peerStats"
        ],
        "modules": [
            "cjdnsadmin",
            "cjdnsadmin.bencode",
            "cjdnsadmin.cjdnsadmin"
        ],
        "version": "0.1.6"
    },
    "cjg-nester": {
        "cmdline": [],
        "modules": [
            "cjg_nester"
        ],
        "version": "1.0.0"
    },
    "cjh-senitize": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cjhello": {
        "cmdline": [],
        "modules": [
            "cjhello"
        ],
        "version": "1.0.0"
    },
    "cjk-defn": {
        "cmdline": [
            "cjk-defn"
        ],
        "modules": [
            "cjk_defn"
        ],
        "version": "1.0.1"
    },
    "cjklib": {
        "cmdline": [],
        "modules": [
            "cjklib",
            "cjklib.build",
            "cjklib.build.builder",
            "cjklib.build.cli",
            "cjklib.characterlookup",
            "cjklib.cjknife",
            "cjklib.dbconnector",
            "cjklib.dictionary",
            "cjklib.dictionary.entry",
            "cjklib.dictionary.format",
            "cjklib.dictionary.install",
            "cjklib.dictionary.search",
            "cjklib.exception",
            "cjklib.reading",
            "cjklib.reading.converter",
            "cjklib.reading.operator",
            "cjklib.test",
            "cjklib.test.build",
            "cjklib.test.characterlookup",
            "cjklib.test.dictionary",
            "cjklib.test.readingconverter",
            "cjklib.test.readingoperator",
            "cjklib.util"
        ],
        "version": "0.3.2"
    },
    "cjktools": {
        "cmdline": [],
        "modules": [
            "cjktools",
            "cjktools.__version__",
            "cjktools.alternations",
            "cjktools.common",
            "cjktools.errors",
            "cjktools.kana_table",
            "cjktools.maps",
            "cjktools.resources",
            "cjktools.resources.auto_format",
            "cjktools.resources.bilingual_dict",
            "cjktools.resources.cjkdata",
            "cjktools.resources.dict_format",
            "cjktools.resources.kanji_list",
            "cjktools.resources.kanjidic",
            "cjktools.resources.languages",
            "cjktools.resources.pinyin_table",
            "cjktools.resources.place",
            "cjktools.resources.radkdict",
            "cjktools.resources.split_by_codes",
            "cjktools.resources.tree",
            "cjktools.resources.zhuyin_table",
            "cjktools.scripts",
            "cjktools.smart_cache"
        ],
        "version": "1.7.0"
    },
    "cjktools-data": {
        "cmdline": [],
        "modules": [
            "cjktools_data",
            "cjktools_data.__version__"
        ],
        "version": "0.2.1-2010-07-29"
    },
    "cjkwrap": {
        "cmdline": [],
        "modules": [
            "cjkwrap"
        ],
        "version": "2.2"
    },
    "cjmk1": {
        "cmdline": [],
        "modules": [
            "cjmk1"
        ],
        "version": "1.4.0"
    },
    "cjrh-template": {
        "cmdline": [],
        "modules": [],
        "version": "2017.5.3"
    },
    "cjyfff-test": {
        "cmdline": [],
        "modules": [
            "test",
            "test.a"
        ],
        "version": "0.0.2"
    },
    "ck": {
        "cmdline": [
            "ck",
            "ck.bat"
        ],
        "modules": [
            "ck",
            "ck.kernel"
        ],
        "version": "1.9.1"
    },
    "ck-headfirst-01": {
        "cmdline": [],
        "modules": [
            "CK_HeadFirst_01"
        ],
        "version": "1.3.0"
    },
    "ckan": {
        "cmdline": [],
        "modules": [
            "ckan",
            "ckan.authz",
            "ckan.ckan_nose_plugin",
            "ckan.common",
            "ckan.config",
            "ckan.config.environment",
            "ckan.config.install",
            "ckan.config.middleware",
            "ckan.config.middleware.common_middleware",
            "ckan.config.middleware.flask_app",
            "ckan.config.middleware.pylons_app",
            "ckan.config.routing",
            "ckan.controllers",
            "ckan.controllers.admin",
            "ckan.controllers.api",
            "ckan.controllers.error",
            "ckan.controllers.feed",
            "ckan.controllers.group",
            "ckan.controllers.home",
            "ckan.controllers.organization",
            "ckan.controllers.package",
            "ckan.controllers.revision",
            "ckan.controllers.storage",
            "ckan.controllers.tag",
            "ckan.controllers.template",
            "ckan.controllers.user",
            "ckan.controllers.util",
            "ckan.exceptions",
            "ckan.i18n",
            "ckan.i18n.check_po_files",
            "ckan.include",
            "ckan.include.rcssmin",
            "ckan.include.rjsmin",
            "ckan.lib",
            "ckan.lib.activity_streams",
            "ckan.lib.activity_streams_session_extension",
            "ckan.lib.alphabet_paginate",
            "ckan.lib.app_globals",
            "ckan.lib.auth_tkt",
            "ckan.lib.authenticator",
            "ckan.lib.base",
            "ckan.lib.captcha",
            "ckan.lib.celery_app",
            "ckan.lib.cli",
            "ckan.lib.config_tool",
            "ckan.lib.create_test_data",
            "ckan.lib.datapreview",
            "ckan.lib.dictization",
            "ckan.lib.dictization.model_dictize",
            "ckan.lib.dictization.model_save",
            "ckan.lib.email_notifications",
            "ckan.lib.extract",
            "ckan.lib.fanstatic_extensions",
            "ckan.lib.fanstatic_resources",
            "ckan.lib.formatters",
            "ckan.lib.hash",
            "ckan.lib.helpers",
            "ckan.lib.i18n",
            "ckan.lib.io",
            "ckan.lib.jinja_extensions",
            "ckan.lib.jsonp",
            "ckan.lib.mailer",
            "ckan.lib.maintain",
            "ckan.lib.munge",
            "ckan.lib.navl",
            "ckan.lib.navl.dictization_functions",
            "ckan.lib.navl.validators",
            "ckan.lib.plugins",
            "ckan.lib.render",
            "ckan.lib.search",
            "ckan.lib.search.common",
            "ckan.lib.search.index",
            "ckan.lib.search.query",
            "ckan.lib.search.sql",
            "ckan.lib.uploader",
            "ckan.logic",
            "ckan.logic.action",
            "ckan.logic.action.create",
            "ckan.logic.action.delete",
            "ckan.logic.action.get",
            "ckan.logic.action.patch",
            "ckan.logic.action.update",
            "ckan.logic.auth",
            "ckan.logic.auth.create",
            "ckan.logic.auth.delete",
            "ckan.logic.auth.get",
            "ckan.logic.auth.patch",
            "ckan.logic.auth.update",
            "ckan.logic.converters",
            "ckan.logic.schema",
            "ckan.logic.validators",
            "ckan.migration",
            "ckan.migration.manage",
            "ckan.migration.versions",
            "ckan.migration.versions.001_add_existing_tables",
            "ckan.migration.versions.002_add_author_and_maintainer",
            "ckan.migration.versions.003_add_user_object",
            "ckan.migration.versions.004_add_group_object",
            "ckan.migration.versions.005_add_authorization_tables",
            "ckan.migration.versions.006_add_ratings",
            "ckan.migration.versions.007_add_system_roles",
            "ckan.migration.versions.008_update_vdm_ids",
            "ckan.migration.versions.009_add_creation_timestamps",
            "ckan.migration.versions.010_add_user_about",
            "ckan.migration.versions.011_add_package_search_vector",
            "ckan.migration.versions.012_add_resources",
            "ckan.migration.versions.013_add_hash",
            "ckan.migration.versions.014_hash_2",
            "ckan.migration.versions.015_remove_state_object",
            "ckan.migration.versions.016_uuids_everywhere",
            "ckan.migration.versions.017_add_pkg_relationships",
            "ckan.migration.versions.018_adjust_licenses",
            "ckan.migration.versions.019_pkg_relationships_state",
            "ckan.migration.versions.020_add_changeset",
            "ckan.migration.versions.022_add_group_extras",
            "ckan.migration.versions.023_add_harvesting",
            "ckan.migration.versions.024_add_harvested_document",
            "ckan.migration.versions.025_add_authorization_groups",
            "ckan.migration.versions.026_authorization_group_user_pk",
            "ckan.migration.versions.027_adjust_harvester",
            "ckan.migration.versions.028_drop_harvest_source_status",
            "ckan.migration.versions.029_version_groups",
            "ckan.migration.versions.030_additional_user_attributes",
            "ckan.migration.versions.031_move_openid_to_new_field",
            "ckan.migration.versions.032_add_extra_info_field_to_resources",
            "ckan.migration.versions.033_auth_group_user_id_add_conditional",
            "ckan.migration.versions.034_resource_group_table",
            "ckan.migration.versions.035_harvesting_doc_versioning",
            "ckan.migration.versions.036_lockdown_roles",
            "ckan.migration.versions.037_role_anon_editor",
            "ckan.migration.versions.038_delete_migration_tables",
            "ckan.migration.versions.039_add_expired_id_and_dates",
            "ckan.migration.versions.040_reset_key_on_user",
            "ckan.migration.versions.041_resource_new_fields",
            "ckan.migration.versions.042_user_revision_indexes",
            "ckan.migration.versions.043_drop_postgres_search",
            "ckan.migration.versions.044_add_task_status",
            "ckan.migration.versions.045_user_name_unique",
            "ckan.migration.versions.046_drop_changesets",
            "ckan.migration.versions.047_rename_package_group_member",
            "ckan.migration.versions.048_add_activity_streams_tables",
            "ckan.migration.versions.049_add_group_approval_status",
            "ckan.migration.versions.050_term_translation_table",
            "ckan.migration.versions.051_add_tag_vocabulary",
            "ckan.migration.versions.052_update_member_capacities",
            "ckan.migration.versions.053_add_group_logo",
            "ckan.migration.versions.054_add_resource_created_date",
            "ckan.migration.versions.055_update_user_and_activity_detail",
            "ckan.migration.versions.056_add_related_table",
            "ckan.migration.versions.057_tracking",
            "ckan.migration.versions.058_add_follower_tables",
            "ckan.migration.versions.059_add_related_count_and_flag",
            "ckan.migration.versions.060_add_system_info_table",
            "ckan.migration.versions.061_add_follower__group_table",
            "ckan.migration.versions.062_add_dashboard_table",
            "ckan.migration.versions.063_org_changes",
            "ckan.migration.versions.064_add_email_last_sent_column",
            "ckan.migration.versions.065_add_email_notifications_preference",
            "ckan.migration.versions.066_default_package_type",
            "ckan.migration.versions.067_turn_extras_to_strings",
            "ckan.migration.versions.068_add_package_extras_index",
            "ckan.migration.versions.069_resource_url_and_metadata_modified",
            "ckan.migration.versions.070_add_activity_and_resource_indexes",
            "ckan.migration.versions.071_add_state_column_to_user_table",
            "ckan.migration.versions.072_add_resource_view",
            "ckan.migration.versions.073_update_resource_view_resource_id_constraint",
            "ckan.migration.versions.074_remove_resource_groups",
            "ckan.migration.versions.075_rename_view_plugins",
            "ckan.migration.versions.076_rename_view_plugins_2",
            "ckan.migration.versions.077_add_revisions_to_system_info",
            "ckan.migration.versions.078_remove_old_authz_model",
            "ckan.migration.versions.079_resource_revision_index",
            "ckan.migration.versions.080_continuity_id_indexes",
            "ckan.migration.versions.081_set_datastore_active",
            "ckan.migration.versions.082_create_index_creator_user_id",
            "ckan.migration.versions.083_remove_related_items",
            "ckan.migration.versions.084_add_metadata_created",
            "ckan.model",
            "ckan.model.activity",
            "ckan.model.core",
            "ckan.model.dashboard",
            "ckan.model.domain_object",
            "ckan.model.extension",
            "ckan.model.follower",
            "ckan.model.group",
            "ckan.model.group_extra",
            "ckan.model.license",
            "ckan.model.meta",
            "ckan.model.misc",
            "ckan.model.modification",
            "ckan.model.package",
            "ckan.model.package_extra",
            "ckan.model.package_relationship",
            "ckan.model.rating",
            "ckan.model.resource",
            "ckan.model.resource_view",
            "ckan.model.system_info",
            "ckan.model.tag",
            "ckan.model.task_status",
            "ckan.model.term_translation",
            "ckan.model.tracking",
            "ckan.model.types",
            "ckan.model.user",
            "ckan.model.vocabulary",
            "ckan.pastertemplates",
            "ckan.plugins",
            "ckan.plugins.core",
            "ckan.plugins.interfaces",
            "ckan.plugins.toolkit",
            "ckan.plugins.toolkit_sphinx_extension",
            "ckan.tests",
            "ckan.tests.config",
            "ckan.tests.config.test_environment",
            "ckan.tests.config.test_middleware",
            "ckan.tests.controllers",
            "ckan.tests.controllers.test_admin",
            "ckan.tests.controllers.test_api",
            "ckan.tests.controllers.test_feed",
            "ckan.tests.controllers.test_group",
            "ckan.tests.controllers.test_home",
            "ckan.tests.controllers.test_organization",
            "ckan.tests.controllers.test_package",
            "ckan.tests.controllers.test_tags",
            "ckan.tests.controllers.test_user",
            "ckan.tests.controllers.test_util",
            "ckan.tests.factories",
            "ckan.tests.helpers",
            "ckan.tests.i18n",
            "ckan.tests.i18n.test_check_po_files",
            "ckan.tests.legacy",
            "ckan.tests.legacy.ckantestplugins",
            "ckan.tests.legacy.functional",
            "ckan.tests.legacy.functional.api",
            "ckan.tests.legacy.functional.api.base",
            "ckan.tests.legacy.functional.api.model",
            "ckan.tests.legacy.functional.api.model.test_group",
            "ckan.tests.legacy.functional.api.model.test_licenses",
            "ckan.tests.legacy.functional.api.model.test_package",
            "ckan.tests.legacy.functional.api.model.test_ratings",
            "ckan.tests.legacy.functional.api.model.test_relationships",
            "ckan.tests.legacy.functional.api.model.test_revisions",
            "ckan.tests.legacy.functional.api.model.test_tag",
            "ckan.tests.legacy.functional.api.model.test_vocabulary",
            "ckan.tests.legacy.functional.api.test_activity",
            "ckan.tests.legacy.functional.api.test_api",
            "ckan.tests.legacy.functional.api.test_dashboard",
            "ckan.tests.legacy.functional.api.test_email_notifications",
            "ckan.tests.legacy.functional.api.test_follow",
            "ckan.tests.legacy.functional.api.test_misc",
            "ckan.tests.legacy.functional.api.test_package_search",
            "ckan.tests.legacy.functional.api.test_resource",
            "ckan.tests.legacy.functional.api.test_resource_search",
            "ckan.tests.legacy.functional.api.test_user",
            "ckan.tests.legacy.functional.api.test_util",
            "ckan.tests.legacy.functional.base",
            "ckan.tests.legacy.functional.test_activity",
            "ckan.tests.legacy.functional.test_admin",
            "ckan.tests.legacy.functional.test_error",
            "ckan.tests.legacy.functional.test_group",
            "ckan.tests.legacy.functional.test_package",
            "ckan.tests.legacy.functional.test_pagination",
            "ckan.tests.legacy.functional.test_preview_interface",
            "ckan.tests.legacy.functional.test_revision",
            "ckan.tests.legacy.functional.test_tag",
            "ckan.tests.legacy.functional.test_tracking",
            "ckan.tests.legacy.functional.test_user",
            "ckan.tests.legacy.html_check",
            "ckan.tests.legacy.lib",
            "ckan.tests.legacy.lib.test_alphabet_pagination",
            "ckan.tests.legacy.lib.test_authenticator",
            "ckan.tests.legacy.lib.test_cli",
            "ckan.tests.legacy.lib.test_dictization",
            "ckan.tests.legacy.lib.test_dictization_schema",
            "ckan.tests.legacy.lib.test_email_notifications",
            "ckan.tests.legacy.lib.test_hash",
            "ckan.tests.legacy.lib.test_helpers",
            "ckan.tests.legacy.lib.test_i18n",
            "ckan.tests.legacy.lib.test_navl",
            "ckan.tests.legacy.lib.test_resource_search",
            "ckan.tests.legacy.lib.test_simple_search",
            "ckan.tests.legacy.lib.test_solr_package_search",
            "ckan.tests.legacy.lib.test_solr_package_search_synchronous_update",
            "ckan.tests.legacy.lib.test_solr_schema_version",
            "ckan.tests.legacy.lib.test_solr_search_index",
            "ckan.tests.legacy.lib.test_tag_search",
            "ckan.tests.legacy.logic",
            "ckan.tests.legacy.logic.test_action",
            "ckan.tests.legacy.logic.test_auth",
            "ckan.tests.legacy.logic.test_init",
            "ckan.tests.legacy.logic.test_member",
            "ckan.tests.legacy.logic.test_tag",
            "ckan.tests.legacy.logic.test_tag_vocab",
            "ckan.tests.legacy.logic.test_validators",
            "ckan.tests.legacy.misc",
            "ckan.tests.legacy.misc.test_format_text",
            "ckan.tests.legacy.misc.test_mock_mail_server",
            "ckan.tests.legacy.misc.test_sync",
            "ckan.tests.legacy.mock_mail_server",
            "ckan.tests.legacy.mock_plugin",
            "ckan.tests.legacy.models",
            "ckan.tests.legacy.models.test_activity",
            "ckan.tests.legacy.models.test_extras",
            "ckan.tests.legacy.models.test_follower",
            "ckan.tests.legacy.models.test_group",
            "ckan.tests.legacy.models.test_misc",
            "ckan.tests.legacy.models.test_package",
            "ckan.tests.legacy.models.test_package_relationships",
            "ckan.tests.legacy.models.test_purge_revision",
            "ckan.tests.legacy.models.test_resource",
            "ckan.tests.legacy.models.test_revision",
            "ckan.tests.legacy.models.test_user",
            "ckan.tests.legacy.pylons_controller",
            "ckan.tests.legacy.schema",
            "ckan.tests.legacy.schema.test_schema",
            "ckan.tests.legacy.test_coding_standards",
            "ckan.tests.legacy.test_plugins",
            "ckan.tests.legacy.test_versions",
            "ckan.tests.lib",
            "ckan.tests.lib.dictization",
            "ckan.tests.lib.dictization.test_model_dictize",
            "ckan.tests.lib.navl",
            "ckan.tests.lib.navl.test_dictization_functions",
            "ckan.tests.lib.navl.test_validators",
            "ckan.tests.lib.search",
            "ckan.tests.lib.search.test_index",
            "ckan.tests.lib.test_app_globals",
            "ckan.tests.lib.test_auth_tkt",
            "ckan.tests.lib.test_base",
            "ckan.tests.lib.test_cli",
            "ckan.tests.lib.test_config_tool",
            "ckan.tests.lib.test_datapreview",
            "ckan.tests.lib.test_helpers",
            "ckan.tests.lib.test_io",
            "ckan.tests.lib.test_mailer",
            "ckan.tests.lib.test_munge",
            "ckan.tests.lib.test_navl",
            "ckan.tests.logic",
            "ckan.tests.logic.action",
            "ckan.tests.logic.action.test_create",
            "ckan.tests.logic.action.test_delete",
            "ckan.tests.logic.action.test_get",
            "ckan.tests.logic.action.test_patch",
            "ckan.tests.logic.action.test_update",
            "ckan.tests.logic.auth",
            "ckan.tests.logic.auth.test_create",
            "ckan.tests.logic.auth.test_delete",
            "ckan.tests.logic.auth.test_get",
            "ckan.tests.logic.auth.test_init",
            "ckan.tests.logic.auth.test_update",
            "ckan.tests.logic.test_conversion",
            "ckan.tests.logic.test_converters",
            "ckan.tests.logic.test_schema",
            "ckan.tests.logic.test_validators",
            "ckan.tests.migration",
            "ckan.tests.model",
            "ckan.tests.model.test_license",
            "ckan.tests.model.test_resource",
            "ckan.tests.model.test_resource_view",
            "ckan.tests.model.test_system_info",
            "ckan.tests.model.test_user",
            "ckan.tests.plugins",
            "ckan.tests.plugins.test_toolkit",
            "ckan.tests.test_authz",
            "ckan.tests.test_coding_standards",
            "ckan.tests.test_common",
            "ckan.tests.test_factories",
            "ckan.websetup",
            "ckanext",
            "ckanext.datapusher",
            "ckanext.datapusher.cli",
            "ckanext.datapusher.helpers",
            "ckanext.datapusher.interfaces",
            "ckanext.datapusher.logic",
            "ckanext.datapusher.logic.action",
            "ckanext.datapusher.logic.auth",
            "ckanext.datapusher.logic.schema",
            "ckanext.datapusher.plugin",
            "ckanext.datapusher.tests",
            "ckanext.datapusher.tests.test",
            "ckanext.datapusher.tests.test_action",
            "ckanext.datapusher.tests.test_default_views",
            "ckanext.datapusher.tests.test_interfaces",
            "ckanext.datastore",
            "ckanext.datastore.commands",
            "ckanext.datastore.controller",
            "ckanext.datastore.db",
            "ckanext.datastore.helpers",
            "ckanext.datastore.interfaces",
            "ckanext.datastore.logic",
            "ckanext.datastore.logic.action",
            "ckanext.datastore.logic.auth",
            "ckanext.datastore.logic.schema",
            "ckanext.datastore.plugin",
            "ckanext.datastore.tests",
            "ckanext.datastore.tests.helpers",
            "ckanext.datastore.tests.sample_datastore_plugin",
            "ckanext.datastore.tests.test_configure",
            "ckanext.datastore.tests.test_create",
            "ckanext.datastore.tests.test_db",
            "ckanext.datastore.tests.test_delete",
            "ckanext.datastore.tests.test_disable",
            "ckanext.datastore.tests.test_dump",
            "ckanext.datastore.tests.test_helpers",
            "ckanext.datastore.tests.test_info",
            "ckanext.datastore.tests.test_interface",
            "ckanext.datastore.tests.test_plugin",
            "ckanext.datastore.tests.test_search",
            "ckanext.datastore.tests.test_unit",
            "ckanext.datastore.tests.test_upsert",
            "ckanext.example_iauthfunctions",
            "ckanext.example_iauthfunctions.plugin_v1",
            "ckanext.example_iauthfunctions.plugin_v2",
            "ckanext.example_iauthfunctions.plugin_v3",
            "ckanext.example_iauthfunctions.plugin_v4",
            "ckanext.example_iauthfunctions.plugin_v5_custom_config_setting",
            "ckanext.example_iauthfunctions.plugin_v6_parent_auth_functions",
            "ckanext.example_iconfigurer",
            "ckanext.example_iconfigurer.controller",
            "ckanext.example_iconfigurer.plugin",
            "ckanext.example_iconfigurer.plugin_v1",
            "ckanext.example_iconfigurer.plugin_v2",
            "ckanext.example_iconfigurer.tests",
            "ckanext.example_iconfigurer.tests.test_example_iconfigurer",
            "ckanext.example_iconfigurer.tests.test_iconfigurer_toolkit",
            "ckanext.example_iconfigurer.tests.test_iconfigurer_update_config",
            "ckanext.example_idatasetform",
            "ckanext.example_idatasetform.plugin",
            "ckanext.example_idatasetform.plugin_v1",
            "ckanext.example_idatasetform.plugin_v2",
            "ckanext.example_idatasetform.plugin_v3",
            "ckanext.example_idatasetform.plugin_v4",
            "ckanext.example_idatasetform.tests",
            "ckanext.example_idatasetform.tests.test_controllers",
            "ckanext.example_idatasetform.tests.test_example_idatasetform",
            "ckanext.example_igroupform",
            "ckanext.example_igroupform.plugin",
            "ckanext.example_igroupform.tests",
            "ckanext.example_igroupform.tests.test_controllers",
            "ckanext.example_iresourcecontroller",
            "ckanext.example_iresourcecontroller.plugin",
            "ckanext.example_itemplatehelpers",
            "ckanext.example_itemplatehelpers.plugin",
            "ckanext.example_itranslation",
            "ckanext.example_itranslation.plugin",
            "ckanext.example_itranslation.plugin_v1",
            "ckanext.example_itranslation.tests",
            "ckanext.example_itranslation.tests.test_plugin",
            "ckanext.example_iuploader",
            "ckanext.example_iuploader.plugin",
            "ckanext.example_iuploader.test",
            "ckanext.example_iuploader.test.test_plugin",
            "ckanext.example_ivalidators",
            "ckanext.example_ivalidators.plugin",
            "ckanext.example_ivalidators.tests",
            "ckanext.example_ivalidators.tests.test_ivalidators",
            "ckanext.example_theme",
            "ckanext.example_theme.custom_config_setting",
            "ckanext.example_theme.custom_config_setting.plugin",
            "ckanext.example_theme.custom_emails",
            "ckanext.example_theme.custom_emails.plugin",
            "ckanext.example_theme.custom_emails.tests",
            "ckanext.example_theme.v01_empty_extension",
            "ckanext.example_theme.v01_empty_extension.plugin",
            "ckanext.example_theme.v02_empty_template",
            "ckanext.example_theme.v02_empty_template.plugin",
            "ckanext.example_theme.v03_jinja",
            "ckanext.example_theme.v03_jinja.plugin",
            "ckanext.example_theme.v04_ckan_extends",
            "ckanext.example_theme.v04_ckan_extends.plugin",
            "ckanext.example_theme.v05_block",
            "ckanext.example_theme.v05_block.plugin",
            "ckanext.example_theme.v06_super",
            "ckanext.example_theme.v06_super.plugin",
            "ckanext.example_theme.v07_helper_function",
            "ckanext.example_theme.v07_helper_function.plugin",
            "ckanext.example_theme.v08_custom_helper_function",
            "ckanext.example_theme.v08_custom_helper_function.plugin",
            "ckanext.example_theme.v09_snippet",
            "ckanext.example_theme.v09_snippet.plugin",
            "ckanext.example_theme.v10_custom_snippet",
            "ckanext.example_theme.v10_custom_snippet.plugin",
            "ckanext.example_theme.v11_HTML_and_CSS",
            "ckanext.example_theme.v11_HTML_and_CSS.plugin",
            "ckanext.example_theme.v12_extra_public_dir",
            "ckanext.example_theme.v12_extra_public_dir.plugin",
            "ckanext.example_theme.v13_custom_css",
            "ckanext.example_theme.v13_custom_css.plugin",
            "ckanext.example_theme.v14_more_custom_css",
            "ckanext.example_theme.v14_more_custom_css.plugin",
            "ckanext.example_theme.v15_fanstatic",
            "ckanext.example_theme.v15_fanstatic.plugin",
            "ckanext.example_theme.v16_initialize_a_javascript_module",
            "ckanext.example_theme.v16_initialize_a_javascript_module.plugin",
            "ckanext.example_theme.v17_popover",
            "ckanext.example_theme.v17_popover.plugin",
            "ckanext.example_theme.v18_snippet_api",
            "ckanext.example_theme.v18_snippet_api.plugin",
            "ckanext.example_theme.v19_01_error",
            "ckanext.example_theme.v19_01_error.plugin",
            "ckanext.example_theme.v19_02_error_handling",
            "ckanext.example_theme.v19_02_error_handling.plugin",
            "ckanext.example_theme.v20_pubsub",
            "ckanext.example_theme.v20_pubsub.plugin",
            "ckanext.example_theme.v21_custom_jquery_plugin",
            "ckanext.example_theme.v21_custom_jquery_plugin.plugin",
            "ckanext.imageview",
            "ckanext.imageview.plugin",
            "ckanext.imageview.tests",
            "ckanext.imageview.tests.test_view",
            "ckanext.multilingual",
            "ckanext.multilingual.plugin",
            "ckanext.reclineview",
            "ckanext.reclineview.plugin",
            "ckanext.reclineview.tests",
            "ckanext.reclineview.tests.test_view",
            "ckanext.resourceproxy",
            "ckanext.resourceproxy.controller",
            "ckanext.resourceproxy.plugin",
            "ckanext.resourceproxy.tests",
            "ckanext.resourceproxy.tests.test_proxy",
            "ckanext.stats",
            "ckanext.stats.controller",
            "ckanext.stats.plugin",
            "ckanext.stats.public",
            "ckanext.stats.public.ckanext",
            "ckanext.stats.public.ckanext.stats",
            "ckanext.stats.stats",
            "ckanext.stats.tests",
            "ckanext.stats.tests.test_stats_lib",
            "ckanext.stats.tests.test_stats_plugin",
            "ckanext.test_tag_vocab_plugin",
            "ckanext.textview",
            "ckanext.textview.plugin",
            "ckanext.textview.tests",
            "ckanext.textview.tests.test_view",
            "ckanext.webpageview",
            "ckanext.webpageview.plugin",
            "ckanext.webpageview.tests",
            "ckanext.webpageview.tests.test_view"
        ],
        "version": "2.6.1"
    },
    "ckan-api-client": {
        "cmdline": [],
        "modules": [
            "ckan_api_client",
            "ckan_api_client.cli",
            "ckan_api_client.commands",
            "ckan_api_client.commands.base",
            "ckan_api_client.commands.client_hilev",
            "ckan_api_client.commands.syncing",
            "ckan_api_client.exceptions",
            "ckan_api_client.high_level",
            "ckan_api_client.low_level",
            "ckan_api_client.objects",
            "ckan_api_client.objects.base",
            "ckan_api_client.objects.ckan_dataset",
            "ckan_api_client.objects.ckan_group",
            "ckan_api_client.objects.ckan_organization",
            "ckan_api_client.objects.fields",
            "ckan_api_client.schema",
            "ckan_api_client.syncing",
            "ckan_api_client.tests",
            "ckan_api_client.tests.conftest",
            "ckan_api_client.tests.functional",
            "ckan_api_client.tests.functional.ckan_api",
            "ckan_api_client.tests.functional.ckan_api.test_00_api_readonly",
            "ckan_api_client.tests.functional.ckan_api.test_01_simple_crud",
            "ckan_api_client.tests.functional.ckan_api.utils",
            "ckan_api_client.tests.functional.client_hilev",
            "ckan_api_client.tests.functional.client_hilev.test_dataset_crud",
            "ckan_api_client.tests.functional.client_hilev.test_group_crud",
            "ckan_api_client.tests.functional.client_hilev.test_organization_crud",
            "ckan_api_client.tests.functional.client_lowlev",
            "ckan_api_client.tests.functional.client_lowlev.test_data_loss_on_update",
            "ckan_api_client.tests.functional.client_lowlev.test_dataset_crud",
            "ckan_api_client.tests.functional.client_lowlev.test_group_crud",
            "ckan_api_client.tests.functional.client_lowlev.utils",
            "ckan_api_client.tests.functional.client_lowlev.utils.harvest_source",
            "ckan_api_client.tests.functional.client_sync",
            "ckan_api_client.tests.functional.client_sync.test_merging_strategies",
            "ckan_api_client.tests.functional.client_sync.test_real_harvesting_scenario",
            "ckan_api_client.tests.functional.client_sync.test_simple_harvesting_scenario",
            "ckan_api_client.tests.functional.client_sync.test_utils_harvest_source",
            "ckan_api_client.tests.test_00_startup_and_fixtures",
            "ckan_api_client.tests.unit",
            "ckan_api_client.tests.unit.test_base_models",
            "ckan_api_client.tests.unit.test_ckan_object_dataset",
            "ckan_api_client.tests.unit.test_ckan_object_organization",
            "ckan_api_client.tests.unit.test_ckan_objects",
            "ckan_api_client.tests.unit.test_fields",
            "ckan_api_client.tests.unit.test_frozen_objects",
            "ckan_api_client.tests.unit.test_utils_diff",
            "ckan_api_client.tests.utils",
            "ckan_api_client.tests.utils.diff",
            "ckan_api_client.tests.utils.generate",
            "ckan_api_client.tests.utils.http",
            "ckan_api_client.tests.utils.strings",
            "ckan_api_client.tests.utils.validation",
            "ckan_api_client.utils"
        ],
        "version": "0.1-beta5"
    },
    "ckan-uploader": {
        "cmdline": [],
        "modules": [
            "ckan_uploader",
            "ckan_uploader.ckan_uploader",
            "ckan_uploader.helpers",
            "ckan_uploader.models",
            "ckan_uploader.this.funct"
        ],
        "version": "0.1.8"
    },
    "ckanapi": {
        "cmdline": [],
        "modules": [
            "ckanapi",
            "ckanapi.cli",
            "ckanapi.cli.action",
            "ckanapi.cli.delete",
            "ckanapi.cli.dump",
            "ckanapi.cli.load",
            "ckanapi.cli.main",
            "ckanapi.cli.paster",
            "ckanapi.cli.utils",
            "ckanapi.cli.workers",
            "ckanapi.common",
            "ckanapi.errors",
            "ckanapi.localckan",
            "ckanapi.remoteckan",
            "ckanapi.testappckan",
            "ckanapi.tests",
            "ckanapi.tests.mock.mock_ckan",
            "ckanapi.tests.test_call",
            "ckanapi.tests.test_cli_action",
            "ckanapi.tests.test_cli_dump",
            "ckanapi.tests.test_cli_load",
            "ckanapi.tests.test_cli_workers",
            "ckanapi.tests.test_remote",
            "ckanapi.tests.test_testapp",
            "ckanapi.version"
        ],
        "version": "4.0"
    },
    "ckanapi-exporter": {
        "cmdline": [],
        "modules": [
            "ckanapi_exporter",
            "ckanapi_exporter.exporter",
            "ckanapi_exporter.test_exporter"
        ],
        "version": "0.0.5"
    },
    "ckanclient": {
        "cmdline": [],
        "modules": [
            "ckanclient",
            "ckanclient.datastore",
            "ckanclient.loaders",
            "ckanclient.loaders.base",
            "ckanclient.tests",
            "ckanclient.tests.test_ckanclient",
            "ckanclient.tests.test_datastore"
        ],
        "version": "0.10"
    },
    "ckanext": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.amqp",
            "ckanext.api_command",
            "ckanext.command",
            "ckanext.geo",
            "ckanext.geo.geo_form",
            "ckanext.iso19139",
            "ckanext.iso19139.loader",
            "ckanext.iso19139.reader",
            "ckanext.link_checker",
            "ckanext.loader",
            "ckanext.plugins",
            "ckanext.plugins.form_api_tester",
            "ckanext.tests",
            "ckanext.tests.plugins",
            "ckanext.tests.plugins.test_form_api_tester",
            "ckanext.tests.test_loader"
        ],
        "version": "0.1"
    },
    "ckanext-aaf": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.aaf",
            "ckanext.aaf.controller",
            "ckanext.aaf.plugin",
            "ckanext.aaf.tests",
            "ckanext.aaf.tests.test_plugin"
        ],
        "version": "0.0.8"
    },
    "ckanext-ands": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.ands",
            "ckanext.ands.auth",
            "ckanext.ands.controller",
            "ckanext.ands.helpers",
            "ckanext.ands.model",
            "ckanext.ands.plugin",
            "ckanext.ands.tests",
            "ckanext.ands.tests.test_plugin"
        ],
        "version": "0.0.8"
    },
    "ckanext-budgets": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.budgets",
            "ckanext.budgets.controllers",
            "ckanext.budgets.exceptions",
            "ckanext.budgets.lib",
            "ckanext.budgets.lib.budgetdatapackage",
            "ckanext.budgets.plugin"
        ],
        "version": "0.3.2"
    },
    "ckanext-cloudstorage": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.cloudstorage",
            "ckanext.cloudstorage.cli",
            "ckanext.cloudstorage.controller",
            "ckanext.cloudstorage.helpers",
            "ckanext.cloudstorage.logic",
            "ckanext.cloudstorage.logic.action",
            "ckanext.cloudstorage.logic.action.multipart",
            "ckanext.cloudstorage.logic.auth",
            "ckanext.cloudstorage.logic.auth.multipart",
            "ckanext.cloudstorage.model",
            "ckanext.cloudstorage.plugin",
            "ckanext.cloudstorage.storage"
        ],
        "version": "0.1.1"
    },
    "ckanext-composite": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.composite",
            "ckanext.composite.helpers",
            "ckanext.composite.plugin",
            "ckanext.composite.tests",
            "ckanext.composite.tests.test_plugin",
            "ckanext.composite.validators"
        ],
        "version": "0.0.2"
    },
    "ckanext-data-recommendation": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.data_recommendation",
            "ckanext.data_recommendation.plugin",
            "ckanext.data_recommendation.tests",
            "ckanext.data_recommendation.tests.test_plugin"
        ],
        "version": "0.9"
    },
    "ckanext-dataapi": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.dataapi"
        ],
        "version": "0.1"
    },
    "ckanext-datapackager": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.datapackager",
            "ckanext.datapackager.controllers",
            "ckanext.datapackager.controllers.datapackage",
            "ckanext.datapackager.exceptions",
            "ckanext.datapackager.lib",
            "ckanext.datapackager.lib.converter",
            "ckanext.datapackager.lib.util",
            "ckanext.datapackager.logic",
            "ckanext.datapackager.logic.action",
            "ckanext.datapackager.logic.action.create",
            "ckanext.datapackager.logic.action.get",
            "ckanext.datapackager.plugin",
            "ckanext.datapackager.tests",
            "ckanext.datapackager.tests.controllers",
            "ckanext.datapackager.tests.controllers.test_datapackage",
            "ckanext.datapackager.tests.helpers",
            "ckanext.datapackager.tests.lib",
            "ckanext.datapackager.tests.lib.test_converter",
            "ckanext.datapackager.tests.lib.test_util",
            "ckanext.datapackager.tests.logic",
            "ckanext.datapackager.tests.logic.action",
            "ckanext.datapackager.tests.logic.action.test_create",
            "ckanext.datapackager.tests.logic.action.test_get"
        ],
        "version": "0.2.0"
    },
    "ckanext-datapreview": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.datapreview"
        ],
        "version": "0.1"
    },
    "ckanext-datarequests": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.datarequests",
            "ckanext.datarequests.actions",
            "ckanext.datarequests.auth",
            "ckanext.datarequests.constants",
            "ckanext.datarequests.controllers",
            "ckanext.datarequests.controllers.ui_controller",
            "ckanext.datarequests.db",
            "ckanext.datarequests.helpers",
            "ckanext.datarequests.plugin",
            "ckanext.datarequests.validator"
        ],
        "version": "0.3.2"
    },
    "ckanext-datasetthumbnail": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.datasetthumbnail",
            "ckanext.datasetthumbnail.plugin",
            "ckanext.datasetthumbnail.tests",
            "ckanext.datasetthumbnail.tests.helpers",
            "ckanext.datasetthumbnail.tests.test_plugin"
        ],
        "version": "1.0.1"
    },
    "ckanext-datasetversions": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.datasetversions",
            "ckanext.datasetversions.helpers",
            "ckanext.datasetversions.logic",
            "ckanext.datasetversions.logic.action",
            "ckanext.datasetversions.logic.action.create",
            "ckanext.datasetversions.logic.action.get",
            "ckanext.datasetversions.plugin",
            "ckanext.datasetversions.tests",
            "ckanext.datasetversions.tests.helpers",
            "ckanext.datasetversions.tests.logic",
            "ckanext.datasetversions.tests.logic.action",
            "ckanext.datasetversions.tests.logic.action.test_create",
            "ckanext.datasetversions.tests.logic.action.test_get",
            "ckanext.datasetversions.tests.test_helpers"
        ],
        "version": "1.0.1"
    },
    "ckanext-datastore-ts": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.datastore_ts",
            "ckanext.datastore_ts.commands",
            "ckanext.datastore_ts.controller",
            "ckanext.datastore_ts.controller.resource_controller",
            "ckanext.datastore_ts.db",
            "ckanext.datastore_ts.helpers",
            "ckanext.datastore_ts.interfaces",
            "ckanext.datastore_ts.logic",
            "ckanext.datastore_ts.logic.action",
            "ckanext.datastore_ts.logic.auth",
            "ckanext.datastore_ts.logic.schema",
            "ckanext.datastore_ts.plugin",
            "ckanext.datastore_ts.tests",
            "ckanext.datastore_ts.tests.helpers",
            "ckanext.datastore_ts.tests.resetdb",
            "ckanext.datastore_ts.tests.sample_datastore_plugin",
            "ckanext.datastore_ts.tests.skipped_test_dump",
            "ckanext.datastore_ts.tests.skipped_test_interface",
            "ckanext.datastore_ts.tests.test_commands",
            "ckanext.datastore_ts.tests.test_create",
            "ckanext.datastore_ts.tests.test_create_short",
            "ckanext.datastore_ts.tests.test_db",
            "ckanext.datastore_ts.tests.test_delete",
            "ckanext.datastore_ts.tests.test_dump",
            "ckanext.datastore_ts.tests.test_helpers",
            "ckanext.datastore_ts.tests.test_info",
            "ckanext.datastore_ts.tests.test_plugin",
            "ckanext.datastore_ts.tests.test_retention",
            "ckanext.datastore_ts.tests.test_search",
            "ckanext.datastore_ts.tests.test_search_short",
            "ckanext.datastore_ts.tests.test_search_timeseries",
            "ckanext.datastore_ts.tests.test_unit",
            "ckanext.datastore_ts.tests.test_upsert",
            "ckanext.datastore_ts.tests.test_upsert_short"
        ],
        "version": "0.1.1"
    },
    "ckanext-dcat": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.dcat",
            "ckanext.dcat.commands",
            "ckanext.dcat.controllers",
            "ckanext.dcat.converters",
            "ckanext.dcat.harvesters",
            "ckanext.dcat.harvesters._json",
            "ckanext.dcat.harvesters.base",
            "ckanext.dcat.harvesters.rdf",
            "ckanext.dcat.harvesters.xml",
            "ckanext.dcat.interfaces",
            "ckanext.dcat.logic",
            "ckanext.dcat.plugins",
            "ckanext.dcat.processors",
            "ckanext.dcat.profiles",
            "ckanext.dcat.tests",
            "ckanext.dcat.tests.test_base_parser",
            "ckanext.dcat.tests.test_base_profile",
            "ckanext.dcat.tests.test_controllers",
            "ckanext.dcat.tests.test_converters",
            "ckanext.dcat.tests.test_euro_dcatap_profile_parse",
            "ckanext.dcat.tests.test_euro_dcatap_profile_serialize",
            "ckanext.dcat.tests.test_harvester",
            "ckanext.dcat.tests.test_logic",
            "ckanext.dcat.tests.test_utils",
            "ckanext.dcat.utils"
        ],
        "version": "0.0.6"
    },
    "ckanext-ddug": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.ddug",
            "ckanext.ddug.plugin",
            "ckanext.ddug.tests",
            "ckanext.ddug.tests.test_plugin"
        ],
        "version": "0.0.1"
    },
    "ckanext-ddugtheme": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.ddugtheme",
            "ckanext.ddugtheme.plugin",
            "ckanext.ddugtheme.tests",
            "ckanext.ddugtheme.tests.test_plugin"
        ],
        "version": "0.0.1"
    },
    "ckanext-deadoralive": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.deadoralive",
            "ckanext.deadoralive.config",
            "ckanext.deadoralive.controllers",
            "ckanext.deadoralive.helpers",
            "ckanext.deadoralive.logic",
            "ckanext.deadoralive.logic.action",
            "ckanext.deadoralive.logic.action.get",
            "ckanext.deadoralive.logic.action.update",
            "ckanext.deadoralive.logic.auth",
            "ckanext.deadoralive.logic.auth.get",
            "ckanext.deadoralive.logic.auth.update",
            "ckanext.deadoralive.model",
            "ckanext.deadoralive.model.results",
            "ckanext.deadoralive.plugin",
            "ckanext.deadoralive.tests",
            "ckanext.deadoralive.tests.factories",
            "ckanext.deadoralive.tests.helpers",
            "ckanext.deadoralive.tests.logic",
            "ckanext.deadoralive.tests.logic.action",
            "ckanext.deadoralive.tests.logic.action.test_get",
            "ckanext.deadoralive.tests.logic.action.test_update",
            "ckanext.deadoralive.tests.logic.auth",
            "ckanext.deadoralive.tests.logic.auth.test_get",
            "ckanext.deadoralive.tests.logic.auth.test_update",
            "ckanext.deadoralive.tests.model",
            "ckanext.deadoralive.tests.model.test_results",
            "ckanext.deadoralive.tests.test_config",
            "ckanext.deadoralive.tests.test_controllers",
            "ckanext.deadoralive.tests.test_plugin"
        ],
        "version": "0.1.6"
    },
    "ckanext-dgu": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.dgu",
            "ckanext.dgu.bis",
            "ckanext.dgu.bis.bis",
            "ckanext.dgu.bis.tests",
            "ckanext.dgu.cospread",
            "ckanext.dgu.cospread.cospread",
            "ckanext.dgu.cospread.loader",
            "ckanext.dgu.curation",
            "ckanext.dgu.forms",
            "ckanext.dgu.forms.package_gov3",
            "ckanext.dgu.ons",
            "ckanext.dgu.ons.downloader",
            "ckanext.dgu.ons.importer",
            "ckanext.dgu.ons.loader",
            "ckanext.dgu.schema",
            "ckanext.dgu.scripts",
            "ckanext.dgu.scripts.change_licenses",
            "ckanext.dgu.scripts.change_licenses_cmd",
            "ckanext.dgu.scripts.common",
            "ckanext.dgu.scripts.mass_changer",
            "ckanext.dgu.scripts.mass_changer_cmd",
            "ckanext.dgu.scripts.ofsted_fix",
            "ckanext.dgu.scripts.ofsted_fix_cmd",
            "ckanext.dgu.scripts.ons_analysis",
            "ckanext.dgu.scripts.ons_analysis_cmd",
            "ckanext.dgu.scripts.transfer_url",
            "ckanext.dgu.scripts.transfer_url_cmd",
            "ckanext.dgu.tests",
            "ckanext.dgu.tests.bis",
            "ckanext.dgu.tests.bis.test_bis",
            "ckanext.dgu.tests.cospread",
            "ckanext.dgu.tests.cospread.test_cospread",
            "ckanext.dgu.tests.forms",
            "ckanext.dgu.tests.forms.test_package_gov3",
            "ckanext.dgu.tests.functional",
            "ckanext.dgu.tests.functional.test_package_gov3",
            "ckanext.dgu.tests.ons",
            "ckanext.dgu.tests.ons.ons_data_tester",
            "ckanext.dgu.tests.ons.test_ons_download",
            "ckanext.dgu.tests.ons.test_ons_importer",
            "ckanext.dgu.tests.ons.test_ons_loader",
            "ckanext.dgu.tests.scripts",
            "ckanext.dgu.tests.scripts.test_change_licenses",
            "ckanext.dgu.tests.scripts.test_mass_changer",
            "ckanext.dgu.tests.test_schema"
        ],
        "version": "0.4"
    },
    "ckanext-dictionary": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.dictionary",
            "ckanext.dictionary.controller",
            "ckanext.dictionary.plugin",
            "ckanext.dictionary.tests",
            "ckanext.dictionary.tests.test_plugin"
        ],
        "version": "0.0.2"
    },
    "ckanext-envvars": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.envvars",
            "ckanext.envvars.plugin",
            "ckanext.envvars.tests"
        ],
        "version": "0.0.1"
    },
    "ckanext-esdstandards": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext-esdstandards-data",
            "ckanext.esdstandards",
            "ckanext.esdstandards.commands",
            "ckanext.esdstandards.helpers",
            "ckanext.esdstandards.logic",
            "ckanext.esdstandards.model",
            "ckanext.esdstandards.plugin",
            "ckanext.esdstandards.tests",
            "ckanext.esdstandards.tests.mockplugin",
            "ckanext.esdstandards.tests.mockplugin.plugin",
            "ckanext.esdstandards.tests.plugin",
            "ckanext.esdstandards.tests.test_commands",
            "ckanext.esdstandards.tests.test_functional",
            "ckanext.esdstandards.tests.test_helpers",
            "ckanext.esdstandards.tests.test_logic",
            "ckanext.esdstandards.tests.test_validators",
            "ckanext.esdstandards.validators"
        ],
        "version": "0.0.6"
    },
    "ckanext-eurovoc": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.eurovoc",
            "ckanext.eurovoc.plugin",
            "ckanext.eurovoc.tests",
            "ckanext.eurovoc.tests.test_plugin"
        ],
        "version": "0.0.7"
    },
    "ckanext-fcd": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ckanext-fluent": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.fluent",
            "ckanext.fluent.helpers",
            "ckanext.fluent.plugins",
            "ckanext.fluent.validators"
        ],
        "version": "1.0.0"
    },
    "ckanext-geoview": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.geoview",
            "ckanext.geoview.controllers",
            "ckanext.geoview.controllers.service_proxy",
            "ckanext.geoview.plugin"
        ],
        "version": "0.0.12"
    },
    "ckanext-harvest-zh": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.harvest",
            "ckanext.harvest.commands",
            "ckanext.harvest.commands.harvester",
            "ckanext.harvest.controllers",
            "ckanext.harvest.controllers.dspadmin",
            "ckanext.harvest.controllers.organization",
            "ckanext.harvest.controllers.view",
            "ckanext.harvest.harvesters",
            "ckanext.harvest.harvesters.base",
            "ckanext.harvest.harvesters.ckanharvester",
            "ckanext.harvest.harvesters.dspckanharvester",
            "ckanext.harvest.harvesters.taipeiharvester",
            "ckanext.harvest.helpers",
            "ckanext.harvest.interfaces",
            "ckanext.harvest.logic",
            "ckanext.harvest.logic.action",
            "ckanext.harvest.logic.action.create",
            "ckanext.harvest.logic.action.delete",
            "ckanext.harvest.logic.action.get",
            "ckanext.harvest.logic.action.update",
            "ckanext.harvest.logic.auth",
            "ckanext.harvest.logic.auth.create",
            "ckanext.harvest.logic.auth.delete",
            "ckanext.harvest.logic.auth.get",
            "ckanext.harvest.logic.auth.update",
            "ckanext.harvest.logic.dictization",
            "ckanext.harvest.logic.schema",
            "ckanext.harvest.logic.validators",
            "ckanext.harvest.model",
            "ckanext.harvest.plugin",
            "ckanext.harvest.queue",
            "ckanext.harvest.tests",
            "ckanext.harvest.tests.factories",
            "ckanext.harvest.tests.test_action",
            "ckanext.harvest.tests.test_auth",
            "ckanext.harvest.tests.test_queue"
        ],
        "version": "0.3.2"
    },
    "ckanext-hdx-service-checker": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.hdx_service_checker",
            "ckanext.hdx_service_checker.actions",
            "ckanext.hdx_service_checker.actions.authorize",
            "ckanext.hdx_service_checker.actions.get",
            "ckanext.hdx_service_checker.checker",
            "ckanext.hdx_service_checker.checks",
            "ckanext.hdx_service_checker.checks.checks",
            "ckanext.hdx_service_checker.controllers",
            "ckanext.hdx_service_checker.controllers.checks_controller",
            "ckanext.hdx_service_checker.exceptions",
            "ckanext.hdx_service_checker.plugin",
            "ckanext.hdx_service_checker.tests",
            "ckanext.hdx_service_checker.tests.test_plugin"
        ],
        "version": "0.0.5"
    },
    "ckanext-htsql": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.htsql",
            "ckanext.htsql.logic",
            "ckanext.htsql.logic.action",
            "ckanext.htsql.plugin"
        ],
        "version": "0.1.1"
    },
    "ckanext-linked-graph": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.linked_graph",
            "ckanext.linked_graph.controllers",
            "ckanext.linked_graph.plugin",
            "ckanext.linked_graph.tests",
            "ckanext.linked_graph.tests.test_plugin"
        ],
        "version": "0.0.1"
    },
    "ckanext-mapviews": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.mapviews",
            "ckanext.mapviews.plugin"
        ],
        "version": "0.1"
    },
    "ckanext-nationdata": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.nationdata",
            "ckanext.nationdata.controller",
            "ckanext.nationdata.plugin"
        ],
        "version": "0.1"
    },
    "ckanext-needupdate": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.needupdate",
            "ckanext.needupdate.controller",
            "ckanext.needupdate.plugin",
            "ckanext.needupdate.tests",
            "ckanext.needupdate.tests.test_controller",
            "ckanext.needupdate.tests.test_plugin"
        ],
        "version": "0.0.1"
    },
    "ckanext-oauth2": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.oauth2",
            "ckanext.oauth2.constants",
            "ckanext.oauth2.controller",
            "ckanext.oauth2.db",
            "ckanext.oauth2.oauth2",
            "ckanext.oauth2.plugin",
            "ckanext.oauth2.tests",
            "ckanext.oauth2.tests.test_controller",
            "ckanext.oauth2.tests.test_db",
            "ckanext.oauth2.tests.test_oauth2",
            "ckanext.oauth2.tests.test_plugin",
            "ckanext.oauth2.tests.test_selenium"
        ],
        "version": "0.3.8"
    },
    "ckanext-oauth2provider": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ckanext-openspending": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.openspending",
            "ckanext.openspending.exceptions",
            "ckanext.openspending.plugin"
        ],
        "version": "0.1.0"
    },
    "ckanext-pdfview": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.pdfview",
            "ckanext.pdfview.plugin",
            "ckanext.pdfview.tests",
            "ckanext.pdfview.tests.test_view"
        ],
        "version": "0.0.5"
    },
    "ckanext-privatedatasets": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.privatedatasets",
            "ckanext.privatedatasets.actions",
            "ckanext.privatedatasets.auth",
            "ckanext.privatedatasets.constants",
            "ckanext.privatedatasets.controllers",
            "ckanext.privatedatasets.controllers.ui_controller",
            "ckanext.privatedatasets.converters_validators",
            "ckanext.privatedatasets.db",
            "ckanext.privatedatasets.helpers",
            "ckanext.privatedatasets.parsers",
            "ckanext.privatedatasets.parsers.fiware",
            "ckanext.privatedatasets.plugin",
            "ckanext.privatedatasets.tests",
            "ckanext.privatedatasets.tests.test_actions",
            "ckanext.privatedatasets.tests.test_auth",
            "ckanext.privatedatasets.tests.test_controller_ui",
            "ckanext.privatedatasets.tests.test_converters_validators",
            "ckanext.privatedatasets.tests.test_db",
            "ckanext.privatedatasets.tests.test_fiware_parser",
            "ckanext.privatedatasets.tests.test_helpers",
            "ckanext.privatedatasets.tests.test_plugin",
            "ckanext.privatedatasets.tests.test_selenium"
        ],
        "version": "0.2.18"
    },
    "ckanext-related-datasets": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.related_datasets",
            "ckanext.related_datasets.controllers",
            "ckanext.related_datasets.controllers.related_datasets_controller",
            "ckanext.related_datasets.plugin",
            "ckanext.related_datasets.tests",
            "ckanext.related_datasets.tests.test_plugin"
        ],
        "version": "0.0.1"
    },
    "ckanext-restricted": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.restricted",
            "ckanext.restricted.controller",
            "ckanext.restricted.helpers",
            "ckanext.restricted.logic",
            "ckanext.restricted.plugin",
            "ckanext.restricted.tests",
            "ckanext.restricted.tests.test_plugin"
        ],
        "version": "0.0.2"
    },
    "ckanext-s3filestore": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.s3filestore",
            "ckanext.s3filestore.commands",
            "ckanext.s3filestore.controller",
            "ckanext.s3filestore.plugin",
            "ckanext.s3filestore.tests",
            "ckanext.s3filestore.tests.test_controller",
            "ckanext.s3filestore.tests.test_uploader",
            "ckanext.s3filestore.uploader"
        ],
        "version": "0.0.3"
    },
    "ckanext-salford": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.salford",
            "ckanext.salford.plugin",
            "ckanext.salford.tests",
            "ckanext.salford.tests.test_plugin"
        ],
        "version": "0.0.2"
    },
    "ckanext-scheming": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.scheming",
            "ckanext.scheming.commands",
            "ckanext.scheming.converters",
            "ckanext.scheming.errors",
            "ckanext.scheming.helpers",
            "ckanext.scheming.loader",
            "ckanext.scheming.logic",
            "ckanext.scheming.plugins",
            "ckanext.scheming.tests",
            "ckanext.scheming.tests.plugins",
            "ckanext.scheming.tests.test_dataset_display",
            "ckanext.scheming.tests.test_dataset_logic",
            "ckanext.scheming.tests.test_form",
            "ckanext.scheming.tests.test_group_display",
            "ckanext.scheming.tests.test_group_logic",
            "ckanext.scheming.tests.test_helpers",
            "ckanext.scheming.tests.test_load",
            "ckanext.scheming.tests.test_validation",
            "ckanext.scheming.validation"
        ],
        "version": "1.0.0"
    },
    "ckanext-semantictags": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.semantictags",
            "ckanext.semantictags.commands",
            "ckanext.semantictags.controller",
            "ckanext.semantictags.db",
            "ckanext.semantictags.plugin",
            "ckanext.semantictags.tests",
            "ckanext.semantictags.tests.test_plugin"
        ],
        "version": "0.0.2"
    },
    "ckanext-sentry": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.sentry",
            "ckanext.sentry.plugins"
        ],
        "version": "0.0.2"
    },
    "ckanext-showcase": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.showcase",
            "ckanext.showcase.commands",
            "ckanext.showcase.commands.migrate",
            "ckanext.showcase.controller",
            "ckanext.showcase.logic",
            "ckanext.showcase.logic.action",
            "ckanext.showcase.logic.action.create",
            "ckanext.showcase.logic.action.delete",
            "ckanext.showcase.logic.action.get",
            "ckanext.showcase.logic.action.update",
            "ckanext.showcase.logic.auth",
            "ckanext.showcase.logic.converters",
            "ckanext.showcase.logic.helpers",
            "ckanext.showcase.logic.schema",
            "ckanext.showcase.logic.validators",
            "ckanext.showcase.model",
            "ckanext.showcase.plugin",
            "ckanext.showcase.tests",
            "ckanext.showcase.tests.action",
            "ckanext.showcase.tests.action.test_create",
            "ckanext.showcase.tests.action.test_delete",
            "ckanext.showcase.tests.action.test_get",
            "ckanext.showcase.tests.test_auth",
            "ckanext.showcase.tests.test_converters",
            "ckanext.showcase.tests.test_helpers",
            "ckanext.showcase.tests.test_plugin"
        ],
        "version": "1.0.2"
    },
    "ckanext-storage": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.storage",
            "ckanext.storage.controller"
        ],
        "version": "0.6"
    },
    "ckanext-syndicate": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.syndicate",
            "ckanext.syndicate.celery_import",
            "ckanext.syndicate.plugin",
            "ckanext.syndicate.tasks",
            "ckanext.syndicate.tests",
            "ckanext.syndicate.tests.helpers",
            "ckanext.syndicate.tests.test_plugin",
            "ckanext.syndicate.tests.test_tasks"
        ],
        "version": "1.0.1"
    },
    "ckanext-tagmanager": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.tagmanager",
            "ckanext.tagmanager.commands",
            "ckanext.tagmanager.controller",
            "ckanext.tagmanager.db",
            "ckanext.tagmanager.plugin",
            "ckanext.tagmanager.tests",
            "ckanext.tagmanager.tests.test_plugin"
        ],
        "version": "0.0.2"
    },
    "ckanext-terria-view": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.terria_view",
            "ckanext.terria_view.plugin",
            "ckanext.terria_view.tests",
            "ckanext.terria_view.tests.test_plugin"
        ],
        "version": "0.0.4"
    },
    "ckanext-themeurbanopus": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.themeUrbanOpus",
            "ckanext.themeUrbanOpus.plugin"
        ],
        "version": "0.1"
    },
    "ckanext-timeseries": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.timeseries",
            "ckanext.timeseries.commands",
            "ckanext.timeseries.controller",
            "ckanext.timeseries.controller.datastore_ts",
            "ckanext.timeseries.controller.resource_controller",
            "ckanext.timeseries.db",
            "ckanext.timeseries.helpers",
            "ckanext.timeseries.interfaces",
            "ckanext.timeseries.logic",
            "ckanext.timeseries.logic.action",
            "ckanext.timeseries.logic.auth",
            "ckanext.timeseries.logic.schema",
            "ckanext.timeseries.plugin",
            "ckanext.timeseries.tests",
            "ckanext.timeseries.tests.helpers",
            "ckanext.timeseries.tests.resetdb",
            "ckanext.timeseries.tests.sample_timeseries_plugin",
            "ckanext.timeseries.tests.skipped_test_dump",
            "ckanext.timeseries.tests.skipped_test_interface",
            "ckanext.timeseries.tests.test_commands",
            "ckanext.timeseries.tests.test_create",
            "ckanext.timeseries.tests.test_create_short",
            "ckanext.timeseries.tests.test_db",
            "ckanext.timeseries.tests.test_delete",
            "ckanext.timeseries.tests.test_dump",
            "ckanext.timeseries.tests.test_helpers",
            "ckanext.timeseries.tests.test_info",
            "ckanext.timeseries.tests.test_plugin",
            "ckanext.timeseries.tests.test_retention",
            "ckanext.timeseries.tests.test_search",
            "ckanext.timeseries.tests.test_search_short",
            "ckanext.timeseries.tests.test_search_timeseries",
            "ckanext.timeseries.tests.test_unit",
            "ckanext.timeseries.tests.test_upsert",
            "ckanext.timeseries.tests.test_upsert_short"
        ],
        "version": "1.1.3"
    },
    "ckanext-userautoadd": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.userautoadd",
            "ckanext.userautoadd.logic",
            "ckanext.userautoadd.logic.action",
            "ckanext.userautoadd.logic.action.create",
            "ckanext.userautoadd.plugin",
            "ckanext.userautoadd.tests",
            "ckanext.userautoadd.tests.logic",
            "ckanext.userautoadd.tests.logic.action",
            "ckanext.userautoadd.tests.logic.action.test_create"
        ],
        "version": "1.0.1"
    },
    "ckanext-wirecloud-view": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.wirecloudview",
            "ckanext.wirecloudview.plugin",
            "ckanext.wirecloudview.tests",
            "ckanext.wirecloudview.tests.test_plugin"
        ],
        "version": "1.0.0b2"
    },
    "ckanext-wordpresser": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.wordpresser",
            "ckanext.wordpresser.middleware"
        ],
        "version": "0.11"
    },
    "ckanext-zh-search": {
        "cmdline": [],
        "modules": [
            "ckanext",
            "ckanext.zh_search",
            "ckanext.zh_search.aaa",
            "ckanext.zh_search.plugin",
            "ckanext.zh_search.tests",
            "ckanext.zh_search.tests.test_plugin"
        ],
        "version": "0.9.2"
    },
    "ckanny": {
        "cmdline": [],
        "modules": [
            "ckanny",
            "ckanny.datastorer",
            "ckanny.filestorer",
            "ckanny.hdx",
            "ckanny.package"
        ],
        "version": "0.17.2"
    },
    "ckanrdf": {
        "cmdline": [],
        "modules": [
            "ckanrdf",
            "ckanrdf.ckanlinks",
            "ckanrdf.command",
            "ckanrdf.corscheck",
            "ckanrdf.namespace",
            "ckanrdf.package"
        ],
        "version": "0.7.1"
    },
    "ckanserviceprovider": {
        "cmdline": [],
        "modules": [
            "ckanserviceprovider",
            "ckanserviceprovider.db",
            "ckanserviceprovider.default_settings",
            "ckanserviceprovider.job",
            "ckanserviceprovider.util",
            "ckanserviceprovider.web",
            "example",
            "example.jobs",
            "example.main"
        ],
        "version": "0.0.5"
    },
    "ckantoolkit": {
        "cmdline": [],
        "modules": [
            "ckantoolkit",
            "ckantoolkit.shims",
            "ckantoolkit.tests"
        ],
        "version": "0.0.3"
    },
    "ckanutils": {
        "cmdline": [],
        "modules": [],
        "version": "0.14.9"
    },
    "ckbpy": {
        "cmdline": [],
        "modules": [
            "ckbpy",
            "ckbpy.constants",
            "ckbpy.effect",
            "ckbpy.params",
            "ckbpy.types"
        ],
        "version": "0.0.1"
    },
    "ckenchanter": {
        "cmdline": [],
        "modules": [
            "ckenchanter"
        ],
        "version": "1.1.0"
    },
    "ckip": {
        "cmdline": [],
        "modules": [
            "ckip"
        ],
        "version": "0.1.2"
    },
    "ckip-client": {
        "cmdline": [],
        "modules": [
            "ckipclient",
            "ckipclient.ckip_client",
            "ckipclient.example"
        ],
        "version": "0.1.4"
    },
    "ckuehl-celery": {
        "cmdline": [],
        "modules": [
            "celery",
            "celery._state",
            "celery.app",
            "celery.app.amqp",
            "celery.app.annotations",
            "celery.app.backends",
            "celery.app.base",
            "celery.app.builtins",
            "celery.app.control",
            "celery.app.defaults",
            "celery.app.events",
            "celery.app.log",
            "celery.app.registry",
            "celery.app.routes",
            "celery.app.task",
            "celery.app.trace",
            "celery.app.utils",
            "celery.apps",
            "celery.apps.beat",
            "celery.apps.multi",
            "celery.apps.worker",
            "celery.backends",
            "celery.backends.amqp",
            "celery.backends.async",
            "celery.backends.base",
            "celery.backends.cache",
            "celery.backends.cassandra",
            "celery.backends.consul",
            "celery.backends.couchbase",
            "celery.backends.couchdb",
            "celery.backends.database",
            "celery.backends.database.models",
            "celery.backends.database.session",
            "celery.backends.dynamodb",
            "celery.backends.elasticsearch",
            "celery.backends.filesystem",
            "celery.backends.mongodb",
            "celery.backends.redis",
            "celery.backends.riak",
            "celery.backends.rpc",
            "celery.beat",
            "celery.bin",
            "celery.bin.amqp",
            "celery.bin.base",
            "celery.bin.beat",
            "celery.bin.call",
            "celery.bin.celery",
            "celery.bin.celeryd_detach",
            "celery.bin.control",
            "celery.bin.events",
            "celery.bin.graph",
            "celery.bin.list",
            "celery.bin.logtool",
            "celery.bin.migrate",
            "celery.bin.multi",
            "celery.bin.purge",
            "celery.bin.result",
            "celery.bin.shell",
            "celery.bin.upgrade",
            "celery.bin.worker",
            "celery.bootsteps",
            "celery.canvas",
            "celery.concurrency",
            "celery.concurrency.asynpool",
            "celery.concurrency.base",
            "celery.concurrency.eventlet",
            "celery.concurrency.gevent",
            "celery.concurrency.prefork",
            "celery.concurrency.solo",
            "celery.contrib",
            "celery.contrib.abortable",
            "celery.contrib.migrate",
            "celery.contrib.pytest",
            "celery.contrib.rdb",
            "celery.contrib.sphinx",
            "celery.contrib.testing",
            "celery.contrib.testing.app",
            "celery.contrib.testing.manager",
            "celery.contrib.testing.mocks",
            "celery.contrib.testing.tasks",
            "celery.contrib.testing.worker",
            "celery.events",
            "celery.events.cursesmon",
            "celery.events.dispatcher",
            "celery.events.dumper",
            "celery.events.event",
            "celery.events.receiver",
            "celery.events.snapshot",
            "celery.events.state",
            "celery.exceptions",
            "celery.five",
            "celery.fixups",
            "celery.fixups.django",
            "celery.loaders",
            "celery.loaders.app",
            "celery.loaders.base",
            "celery.loaders.default",
            "celery.local",
            "celery.platforms",
            "celery.result",
            "celery.schedules",
            "celery.security",
            "celery.security.certificate",
            "celery.security.key",
            "celery.security.serialization",
            "celery.security.utils",
            "celery.signals",
            "celery.states",
            "celery.task",
            "celery.task.base",
            "celery.utils",
            "celery.utils.abstract",
            "celery.utils.collections",
            "celery.utils.debug",
            "celery.utils.deprecated",
            "celery.utils.dispatch",
            "celery.utils.dispatch.signal",
            "celery.utils.dispatch.weakref_backports",
            "celery.utils.encoding",
            "celery.utils.functional",
            "celery.utils.graph",
            "celery.utils.imports",
            "celery.utils.iso8601",
            "celery.utils.log",
            "celery.utils.nodenames",
            "celery.utils.objects",
            "celery.utils.saferepr",
            "celery.utils.serialization",
            "celery.utils.static",
            "celery.utils.sysinfo",
            "celery.utils.term",
            "celery.utils.text",
            "celery.utils.threads",
            "celery.utils.time",
            "celery.utils.timer2",
            "celery.worker",
            "celery.worker.autoscale",
            "celery.worker.components",
            "celery.worker.consumer",
            "celery.worker.consumer.agent",
            "celery.worker.consumer.connection",
            "celery.worker.consumer.consumer",
            "celery.worker.consumer.control",
            "celery.worker.consumer.events",
            "celery.worker.consumer.gossip",
            "celery.worker.consumer.heart",
            "celery.worker.consumer.mingle",
            "celery.worker.consumer.tasks",
            "celery.worker.control",
            "celery.worker.heartbeat",
            "celery.worker.loops",
            "celery.worker.pidbox",
            "celery.worker.request",
            "celery.worker.state",
            "celery.worker.strategy",
            "celery.worker.worker",
            "celery_http_gateway",
            "celery_http_gateway.manage",
            "celery_http_gateway.settings",
            "celery_http_gateway.tasks",
            "celery_http_gateway.urls",
            "demoapp",
            "demoapp.models",
            "demoapp.tasks",
            "demoapp.views",
            "proj",
            "proj.celery",
            "proj.settings",
            "proj.urls",
            "proj.wsgi",
            "t",
            "t.integration",
            "t.integration.conftest",
            "t.integration.tasks",
            "t.integration.test_canvas",
            "t.integration.test_tasks",
            "t.unit",
            "t.unit.app",
            "t.unit.app.test_amqp",
            "t.unit.app.test_annotations",
            "t.unit.app.test_app",
            "t.unit.app.test_backends",
            "t.unit.app.test_beat",
            "t.unit.app.test_builtins",
            "t.unit.app.test_celery",
            "t.unit.app.test_control",
            "t.unit.app.test_defaults",
            "t.unit.app.test_exceptions",
            "t.unit.app.test_loaders",
            "t.unit.app.test_log",
            "t.unit.app.test_registry",
            "t.unit.app.test_routes",
            "t.unit.app.test_schedules",
            "t.unit.app.test_utils",
            "t.unit.apps",
            "t.unit.apps.test_multi",
            "t.unit.backends",
            "t.unit.backends.test_amqp",
            "t.unit.backends.test_base",
            "t.unit.backends.test_cache",
            "t.unit.backends.test_cassandra",
            "t.unit.backends.test_consul",
            "t.unit.backends.test_couchbase",
            "t.unit.backends.test_couchdb",
            "t.unit.backends.test_database",
            "t.unit.backends.test_dynamodb",
            "t.unit.backends.test_elasticsearch",
            "t.unit.backends.test_filesystem",
            "t.unit.backends.test_mongodb",
            "t.unit.backends.test_redis",
            "t.unit.backends.test_riak",
            "t.unit.backends.test_rpc",
            "t.unit.bin",
            "t.unit.bin.celery",
            "t.unit.bin.proj",
            "t.unit.bin.proj.app",
            "t.unit.bin.test_amqp",
            "t.unit.bin.test_base",
            "t.unit.bin.test_beat",
            "t.unit.bin.test_call",
            "t.unit.bin.test_celery",
            "t.unit.bin.test_celeryd_detach",
            "t.unit.bin.test_celeryevdump",
            "t.unit.bin.test_control",
            "t.unit.bin.test_events",
            "t.unit.bin.test_list",
            "t.unit.bin.test_migrate",
            "t.unit.bin.test_multi",
            "t.unit.bin.test_purge",
            "t.unit.bin.test_result",
            "t.unit.bin.test_worker",
            "t.unit.compat_modules",
            "t.unit.compat_modules.test_compat",
            "t.unit.compat_modules.test_compat_utils",
            "t.unit.compat_modules.test_decorators",
            "t.unit.compat_modules.test_messaging",
            "t.unit.concurrency",
            "t.unit.concurrency.test_concurrency",
            "t.unit.concurrency.test_eventlet",
            "t.unit.concurrency.test_gevent",
            "t.unit.concurrency.test_pool",
            "t.unit.concurrency.test_prefork",
            "t.unit.concurrency.test_solo",
            "t.unit.conftest",
            "t.unit.contrib",
            "t.unit.contrib.test_abortable",
            "t.unit.contrib.test_migrate",
            "t.unit.contrib.test_rdb",
            "t.unit.events",
            "t.unit.events.test_cursesmon",
            "t.unit.events.test_events",
            "t.unit.events.test_snapshot",
            "t.unit.events.test_state",
            "t.unit.fixups",
            "t.unit.fixups.test_django",
            "t.unit.security",
            "t.unit.security.case",
            "t.unit.security.test_certificate",
            "t.unit.security.test_key",
            "t.unit.security.test_security",
            "t.unit.security.test_serialization",
            "t.unit.tasks",
            "t.unit.tasks.test_canvas",
            "t.unit.tasks.test_chord",
            "t.unit.tasks.test_context",
            "t.unit.tasks.test_result",
            "t.unit.tasks.test_states",
            "t.unit.tasks.test_tasks",
            "t.unit.tasks.test_trace",
            "t.unit.utils",
            "t.unit.utils.test_collections",
            "t.unit.utils.test_debug",
            "t.unit.utils.test_deprecated",
            "t.unit.utils.test_dispatcher",
            "t.unit.utils.test_encoding",
            "t.unit.utils.test_functional",
            "t.unit.utils.test_graph",
            "t.unit.utils.test_imports",
            "t.unit.utils.test_local",
            "t.unit.utils.test_nodenames",
            "t.unit.utils.test_objects",
            "t.unit.utils.test_pickle",
            "t.unit.utils.test_platforms",
            "t.unit.utils.test_saferepr",
            "t.unit.utils.test_serialization",
            "t.unit.utils.test_sysinfo",
            "t.unit.utils.test_term",
            "t.unit.utils.test_text",
            "t.unit.utils.test_threads",
            "t.unit.utils.test_time",
            "t.unit.utils.test_timer2",
            "t.unit.utils.test_utils",
            "t.unit.worker",
            "t.unit.worker.test_autoscale",
            "t.unit.worker.test_bootsteps",
            "t.unit.worker.test_components",
            "t.unit.worker.test_consumer",
            "t.unit.worker.test_control",
            "t.unit.worker.test_heartbeat",
            "t.unit.worker.test_loops",
            "t.unit.worker.test_request",
            "t.unit.worker.test_revoke",
            "t.unit.worker.test_state",
            "t.unit.worker.test_strategy",
            "t.unit.worker.test_worker"
        ],
        "version": "4.0.2.post1"
    },
    "ckuehl-pre-commit-types": {
        "cmdline": [],
        "modules": [
            "pre_commit",
            "pre_commit.clientlib",
            "pre_commit.clientlib.validate_base",
            "pre_commit.clientlib.validate_config",
            "pre_commit.clientlib.validate_manifest",
            "pre_commit.color",
            "pre_commit.commands",
            "pre_commit.commands.autoupdate",
            "pre_commit.commands.clean",
            "pre_commit.commands.identify",
            "pre_commit.commands.install_uninstall",
            "pre_commit.commands.run",
            "pre_commit.constants",
            "pre_commit.error_handler",
            "pre_commit.errors",
            "pre_commit.file_classifier",
            "pre_commit.file_classifier.classifier",
            "pre_commit.file_classifier.extensions",
            "pre_commit.file_classifier.interpreters",
            "pre_commit.five",
            "pre_commit.git",
            "pre_commit.jsonschema_extensions",
            "pre_commit.languages",
            "pre_commit.languages.all",
            "pre_commit.languages.helpers",
            "pre_commit.languages.node",
            "pre_commit.languages.pcre",
            "pre_commit.languages.python",
            "pre_commit.languages.ruby",
            "pre_commit.languages.script",
            "pre_commit.languages.system",
            "pre_commit.logging_handler",
            "pre_commit.main",
            "pre_commit.make_archives",
            "pre_commit.manifest",
            "pre_commit.ordereddict",
            "pre_commit.output",
            "pre_commit.prefixed_command_runner",
            "pre_commit.repository",
            "pre_commit.runner",
            "pre_commit.staged_files_only",
            "pre_commit.store",
            "pre_commit.util"
        ],
        "version": "0.7.6.dev1"
    },
    "ckuehl-upsidedown": {
        "cmdline": [],
        "modules": [],
        "version": "0.4"
    },
    "ckx-tools": {
        "cmdline": [],
        "modules": [
            "ckx_tools",
            "ckx_tools.argument_parsing",
            "ckx_tools.commands",
            "ckx_tools.commands.catkin",
            "ckx_tools.common",
            "ckx_tools.config",
            "ckx_tools.context",
            "ckx_tools.execution",
            "ckx_tools.execution.controllers",
            "ckx_tools.execution.events",
            "ckx_tools.execution.executor",
            "ckx_tools.execution.io",
            "ckx_tools.execution.job_server",
            "ckx_tools.execution.jobs",
            "ckx_tools.execution.stages",
            "ckx_tools.jobs",
            "ckx_tools.jobs.catkin",
            "ckx_tools.jobs.cmake",
            "ckx_tools.jobs.commands",
            "ckx_tools.jobs.commands.cmake",
            "ckx_tools.jobs.commands.make",
            "ckx_tools.jobs.output",
            "ckx_tools.jobs.utils",
            "ckx_tools.metadata",
            "ckx_tools.notifications",
            "ckx_tools.notifications.impl",
            "ckx_tools.resultspace",
            "ckx_tools.terminal_color",
            "ckx_tools.utils",
            "ckx_tools.verbs",
            "ckx_tools.verbs.ckx_build",
            "ckx_tools.verbs.ckx_build.build",
            "ckx_tools.verbs.ckx_build.cli",
            "ckx_tools.verbs.ckx_build.color",
            "ckx_tools.verbs.ckx_clean",
            "ckx_tools.verbs.ckx_clean.clean",
            "ckx_tools.verbs.ckx_clean.cli",
            "ckx_tools.verbs.ckx_clean.color",
            "ckx_tools.verbs.ckx_config",
            "ckx_tools.verbs.ckx_config.cli",
            "ckx_tools.verbs.ckx_config.color_console",
            "ckx_tools.verbs.ckx_config.utilities",
            "ckx_tools.verbs.ckx_create",
            "ckx_tools.verbs.ckx_create.cli",
            "ckx_tools.verbs.ckx_env",
            "ckx_tools.verbs.ckx_env.cli",
            "ckx_tools.verbs.ckx_list",
            "ckx_tools.verbs.ckx_list.cli",
            "ckx_tools.verbs.ckx_locate",
            "ckx_tools.verbs.ckx_locate.cli",
            "ckx_tools.verbs.ckx_profile",
            "ckx_tools.verbs.ckx_profile.cli",
            "ckx_tools.verbs.ckx_rosdep",
            "ckx_tools.verbs.ckx_rosdep.cli",
            "ckx_tools.verbs.ckx_rosdoc",
            "ckx_tools.verbs.ckx_rosdoc.cli",
            "ckx_tools.verbs.ckx_rosdoc.templates",
            "ckx_tools.verbs.ckx_ws",
            "ckx_tools.verbs.ckx_ws.cli"
        ],
        "version": "0.5.15"
    },
    "cl": {
        "cmdline": [],
        "modules": [
            "cl",
            "cl.actors",
            "cl.agents",
            "cl.bin",
            "cl.bin.base",
            "cl.bin.cl",
            "cl.exceptions",
            "cl.g",
            "cl.g.eventlet",
            "cl.models",
            "cl.presence",
            "cl.results",
            "cl.utils"
        ],
        "version": "0.0.3"
    },
    "cl-chess": {
        "cmdline": [],
        "modules": [
            "AI",
            "Bishop",
            "Board",
            "Coordinate",
            "InputParser",
            "King",
            "Knight",
            "Move",
            "MoveNode",
            "Pawn",
            "Piece",
            "Queen",
            "Rook",
            "__init__",
            "main",
            "termcolor"
        ],
        "version": "1.1"
    },
    "cl-nes": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cl-utils": {
        "cmdline": [],
        "modules": [
            "cl_utils",
            "cl_utils.ajaxfields",
            "cl_utils.backends",
            "cl_utils.country",
            "cl_utils.data",
            "cl_utils.decorators",
            "cl_utils.decorators.permissions",
            "cl_utils.django_patches",
            "cl_utils.django_patches.patch_mailer",
            "cl_utils.django_patches.patch_svglib",
            "cl_utils.encoding",
            "cl_utils.enum",
            "cl_utils.fields",
            "cl_utils.fields.choice_with_other",
            "cl_utils.fields.datetime_fields",
            "cl_utils.fields.json_fields",
            "cl_utils.fields.readonly",
            "cl_utils.forms",
            "cl_utils.inline_edit",
            "cl_utils.inline_edit.templatetags",
            "cl_utils.inline_edit.templatetags.inline_edit",
            "cl_utils.inline_edit.urls",
            "cl_utils.inline_edit.views",
            "cl_utils.middleware",
            "cl_utils.models",
            "cl_utils.prefetching",
            "cl_utils.templatetags",
            "cl_utils.templatetags.cycle_tag",
            "cl_utils.templatetags.dontbreak",
            "cl_utils.templatetags.highlighting_utils",
            "cl_utils.templatetags.ifdebug",
            "cl_utils.templatetags.include_tag",
            "cl_utils.templatetags.language",
            "cl_utils.templatetags.truncate_chars",
            "cl_utils.templatetags.user_input",
            "cl_utils.templatetags.util",
            "cl_utils.tests",
            "cl_utils.thumbs",
            "cl_utils.translation_utils",
            "cl_utils.utils",
            "cl_utils.valuta",
            "cl_utils.views",
            "cl_utils.widgets"
        ],
        "version": "1.0.8"
    },
    "cl3ver": {
        "cmdline": [],
        "modules": [
            "cl3ver",
            "cl3ver.cl3ver"
        ],
        "version": "0.2"
    },
    "cla-tool": {
        "cmdline": [
            "cla"
        ],
        "modules": [
            "cla",
            "cla.dict",
            "cla.dict.hownet",
            "cla.dict.test",
            "cla.dict.test.test_hownet",
            "cla.learn",
            "cla.learn.classifier",
            "cla.learn.test",
            "cla.learn.test.test_classifier",
            "cla.learn.test.test_word2vec",
            "cla.learn.word2vec",
            "cla.util",
            "cla.util.chat_util",
            "cla.util.file_util",
            "cla.util.test",
            "cla.util.test.test_chat_util",
            "cla.util.test.test_file_util"
        ],
        "version": "1.0.4"
    },
    "clachievements": {
        "cmdline": [],
        "modules": [
            "clachievements",
            "clachievements.achievements",
            "clachievements.achievements.count",
            "clachievements.achievements.fs",
            "clachievements.achievements.ls",
            "clachievements.achievements.meta",
            "clachievements.achievements.options",
            "clachievements.alias",
            "clachievements.db",
            "clachievements.notify",
            "clachievements.report",
            "clachievements.reset",
            "clachievements.run",
            "clachievements.testutils"
        ],
        "version": "0.1.0"
    },
    "clack": {
        "cmdline": [],
        "modules": [
            "clack",
            "clack.cli",
            "clack.configuration",
            "clack.utils"
        ],
        "version": "1.2.0"
    },
    "clack-cli": {
        "cmdline": [],
        "modules": [
            "clack",
            "clack.cli",
            "clack.cmd_call",
            "clack.cmd_settings",
            "clack.environment",
            "clack.lib_portal_api",
            "clack.version"
        ],
        "version": "2.0.0b9"
    },
    "clacks": {
        "cmdline": [],
        "modules": [
            "clacks",
            "clacks.components",
            "clacks.core",
            "clacks.core.BasePage",
            "clacks.core.CPage",
            "clacks.core.Cache",
            "clacks.core.Configuration",
            "clacks.core.LDAPSession",
            "clacks.core.env",
            "clacks.core.templates",
            "clacks.core.url",
            "clacks.db",
            "clacks.gettext",
            "clacks.i18n",
            "clacks.i18n.mo2json",
            "clacks.models",
            "clacks.tests",
            "clacks.tests.admin",
            "clacks.tests.admin.test_AuthService",
            "clacks.tests.admin.test_adminTemplate",
            "clacks.tests.cms",
            "clacks.tests.cms.test_Grants",
            "clacks.tests.cms.test_PageNode",
            "clacks.tests.cms.test_PageNode_styles",
            "clacks.tests.cms.test_SiteNode",
            "clacks.tests.cms.test_SiteNode_placements",
            "clacks.tests.cms.test_User",
            "clacks.tests.cms.test_UserAddress",
            "clacks.tests.cms.test_cms-tools",
            "clacks.tests.cms.test_controls_integrity",
            "clacks.tests.cms.test_page_factories",
            "clacks.tests.core",
            "clacks.tests.core.test_Configure",
            "clacks.tests.core.test_core",
            "clacks.tests.cptools",
            "clacks.tests.cptools.test_gtfile",
            "clacks.tests.integrity",
            "clacks.tests.integrity.test_compare_structure",
            "clacks.tests.integrity.test_controls",
            "clacks.tests.integrity.test_grants",
            "clacks.tests.integrity.test_old_config",
            "clacks.tests.integrity.test_old_mappers",
            "clacks.tests.locales",
            "clacks.tests.locales.test_translation_coverage",
            "clacks.tools"
        ],
        "version": "0.1.1.dev845"
    },
    "cladecompare": {
        "cmdline": [
            "cladecompare.py",
            "cladereport.py",
            "cladeweb.py"
        ],
        "modules": [
            "cladecomparelib",
            "cladecomparelib.ancestrallrt",
            "cladecomparelib.core",
            "cladecomparelib.entropy",
            "cladecomparelib.gtest",
            "cladecomparelib.jsd",
            "cladecomparelib.pairlogo",
            "cladecomparelib.phospho",
            "cladecomparelib.pmlscript",
            "cladecomparelib.report",
            "cladecomparelib.shared",
            "cladecomparelib.sp",
            "cladecomparelib.urn"
        ],
        "version": "0.2"
    },
    "clair": {
        "cmdline": [],
        "modules": [
            "clair",
            "clair.clair"
        ],
        "version": "0.3"
    },
    "clairvoyance": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clairvoyant": {
        "cmdline": [],
        "modules": [
            "clairvoyant",
            "clairvoyant.Backtest",
            "clairvoyant.Portfolio"
        ],
        "version": "v0.7"
    },
    "clait": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "clalgorithms": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clam": {
        "cmdline": [],
        "modules": [
            "clam",
            "clam.clamclient",
            "clam.clamdispatcher",
            "clam.clamnewproject",
            "clam.clamrunjob",
            "clam.clamservice",
            "clam.common",
            "clam.common.auth",
            "clam.common.client",
            "clam.common.converters",
            "clam.common.data",
            "clam.common.digestauth",
            "clam.common.formats",
            "clam.common.languages",
            "clam.common.oauth",
            "clam.common.parameters",
            "clam.common.status",
            "clam.common.util",
            "clam.common.viewers",
            "clam.config",
            "clam.config.actiontest",
            "clam.config.authtest",
            "clam.config.defaults",
            "clam.config.freqlist",
            "clam.config.multiplier",
            "clam.config.oauthtest",
            "clam.config.template",
            "clam.config.test",
            "clam.config.test2",
            "clam.config.textstats",
            "clam.config.textstats1",
            "clam.config.textstats2",
            "clam.config.textstats3",
            "clam.wrappers",
            "clam.wrappers.freqlistwrapper",
            "clam.wrappers.template",
            "clam.wrappers.testwrapper",
            "clam.wrappers.textstats"
        ],
        "version": "2.1.12"
    },
    "clamav": {
        "cmdline": [],
        "modules": [
            "clamav"
        ],
        "version": "0.2"
    },
    "clamav-unofficial-updates": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clamavmirror": {
        "cmdline": [
            "clamavmirror"
        ],
        "modules": [],
        "version": "0.0.3"
    },
    "clamd": {
        "cmdline": [],
        "modules": [
            "clamd"
        ],
        "version": "1.0.2"
    },
    "clamda": {
        "cmdline": [],
        "modules": [
            "clamda"
        ],
        "version": "0.0.13"
    },
    "clamp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clams": {
        "cmdline": [],
        "modules": [
            "clams"
        ],
        "version": "0.0.5"
    },
    "clan": {
        "cmdline": [],
        "modules": [
            "clan",
            "clan.auth",
            "clan.diff",
            "clan.report",
            "clan.utils"
        ],
        "version": "0.2.3"
    },
    "clancy": {
        "cmdline": [],
        "modules": [
            "clancy",
            "clancy.clancy",
            "clancy.config",
            "clancy.engage",
            "clancy.redoctober",
            "clancy.utils"
        ],
        "version": "0.0.2"
    },
    "clandestined": {
        "cmdline": [],
        "modules": [
            "clandestined",
            "clandestined.clandestined",
            "clandestined.murmur3"
        ],
        "version": "1.0.1"
    },
    "clang": {
        "cmdline": [],
        "modules": [
            "clang",
            "clang.cindex",
            "clang.enumerations"
        ],
        "version": "4.0.post1"
    },
    "clang-fake-gcc": {
        "cmdline": [
            "clang-fake-gcc"
        ],
        "modules": [],
        "version": "0.2.1"
    },
    "clang-helpers": {
        "cmdline": [],
        "modules": [
            "clang_helpers",
            "clang_helpers.clang",
            "clang_helpers.clang.cindex",
            "clang_helpers.clang.enumerations",
            "clang_helpers.data_frame"
        ],
        "version": "0.3"
    },
    "clangastprintbear": {
        "cmdline": [],
        "modules": [
            "coalaClangASTPrintBear",
            "coalaClangASTPrintBear.ClangASTPrintBear"
        ],
        "version": "0.10.0"
    },
    "clangbear": {
        "cmdline": [],
        "modules": [
            "coalaClangBear",
            "coalaClangBear.ClangBear"
        ],
        "version": "0.10.0"
    },
    "clangclonedetectionbear": {
        "cmdline": [],
        "modules": [
            "coalaClangCloneDetectionBear",
            "coalaClangCloneDetectionBear.ClangCloneDetectionBear"
        ],
        "version": "0.10.0"
    },
    "clangcomplexitybear": {
        "cmdline": [],
        "modules": [
            "coalaClangComplexityBear",
            "coalaClangComplexityBear.ClangComplexityBear"
        ],
        "version": "0.10.0"
    },
    "clangfunctiondifferencebear": {
        "cmdline": [],
        "modules": [
            "coalaClangFunctionDifferenceBear",
            "coalaClangFunctionDifferenceBear.ClangFunctionDifferenceBear"
        ],
        "version": "0.10.0"
    },
    "clank": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "clans": {
        "cmdline": [],
        "modules": [
            "clans",
            "clans.ext",
            "clans.ext.backup",
            "clans.ext.example",
            "clans.ext.newlove",
            "clans.fmt",
            "clans.scraper",
            "clans.ui",
            "clans.util"
        ],
        "version": "0.3.0"
    },
    "clap": {
        "cmdline": [],
        "modules": [
            "clap",
            "clap.ansi",
            "clap.base",
            "clap.command",
            "clap.help",
            "clap.parser"
        ],
        "version": "0.7"
    },
    "clap-api": {
        "cmdline": [],
        "modules": [
            "clap",
            "clap.builder",
            "clap.checker",
            "clap.errors",
            "clap.formatter",
            "clap.helper",
            "clap.mode",
            "clap.option",
            "clap.parser",
            "clap.shared"
        ],
        "version": "0.11.0"
    },
    "clapi": {
        "cmdline": [],
        "modules": [
            "clapi"
        ],
        "version": "0.1.5"
    },
    "clapp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clapperboard": {
        "cmdline": [],
        "modules": [
            "clapperboard",
            "clapperboard.crop",
            "clapperboard.sync"
        ],
        "version": "0.2"
    },
    "claptcha": {
        "cmdline": [],
        "modules": [
            "claptcha",
            "claptcha.claptcha"
        ],
        "version": "0.3.3"
    },
    "clarens": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clarent": {
        "cmdline": [],
        "modules": [
            "clarent",
            "clarent._version",
            "clarent.certificate",
            "clarent.exercise",
            "clarent.path",
            "clarent.test",
            "clarent.test.test_certificate",
            "clarent.test.test_exercise",
            "clarent.test.test_path"
        ],
        "version": "0.1.1"
    },
    "clarifai": {
        "cmdline": [
            "clarifai"
        ],
        "modules": [
            "clarifai",
            "clarifai.client",
            "clarifai.client.client",
            "clarifai.client.mime_util",
            "clarifai.client.sample_main",
            "clarifai.rest",
            "clarifai.rest.client",
            "clarifai.rest.geo"
        ],
        "version": "2.0.21"
    },
    "clarify": {
        "cmdline": [],
        "modules": [
            "clarify",
            "clarify.jurisdiction",
            "clarify.parser",
            "clarify.version"
        ],
        "version": "0.3"
    },
    "clarify-brightcove-sync": {
        "cmdline": [
            "clarify_brightcove_sync"
        ],
        "modules": [
            "clarify_brightcove_sync",
            "clarify_brightcove_sync.brightcove_api_client",
            "clarify_brightcove_sync.clarify_brightcove_bridge"
        ],
        "version": "0.0.1"
    },
    "clarify-python": {
        "cmdline": [],
        "modules": [
            "clarify_python",
            "clarify_python.clarify",
            "clarify_python.clarify_export",
            "clarify_python.constants",
            "clarify_python.helper"
        ],
        "version": "3.1.0"
    },
    "clarify-python-2": {
        "cmdline": [],
        "modules": [
            "clarify_python_2",
            "clarify_python_2.clarify",
            "clarify_python_2.test_op3nvoice"
        ],
        "version": "1.0.1"
    },
    "claripy": {
        "cmdline": [],
        "modules": [
            "claripy",
            "claripy.annotation",
            "claripy.ast",
            "claripy.ast.base",
            "claripy.ast.bits",
            "claripy.ast.bool",
            "claripy.ast.bv",
            "claripy.ast.fp",
            "claripy.ast.int",
            "claripy.ast.vs",
            "claripy.backend_manager",
            "claripy.backend_object",
            "claripy.backends",
            "claripy.backends.backend_concrete",
            "claripy.backends.backend_vsa",
            "claripy.backends.backend_z3",
            "claripy.backends.backend_z3_parallel",
            "claripy.backends.backendremote",
            "claripy.backends.celeryconfig",
            "claripy.backends.remotetasks",
            "claripy.balancer",
            "claripy.bv",
            "claripy.errors",
            "claripy.fp",
            "claripy.frontend",
            "claripy.frontend_mixins",
            "claripy.frontend_mixins.composited_cache_mixin",
            "claripy.frontend_mixins.concrete_handler_mixin",
            "claripy.frontend_mixins.constraint_deduplicator_mixin",
            "claripy.frontend_mixins.constraint_expansion_mixin",
            "claripy.frontend_mixins.constraint_filter_mixin",
            "claripy.frontend_mixins.constraint_fixer_mixin",
            "claripy.frontend_mixins.debug_mixin",
            "claripy.frontend_mixins.eager_resolution_mixin",
            "claripy.frontend_mixins.model_cache_mixin",
            "claripy.frontend_mixins.sat_cache_mixin",
            "claripy.frontend_mixins.simplify_helper_mixin",
            "claripy.frontend_mixins.simplify_skipper_mixin",
            "claripy.frontend_mixins.solve_block_mixin",
            "claripy.frontends",
            "claripy.frontends.composite_frontend",
            "claripy.frontends.constrained_frontend",
            "claripy.frontends.full_frontend",
            "claripy.frontends.hybrid_frontend",
            "claripy.frontends.light_frontend",
            "claripy.frontends.replacement_frontend",
            "claripy.operations",
            "claripy.ops",
            "claripy.solvers",
            "claripy.utils",
            "claripy.utils.orderedset",
            "claripy.vsa",
            "claripy.vsa.abstract_location",
            "claripy.vsa.bool_result",
            "claripy.vsa.discrete_strided_interval_set",
            "claripy.vsa.errors",
            "claripy.vsa.strided_interval",
            "claripy.vsa.valueset"
        ],
        "version": "6.7.4.12"
    },
    "clarityviz": {
        "cmdline": [],
        "modules": [
            "clarityviz",
            "clarityviz.analysis",
            "clarityviz.connectivity",
            "clarityviz.tractography",
            "prototype",
            "prototype.analysis",
            "prototype.clarityviz",
            "prototype.connectivity"
        ],
        "version": "0.1.7"
    },
    "clark": {
        "cmdline": [],
        "modules": [
            "clark",
            "clark.super_argparser",
            "clark.super_enum",
            "clark.super_json",
            "clark.super_pidfile",
            "clark.super_thread"
        ],
        "version": "0.1.0"
    },
    "clarray": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clarus": {
        "cmdline": [],
        "modules": [
            "clarus",
            "clarus.api",
            "clarus.api_config",
            "clarus.models",
            "clarus.output_types",
            "clarus.resource_util",
            "clarus.services",
            "clarus.services.compliance",
            "clarus.services.frtb",
            "clarus.services.hedge",
            "clarus.services.load",
            "clarus.services.margin",
            "clarus.services.market",
            "clarus.services.portfolio",
            "clarus.services.profitloss",
            "clarus.services.risk",
            "clarus.services.sdr",
            "clarus.services.simm",
            "clarus.services.trade",
            "clarus.services.upload",
            "clarus.services.util",
            "clarus.services.xva"
        ],
        "version": "0.1.11"
    },
    "clash": {
        "cmdline": [],
        "modules": [
            "clash",
            "clash.config",
            "clash.functions",
            "clash.loader",
            "clash.module",
            "clash.output",
            "clash.state"
        ],
        "version": "0.17"
    },
    "clashchimeras": {
        "cmdline": [
            "align-for-chimeras",
            "download-for-chimeras",
            "find-chimeras"
        ],
        "modules": [
            "clashchimeras",
            "clashchimeras.align",
            "clashchimeras.download",
            "clashchimeras.find",
            "clashchimeras.initialize",
            "clashchimeras.log",
            "clashchimeras.methods",
            "clashchimeras.parsers",
            "clashchimeras.runners"
        ],
        "version": "0.2"
    },
    "class": {
        "cmdline": [],
        "modules": [
            "classPrac"
        ],
        "version": "1.0.0"
    },
    "class-a": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0.0"
    },
    "class-extension": {
        "cmdline": [],
        "modules": [
            "class_extension"
        ],
        "version": "1.0.1"
    },
    "class-namespaces": {
        "cmdline": [],
        "modules": [
            "class_namespaces",
            "class_namespaces.compat",
            "class_namespaces.compat.abc",
            "class_namespaces.descriptor_inspector",
            "class_namespaces.flags",
            "class_namespaces.inspector",
            "class_namespaces.namespaces",
            "class_namespaces.ops",
            "class_namespaces.proxy",
            "class_namespaces.scope_proxy"
        ],
        "version": "0.6.3"
    },
    "class-test": {
        "cmdline": [],
        "modules": [
            "athlete"
        ],
        "version": "1.0.1"
    },
    "classbasedmodule": {
        "cmdline": [],
        "modules": [
            "classbasedmodule"
        ],
        "version": "0.1.1"
    },
    "classdirectory": {
        "cmdline": [],
        "modules": [
            "classdirectory",
            "classdirectory.classdirectory"
        ],
        "version": "0.1.2"
    },
    "classfig": {
        "cmdline": [
            "classFig.py"
        ],
        "modules": [],
        "version": "0.0.4"
    },
    "classgraph": {
        "cmdline": [
            "classgraph.py"
        ],
        "modules": [],
        "version": "0.1"
    },
    "classh": {
        "cmdline": [
            "classh"
        ],
        "modules": [
            "classh"
        ],
        "version": "0.093"
    },
    "classic": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "classical": {
        "cmdline": [],
        "modules": [
            "classical",
            "classical.descriptors",
            "classical.subclass"
        ],
        "version": "2.0.0"
    },
    "classical-ciphers": {
        "cmdline": [],
        "modules": [
            "classical_ciphers"
        ],
        "version": "0.1.1"
    },
    "classicmenu-indicator": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "classicups": {
        "cmdline": [],
        "modules": [
            "ClassicUPS",
            "ClassicUPS.ups"
        ],
        "version": "0.1.8"
    },
    "classification-models": {
        "cmdline": [],
        "modules": [
            "classification_models",
            "classification_models.classification_models"
        ],
        "version": "0.1"
    },
    "classified": {
        "cmdline": [
            "classified"
        ],
        "modules": [
            "classified",
            "classified.checksum",
            "classified.config",
            "classified.incremental",
            "classified.meta",
            "classified.platform",
            "classified.probe",
            "classified.probe.all",
            "classified.probe.base",
            "classified.probe.pan",
            "classified.probe.password",
            "classified.probe.pcap",
            "classified.probe.ssl",
            "classified.report",
            "classified.report.all",
            "classified.report.base",
            "classified.report.file",
            "classified.report.html",
            "classified.report.mail",
            "classified.report.syslogger",
            "classified.scanner",
            "classified.utils"
        ],
        "version": "1.0.2"
    },
    "classifier": {
        "cmdline": [],
        "modules": [
            "classifier",
            "classifier.classifier"
        ],
        "version": "1.7"
    },
    "classifiers": {
        "cmdline": [],
        "modules": [
            "classifiers"
        ],
        "version": "0.0.26"
    },
    "classify": {
        "cmdline": [],
        "modules": [
            "classify",
            "classify.contrib",
            "classify.contrib.django",
            "classify.contrib.django.settings",
            "classify.formatters",
            "classify.library",
            "classify.main"
        ],
        "version": "0.5.0"
    },
    "classify-chimeras": {
        "cmdline": [],
        "modules": [
            "classify_chimeras",
            "classify_chimeras.stencil_1d",
            "classify_chimeras.stencil_2d"
        ],
        "version": "1.2"
    },
    "classipy": {
        "cmdline": [],
        "modules": [
            "classy",
            "classy.classifiers",
            "classy.data",
            "classy.etbase",
            "classy.evaluate",
            "classy.extract",
            "classy.generate",
            "classy.helpers",
            "classy.learn",
            "classy.predict",
            "classy.select",
            "classy.test_extract",
            "classy.test_transform",
            "classy.transform"
        ],
        "version": "1.1.1"
    },
    "classix": {
        "cmdline": [],
        "modules": [
            "classix",
            "classix.components",
            "classix.directive",
            "classix.meta",
            "classix.tests"
        ],
        "version": "0.5"
    },
    "classless": {
        "cmdline": [],
        "modules": [
            "classless"
        ],
        "version": "0.0.2"
    },
    "classowl-client": {
        "cmdline": [],
        "modules": [
            "classowl_client",
            "classowl_client.client",
            "classowl_client.serializer",
            "classowl_client.shortcuts"
        ],
        "version": "0.1a2"
    },
    "classproperty": {
        "cmdline": [],
        "modules": [
            "classproperty"
        ],
        "version": "1.0"
    },
    "classtools": {
        "cmdline": [],
        "modules": [
            "classtools"
        ],
        "version": "0.1"
    },
    "classtools-autocode": {
        "cmdline": [],
        "modules": [
            "classtools_autocode",
            "classtools_autocode.autoargs",
            "classtools_autocode.autoprops",
            "classtools_autocode.class_utils",
            "classtools_autocode.var_checker"
        ],
        "version": "1.0.0"
    },
    "classtoolz": {
        "cmdline": [],
        "modules": [
            "classtoolz",
            "classtoolz.cached",
            "classtoolz.core",
            "classtoolz.example",
            "classtoolz.immutable",
            "classtoolz.slotted",
            "classtoolz.typed"
        ],
        "version": "0.1.1"
    },
    "classtricks": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1421586552"
    },
    "classutils": {
        "cmdline": [],
        "modules": [
            "classutils",
            "classutils.observer",
            "classutils.singleton",
            "classutils.unittests",
            "classutils.unittests.test_observer",
            "classutils.unittests.test_singleton"
        ],
        "version": "1.1.2"
    },
    "classwerk": {
        "cmdline": [],
        "modules": [
            "classwerk",
            "classwerk.cli",
            "classwerk.cmds",
            "classwerk.cmds.create_issue",
            "classwerk.cmds.delete_repos",
            "classwerk.cmds.download_submissions",
            "classwerk.cmds.init_repos",
            "classwerk.cmds.push_files",
            "classwerk.cmds.tag_submissions",
            "classwerk.utils"
        ],
        "version": "0.0.3"
    },
    "classy": {
        "cmdline": [],
        "modules": [
            "Classy",
            "Classy.api"
        ],
        "version": "0.0.9.2"
    },
    "classy-xlsx": {
        "cmdline": [],
        "modules": [
            "classy_xlsx",
            "classy_xlsx.columns",
            "classy_xlsx.core",
            "classy_xlsx.regions",
            "classy_xlsx.workbook",
            "classy_xlsx.worksheet"
        ],
        "version": "0.2.3"
    },
    "classyclient": {
        "cmdline": [],
        "modules": [
            "classyclient",
            "classyclient.ClassyClient",
            "classyclient.ClassyClientResponse",
            "classyclient.Exceptions"
        ],
        "version": "1.0.1"
    },
    "classylss": {
        "cmdline": [],
        "modules": [
            "classylss",
            "classylss.correlation",
            "classylss.gcl",
            "classylss.power",
            "classylss.tools",
            "classylss.version"
        ],
        "version": "0.1.17"
    },
    "classymq": {
        "cmdline": [],
        "modules": [
            "classymq",
            "classymq.api",
            "classymq.api.base",
            "classymq.api.common",
            "classymq.api.consumer",
            "classymq.api.exceptions",
            "classymq.api.producer",
            "classymq.common",
            "classymq.consumers",
            "classymq.event",
            "classymq.event.common",
            "classymq.event.consumer",
            "classymq.event.events",
            "classymq.event.producer",
            "classymq.event.registry",
            "classymq.exchanges",
            "classymq.factory",
            "classymq.lib",
            "classymq.lib.slug",
            "classymq.lib.uuid",
            "classymq.message",
            "classymq.models",
            "classymq.producers",
            "classymq.protocol",
            "classymq.queues",
            "classymq.registry",
            "classymq.service",
            "classymq.synchronous",
            "classymq.tests",
            "classymq.tests.base",
            "classymq.tests.test_api",
            "classymq.utils",
            "examples",
            "examples.log",
            "examples.log.common",
            "examples.log.consumer",
            "examples.log.handlers",
            "examples.log.producer",
            "examples.log.service",
            "examples.log.settings"
        ],
        "version": "0.7.0"
    },
    "classypie": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "classyplugins": {
        "cmdline": [],
        "modules": [
            "classyplugins"
        ],
        "version": "0.0.5"
    },
    "clast": {
        "cmdline": [],
        "modules": [
            "clast"
        ],
        "version": "0.0.1rc0"
    },
    "clastic": {
        "cmdline": [],
        "modules": [
            "clastic",
            "clastic._contextual_errors",
            "clastic.application",
            "clastic.cline",
            "clastic.contrib",
            "clastic.core",
            "clastic.decorators",
            "clastic.errors",
            "clastic.flaw",
            "clastic.meta",
            "clastic.middleware",
            "clastic.middleware.client_cache",
            "clastic.middleware.compress",
            "clastic.middleware.context",
            "clastic.middleware.cookie",
            "clastic.middleware.core",
            "clastic.middleware.form",
            "clastic.middleware.profile",
            "clastic.middleware.stats",
            "clastic.middleware.url",
            "clastic.obj_browser",
            "clastic.render",
            "clastic.render._ashes",
            "clastic.render.ashes_templates",
            "clastic.render.dust_templates",
            "clastic.render.mako_templates",
            "clastic.render.simple",
            "clastic.render.tableutils",
            "clastic.render.tabular",
            "clastic.route",
            "clastic.server",
            "clastic.sinter",
            "clastic.static",
            "clastic.tbutils",
            "clastic.tests",
            "clastic.tests.common",
            "clastic.tests.test_ashes_render",
            "clastic.tests.test_basic",
            "clastic.tests.test_context_proc",
            "clastic.tests.test_cookie",
            "clastic.tests.test_decorators",
            "clastic.tests.test_http_routing",
            "clastic.tests.test_mako_render",
            "clastic.tests.test_middleware",
            "clastic.tests.test_render",
            "clastic.tests.test_render_error",
            "clastic.tests.test_routing",
            "clastic.tests.test_serve",
            "clastic.tests.test_static",
            "clastic.utils"
        ],
        "version": "0.4.3"
    },
    "clatter": {
        "cmdline": [],
        "modules": [
            "clatter",
            "clatter.core",
            "clatter.validators"
        ],
        "version": "0.1.1"
    },
    "claude-tools": {
        "cmdline": [],
        "modules": [
            "receiver",
            "tools",
            "tools.auxiliary",
            "tools.exceptions",
            "tools.messaging",
            "tools.persistence",
            "tools.s3tools"
        ],
        "version": "0.1.14a1"
    },
    "claun": {
        "cmdline": [
            "runclaun.py"
        ],
        "modules": [
            "claun",
            "claun.core",
            "claun.core.communication",
            "claun.core.communication.client",
            "claun.core.communication.client.credentials_decorators",
            "claun.core.communication.io",
            "claun.core.communication.io.input",
            "claun.core.communication.io.output",
            "claun.core.communication.server",
            "claun.core.communication.server.authenticators",
            "claun.core.communication.server.authenticators.file_authenticator",
            "claun.core.communication.server.authenticators.void_authenticator",
            "claun.core.configurator",
            "claun.core.container",
            "claun.core.log",
            "claun.core.moduleloader",
            "claun.modules",
            "claun.modules.applications",
            "claun.modules.applications.admin",
            "claun.modules.applications.admin.help",
            "claun.modules.applications.admin.model",
            "claun.modules.applications.model",
            "claun.modules.apprunner",
            "claun.modules.apprunner.frameworks",
            "claun.modules.apprunner.frameworks.abstract_framework",
            "claun.modules.apprunner.frameworks.cavelib",
            "claun.modules.cluster",
            "claun.modules.cluster.apprunnerclient",
            "claun.modules.cluster.controllerclient",
            "claun.modules.controller",
            "claun.modules.controller.controllers",
            "claun.modules.controller.controllers.abstract_controller",
            "claun.modules.controller.controllers.trackd",
            "claun.modules.couchdb",
            "claun.modules.couchdb.wrapper",
            "claun.modules.distribappcontrol",
            "claun.modules.distribappcontrol.admin",
            "claun.modules.distribappcontrol.admin.help",
            "claun.modules.distribappcontrol.admin.model",
            "claun.modules.distribappcontrol.controllerconfiguration",
            "claun.modules.distribappcontrol.controllers",
            "claun.modules.distribappcontrol.frameworkconfiguration",
            "claun.modules.distribappcontrol.frameworks",
            "claun.modules.distribappcontrol.model",
            "claun.modules.environment",
            "claun.modules.environment.admin",
            "claun.modules.environment.admin.help",
            "claun.modules.environment.admin.model",
            "claun.modules.environment.model",
            "claun.modules.filestorage",
            "claun.modules.gui",
            "claun.modules.hwcontrol",
            "claun.modules.monitoring",
            "claun.modules.monitoring.abstract_monitor",
            "claun.modules.monitoring.monitors",
            "claun.modules.rstprocessor",
            "claun.modules.screensaverpoc",
            "claun.modules.users",
            "claun.modules.users.admin",
            "claun.modules.users.admin.help",
            "claun.modules.users.admin.model",
            "claun.modules.users.auth",
            "claun.modules.users.auth.model",
            "claun.modules.users.auth.verification",
            "claun.vendor",
            "claun.vendor.web",
            "claun.vendor.web.application",
            "claun.vendor.web.browser",
            "claun.vendor.web.contrib",
            "claun.vendor.web.contrib.template",
            "claun.vendor.web.db",
            "claun.vendor.web.debugerror",
            "claun.vendor.web.form",
            "claun.vendor.web.http",
            "claun.vendor.web.httpserver",
            "claun.vendor.web.net",
            "claun.vendor.web.python23",
            "claun.vendor.web.session",
            "claun.vendor.web.template",
            "claun.vendor.web.test",
            "claun.vendor.web.utils",
            "claun.vendor.web.webapi",
            "claun.vendor.web.webopenid",
            "claun.vendor.web.wsgi",
            "claun.vendor.web.wsgiserver",
            "claun.vendor.web.wsgiserver.ssl_builtin",
            "claun.vendor.web.wsgiserver.ssl_pyopenssl"
        ],
        "version": "2.0.0.8"
    },
    "clavicle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "claviger": {
        "cmdline": [],
        "modules": [
            "claviger",
            "claviger.authorized_keys",
            "claviger.config",
            "claviger.main",
            "claviger.scp",
            "claviger.tests",
            "claviger.tests.test_authorized_keys",
            "claviger.worker"
        ],
        "version": "0.2.1"
    },
    "claw": {
        "cmdline": [],
        "modules": [
            "claw",
            "claw.constants",
            "claw.html_quotations",
            "claw.quotations",
            "claw.signature",
            "claw.signature.bruteforce",
            "claw.signature.constants",
            "claw.utils"
        ],
        "version": "1.3.0"
    },
    "clawpack": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clay": {
        "cmdline": [],
        "modules": [
            "clay",
            "clay.helpers",
            "clay.jinja_includewith",
            "clay.main",
            "clay.manage",
            "clay.markdown_ext",
            "clay.markdown_ext.jinja",
            "clay.markdown_ext.md_admonition",
            "clay.markdown_ext.md_captions",
            "clay.markdown_ext.md_delinsmark",
            "clay.markdown_ext.md_fencedcode",
            "clay.markdown_ext.md_superscript",
            "clay.markdown_ext.render",
            "clay.server",
            "clay.static",
            "clay.tglobals",
            "clay.wsgiapp",
            "tests",
            "tests.conftest",
            "tests.helpers",
            "tests.test_build",
            "tests.test_exceptions",
            "tests.test_main",
            "tests.test_manage",
            "tests.test_render_includewith",
            "tests.test_render_markdown",
            "tests.test_server",
            "tests.test_tg_active",
            "tests.test_tg_toc"
        ],
        "version": "2.12.7"
    },
    "clay-flask": {
        "cmdline": [],
        "modules": [
            "clay",
            "clay.celery",
            "clay.config",
            "clay.database",
            "clay.docs",
            "clay.http",
            "clay.logger",
            "clay.mail",
            "clay.sentry",
            "clay.server",
            "clay.stats",
            "clay.wsgi"
        ],
        "version": "2.1.5"
    },
    "claypigeon": {
        "cmdline": [],
        "modules": [
            "Claypigeon",
            "Claypigeon.filesystem",
            "Claypigeon.remote",
            "Claypigeon.tests"
        ],
        "version": "0.1.3"
    },
    "claytron.featuring": {
        "cmdline": [],
        "modules": [
            "claytron",
            "claytron.featuring",
            "claytron.featuring.script"
        ],
        "version": "1.0.1"
    },
    "clc": {
        "cmdline": [
            "clc"
        ],
        "modules": [
            "clc",
            "clc.core",
            "clc.helpers"
        ],
        "version": "0.0.1"
    },
    "clc-ansible-module": {
        "cmdline": [
            "clc_inv.py"
        ],
        "modules": [
            "clc_ansible_module",
            "clc_ansible_module.clc_aa_policy",
            "clc_ansible_module.clc_alert_policy",
            "clc_ansible_module.clc_blueprint_package",
            "clc_ansible_module.clc_firewall_policy",
            "clc_ansible_module.clc_group",
            "clc_ansible_module.clc_group_fact",
            "clc_ansible_module.clc_loadbalancer",
            "clc_ansible_module.clc_loadbalancer_fact",
            "clc_ansible_module.clc_meta",
            "clc_ansible_module.clc_meta_fact",
            "clc_ansible_module.clc_modify_server",
            "clc_ansible_module.clc_network",
            "clc_ansible_module.clc_network_fact",
            "clc_ansible_module.clc_publicip",
            "clc_ansible_module.clc_server",
            "clc_ansible_module.clc_server_fact",
            "clc_ansible_module.clc_server_snapshot"
        ],
        "version": "1.1.21"
    },
    "clc-export-tool": {
        "cmdline": [],
        "modules": [
            "clc_export_tool"
        ],
        "version": "0.0.14"
    },
    "clc-sdk": {
        "cmdline": [],
        "modules": [
            "clc",
            "clc.APIv1",
            "clc.APIv1.account",
            "clc.APIv1.api",
            "clc.APIv1.billing",
            "clc.APIv1.blueprint",
            "clc.APIv1.cli",
            "clc.APIv1.exceptions",
            "clc.APIv1.group",
            "clc.APIv1.network",
            "clc.APIv1.output",
            "clc.APIv1.queue",
            "clc.APIv1.server",
            "clc.APIv1.shell",
            "clc.APIv1.terminal_size",
            "clc.APIv1.user",
            "clc.APIv2",
            "clc.APIv2.account",
            "clc.APIv2.alert",
            "clc.APIv2.anti_affinity",
            "clc.APIv2.api",
            "clc.APIv2.datacenter",
            "clc.APIv2.disk",
            "clc.APIv2.group",
            "clc.APIv2.horizontal_autoscale",
            "clc.APIv2.network",
            "clc.APIv2.public_ip",
            "clc.APIv2.queue",
            "clc.APIv2.server",
            "clc.APIv2.template",
            "clc.APIv2.time_utils",
            "clc.defaults"
        ],
        "version": "2.46"
    },
    "clchoropleth": {
        "cmdline": [],
        "modules": [
            "clchoropleth",
            "clchoropleth.add_comuna_code_to_svg",
            "clchoropleth.choropleth"
        ],
        "version": "1.2"
    },
    "clcomuna": {
        "cmdline": [],
        "modules": [
            "clcomuna",
            "clcomuna.convert"
        ],
        "version": "1.0"
    },
    "cld2-cffi": {
        "cmdline": [],
        "modules": [
            "cld2",
            "cld2full"
        ],
        "version": "0.1.4"
    },
    "cldict": {
        "cmdline": [],
        "modules": [
            "cldict",
            "cldict.cmdln",
            "cldict.dictcn",
            "tests",
            "tests.test_dictcn"
        ],
        "version": "0.1.2"
    },
    "cldoc": {
        "cmdline": [],
        "modules": [
            "cldoc",
            "cldoc.clang",
            "cldoc.clang.cindex",
            "cldoc.clang.enumerations",
            "cldoc.cmdgenerate",
            "cldoc.cmdgir",
            "cldoc.cmdinspect",
            "cldoc.cmdserve",
            "cldoc.comment",
            "cldoc.defdict",
            "cldoc.documentmerger",
            "cldoc.example",
            "cldoc.fs",
            "cldoc.generators",
            "cldoc.generators.generator",
            "cldoc.generators.html",
            "cldoc.generators.report",
            "cldoc.generators.search",
            "cldoc.generators.xml",
            "cldoc.includepaths",
            "cldoc.inspecttree",
            "cldoc.log",
            "cldoc.nodes",
            "cldoc.nodes.category",
            "cldoc.nodes.cclass",
            "cldoc.nodes.classtemplate",
            "cldoc.nodes.constructor",
            "cldoc.nodes.conversionfunction",
            "cldoc.nodes.cstruct",
            "cldoc.nodes.ctype",
            "cldoc.nodes.destructor",
            "cldoc.nodes.enum",
            "cldoc.nodes.enumvalue",
            "cldoc.nodes.field",
            "cldoc.nodes.function",
            "cldoc.nodes.functiontemplate",
            "cldoc.nodes.method",
            "cldoc.nodes.namespace",
            "cldoc.nodes.node",
            "cldoc.nodes.root",
            "cldoc.nodes.templated",
            "cldoc.nodes.templatetypeparameter",
            "cldoc.nodes.typedef",
            "cldoc.nodes.union",
            "cldoc.nodes.variable",
            "cldoc.staticsite",
            "cldoc.struct",
            "cldoc.tree",
            "cldoc.utf8"
        ],
        "version": "1.9"
    },
    "cldrive": {
        "cmdline": [
            "cldrive"
        ],
        "modules": [
            "cldrive",
            "cldrive.args",
            "cldrive.data",
            "cldrive.driver",
            "cldrive.env"
        ],
        "version": "0.0.12"
    },
    "clds-pipeline": {
        "cmdline": [],
        "modules": [
            "clds_pipeline",
            "clds_pipeline.clds_pipeline",
            "clds_pipeline.cli",
            "clds_pipeline.coordinator",
            "clds_pipeline.extractors",
            "clds_pipeline.supported_lang",
            "clds_pipeline.wordnet"
        ],
        "version": "0.1.1"
    },
    "cle": {
        "cmdline": [],
        "modules": [
            "cle",
            "cle.backends",
            "cle.backends.backedcgc",
            "cle.backends.blob",
            "cle.backends.cgc",
            "cle.backends.elf",
            "cle.backends.elfcore",
            "cle.backends.idabin",
            "cle.backends.macho",
            "cle.backends.macho.binding",
            "cle.backends.macho.section",
            "cle.backends.macho.segment",
            "cle.backends.macho.symbol",
            "cle.backends.metaelf",
            "cle.backends.pe",
            "cle.backends.relocations",
            "cle.backends.relocations.amd64",
            "cle.backends.relocations.arm",
            "cle.backends.relocations.arm64",
            "cle.backends.relocations.armel",
            "cle.backends.relocations.armhf",
            "cle.backends.relocations.generic",
            "cle.backends.relocations.generic_elf",
            "cle.backends.relocations.i386",
            "cle.backends.relocations.mips",
            "cle.backends.relocations.mips64",
            "cle.backends.relocations.ppc",
            "cle.backends.relocations.ppc64",
            "cle.errors",
            "cle.loader",
            "cle.memory",
            "cle.patched_stream",
            "cle.tls",
            "cle.tls.elf_tls",
            "cle.tls.pe_tls"
        ],
        "version": "6.7.4.12"
    },
    "clean": {
        "cmdline": [],
        "modules": [
            "clean"
        ],
        "version": "0.1.0"
    },
    "clean-directories": {
        "cmdline": [],
        "modules": [
            "bin",
            "bin.clean",
            "bin.cleaner",
            "clean_directories",
            "clean_directories.files"
        ],
        "version": "1.1.0"
    },
    "clean-image-crop-uploader": {
        "cmdline": [],
        "modules": [
            "cicu",
            "cicu.admin",
            "cicu.forms",
            "cicu.migrations",
            "cicu.migrations.0001_initial",
            "cicu.models",
            "cicu.settings",
            "cicu.urls",
            "cicu.views",
            "cicu.widgets"
        ],
        "version": "0.2.2"
    },
    "cleanadmindjango": {
        "cmdline": [
            "django-admin.py"
        ],
        "modules": [
            "django",
            "django.conf",
            "django.conf.global_settings",
            "django.conf.locale",
            "django.conf.locale.ar",
            "django.conf.locale.ar.formats",
            "django.conf.locale.bg",
            "django.conf.locale.bg.formats",
            "django.conf.locale.bn",
            "django.conf.locale.bn.formats",
            "django.conf.locale.bs",
            "django.conf.locale.bs.formats",
            "django.conf.locale.ca",
            "django.conf.locale.ca.formats",
            "django.conf.locale.cs",
            "django.conf.locale.cs.formats",
            "django.conf.locale.cy",
            "django.conf.locale.cy.formats",
            "django.conf.locale.da",
            "django.conf.locale.da.formats",
            "django.conf.locale.de",
            "django.conf.locale.de.formats",
            "django.conf.locale.de_CH",
            "django.conf.locale.de_CH.formats",
            "django.conf.locale.el",
            "django.conf.locale.el.formats",
            "django.conf.locale.en",
            "django.conf.locale.en.formats",
            "django.conf.locale.en_GB",
            "django.conf.locale.en_GB.formats",
            "django.conf.locale.es",
            "django.conf.locale.es.formats",
            "django.conf.locale.es_AR",
            "django.conf.locale.es_AR.formats",
            "django.conf.locale.es_MX",
            "django.conf.locale.es_MX.formats",
            "django.conf.locale.es_NI",
            "django.conf.locale.es_NI.formats",
            "django.conf.locale.et",
            "django.conf.locale.et.formats",
            "django.conf.locale.eu",
            "django.conf.locale.eu.formats",
            "django.conf.locale.fa",
            "django.conf.locale.fa.formats",
            "django.conf.locale.fi",
            "django.conf.locale.fi.formats",
            "django.conf.locale.fr",
            "django.conf.locale.fr.formats",
            "django.conf.locale.fy_NL",
            "django.conf.locale.fy_NL.formats",
            "django.conf.locale.ga",
            "django.conf.locale.ga.formats",
            "django.conf.locale.gl",
            "django.conf.locale.gl.formats",
            "django.conf.locale.he",
            "django.conf.locale.he.formats",
            "django.conf.locale.hi",
            "django.conf.locale.hi.formats",
            "django.conf.locale.hr",
            "django.conf.locale.hr.formats",
            "django.conf.locale.hu",
            "django.conf.locale.hu.formats",
            "django.conf.locale.id",
            "django.conf.locale.id.formats",
            "django.conf.locale.is",
            "django.conf.locale.is.formats",
            "django.conf.locale.it",
            "django.conf.locale.it.formats",
            "django.conf.locale.ja",
            "django.conf.locale.ja.formats",
            "django.conf.locale.ka",
            "django.conf.locale.ka.formats",
            "django.conf.locale.km",
            "django.conf.locale.km.formats",
            "django.conf.locale.kn",
            "django.conf.locale.kn.formats",
            "django.conf.locale.ko",
            "django.conf.locale.ko.formats",
            "django.conf.locale.lt",
            "django.conf.locale.lt.formats",
            "django.conf.locale.lv",
            "django.conf.locale.lv.formats",
            "django.conf.locale.mk",
            "django.conf.locale.mk.formats",
            "django.conf.locale.ml",
            "django.conf.locale.ml.formats",
            "django.conf.locale.mn",
            "django.conf.locale.mn.formats",
            "django.conf.locale.nb",
            "django.conf.locale.nb.formats",
            "django.conf.locale.nl",
            "django.conf.locale.nl.formats",
            "django.conf.locale.nn",
            "django.conf.locale.nn.formats",
            "django.conf.locale.pl",
            "django.conf.locale.pl.formats",
            "django.conf.locale.pt",
            "django.conf.locale.pt.formats",
            "django.conf.locale.pt_BR",
            "django.conf.locale.pt_BR.formats",
            "django.conf.locale.ro",
            "django.conf.locale.ro.formats",
            "django.conf.locale.ru",
            "django.conf.locale.ru.formats",
            "django.conf.locale.sk",
            "django.conf.locale.sk.formats",
            "django.conf.locale.sl",
            "django.conf.locale.sl.formats",
            "django.conf.locale.sq",
            "django.conf.locale.sq.formats",
            "django.conf.locale.sr",
            "django.conf.locale.sr.formats",
            "django.conf.locale.sr_Latn",
            "django.conf.locale.sr_Latn.formats",
            "django.conf.locale.sv",
            "django.conf.locale.sv.formats",
            "django.conf.locale.ta",
            "django.conf.locale.ta.formats",
            "django.conf.locale.te",
            "django.conf.locale.te.formats",
            "django.conf.locale.th",
            "django.conf.locale.th.formats",
            "django.conf.locale.tr",
            "django.conf.locale.tr.formats",
            "django.conf.locale.uk",
            "django.conf.locale.uk.formats",
            "django.conf.locale.vi",
            "django.conf.locale.vi.formats",
            "django.conf.locale.zh_CN",
            "django.conf.locale.zh_CN.formats",
            "django.conf.locale.zh_TW",
            "django.conf.locale.zh_TW.formats",
            "django.conf.urls",
            "django.conf.urls.defaults",
            "django.conf.urls.i18n",
            "django.conf.urls.shortcut",
            "django.conf.urls.static",
            "django.contrib",
            "django.contrib.admin",
            "django.contrib.admin.actions",
            "django.contrib.admin.filters",
            "django.contrib.admin.forms",
            "django.contrib.admin.helpers",
            "django.contrib.admin.models",
            "django.contrib.admin.options",
            "django.contrib.admin.sites",
            "django.contrib.admin.templatetags",
            "django.contrib.admin.templatetags.admin_list",
            "django.contrib.admin.templatetags.admin_modify",
            "django.contrib.admin.templatetags.admin_static",
            "django.contrib.admin.templatetags.admin_urls",
            "django.contrib.admin.templatetags.log",
            "django.contrib.admin.tests",
            "django.contrib.admin.util",
            "django.contrib.admin.validation",
            "django.contrib.admin.views",
            "django.contrib.admin.views.decorators",
            "django.contrib.admin.views.main",
            "django.contrib.admin.widgets",
            "django.contrib.admindocs",
            "django.contrib.admindocs.models",
            "django.contrib.admindocs.tests",
            "django.contrib.admindocs.tests.fields",
            "django.contrib.admindocs.urls",
            "django.contrib.admindocs.utils",
            "django.contrib.admindocs.views",
            "django.contrib.auth",
            "django.contrib.auth.admin",
            "django.contrib.auth.backends",
            "django.contrib.auth.context_processors",
            "django.contrib.auth.create_superuser",
            "django.contrib.auth.decorators",
            "django.contrib.auth.forms",
            "django.contrib.auth.handlers",
            "django.contrib.auth.handlers.modwsgi",
            "django.contrib.auth.hashers",
            "django.contrib.auth.management",
            "django.contrib.auth.management.commands",
            "django.contrib.auth.management.commands.changepassword",
            "django.contrib.auth.management.commands.createsuperuser",
            "django.contrib.auth.middleware",
            "django.contrib.auth.models",
            "django.contrib.auth.signals",
            "django.contrib.auth.tests",
            "django.contrib.auth.tests.auth_backends",
            "django.contrib.auth.tests.basic",
            "django.contrib.auth.tests.context_processors",
            "django.contrib.auth.tests.custom_user",
            "django.contrib.auth.tests.decorators",
            "django.contrib.auth.tests.forms",
            "django.contrib.auth.tests.handlers",
            "django.contrib.auth.tests.hashers",
            "django.contrib.auth.tests.management",
            "django.contrib.auth.tests.models",
            "django.contrib.auth.tests.remote_user",
            "django.contrib.auth.tests.signals",
            "django.contrib.auth.tests.tokens",
            "django.contrib.auth.tests.urls",
            "django.contrib.auth.tests.urls_admin",
            "django.contrib.auth.tests.utils",
            "django.contrib.auth.tests.views",
            "django.contrib.auth.tokens",
            "django.contrib.auth.urls",
            "django.contrib.auth.views",
            "django.contrib.comments",
            "django.contrib.comments.admin",
            "django.contrib.comments.feeds",
            "django.contrib.comments.forms",
            "django.contrib.comments.managers",
            "django.contrib.comments.models",
            "django.contrib.comments.moderation",
            "django.contrib.comments.signals",
            "django.contrib.comments.templatetags",
            "django.contrib.comments.templatetags.comments",
            "django.contrib.comments.urls",
            "django.contrib.comments.views",
            "django.contrib.comments.views.comments",
            "django.contrib.comments.views.moderation",
            "django.contrib.comments.views.utils",
            "django.contrib.contenttypes",
            "django.contrib.contenttypes.generic",
            "django.contrib.contenttypes.management",
            "django.contrib.contenttypes.models",
            "django.contrib.contenttypes.tests",
            "django.contrib.contenttypes.views",
            "django.contrib.databrowse",
            "django.contrib.databrowse.datastructures",
            "django.contrib.databrowse.models",
            "django.contrib.databrowse.plugins",
            "django.contrib.databrowse.plugins.calendars",
            "django.contrib.databrowse.plugins.fieldchoices",
            "django.contrib.databrowse.plugins.objects",
            "django.contrib.databrowse.sites",
            "django.contrib.databrowse.tests",
            "django.contrib.databrowse.urls",
            "django.contrib.databrowse.views",
            "django.contrib.flatpages",
            "django.contrib.flatpages.admin",
            "django.contrib.flatpages.forms",
            "django.contrib.flatpages.middleware",
            "django.contrib.flatpages.models",
            "django.contrib.flatpages.templatetags",
            "django.contrib.flatpages.templatetags.flatpages",
            "django.contrib.flatpages.tests",
            "django.contrib.flatpages.tests.csrf",
            "django.contrib.flatpages.tests.forms",
            "django.contrib.flatpages.tests.middleware",
            "django.contrib.flatpages.tests.templatetags",
            "django.contrib.flatpages.tests.urls",
            "django.contrib.flatpages.tests.views",
            "django.contrib.flatpages.urls",
            "django.contrib.flatpages.views",
            "django.contrib.formtools",
            "django.contrib.formtools.models",
            "django.contrib.formtools.preview",
            "django.contrib.formtools.tests",
            "django.contrib.formtools.tests.forms",
            "django.contrib.formtools.tests.urls",
            "django.contrib.formtools.tests.wizard",
            "django.contrib.formtools.tests.wizard.cookiestorage",
            "django.contrib.formtools.tests.wizard.forms",
            "django.contrib.formtools.tests.wizard.loadstorage",
            "django.contrib.formtools.tests.wizard.namedwizardtests",
            "django.contrib.formtools.tests.wizard.namedwizardtests.forms",
            "django.contrib.formtools.tests.wizard.namedwizardtests.tests",
            "django.contrib.formtools.tests.wizard.namedwizardtests.urls",
            "django.contrib.formtools.tests.wizard.sessionstorage",
            "django.contrib.formtools.tests.wizard.storage",
            "django.contrib.formtools.tests.wizard.wizardtests",
            "django.contrib.formtools.tests.wizard.wizardtests.forms",
            "django.contrib.formtools.tests.wizard.wizardtests.tests",
            "django.contrib.formtools.tests.wizard.wizardtests.urls",
            "django.contrib.formtools.utils",
            "django.contrib.formtools.wizard",
            "django.contrib.formtools.wizard.forms",
            "django.contrib.formtools.wizard.legacy",
            "django.contrib.formtools.wizard.storage",
            "django.contrib.formtools.wizard.storage.base",
            "django.contrib.formtools.wizard.storage.cookie",
            "django.contrib.formtools.wizard.storage.exceptions",
            "django.contrib.formtools.wizard.storage.session",
            "django.contrib.formtools.wizard.views",
            "django.contrib.gis",
            "django.contrib.gis.admin",
            "django.contrib.gis.admin.options",
            "django.contrib.gis.admin.widgets",
            "django.contrib.gis.db",
            "django.contrib.gis.db.backends",
            "django.contrib.gis.db.backends.adapter",
            "django.contrib.gis.db.backends.base",
            "django.contrib.gis.db.backends.mysql",
            "django.contrib.gis.db.backends.mysql.base",
            "django.contrib.gis.db.backends.mysql.compiler",
            "django.contrib.gis.db.backends.mysql.creation",
            "django.contrib.gis.db.backends.mysql.introspection",
            "django.contrib.gis.db.backends.mysql.operations",
            "django.contrib.gis.db.backends.oracle",
            "django.contrib.gis.db.backends.oracle.adapter",
            "django.contrib.gis.db.backends.oracle.base",
            "django.contrib.gis.db.backends.oracle.compiler",
            "django.contrib.gis.db.backends.oracle.creation",
            "django.contrib.gis.db.backends.oracle.introspection",
            "django.contrib.gis.db.backends.oracle.models",
            "django.contrib.gis.db.backends.oracle.operations",
            "django.contrib.gis.db.backends.postgis",
            "django.contrib.gis.db.backends.postgis.adapter",
            "django.contrib.gis.db.backends.postgis.base",
            "django.contrib.gis.db.backends.postgis.creation",
            "django.contrib.gis.db.backends.postgis.introspection",
            "django.contrib.gis.db.backends.postgis.models",
            "django.contrib.gis.db.backends.postgis.operations",
            "django.contrib.gis.db.backends.spatialite",
            "django.contrib.gis.db.backends.spatialite.adapter",
            "django.contrib.gis.db.backends.spatialite.base",
            "django.contrib.gis.db.backends.spatialite.client",
            "django.contrib.gis.db.backends.spatialite.creation",
            "django.contrib.gis.db.backends.spatialite.introspection",
            "django.contrib.gis.db.backends.spatialite.models",
            "django.contrib.gis.db.backends.spatialite.operations",
            "django.contrib.gis.db.backends.util",
            "django.contrib.gis.db.models",
            "django.contrib.gis.db.models.aggregates",
            "django.contrib.gis.db.models.fields",
            "django.contrib.gis.db.models.manager",
            "django.contrib.gis.db.models.proxy",
            "django.contrib.gis.db.models.query",
            "django.contrib.gis.db.models.sql",
            "django.contrib.gis.db.models.sql.aggregates",
            "django.contrib.gis.db.models.sql.compiler",
            "django.contrib.gis.db.models.sql.conversion",
            "django.contrib.gis.db.models.sql.query",
            "django.contrib.gis.db.models.sql.where",
            "django.contrib.gis.feeds",
            "django.contrib.gis.forms",
            "django.contrib.gis.forms.fields",
            "django.contrib.gis.gdal",
            "django.contrib.gis.gdal.base",
            "django.contrib.gis.gdal.datasource",
            "django.contrib.gis.gdal.driver",
            "django.contrib.gis.gdal.envelope",
            "django.contrib.gis.gdal.error",
            "django.contrib.gis.gdal.feature",
            "django.contrib.gis.gdal.field",
            "django.contrib.gis.gdal.geometries",
            "django.contrib.gis.gdal.geomtype",
            "django.contrib.gis.gdal.layer",
            "django.contrib.gis.gdal.libgdal",
            "django.contrib.gis.gdal.prototypes",
            "django.contrib.gis.gdal.prototypes.ds",
            "django.contrib.gis.gdal.prototypes.errcheck",
            "django.contrib.gis.gdal.prototypes.generation",
            "django.contrib.gis.gdal.prototypes.geom",
            "django.contrib.gis.gdal.prototypes.srs",
            "django.contrib.gis.gdal.srs",
            "django.contrib.gis.gdal.tests",
            "django.contrib.gis.gdal.tests.test_driver",
            "django.contrib.gis.gdal.tests.test_ds",
            "django.contrib.gis.gdal.tests.test_envelope",
            "django.contrib.gis.gdal.tests.test_geom",
            "django.contrib.gis.gdal.tests.test_srs",
            "django.contrib.gis.geoip",
            "django.contrib.gis.geoip.base",
            "django.contrib.gis.geoip.libgeoip",
            "django.contrib.gis.geoip.prototypes",
            "django.contrib.gis.geoip.tests",
            "django.contrib.gis.geometry",
            "django.contrib.gis.geometry.backend",
            "django.contrib.gis.geometry.backend.geos",
            "django.contrib.gis.geometry.regex",
            "django.contrib.gis.geometry.test_data",
            "django.contrib.gis.geos",
            "django.contrib.gis.geos.base",
            "django.contrib.gis.geos.collections",
            "django.contrib.gis.geos.coordseq",
            "django.contrib.gis.geos.error",
            "django.contrib.gis.geos.factory",
            "django.contrib.gis.geos.geometry",
            "django.contrib.gis.geos.io",
            "django.contrib.gis.geos.libgeos",
            "django.contrib.gis.geos.linestring",
            "django.contrib.gis.geos.mutable_list",
            "django.contrib.gis.geos.point",
            "django.contrib.gis.geos.polygon",
            "django.contrib.gis.geos.prepared",
            "django.contrib.gis.geos.prototypes",
            "django.contrib.gis.geos.prototypes.coordseq",
            "django.contrib.gis.geos.prototypes.errcheck",
            "django.contrib.gis.geos.prototypes.geom",
            "django.contrib.gis.geos.prototypes.io",
            "django.contrib.gis.geos.prototypes.misc",
            "django.contrib.gis.geos.prototypes.predicates",
            "django.contrib.gis.geos.prototypes.prepared",
            "django.contrib.gis.geos.prototypes.threadsafe",
            "django.contrib.gis.geos.prototypes.topology",
            "django.contrib.gis.geos.tests",
            "django.contrib.gis.geos.tests.test_geos",
            "django.contrib.gis.geos.tests.test_geos_mutation",
            "django.contrib.gis.geos.tests.test_io",
            "django.contrib.gis.geos.tests.test_mutable_list",
            "django.contrib.gis.management",
            "django.contrib.gis.management.commands",
            "django.contrib.gis.management.commands.inspectdb",
            "django.contrib.gis.management.commands.ogrinspect",
            "django.contrib.gis.maps",
            "django.contrib.gis.maps.google",
            "django.contrib.gis.maps.google.gmap",
            "django.contrib.gis.maps.google.overlays",
            "django.contrib.gis.maps.google.zoom",
            "django.contrib.gis.maps.openlayers",
            "django.contrib.gis.measure",
            "django.contrib.gis.models",
            "django.contrib.gis.shortcuts",
            "django.contrib.gis.sitemaps",
            "django.contrib.gis.sitemaps.georss",
            "django.contrib.gis.sitemaps.kml",
            "django.contrib.gis.sitemaps.views",
            "django.contrib.gis.tests",
            "django.contrib.gis.tests.distapp",
            "django.contrib.gis.tests.distapp.models",
            "django.contrib.gis.tests.distapp.tests",
            "django.contrib.gis.tests.geo3d",
            "django.contrib.gis.tests.geo3d.models",
            "django.contrib.gis.tests.geo3d.tests",
            "django.contrib.gis.tests.geo3d.views",
            "django.contrib.gis.tests.geoadmin",
            "django.contrib.gis.tests.geoadmin.models",
            "django.contrib.gis.tests.geoadmin.tests",
            "django.contrib.gis.tests.geoadmin.urls",
            "django.contrib.gis.tests.geoapp",
            "django.contrib.gis.tests.geoapp.feeds",
            "django.contrib.gis.tests.geoapp.models",
            "django.contrib.gis.tests.geoapp.sitemaps",
            "django.contrib.gis.tests.geoapp.test_feeds",
            "django.contrib.gis.tests.geoapp.test_regress",
            "django.contrib.gis.tests.geoapp.test_sitemaps",
            "django.contrib.gis.tests.geoapp.tests",
            "django.contrib.gis.tests.geoapp.urls",
            "django.contrib.gis.tests.geogapp",
            "django.contrib.gis.tests.geogapp.models",
            "django.contrib.gis.tests.geogapp.tests",
            "django.contrib.gis.tests.inspectapp",
            "django.contrib.gis.tests.inspectapp.models",
            "django.contrib.gis.tests.inspectapp.tests",
            "django.contrib.gis.tests.layermap",
            "django.contrib.gis.tests.layermap.models",
            "django.contrib.gis.tests.layermap.tests",
            "django.contrib.gis.tests.relatedapp",
            "django.contrib.gis.tests.relatedapp.models",
            "django.contrib.gis.tests.relatedapp.tests",
            "django.contrib.gis.tests.test_geoforms",
            "django.contrib.gis.tests.test_measure",
            "django.contrib.gis.tests.test_spatialrefsys",
            "django.contrib.gis.tests.utils",
            "django.contrib.gis.utils",
            "django.contrib.gis.utils.geoip",
            "django.contrib.gis.utils.layermapping",
            "django.contrib.gis.utils.ogrinfo",
            "django.contrib.gis.utils.ogrinspect",
            "django.contrib.gis.utils.srs",
            "django.contrib.gis.utils.wkt",
            "django.contrib.gis.views",
            "django.contrib.humanize",
            "django.contrib.humanize.models",
            "django.contrib.humanize.templatetags",
            "django.contrib.humanize.templatetags.humanize",
            "django.contrib.humanize.tests",
            "django.contrib.localflavor",
            "django.contrib.localflavor.ar",
            "django.contrib.localflavor.ar.ar_provinces",
            "django.contrib.localflavor.ar.forms",
            "django.contrib.localflavor.at",
            "django.contrib.localflavor.at.at_states",
            "django.contrib.localflavor.at.forms",
            "django.contrib.localflavor.au",
            "django.contrib.localflavor.au.au_states",
            "django.contrib.localflavor.au.forms",
            "django.contrib.localflavor.au.models",
            "django.contrib.localflavor.be",
            "django.contrib.localflavor.be.be_provinces",
            "django.contrib.localflavor.be.be_regions",
            "django.contrib.localflavor.be.forms",
            "django.contrib.localflavor.br",
            "django.contrib.localflavor.br.br_states",
            "django.contrib.localflavor.br.forms",
            "django.contrib.localflavor.ca",
            "django.contrib.localflavor.ca.ca_provinces",
            "django.contrib.localflavor.ca.forms",
            "django.contrib.localflavor.ch",
            "django.contrib.localflavor.ch.ch_states",
            "django.contrib.localflavor.ch.forms",
            "django.contrib.localflavor.cl",
            "django.contrib.localflavor.cl.cl_regions",
            "django.contrib.localflavor.cl.forms",
            "django.contrib.localflavor.cn",
            "django.contrib.localflavor.cn.cn_provinces",
            "django.contrib.localflavor.cn.forms",
            "django.contrib.localflavor.co",
            "django.contrib.localflavor.co.co_departments",
            "django.contrib.localflavor.co.forms",
            "django.contrib.localflavor.cz",
            "django.contrib.localflavor.cz.cz_regions",
            "django.contrib.localflavor.cz.forms",
            "django.contrib.localflavor.de",
            "django.contrib.localflavor.de.de_states",
            "django.contrib.localflavor.de.forms",
            "django.contrib.localflavor.ec",
            "django.contrib.localflavor.ec.ec_provinces",
            "django.contrib.localflavor.ec.forms",
            "django.contrib.localflavor.es",
            "django.contrib.localflavor.es.es_provinces",
            "django.contrib.localflavor.es.es_regions",
            "django.contrib.localflavor.es.forms",
            "django.contrib.localflavor.fi",
            "django.contrib.localflavor.fi.fi_municipalities",
            "django.contrib.localflavor.fi.forms",
            "django.contrib.localflavor.fr",
            "django.contrib.localflavor.fr.forms",
            "django.contrib.localflavor.fr.fr_department",
            "django.contrib.localflavor.gb",
            "django.contrib.localflavor.gb.forms",
            "django.contrib.localflavor.gb.gb_regions",
            "django.contrib.localflavor.generic",
            "django.contrib.localflavor.generic.forms",
            "django.contrib.localflavor.hk",
            "django.contrib.localflavor.hk.forms",
            "django.contrib.localflavor.hr",
            "django.contrib.localflavor.hr.forms",
            "django.contrib.localflavor.hr.hr_choices",
            "django.contrib.localflavor.id",
            "django.contrib.localflavor.id.forms",
            "django.contrib.localflavor.id.id_choices",
            "django.contrib.localflavor.ie",
            "django.contrib.localflavor.ie.forms",
            "django.contrib.localflavor.ie.ie_counties",
            "django.contrib.localflavor.il",
            "django.contrib.localflavor.il.forms",
            "django.contrib.localflavor.in_",
            "django.contrib.localflavor.in_.forms",
            "django.contrib.localflavor.in_.in_states",
            "django.contrib.localflavor.is_",
            "django.contrib.localflavor.is_.forms",
            "django.contrib.localflavor.is_.is_postalcodes",
            "django.contrib.localflavor.it",
            "django.contrib.localflavor.it.forms",
            "django.contrib.localflavor.it.it_province",
            "django.contrib.localflavor.it.it_region",
            "django.contrib.localflavor.it.util",
            "django.contrib.localflavor.jp",
            "django.contrib.localflavor.jp.forms",
            "django.contrib.localflavor.jp.jp_prefectures",
            "django.contrib.localflavor.kw",
            "django.contrib.localflavor.kw.forms",
            "django.contrib.localflavor.mk",
            "django.contrib.localflavor.mk.forms",
            "django.contrib.localflavor.mk.mk_choices",
            "django.contrib.localflavor.mk.models",
            "django.contrib.localflavor.mx",
            "django.contrib.localflavor.mx.forms",
            "django.contrib.localflavor.mx.models",
            "django.contrib.localflavor.mx.mx_states",
            "django.contrib.localflavor.nl",
            "django.contrib.localflavor.nl.forms",
            "django.contrib.localflavor.nl.nl_provinces",
            "django.contrib.localflavor.no",
            "django.contrib.localflavor.no.forms",
            "django.contrib.localflavor.no.no_municipalities",
            "django.contrib.localflavor.pe",
            "django.contrib.localflavor.pe.forms",
            "django.contrib.localflavor.pe.pe_region",
            "django.contrib.localflavor.pl",
            "django.contrib.localflavor.pl.forms",
            "django.contrib.localflavor.pl.pl_administrativeunits",
            "django.contrib.localflavor.pl.pl_voivodeships",
            "django.contrib.localflavor.pt",
            "django.contrib.localflavor.pt.forms",
            "django.contrib.localflavor.py",
            "django.contrib.localflavor.py.forms",
            "django.contrib.localflavor.py.py_department",
            "django.contrib.localflavor.ro",
            "django.contrib.localflavor.ro.forms",
            "django.contrib.localflavor.ro.ro_counties",
            "django.contrib.localflavor.ru",
            "django.contrib.localflavor.ru.forms",
            "django.contrib.localflavor.ru.ru_regions",
            "django.contrib.localflavor.se",
            "django.contrib.localflavor.se.forms",
            "django.contrib.localflavor.se.se_counties",
            "django.contrib.localflavor.se.utils",
            "django.contrib.localflavor.si",
            "django.contrib.localflavor.si.forms",
            "django.contrib.localflavor.si.si_postalcodes",
            "django.contrib.localflavor.sk",
            "django.contrib.localflavor.sk.forms",
            "django.contrib.localflavor.sk.sk_districts",
            "django.contrib.localflavor.sk.sk_regions",
            "django.contrib.localflavor.tr",
            "django.contrib.localflavor.tr.forms",
            "django.contrib.localflavor.tr.tr_provinces",
            "django.contrib.localflavor.uk",
            "django.contrib.localflavor.uk.forms",
            "django.contrib.localflavor.uk.uk_regions",
            "django.contrib.localflavor.us",
            "django.contrib.localflavor.us.forms",
            "django.contrib.localflavor.us.models",
            "django.contrib.localflavor.us.us_states",
            "django.contrib.localflavor.uy",
            "django.contrib.localflavor.uy.forms",
            "django.contrib.localflavor.uy.util",
            "django.contrib.localflavor.uy.uy_departaments",
            "django.contrib.localflavor.za",
            "django.contrib.localflavor.za.forms",
            "django.contrib.localflavor.za.za_provinces",
            "django.contrib.markup",
            "django.contrib.markup.models",
            "django.contrib.markup.templatetags",
            "django.contrib.markup.templatetags.markup",
            "django.contrib.markup.tests",
            "django.contrib.messages",
            "django.contrib.messages.api",
            "django.contrib.messages.constants",
            "django.contrib.messages.context_processors",
            "django.contrib.messages.middleware",
            "django.contrib.messages.models",
            "django.contrib.messages.storage",
            "django.contrib.messages.storage.base",
            "django.contrib.messages.storage.cookie",
            "django.contrib.messages.storage.fallback",
            "django.contrib.messages.storage.session",
            "django.contrib.messages.tests",
            "django.contrib.messages.tests.base",
            "django.contrib.messages.tests.cookie",
            "django.contrib.messages.tests.fallback",
            "django.contrib.messages.tests.middleware",
            "django.contrib.messages.tests.session",
            "django.contrib.messages.tests.urls",
            "django.contrib.messages.utils",
            "django.contrib.redirects",
            "django.contrib.redirects.admin",
            "django.contrib.redirects.middleware",
            "django.contrib.redirects.models",
            "django.contrib.redirects.tests",
            "django.contrib.sessions",
            "django.contrib.sessions.backends",
            "django.contrib.sessions.backends.base",
            "django.contrib.sessions.backends.cache",
            "django.contrib.sessions.backends.cached_db",
            "django.contrib.sessions.backends.db",
            "django.contrib.sessions.backends.file",
            "django.contrib.sessions.backends.signed_cookies",
            "django.contrib.sessions.management",
            "django.contrib.sessions.management.commands",
            "django.contrib.sessions.management.commands.clearsessions",
            "django.contrib.sessions.middleware",
            "django.contrib.sessions.models",
            "django.contrib.sessions.tests",
            "django.contrib.sitemaps",
            "django.contrib.sitemaps.management",
            "django.contrib.sitemaps.management.commands",
            "django.contrib.sitemaps.management.commands.ping_google",
            "django.contrib.sitemaps.models",
            "django.contrib.sitemaps.tests",
            "django.contrib.sitemaps.tests.base",
            "django.contrib.sitemaps.tests.flatpages",
            "django.contrib.sitemaps.tests.generic",
            "django.contrib.sitemaps.tests.http",
            "django.contrib.sitemaps.tests.https",
            "django.contrib.sitemaps.tests.urls",
            "django.contrib.sitemaps.tests.urls.http",
            "django.contrib.sitemaps.tests.urls.https",
            "django.contrib.sitemaps.views",
            "django.contrib.sites",
            "django.contrib.sites.admin",
            "django.contrib.sites.management",
            "django.contrib.sites.managers",
            "django.contrib.sites.models",
            "django.contrib.sites.tests",
            "django.contrib.staticfiles",
            "django.contrib.staticfiles.finders",
            "django.contrib.staticfiles.handlers",
            "django.contrib.staticfiles.management",
            "django.contrib.staticfiles.management.commands",
            "django.contrib.staticfiles.management.commands.collectstatic",
            "django.contrib.staticfiles.management.commands.findstatic",
            "django.contrib.staticfiles.management.commands.runserver",
            "django.contrib.staticfiles.models",
            "django.contrib.staticfiles.storage",
            "django.contrib.staticfiles.templatetags",
            "django.contrib.staticfiles.templatetags.staticfiles",
            "django.contrib.staticfiles.urls",
            "django.contrib.staticfiles.utils",
            "django.contrib.staticfiles.views",
            "django.contrib.syndication",
            "django.contrib.syndication.views",
            "django.contrib.webdesign",
            "django.contrib.webdesign.lorem_ipsum",
            "django.contrib.webdesign.models",
            "django.contrib.webdesign.templatetags",
            "django.contrib.webdesign.templatetags.webdesign",
            "django.contrib.webdesign.tests",
            "django.core",
            "django.core.cache",
            "django.core.cache.backends",
            "django.core.cache.backends.base",
            "django.core.cache.backends.db",
            "django.core.cache.backends.dummy",
            "django.core.cache.backends.filebased",
            "django.core.cache.backends.locmem",
            "django.core.cache.backends.memcached",
            "django.core.context_processors",
            "django.core.exceptions",
            "django.core.files",
            "django.core.files.base",
            "django.core.files.images",
            "django.core.files.locks",
            "django.core.files.move",
            "django.core.files.storage",
            "django.core.files.temp",
            "django.core.files.uploadedfile",
            "django.core.files.uploadhandler",
            "django.core.files.utils",
            "django.core.handlers",
            "django.core.handlers.base",
            "django.core.handlers.wsgi",
            "django.core.mail",
            "django.core.mail.backends",
            "django.core.mail.backends.base",
            "django.core.mail.backends.console",
            "django.core.mail.backends.dummy",
            "django.core.mail.backends.filebased",
            "django.core.mail.backends.locmem",
            "django.core.mail.backends.smtp",
            "django.core.mail.message",
            "django.core.mail.utils",
            "django.core.management",
            "django.core.management.base",
            "django.core.management.color",
            "django.core.management.commands",
            "django.core.management.commands.cleanup",
            "django.core.management.commands.compilemessages",
            "django.core.management.commands.createcachetable",
            "django.core.management.commands.dbshell",
            "django.core.management.commands.diffsettings",
            "django.core.management.commands.dumpdata",
            "django.core.management.commands.flush",
            "django.core.management.commands.inspectdb",
            "django.core.management.commands.loaddata",
            "django.core.management.commands.makemessages",
            "django.core.management.commands.runfcgi",
            "django.core.management.commands.runserver",
            "django.core.management.commands.shell",
            "django.core.management.commands.sql",
            "django.core.management.commands.sqlall",
            "django.core.management.commands.sqlclear",
            "django.core.management.commands.sqlcustom",
            "django.core.management.commands.sqlflush",
            "django.core.management.commands.sqlindexes",
            "django.core.management.commands.sqlinitialdata",
            "django.core.management.commands.sqlsequencereset",
            "django.core.management.commands.startapp",
            "django.core.management.commands.startproject",
            "django.core.management.commands.syncdb",
            "django.core.management.commands.test",
            "django.core.management.commands.testserver",
            "django.core.management.commands.validate",
            "django.core.management.sql",
            "django.core.management.templates",
            "django.core.management.validation",
            "django.core.paginator",
            "django.core.serializers",
            "django.core.serializers.base",
            "django.core.serializers.json",
            "django.core.serializers.python",
            "django.core.serializers.pyyaml",
            "django.core.serializers.xml_serializer",
            "django.core.servers",
            "django.core.servers.basehttp",
            "django.core.servers.fastcgi",
            "django.core.signals",
            "django.core.signing",
            "django.core.urlresolvers",
            "django.core.validators",
            "django.core.wsgi",
            "django.core.xheaders",
            "django.db",
            "django.db.backends",
            "django.db.backends.creation",
            "django.db.backends.dummy",
            "django.db.backends.dummy.base",
            "django.db.backends.mysql",
            "django.db.backends.mysql.base",
            "django.db.backends.mysql.client",
            "django.db.backends.mysql.compiler",
            "django.db.backends.mysql.creation",
            "django.db.backends.mysql.introspection",
            "django.db.backends.mysql.validation",
            "django.db.backends.oracle",
            "django.db.backends.oracle.base",
            "django.db.backends.oracle.client",
            "django.db.backends.oracle.compiler",
            "django.db.backends.oracle.creation",
            "django.db.backends.oracle.introspection",
            "django.db.backends.postgresql_psycopg2",
            "django.db.backends.postgresql_psycopg2.base",
            "django.db.backends.postgresql_psycopg2.client",
            "django.db.backends.postgresql_psycopg2.creation",
            "django.db.backends.postgresql_psycopg2.introspection",
            "django.db.backends.postgresql_psycopg2.operations",
            "django.db.backends.postgresql_psycopg2.version",
            "django.db.backends.signals",
            "django.db.backends.sqlite3",
            "django.db.backends.sqlite3.base",
            "django.db.backends.sqlite3.client",
            "django.db.backends.sqlite3.creation",
            "django.db.backends.sqlite3.introspection",
            "django.db.backends.util",
            "django.db.models",
            "django.db.models.aggregates",
            "django.db.models.base",
            "django.db.models.constants",
            "django.db.models.deletion",
            "django.db.models.expressions",
            "django.db.models.fields",
            "django.db.models.fields.files",
            "django.db.models.fields.proxy",
            "django.db.models.fields.related",
            "django.db.models.fields.subclassing",
            "django.db.models.loading",
            "django.db.models.manager",
            "django.db.models.options",
            "django.db.models.query",
            "django.db.models.query_utils",
            "django.db.models.related",
            "django.db.models.signals",
            "django.db.models.sql",
            "django.db.models.sql.aggregates",
            "django.db.models.sql.compiler",
            "django.db.models.sql.constants",
            "django.db.models.sql.datastructures",
            "django.db.models.sql.expressions",
            "django.db.models.sql.query",
            "django.db.models.sql.subqueries",
            "django.db.models.sql.where",
            "django.db.transaction",
            "django.db.utils",
            "django.dispatch",
            "django.dispatch.dispatcher",
            "django.dispatch.saferef",
            "django.forms",
            "django.forms.extras",
            "django.forms.extras.widgets",
            "django.forms.fields",
            "django.forms.forms",
            "django.forms.formsets",
            "django.forms.models",
            "django.forms.util",
            "django.forms.widgets",
            "django.http",
            "django.http.cookie",
            "django.http.multipartparser",
            "django.http.request",
            "django.http.response",
            "django.http.utils",
            "django.middleware",
            "django.middleware.cache",
            "django.middleware.clickjacking",
            "django.middleware.common",
            "django.middleware.csrf",
            "django.middleware.doc",
            "django.middleware.gzip",
            "django.middleware.http",
            "django.middleware.locale",
            "django.middleware.transaction",
            "django.shortcuts",
            "django.template",
            "django.template.base",
            "django.template.context",
            "django.template.debug",
            "django.template.defaultfilters",
            "django.template.defaulttags",
            "django.template.loader",
            "django.template.loader_tags",
            "django.template.loaders",
            "django.template.loaders.app_directories",
            "django.template.loaders.cached",
            "django.template.loaders.eggs",
            "django.template.loaders.filesystem",
            "django.template.response",
            "django.template.smartif",
            "django.templatetags",
            "django.templatetags.cache",
            "django.templatetags.future",
            "django.templatetags.i18n",
            "django.templatetags.l10n",
            "django.templatetags.static",
            "django.templatetags.tz",
            "django.test",
            "django.test._doctest",
            "django.test.client",
            "django.test.html",
            "django.test.signals",
            "django.test.simple",
            "django.test.testcases",
            "django.test.utils",
            "django.utils",
            "django.utils.2to3_fixes",
            "django.utils.2to3_fixes.fix_unicode",
            "django.utils._os",
            "django.utils.archive",
            "django.utils.autoreload",
            "django.utils.baseconv",
            "django.utils.cache",
            "django.utils.checksums",
            "django.utils.copycompat",
            "django.utils.crypto",
            "django.utils.daemonize",
            "django.utils.datastructures",
            "django.utils.dateformat",
            "django.utils.dateparse",
            "django.utils.dates",
            "django.utils.datetime_safe",
            "django.utils.decorators",
            "django.utils.dictconfig",
            "django.utils.encoding",
            "django.utils.feedgenerator",
            "django.utils.formats",
            "django.utils.functional",
            "django.utils.hashcompat",
            "django.utils.html",
            "django.utils.html_parser",
            "django.utils.http",
            "django.utils.importlib",
            "django.utils.ipv6",
            "django.utils.itercompat",
            "django.utils.jslex",
            "django.utils.log",
            "django.utils.module_loading",
            "django.utils.numberformat",
            "django.utils.regex_helper",
            "django.utils.safestring",
            "django.utils.simplejson",
            "django.utils.six",
            "django.utils.synch",
            "django.utils.termcolors",
            "django.utils.text",
            "django.utils.timesince",
            "django.utils.timezone",
            "django.utils.translation",
            "django.utils.translation.trans_null",
            "django.utils.translation.trans_real",
            "django.utils.tree",
            "django.utils.tzinfo",
            "django.utils.unittest",
            "django.utils.unittest.case",
            "django.utils.unittest.collector",
            "django.utils.unittest.compatibility",
            "django.utils.unittest.loader",
            "django.utils.unittest.main",
            "django.utils.unittest.result",
            "django.utils.unittest.runner",
            "django.utils.unittest.signals",
            "django.utils.unittest.suite",
            "django.utils.unittest.util",
            "django.utils.version",
            "django.utils.xmlutils",
            "django.views",
            "django.views.csrf",
            "django.views.debug",
            "django.views.decorators",
            "django.views.decorators.cache",
            "django.views.decorators.clickjacking",
            "django.views.decorators.csrf",
            "django.views.decorators.debug",
            "django.views.decorators.gzip",
            "django.views.decorators.http",
            "django.views.decorators.vary",
            "django.views.defaults",
            "django.views.generic",
            "django.views.generic.base",
            "django.views.generic.dates",
            "django.views.generic.detail",
            "django.views.generic.edit",
            "django.views.generic.list",
            "django.views.i18n",
            "django.views.static"
        ],
        "version": "1.5.3.1"
    },
    "cleancat": {
        "cmdline": [],
        "modules": [
            "cleancat",
            "cleancat.base",
            "cleancat.utils"
        ],
        "version": "0.5.4"
    },
    "cleanco": {
        "cmdline": [],
        "modules": [
            "cleanco",
            "termdata"
        ],
        "version": "1.3"
    },
    "cleancss": {
        "cmdline": [],
        "modules": [
            "cleancss",
            "cleancss.callbacks"
        ],
        "version": "1.4"
    },
    "cleanenv": {
        "cmdline": [],
        "modules": [
            "cleanenv",
            "cleanenv.cleanenv_inside",
            "cleanenv.cleanenv_inside.cli",
            "cleanenv.cleanenv_inside.commands",
            "cleanenv.cleanenv_inside.commands.destroy",
            "cleanenv.cleanenv_inside.commands.exec_",
            "cleanenv.cleanenv_inside.commands.link",
            "cleanenv.cleanenv_inside.commands.reset",
            "cleanenv.cleanenv_inside.config",
            "cleanenv.cleanenv_inside.flock",
            "cleanenv.cleanenv_inside.user",
            "cleanenv.commands",
            "cleanenv.commands.create",
            "cleanenv.setup"
        ],
        "version": "0.1.3"
    },
    "cleaner": {
        "cmdline": [],
        "modules": [
            "cleaner",
            "cleaner.cli",
            "cleaner.filesystem",
            "cleaner.shell"
        ],
        "version": "0.2.2"
    },
    "cleanerversion": {
        "cmdline": [],
        "modules": [
            "versions",
            "versions.admin",
            "versions.deletion",
            "versions.exceptions",
            "versions.models",
            "versions.settings",
            "versions.util",
            "versions.util.helper",
            "versions.util.postgresql",
            "versions_tests",
            "versions_tests.admin",
            "versions_tests.apps",
            "versions_tests.models",
            "versions_tests.tests",
            "versions_tests.tests.test_commands",
            "versions_tests.tests.test_models",
            "versions_tests.tests.test_utils",
            "versions_tests.urls"
        ],
        "version": "1.6.1"
    },
    "cleanerversion-anfema": {
        "cmdline": [],
        "modules": [
            "versions",
            "versions.admin",
            "versions.deletion",
            "versions.exceptions",
            "versions.models",
            "versions.settings",
            "versions.util",
            "versions.util.helper",
            "versions.util.postgresql",
            "versions_tests",
            "versions_tests.admin",
            "versions_tests.apps",
            "versions_tests.models",
            "versions_tests.tests",
            "versions_tests.tests.test_commands",
            "versions_tests.tests.test_models",
            "versions_tests.tests.test_utils",
            "versions_tests.urls"
        ],
        "version": "1.5.3.post3"
    },
    "cleanfreak": {
        "cmdline": [],
        "modules": [
            "cleanfreak",
            "cleanfreak.app",
            "cleanfreak.checker",
            "cleanfreak.config",
            "cleanfreak.messages",
            "cleanfreak.shout",
            "cleanfreak.ui",
            "cleanfreak.ui.mayaui",
            "cleanfreak.ui.ui",
            "cleanfreak.utils"
        ],
        "version": "0.1.6"
    },
    "cleanfree": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cleangit": {
        "cmdline": [
            "clean-git"
        ],
        "modules": [
            "cleangit",
            "cleangit.authors",
            "cleangit.main",
            "cleangit.script",
            "cleangit.tests"
        ],
        "version": "0.0.8"
    },
    "cleanhtml": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cleaningbenchmark": {
        "cmdline": [
            "testcleaningbenchmark.py"
        ],
        "modules": [
            "cleaningbenchmark",
            "cleaningbenchmark.CorruptionModels",
            "cleaningbenchmark.CorruptionModels.AddressCorruptionModel",
            "cleaningbenchmark.CorruptionModels.CSVCorruptionModel",
            "cleaningbenchmark.CorruptionModels.CorruptionModel",
            "cleaningbenchmark.CorruptionModels.ERCorruptionModel",
            "cleaningbenchmark.CorruptionModels.EscapeCorruptionModel",
            "cleaningbenchmark.CorruptionModels.TypoCorruptionModel",
            "cleaningbenchmark.ModelEval",
            "cleaningbenchmark.ModelEval.EvalUtils",
            "cleaningbenchmark.NoiseModels",
            "cleaningbenchmark.NoiseModels.ConstraintModel",
            "cleaningbenchmark.NoiseModels.NoiseModel",
            "cleaningbenchmark.NoiseModels.RandomNoise",
            "cleaningbenchmark.NoiseModels.SystematicNoise",
            "cleaningbenchmark.Utils",
            "cleaningbenchmark.Utils.Utils",
            "cleaningbenchmark.WorkflowModels",
            "cleaningbenchmark.WorkflowModels.WorkFlowModel"
        ],
        "version": "0.0.1"
    },
    "cleanit": {
        "cmdline": [],
        "modules": [
            "cleanit",
            "cleanit.api",
            "cleanit.cli",
            "cleanit.config",
            "cleanit.rule",
            "cleanit.schema",
            "cleanit.subtitle"
        ],
        "version": "0.2.1"
    },
    "cleanm": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cleanmymac": {
        "cmdline": [],
        "modules": [
            "cleanmymac",
            "cleanmymac.__version__",
            "cleanmymac.cli",
            "cleanmymac.colors",
            "cleanmymac.constants",
            "cleanmymac.log",
            "cleanmymac.registry",
            "cleanmymac.schema",
            "cleanmymac.target",
            "cleanmymac.util",
            "cleanmymac/builtins",
            "cleanmymac/test.test_schema",
            "cleanmymac/test.test_util"
        ],
        "version": "0.1.17"
    },
    "cleanslate": {
        "cmdline": [
            "cleanslate"
        ],
        "modules": [
            "cleanslate",
            "cleanslate.cleanslate"
        ],
        "version": "0.21"
    },
    "cleanup-zope-persistent-registry": {
        "cmdline": [],
        "modules": [
            "cleanup_zope_persistent_registry",
            "cleanup_zope_persistent_registry.testing",
            "cleanup_zope_persistent_registry.tests",
            "cleanup_zope_persistent_registry.tests.test_cleanup"
        ],
        "version": "0.1.1"
    },
    "cleanupd": {
        "cmdline": [],
        "modules": [
            "deso.cleanup",
            "deso.cleanup.__meta__",
            "deso.cleanup.defer",
            "deso.cleanup.test",
            "deso.cleanup.test.testDefer"
        ],
        "version": "0.9.0.2"
    },
    "cleanweb": {
        "cmdline": [],
        "modules": [
            "cleanweb"
        ],
        "version": "2.0"
    },
    "clear": {
        "cmdline": [],
        "modules": [
            "clear",
            "clear.clear",
            "clear.database",
            "clear.epguides",
            "clear.extract",
            "clear.renamer",
            "clear.tvfile",
            "clear.util"
        ],
        "version": "1.0.1"
    },
    "clearance": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clearbit": {
        "cmdline": [],
        "modules": [
            "clearbit",
            "clearbit.discovery",
            "clearbit.enrichment",
            "clearbit.enrichment.company",
            "clearbit.enrichment.person",
            "clearbit.enrichment.person_company",
            "clearbit.error",
            "clearbit.prospector",
            "clearbit.resource",
            "clearbit.reveal",
            "clearbit.risk",
            "clearbit.tests",
            "clearbit.version",
            "clearbit.watchlist"
        ],
        "version": "0.1.5"
    },
    "clearbit-slack-python": {
        "cmdline": [],
        "modules": [
            "clearbit_slack",
            "clearbit_slack.attachments",
            "clearbit_slack.helpers",
            "clearbit_slack.notifier"
        ],
        "version": "0.1.1"
    },
    "clearcache-python": {
        "cmdline": [],
        "modules": [
            "clearcache",
            "clearcache.clearcache"
        ],
        "version": "0.0.8"
    },
    "clearest": {
        "cmdline": [],
        "modules": [
            "clearest",
            "clearest.core",
            "clearest.docs",
            "clearest.exceptions",
            "clearest.http",
            "clearest.wsgi",
            "sample",
            "sample.demo_simple_docs",
            "sample.demo_simple_get",
            "sample.demo_simple_post_var",
            "tests",
            "tests.test_application",
            "tests.test_docs",
            "tests.test_exceptions",
            "tests.test_http_exceptions",
            "tests.test_static",
            "tests.util",
            "tests.wsgi"
        ],
        "version": "0.3.5"
    },
    "clearfinder": {
        "cmdline": [
            "clearfinder.py"
        ],
        "modules": [
            "clearfinder"
        ],
        "version": "0.1.7"
    },
    "clearing-data": {
        "cmdline": [],
        "modules": [
            "checkBot",
            "checkBot.app",
            "createThumbs",
            "createThumbs.thumbing",
            "createZip",
            "createZip.zipping",
            "testingDataset",
            "testingDataset.clearing"
        ],
        "version": "0.9"
    },
    "clearinghouse": {
        "cmdline": [],
        "modules": [
            "clearinghouse"
        ],
        "version": "0.1"
    },
    "clearly": {
        "cmdline": [],
        "modules": [
            "clearly",
            "clearly.core",
            "clearly.task_info",
            "clearly.utils",
            "clearly.utils.colors"
        ],
        "version": "0.1.4"
    },
    "clearnlp-converter": {
        "cmdline": [],
        "modules": [
            "clearnlp",
            "clearnlp.converter",
            "clearnlp.tests",
            "clearnlp.tests.test_converter"
        ],
        "version": "0.1"
    },
    "clearplot": {
        "cmdline": [],
        "modules": [
            "clearplot",
            "clearplot.axes",
            "clearplot.axis_label",
            "clearplot.color_bar",
            "clearplot.colors",
            "clearplot.custom_annotations",
            "clearplot.figure",
            "clearplot.params",
            "clearplot.plot_functions",
            "clearplot.utilities"
        ],
        "version": "1.1.0"
    },
    "clearsale": {
        "cmdline": [],
        "modules": [
            "clearsale",
            "clearsale.api",
            "clearsale.entities",
            "clearsale.entities.base",
            "clearsale.entities.billing_data",
            "clearsale.entities.common",
            "clearsale.entities.item",
            "clearsale.entities.order",
            "clearsale.entities.payment",
            "clearsale.entities.shipping_data",
            "clearsale.responses"
        ],
        "version": "0.1"
    },
    "clearsilver": {
        "cmdline": [],
        "modules": [],
        "version": "0.10.1"
    },
    "clearskies": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clearwind.arecibo": {
        "cmdline": [],
        "modules": [
            "clearwind",
            "clearwind.arecibo",
            "clearwind.arecibo.browser",
            "clearwind.arecibo.browser.config",
            "clearwind.arecibo.config",
            "clearwind.arecibo.exportimport",
            "clearwind.arecibo.interfaces",
            "clearwind.arecibo.lib",
            "clearwind.arecibo.lib.arecibo",
            "clearwind.arecibo.lib.simplejson",
            "clearwind.arecibo.lib.simplejson.decoder",
            "clearwind.arecibo.lib.simplejson.encoder",
            "clearwind.arecibo.lib.simplejson.scanner",
            "clearwind.arecibo.lib.simplejson.tool",
            "clearwind.arecibo.patch",
            "clearwind.arecibo.setuphandlers",
            "clearwind.arecibo.tests",
            "clearwind.arecibo.wrapper"
        ],
        "version": "0.7"
    },
    "clearwrap": {
        "cmdline": [],
        "modules": [
            "clearwrap",
            "clearwrap.clearparser"
        ],
        "version": "0.2"
    },
    "cleave": {
        "cmdline": [],
        "modules": [
            "cleave",
            "cleave.debug",
            "cleave.encrypt",
            "cleave.http",
            "cleave.http.handler",
            "cleave.http.request",
            "cleave.http.response",
            "cleave.http.status",
            "cleave.server",
            "cleave.tool",
            "cleave.tool.serve"
        ],
        "version": "0.28"
    },
    "cleaver": {
        "cmdline": [],
        "modules": [
            "cleaver",
            "cleaver.backend",
            "cleaver.backend.db",
            "cleaver.backend.db.model",
            "cleaver.backend.db.session",
            "cleaver.base",
            "cleaver.compat",
            "cleaver.compat.abc",
            "cleaver.experiment",
            "cleaver.identity",
            "cleaver.identity.beaker",
            "cleaver.middleware",
            "cleaver.reports",
            "cleaver.reports.web",
            "cleaver.reports.web.bottle",
            "cleaver.tests",
            "cleaver.tests.backend",
            "cleaver.tests.backend.test_sqlalchemy",
            "cleaver.tests.identity",
            "cleaver.tests.identity.test_beaker",
            "cleaver.tests.reports",
            "cleaver.tests.reports.test_web",
            "cleaver.tests.test_base",
            "cleaver.tests.test_experiment",
            "cleaver.tests.test_middleware",
            "cleaver.tests.test_stack",
            "cleaver.tests.test_util",
            "cleaver.util"
        ],
        "version": "0.1.0"
    },
    "clee": {
        "cmdline": [],
        "modules": [
            "clee"
        ],
        "version": "0.3"
    },
    "cleese": {
        "cmdline": [],
        "modules": [
            "cleese",
            "cleese.executer",
            "cleese.status",
            "cleese.subprocess"
        ],
        "version": "0.2.1"
    },
    "clef": {
        "cmdline": [],
        "modules": [
            "clef",
            "clef.clef"
        ],
        "version": "0.0.8"
    },
    "clefstorm": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "cleo": {
        "cmdline": [],
        "modules": [
            "cleo",
            "cleo._compat",
            "cleo.application",
            "cleo.commands",
            "cleo.commands.base_command",
            "cleo.commands.command",
            "cleo.commands.completions",
            "cleo.commands.completions.templates",
            "cleo.commands.completions_command",
            "cleo.commands.help_command",
            "cleo.commands.list_command",
            "cleo.descriptors",
            "cleo.descriptors.application_description",
            "cleo.descriptors.descriptor",
            "cleo.descriptors.json_descriptor",
            "cleo.descriptors.markdown_descriptor",
            "cleo.descriptors.text_descriptor",
            "cleo.exceptions",
            "cleo.exceptions.command",
            "cleo.exceptions.exception",
            "cleo.exceptions.input",
            "cleo.formatters",
            "cleo.formatters.formatter",
            "cleo.helpers",
            "cleo.helpers.descriptor_helper",
            "cleo.helpers.formatter_helper",
            "cleo.helpers.helper",
            "cleo.helpers.helper_set",
            "cleo.helpers.progress_bar",
            "cleo.helpers.progress_helper",
            "cleo.helpers.progress_indicator",
            "cleo.helpers.question_helper",
            "cleo.helpers.table",
            "cleo.helpers.table_cell",
            "cleo.helpers.table_helper",
            "cleo.helpers.table_separator",
            "cleo.helpers.table_style",
            "cleo.inputs",
            "cleo.inputs.api",
            "cleo.inputs.argv_input",
            "cleo.inputs.input",
            "cleo.inputs.input_argument",
            "cleo.inputs.input_definition",
            "cleo.inputs.input_option",
            "cleo.inputs.list_input",
            "cleo.outputs",
            "cleo.outputs.buffered_output",
            "cleo.outputs.console_output",
            "cleo.outputs.null_output",
            "cleo.outputs.output",
            "cleo.outputs.stream_output",
            "cleo.parser",
            "cleo.questions",
            "cleo.questions.choice_question",
            "cleo.questions.confirmation_question",
            "cleo.questions.question",
            "cleo.styles",
            "cleo.styles.cleo_style",
            "cleo.styles.output_style",
            "cleo.terminal",
            "cleo.testers",
            "cleo.testers.application_tester",
            "cleo.testers.command_tester",
            "cleo.validators"
        ],
        "version": "0.6.0"
    },
    "clepy": {
        "cmdline": [],
        "modules": [
            "clepy",
            "clepy.dowski",
            "clepy.mattwilson"
        ],
        "version": "0.3.23"
    },
    "cletus": {
        "cmdline": [
            "cletus_archiver.py"
        ],
        "modules": [
            "cletus",
            "cletus._version",
            "cletus.cletus_config",
            "cletus.cletus_job",
            "cletus.cletus_job_extras",
            "cletus.cletus_log",
            "cletus.cletus_supp"
        ],
        "version": "1.0.14"
    },
    "cleveland": {
        "cmdline": [],
        "modules": [
            "cleveland",
            "cleveland.actor",
            "cleveland.broadcaster",
            "cleveland.message",
            "cleveland.version"
        ],
        "version": "0.2.1"
    },
    "clever": {
        "cmdline": [],
        "modules": [
            "clever",
            "clever.importer",
            "clever.version"
        ],
        "version": "2.3.1"
    },
    "clever-alexis": {
        "cmdline": [],
        "modules": [
            "alexis",
            "alexis.libs",
            "alexis.libs.clonevirtualenv",
            "alexis.libs.virtualenv",
            "alexis.rhel"
        ],
        "version": "0.1.1.dev5"
    },
    "cleverbot": {
        "cmdline": [],
        "modules": [
            "cleverbot",
            "cleverbot.cleverbot"
        ],
        "version": "2.0.0"
    },
    "cleverbot-io": {
        "cmdline": [],
        "modules": [
            "cleverbot_io"
        ],
        "version": "1.0.1"
    },
    "cleverbot2": {
        "cmdline": [],
        "modules": [
            "cleverbot"
        ],
        "version": "0.0.4"
    },
    "cleverbot3": {
        "cmdline": [],
        "modules": [
            "cleverbot3",
            "cleverbot3.cleverbot"
        ],
        "version": "0.1.2"
    },
    "cleverbox": {
        "cmdline": [
            "cleverbox-admin"
        ],
        "modules": [
            "cleverbox",
            "cleverbox.scripts",
            "cleverbox.scripts.admin",
            "cleverbox.upgrades",
            "cleverbox.upgrades.upgrades"
        ],
        "version": "0.4.4"
    },
    "clevercss": {
        "cmdline": [],
        "modules": [
            "clevercss"
        ],
        "version": "0.1"
    },
    "clevercss2": {
        "cmdline": [],
        "modules": [
            "clevercss2",
            "clevercss2.backwards",
            "clevercss2.consts",
            "clevercss2.ctranslator",
            "clevercss2.errors",
            "clevercss2.grammar",
            "clevercss2.translator",
            "clevercss2.values"
        ],
        "version": "0.5"
    },
    "clevererbot": {
        "cmdline": [],
        "modules": [
            "clevererbot"
        ],
        "version": "1.0"
    },
    "cleverharold": {
        "cmdline": [],
        "modules": [
            "harold",
            "harold.armor",
            "harold.armor.basetypes",
            "harold.armor.validatorexc",
            "harold.armor.validatorlib",
            "harold.cache",
            "harold.cache.decorators",
            "harold.cache.langoliers",
            "harold.cache.lib",
            "harold.cache.middleware",
            "harold.cache.storage",
            "harold.database",
            "harold.database.middleware",
            "harold.form",
            "harold.form.constructor",
            "harold.form.responder",
            "harold.form.responder.formexc",
            "harold.form.responder.jsonexc",
            "harold.lib",
            "harold.lib.configparser",
            "harold.lib.debug",
            "harold.lib.errordoc",
            "harold.lib.mppaste",
            "harold.lib.mpwsgi",
            "harold.log",
            "harold.log.middleware",
            "harold.plugins",
            "harold.plugins.createproject",
            "harold.plugins.factory",
            "harold.plugins.lib",
            "harold.plugins.modelshell",
            "harold.plugins.recreatemodel",
            "harold.plugins.serve",
            "harold.plugins.showproject",
            "harold.publishers",
            "harold.publishers.cheetahtemplate",
            "harold.publishers.common",
            "harold.publishers.kidtemplate",
            "harold.publishers.markdowntext",
            "harold.publishers.pythonmodule",
            "harold.publishers.rstext",
            "harold.sessions",
            "harold.sessions.lib",
            "harold.sessions.mpsession",
            "harold.tests",
            "harold.tests.files_four",
            "harold.tests.files_four.other",
            "harold.tests.files_four.pack",
            "harold.tests.files_four.pack.again",
            "harold.tests.files_mixed",
            "harold.tests.files_mixed.some",
            "harold.tests.lib",
            "harold.tests.mpsession_app",
            "harold.tests.test_all",
            "harold.tests.test_armor",
            "harold.tests.test_armorbasetypes",
            "harold.tests.test_basepub",
            "harold.tests.test_cache",
            "harold.tests.test_cheetahpub",
            "harold.tests.test_codepub",
            "harold.tests.test_dbapiprovider",
            "harold.tests.test_kidpub",
            "harold.tests.test_markdownpub",
            "harold.tests.test_mp_sessions",
            "harold.tests.test_pythonpub",
            "harold.tests.test_reqparam",
            "harold.tests.test_restpub",
            "harold.tests.test_sessions",
            "harold.views",
            "harold.views.defaults",
            "harold.views.site"
        ],
        "version": "0.1"
    },
    "cleverwrap": {
        "cmdline": [],
        "modules": [
            "cleverwrap",
            "cleverwrap.cleverwrap"
        ],
        "version": "0.2.3.2"
    },
    "clew": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clewareadc": {
        "cmdline": [],
        "modules": [
            "clewareADC",
            "clewareADC.clewareADC"
        ],
        "version": "0.1"
    },
    "clewareampel": {
        "cmdline": [],
        "modules": [
            "clewareampel"
        ],
        "version": "2014.11.20"
    },
    "clf": {
        "cmdline": [],
        "modules": [
            "clf",
            "clf.api",
            "clf.command",
            "clf.constants",
            "clf.exceptions"
        ],
        "version": "0.5.7"
    },
    "clfparser": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clg": {
        "cmdline": [],
        "modules": [
            "clg"
        ],
        "version": "2.3.1"
    },
    "clhash": {
        "cmdline": [],
        "modules": [],
        "version": "1.002"
    },
    "cli": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cli-aoke": {
        "cmdline": [
            "cli-aoke"
        ],
        "modules": [
            "src",
            "src.lyrics",
            "src.scrape",
            "src.songs",
            "src.threads"
        ],
        "version": "1.1.0"
    },
    "cli-bdd": {
        "cmdline": [],
        "modules": [
            "cli_bdd",
            "cli_bdd/behave",
            "cli_bdd/behave/steps",
            "cli_bdd/behave/steps.command",
            "cli_bdd/behave/steps.environment",
            "cli_bdd/behave/steps.file",
            "cli_bdd/behave/steps.mixins",
            "cli_bdd/core",
            "cli_bdd/core/steps",
            "cli_bdd/core/steps.base",
            "cli_bdd/core/steps.command",
            "cli_bdd/core/steps.environment",
            "cli_bdd/core/steps.file",
            "cli_bdd/lettuce",
            "cli_bdd/lettuce/steps",
            "cli_bdd/lettuce/steps.command",
            "cli_bdd/lettuce/steps.environment",
            "cli_bdd/lettuce/steps.file",
            "cli_bdd/lettuce/steps.mixins"
        ],
        "version": "0.0.4"
    },
    "cli-deform": {
        "cmdline": [],
        "modules": [
            "src",
            "src.deform",
            "src.utils"
        ],
        "version": "1.0.2"
    },
    "cli-dev": {
        "cmdline": [],
        "modules": [
            "dev"
        ],
        "version": "0.1.1"
    },
    "cli-github": {
        "cmdline": [],
        "modules": [
            "cli_github",
            "cli_github.mains",
            "cli_github.utils"
        ],
        "version": "1.0.9"
    },
    "cli-helpers": {
        "cmdline": [],
        "modules": [
            "cli_helpers",
            "cli_helpers.compat",
            "cli_helpers.packages",
            "cli_helpers.packages.tabulate",
            "cli_helpers.tabular_output",
            "cli_helpers.tabular_output.delimited_output_adapter",
            "cli_helpers.tabular_output.output_formatter",
            "cli_helpers.tabular_output.preprocessors",
            "cli_helpers.tabular_output.tabulate_adapter",
            "cli_helpers.tabular_output.terminaltables_adapter",
            "cli_helpers.tabular_output.vertical_table_adapter",
            "cli_helpers.utils",
            "tests.tabular_output",
            "tests.tabular_output.test_delimited_output_adapter",
            "tests.tabular_output.test_output_formatter",
            "tests.tabular_output.test_preprocessors",
            "tests.tabular_output.test_tabulate_adapter",
            "tests.tabular_output.test_terminaltables_adapter",
            "tests.tabular_output.test_vertical_table_adapter"
        ],
        "version": "0.1.0"
    },
    "cli-mock": {
        "cmdline": [],
        "modules": [
            "cli_mock",
            "cli_mock.crecord",
            "cli_mock.creplay",
            "cli_mock.pytest_plugin"
        ],
        "version": "0.2.0"
    },
    "cli-passwords": {
        "cmdline": [],
        "modules": [
            "cli_passwords",
            "cli_passwords.cli_passwords"
        ],
        "version": "0.1.2"
    },
    "cli-subcommand": {
        "cmdline": [],
        "modules": [
            "subcommand"
        ],
        "version": "1.0.1"
    },
    "cli-switchmonitor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cli-tools": {
        "cmdline": [],
        "modules": [
            "cli_tools"
        ],
        "version": "1.0.0"
    },
    "cli-utils": {
        "cmdline": [],
        "modules": [
            "cli_utils",
            "cli_utils.get_time",
            "cli_utils.menu",
            "cli_utils.unit_tests",
            "cli_utils.unit_tests.menu_test"
        ],
        "version": "1.0.2"
    },
    "cli2man": {
        "cmdline": [
            "cli2man"
        ],
        "modules": [],
        "version": "0.2.4"
    },
    "cli2msml": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "cli2web": {
        "cmdline": [],
        "modules": [
            "cli2web"
        ],
        "version": "0.1"
    },
    "cli50": {
        "cmdline": [
            "cli50"
        ],
        "modules": [],
        "version": "1.1.0"
    },
    "cli53": {
        "cmdline": [
            "cli53"
        ],
        "modules": [
            "cli53",
            "cli53.client",
            "tests",
            "tests.common",
            "tests.test_bind",
            "tests.test_commands",
            "tests.test_domains"
        ],
        "version": "0.5.2"
    },
    "cliar": {
        "cmdline": [],
        "modules": [
            "cliar",
            "cliar.legacy",
            "cliar.legacy.cliar",
            "cliar.modern",
            "cliar.modern.cliar"
        ],
        "version": "1.1.4"
    },
    "cliargs": {
        "cmdline": [],
        "modules": [
            "cliargs"
        ],
        "version": "1.0"
    },
    "cliask": {
        "cmdline": [],
        "modules": [
            "cliask"
        ],
        "version": "0.0.4"
    },
    "clibobo": {
        "cmdline": [],
        "modules": [
            "clibobo",
            "clibobo.clibobo"
        ],
        "version": "0.1"
    },
    "clibuilder": {
        "cmdline": [],
        "modules": [
            "cli"
        ],
        "version": "0.1.7"
    },
    "clicarriots": {
        "cmdline": [],
        "modules": [
            "clicarriots",
            "clicarriots.api",
            "clicarriots.client"
        ],
        "version": "0.1"
    },
    "clicast": {
        "cmdline": [],
        "modules": [
            "clicast",
            "clicast.cast",
            "clicast.editor",
            "clicast.filters"
        ],
        "version": "0.4.5"
    },
    "cliche": {
        "cmdline": [],
        "modules": [
            "cliche",
            "cliche.core",
            "cliche.framework",
            "cliche.main"
        ],
        "version": "0.1"
    },
    "clicheck": {
        "cmdline": [
            "clicheck"
        ],
        "modules": [
            "clicheck",
            "clicheck.commands"
        ],
        "version": "0.1.0"
    },
    "click": {
        "cmdline": [],
        "modules": [
            "click",
            "click._bashcomplete",
            "click._compat",
            "click._termui_impl",
            "click._textwrap",
            "click._unicodefun",
            "click._winconsole",
            "click.core",
            "click.decorators",
            "click.exceptions",
            "click.formatting",
            "click.globals",
            "click.parser",
            "click.termui",
            "click.testing",
            "click.types",
            "click.utils"
        ],
        "version": "6.7"
    },
    "click-completion": {
        "cmdline": [],
        "modules": [
            "click_completion"
        ],
        "version": "0.2.1"
    },
    "click-conf": {
        "cmdline": [],
        "modules": [
            "click_conf"
        ],
        "version": "0.0.1"
    },
    "click-config": {
        "cmdline": [],
        "modules": [
            "click_config"
        ],
        "version": "1.2.0"
    },
    "click-configfile": {
        "cmdline": [],
        "modules": [
            "click_configfile"
        ],
        "version": "0.2.2"
    },
    "click-datetime": {
        "cmdline": [],
        "modules": [
            "click_datetime"
        ],
        "version": "0.2"
    },
    "click-default-group": {
        "cmdline": [],
        "modules": [
            "click_default_group"
        ],
        "version": "1.2"
    },
    "click-didyoumean": {
        "cmdline": [],
        "modules": [
            "click_didyoumean"
        ],
        "version": "0.0.3"
    },
    "click-extensions": {
        "cmdline": [],
        "modules": [
            "click_extensions",
            "click_extensions.commands",
            "click_extensions.decorators",
            "click_extensions.exit_codes",
            "click_extensions.private_dir",
            "click_extensions.utils"
        ],
        "version": "1.1.0"
    },
    "click-fish": {
        "cmdline": [],
        "modules": [
            "click_fish"
        ],
        "version": "0.1.0"
    },
    "click-help-colors": {
        "cmdline": [],
        "modules": [
            "click_help_colors"
        ],
        "version": "0.4"
    },
    "click-log": {
        "cmdline": [],
        "modules": [
            "click_log",
            "click_log.core",
            "click_log.options"
        ],
        "version": "0.1.8"
    },
    "click-man": {
        "cmdline": [],
        "modules": [
            "click_man",
            "click_man.commands",
            "click_man.commands.man_pages",
            "click_man.core",
            "click_man.man",
            "tests",
            "tests.test_man"
        ],
        "version": "0.2.1"
    },
    "click-manage": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "click-plugins": {
        "cmdline": [],
        "modules": [
            "click_plugins",
            "click_plugins.core"
        ],
        "version": "1.0.3"
    },
    "click-repl": {
        "cmdline": [],
        "modules": [
            "click_repl",
            "click_repl.exceptions"
        ],
        "version": "0.1.2"
    },
    "click-shell": {
        "cmdline": [],
        "modules": [
            "click_shell",
            "click_shell._cmd",
            "click_shell._compat",
            "click_shell.core",
            "click_shell.decorators",
            "click_shell.version"
        ],
        "version": "1.0"
    },
    "click-spinner": {
        "cmdline": [],
        "modules": [
            "click_spinner",
            "click_spinner._version"
        ],
        "version": "0.1.7"
    },
    "click-stream": {
        "cmdline": [],
        "modules": [
            "click_stream"
        ],
        "version": "0.0.5"
    },
    "click-threading": {
        "cmdline": [],
        "modules": [
            "click_threading",
            "click_threading._compat",
            "click_threading.monkey"
        ],
        "version": "0.4.3"
    },
    "click-toolbelt": {
        "cmdline": [],
        "modules": [
            "click_toolbelt",
            "click_toolbelt.channels",
            "click_toolbelt.common",
            "click_toolbelt.compat",
            "click_toolbelt.config",
            "click_toolbelt.constants",
            "click_toolbelt.info",
            "click_toolbelt.login",
            "click_toolbelt.tests",
            "click_toolbelt.tests.test_channels",
            "click_toolbelt.tests.test_common",
            "click_toolbelt.tests.test_config",
            "click_toolbelt.tests.test_info",
            "click_toolbelt.tests.test_login",
            "click_toolbelt.tests.test_toolbelt",
            "click_toolbelt.tests.test_upload",
            "click_toolbelt.toolbelt",
            "click_toolbelt.upload",
            "storeapi",
            "storeapi._login",
            "storeapi._upload",
            "storeapi.channels",
            "storeapi.common",
            "storeapi.compat",
            "storeapi.constants",
            "storeapi.info",
            "storeapi.tests",
            "storeapi.tests.test_channels",
            "storeapi.tests.test_common",
            "storeapi.tests.test_info",
            "storeapi.tests.test_login",
            "storeapi.tests.test_upload"
        ],
        "version": "0.5.1"
    },
    "click-utils": {
        "cmdline": [],
        "modules": [
            "click_utils",
            "click_utils.defaults",
            "click_utils.help",
            "click_utils.logging"
        ],
        "version": "0.2.1"
    },
    "click-uwescience": {
        "cmdline": [],
        "modules": [
            "click",
            "click._bashcomplete",
            "click._compat",
            "click._termui_impl",
            "click._textwrap",
            "click._unicodefun",
            "click._winconsole",
            "click.core",
            "click.decorators",
            "click.exceptions",
            "click.formatting",
            "click.globals",
            "click.parser",
            "click.termui",
            "click.testing",
            "click.types",
            "click.utils"
        ],
        "version": "7.0"
    },
    "clickatell": {
        "cmdline": [],
        "modules": [
            "clickatell",
            "clickatell.exception",
            "clickatell.http",
            "clickatell.rest"
        ],
        "version": "0.1.2"
    },
    "clickchronicle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clickclick": {
        "cmdline": [],
        "modules": [
            "clickclick",
            "clickclick.console"
        ],
        "version": "1.2.1"
    },
    "clicker-server": {
        "cmdline": [],
        "modules": [
            "server",
            "server.text"
        ],
        "version": "0.1"
    },
    "clickhouse": {
        "cmdline": [],
        "modules": [
            "clickhouse",
            "clickhouse.database",
            "clickhouse.engines",
            "clickhouse.fields",
            "clickhouse.models",
            "clickhouse.utils"
        ],
        "version": "0.1.6"
    },
    "clickhouse-cli": {
        "cmdline": [],
        "modules": [
            "clickhouse_cli",
            "clickhouse_cli.cli",
            "clickhouse_cli.clickhouse",
            "clickhouse_cli.clickhouse.client",
            "clickhouse_cli.clickhouse.definitions",
            "clickhouse_cli.clickhouse.exceptions",
            "clickhouse_cli.clickhouse.sqlparse_patch",
            "clickhouse_cli.config",
            "clickhouse_cli.helpers",
            "clickhouse_cli.ui",
            "clickhouse_cli.ui.completer",
            "clickhouse_cli.ui.lexer",
            "clickhouse_cli.ui.parseutils",
            "clickhouse_cli.ui.parseutils.ctes",
            "clickhouse_cli.ui.parseutils.helpers",
            "clickhouse_cli.ui.parseutils.meta",
            "clickhouse_cli.ui.parseutils.tables",
            "clickhouse_cli.ui.parseutils.utils",
            "clickhouse_cli.ui.prompt",
            "clickhouse_cli.ui.style"
        ],
        "version": "0.2.1"
    },
    "clickhouse-driver": {
        "cmdline": [],
        "modules": [
            "clickhouse_driver",
            "clickhouse_driver.block",
            "clickhouse_driver.blockstreamprofileinfo",
            "clickhouse_driver.client",
            "clickhouse_driver.clientinfo",
            "clickhouse_driver.columns",
            "clickhouse_driver.columns.column",
            "clickhouse_driver.columns.read",
            "clickhouse_driver.columns.write",
            "clickhouse_driver.connection",
            "clickhouse_driver.defines",
            "clickhouse_driver.errors",
            "clickhouse_driver.progress",
            "clickhouse_driver.protocol",
            "clickhouse_driver.queryprocessingstage",
            "clickhouse_driver.reader",
            "clickhouse_driver.readhelpers",
            "clickhouse_driver.stream",
            "clickhouse_driver.util",
            "clickhouse_driver.util.tzinfo",
            "clickhouse_driver.writer"
        ],
        "version": "0.0.2"
    },
    "clickhouse-sqlalchemy": {
        "cmdline": [],
        "modules": [
            "clickhouse_sqlalchemy",
            "clickhouse_sqlalchemy.base",
            "clickhouse_sqlalchemy.connector",
            "clickhouse_sqlalchemy.ddl",
            "clickhouse_sqlalchemy.declarative",
            "clickhouse_sqlalchemy.engines",
            "clickhouse_sqlalchemy.escaper",
            "clickhouse_sqlalchemy.exceptions",
            "clickhouse_sqlalchemy.schema",
            "clickhouse_sqlalchemy.session",
            "clickhouse_sqlalchemy.transport",
            "clickhouse_sqlalchemy.types",
            "clickhouse_sqlalchemy.utils"
        ],
        "version": "0.0.1"
    },
    "clickmodels": {
        "cmdline": [
            "compare_click_models.py",
            "generate_serp.py",
            "run_inference.py"
        ],
        "modules": [
            "clickmodels",
            "clickmodels.bootstrap",
            "clickmodels.config_sample",
            "clickmodels.inference",
            "clickmodels.input_reader"
        ],
        "version": "1.0.2"
    },
    "clicksend": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clickutil": {
        "cmdline": [],
        "modules": [
            "clickutil",
            "clickutil.args",
            "clickutil.argspec",
            "clickutil.call",
            "clickutil.command",
            "clickutil.debug",
            "clickutil.util",
            "clickutil.version"
        ],
        "version": "0.0.4"
    },
    "clicol": {
        "cmdline": [],
        "modules": [
            "clicol",
            "clicol.clicol",
            "clicol.cm_cisco",
            "clicol.cm_common",
            "clicol.cm_juniper",
            "clicol.colors",
            "clicol.ct_dark",
            "clicol.ct_light",
            "tests",
            "tests.listcolors"
        ],
        "version": "0.0.7"
    },
    "clicolors": {
        "cmdline": [],
        "modules": [
            "clicolors",
            "clicolors.clicolors"
        ],
        "version": "0.2"
    },
    "clicombine": {
        "cmdline": [
            "cli-combine"
        ],
        "modules": [
            "clicombine",
            "clicombine.additional_casa_commands",
            "clicombine.cli",
            "clicombine.combinedriver",
            "clicombine.combineparser",
            "clicombine.commands",
            "clicombine.utils"
        ],
        "version": "0.1.114"
    },
    "clicore": {
        "cmdline": [],
        "modules": [
            "clicore",
            "clicore.clihelper",
            "clicore.cliitem",
            "clicore.core"
        ],
        "version": "0.00.04"
    },
    "clicrud": {
        "cmdline": [],
        "modules": [
            "clicrud",
            "clicrud.clicrud",
            "clicrud.clicrud.helpers",
            "clicrud.clicrud.multiprocess",
            "clicrud.clicrud.setup",
            "clicrud.clicrud.templatehelpers",
            "clicrud.crud",
            "clicrud.device",
            "clicrud.device.generic",
            "clicrud.device.generic.ver",
            "clicrud.device.generic.ver.base",
            "tests"
        ],
        "version": "0.3.3"
    },
    "client": {
        "cmdline": [],
        "modules": [
            "client"
        ],
        "version": "0.0.1"
    },
    "clientcookie": {
        "cmdline": [],
        "modules": [
            "ClientCookie",
            "ClientCookie._BSDDBCookieJar",
            "ClientCookie._ClientCookie",
            "ClientCookie._ConnCache",
            "ClientCookie._Debug",
            "ClientCookie._HeadersUtil",
            "ClientCookie._LWPCookieJar",
            "ClientCookie._MSIECookieJar",
            "ClientCookie._MSIEDBCookieJar",
            "ClientCookie._MozillaCookieJar",
            "ClientCookie._Opener",
            "ClientCookie._Request",
            "ClientCookie._Util",
            "ClientCookie._urllib2_support"
        ],
        "version": "1.3.0"
    },
    "cliente-andamentos": {
        "cmdline": [],
        "modules": [
            "cliente",
            "cliente.exceptions",
            "cliente.oab",
            "cliente.processo"
        ],
        "version": "0.1.6"
    },
    "clientform": {
        "cmdline": [],
        "modules": [
            "ClientForm"
        ],
        "version": "0.2.10"
    },
    "clientliblib": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0.0"
    },
    "clientmoe": {
        "cmdline": [],
        "modules": [
            "moe",
            "moe.bandit",
            "moe.bandit.bandit_interface",
            "moe.bandit.bla",
            "moe.bandit.bla.bla",
            "moe.bandit.constant",
            "moe.bandit.data_containers",
            "moe.bandit.epsilon",
            "moe.bandit.epsilon.epsilon_first",
            "moe.bandit.epsilon.epsilon_greedy",
            "moe.bandit.epsilon.epsilon_interface",
            "moe.bandit.linkers",
            "moe.bandit.ucb",
            "moe.bandit.ucb.ucb1",
            "moe.bandit.ucb.ucb1_tuned",
            "moe.bandit.ucb.ucb_interface",
            "moe.bandit.utils",
            "moe.easy_interface",
            "moe.easy_interface.bandit_simple_endpoint",
            "moe.easy_interface.experiment",
            "moe.easy_interface.simple_endpoint",
            "moe.optimal_learning",
            "moe.optimal_learning.python",
            "moe.optimal_learning.python.comparison",
            "moe.optimal_learning.python.constant",
            "moe.optimal_learning.python.data_containers",
            "moe.optimal_learning.python.geometry_utils",
            "moe.optimal_learning.python.interfaces",
            "moe.optimal_learning.python.interfaces.covariance_interface",
            "moe.optimal_learning.python.interfaces.domain_interface",
            "moe.optimal_learning.python.interfaces.expected_improvement_interface",
            "moe.optimal_learning.python.interfaces.gaussian_process_interface",
            "moe.optimal_learning.python.interfaces.log_likelihood_interface",
            "moe.optimal_learning.python.interfaces.optimization_interface",
            "moe.optimal_learning.python.linkers",
            "moe.optimal_learning.python.python_version",
            "moe.optimal_learning.python.python_version.covariance",
            "moe.optimal_learning.python.python_version.domain",
            "moe.optimal_learning.python.python_version.expected_improvement",
            "moe.optimal_learning.python.python_version.gaussian_process",
            "moe.optimal_learning.python.python_version.log_likelihood",
            "moe.optimal_learning.python.python_version.optimization",
            "moe.optimal_learning.python.python_version.python_utils",
            "moe.optimal_learning.python.repeated_domain",
            "moe.optimal_learning.python.timing",
            "moe.resources",
            "moe.tests",
            "moe.tests.bandit",
            "moe.tests.bandit.bandit_interface_test",
            "moe.tests.bandit.bandit_test_case",
            "moe.tests.bandit.bla",
            "moe.tests.bandit.bla.bla_test",
            "moe.tests.bandit.data_containers_test",
            "moe.tests.bandit.epsilon",
            "moe.tests.bandit.epsilon.epsilon_first_test",
            "moe.tests.bandit.epsilon.epsilon_greedy_test",
            "moe.tests.bandit.epsilon.epsilon_test",
            "moe.tests.bandit.epsilon.epsilon_test_case",
            "moe.tests.bandit.linkers_test",
            "moe.tests.bandit.ucb",
            "moe.tests.bandit.ucb.ucb1_test",
            "moe.tests.bandit.ucb.ucb1_tuned_test",
            "moe.tests.bandit.ucb.ucb_test_case",
            "moe.tests.bandit.utils_test",
            "moe.tests.optimal_learning",
            "moe.tests.optimal_learning.python",
            "moe.tests.optimal_learning.python.comparison_test",
            "moe.tests.optimal_learning.python.cpp_unit_tests",
            "moe.tests.optimal_learning.python.cpp_unit_tests.cpp_unit_test_wrapper_test",
            "moe.tests.optimal_learning.python.cpp_wrappers",
            "moe.tests.optimal_learning.python.cpp_wrappers.exception_test",
            "moe.tests.optimal_learning.python.cpp_wrappers.expected_improvement_test",
            "moe.tests.optimal_learning.python.cpp_wrappers.gaussian_process_test",
            "moe.tests.optimal_learning.python.cpp_wrappers.log_likelihood_test",
            "moe.tests.optimal_learning.python.cpp_wrappers.optimization_test",
            "moe.tests.optimal_learning.python.gaussian_process_test_case",
            "moe.tests.optimal_learning.python.gaussian_process_test_utils",
            "moe.tests.optimal_learning.python.geometry_utils_test",
            "moe.tests.optimal_learning.python.linkers_test",
            "moe.tests.optimal_learning.python.optimal_learning_test_case",
            "moe.tests.optimal_learning.python.python_version",
            "moe.tests.optimal_learning.python.python_version.covariance_test",
            "moe.tests.optimal_learning.python.python_version.expected_improvement_test",
            "moe.tests.optimal_learning.python.python_version.log_likelihood_test",
            "moe.tests.optimal_learning.python.python_version.optimization_test",
            "moe.tests.views",
            "moe.tests.views.exceptions_test",
            "moe.tests.views.rest",
            "moe.tests.views.rest.bandit_bla_test",
            "moe.tests.views.rest.bandit_epsilon_test",
            "moe.tests.views.rest.bandit_test",
            "moe.tests.views.rest.bandit_ucb_test",
            "moe.tests.views.rest.gp_ei_test",
            "moe.tests.views.rest.gp_hyper_opt_test",
            "moe.tests.views.rest.gp_mean_var_test",
            "moe.tests.views.rest.gp_next_points_test",
            "moe.tests.views.rest_test_case",
            "moe.tests.views.utils_test",
            "moe.views",
            "moe.views.bandit_pretty_view",
            "moe.views.constant",
            "moe.views.exceptions",
            "moe.views.frontend",
            "moe.views.gp_next_points_pretty_view",
            "moe.views.gp_pretty_view",
            "moe.views.optimizable_gp_pretty_view",
            "moe.views.pretty_view",
            "moe.views.schemas",
            "moe.views.schemas.bandit_pretty_view",
            "moe.views.schemas.base_schemas",
            "moe.views.schemas.gp_next_points_pretty_view",
            "moe.views.schemas.rest",
            "moe.views.schemas.rest.bandit_bla",
            "moe.views.schemas.rest.bandit_epsilon",
            "moe.views.schemas.rest.bandit_ucb",
            "moe.views.schemas.rest.gp_ei",
            "moe.views.schemas.rest.gp_hyper_opt",
            "moe.views.schemas.rest.gp_mean_var",
            "moe.views.schemas.rest.gp_next_points_constant_liar",
            "moe.views.schemas.rest.gp_next_points_kriging",
            "moe.views.utils",
            "moe_examples",
            "moe_examples.bandit_example",
            "moe_examples.blog_post_example_ab_testing",
            "moe_examples.combined_example",
            "moe_examples.hyper_opt_of_gp_from_historical_data",
            "moe_examples.mean_and_var_of_gp_from_historic_data",
            "moe_examples.next_point_via_simple_endpoint",
            "moe_examples.tests",
            "moe_examples.tests.bandit_example_test",
            "moe_examples.tests.combined_example_test",
            "moe_examples.tests.hyper_opt_of_gp_from_historical_data_test",
            "moe_examples.tests.mean_and_var_of_gp_from_historic_data_test",
            "moe_examples.tests.moe_example_test_case",
            "moe_examples.tests.next_point_via_simple_endpoint_test"
        ],
        "version": "0.1"
    },
    "clients": {
        "cmdline": [],
        "modules": [
            "clients"
        ],
        "version": "0.3"
    },
    "clientsubnetoption": {
        "cmdline": [],
        "modules": [
            "clientsubnetoption"
        ],
        "version": "2.1.0"
    },
    "clienttable": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cliez": {
        "cmdline": [],
        "modules": [
            "cliez",
            "cliez.component",
            "cliez.components",
            "cliez.components.check",
            "cliez.components.create",
            "cliez.components.init",
            "cliez.conf",
            "cliez.main",
            "cliez.parser",
            "cliez.slot",
            "cliez.utils"
        ],
        "version": "2.0.9"
    },
    "clif": {
        "cmdline": [],
        "modules": [
            "clif",
            "clif.conf",
            "clif.logger"
        ],
        "version": "0.2.2"
    },
    "clifa": {
        "cmdline": [],
        "modules": [
            "clifa",
            "clifa_launch"
        ],
        "version": "0.2.2"
    },
    "clifactory": {
        "cmdline": [],
        "modules": [
            "clifactory",
            "clifactory.clifactory"
        ],
        "version": "0.1.1"
    },
    "cliff": {
        "cmdline": [],
        "modules": [],
        "version": "2.7.0"
    },
    "cliff-rackspace": {
        "cmdline": [],
        "modules": [
            "cliff_rackspace",
            "cliff_rackspace.command_manager",
            "cliff_rackspace.commands",
            "cliff_rackspace.commands.help",
            "cliff_rackspace.formatters"
        ],
        "version": "0.1.1"
    },
    "cliff-tablib": {
        "cmdline": [],
        "modules": [
            "clifftablib",
            "clifftablib.formatters"
        ],
        "version": "2.0"
    },
    "cliffdemo": {
        "cmdline": [],
        "modules": [
            "cliffdemo",
            "cliffdemo.list",
            "cliffdemo.main",
            "cliffdemo.show",
            "cliffdemo.simple"
        ],
        "version": "0.2"
    },
    "clifford": {
        "cmdline": [],
        "modules": [
            "clifford",
            "clifford.tools"
        ],
        "version": "0.8"
    },
    "clifig": {
        "cmdline": [
            "clifig"
        ],
        "modules": [
            "clifig"
        ],
        "version": "0.1"
    },
    "clifresh": {
        "cmdline": [],
        "modules": [
            "clifresh"
        ],
        "version": "5"
    },
    "clifton-jasmine": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cligenerator": {
        "cmdline": [],
        "modules": [
            "cligenerator",
            "cligenerator.cligenerator"
        ],
        "version": "1.0.2"
    },
    "cligj": {
        "cmdline": [],
        "modules": [
            "cligj",
            "cligj.features",
            "cligj.plugins"
        ],
        "version": "0.4.0"
    },
    "cligraphy": {
        "cmdline": [],
        "modules": [
            "cligraphy",
            "cligraphy.core",
            "cligraphy.core.capture",
            "cligraphy.core.capture.fmt_capnp",
            "cligraphy.core.capture.ptysnoop",
            "cligraphy.core.capture.termsize",
            "cligraphy.core.cli",
            "cligraphy.core.decorators",
            "cligraphy.core.lib",
            "cligraphy.core.lib.cli_ui",
            "cligraphy.core.lib.ssh",
            "cligraphy.core.lib.times",
            "cligraphy.core.log",
            "cligraphy.core.parsers",
            "cligraphy.core.reporting",
            "cligraphy.core.tracking",
            "cligraphy.core.util"
        ],
        "version": "0.0.3"
    },
    "cligui": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clihelper": {
        "cmdline": [],
        "modules": [
            "clihelper",
            "clihelper.initialize"
        ],
        "version": "1.7.6"
    },
    "clihub": {
        "cmdline": [],
        "modules": [
            "clihub",
            "clihub.account",
            "clihub.gist",
            "clihub.issue",
            "clihub.release",
            "clihub.repository",
            "clihub.scripts",
            "clihub.scripts.clihub"
        ],
        "version": "0.1"
    },
    "clijockey": {
        "cmdline": [],
        "modules": [
            "clijockey",
            "clijockey.error",
            "clijockey.lib",
            "clijockey.traits",
            "clijockey.util"
        ],
        "version": "0.1.7"
    },
    "clik": {
        "cmdline": [],
        "modules": [
            "clik",
            "clik.app",
            "clik.globals",
            "clik.local",
            "clik.util"
        ],
        "version": "0.5-alpha.2"
    },
    "clikraken": {
        "cmdline": [],
        "modules": [
            "clikraken",
            "clikraken.__about__",
            "clikraken.api",
            "clikraken.api.api_utils",
            "clikraken.api.private",
            "clikraken.api.private.cancel_order",
            "clikraken.api.private.get_balance",
            "clikraken.api.private.list_closed_orders",
            "clikraken.api.private.list_open_orders",
            "clikraken.api.private.place_order",
            "clikraken.api.public",
            "clikraken.api.public.asset_pairs",
            "clikraken.api.public.depth",
            "clikraken.api.public.last_trades",
            "clikraken.api.public.ticker",
            "clikraken.clikraken",
            "clikraken.clikraken_cmd",
            "clikraken.clikraken_utils",
            "clikraken.global_vars",
            "clikraken.log_utils"
        ],
        "version": "0.6.0"
    },
    "clim": {
        "cmdline": [],
        "modules": [
            "clim",
            "clim.clim"
        ],
        "version": "1.0.1"
    },
    "climactic": {
        "cmdline": [],
        "modules": [
            "climactic",
            "climactic.case",
            "climactic.cli",
            "climactic.collector",
            "climactic.command",
            "climactic.errors",
            "climactic.parser",
            "climactic.plugins",
            "climactic.plugins.pytest",
            "climactic.runner",
            "climactic.state",
            "climactic.suite",
            "climactic.tag",
            "climactic.test",
            "climactic.test.test_parser",
            "climactic.test.test_utility",
            "climactic.utility"
        ],
        "version": "0.3.0"
    },
    "climata": {
        "cmdline": [
            "acis_data.py",
            "acis_sites.py"
        ],
        "modules": [
            "climata",
            "climata.acis",
            "climata.acis.constants",
            "climata.base",
            "climata.cocorahs",
            "climata.fips",
            "climata.huc8",
            "climata.hydromet",
            "climata.nws",
            "climata.nws.parsers",
            "climata.parsers",
            "climata.snotel",
            "climata.usgs",
            "climata.usgs.constants",
            "climata.version"
        ],
        "version": "0.4.1"
    },
    "climate": {
        "cmdline": [],
        "modules": [
            "climate",
            "climate.flags",
            "climate.log"
        ],
        "version": "0.4.6"
    },
    "climate-images-kma": {
        "cmdline": [],
        "modules": [
            "get_image"
        ],
        "version": "1.0.1"
    },
    "climatecontrol": {
        "cmdline": [],
        "modules": [
            "climatecontrol",
            "climatecontrol.cli_utils",
            "climatecontrol.logtools",
            "climatecontrol.settings_parser"
        ],
        "version": "0.2.6"
    },
    "climax": {
        "cmdline": [],
        "modules": [
            "climax"
        ],
        "version": "0.3.1"
    },
    "climb": {
        "cmdline": [],
        "modules": [
            "climb",
            "climb.args",
            "climb.commands",
            "climb.completer",
            "climb.config",
            "climb.core",
            "climb.exceptions",
            "climb.paths"
        ],
        "version": "0.3.2"
    },
    "climber": {
        "cmdline": [],
        "modules": [
            "climber",
            "climber.models",
            "climber.summary",
            "climber.urls",
            "climber.views"
        ],
        "version": "0.1.4"
    },
    "clime": {
        "cmdline": [],
        "modules": [
            "clime",
            "clime.core",
            "clime.now",
            "clime.util"
        ],
        "version": "0.3.1"
    },
    "climenu": {
        "cmdline": [],
        "modules": [
            "climenu"
        ],
        "version": "1.2.0"
    },
    "climenuhelper": {
        "cmdline": [],
        "modules": [
            "CliMenuHelper"
        ],
        "version": "0.5"
    },
    "climesync": {
        "cmdline": [
            "climesync.py",
            "commands.py",
            "util.py"
        ],
        "modules": [
            "climesync",
            "climesync.climesync",
            "climesync.commands",
            "climesync.util",
            "testing",
            "testing.test_climesync",
            "testing.test_commands",
            "testing.test_data",
            "testing.test_scripting",
            "testing.test_util"
        ],
        "version": "0.1.1"
    },
    "climin": {
        "cmdline": [],
        "modules": [
            "climin",
            "climin.adadelta",
            "climin.adam",
            "climin.asgd",
            "climin.base",
            "climin.bfgs",
            "climin.cg",
            "climin.compat",
            "climin.gd",
            "climin.initialize",
            "climin.linesearch",
            "climin.mathadapt",
            "climin.nes",
            "climin.project",
            "climin.rmsprop",
            "climin.rprop",
            "climin.schedule",
            "climin.smd",
            "climin.stops",
            "climin.stops.stops",
            "climin.util",
            "test",
            "test.common",
            "test.losses",
            "test.test_adadelta",
            "test.test_asgd",
            "test.test_bfgs",
            "test.test_cg",
            "test.test_gd",
            "test.test_initialize",
            "test.test_lbfgs",
            "test.test_linesearch",
            "test.test_ncg",
            "test.test_nes",
            "test.test_rmsprop",
            "test.test_rprop",
            "test.test_sbfgs",
            "test.test_smd",
            "test.test_stops",
            "test.test_util"
        ],
        "version": "0.1a1"
    },
    "climlab": {
        "cmdline": [],
        "modules": [
            "climlab",
            "climlab.convection",
            "climlab.convection.convadj",
            "climlab.convection.setup",
            "climlab.domain",
            "climlab.domain.axis",
            "climlab.domain.domain",
            "climlab.domain.field",
            "climlab.domain.initial",
            "climlab.domain.setup",
            "climlab.dynamics",
            "climlab.dynamics.budyko_transport",
            "climlab.dynamics.diffusion",
            "climlab.dynamics.setup",
            "climlab.model",
            "climlab.model.column",
            "climlab.model.ebm",
            "climlab.model.setup",
            "climlab.model.stommelbox",
            "climlab.process",
            "climlab.process.diagnostic",
            "climlab.process.energy_budget",
            "climlab.process.implicit",
            "climlab.process.process",
            "climlab.process.setup",
            "climlab.process.time_dependent_process",
            "climlab.radiation",
            "climlab.radiation.aplusbt",
            "climlab.radiation.boltzmann",
            "climlab.radiation.cam3",
            "climlab.radiation.cam3.cam3",
            "climlab.radiation.cam3.setup",
            "climlab.radiation.greygas",
            "climlab.radiation.insolation",
            "climlab.radiation.nband",
            "climlab.radiation.radiation",
            "climlab.radiation.rrtm",
            "climlab.radiation.rrtm._rrtmg_lw",
            "climlab.radiation.rrtm._rrtmg_lw.setup",
            "climlab.radiation.rrtm._rrtmg_sw",
            "climlab.radiation.rrtm._rrtmg_sw.setup",
            "climlab.radiation.rrtm.rrtmg",
            "climlab.radiation.rrtm.rrtmg_lw",
            "climlab.radiation.rrtm.rrtmg_sw",
            "climlab.radiation.rrtm.setup",
            "climlab.radiation.rrtm.utils",
            "climlab.radiation.setup",
            "climlab.radiation.transmissivity",
            "climlab.radiation.water_vapor",
            "climlab.setup",
            "climlab.solar",
            "climlab.solar.insolation",
            "climlab.solar.orbital",
            "climlab.solar.orbital_cycles",
            "climlab.solar.setup",
            "climlab.surface",
            "climlab.surface.albedo",
            "climlab.surface.setup",
            "climlab.surface.surface_radiation",
            "climlab.surface.turbulent",
            "climlab.tests",
            "climlab.tests.setup",
            "climlab.tests.test_bandrc",
            "climlab.tests.test_cam3rad",
            "climlab.tests.test_domain2D",
            "climlab.tests.test_ebm",
            "climlab.tests.test_grey_radiation",
            "climlab.tests.test_insolation",
            "climlab.tests.test_rrtm",
            "climlab.tests.test_thermo",
            "climlab.utils",
            "climlab.utils.attr_dict",
            "climlab.utils.constants",
            "climlab.utils.heat_capacity",
            "climlab.utils.legendre",
            "climlab.utils.setup",
            "climlab.utils.thermo",
            "climlab.utils.walk"
        ],
        "version": "0.5.6"
    },
    "climson": {
        "cmdline": [],
        "modules": [
            "climson",
            "climson.climson"
        ],
        "version": "0.1.3"
    },
    "climstats": {
        "cmdline": [
            "areastats",
            "climstats"
        ],
        "modules": [
            "climstats",
            "climstats.dataset",
            "climstats.dataset_old",
            "climstats.functions",
            "climstats.gridfunctions",
            "climstats.grouping",
            "climstats.plotting",
            "climstats.postgres",
            "climstats.slicing"
        ],
        "version": "0.1.1"
    },
    "climt": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clinacl": {
        "cmdline": [],
        "modules": [
            "clinacl"
        ],
        "version": "0.1.0"
    },
    "clinch": {
        "cmdline": [],
        "modules": [
            "clinch",
            "clinch.app",
            "clinch.app_test",
            "clinch.arg"
        ],
        "version": "0.1.2"
    },
    "cling": {
        "cmdline": [],
        "modules": [
            "cling",
            "cling.cli",
            "cling.error_handler",
            "cling.error_handler.acos",
            "cling.error_handler.default",
            "cling.error_handler.eos",
            "cling.error_handler.ios",
            "cling.error_handler.iosxr",
            "cling.error_handler.ironware",
            "cling.error_handler.junos",
            "cling.error_handler.panos",
            "cling.error_handler.tmos",
            "cling.pexpect_ng",
            "cling.reactor"
        ],
        "version": "2.3.2"
    },
    "clingon": {
        "cmdline": [],
        "modules": [
            "clingon",
            "clingon.clingon",
            "clingon.utils"
        ],
        "version": "0.3.0"
    },
    "clingy": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "clinical-trials": {
        "cmdline": [],
        "modules": [
            "clinical_trials",
            "clinical_trials.clinical_trials",
            "clinical_trials/api",
            "clinical_trials/api.api",
            "clinical_trials/api.test_api",
            "clinical_trials/api/xml2dict",
            "clinical_trials/api/xml2dict.object_dict",
            "clinical_trials/api/xml2dict.test_xml2dict",
            "clinical_trials/api/xml2dict.xml2dict"
        ],
        "version": "1.1"
    },
    "clink": {
        "cmdline": [],
        "modules": [
            "clink",
            "clink.app",
            "clink.auth",
            "clink.auth.accmgr",
            "clink.auth.auth",
            "clink.auth.error",
            "clink.auth.iauth",
            "clink.auth.oauth",
            "clink.auth.util",
            "clink.com",
            "clink.com.error",
            "clink.com.injector",
            "clink.com.marker",
            "clink.com.marker.com",
            "clink.com.marker.route",
            "clink.com.type",
            "clink.db",
            "clink.db.error",
            "clink.db.imongo_node",
            "clink.db.mongo_node",
            "clink.db.type",
            "clink.etc",
            "clink.handler",
            "clink.handler.err_http",
            "clink.handler.err_log",
            "clink.handler.recv",
            "clink.handler.req_json",
            "clink.handler.req_log",
            "clink.handler.req_url_encode",
            "clink.handler.res_cors",
            "clink.handler.res_json",
            "clink.handler.send",
            "clink.iface",
            "clink.iface.error_handler",
            "clink.iface.pipe_handler",
            "clink.iface.recv_handler",
            "clink.iface.router",
            "clink.iface.send_handler",
            "clink.iface.wsgi",
            "clink.marker",
            "clink.marker.route",
            "clink.mime",
            "clink.mime.type",
            "clink.routing",
            "clink.routing.error",
            "clink.routing.route",
            "clink.routing.router",
            "clink.routing.type",
            "clink.service",
            "clink.service.mail",
            "clink.service.template",
            "clink.shell",
            "clink.ske",
            "clink.ske.auth",
            "clink.ske.auth.app",
            "clink.ske.auth.ctl",
            "clink.ske.auth.ctl.account",
            "clink.ske.auth.ctl.auth",
            "clink.type",
            "clink.type.app_config",
            "clink.type.com",
            "clink.type.request",
            "clink.type.response"
        ],
        "version": "0.10.0"
    },
    "clinner": {
        "cmdline": [],
        "modules": [
            "clinner",
            "clinner.apps",
            "clinner.builder",
            "clinner.cli",
            "clinner.command",
            "clinner.exceptions",
            "clinner.run",
            "clinner.run.base",
            "clinner.run.commands",
            "clinner.run.commands.dist",
            "clinner.run.commands.nose",
            "clinner.run.commands.prospector",
            "clinner.run.commands.pytest",
            "clinner.run.commands.sphinx",
            "clinner.run.commands.tox",
            "clinner.run.django_command",
            "clinner.run.main",
            "clinner.run.mixins",
            "clinner.run.mixins.health_check",
            "clinner.settings",
            "tests",
            "tests.run",
            "tests.run.test_base",
            "tests.run.test_django_commands",
            "tests.run.test_mixins",
            "tests.run.utils_base",
            "tests.test_cli",
            "tests.test_command"
        ],
        "version": "1.4.2"
    },
    "clint": {
        "cmdline": [],
        "modules": [
            "clint",
            "clint.arguments",
            "clint.eng",
            "clint.packages",
            "clint.packages.appdirs",
            "clint.packages.colorama",
            "clint.packages.colorama.ansi",
            "clint.packages.colorama.ansitowin32",
            "clint.packages.colorama.initialise",
            "clint.packages.colorama.win32",
            "clint.packages.colorama.winterm",
            "clint.packages.ordereddict",
            "clint.pipes",
            "clint.resources",
            "clint.textui",
            "clint.textui.colored",
            "clint.textui.cols",
            "clint.textui.core",
            "clint.textui.formatters",
            "clint.textui.progress",
            "clint.textui.prompt",
            "clint.textui.validators",
            "clint.utils"
        ],
        "version": "0.5.1"
    },
    "clint2": {
        "cmdline": [],
        "modules": [
            "clint",
            "clint.arguments",
            "clint.eng",
            "clint.packages",
            "clint.packages.appdirs",
            "clint.packages.colorama",
            "clint.packages.colorama.ansi",
            "clint.packages.colorama.ansitowin32",
            "clint.packages.colorama.initialise",
            "clint.packages.colorama.win32",
            "clint.packages.colorama.winterm",
            "clint.packages.ordereddict",
            "clint.pipes",
            "clint.resources",
            "clint.textui",
            "clint.textui.colored",
            "clint.textui.cols",
            "clint.textui.core",
            "clint.textui.formatters",
            "clint.textui.progress",
            "clint.textui.prompt",
            "clint.utils"
        ],
        "version": "0.3.2"
    },
    "clinto": {
        "cmdline": [],
        "modules": [
            "clinto",
            "clinto.ast",
            "clinto.ast.codegen",
            "clinto.ast.source_parser",
            "clinto.parser",
            "clinto.parsers",
            "clinto.parsers.argparse_",
            "clinto.parsers.base",
            "clinto.parsers.docopt_",
            "clinto.tests",
            "clinto.tests.factories",
            "clinto.tests.test_fields",
            "clinto.utils"
        ],
        "version": "0.1.3"
    },
    "clintrials": {
        "cmdline": [],
        "modules": [
            "clintrials",
            "clintrials.coll",
            "clintrials.common",
            "clintrials.dosefinding",
            "clintrials.dosefinding.crm",
            "clintrials.dosefinding.efficacytoxicity",
            "clintrials.dosefinding.efftox",
            "clintrials.dosefinding.wagestait",
            "clintrials.dosefinding.watu",
            "clintrials.phase2",
            "clintrials.phase2.bebop",
            "clintrials.phase2.bebop.peps2v1",
            "clintrials.phase2.bebop.peps2v2",
            "clintrials.phase2.simple",
            "clintrials.recruitment",
            "clintrials.simulation",
            "clintrials.stats",
            "clintrials.tte",
            "clintrials.util"
        ],
        "version": "0.1.4"
    },
    "clio": {
        "cmdline": [],
        "modules": [
            "clio",
            "clio._clio",
            "clio.interfaces",
            "clio.sequence",
            "clio.tests"
        ],
        "version": "0.7"
    },
    "clip": {
        "cmdline": [
            "clip"
        ],
        "modules": [
            "clip",
            "clip.core",
            "clip.settings",
            "clip.storage",
            "clip.storage.base",
            "clip.storage.json_store"
        ],
        "version": "0.2.0"
    },
    "clip-the-gym": {
        "cmdline": [],
        "modules": [
            "clipthegym"
        ],
        "version": "0.0.2"
    },
    "clip.py": {
        "cmdline": [],
        "modules": [
            "clip"
        ],
        "version": "0.3.2"
    },
    "clip2zeus": {
        "cmdline": [
            "clip2zeus",
            "clip2zeusctl",
            "tkclip2zeus"
        ],
        "modules": [
            "clip2zeus",
            "clip2zeus.clip2zeus_ctl",
            "clip2zeus.clip2zeus_service",
            "clip2zeus.common",
            "clip2zeus.config",
            "clip2zeus.globals",
            "clip2zeus.gui",
            "clip2zeus.linux",
            "clip2zeus.linux_gtk",
            "clip2zeus.linux_kde",
            "clip2zeus.main",
            "clip2zeus.osx",
            "clip2zeus.win32"
        ],
        "version": "1.5a"
    },
    "clip4": {
        "cmdline": [],
        "modules": [
            "clip4",
            "clip4.main"
        ],
        "version": "0.1.0"
    },
    "clipartbrowser": {
        "cmdline": [],
        "modules": [
            "ClipartBrowser",
            "ClipartBrowser.browser",
            "ClipartBrowser.repositories",
            "ClipartBrowser.repositories.localocal",
            "ClipartBrowser.repositories.ocal_net"
        ],
        "version": "0.41"
    },
    "clipboard": {
        "cmdline": [],
        "modules": [
            "clipboard"
        ],
        "version": "0.0.4"
    },
    "clipboard-memo": {
        "cmdline": [],
        "modules": [
            "clipboard_memo",
            "clipboard_memo.direct",
            "clipboard_memo.main"
        ],
        "version": "0.2"
    },
    "clipboard-modifier": {
        "cmdline": [
            "clipboard-modifier"
        ],
        "modules": [
            "clipboardmodifier",
            "clipboardmodifier.clipboardmodifier",
            "clipboardmodifier/plugins",
            "clipboardmodifier/plugins._plugin",
            "clipboardmodifier/plugins.amazonlink",
            "clipboardmodifier/plugins.colstocommasep",
            "clipboardmodifier/plugins.donothing",
            "clipboardmodifier/plugins.fixnumbers",
            "clipboardmodifier/plugins.forcetotext",
            "clipboardmodifier/plugins.i18n",
            "clipboardmodifier/plugins.linestocols",
            "clipboardmodifier/plugins.rot13",
            "clipboardmodifier/plugins.runapp",
            "clipboardmodifier/plugins.searchreplace",
            "clipboardmodifier/plugins.show_python_var",
            "clipboardmodifier/plugins.tabtobars",
            "clipboardmodifier/plugins.text2unicode",
            "clipboardmodifier/plugins.tojava",
            "clipboardmodifier/plugins.url2python",
            "clipboardmodifier/plugins.urltotext"
        ],
        "version": "0.2.1"
    },
    "clipcloud": {
        "cmdline": [],
        "modules": [
            "clipboard",
            "clipcloud",
            "dbox",
            "gridformat",
            "history",
            "main",
            "message",
            "pyjson",
            "screenshot",
            "settings"
        ],
        "version": "0.2"
    },
    "clipmon": {
        "cmdline": [],
        "modules": [
            "clipmon",
            "clipmon.clipmon",
            "clipmon.install",
            "clipmon.test"
        ],
        "version": "0.0.1"
    },
    "clipon": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "clipper": {
        "cmdline": [],
        "modules": [
            "clipper",
            "clipper.data",
            "clipper.data.regions",
            "clipper.src",
            "clipper.src.AS_Structure_tools",
            "clipper.src.CLIP_analysis",
            "clipper.src.CLIP_analysis_display",
            "clipper.src.call_peak",
            "clipper.src.get_ce10_genomic_regions",
            "clipper.src.get_genomic_regions",
            "clipper.src.kmerdiff",
            "clipper.src.peakfinder",
            "clipper.test",
            "clipper.test.test_CLIP_Analysis_Display",
            "clipper.test.test_CLIP_analysis",
            "clipper.test.test_call_peak",
            "clipper.test.test_classic",
            "clipper.test.test_kmerdiff",
            "clipper.test.test_peakfinder",
            "clipper.test.test_peaks",
            "clipper.test.test_spline"
        ],
        "version": "0.2.0"
    },
    "clippercard": {
        "cmdline": [],
        "modules": [
            "clippercard",
            "clippercard.client",
            "clippercard.main",
            "clippercard.parser",
            "clippercard.porcelain"
        ],
        "version": "0.3.2"
    },
    "clippings": {
        "cmdline": [],
        "modules": [
            "clippings",
            "clippings.parser",
            "clippings.utils"
        ],
        "version": "0.3.0"
    },
    "clippy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clips6": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "clipsync": {
        "cmdline": [
            "run.py"
        ],
        "modules": [
            "clipsync",
            "clipsync.components",
            "clipsync.components.board",
            "clipsync.components.discovery",
            "clipsync.components.interact",
            "clipsync.utils",
            "clipsync.utils.encrypt"
        ],
        "version": "0.2"
    },
    "cliptask": {
        "cmdline": [],
        "modules": [
            "clipstasks",
            "clipstasks.clipboard",
            "clipstasks.parmap",
            "clipstasks.task"
        ],
        "version": "1.0.0"
    },
    "clipublish": {
        "cmdline": [],
        "modules": [
            "cliPublish",
            "cliPublish.cliPublish"
        ],
        "version": "0.2.1"
    },
    "clipwdmgr": {
        "cmdline": [],
        "modules": [
            "clipwdmgr",
            "clipwdmgr.clipwdmgr",
            "clipwdmgr.common",
            "clipwdmgr.crypto",
            "clipwdmgr.database",
            "clipwdmgr.globals"
        ],
        "version": "0.11"
    },
    "clipy": {
        "cmdline": [],
        "modules": [
            "clipy",
            "clipy.argparse",
            "clipy.command",
            "clipy.loader",
            "clipy.tests",
            "clipy.utils"
        ],
        "version": "0.4"
    },
    "clipy-dl": {
        "cmdline": [],
        "modules": [
            "clipy",
            "clipy.clipy_app",
            "clipy.download",
            "clipy.panel",
            "clipy.request",
            "clipy.ui",
            "clipy.utils",
            "clipy.video",
            "clipy.window",
            "clipy.youtube"
        ],
        "version": "0.9.7"
    },
    "clique": {
        "cmdline": [],
        "modules": [
            "clique",
            "clique._version",
            "clique.collection",
            "clique.descriptor",
            "clique.error",
            "clique.sorted_set"
        ],
        "version": "1.3.1"
    },
    "clique-blockchain": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.3"
    },
    "cliquery": {
        "cmdline": [],
        "modules": [
            "cliquery",
            "cliquery.bookmark",
            "cliquery.cliquery",
            "cliquery.config",
            "cliquery.open",
            "cliquery.pyteaser",
            "cliquery.utils"
        ],
        "version": "1.9.0"
    },
    "cliquet": {
        "cmdline": [],
        "modules": [
            "cliquet",
            "cliquet.authentication",
            "cliquet.authorization",
            "cliquet.cache",
            "cliquet.cache.memory",
            "cliquet.cache.postgresql",
            "cliquet.cache.redis",
            "cliquet.errors",
            "cliquet.events",
            "cliquet.initialization",
            "cliquet.listeners",
            "cliquet.listeners.redis",
            "cliquet.logs",
            "cliquet.permission",
            "cliquet.permission.memory",
            "cliquet.permission.postgresql",
            "cliquet.permission.redis",
            "cliquet.resource",
            "cliquet.resource.model",
            "cliquet.resource.schema",
            "cliquet.resource.viewset",
            "cliquet.schema",
            "cliquet.scripts",
            "cliquet.scripts.cliquet",
            "cliquet.statsd",
            "cliquet.storage",
            "cliquet.storage.exceptions",
            "cliquet.storage.generators",
            "cliquet.storage.memory",
            "cliquet.storage.postgresql",
            "cliquet.storage.postgresql.client",
            "cliquet.storage.postgresql.pool",
            "cliquet.storage.redis",
            "cliquet.tests",
            "cliquet.tests.resource",
            "cliquet.tests.resource.test_base",
            "cliquet.tests.resource.test_cache_expires",
            "cliquet.tests.resource.test_events",
            "cliquet.tests.resource.test_filter",
            "cliquet.tests.resource.test_model",
            "cliquet.tests.resource.test_object_permissions",
            "cliquet.tests.resource.test_pagination",
            "cliquet.tests.resource.test_partial_response",
            "cliquet.tests.resource.test_preconditions",
            "cliquet.tests.resource.test_record",
            "cliquet.tests.resource.test_schema",
            "cliquet.tests.resource.test_sort",
            "cliquet.tests.resource.test_sync",
            "cliquet.tests.resource.test_views",
            "cliquet.tests.resource.test_views_cors",
            "cliquet.tests.resource.test_viewset",
            "cliquet.tests.support",
            "cliquet.tests.test_authentication",
            "cliquet.tests.test_authorization",
            "cliquet.tests.test_cache",
            "cliquet.tests.test_deprecation",
            "cliquet.tests.test_errors",
            "cliquet.tests.test_initialization",
            "cliquet.tests.test_listeners",
            "cliquet.tests.test_logging",
            "cliquet.tests.test_permission",
            "cliquet.tests.test_scripts",
            "cliquet.tests.test_statsd",
            "cliquet.tests.test_storage",
            "cliquet.tests.test_storage_migrations",
            "cliquet.tests.test_storage_pool",
            "cliquet.tests.test_utils",
            "cliquet.tests.test_views_batch",
            "cliquet.tests.test_views_errors",
            "cliquet.tests.test_views_heartbeat",
            "cliquet.tests.test_views_hello",
            "cliquet.tests.test_views_transaction",
            "cliquet.tests.testapp",
            "cliquet.tests.testapp.views",
            "cliquet.tests.testplugin",
            "cliquet.utils",
            "cliquet.views",
            "cliquet.views.batch",
            "cliquet.views.errors",
            "cliquet.views.heartbeat",
            "cliquet.views.hello",
            "cliquet_docs",
            "cliquet_docs.conf"
        ],
        "version": "3.1.5"
    },
    "cliquet-fxa": {
        "cmdline": [],
        "modules": [
            "cliquet_fxa",
            "cliquet_fxa.authentication",
            "cliquet_fxa.tests",
            "cliquet_fxa.tests.test_authentication",
            "cliquet_fxa.tests.test_includeme",
            "cliquet_fxa.tests.test_views",
            "cliquet_fxa.utils",
            "cliquet_fxa.views",
            "cliquet_fxa.views.params",
            "cliquet_fxa.views.relier"
        ],
        "version": "1.4.0"
    },
    "cliquet-pusher": {
        "cmdline": [],
        "modules": [
            "cliquet_pusher",
            "cliquet_pusher.listener"
        ],
        "version": "0.2.0"
    },
    "clira": {
        "cmdline": [],
        "modules": [
            "clira",
            "clira.cli",
            "clira.utils"
        ],
        "version": "0.1.4"
    },
    "cliresms": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "clis": {
        "cmdline": [],
        "modules": [
            "clis",
            "clis.cli",
            "clis.clis",
            "tests",
            "tests.unit",
            "tests.unit.test_server"
        ],
        "version": "0.0.1"
    },
    "clish": {
        "cmdline": [],
        "modules": [
            "clish",
            "clish.interactive"
        ],
        "version": "0.1"
    },
    "clisheet": {
        "cmdline": [],
        "modules": [
            "timesheet",
            "timesheet.mail",
            "timesheet.main",
            "timesheet.models",
            "timesheet.utils"
        ],
        "version": "0.0.4"
    },
    "clitool": {
        "cmdline": [],
        "modules": [
            "clitool",
            "clitool._unicodecsv",
            "clitool.accesslog",
            "clitool.cli",
            "clitool.config",
            "clitool.processor",
            "clitool.textio",
            "clitool.urlutils"
        ],
        "version": "0.4.1"
    },
    "clitools": {
        "cmdline": [],
        "modules": [
            "clitools",
            "clitools.tests",
            "clitools.tests.test_clitools",
            "clitools.tests.test_components"
        ],
        "version": "0.4b1"
    },
    "clitube": {
        "cmdline": [],
        "modules": [
            "clitube",
            "clitube.app",
            "clitube.model"
        ],
        "version": "0.2.5"
    },
    "clitunes": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cliui": {
        "cmdline": [],
        "modules": [
            "cliui",
            "cliui.confirm",
            "cliui.prompt",
            "cliui.safedit",
            "cliui.sigint",
            "cliui.sudo"
        ],
        "version": "0.0.1"
    },
    "cliutils": {
        "cmdline": [],
        "modules": [
            "cliutils",
            "cliutils.decorators",
            "cliutils.persistence",
            "cliutils.process"
        ],
        "version": "0.1.3"
    },
    "clive": {
        "cmdline": [
            "clive"
        ],
        "modules": [
            "clive"
        ],
        "version": "0.0.7"
    },
    "cliwaka": {
        "cmdline": [],
        "modules": [
            "cliwaka",
            "cliwaka.cli",
            "cliwaka.config",
            "cliwaka.core",
            "cliwaka.output"
        ],
        "version": "0.1.1"
    },
    "clixbuild": {
        "cmdline": [],
        "modules": [
            "clixbuild",
            "clixbuild.build",
            "clixbuild.clixconfig"
        ],
        "version": "1.2.3"
    },
    "clixevolve": {
        "cmdline": [],
        "modules": [
            "clixevolve",
            "clixevolve.diff",
            "clixevolve.extract_structure",
            "clixevolve.migrate"
        ],
        "version": "0.4.1dev"
    },
    "clize": {
        "cmdline": [],
        "modules": [
            "clize",
            "clize._sphinx",
            "clize.converters",
            "clize.errors",
            "clize.help",
            "clize.legacy",
            "clize.parameters",
            "clize.parser",
            "clize.runner",
            "clize.tests",
            "clize.tests.test_converters",
            "clize.tests.test_help",
            "clize.tests.test_legacy",
            "clize.tests.test_legacy_py3k",
            "clize.tests.test_parameters",
            "clize.tests.test_parser",
            "clize.tests.test_runner",
            "clize.tests.test_testutil",
            "clize.tests.test_util",
            "clize.tests.util",
            "clize.util"
        ],
        "version": "4.0.1"
    },
    "clj": {
        "cmdline": [],
        "modules": [
            "clj",
            "clj.fns",
            "clj.seqs"
        ],
        "version": "0.1.0"
    },
    "cll": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0.0"
    },
    "clld": {
        "cmdline": [],
        "modules": [
            "clld",
            "clld.config",
            "clld.db",
            "clld.db.fts",
            "clld.db.meta",
            "clld.db.migration",
            "clld.db.models",
            "clld.db.models._mixins",
            "clld.db.models.common",
            "clld.db.models.config",
            "clld.db.models.contribution",
            "clld.db.models.contributor",
            "clld.db.models.dataset",
            "clld.db.models.gloss",
            "clld.db.models.language",
            "clld.db.models.parameter",
            "clld.db.models.sentence",
            "clld.db.models.source",
            "clld.db.models.unit",
            "clld.db.models.unitparameter",
            "clld.db.models.unitvalue",
            "clld.db.models.value",
            "clld.db.models.valueset",
            "clld.db.util",
            "clld.db.versioned",
            "clld.interfaces",
            "clld.lib",
            "clld.lib.bibo",
            "clld.lib.bibtex",
            "clld.lib.bibutils",
            "clld.lib.clld_api",
            "clld.lib.coins",
            "clld.lib.excel",
            "clld.lib.fmpxml",
            "clld.lib.iso",
            "clld.lib.latex",
            "clld.lib.rdf",
            "clld.lib.svg",
            "clld.lib.wordpress",
            "clld.scaffolds",
            "clld.scripts",
            "clld.scripts.cli",
            "clld.scripts.freeze",
            "clld.scripts.internetarchive",
            "clld.scripts.llod",
            "clld.scripts.util",
            "clld.tests",
            "clld.tests.fixtures",
            "clld.tests.test_config",
            "clld.tests.test_db_meta",
            "clld.tests.test_db_migration",
            "clld.tests.test_db_models",
            "clld.tests.test_db_util",
            "clld.tests.test_db_versioned",
            "clld.tests.test_functional",
            "clld.tests.test_lib_bibtex",
            "clld.tests.test_lib_clld_api",
            "clld.tests.test_lib_coins",
            "clld.tests.test_lib_excel",
            "clld.tests.test_lib_fmpxml",
            "clld.tests.test_lib_iso",
            "clld.tests.test_lib_rdf",
            "clld.tests.test_lib_wordpress",
            "clld.tests.test_scripts_freeze",
            "clld.tests.test_scripts_util",
            "clld.tests.test_util",
            "clld.tests.test_web_adapters",
            "clld.tests.test_web_adapters_cldf",
            "clld.tests.test_web_adapters_csv",
            "clld.tests.test_web_adapters_download",
            "clld.tests.test_web_adapters_excel",
            "clld.tests.test_web_adapters_geojson",
            "clld.tests.test_web_app",
            "clld.tests.test_web_datatables_base",
            "clld.tests.test_web_datatables_contribution",
            "clld.tests.test_web_datatables_contributor",
            "clld.tests.test_web_datatables_language",
            "clld.tests.test_web_datatables_parameter",
            "clld.tests.test_web_datatables_sentence",
            "clld.tests.test_web_datatables_source",
            "clld.tests.test_web_datatables_unit",
            "clld.tests.test_web_datatables_unitparameter",
            "clld.tests.test_web_datatables_unitvalue",
            "clld.tests.test_web_datatables_value",
            "clld.tests.test_web_datatables_valueset",
            "clld.tests.test_web_maps",
            "clld.tests.test_web_subscribers",
            "clld.tests.test_web_templates",
            "clld.tests.test_web_util_helpers",
            "clld.tests.test_web_util_htmllib",
            "clld.tests.test_web_util_multiselect",
            "clld.tests.test_web_views",
            "clld.tests.test_web_views_olac",
            "clld.tests.util",
            "clld.util",
            "clld.web",
            "clld.web.adapters",
            "clld.web.adapters.base",
            "clld.web.adapters.biblio",
            "clld.web.adapters.cldf",
            "clld.web.adapters.csv",
            "clld.web.adapters.download",
            "clld.web.adapters.excel",
            "clld.web.adapters.geojson",
            "clld.web.adapters.md",
            "clld.web.adapters.rdf",
            "clld.web.app",
            "clld.web.assets",
            "clld.web.datatables",
            "clld.web.datatables.base",
            "clld.web.datatables.contribution",
            "clld.web.datatables.contributor",
            "clld.web.datatables.language",
            "clld.web.datatables.parameter",
            "clld.web.datatables.sentence",
            "clld.web.datatables.source",
            "clld.web.datatables.unit",
            "clld.web.datatables.unitparameter",
            "clld.web.datatables.unitvalue",
            "clld.web.datatables.value",
            "clld.web.datatables.valueset",
            "clld.web.icon",
            "clld.web.maps",
            "clld.web.subscribers",
            "clld.web.util",
            "clld.web.util.component",
            "clld.web.util.downloadwidget",
            "clld.web.util.helpers",
            "clld.web.util.htmllib",
            "clld.web.util.multiselect",
            "clld.web.util.pager",
            "clld.web.views",
            "clld.web.views.olac",
            "clld.web.views.sitemap"
        ],
        "version": "3.2.7"
    },
    "clld-glottologfamily-plugin": {
        "cmdline": [],
        "modules": [
            "clld_glottologfamily_plugin",
            "clld_glottologfamily_plugin.adapters",
            "clld_glottologfamily_plugin.datatables",
            "clld_glottologfamily_plugin.interfaces",
            "clld_glottologfamily_plugin.maps",
            "clld_glottologfamily_plugin.models",
            "clld_glottologfamily_plugin.tests",
            "clld_glottologfamily_plugin.tests.fixtures",
            "clld_glottologfamily_plugin.tests.test_functional",
            "clld_glottologfamily_plugin.util"
        ],
        "version": "2.0.1"
    },
    "clldclient": {
        "cmdline": [],
        "modules": [
            "clldclient",
            "clldclient.cache",
            "clldclient.cli",
            "clldclient.concepticon",
            "clldclient.database",
            "clldclient.glottolog",
            "clldclient.link_header",
            "clldclient.table",
            "clldclient.tests",
            "clldclient.tests.test_cache",
            "clldclient.tests.test_database",
            "clldclient.tests.test_glottolog",
            "clldclient.tests.test_link_header",
            "clldclient.tests.test_table",
            "clldclient.tests.test_wals",
            "clldclient.tests.util",
            "clldclient.util",
            "clldclient.wals"
        ],
        "version": "1.3.3"
    },
    "clldmpg": {
        "cmdline": [],
        "modules": [
            "clldmpg",
            "clldmpg.cdstar",
            "clldmpg.scaffolds",
            "clldmpg.tests",
            "clldmpg.tests.test_cdstar"
        ],
        "version": "2.4.1"
    },
    "clldutils": {
        "cmdline": [],
        "modules": [
            "clldutils",
            "clldutils.apilib",
            "clldutils.badge",
            "clldutils.clilib",
            "clldutils.declenum",
            "clldutils.dsv",
            "clldutils.inifile",
            "clldutils.iso_639_3",
            "clldutils.jsonlib",
            "clldutils.lgr",
            "clldutils.licenses",
            "clldutils.loglib",
            "clldutils.markup",
            "clldutils.misc",
            "clldutils.path",
            "clldutils.sfm",
            "clldutils.source",
            "clldutils.test_lgr",
            "clldutils.testing",
            "clldutils.tests",
            "clldutils.tests.test_apilib",
            "clldutils.tests.test_badge",
            "clldutils.tests.test_clilib",
            "clldutils.tests.test_declenum",
            "clldutils.tests.test_dsv",
            "clldutils.tests.test_inifile",
            "clldutils.tests.test_iso_639_3",
            "clldutils.tests.test_jsonlib",
            "clldutils.tests.test_licenses",
            "clldutils.tests.test_loglib",
            "clldutils.tests.test_markup",
            "clldutils.tests.test_misc",
            "clldutils.tests.test_path",
            "clldutils.tests.test_sfm",
            "clldutils.tests.test_source",
            "clldutils.tests.test_testing",
            "clldutils.tests.test_text",
            "clldutils.tests.test_ziparchive",
            "clldutils.text",
            "clldutils.ziparchive"
        ],
        "version": "1.10.1"
    },
    "cllist": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "clmsgr": {
        "cmdline": [],
        "modules": [
            "CLMsgr",
            "CLMsgr.api",
            "CLMsgr.chs",
            "CLMsgr.chs.Mandriller",
            "CLMsgr.cli",
            "CLMsgr.core",
            "CLMsgr.core.accounts",
            "CLMsgr.core.channel",
            "CLMsgr.core.channels",
            "CLMsgr.core.io",
            "CLMsgr.core.messages",
            "CLMsgr.core.serl",
            "CLMsgr.install"
        ],
        "version": "0.0.0-pre-alpha-build-3"
    },
    "clnester": {
        "cmdline": [],
        "modules": [
            "clnester"
        ],
        "version": "1.1.2"
    },
    "clnester-revb": {
        "cmdline": [],
        "modules": [
            "clnester_revB"
        ],
        "version": "1.2.0"
    },
    "clnews": {
        "cmdline": [],
        "modules": [
            "clnews",
            "clnews.clnews",
            "clnews.config",
            "clnews.exception",
            "clnews.news",
            "clnews.scripts",
            "clnews.scripts.clnews",
            "clnews.shell",
            "clnews.test",
            "clnews.test.tests"
        ],
        "version": "0.4.0"
    },
    "clnum": {
        "cmdline": [],
        "modules": [
            "clnum",
            "clnum._clnum_str"
        ],
        "version": "1.6"
    },
    "cloak": {
        "cmdline": [],
        "modules": [
            "cloak",
            "cloak.immutable",
            "cloak.monadic",
            "cloak.option",
            "cloak.try_type"
        ],
        "version": "0.0.1a4"
    },
    "clock": {
        "cmdline": [],
        "modules": [
            "clock"
        ],
        "version": "0.1"
    },
    "clockcarlos": {
        "cmdline": [],
        "modules": [
            "clockcarlos"
        ],
        "version": "0.1"
    },
    "clocked": {
        "cmdline": [],
        "modules": [
            "clocked",
            "clocked.clockit",
            "clocked.cuuid",
            "clocked.decorators",
            "clocked.profiler",
            "clocked.profiler_provider",
            "clocked.settings",
            "clocked.stopwatch",
            "clocked.timing"
        ],
        "version": "0.62"
    },
    "clocker": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "clockin": {
        "cmdline": [],
        "modules": [
            "clockin",
            "clockin.calendar",
            "clockin.clockin",
            "clockin.config",
            "clockin.hooks",
            "clockin.testing",
            "clockin.tests"
        ],
        "version": "0.1.5"
    },
    "clockit": {
        "cmdline": [],
        "modules": [
            "clockit"
        ],
        "version": "0.2.4"
    },
    "clocklogger": {
        "cmdline": [],
        "modules": [
            "clocklogger",
            "clocklogger.analysis",
            "clocklogger.input",
            "clocklogger.logger",
            "clocklogger.output",
            "clocklogger.output.influxdb",
            "clocklogger.output.tempodb",
            "clocklogger.output.textfile",
            "clocklogger.source",
            "clocklogger.source.weather",
            "clocklogger.weatherlogger"
        ],
        "version": "0.2.2"
    },
    "clockr": {
        "cmdline": [],
        "modules": [
            "clockr",
            "clockr.__version__",
            "clockr.clockr"
        ],
        "version": "1.0"
    },
    "clocktower": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "clockwork": {
        "cmdline": [],
        "modules": [
            "clockwork",
            "clockwork.clockwork",
            "clockwork.clockwork_exceptions",
            "clockwork.clockwork_http"
        ],
        "version": "1.2.0"
    },
    "cloco-cli": {
        "cmdline": [],
        "modules": [
            "cloco_cli",
            "cloco_cli.cli"
        ],
        "version": "0.1.7"
    },
    "clodius": {
        "cmdline": [],
        "modules": [
            "clodius",
            "clodius.cli",
            "clodius.cli.aggregate",
            "clodius.db_tiles",
            "clodius.describe_dataset",
            "clodius.fpark",
            "clodius.hdf_tiles",
            "clodius.higlass_getter",
            "clodius.save_tiles",
            "clodius.tiles"
        ],
        "version": "0.5.0"
    },
    "clogs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloi": {
        "cmdline": [],
        "modules": [
            "cloi"
        ],
        "version": "1.0.0"
    },
    "clojure-py": {
        "cmdline": [],
        "modules": [
            "clojure",
            "clojure.main",
            "clojure.repl",
            "clojure.standardimports",
            "clojure/lang",
            "clojure/lang.amapentry",
            "clojure/lang.apersistentmap",
            "clojure/lang.apersistentset",
            "clojure/lang.apersistentvector",
            "clojure/lang.aref",
            "clojure/lang.areference",
            "clojure/lang.aseq",
            "clojure/lang.associative",
            "clojure/lang.atom",
            "clojure/lang.atomicreference",
            "clojure/lang.atransientmap",
            "clojure/lang.box",
            "clojure/lang.cljexceptions",
            "clojure/lang.cljkeyword",
            "clojure/lang.comparator",
            "clojure/lang.compiler",
            "clojure/lang.cons",
            "clojure/lang.counted",
            "clojure/lang.fileseq",
            "clojure/lang.globals",
            "clojure/lang.gmp",
            "clojure/lang.ideref",
            "clojure/lang.ieditablecollection",
            "clojure/lang.ifn",
            "clojure/lang.ihasheq",
            "clojure/lang.ilookup",
            "clojure/lang.imeta",
            "clojure/lang.indexableseq",
            "clojure/lang.indexed",
            "clojure/lang.iobj",
            "clojure/lang.ipersistentcollection",
            "clojure/lang.ipersistentlist",
            "clojure/lang.ipersistentmap",
            "clojure/lang.ipersistentset",
            "clojure/lang.ipersistentstack",
            "clojure/lang.ipersistentvector",
            "clojure/lang.iprintable",
            "clojure/lang.ireduce",
            "clojure/lang.iref",
            "clojure/lang.ireference",
            "clojure/lang.iseq",
            "clojure/lang.iterable",
            "clojure/lang.itransientassociative",
            "clojure/lang.itransientcollection",
            "clojure/lang.itransientmap",
            "clojure/lang.linenumberingtextreader",
            "clojure/lang.lispreader",
            "clojure/lang.mapentry",
            "clojure/lang.multimethod",
            "clojure/lang.named",
            "clojure/lang.namespace",
            "clojure/lang.obj",
            "clojure/lang.persistentarraymap",
            "clojure/lang.persistenthashmap",
            "clojure/lang.persistenthashset",
            "clojure/lang.persistentlist",
            "clojure/lang.persistenttreemap",
            "clojure/lang.persistentvector",
            "clojure/lang.protocol",
            "clojure/lang.pytypes",
            "clojure/lang.reversible",
            "clojure/lang.rt",
            "clojure/lang.seqable",
            "clojure/lang.sequential",
            "clojure/lang.settable",
            "clojure/lang.symbol",
            "clojure/lang.threadutil",
            "clojure/lang.util",
            "clojure/lang.var",
            "clojure/util",
            "clojure/util.byteplay",
            "clojure/util.freeze"
        ],
        "version": "0.2.4"
    },
    "clok": {
        "cmdline": [],
        "modules": [
            "clok",
            "clok.client",
            "clok.cron",
            "clok.log",
            "clok.models",
            "clok.models.alarm",
            "clok.models.base",
            "clok.models.webradio",
            "clok.radio",
            "clok.server",
            "clok.tests",
            "clok.tests.conftest",
            "clok.tests.test_cron",
            "clok.tests.test_log",
            "clok.tests.test_models",
            "clok.tests.test_radio"
        ],
        "version": "2.0.2"
    },
    "clom": {
        "cmdline": [],
        "modules": [
            "clom",
            "clom._compat",
            "clom.arg",
            "clom.command",
            "clom.fabric",
            "clom.shell"
        ],
        "version": "0.8.0a1"
    },
    "clone": {
        "cmdline": [],
        "modules": [
            "clone"
        ],
        "version": "0.0"
    },
    "clone-github": {
        "cmdline": [],
        "modules": [
            "clone_github",
            "clone_github.clone_github"
        ],
        "version": "0.12"
    },
    "cloneall": {
        "cmdline": [
            "cloneall"
        ],
        "modules": [],
        "version": "1.4"
    },
    "clonedigger": {
        "cmdline": [],
        "modules": [
            "clonedigger",
            "clonedigger.abstract_syntax_tree",
            "clonedigger.anti_unification",
            "clonedigger.arguments",
            "clonedigger.ast_suppliers",
            "clonedigger.clone_detection_algorithm",
            "clonedigger.clonedigger",
            "clonedigger.html_report",
            "clonedigger.java_antlr",
            "clonedigger.js_antlr",
            "clonedigger.logilab",
            "clonedigger.logilab.astng",
            "clonedigger.logilab.astng.__pkginfo__",
            "clonedigger.logilab.astng._exceptions",
            "clonedigger.logilab.astng.astutils",
            "clonedigger.logilab.astng.builder",
            "clonedigger.logilab.astng.inference",
            "clonedigger.logilab.astng.inspector",
            "clonedigger.logilab.astng.lookup",
            "clonedigger.logilab.astng.manager",
            "clonedigger.logilab.astng.nodes",
            "clonedigger.logilab.astng.raw_building",
            "clonedigger.logilab.astng.scoped_nodes",
            "clonedigger.logilab.astng.utils",
            "clonedigger.logilab.common",
            "clonedigger.logilab.common.__pkginfo__",
            "clonedigger.logilab.common.adbh",
            "clonedigger.logilab.common.astutils",
            "clonedigger.logilab.common.bind",
            "clonedigger.logilab.common.cache",
            "clonedigger.logilab.common.changelog",
            "clonedigger.logilab.common.clcommands",
            "clonedigger.logilab.common.cli",
            "clonedigger.logilab.common.compat",
            "clonedigger.logilab.common.configuration",
            "clonedigger.logilab.common.corbautils",
            "clonedigger.logilab.common.daemon",
            "clonedigger.logilab.common.date",
            "clonedigger.logilab.common.db",
            "clonedigger.logilab.common.debugger",
            "clonedigger.logilab.common.decorators",
            "clonedigger.logilab.common.deprecation",
            "clonedigger.logilab.common.fileutils",
            "clonedigger.logilab.common.graph",
            "clonedigger.logilab.common.html",
            "clonedigger.logilab.common.interface",
            "clonedigger.logilab.common.logger",
            "clonedigger.logilab.common.logging_ext",
            "clonedigger.logilab.common.logservice",
            "clonedigger.logilab.common.modutils",
            "clonedigger.logilab.common.monclient",
            "clonedigger.logilab.common.monserver",
            "clonedigger.logilab.common.optik_ext",
            "clonedigger.logilab.common.optparser",
            "clonedigger.logilab.common.patricia",
            "clonedigger.logilab.common.pdf_ext",
            "clonedigger.logilab.common.pytest",
            "clonedigger.logilab.common.shellutils",
            "clonedigger.logilab.common.sqlgen",
            "clonedigger.logilab.common.table",
            "clonedigger.logilab.common.testlib",
            "clonedigger.logilab.common.textutils",
            "clonedigger.logilab.common.tree",
            "clonedigger.logilab.common.twisted_distutils",
            "clonedigger.logilab.common.umessage",
            "clonedigger.logilab.common.ureports",
            "clonedigger.logilab.common.ureports.docbook_writer",
            "clonedigger.logilab.common.ureports.html_writer",
            "clonedigger.logilab.common.ureports.nodes",
            "clonedigger.logilab.common.ureports.text_writer",
            "clonedigger.logilab.common.vcgutils",
            "clonedigger.logilab.common.visitor",
            "clonedigger.logilab.common.xmlrpcutils",
            "clonedigger.lua_antlr",
            "clonedigger.python_compiler",
            "clonedigger.suffix_tree"
        ],
        "version": "1.1.0"
    },
    "clonedigger-jl": {
        "cmdline": [],
        "modules": [
            "clonedigger",
            "clonedigger.abstract_syntax_tree",
            "clonedigger.anti_unification",
            "clonedigger.arguments",
            "clonedigger.ast_suppliers",
            "clonedigger.clone_detection_algorithm",
            "clonedigger.clonedigger",
            "clonedigger.html_report",
            "clonedigger.java_antlr",
            "clonedigger.js_antlr",
            "clonedigger.logilab",
            "clonedigger.logilab.astng",
            "clonedigger.logilab.astng.__pkginfo__",
            "clonedigger.logilab.astng._exceptions",
            "clonedigger.logilab.astng.astutils",
            "clonedigger.logilab.astng.builder",
            "clonedigger.logilab.astng.inference",
            "clonedigger.logilab.astng.inspector",
            "clonedigger.logilab.astng.lookup",
            "clonedigger.logilab.astng.manager",
            "clonedigger.logilab.astng.nodes",
            "clonedigger.logilab.astng.raw_building",
            "clonedigger.logilab.astng.scoped_nodes",
            "clonedigger.logilab.astng.utils",
            "clonedigger.logilab.common",
            "clonedigger.logilab.common.__pkginfo__",
            "clonedigger.logilab.common.adbh",
            "clonedigger.logilab.common.astutils",
            "clonedigger.logilab.common.bind",
            "clonedigger.logilab.common.cache",
            "clonedigger.logilab.common.changelog",
            "clonedigger.logilab.common.clcommands",
            "clonedigger.logilab.common.cli",
            "clonedigger.logilab.common.compat",
            "clonedigger.logilab.common.configuration",
            "clonedigger.logilab.common.corbautils",
            "clonedigger.logilab.common.daemon",
            "clonedigger.logilab.common.date",
            "clonedigger.logilab.common.db",
            "clonedigger.logilab.common.debugger",
            "clonedigger.logilab.common.decorators",
            "clonedigger.logilab.common.deprecation",
            "clonedigger.logilab.common.fileutils",
            "clonedigger.logilab.common.graph",
            "clonedigger.logilab.common.html",
            "clonedigger.logilab.common.interface",
            "clonedigger.logilab.common.logger",
            "clonedigger.logilab.common.logging_ext",
            "clonedigger.logilab.common.logservice",
            "clonedigger.logilab.common.modutils",
            "clonedigger.logilab.common.monclient",
            "clonedigger.logilab.common.monserver",
            "clonedigger.logilab.common.optik_ext",
            "clonedigger.logilab.common.optparser",
            "clonedigger.logilab.common.patricia",
            "clonedigger.logilab.common.pdf_ext",
            "clonedigger.logilab.common.pytest",
            "clonedigger.logilab.common.shellutils",
            "clonedigger.logilab.common.sqlgen",
            "clonedigger.logilab.common.table",
            "clonedigger.logilab.common.testlib",
            "clonedigger.logilab.common.textutils",
            "clonedigger.logilab.common.tree",
            "clonedigger.logilab.common.twisted_distutils",
            "clonedigger.logilab.common.umessage",
            "clonedigger.logilab.common.ureports",
            "clonedigger.logilab.common.ureports.docbook_writer",
            "clonedigger.logilab.common.ureports.html_writer",
            "clonedigger.logilab.common.ureports.nodes",
            "clonedigger.logilab.common.ureports.text_writer",
            "clonedigger.logilab.common.vcgutils",
            "clonedigger.logilab.common.visitor",
            "clonedigger.logilab.common.xmlrpcutils",
            "clonedigger.lua_antlr",
            "clonedigger.python_compiler",
            "clonedigger.suffix_tree"
        ],
        "version": "1.0.7"
    },
    "clonehub": {
        "cmdline": [
            "clonehub"
        ],
        "modules": [],
        "version": "1.0.4"
    },
    "clonerepos": {
        "cmdline": [],
        "modules": [
            "clonerepos.clone"
        ],
        "version": "0.2"
    },
    "clones": {
        "cmdline": [],
        "modules": [
            "clones"
        ],
        "version": "0.0.1"
    },
    "clonesearch": {
        "cmdline": [],
        "modules": [
            "clonesearch",
            "clonesearch.clonesearch"
        ],
        "version": "1.0"
    },
    "clop": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.8"
    },
    "clops": {
        "cmdline": [],
        "modules": [
            "clops",
            "clops.cli"
        ],
        "version": "0.1.1"
    },
    "clorox": {
        "cmdline": [],
        "modules": [
            "clorox",
            "clorox.clorox",
            "clorox.matcher",
            "clorox.printer",
            "clorox.reporter"
        ],
        "version": "0.6"
    },
    "clortho": {
        "cmdline": [],
        "modules": [
            "clortho",
            "clortho.auth",
            "clortho.tests.example",
            "clortho.tests.test_auth"
        ],
        "version": "0.0.0"
    },
    "close.consumer": {
        "cmdline": [],
        "modules": [
            "close.consumer",
            "close.consumer.base",
            "close.consumer.consumer",
            "close.consumer.parse",
            "close.consumer.process",
            "close.consumer.utils"
        ],
        "version": "0.2.2"
    },
    "closeablequeue": {
        "cmdline": [],
        "modules": [
            "CloseableQueue",
            "CloseableQueue.test",
            "CloseableQueue.test.test_queue",
            "CloseableQueue.test.test_support"
        ],
        "version": "0.9.1.1"
    },
    "closedown": {
        "cmdline": [],
        "modules": [
            "closedown",
            "closedown.closedown"
        ],
        "version": "1.0.1"
    },
    "closeio": {
        "cmdline": [],
        "modules": [
            "closeio_api",
            "closeio_api.utils"
        ],
        "version": "1.0"
    },
    "closeio-api": {
        "cmdline": [],
        "modules": [
            "closeio_api",
            "closeio_api.utils"
        ],
        "version": "0.1"
    },
    "closeness": {
        "cmdline": [],
        "modules": [
            "closeness",
            "closeness.closeness_aggregation",
            "closeness.closeness_dict",
            "closeness.constants",
            "closeness.fuzzy_mode",
            "closeness.fuzzy_mode_dict",
            "closeness.simple_mode",
            "closeness.simple_mode_dict"
        ],
        "version": "2.0.2"
    },
    "closer": {
        "cmdline": [],
        "modules": [
            "closer",
            "closer.closer",
            "closer.remote"
        ],
        "version": "1.1.1"
    },
    "closet": {
        "cmdline": [],
        "modules": [
            "closet",
            "closet.base",
            "closet.exceptions",
            "closet.filesystem"
        ],
        "version": "0.1.5"
    },
    "closure": {
        "cmdline": [],
        "modules": [
            "closure"
        ],
        "version": "20161201"
    },
    "closure-depresolver": {
        "cmdline": [],
        "modules": [
            "closure_depresolver",
            "closure_depresolver.clresolve",
            "closure_depresolver.source",
            "closure_depresolver.treescan"
        ],
        "version": "0.0.1"
    },
    "closure-linter": {
        "cmdline": [],
        "modules": [
            "closure_linter",
            "closure_linter.aliaspass",
            "closure_linter.aliaspass_test",
            "closure_linter.checker",
            "closure_linter.checkerbase",
            "closure_linter.closurizednamespacesinfo",
            "closure_linter.closurizednamespacesinfo_test",
            "closure_linter.common",
            "closure_linter.common.error",
            "closure_linter.common.erroraccumulator",
            "closure_linter.common.errorhandler",
            "closure_linter.common.erroroutput",
            "closure_linter.common.filetestcase",
            "closure_linter.common.htmlutil",
            "closure_linter.common.lintrunner",
            "closure_linter.common.matcher",
            "closure_linter.common.position",
            "closure_linter.common.simplefileflags",
            "closure_linter.common.tokenizer",
            "closure_linter.common.tokens",
            "closure_linter.common.tokens_test",
            "closure_linter.ecmalintrules",
            "closure_linter.ecmametadatapass",
            "closure_linter.error_check",
            "closure_linter.error_fixer",
            "closure_linter.error_fixer_test",
            "closure_linter.errorrecord",
            "closure_linter.errorrules",
            "closure_linter.errorrules_test",
            "closure_linter.errors",
            "closure_linter.fixjsstyle",
            "closure_linter.fixjsstyle_test",
            "closure_linter.full_test",
            "closure_linter.gjslint",
            "closure_linter.indentation",
            "closure_linter.javascriptlintrules",
            "closure_linter.javascriptstatetracker",
            "closure_linter.javascriptstatetracker_test",
            "closure_linter.javascripttokenizer",
            "closure_linter.javascripttokens",
            "closure_linter.not_strict_test",
            "closure_linter.requireprovidesorter",
            "closure_linter.requireprovidesorter_test",
            "closure_linter.runner",
            "closure_linter.runner_test",
            "closure_linter.scopeutil",
            "closure_linter.scopeutil_test",
            "closure_linter.statetracker",
            "closure_linter.statetracker_test",
            "closure_linter.strict_test",
            "closure_linter.testutil",
            "closure_linter.tokenutil",
            "closure_linter.tokenutil_test",
            "closure_linter.typeannotation",
            "closure_linter.typeannotation_test"
        ],
        "version": "2.3.19"
    },
    "closure-soy": {
        "cmdline": [],
        "modules": [
            "closure_soy"
        ],
        "version": "20121221"
    },
    "closurebuilder": {
        "cmdline": [],
        "modules": [
            "closurebuilder",
            "closurebuilder.closureapp",
            "closurebuilder.closurecompile",
            "closurebuilder.closureinit",
            "closurebuilder.closurepatch",
            "closurebuilder.csscompiler",
            "closurebuilder.depstree",
            "closurebuilder.diff_match_patch",
            "closurebuilder.help",
            "closurebuilder.jscompiler",
            "closurebuilder.manifest",
            "closurebuilder.metadata",
            "closurebuilder.script",
            "closurebuilder.sourcemeta",
            "closurebuilder.sources",
            "closurebuilder.util"
        ],
        "version": "0.3.7"
    },
    "cloth": {
        "cmdline": [],
        "modules": [],
        "version": "0.3"
    },
    "cloud": {
        "cmdline": [],
        "modules": [
            "cloud",
            "cloud._server_bucket",
            "cloud.account",
            "cloud.bucket",
            "cloud.cli",
            "cloud.cli.argparse",
            "cloud.cli.argparsers",
            "cloud.cli.functions",
            "cloud.cli.main",
            "cloud.cli.setup_machine",
            "cloud.cli.util",
            "cloud.cloud",
            "cloud.cloudconfig",
            "cloud.cloudinterface",
            "cloud.cloudlog",
            "cloud.cron",
            "cloud.environment",
            "cloud.files",
            "cloud.mp",
            "cloud.pool_interface",
            "cloud.queue",
            "cloud.realtime",
            "cloud.rest",
            "cloud.serialization",
            "cloud.serialization.cloudpickle",
            "cloud.serialization.pickledebug",
            "cloud.serialization.report",
            "cloud.serialization.serializationhandlers",
            "cloud.serialization.xmlhandlers",
            "cloud.shell",
            "cloud.shortcuts",
            "cloud.shortcuts.ssh",
            "cloud.transport",
            "cloud.transport.adapter",
            "cloud.transport.codedependency",
            "cloud.transport.connection",
            "cloud.transport.local",
            "cloud.transport.network",
            "cloud.transport.queue_attachment",
            "cloud.transport.simulator",
            "cloud.util",
            "cloud.util.cache",
            "cloud.util.cloghandler",
            "cloud.util.cloghandler.cloghandler",
            "cloud.util.cloghandler.portalocker",
            "cloud.util.common",
            "cloud.util.configmanager",
            "cloud.util.credentials",
            "cloud.util.cronexpr",
            "cloud.util.gzip_stream",
            "cloud.util.template",
            "cloud.util.urllib2_file",
            "cloud.util.writeconfig",
            "cloud.util.xrange_helper",
            "cloud.util.zip_packer",
            "cloud.versioninfo",
            "cloud.volume",
            "cloud.wait_for"
        ],
        "version": "2.8.5"
    },
    "cloud-bdii-provider": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.dev140.g387348d"
    },
    "cloud-beds": {
        "cmdline": [
            "cloud-beds"
        ],
        "modules": [
            "cloud_beds",
            "cloud_beds.cli",
            "cloud_beds.db",
            "cloud_beds.util"
        ],
        "version": "0.0.3"
    },
    "cloud-calculator": {
        "cmdline": [],
        "modules": [
            "sitio",
            "sitio.adapters",
            "sitio.adapters.CSV_reader",
            "sitio.analyser",
            "sitio.analyser.aws",
            "sitio.analyser.rackspace",
            "sitio.common",
            "sitio.common.utils",
            "sitio.model",
            "sitio.model.TCO_Model"
        ],
        "version": "0.1.0"
    },
    "cloud-clients": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloud-commander": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloud-compose": {
        "cmdline": [],
        "modules": [
            "cloudcompose",
            "cloudcompose.cli",
            "cloudcompose.cloudinit",
            "cloudcompose.config",
            "cloudcompose.exceptions",
            "cloudcompose.util"
        ],
        "version": "0.3.0"
    },
    "cloud-compose-cluster": {
        "cmdline": [],
        "modules": [
            "cloudcompose",
            "cloudcompose.cluster",
            "cloudcompose.cluster.aws",
            "cloudcompose.cluster.aws.cloudcontroller",
            "cloudcompose.cluster.aws.cloudwatch",
            "cloudcompose.cluster.aws.ebs",
            "cloudcompose.cluster.aws.iam",
            "cloudcompose.cluster.cloudinit",
            "cloudcompose.cluster.commands",
            "cloudcompose.cluster.commands.cli",
            "cloudcompose.cluster.dockercompose",
            "cloudcompose.cluster.template"
        ],
        "version": "0.13.1"
    },
    "cloud-compose-datadog": {
        "cmdline": [],
        "modules": [
            "cloudcompose",
            "cloudcompose.datadog",
            "cloudcompose.datadog.commands",
            "cloudcompose.datadog.commands.cli",
            "cloudcompose.datadog.monitoring",
            "cloudcompose.datadog.monitoring.datadogcontroller"
        ],
        "version": "0.1.3"
    },
    "cloud-compose-image": {
        "cmdline": [],
        "modules": [
            "cloudcompose",
            "cloudcompose.image",
            "cloudcompose.image.aws",
            "cloudcompose.image.aws.cloudcontroller",
            "cloudcompose.image.commands",
            "cloudcompose.image.commands.cli"
        ],
        "version": "0.1.2"
    },
    "cloud-compose-mongo": {
        "cmdline": [],
        "modules": [
            "cloudcompose",
            "cloudcompose.mongo",
            "cloudcompose.mongo.commands",
            "cloudcompose.mongo.commands.cli",
            "cloudcompose.mongo.controller",
            "cloudcompose.mongo.workflow"
        ],
        "version": "0.1.1"
    },
    "cloud-crony": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloud-crony-worker": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloud-dns": {
        "cmdline": [],
        "modules": [
            "cloud_dns",
            "cloud_dns.config",
            "cloud_dns.entry_points",
            "cloud_dns.project",
            "cloud_dns.version"
        ],
        "version": "0.3.2"
    },
    "cloud-dns-cli": {
        "cmdline": [],
        "modules": [
            "cloud_dns_cli",
            "cloud_dns_cli.cloud_dns_cli"
        ],
        "version": "0.9.04"
    },
    "cloud-elements": {
        "cmdline": [],
        "modules": [
            "cloud_elements"
        ],
        "version": "0.2.2"
    },
    "cloud-elements-test-framework": {
        "cmdline": [],
        "modules": [
            "cloud_elements_test_framework"
        ],
        "version": "0.0.9"
    },
    "cloud-ftp": {
        "cmdline": [],
        "modules": [
            "cloud_ftp",
            "cloud_ftp.api",
            "cloud_ftp.api.v1",
            "cloud_ftp.error",
            "cloud_ftp.ftp",
            "cloud_ftp.ftp.providers",
            "cloud_ftp.ftp.providers.cloud_function",
            "cloud_ftp.storage",
            "cloud_ftp.storage.providers",
            "cloud_ftp.storage.providers.gcs"
        ],
        "version": "1.0.1"
    },
    "cloud-lib": {
        "cmdline": [],
        "modules": [
            "cloud_lib",
            "cloud_lib.amazon_services",
            "cloud_lib.google_services"
        ],
        "version": "1.1.13"
    },
    "cloud-maker": {
        "cmdline": [],
        "modules": [
            "cloud_maker",
            "cloud_maker.py_version",
            "fedora2ova",
            "fedora2ova.app",
            "fedora2ova.tempdir",
            "make_provisioner",
            "make_provisioner.app",
            "make_provisioner.data",
            "make_provisioner.template"
        ],
        "version": "0.8.4"
    },
    "cloud-ml-common": {
        "cmdline": [],
        "modules": [
            "cloud_ml_common",
            "cloud_ml_common.auth",
            "cloud_ml_common.auth.constant",
            "cloud_ml_common.auth.signature",
            "cloud_ml_common.auth.signature_test"
        ],
        "version": "0.2.2"
    },
    "cloud-ml-sdk": {
        "cmdline": [],
        "modules": [
            "cloud_ml_sdk",
            "cloud_ml_sdk.client",
            "cloud_ml_sdk.command",
            "cloud_ml_sdk.command.color_util",
            "cloud_ml_sdk.command.command",
            "cloud_ml_sdk.command.command_admin",
            "cloud_ml_sdk.command.constant",
            "cloud_ml_sdk.command.util",
            "cloud_ml_sdk.models",
            "cloud_ml_sdk.models.constant",
            "cloud_ml_sdk.models.dev_env",
            "cloud_ml_sdk.models.dev_server",
            "cloud_ml_sdk.models.model_service",
            "cloud_ml_sdk.models.quota",
            "cloud_ml_sdk.models.tensorboard_service",
            "cloud_ml_sdk.models.train_job",
            "cloud_ml_sdk.models.util",
            "cloud_ml_sdk.predict_client",
            "cloud_ml_sdk.predict_client.generic_predict_client",
            "cloud_ml_sdk.predict_client.model_pb2",
            "cloud_ml_sdk.predict_client.predict_pb2",
            "cloud_ml_sdk.predict_client.prediction_service_pb2"
        ],
        "version": "0.2.9"
    },
    "cloud-pipe": {
        "cmdline": [],
        "modules": [
            "cloud_pipe",
            "cloud_pipe.pipeline",
            "cloud_pipe.pipeline.cleanup",
            "cloud_pipe.pipeline.config",
            "cloud_pipe.pipeline.image_class",
            "cloud_pipe.pipeline.set_pipe",
            "cloud_pipe.pipeline.task_config",
            "cloud_pipe.scripts",
            "cloud_pipe.scripts.setup_pipe",
            "cloud_pipe.scripts.wrap",
            "cloud_pipe.utils",
            "cloud_pipe.wrapper",
            "cloud_pipe.wrapper.container_wrapper"
        ],
        "version": "0.0.3"
    },
    "cloud-resolve-conflicts": {
        "cmdline": [
            "cloud-resolve-conflicts"
        ],
        "modules": [
            "cloud_resolve_conflicts",
            "cloud_resolve_conflicts.cloud_resolve_conflicts"
        ],
        "version": "0.0.8"
    },
    "cloud-scheduler": {
        "cmdline": [
            "cloud_admin",
            "cloud_scheduler",
            "cloud_status"
        ],
        "modules": [
            "cloudscheduler",
            "cloudscheduler.__version__",
            "cloudscheduler.admin_server",
            "cloudscheduler.azurecluster",
            "cloudscheduler.botocluster",
            "cloudscheduler.cloud_init_util",
            "cloudscheduler.cloud_management",
            "cloudscheduler.cloudconfig",
            "cloudscheduler.cluster_tools",
            "cloudscheduler.config",
            "cloudscheduler.ec2cluster",
            "cloudscheduler.googlecluster",
            "cloudscheduler.info_server",
            "cloudscheduler.job_containers",
            "cloudscheduler.job_management",
            "cloudscheduler.openstackcluster",
            "cloudscheduler.proxy_refreshers",
            "cloudscheduler.stratuslabcluster",
            "cloudscheduler.utilities",
            "cloudscheduler.vm_containers"
        ],
        "version": "1.12.1"
    },
    "cloud-sptheme": {
        "cmdline": [],
        "modules": [
            "cloud_sptheme",
            "cloud_sptheme.ext",
            "cloud_sptheme.ext.auto_redirect",
            "cloud_sptheme.ext.autoattribute_search_bases",
            "cloud_sptheme.ext.autodoc_sections",
            "cloud_sptheme.ext.docfield_markup",
            "cloud_sptheme.ext.escaped_samp_literals",
            "cloud_sptheme.ext.index_styling",
            "cloud_sptheme.ext.issue_tracker",
            "cloud_sptheme.ext.page_only",
            "cloud_sptheme.ext.perpage",
            "cloud_sptheme.ext.relbar_links",
            "cloud_sptheme.ext.relbar_toc",
            "cloud_sptheme.ext.role_index",
            "cloud_sptheme.ext.table_styling",
            "cloud_sptheme.make_helper",
            "cloud_sptheme.tests",
            "cloud_sptheme.tests.test_ext_relbar_toc",
            "cloud_sptheme.tests.utils",
            "cloud_sptheme.utils"
        ],
        "version": "1.9.4"
    },
    "cloud-weather-report": {
        "cmdline": [],
        "modules": [
            "cloudweatherreport",
            "cloudweatherreport.cloud_weather_report",
            "cloudweatherreport.reporter",
            "cloudweatherreport.run",
            "cloudweatherreport.tests",
            "cloudweatherreport.tests.common_test",
            "cloudweatherreport.tests.test_cloud_weather_report",
            "cloudweatherreport.tests.test_reporter",
            "cloudweatherreport.tests.test_run",
            "cloudweatherreport.tests.test_utils",
            "cloudweatherreport.utils"
        ],
        "version": "0.4.2"
    },
    "cloud-wiki": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloud4rpi": {
        "cmdline": [],
        "modules": [
            "cloud4rpi",
            "cloud4rpi.api_client",
            "cloud4rpi.config",
            "cloud4rpi.device"
        ],
        "version": "0.0.15"
    },
    "cloudacademy-dl": {
        "cmdline": [],
        "modules": [
            "cloudacademy",
            "cloudacademy.cloudacademy_dl"
        ],
        "version": "0.1.1"
    },
    "cloudage": {
        "cmdline": [],
        "modules": [
            "cloudage",
            "cloudage.cloudage"
        ],
        "version": "0.0.0"
    },
    "cloudant": {
        "cmdline": [],
        "modules": [
            "cloudant",
            "cloudant._2to3",
            "cloudant._common_util",
            "cloudant._messages",
            "cloudant.adapters",
            "cloudant.client",
            "cloudant.database",
            "cloudant.design_document",
            "cloudant.document",
            "cloudant.error",
            "cloudant.feed",
            "cloudant.index",
            "cloudant.query",
            "cloudant.replicator",
            "cloudant.result",
            "cloudant.security_document",
            "cloudant.view"
        ],
        "version": "2.4.0"
    },
    "cloudantdb": {
        "cmdline": [],
        "modules": [
            "cloudantdb",
            "cloudantdb.document",
            "cloudantdb.document.base",
            "cloudantdb.document.vanilla",
            "cloudantdb.exceptions",
            "cloudantdb.ext",
            "cloudantdb.ext.django",
            "cloudantdb.ext.django.document",
            "cloudantdb.ext.django.forms",
            "cloudantdb.ext.django.loading",
            "cloudantdb.ext.django.management",
            "cloudantdb.ext.django.management.commands",
            "cloudantdb.ext.django.management.commands.sync_cloudant",
            "cloudantdb.ext.django.models",
            "cloudantdb.ext.django.testcases",
            "cloudantdb.ext.django.testrunner",
            "cloudantdb.loading",
            "cloudantdb.loading.base",
            "cloudantdb.loading.vanilla",
            "cloudantdb.properties",
            "cloudantdb.query",
            "cloudantdb.utils",
            "cloudantdb.validators"
        ],
        "version": "0.2"
    },
    "cloudapp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloudarmy": {
        "cmdline": [],
        "modules": [
            "cloudarmy",
            "cloudarmy.cli",
            "cloudarmy.contrib",
            "cloudarmy.contrib.conditions",
            "cloudarmy.contrib.conditions.environment",
            "cloudarmy.contrib.mixins",
            "cloudarmy.contrib.mixins.environment",
            "cloudarmy.contrib.parameters",
            "cloudarmy.contrib.parameters.environment",
            "cloudarmy.core",
            "cloudarmy.core.base"
        ],
        "version": "0.1"
    },
    "cloudaux": {
        "cmdline": [],
        "modules": [
            "cloudaux",
            "cloudaux.__about__",
            "cloudaux.aws",
            "cloudaux.aws.autoscaling",
            "cloudaux.aws.decorators",
            "cloudaux.aws.ec2",
            "cloudaux.aws.elb",
            "cloudaux.aws.elbv2",
            "cloudaux.aws.iam",
            "cloudaux.aws.route53",
            "cloudaux.aws.s3",
            "cloudaux.aws.sqs",
            "cloudaux.aws.sts",
            "cloudaux.decorators",
            "cloudaux.exceptions",
            "cloudaux.gcp",
            "cloudaux.gcp.auth",
            "cloudaux.gcp.config",
            "cloudaux.gcp.decorators",
            "cloudaux.gcp.gce",
            "cloudaux.gcp.gce.firewall",
            "cloudaux.gcp.gce.network",
            "cloudaux.gcp.gcpcache",
            "cloudaux.gcp.gcs",
            "cloudaux.gcp.iam",
            "cloudaux.gcp.utils",
            "cloudaux.orchestration",
            "cloudaux.orchestration.aws",
            "cloudaux.orchestration.aws.arn",
            "cloudaux.orchestration.aws.elb",
            "cloudaux.orchestration.aws.elbv2",
            "cloudaux.orchestration.aws.iam",
            "cloudaux.orchestration.aws.iam.role",
            "cloudaux.orchestration.aws.iam.saml_provider",
            "cloudaux.orchestration.aws.iam.user",
            "cloudaux.orchestration.aws.s3",
            "cloudaux.orchestration.gcp",
            "cloudaux.orchestration.gcp.gce",
            "cloudaux.orchestration.gcp.gce.network",
            "cloudaux.orchestration.gcp.gcs",
            "cloudaux.orchestration.gcp.gcs.bucket",
            "cloudaux.orchestration.gcp.iam",
            "cloudaux.orchestration.gcp.iam.serviceaccount",
            "tests",
            "tests.gcp",
            "tests.gcp.test_auth",
            "tests.gcp.test_gcpcache",
            "tests.gcp.test_utils"
        ],
        "version": "1.2.7"
    },
    "cloudbackup": {
        "cmdline": [],
        "modules": [
            "cloudbackup",
            "cloudbackup.commands",
            "cloudbackup.commands.send",
            "cloudbackup.drivers",
            "cloudbackup.drivers.s3",
            "cloudbackup.drivers.s3.writer",
            "cloudbackup.progressbar",
            "cloudbackup.progressbar.compat",
            "cloudbackup.progressbar.progressbar",
            "cloudbackup.progressbar.widgets"
        ],
        "version": "0.0.1"
    },
    "cloudbase-init": {
        "cmdline": [],
        "modules": [],
        "version": "0.9.11"
    },
    "cloudbase-oss-pysdk": {
        "cmdline": [],
        "modules": [
            "s3pysdk",
            "s3pysdk.bucket",
            "s3pysdk.connection",
            "s3pysdk.models",
            "s3pysdk.s3",
            "s3pysdk.upload"
        ],
        "version": "1.1"
    },
    "cloudbench": {
        "cmdline": [],
        "modules": [
            "cloudbench",
            "cloudbench.api",
            "cloudbench.api.auth",
            "cloudbench.api.client",
            "cloudbench.api.exceptions",
            "cloudbench.api.factory",
            "cloudbench.api.util",
            "cloudbench.cli",
            "cloudbench.cloud",
            "cloudbench.cloud.base",
            "cloudbench.cloud.ec2",
            "cloudbench.cloud.exceptions",
            "cloudbench.cloud.gce",
            "cloudbench.cloud.rackspace",
            "cloudbench.cloud.utils",
            "cloudbench.fio",
            "cloudbench.fio.config",
            "cloudbench.fio.config.config",
            "cloudbench.fio.config.job",
            "cloudbench.fio.config.library",
            "cloudbench.fio.engine",
            "cloudbench.fio.exceptions",
            "cloudbench.fio.output",
            "cloudbench.fio.report",
            "cloudbench.fio.report.single",
            "cloudbench.test",
            "cloudbench.test.api",
            "cloudbench.test.api.test_auth",
            "cloudbench.test.api.test_create",
            "cloudbench.test.api.test_errors",
            "cloudbench.test.api.test_get",
            "cloudbench.test.api.test_list",
            "cloudbench.test.api.test_update",
            "cloudbench.test.cli",
            "cloudbench.test.cli.test_api",
            "cloudbench.test.cli.test_utils",
            "cloudbench.test.cli.utils",
            "cloudbench.test.cloud",
            "cloudbench.test.cloud.rackspace_utils",
            "cloudbench.test.cloud.test_ec2",
            "cloudbench.test.cloud.test_gce",
            "cloudbench.test.cloud.test_identify",
            "cloudbench.test.cloud.test_rackspace",
            "cloudbench.test.cloud.test_utils",
            "cloudbench.test.fio",
            "cloudbench.test.fio.test_config",
            "cloudbench.test.fio.test_engine",
            "cloudbench.test.fio.test_output",
            "cloudbench.test.fio.test_report",
            "cloudbench.test.utils",
            "cloudbench.utils",
            "cloudbench.utils.daemon",
            "cloudbench.utils.freeze",
            "cloudbench.utils.fs",
            "cloudbench.utils.math",
            "cloudbench.version"
        ],
        "version": "0.14.1"
    },
    "cloudbiolinux": {
        "cmdline": [],
        "modules": [
            "cloudbio",
            "cloudbio.biodata",
            "cloudbio.biodata.dbsnp",
            "cloudbio.biodata.genomes",
            "cloudbio.biodata.rnaseq",
            "cloudbio.cloudbiolinux",
            "cloudbio.cloudman",
            "cloudbio.custom",
            "cloudbio.custom.bio_general",
            "cloudbio.custom.bio_nextgen",
            "cloudbio.custom.cloudman",
            "cloudbio.custom.distributed",
            "cloudbio.custom.galaxy",
            "cloudbio.custom.java",
            "cloudbio.custom.phylogeny",
            "cloudbio.custom.python",
            "cloudbio.custom.shared",
            "cloudbio.custom.system",
            "cloudbio.custom.vcr",
            "cloudbio.distribution",
            "cloudbio.edition",
            "cloudbio.edition.base",
            "cloudbio.flavor",
            "cloudbio.flavor.config",
            "cloudbio.galaxy",
            "cloudbio.galaxy.applications",
            "cloudbio.galaxy.r",
            "cloudbio.galaxy.tools",
            "cloudbio.galaxy.utils",
            "cloudbio.package",
            "cloudbio.package.deb",
            "cloudbio.package.nix",
            "cloudbio.package.rpm",
            "cloudbio.package.shared",
            "cloudbio.utils",
            "contrib",
            "contrib.flavor",
            "contrib.flavor.boinc",
            "contrib.flavor.boinc.boincflavor",
            "contrib.flavor.phylogeny",
            "contrib.flavor.phylogeny.phylogenyflavor",
            "contrib.flavor.pjotrp",
            "contrib.flavor.pjotrp.biotest",
            "contrib.flavor.pjotrp.biotest.biotestflavor",
            "contrib.flavor.seal",
            "contrib.flavor.seal.sealflavor"
        ],
        "version": "0.3a"
    },
    "cloudbot": {
        "cmdline": [],
        "modules": [
            "cb",
            "cb.cloudbot"
        ],
        "version": "1.2"
    },
    "cloudbox": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloudbrain": {
        "cmdline": [],
        "modules": [
            "cloudbrain",
            "cloudbrain.connectors",
            "cloudbrain.connectors.ConnectorBuffer",
            "cloudbrain.connectors.ConnectorInterface",
            "cloudbrain.connectors.MockConnector",
            "cloudbrain.connectors.MuseConnector",
            "cloudbrain.connectors.OpenBCIConnector",
            "cloudbrain.connectors.muse",
            "cloudbrain.connectors.muse.MuseOSC",
            "cloudbrain.connectors.neurosky",
            "cloudbrain.connectors.neurosky.NeuroskyServer",
            "cloudbrain.connectors.openbci",
            "cloudbrain.connectors.openbci.OpenBCIBoard",
            "cloudbrain.datastore",
            "cloudbrain.datastore.CassandraDAL",
            "cloudbrain.datastore.generate_cassandra_schema",
            "cloudbrain.datastore.rest_api_server",
            "cloudbrain.publishers",
            "cloudbrain.publishers.PikaPublisher",
            "cloudbrain.publishers.PipePublisher",
            "cloudbrain.publishers.PublisherInterface",
            "cloudbrain.publishers.sensor_publisher",
            "cloudbrain.run",
            "cloudbrain.settings",
            "cloudbrain.subscribers",
            "cloudbrain.subscribers.PikaSubscriber",
            "cloudbrain.subscribers.PipeSubscriber",
            "cloudbrain.subscribers.SubscriberInterface",
            "cloudbrain.subscribers.cassandra_subscriber",
            "cloudbrain.subscribers.file_writer_subscriber",
            "cloudbrain.utils",
            "cloudbrain.utils.metadata_info"
        ],
        "version": "0.2.1"
    },
    "cloudbridge": {
        "cmdline": [],
        "modules": [
            "cloudbridge",
            "cloudbridge.cloud",
            "cloudbridge.cloud.base",
            "cloudbridge.cloud.base.provider",
            "cloudbridge.cloud.base.resources",
            "cloudbridge.cloud.base.services",
            "cloudbridge.cloud.factory",
            "cloudbridge.cloud.interfaces",
            "cloudbridge.cloud.interfaces.exceptions",
            "cloudbridge.cloud.interfaces.provider",
            "cloudbridge.cloud.interfaces.resources",
            "cloudbridge.cloud.interfaces.services",
            "cloudbridge.cloud.providers",
            "cloudbridge.cloud.providers.aws",
            "cloudbridge.cloud.providers.aws.provider",
            "cloudbridge.cloud.providers.aws.resources",
            "cloudbridge.cloud.providers.aws.services",
            "cloudbridge.cloud.providers.openstack",
            "cloudbridge.cloud.providers.openstack.helpers",
            "cloudbridge.cloud.providers.openstack.provider",
            "cloudbridge.cloud.providers.openstack.resources",
            "cloudbridge.cloud.providers.openstack.services",
            "test",
            "test.helpers",
            "test.test_block_store_service",
            "test.test_cloud_factory",
            "test.test_cloud_helpers",
            "test.test_compute_service",
            "test.test_image_service",
            "test.test_instance_types_service",
            "test.test_interface",
            "test.test_network_service",
            "test.test_object_life_cycle",
            "test.test_object_store_service",
            "test.test_region_service",
            "test.test_security_service"
        ],
        "version": "0.3.1"
    },
    "cloudcast": {
        "cmdline": [],
        "modules": [
            "cloudcast",
            "cloudcast._utils",
            "cloudcast.elements",
            "cloudcast.iscm",
            "cloudcast.iscm.ansible",
            "cloudcast.iscm.cfninit",
            "cloudcast.iscm.phased",
            "cloudcast.iscm.shell",
            "cloudcast.library",
            "cloudcast.library.stack_user",
            "cloudcast.template"
        ],
        "version": "0.1.2"
    },
    "cloudchain": {
        "cmdline": [],
        "modules": [
            "cloudchain",
            "cloudchain.cloudchain",
            "cloudchain.command_line"
        ],
        "version": "0.1.4"
    },
    "cloudcix": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.3"
    },
    "cloudcli": {
        "cmdline": [
            "cloudcli-amazon",
            "cloudcli-do"
        ],
        "modules": [
            "cloudcli",
            "cloudcli.amazon",
            "cloudcli.digitalocean",
            "cloudcli.utils"
        ],
        "version": "0.1.3"
    },
    "cloudconf": {
        "cmdline": [],
        "modules": [
            "cloudconf",
            "cloudconf.userdata"
        ],
        "version": "0.1.1"
    },
    "cloudcontrol": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloudconvert": {
        "cmdline": [],
        "modules": [
            "cloudconvert",
            "cloudconvert.api",
            "cloudconvert.exceptions",
            "cloudconvert.process",
            "cloudconvert.urlencoder"
        ],
        "version": "1.0.0"
    },
    "cloudcraft": {
        "cmdline": [
            "cloudcraft"
        ],
        "modules": [
            "cloudcraft",
            "cloudcraft.aws",
            "cloudcraft.commander",
            "cloudcraft.mcserver"
        ],
        "version": "0.1.4"
    },
    "cloudctl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloudeebus": {
        "cmdline": [],
        "modules": [
            "cloudeebus",
            "cloudeebus.cloudeebus"
        ],
        "version": "0.6.0"
    },
    "cloudelements": {
        "cmdline": [],
        "modules": [
            "cloudelements",
            "cloudelements.schemas",
            "cloudelements.schemas.jsonschemas",
            "cloudelements.validation",
            "tests.functional",
            "tests.functional.test_cloudelements",
            "tests.unit",
            "tests.unit.test_baserequest",
            "tests.unit.test_cloudelements",
            "tests.unit.test_validate"
        ],
        "version": "0.2.1"
    },
    "cloudengine": {
        "cmdline": [],
        "modules": [
            "cloudengine",
            "cloudengine.admin_urls",
            "cloudengine.api_v2_urls",
            "cloudengine.auth",
            "cloudengine.auth.authentication",
            "cloudengine.auth.models",
            "cloudengine.classes",
            "cloudengine.classes.api",
            "cloudengine.classes.api_v2_urls",
            "cloudengine.classes.exceptions",
            "cloudengine.classes.manager",
            "cloudengine.classes.models",
            "cloudengine.classes.tests",
            "cloudengine.classes.urls",
            "cloudengine.classes.utils",
            "cloudengine.classes.views",
            "cloudengine.core",
            "cloudengine.core.admin",
            "cloudengine.core.api",
            "cloudengine.core.cloudapi_view",
            "cloudengine.core.forms",
            "cloudengine.core.models",
            "cloudengine.core.serializers",
            "cloudengine.core.tests",
            "cloudengine.core.urls",
            "cloudengine.core.utils",
            "cloudengine.core.views",
            "cloudengine.decorators",
            "cloudengine.exceptions",
            "cloudengine.files",
            "cloudengine.files.api",
            "cloudengine.files.api_v2_urls",
            "cloudengine.files.exceptions",
            "cloudengine.files.forms",
            "cloudengine.files.manager",
            "cloudengine.files.models",
            "cloudengine.files.serializers",
            "cloudengine.files.tests",
            "cloudengine.files.urls",
            "cloudengine.files.utils",
            "cloudengine.files.views",
            "cloudengine.models",
            "cloudengine.push",
            "cloudengine.push.api",
            "cloudengine.push.api_v2_urls",
            "cloudengine.push.models",
            "cloudengine.push.push_service",
            "cloudengine.push.tests",
            "cloudengine.push.urls",
            "cloudengine.push.views",
            "cloudengine.socketio",
            "cloudengine.socketio.defaultjson",
            "cloudengine.socketio.handler",
            "cloudengine.socketio.mixins",
            "cloudengine.socketio.namespace",
            "cloudengine.socketio.packet",
            "cloudengine.socketio.policyserver",
            "cloudengine.socketio.sdjango",
            "cloudengine.socketio.server",
            "cloudengine.socketio.sgunicorn",
            "cloudengine.socketio.transports",
            "cloudengine.socketio.virtsocket",
            "cloudengine.testclient",
            "cloudengine.tests",
            "cloudengine.urls",
            "cloudengine.users",
            "cloudengine.users.api",
            "cloudengine.users.api_v2_urls",
            "cloudengine.users.forms",
            "cloudengine.users.models",
            "cloudengine.users.serializers",
            "cloudengine.users.urls",
            "cloudengine.users.views"
        ],
        "version": "0.4.0"
    },
    "cloudenvy": {
        "cmdline": [],
        "modules": [
            "cloudenvy",
            "cloudenvy.clouds",
            "cloudenvy.clouds.ec2",
            "cloudenvy.clouds.openstack",
            "cloudenvy.commands",
            "cloudenvy.commands.destroy",
            "cloudenvy.commands.dotfiles",
            "cloudenvy.commands.files",
            "cloudenvy.commands.init",
            "cloudenvy.commands.ip",
            "cloudenvy.commands.list",
            "cloudenvy.commands.provision",
            "cloudenvy.commands.run",
            "cloudenvy.commands.scp",
            "cloudenvy.commands.snapshot",
            "cloudenvy.commands.ssh",
            "cloudenvy.commands.up",
            "cloudenvy.config",
            "cloudenvy.core",
            "cloudenvy.exceptions",
            "cloudenvy.main",
            "cloudenvy.metadata"
        ],
        "version": "0.9.0"
    },
    "cloudera-director-python-client": {
        "cmdline": [],
        "modules": [
            "cloudera",
            "cloudera.director",
            "cloudera.director.common",
            "cloudera.director.common.Version",
            "cloudera.director.common.VersionsApi",
            "cloudera.director.common.client",
            "cloudera.director.latest",
            "cloudera.director.latest.AuthenticationApi",
            "cloudera.director.latest.ClustersApi",
            "cloudera.director.latest.DatabaseServersApi",
            "cloudera.director.latest.DeploymentsApi",
            "cloudera.director.latest.EnvironmentsApi",
            "cloudera.director.latest.EulaApi",
            "cloudera.director.latest.ImportClientConfigApi",
            "cloudera.director.latest.InstanceTemplatesApi",
            "cloudera.director.latest.NotificationsApi",
            "cloudera.director.latest.ProviderMetadataApi",
            "cloudera.director.latest.UsersApi",
            "cloudera.director.latest.models",
            "cloudera.director.latest.models.Capabilities",
            "cloudera.director.latest.models.CloudProviderMetadata",
            "cloudera.director.latest.models.Cluster",
            "cloudera.director.latest.models.ClusterTemplate",
            "cloudera.director.latest.models.ConfigurationProperty",
            "cloudera.director.latest.models.ConfigurationPropertyValue",
            "cloudera.director.latest.models.Deployment",
            "cloudera.director.latest.models.DeploymentTemplate",
            "cloudera.director.latest.models.DiagnosticDataSummary",
            "cloudera.director.latest.models.DisplayProperty",
            "cloudera.director.latest.models.Environment",
            "cloudera.director.latest.models.ErrorInfo",
            "cloudera.director.latest.models.Eula",
            "cloudera.director.latest.models.ExternalDatabase",
            "cloudera.director.latest.models.ExternalDatabaseServer",
            "cloudera.director.latest.models.ExternalDatabaseServerTemplate",
            "cloudera.director.latest.models.ExternalDatabaseServerUsage",
            "cloudera.director.latest.models.ExternalDatabaseTemplate",
            "cloudera.director.latest.models.Health",
            "cloudera.director.latest.models.HealthCheck",
            "cloudera.director.latest.models.ImportResult",
            "cloudera.director.latest.models.ImportStatus",
            "cloudera.director.latest.models.Instance",
            "cloudera.director.latest.models.InstanceProviderConfig",
            "cloudera.director.latest.models.InstanceState",
            "cloudera.director.latest.models.InstanceTemplate",
            "cloudera.director.latest.models.Login",
            "cloudera.director.latest.models.MeteringSetting",
            "cloudera.director.latest.models.Metrics",
            "cloudera.director.latest.models.MigratingGroup",
            "cloudera.director.latest.models.Migration",
            "cloudera.director.latest.models.Notification",
            "cloudera.director.latest.models.PasswordChange",
            "cloudera.director.latest.models.ResourceProviderMetadata",
            "cloudera.director.latest.models.Service",
            "cloudera.director.latest.models.SshCredentials",
            "cloudera.director.latest.models.Status",
            "cloudera.director.latest.models.TimeSeries",
            "cloudera.director.latest.models.TimeSeriesAggregateStatistics",
            "cloudera.director.latest.models.TimeSeriesCrossEntityMetadata",
            "cloudera.director.latest.models.TimeSeriesData",
            "cloudera.director.latest.models.TimeSeriesMetadata",
            "cloudera.director.latest.models.TimeSeriesResponse",
            "cloudera.director.latest.models.TimeSeriesResponseList",
            "cloudera.director.latest.models.TimeSeriesRow",
            "cloudera.director.latest.models.User",
            "cloudera.director.latest.models.ValidationExceptionCondition",
            "cloudera.director.latest.models.VirtualInstance",
            "cloudera.director.latest.models.VirtualInstanceGroup",
            "cloudera.director.v1",
            "cloudera.director.v1.AuthenticationApi",
            "cloudera.director.v1.ClustersApi",
            "cloudera.director.v1.DeploymentsApi",
            "cloudera.director.v1.EnvironmentsApi",
            "cloudera.director.v1.InstanceTemplatesApi",
            "cloudera.director.v1.UsersApi",
            "cloudera.director.v1.models",
            "cloudera.director.v1.models.Capabilities",
            "cloudera.director.v1.models.Cluster",
            "cloudera.director.v1.models.ClusterTemplate",
            "cloudera.director.v1.models.Deployment",
            "cloudera.director.v1.models.DeploymentTemplate",
            "cloudera.director.v1.models.Environment",
            "cloudera.director.v1.models.ExternalDatabase",
            "cloudera.director.v1.models.Instance",
            "cloudera.director.v1.models.InstanceProviderConfig",
            "cloudera.director.v1.models.InstanceTemplate",
            "cloudera.director.v1.models.Login",
            "cloudera.director.v1.models.PasswordChange",
            "cloudera.director.v1.models.SshCredentials",
            "cloudera.director.v1.models.Status",
            "cloudera.director.v1.models.User",
            "cloudera.director.v1.models.VirtualInstance",
            "cloudera.director.v1.models.VirtualInstanceGroup",
            "cloudera.director.v2",
            "cloudera.director.v2.AuthenticationApi",
            "cloudera.director.v2.ClustersApi",
            "cloudera.director.v2.DatabaseServersApi",
            "cloudera.director.v2.DeploymentsApi",
            "cloudera.director.v2.EnvironmentsApi",
            "cloudera.director.v2.InstanceTemplatesApi",
            "cloudera.director.v2.UsersApi",
            "cloudera.director.v2.models",
            "cloudera.director.v2.models.Capabilities",
            "cloudera.director.v2.models.Cluster",
            "cloudera.director.v2.models.ClusterTemplate",
            "cloudera.director.v2.models.Deployment",
            "cloudera.director.v2.models.DeploymentTemplate",
            "cloudera.director.v2.models.Environment",
            "cloudera.director.v2.models.ExternalDatabase",
            "cloudera.director.v2.models.ExternalDatabaseServer",
            "cloudera.director.v2.models.ExternalDatabaseServerTemplate",
            "cloudera.director.v2.models.ExternalDatabaseTemplate",
            "cloudera.director.v2.models.Health",
            "cloudera.director.v2.models.Instance",
            "cloudera.director.v2.models.InstanceProviderConfig",
            "cloudera.director.v2.models.InstanceTemplate",
            "cloudera.director.v2.models.Login",
            "cloudera.director.v2.models.PasswordChange",
            "cloudera.director.v2.models.Service",
            "cloudera.director.v2.models.SshCredentials",
            "cloudera.director.v2.models.Status",
            "cloudera.director.v2.models.User",
            "cloudera.director.v2.models.VirtualInstance",
            "cloudera.director.v2.models.VirtualInstanceGroup",
            "cloudera.director.v3",
            "cloudera.director.v3.AuthenticationApi",
            "cloudera.director.v3.ClustersApi",
            "cloudera.director.v3.DatabaseServersApi",
            "cloudera.director.v3.DeploymentsApi",
            "cloudera.director.v3.EnvironmentsApi",
            "cloudera.director.v3.InstanceTemplatesApi",
            "cloudera.director.v3.ProviderMetadataApi",
            "cloudera.director.v3.UsersApi",
            "cloudera.director.v3.models",
            "cloudera.director.v3.models.Capabilities",
            "cloudera.director.v3.models.CloudProviderMetadata",
            "cloudera.director.v3.models.Cluster",
            "cloudera.director.v3.models.ClusterTemplate",
            "cloudera.director.v3.models.ConfigurationProperty",
            "cloudera.director.v3.models.ConfigurationPropertyValue",
            "cloudera.director.v3.models.Deployment",
            "cloudera.director.v3.models.DeploymentTemplate",
            "cloudera.director.v3.models.DisplayProperty",
            "cloudera.director.v3.models.Environment",
            "cloudera.director.v3.models.ExternalDatabase",
            "cloudera.director.v3.models.ExternalDatabaseServer",
            "cloudera.director.v3.models.ExternalDatabaseServerTemplate",
            "cloudera.director.v3.models.ExternalDatabaseServerUsage",
            "cloudera.director.v3.models.ExternalDatabaseTemplate",
            "cloudera.director.v3.models.Health",
            "cloudera.director.v3.models.Instance",
            "cloudera.director.v3.models.InstanceProviderConfig",
            "cloudera.director.v3.models.InstanceTemplate",
            "cloudera.director.v3.models.Login",
            "cloudera.director.v3.models.PasswordChange",
            "cloudera.director.v3.models.ResourceProviderMetadata",
            "cloudera.director.v3.models.Service",
            "cloudera.director.v3.models.SshCredentials",
            "cloudera.director.v3.models.Status",
            "cloudera.director.v3.models.User",
            "cloudera.director.v3.models.VirtualInstance",
            "cloudera.director.v3.models.VirtualInstanceGroup",
            "cloudera.director.v4",
            "cloudera.director.v4.AuthenticationApi",
            "cloudera.director.v4.ClustersApi",
            "cloudera.director.v4.DatabaseServersApi",
            "cloudera.director.v4.DeploymentsApi",
            "cloudera.director.v4.EnvironmentsApi",
            "cloudera.director.v4.EulaApi",
            "cloudera.director.v4.ImportClientConfigApi",
            "cloudera.director.v4.InstanceTemplatesApi",
            "cloudera.director.v4.ProviderMetadataApi",
            "cloudera.director.v4.UsersApi",
            "cloudera.director.v4.models",
            "cloudera.director.v4.models.Capabilities",
            "cloudera.director.v4.models.CloudProviderMetadata",
            "cloudera.director.v4.models.Cluster",
            "cloudera.director.v4.models.ClusterTemplate",
            "cloudera.director.v4.models.ConfigurationProperty",
            "cloudera.director.v4.models.ConfigurationPropertyValue",
            "cloudera.director.v4.models.Deployment",
            "cloudera.director.v4.models.DeploymentTemplate",
            "cloudera.director.v4.models.DisplayProperty",
            "cloudera.director.v4.models.Environment",
            "cloudera.director.v4.models.Eula",
            "cloudera.director.v4.models.ExternalDatabase",
            "cloudera.director.v4.models.ExternalDatabaseServer",
            "cloudera.director.v4.models.ExternalDatabaseServerTemplate",
            "cloudera.director.v4.models.ExternalDatabaseServerUsage",
            "cloudera.director.v4.models.ExternalDatabaseTemplate",
            "cloudera.director.v4.models.Health",
            "cloudera.director.v4.models.HealthCheck",
            "cloudera.director.v4.models.ImportResult",
            "cloudera.director.v4.models.ImportStatus",
            "cloudera.director.v4.models.Instance",
            "cloudera.director.v4.models.InstanceProviderConfig",
            "cloudera.director.v4.models.InstanceTemplate",
            "cloudera.director.v4.models.Login",
            "cloudera.director.v4.models.Metrics",
            "cloudera.director.v4.models.MigratingGroup",
            "cloudera.director.v4.models.Migration",
            "cloudera.director.v4.models.PasswordChange",
            "cloudera.director.v4.models.ResourceProviderMetadata",
            "cloudera.director.v4.models.Service",
            "cloudera.director.v4.models.SshCredentials",
            "cloudera.director.v4.models.Status",
            "cloudera.director.v4.models.TimeSeries",
            "cloudera.director.v4.models.TimeSeriesAggregateStatistics",
            "cloudera.director.v4.models.TimeSeriesCrossEntityMetadata",
            "cloudera.director.v4.models.TimeSeriesData",
            "cloudera.director.v4.models.TimeSeriesMetadata",
            "cloudera.director.v4.models.TimeSeriesResponse",
            "cloudera.director.v4.models.TimeSeriesResponseList",
            "cloudera.director.v4.models.TimeSeriesRow",
            "cloudera.director.v4.models.User",
            "cloudera.director.v4.models.VirtualInstance",
            "cloudera.director.v4.models.VirtualInstanceGroup",
            "cloudera.director.v5",
            "cloudera.director.v5.AuthenticationApi",
            "cloudera.director.v5.ClustersApi",
            "cloudera.director.v5.DatabaseServersApi",
            "cloudera.director.v5.DeploymentsApi",
            "cloudera.director.v5.EnvironmentsApi",
            "cloudera.director.v5.EulaApi",
            "cloudera.director.v5.ImportClientConfigApi",
            "cloudera.director.v5.InstanceTemplatesApi",
            "cloudera.director.v5.NotificationsApi",
            "cloudera.director.v5.ProviderMetadataApi",
            "cloudera.director.v5.UsersApi",
            "cloudera.director.v5.models",
            "cloudera.director.v5.models.Capabilities",
            "cloudera.director.v5.models.CloudProviderMetadata",
            "cloudera.director.v5.models.Cluster",
            "cloudera.director.v5.models.ClusterTemplate",
            "cloudera.director.v5.models.ConfigurationProperty",
            "cloudera.director.v5.models.ConfigurationPropertyValue",
            "cloudera.director.v5.models.Deployment",
            "cloudera.director.v5.models.DeploymentTemplate",
            "cloudera.director.v5.models.DisplayProperty",
            "cloudera.director.v5.models.Environment",
            "cloudera.director.v5.models.Eula",
            "cloudera.director.v5.models.ExternalDatabase",
            "cloudera.director.v5.models.ExternalDatabaseServer",
            "cloudera.director.v5.models.ExternalDatabaseServerTemplate",
            "cloudera.director.v5.models.ExternalDatabaseServerUsage",
            "cloudera.director.v5.models.ExternalDatabaseTemplate",
            "cloudera.director.v5.models.Health",
            "cloudera.director.v5.models.HealthCheck",
            "cloudera.director.v5.models.ImportResult",
            "cloudera.director.v5.models.ImportStatus",
            "cloudera.director.v5.models.Instance",
            "cloudera.director.v5.models.InstanceProviderConfig",
            "cloudera.director.v5.models.InstanceTemplate",
            "cloudera.director.v5.models.Login",
            "cloudera.director.v5.models.MeteringSetting",
            "cloudera.director.v5.models.Metrics",
            "cloudera.director.v5.models.MigratingGroup",
            "cloudera.director.v5.models.Migration",
            "cloudera.director.v5.models.Notification",
            "cloudera.director.v5.models.PasswordChange",
            "cloudera.director.v5.models.ResourceProviderMetadata",
            "cloudera.director.v5.models.Service",
            "cloudera.director.v5.models.SshCredentials",
            "cloudera.director.v5.models.Status",
            "cloudera.director.v5.models.TimeSeries",
            "cloudera.director.v5.models.TimeSeriesAggregateStatistics",
            "cloudera.director.v5.models.TimeSeriesCrossEntityMetadata",
            "cloudera.director.v5.models.TimeSeriesData",
            "cloudera.director.v5.models.TimeSeriesMetadata",
            "cloudera.director.v5.models.TimeSeriesResponse",
            "cloudera.director.v5.models.TimeSeriesResponseList",
            "cloudera.director.v5.models.TimeSeriesRow",
            "cloudera.director.v5.models.User",
            "cloudera.director.v5.models.VirtualInstance",
            "cloudera.director.v5.models.VirtualInstanceGroup",
            "cloudera.director.v6",
            "cloudera.director.v6.AuthenticationApi",
            "cloudera.director.v6.ClustersApi",
            "cloudera.director.v6.DatabaseServersApi",
            "cloudera.director.v6.DeploymentsApi",
            "cloudera.director.v6.EnvironmentsApi",
            "cloudera.director.v6.EulaApi",
            "cloudera.director.v6.ImportClientConfigApi",
            "cloudera.director.v6.InstanceTemplatesApi",
            "cloudera.director.v6.NotificationsApi",
            "cloudera.director.v6.ProviderMetadataApi",
            "cloudera.director.v6.UsersApi",
            "cloudera.director.v6.models",
            "cloudera.director.v6.models.Capabilities",
            "cloudera.director.v6.models.CloudProviderMetadata",
            "cloudera.director.v6.models.Cluster",
            "cloudera.director.v6.models.ClusterTemplate",
            "cloudera.director.v6.models.ConfigurationProperty",
            "cloudera.director.v6.models.ConfigurationPropertyValue",
            "cloudera.director.v6.models.Deployment",
            "cloudera.director.v6.models.DeploymentTemplate",
            "cloudera.director.v6.models.DiagnosticDataSummary",
            "cloudera.director.v6.models.DisplayProperty",
            "cloudera.director.v6.models.Environment",
            "cloudera.director.v6.models.Eula",
            "cloudera.director.v6.models.ExternalDatabase",
            "cloudera.director.v6.models.ExternalDatabaseServer",
            "cloudera.director.v6.models.ExternalDatabaseServerTemplate",
            "cloudera.director.v6.models.ExternalDatabaseServerUsage",
            "cloudera.director.v6.models.ExternalDatabaseTemplate",
            "cloudera.director.v6.models.Health",
            "cloudera.director.v6.models.HealthCheck",
            "cloudera.director.v6.models.ImportResult",
            "cloudera.director.v6.models.ImportStatus",
            "cloudera.director.v6.models.Instance",
            "cloudera.director.v6.models.InstanceProviderConfig",
            "cloudera.director.v6.models.InstanceTemplate",
            "cloudera.director.v6.models.Login",
            "cloudera.director.v6.models.MeteringSetting",
            "cloudera.director.v6.models.Metrics",
            "cloudera.director.v6.models.MigratingGroup",
            "cloudera.director.v6.models.Migration",
            "cloudera.director.v6.models.Notification",
            "cloudera.director.v6.models.PasswordChange",
            "cloudera.director.v6.models.ResourceProviderMetadata",
            "cloudera.director.v6.models.Service",
            "cloudera.director.v6.models.SshCredentials",
            "cloudera.director.v6.models.Status",
            "cloudera.director.v6.models.TimeSeries",
            "cloudera.director.v6.models.TimeSeriesAggregateStatistics",
            "cloudera.director.v6.models.TimeSeriesCrossEntityMetadata",
            "cloudera.director.v6.models.TimeSeriesData",
            "cloudera.director.v6.models.TimeSeriesMetadata",
            "cloudera.director.v6.models.TimeSeriesResponse",
            "cloudera.director.v6.models.TimeSeriesResponseList",
            "cloudera.director.v6.models.TimeSeriesRow",
            "cloudera.director.v6.models.User",
            "cloudera.director.v6.models.VirtualInstance",
            "cloudera.director.v6.models.VirtualInstanceGroup",
            "cloudera.director.v7",
            "cloudera.director.v7.AuthenticationApi",
            "cloudera.director.v7.ClustersApi",
            "cloudera.director.v7.DatabaseServersApi",
            "cloudera.director.v7.DeploymentsApi",
            "cloudera.director.v7.EnvironmentsApi",
            "cloudera.director.v7.EulaApi",
            "cloudera.director.v7.ImportClientConfigApi",
            "cloudera.director.v7.InstanceTemplatesApi",
            "cloudera.director.v7.NotificationsApi",
            "cloudera.director.v7.ProviderMetadataApi",
            "cloudera.director.v7.UsersApi",
            "cloudera.director.v7.models",
            "cloudera.director.v7.models.Capabilities",
            "cloudera.director.v7.models.CloudProviderMetadata",
            "cloudera.director.v7.models.Cluster",
            "cloudera.director.v7.models.ClusterTemplate",
            "cloudera.director.v7.models.ConfigurationProperty",
            "cloudera.director.v7.models.ConfigurationPropertyValue",
            "cloudera.director.v7.models.Deployment",
            "cloudera.director.v7.models.DeploymentTemplate",
            "cloudera.director.v7.models.DiagnosticDataSummary",
            "cloudera.director.v7.models.DisplayProperty",
            "cloudera.director.v7.models.Environment",
            "cloudera.director.v7.models.Eula",
            "cloudera.director.v7.models.ExternalDatabase",
            "cloudera.director.v7.models.ExternalDatabaseServer",
            "cloudera.director.v7.models.ExternalDatabaseServerTemplate",
            "cloudera.director.v7.models.ExternalDatabaseServerUsage",
            "cloudera.director.v7.models.ExternalDatabaseTemplate",
            "cloudera.director.v7.models.Health",
            "cloudera.director.v7.models.HealthCheck",
            "cloudera.director.v7.models.ImportResult",
            "cloudera.director.v7.models.ImportStatus",
            "cloudera.director.v7.models.Instance",
            "cloudera.director.v7.models.InstanceProviderConfig",
            "cloudera.director.v7.models.InstanceTemplate",
            "cloudera.director.v7.models.Login",
            "cloudera.director.v7.models.MeteringSetting",
            "cloudera.director.v7.models.Metrics",
            "cloudera.director.v7.models.MigratingGroup",
            "cloudera.director.v7.models.Migration",
            "cloudera.director.v7.models.Notification",
            "cloudera.director.v7.models.PasswordChange",
            "cloudera.director.v7.models.ResourceProviderMetadata",
            "cloudera.director.v7.models.Service",
            "cloudera.director.v7.models.SshCredentials",
            "cloudera.director.v7.models.Status",
            "cloudera.director.v7.models.TimeSeries",
            "cloudera.director.v7.models.TimeSeriesAggregateStatistics",
            "cloudera.director.v7.models.TimeSeriesCrossEntityMetadata",
            "cloudera.director.v7.models.TimeSeriesData",
            "cloudera.director.v7.models.TimeSeriesMetadata",
            "cloudera.director.v7.models.TimeSeriesResponse",
            "cloudera.director.v7.models.TimeSeriesResponseList",
            "cloudera.director.v7.models.TimeSeriesRow",
            "cloudera.director.v7.models.User",
            "cloudera.director.v7.models.VirtualInstance",
            "cloudera.director.v7.models.VirtualInstanceGroup",
            "cloudera.director.v8",
            "cloudera.director.v8.AuthenticationApi",
            "cloudera.director.v8.ClustersApi",
            "cloudera.director.v8.DatabaseServersApi",
            "cloudera.director.v8.DeploymentsApi",
            "cloudera.director.v8.EnvironmentsApi",
            "cloudera.director.v8.EulaApi",
            "cloudera.director.v8.ImportClientConfigApi",
            "cloudera.director.v8.InstanceTemplatesApi",
            "cloudera.director.v8.NotificationsApi",
            "cloudera.director.v8.ProviderMetadataApi",
            "cloudera.director.v8.UsersApi",
            "cloudera.director.v8.models",
            "cloudera.director.v8.models.Capabilities",
            "cloudera.director.v8.models.CloudProviderMetadata",
            "cloudera.director.v8.models.Cluster",
            "cloudera.director.v8.models.ClusterTemplate",
            "cloudera.director.v8.models.ConfigurationProperty",
            "cloudera.director.v8.models.ConfigurationPropertyValue",
            "cloudera.director.v8.models.Deployment",
            "cloudera.director.v8.models.DeploymentTemplate",
            "cloudera.director.v8.models.DiagnosticDataSummary",
            "cloudera.director.v8.models.DisplayProperty",
            "cloudera.director.v8.models.Environment",
            "cloudera.director.v8.models.ErrorInfo",
            "cloudera.director.v8.models.Eula",
            "cloudera.director.v8.models.ExternalDatabase",
            "cloudera.director.v8.models.ExternalDatabaseServer",
            "cloudera.director.v8.models.ExternalDatabaseServerTemplate",
            "cloudera.director.v8.models.ExternalDatabaseServerUsage",
            "cloudera.director.v8.models.ExternalDatabaseTemplate",
            "cloudera.director.v8.models.Health",
            "cloudera.director.v8.models.HealthCheck",
            "cloudera.director.v8.models.ImportResult",
            "cloudera.director.v8.models.ImportStatus",
            "cloudera.director.v8.models.Instance",
            "cloudera.director.v8.models.InstanceProviderConfig",
            "cloudera.director.v8.models.InstanceState",
            "cloudera.director.v8.models.InstanceTemplate",
            "cloudera.director.v8.models.Login",
            "cloudera.director.v8.models.MeteringSetting",
            "cloudera.director.v8.models.Metrics",
            "cloudera.director.v8.models.MigratingGroup",
            "cloudera.director.v8.models.Migration",
            "cloudera.director.v8.models.Notification",
            "cloudera.director.v8.models.PasswordChange",
            "cloudera.director.v8.models.ResourceProviderMetadata",
            "cloudera.director.v8.models.Service",
            "cloudera.director.v8.models.SshCredentials",
            "cloudera.director.v8.models.Status",
            "cloudera.director.v8.models.TimeSeries",
            "cloudera.director.v8.models.TimeSeriesAggregateStatistics",
            "cloudera.director.v8.models.TimeSeriesCrossEntityMetadata",
            "cloudera.director.v8.models.TimeSeriesData",
            "cloudera.director.v8.models.TimeSeriesMetadata",
            "cloudera.director.v8.models.TimeSeriesResponse",
            "cloudera.director.v8.models.TimeSeriesResponseList",
            "cloudera.director.v8.models.TimeSeriesRow",
            "cloudera.director.v8.models.User",
            "cloudera.director.v8.models.ValidationExceptionCondition",
            "cloudera.director.v8.models.VirtualInstance",
            "cloudera.director.v8.models.VirtualInstanceGroup"
        ],
        "version": "2.4.0"
    },
    "cloudfeaster": {
        "cmdline": [
            "spiderhost.py",
            "spiderhost.sh",
            "spiders.py"
        ],
        "modules": [
            "cloudfeaster",
            "cloudfeaster.samples",
            "cloudfeaster.samples.pypi_spider",
            "cloudfeaster.spider",
            "cloudfeaster.util",
            "cloudfeaster.util.tsh",
            "cloudfeaster.webdriver_spider"
        ],
        "version": "0.9.5"
    },
    "cloudferry": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloudfiles-sftpd": {
        "cmdline": [
            "cloudfiles-sftpd"
        ],
        "modules": [
            "cloudfiles_sftpd",
            "cloudfiles_sftpd.access",
            "cloudfiles_sftpd.auth",
            "cloudfiles_sftpd.cloudfs",
            "cloudfiles_sftpd.conf",
            "cloudfiles_sftpd.daemon",
            "cloudfiles_sftpd.distinfo",
            "cloudfiles_sftpd.exceptions",
            "cloudfiles_sftpd.locking",
            "cloudfiles_sftpd.server",
            "cloudfiles_sftpd.server_interface",
            "cloudfiles_sftpd.sftp_server_interface",
            "cloudfiles_sftpd.util"
        ],
        "version": "0.1.2"
    },
    "cloudflare": {
        "cmdline": [],
        "modules": [
            "CloudFlare",
            "CloudFlare.api_extras",
            "CloudFlare.api_v4",
            "CloudFlare.cloudflare",
            "CloudFlare.exceptions",
            "CloudFlare.logger",
            "CloudFlare.read_configs",
            "CloudFlare.utils",
            "cli4",
            "cli4.cli4",
            "cli4.converters",
            "examples",
            "examples.example_are_zones_ipv6",
            "examples.example_are_zones_ipv6_simple",
            "examples.example_certificates",
            "examples.example_create_zone_and_populate",
            "examples.example_dnssec_settings",
            "examples.example_ips",
            "examples.example_paging_thru_zones",
            "examples.example_proxied",
            "examples.example_settings",
            "examples.example_update_dynamic_dns",
            "examples.example_user",
            "examples.example_zones"
        ],
        "version": "1.5.1"
    },
    "cloudflare-cli": {
        "cmdline": [],
        "modules": [
            "cloudflare_cli",
            "cloudflare_cli.Cloudflare"
        ],
        "version": "0.3"
    },
    "cloudflare-ddns": {
        "cmdline": [],
        "modules": [
            "cloudflare_ddns",
            "cloudflare_ddns.cloudflare",
            "cloudflare_ddns.exceptions"
        ],
        "version": "1.1.0"
    },
    "cloudflare-python": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "cloudflare-tor-whitelister": {
        "cmdline": [],
        "modules": [
            "cfwhitelist",
            "cfwhitelist.whitelist"
        ],
        "version": "0.1.1"
    },
    "cloudflare2loggly": {
        "cmdline": [],
        "modules": [
            "cloudflare2loggly",
            "sftplib"
        ],
        "version": "0.0.4"
    },
    "cloudflaredns-backup": {
        "cmdline": [
            "cf-backup"
        ],
        "modules": [
            "cloudflaredns_backup"
        ],
        "version": "1.8"
    },
    "cloudflu": {
        "cmdline": [],
        "modules": [
            "api",
            "api.errors",
            "api.merge",
            "api.pypi",
            "api.stats",
            "api.stdlib",
            "core",
            "core.logger",
            "core.patches",
            "core.utils"
        ],
        "version": "0.28"
    },
    "cloudforest": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloudformation": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "cloudfoundry-client": {
        "cmdline": [],
        "modules": [
            "cloudfoundry_client",
            "cloudfoundry_client.client",
            "cloudfoundry_client.entities",
            "cloudfoundry_client.imported",
            "cloudfoundry_client.loggregator",
            "cloudfoundry_client.loggregator.loggregator",
            "cloudfoundry_client.loggregator.logmessage_pb2",
            "cloudfoundry_client.main",
            "cloudfoundry_client.v2",
            "cloudfoundry_client.v2.apps",
            "cloudfoundry_client.v2.buildpacks",
            "cloudfoundry_client.v2.service_bindings",
            "cloudfoundry_client.v2.service_brokers",
            "cloudfoundry_client.v2.service_instances",
            "cloudfoundry_client.v2.service_keys",
            "cloudfoundry_client.v2.service_plans"
        ],
        "version": "0.0.19"
    },
    "cloudfront-edge-codes": {
        "cmdline": [],
        "modules": [
            "cloudfront_edge_codes",
            "cloudfront_edge_codes.version",
            "tests",
            "tests.base",
            "tests.test_parse_code"
        ],
        "version": "0.1.3"
    },
    "cloudfront-log-parser": {
        "cmdline": [],
        "modules": [
            "cloudfront_log_parser",
            "cloudfront_log_parser.version",
            "tests",
            "tests.base",
            "tests.fixtures",
            "tests.performance",
            "tests.test_parse_lines",
            "tests.test_version"
        ],
        "version": "0.3.0"
    },
    "cloudfrontsigner": {
        "cmdline": [],
        "modules": [
            "cloudfrontsigner",
            "cloudfrontsigner.cfsign",
            "cloudfrontsigner.compat",
            "cloudfrontsigner.tests",
            "cloudfrontsigner.tests.test_cfsign",
            "cloudfrontsigner.tests.test_cloudfrontsigner",
            "cloudfrontsigner.tests.test_functional"
        ],
        "version": "0.1"
    },
    "cloudfs-sdk": {
        "cmdline": [],
        "modules": [
            "cloudfs",
            "cloudfs.account",
            "cloudfs.container",
            "cloudfs.errors",
            "cloudfs.file",
            "cloudfs.filesystem",
            "cloudfs.item",
            "cloudfs.media",
            "cloudfs.path",
            "cloudfs.private",
            "cloudfs.private.cached_object",
            "cloudfs.private.cloudfs_paths",
            "cloudfs.private.filesystem_common",
            "cloudfs.private.rest_api_adapter",
            "cloudfs.private.utils",
            "cloudfs.session",
            "cloudfs.share",
            "cloudfs.user"
        ],
        "version": "1.0.1"
    },
    "cloudhealth": {
        "cmdline": [],
        "modules": [
            "cloudhealth",
            "cloudhealth.accounts",
            "cloudhealth.assets",
            "cloudhealth.cli",
            "cloudhealth.client",
            "cloudhealth.cost",
            "cloudhealth.exceptions",
            "cloudhealth.reports",
            "cloudhealth.usage"
        ],
        "version": "0.1.1"
    },
    "cloudi": {
        "cmdline": [],
        "modules": [
            "cloudi",
            "cloudi_c"
        ],
        "version": "1.7.0"
    },
    "cloudify": {
        "cmdline": [],
        "modules": [
            "cloudify_cli",
            "cloudify_cli.blueprint",
            "cloudify_cli.bootstrap",
            "cloudify_cli.bootstrap.bootstrap",
            "cloudify_cli.bootstrap.resources",
            "cloudify_cli.cli",
            "cloudify_cli.cli.cfy",
            "cloudify_cli.cli.completion_utils",
            "cloudify_cli.cli.helptexts",
            "cloudify_cli.colorful_event",
            "cloudify_cli.commands",
            "cloudify_cli.commands.agents",
            "cloudify_cli.commands.blueprints",
            "cloudify_cli.commands.bootstrap",
            "cloudify_cli.commands.cluster",
            "cloudify_cli.commands.deployments",
            "cloudify_cli.commands.dev",
            "cloudify_cli.commands.events",
            "cloudify_cli.commands.executions",
            "cloudify_cli.commands.groups",
            "cloudify_cli.commands.init",
            "cloudify_cli.commands.install",
            "cloudify_cli.commands.ldap",
            "cloudify_cli.commands.logs",
            "cloudify_cli.commands.maintenance_mode",
            "cloudify_cli.commands.node_instances",
            "cloudify_cli.commands.nodes",
            "cloudify_cli.commands.plugins",
            "cloudify_cli.commands.profiles",
            "cloudify_cli.commands.rollback",
            "cloudify_cli.commands.secrets",
            "cloudify_cli.commands.snapshots",
            "cloudify_cli.commands.ssh",
            "cloudify_cli.commands.status",
            "cloudify_cli.commands.teardown",
            "cloudify_cli.commands.tenants",
            "cloudify_cli.commands.uninstall",
            "cloudify_cli.commands.upgrade",
            "cloudify_cli.commands.user_groups",
            "cloudify_cli.commands.users",
            "cloudify_cli.commands.workflows",
            "cloudify_cli.config",
            "cloudify_cli.config.config",
            "cloudify_cli.constants",
            "cloudify_cli.env",
            "cloudify_cli.exceptions",
            "cloudify_cli.execution_events_fetcher",
            "cloudify_cli.inputs",
            "cloudify_cli.local",
            "cloudify_cli.logger",
            "cloudify_cli.main",
            "cloudify_cli.ssh",
            "cloudify_cli.table",
            "cloudify_cli.utils"
        ],
        "version": "17.3.31"
    },
    "cloudify-agent-packager": {
        "cmdline": [],
        "modules": [
            "agent_packager",
            "agent_packager.cli",
            "agent_packager.codes",
            "agent_packager.dictconfig",
            "agent_packager.logger",
            "agent_packager.packager",
            "agent_packager.six",
            "agent_packager.utils"
        ],
        "version": "4.0.0"
    },
    "cloudify-diamond-plugin": {
        "cmdline": [],
        "modules": [
            "cloudify_handler",
            "cloudify_handler.cloudify",
            "cloudify_handler.format",
            "diamond_agent",
            "diamond_agent.tasks"
        ],
        "version": "1.3.5"
    },
    "cloudify-dsl-parser": {
        "cmdline": [],
        "modules": [
            "dsl_parser",
            "dsl_parser.constants",
            "dsl_parser.elements",
            "dsl_parser.elements.blueprint",
            "dsl_parser.elements.data_types",
            "dsl_parser.elements.imports",
            "dsl_parser.elements.misc",
            "dsl_parser.elements.node_templates",
            "dsl_parser.elements.node_types",
            "dsl_parser.elements.operation",
            "dsl_parser.elements.plugins",
            "dsl_parser.elements.policies",
            "dsl_parser.elements.relationships",
            "dsl_parser.elements.scalable",
            "dsl_parser.elements.types",
            "dsl_parser.elements.version",
            "dsl_parser.elements.workflows",
            "dsl_parser.exceptions",
            "dsl_parser.framework",
            "dsl_parser.framework.elements",
            "dsl_parser.framework.parser",
            "dsl_parser.framework.requirements",
            "dsl_parser.functions",
            "dsl_parser.holder",
            "dsl_parser.import_resolver",
            "dsl_parser.import_resolver.abstract_import_resolver",
            "dsl_parser.import_resolver.default_import_resolver",
            "dsl_parser.interfaces",
            "dsl_parser.interfaces.constants",
            "dsl_parser.interfaces.interfaces_merger",
            "dsl_parser.interfaces.interfaces_parser",
            "dsl_parser.interfaces.operation_merger",
            "dsl_parser.interfaces.utils",
            "dsl_parser.models",
            "dsl_parser.multi_instance",
            "dsl_parser.parser",
            "dsl_parser.rel_graph",
            "dsl_parser.scan",
            "dsl_parser.tasks",
            "dsl_parser.utils",
            "dsl_parser.version",
            "dsl_parser.yaml_loader"
        ],
        "version": "4.0"
    },
    "cloudify-plugins-common": {
        "cmdline": [
            "ctx-sh"
        ],
        "modules": [
            "cloudify",
            "cloudify.amqp_client",
            "cloudify.amqp_client_utils",
            "cloudify.broker_config",
            "cloudify.celery",
            "cloudify.celery.gate_keeper",
            "cloudify.celery.logging_server",
            "cloudify.cluster",
            "cloudify.compute",
            "cloudify.conflict_handlers",
            "cloudify.constants",
            "cloudify.context",
            "cloudify.ctx_wrappers",
            "cloudify.ctx_wrappers.ctx-py",
            "cloudify.decorators",
            "cloudify.dispatch",
            "cloudify.endpoint",
            "cloudify.event",
            "cloudify.exceptions",
            "cloudify.logs",
            "cloudify.lru_cache",
            "cloudify.manager",
            "cloudify.mocks",
            "cloudify.plugins",
            "cloudify.plugins.lifecycle",
            "cloudify.plugins.workflows",
            "cloudify.proxy",
            "cloudify.proxy.client",
            "cloudify.proxy.server",
            "cloudify.state",
            "cloudify.test_utils",
            "cloudify.test_utils.dispatch_helper",
            "cloudify.test_utils.local_workflow_decorator",
            "cloudify.utils",
            "cloudify.workflows",
            "cloudify.workflows.events",
            "cloudify.workflows.local",
            "cloudify.workflows.tasks",
            "cloudify.workflows.tasks_graph",
            "cloudify.workflows.workflow_api",
            "cloudify.workflows.workflow_context"
        ],
        "version": "4.0"
    },
    "cloudify-rest-client": {
        "cmdline": [],
        "modules": [
            "cloudify_rest_client",
            "cloudify_rest_client.blueprints",
            "cloudify_rest_client.bytes_stream_utils",
            "cloudify_rest_client.client",
            "cloudify_rest_client.cluster",
            "cloudify_rest_client.deployment_modifications",
            "cloudify_rest_client.deployment_updates",
            "cloudify_rest_client.deployments",
            "cloudify_rest_client.evaluate",
            "cloudify_rest_client.events",
            "cloudify_rest_client.exceptions",
            "cloudify_rest_client.executions",
            "cloudify_rest_client.ldap",
            "cloudify_rest_client.maintenance",
            "cloudify_rest_client.manager",
            "cloudify_rest_client.node_instances",
            "cloudify_rest_client.nodes",
            "cloudify_rest_client.plugins",
            "cloudify_rest_client.responses",
            "cloudify_rest_client.search",
            "cloudify_rest_client.secrets",
            "cloudify_rest_client.snapshots",
            "cloudify_rest_client.tenants",
            "cloudify_rest_client.tokens",
            "cloudify_rest_client.user_groups",
            "cloudify_rest_client.users",
            "cloudify_rest_client.utils"
        ],
        "version": "4.0"
    },
    "cloudify-script-plugin": {
        "cmdline": [],
        "modules": [
            "script_runner",
            "script_runner.eval_env",
            "script_runner.tasks"
        ],
        "version": "1.4"
    },
    "cloudily": {
        "cmdline": [
            "cloudily"
        ],
        "modules": [],
        "version": "0.1.4"
    },
    "cloudimagebeta": {
        "cmdline": [],
        "modules": [
            "cloudimage",
            "cloudimage.cli",
            "cloudimage.picture"
        ],
        "version": "0.1"
    },
    "cloudinary": {
        "cmdline": [],
        "modules": [
            "cloudinary",
            "cloudinary.api",
            "cloudinary.auth_token",
            "cloudinary.compat",
            "cloudinary.forms",
            "cloudinary.models",
            "cloudinary.poster",
            "cloudinary.poster.encode",
            "cloudinary.poster.streaminghttp",
            "cloudinary.search",
            "cloudinary.templatetags",
            "cloudinary.templatetags.cloudinary",
            "cloudinary.uploader",
            "cloudinary.utils"
        ],
        "version": "1.8.0"
    },
    "cloudinit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloudinitd": {
        "cmdline": [],
        "modules": [
            "cloudinitd",
            "cloudinitd.bootfabtasks",
            "cloudinitd.cb_iaas",
            "cloudinitd.cli",
            "cloudinitd.cli.boot",
            "cloudinitd.cli.cmd_opts",
            "cloudinitd.cli.output",
            "cloudinitd.exceptions",
            "cloudinitd.global_deps",
            "cloudinitd.nosetests",
            "cloudinitd.nosetests.badplan_cleanup_tests",
            "cloudinitd.nosetests.basic_tests",
            "cloudinitd.nosetests.basic_unit_tests",
            "cloudinitd.nosetests.cloudinitd_tests",
            "cloudinitd.nosetests.instance_dies_tests",
            "cloudinitd.nosetests.leak_vm_tests",
            "cloudinitd.nosetests.localhost_tests",
            "cloudinitd.nosetests.many_at_once_tests",
            "cloudinitd.nosetests.many_terminate_hang_tests",
            "cloudinitd.nosetests.outputjson_tests",
            "cloudinitd.nosetests.plan_tests",
            "cloudinitd.nosetests.pollable_tests",
            "cloudinitd.nosetests.prelaunch_tests",
            "cloudinitd.nosetests.remote_locations_tests",
            "cloudinitd.nosetests.service_tests",
            "cloudinitd.nosetests.service_unit_tests",
            "cloudinitd.nosetests.singlevm_tests",
            "cloudinitd.nosetests.tenservice_tests",
            "cloudinitd.nosetests.validate_tests",
            "cloudinitd.persistence",
            "cloudinitd.pollables",
            "cloudinitd.services",
            "cloudinitd.statics",
            "cloudinitd.user_api"
        ],
        "version": "1.3.1"
    },
    "cloudkey": {
        "cmdline": [],
        "modules": [
            "cloudkey"
        ],
        "version": "1.2.6"
    },
    "cloudkick": {
        "cmdline": [],
        "modules": [
            "cloudkick",
            "cloudkick.base",
            "cloudkick.fabhelper"
        ],
        "version": "0.1.0-dev"
    },
    "cloudkitty": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.0"
    },
    "cloudkitty-dashboard": {
        "cmdline": [],
        "modules": [],
        "version": "5.0.0"
    },
    "cloudlib": {
        "cmdline": [],
        "modules": [
            "cloudlib",
            "cloudlib.arguments",
            "cloudlib.http",
            "cloudlib.indicator",
            "cloudlib.logger",
            "cloudlib.mail",
            "cloudlib.package_installer",
            "cloudlib.parse_ini",
            "cloudlib.shell",
            "cloudlib.utils"
        ],
        "version": "0.5.0"
    },
    "cloudlog": {
        "cmdline": [],
        "modules": [
            "cloudlog",
            "cloudlog.cloudlog"
        ],
        "version": "0.1.1"
    },
    "cloudm": {
        "cmdline": [],
        "modules": [
            "cloudm",
            "cloudm.keycache",
            "cloudm.memoize",
            "cloudm.tests",
            "cloudm.tests.test_cloudm"
        ],
        "version": "0.1.7"
    },
    "cloudmade": {
        "cmdline": [],
        "modules": [
            "cloudmade",
            "cloudmade.api",
            "cloudmade.errors",
            "cloudmade.examples",
            "cloudmade.exception",
            "cloudmade.geocoding",
            "cloudmade.routing",
            "cloudmade.staticmaps",
            "cloudmade.tiles",
            "cloudmade.utils",
            "cloudmade.vectors"
        ],
        "version": "0.2"
    },
    "cloudmaker": {
        "cmdline": [
            "cloudmaker"
        ],
        "modules": [
            "cloudmaker",
            "cloudmaker.digitalocean",
            "cloudmaker.linux",
            "cloudmaker.mysql",
            "cloudmaker.template"
        ],
        "version": "0.9"
    },
    "cloudmanager-micropython-esp8266": {
        "cmdline": [
            "configure_esp_image",
            "esp_terminal",
            "flash_esp_image"
        ],
        "modules": [
            "cloudmanager_micropython_esp8266"
        ],
        "version": "1.8.6"
    },
    "cloudmesh": {
        "cmdline": [],
        "modules": [
            "cloudmesh",
            "cloudmesh.accounting",
            "cloudmesh.accounting.AccountBaseClass",
            "cloudmesh.accounting.GoldAccounting",
            "cloudmesh.accounting.metrics",
            "cloudmesh.cm_mesh",
            "cloudmesh.cm_mongo",
            "cloudmesh.cm_mongo2",
            "cloudmesh.config",
            "cloudmesh.config.YAML",
            "cloudmesh.config.cm_config",
            "cloudmesh.config.cm_init",
            "cloudmesh.config.cm_keys",
            "cloudmesh.config.cm_manage",
            "cloudmesh.config.cm_me",
            "cloudmesh.config.cm_projects",
            "cloudmesh.config.openstack_grizzly_cloud",
            "cloudmesh.experiment",
            "cloudmesh.experiment.cm_experiment_db",
            "cloudmesh.experiment.group",
            "cloudmesh.experiment.group_usage",
            "cloudmesh.experiment.model_group",
            "cloudmesh.iaas",
            "cloudmesh.iaas.ComputeBaseType",
            "cloudmesh.iaas.Ec2SecurityGroup",
            "cloudmesh.iaas.aws",
            "cloudmesh.iaas.aws.cm_compute",
            "cloudmesh.iaas.aws.queue",
            "cloudmesh.iaas.aws.queue.celery",
            "cloudmesh.iaas.aws.queue.tasks",
            "cloudmesh.iaas.azure",
            "cloudmesh.iaas.azure.cm_compute",
            "cloudmesh.iaas.azure.queue",
            "cloudmesh.iaas.azure.queue.celery",
            "cloudmesh.iaas.azure.queue.tasks",
            "cloudmesh.iaas.docker",
            "cloudmesh.iaas.docker.queue",
            "cloudmesh.iaas.ec2",
            "cloudmesh.iaas.ec2.cm_compute",
            "cloudmesh.iaas.ec2.queue",
            "cloudmesh.iaas.ec2.queue.celery",
            "cloudmesh.iaas.ec2.queue.tasks",
            "cloudmesh.iaas.eucalyptus",
            "cloudmesh.iaas.eucalyptus.eucalyptus",
            "cloudmesh.iaas.opencirrus",
            "cloudmesh.iaas.opencirrus.opencirrus",
            "cloudmesh.iaas.openstack",
            "cloudmesh.iaas.openstack.cm_compute",
            "cloudmesh.iaas.openstack.cm_idm",
            "cloudmesh.iaas.openstack.queue",
            "cloudmesh.iaas.openstack.queue.celery",
            "cloudmesh.iaas.openstack.queue.tasks",
            "cloudmesh.iaas.vagrant",
            "cloudmesh.iaas.vagrant.cm_vagrant",
            "cloudmesh.image",
            "cloudmesh.image.cm_image",
            "cloudmesh.inventory",
            "cloudmesh.keys",
            "cloudmesh.keys.util",
            "cloudmesh.launcher",
            "cloudmesh.launcher.cm_launcher",
            "cloudmesh.launcher.cm_launcher_db",
            "cloudmesh.launcher.queue",
            "cloudmesh.launcher.queue.celery",
            "cloudmesh.launcher.queue.tasks",
            "cloudmesh.management",
            "cloudmesh.management.cloudmeshobject",
            "cloudmesh.management.cm_account",
            "cloudmesh.management.cm_account_admin",
            "cloudmesh.management.comittee",
            "cloudmesh.management.generate",
            "cloudmesh.management.generate_classes",
            "cloudmesh.management.project",
            "cloudmesh.management.read",
            "cloudmesh.management.test_project",
            "cloudmesh.management.test_user",
            "cloudmesh.management.user",
            "cloudmesh.metric",
            "cloudmesh.metric.api",
            "cloudmesh.metric.api.metric",
            "cloudmesh.metric.cm_metric",
            "cloudmesh.metric.eucalyptus",
            "cloudmesh.metric.eucalyptus.cm_metric_eucalyptus",
            "cloudmesh.metric.metric-server",
            "cloudmesh.metric.openstack",
            "cloudmesh.metric.openstack.cm_metric_openstack",
            "cloudmesh.metric.openstack.migrating_mysql_to_mongodb",
            "cloudmesh.metric.rest",
            "cloudmesh.metric.rest.cm_metric_rest",
            "cloudmesh.metric.rest.cm_mimerender",
            "cloudmesh.metric.rest.cm_wsapps",
            "cloudmesh.metric.rest.cm_wsmain",
            "cloudmesh.pbs",
            "cloudmesh.pbs.celery",
            "cloudmesh.pbs.pbs",
            "cloudmesh.pbs.pbs_mongo",
            "cloudmesh.pbs.pbs_note",
            "cloudmesh.pbs.rest",
            "cloudmesh.pbs.tasks",
            "cloudmesh.provisioner",
            "cloudmesh.provisioner.baremetal_computer",
            "cloudmesh.provisioner.baremetal_db",
            "cloudmesh.provisioner.baremetal_policy",
            "cloudmesh.provisioner.baremetal_status",
            "cloudmesh.provisioner.baremetal_user",
            "cloudmesh.provisioner.dbhelper",
            "cloudmesh.provisioner.provisioner",
            "cloudmesh.provisioner.queue",
            "cloudmesh.provisioner.queue.celery",
            "cloudmesh.provisioner.queue.tasks",
            "cloudmesh.provisioner.rain_cobbler_wrapper",
            "cloudmesh.provisioner.system_info",
            "cloudmesh.rack",
            "cloudmesh.rack.base_cluster_map",
            "cloudmesh.rack.base_progress",
            "cloudmesh.rack.cluster_map_heat",
            "cloudmesh.rack.cluster_map_service",
            "cloudmesh.rack.fetch_cluster_info",
            "cloudmesh.rack.map_progress",
            "cloudmesh.rack.queue",
            "cloudmesh.rack.queue.celery",
            "cloudmesh.rack.queue.tasks",
            "cloudmesh.rack.rack_data",
            "cloudmesh.rack.rack_progress",
            "cloudmesh.rack.rack_work",
            "cloudmesh.rack.tasks",
            "cloudmesh.rain",
            "cloudmesh.rain.cobbler",
            "cloudmesh.rain.cobbler.cobbler_client",
            "cloudmesh.rain.cobbler.cobbler_provision",
            "cloudmesh.rain.cobbler.cobbler_rain",
            "cloudmesh.rain.cobbler.cobbler_rest",
            "cloudmesh.rain.cobbler.cobbler_rest_api",
            "cloudmesh.rain.cobbler.demo",
            "cloudmesh.rain.cobbler.queue",
            "cloudmesh.rain.cobbler.queue.celery",
            "cloudmesh.rain.cobbler.queue.tasks",
            "cloudmesh.rain.rain_base",
            "cloudmesh.server",
            "cloudmesh.server.database",
            "cloudmesh.sh",
            "cloudmesh.sh.cm",
            "cloudmesh.sh.openstack",
            "cloudmesh.shell",
            "cloudmesh.shell.Shell",
            "cloudmesh.shell.clusters",
            "cloudmesh.shell.cm_cloud",
            "cloudmesh.shell.cm_experiment_group",
            "cloudmesh.shell.cm_flavor",
            "cloudmesh.shell.cm_image",
            "cloudmesh.shell.cm_label",
            "cloudmesh.shell.cm_list",
            "cloudmesh.shell.cm_open_web",
            "cloudmesh.shell.cm_rain",
            "cloudmesh.shell.cm_security_group",
            "cloudmesh.shell.cm_shell",
            "cloudmesh.shell.cm_storm",
            "cloudmesh.shell.cm_user",
            "cloudmesh.shell.cm_vm",
            "cloudmesh.shell.shellutil",
            "cloudmesh.temperature",
            "cloudmesh.temperature.cm_temperature",
            "cloudmesh.user",
            "cloudmesh.user.CMUserProviderBaseType",
            "cloudmesh.user.cm_default",
            "cloudmesh.user.cm_pagestatus",
            "cloudmesh.user.cm_projects",
            "cloudmesh.user.cm_rc",
            "cloudmesh.user.cm_template",
            "cloudmesh.user.cm_user",
            "cloudmesh.user.cm_userLDAP",
            "cloudmesh.user.cm_user_ldap_future",
            "cloudmesh.user.roles",
            "cloudmesh.util",
            "cloudmesh.util.cm_table",
            "cloudmesh.util.config",
            "cloudmesh.util.debug",
            "cloudmesh.util.encryptdata",
            "cloudmesh.util.gitinfo",
            "cloudmesh.util.menu",
            "cloudmesh.util.naming",
            "cloudmesh.util.password",
            "cloudmesh.util.ping",
            "cloudmesh.util.ssh",
            "cloudmesh.util.stopwatch",
            "cloudmesh.util.webutil",
            "cloudmesh.util.youtube",
            "cloudmesh.version",
            "cloudmesh_admin",
            "cloudmesh_admin.admin",
            "cloudmesh_admin.server_admin",
            "cloudmesh_cmd3",
            "cloudmesh_cmd3.plugins",
            "cloudmesh_cmd3.plugins.cm_shell_admin",
            "cloudmesh_cmd3.plugins.cm_shell_cloud",
            "cloudmesh_cmd3.plugins.cm_shell_cluster",
            "cloudmesh_cmd3.plugins.cm_shell_color",
            "cloudmesh_cmd3.plugins.cm_shell_debug",
            "cloudmesh_cmd3.plugins.cm_shell_default",
            "cloudmesh_cmd3.plugins.cm_shell_exp",
            "cloudmesh_cmd3.plugins.cm_shell_flavor",
            "cloudmesh_cmd3.plugins.cm_shell_group",
            "cloudmesh_cmd3.plugins.cm_shell_image",
            "cloudmesh_cmd3.plugins.cm_shell_init",
            "cloudmesh_cmd3.plugins.cm_shell_inventory",
            "cloudmesh_cmd3.plugins.cm_shell_key",
            "cloudmesh_cmd3.plugins.cm_shell_label",
            "cloudmesh_cmd3.plugins.cm_shell_launcher",
            "cloudmesh_cmd3.plugins.cm_shell_limits",
            "cloudmesh_cmd3.plugins.cm_shell_list",
            "cloudmesh_cmd3.plugins.cm_shell_loglevel",
            "cloudmesh_cmd3.plugins.cm_shell_metric",
            "cloudmesh_cmd3.plugins.cm_shell_notebook",
            "cloudmesh_cmd3.plugins.cm_shell_nova",
            "cloudmesh_cmd3.plugins.cm_shell_project",
            "cloudmesh_cmd3.plugins.cm_shell_quota",
            "cloudmesh_cmd3.plugins.cm_shell_rain",
            "cloudmesh_cmd3.plugins.cm_shell_register",
            "cloudmesh_cmd3.plugins.cm_shell_security_group",
            "cloudmesh_cmd3.plugins.cm_shell_ssh",
            "cloudmesh_cmd3.plugins.cm_shell_stack",
            "cloudmesh_cmd3.plugins.cm_shell_status",
            "cloudmesh_cmd3.plugins.cm_shell_storm",
            "cloudmesh_cmd3.plugins.cm_shell_usage",
            "cloudmesh_cmd3.plugins.cm_shell_user",
            "cloudmesh_cmd3.plugins.cm_shell_vm",
            "cloudmesh_cmd3.plugins.cm_shell_volume",
            "cloudmesh_cmd3.plugins.cm_shell_web",
            "cloudmesh_cmd3.plugins.cm_shell_yaml",
            "cloudmesh_common",
            "cloudmesh_common.tables",
            "cloudmesh_common.util",
            "cloudmesh_install",
            "cloudmesh_install.futuregrid",
            "cloudmesh_install.install",
            "cloudmesh_install.util",
            "cloudmesh_web",
            "cloudmesh_web.a",
            "cloudmesh_web.modules",
            "cloudmesh_web.modules.cloud",
            "cloudmesh_web.modules.cobbler",
            "cloudmesh_web.modules.flatpages",
            "cloudmesh_web.modules.git",
            "cloudmesh_web.modules.inventory",
            "cloudmesh_web.modules.keys",
            "cloudmesh_web.modules.launch",
            "cloudmesh_web.modules.management",
            "cloudmesh_web.modules.management__",
            "cloudmesh_web.modules.mesh",
            "cloudmesh_web.modules.mesh_hpc",
            "cloudmesh_web.modules.metric",
            "cloudmesh_web.modules.new_menu",
            "cloudmesh_web.modules.nose",
            "cloudmesh_web.modules.pbs",
            "cloudmesh_web.modules.pie_chart_fg380",
            "cloudmesh_web.modules.profile",
            "cloudmesh_web.modules.provisioner",
            "cloudmesh_web.modules.rack",
            "cloudmesh_web.modules.status",
            "cloudmesh_web.modules.users",
            "cloudmesh_web.server",
            "fabfile",
            "fabfile.build",
            "fabfile.clean",
            "fabfile.doc",
            "fabfile.git",
            "fabfile.hpc",
            "fabfile.india",
            "fabfile.iptable",
            "fabfile.ipython",
            "fabfile.manage",
            "fabfile.mongo",
            "fabfile.mooc",
            "fabfile.mq",
            "fabfile.nose",
            "fabfile.pep8",
            "fabfile.progress",
            "fabfile.pypi",
            "fabfile.qc",
            "fabfile.queue",
            "fabfile.security",
            "fabfile.server",
            "fabfile.test",
            "fabfile.tunnel",
            "fabfile.user",
            "fabfile.util",
            "incubator",
            "simple",
            "simple.celery",
            "simple.tasks"
        ],
        "version": "2.3.2"
    },
    "cloudmesh-base": {
        "cmdline": [],
        "modules": [
            "cloudmesh_base",
            "cloudmesh_base.ConfigDict",
            "cloudmesh_base.Shell",
            "cloudmesh_base.ShellOriginal",
            "cloudmesh_base.debug",
            "cloudmesh_base.dotdict",
            "cloudmesh_base.get_os",
            "cloudmesh_base.gitinfo",
            "cloudmesh_base.hostlist",
            "cloudmesh_base.i",
            "cloudmesh_base.locations",
            "cloudmesh_base.logger",
            "cloudmesh_base.menu",
            "cloudmesh_base.ping",
            "cloudmesh_base.setup",
            "cloudmesh_base.ssh_config",
            "cloudmesh_base.stopwatch",
            "cloudmesh_base.tables",
            "cloudmesh_base.util",
            "cloudmesh_base.version",
            "cloudmesh_base.version_incr",
            "cloudmesh_base.xshellutil",
            "cloudmesh_database",
            "cloudmesh_database.dbconn"
        ],
        "version": "3.5.2"
    },
    "cloudmesh-client": {
        "cmdline": [],
        "modules": [
            "cloudmesh_client",
            "cloudmesh_client.api",
            "cloudmesh_client.api.impl",
            "cloudmesh_client.api.impl.openstack",
            "cloudmesh_client.cloud",
            "cloudmesh_client.cloud.ListResource",
            "cloudmesh_client.cloud.attributes",
            "cloudmesh_client.cloud.counter",
            "cloudmesh_client.cloud.experiment",
            "cloudmesh_client.cloud.flavor",
            "cloudmesh_client.cloud.group",
            "cloudmesh_client.cloud.hpc",
            "cloudmesh_client.cloud.hpc.BatchProvider",
            "cloudmesh_client.cloud.hpc.BatchProviderBase",
            "cloudmesh_client.cloud.hpc.provider",
            "cloudmesh_client.cloud.hpc.provider.slurm",
            "cloudmesh_client.cloud.hpc.provider.slurm.BatchProviderSLURM",
            "cloudmesh_client.cloud.hpc.provider.slurm.squeue",
            "cloudmesh_client.cloud.iaas",
            "cloudmesh_client.cloud.iaas.CloudProvider",
            "cloudmesh_client.cloud.iaas.CloudProviderBase",
            "cloudmesh_client.cloud.iaas.provider",
            "cloudmesh_client.cloud.iaas.provider.aws",
            "cloudmesh_client.cloud.iaas.provider.aws.CloudProviderAwsAPI",
            "cloudmesh_client.cloud.iaas.provider.azure",
            "cloudmesh_client.cloud.iaas.provider.azure.AzureDict",
            "cloudmesh_client.cloud.iaas.provider.azure.CloudProviderAzureAPI",
            "cloudmesh_client.cloud.iaas.provider.comet",
            "cloudmesh_client.cloud.iaas.provider.comet.CloudProviderCometAPI",
            "cloudmesh_client.cloud.iaas.provider.libcloud",
            "cloudmesh_client.cloud.iaas.provider.libcloud.CloudProviderLibcloud",
            "cloudmesh_client.cloud.iaas.provider.libcloud.CloudProviderLibcloudEC2",
            "cloudmesh_client.cloud.iaas.provider.libcloud.CloudProviderLibcloudOpenStack",
            "cloudmesh_client.cloud.iaas.provider.openstack",
            "cloudmesh_client.cloud.iaas.provider.openstack.CloudProviderOpenstackAPI",
            "cloudmesh_client.cloud.image",
            "cloudmesh_client.cloud.inventory",
            "cloudmesh_client.cloud.ip",
            "cloudmesh_client.cloud.key",
            "cloudmesh_client.cloud.launcher",
            "cloudmesh_client.cloud.limits",
            "cloudmesh_client.cloud.list",
            "cloudmesh_client.cloud.network",
            "cloudmesh_client.cloud.nova",
            "cloudmesh_client.cloud.quota",
            "cloudmesh_client.cloud.register",
            "cloudmesh_client.cloud.reservation",
            "cloudmesh_client.cloud.secgroup",
            "cloudmesh_client.cloud.stack",
            "cloudmesh_client.cloud.sync",
            "cloudmesh_client.cloud.usage",
            "cloudmesh_client.cloud.vc",
            "cloudmesh_client.cloud.vm",
            "cloudmesh_client.cloud.workflow",
            "cloudmesh_client.comet",
            "cloudmesh_client.comet.authenticate",
            "cloudmesh_client.comet.cluster",
            "cloudmesh_client.comet.comet",
            "cloudmesh_client.common",
            "cloudmesh_client.common.BaseConfigDict",
            "cloudmesh_client.common.ConfigDict",
            "cloudmesh_client.common.DictDB",
            "cloudmesh_client.common.DynamicClass",
            "cloudmesh_client.common.Error",
            "cloudmesh_client.common.FlatDict",
            "cloudmesh_client.common.FlatDict2",
            "cloudmesh_client.common.GitInfo",
            "cloudmesh_client.common.LibcloudDict",
            "cloudmesh_client.common.LogUtil",
            "cloudmesh_client.common.Printer",
            "cloudmesh_client.common.SSHkey",
            "cloudmesh_client.common.Shell",
            "cloudmesh_client.common.StopWatch",
            "cloudmesh_client.common.TableParser",
            "cloudmesh_client.common.borg",
            "cloudmesh_client.common.dotdict",
            "cloudmesh_client.common.hostlist",
            "cloudmesh_client.common.menu",
            "cloudmesh_client.common.ssh",
            "cloudmesh_client.common.ssh.authorized_keys",
            "cloudmesh_client.common.ssh_config",
            "cloudmesh_client.common.todo",
            "cloudmesh_client.common.type",
            "cloudmesh_client.common.util",
            "cloudmesh_client.common.vmname",
            "cloudmesh_client.db",
            "cloudmesh_client.db.CloudmeshDatabase",
            "cloudmesh_client.db.azure",
            "cloudmesh_client.db.azure.model",
            "cloudmesh_client.db.general",
            "cloudmesh_client.db.general.model",
            "cloudmesh_client.db.libcloud",
            "cloudmesh_client.db.libcloud.model",
            "cloudmesh_client.db.openstack",
            "cloudmesh_client.db.openstack.model",
            "cloudmesh_client.default",
            "cloudmesh_client.deployer",
            "cloudmesh_client.deployer.ansible",
            "cloudmesh_client.deployer.ansible.inventory",
            "cloudmesh_client.deployer.ansible.playbook",
            "cloudmesh_client.deployer.ansible.role",
            "cloudmesh_client.etc",
            "cloudmesh_client.exc",
            "cloudmesh_client.extend",
            "cloudmesh_client.extend.my",
            "cloudmesh_client.extend.summary",
            "cloudmesh_client.locations",
            "cloudmesh_client.logger",
            "cloudmesh_client.main",
            "cloudmesh_client.platform",
            "cloudmesh_client.platform.hadoop",
            "cloudmesh_client.platform.virtual_cluster",
            "cloudmesh_client.platform.virtual_cluster.cluster",
            "cloudmesh_client.provider",
            "cloudmesh_client.provider.general",
            "cloudmesh_client.provider.general.attributes",
            "cloudmesh_client.provider.libcloud",
            "cloudmesh_client.provider.libcloud.attributes",
            "cloudmesh_client.provider.libcloud.provider",
            "cloudmesh_client.provider.openstack",
            "cloudmesh_client.provider.openstack.attributes",
            "cloudmesh_client.provider.openstack.provider",
            "cloudmesh_client.setup",
            "cloudmesh_client.shell",
            "cloudmesh_client.shell.cm",
            "cloudmesh_client.shell.cm_shell_status",
            "cloudmesh_client.shell.command",
            "cloudmesh_client.shell.console",
            "cloudmesh_client.shell.plugins",
            "cloudmesh_client.shell.plugins.AkeyCommand",
            "cloudmesh_client.shell.plugins.Bar",
            "cloudmesh_client.shell.plugins.CheckCommand",
            "cloudmesh_client.shell.plugins.CloudCommand",
            "cloudmesh_client.shell.plugins.ClusterCommand",
            "cloudmesh_client.shell.plugins.ClusterCommand2",
            "cloudmesh_client.shell.plugins.ColorCommand",
            "cloudmesh_client.shell.plugins.CometCommand",
            "cloudmesh_client.shell.plugins.DebugCommand",
            "cloudmesh_client.shell.plugins.DefaultCommand",
            "cloudmesh_client.shell.plugins.DeployCommand",
            "cloudmesh_client.shell.plugins.FlavorCommand",
            "cloudmesh_client.shell.plugins.GroupCommand",
            "cloudmesh_client.shell.plugins.HadoopCommand",
            "cloudmesh_client.shell.plugins.HpcCommand",
            "cloudmesh_client.shell.plugins.ImageCommand",
            "cloudmesh_client.shell.plugins.InfoCommand",
            "cloudmesh_client.shell.plugins.InventoryCommand",
            "cloudmesh_client.shell.plugins.KeyCommand",
            "cloudmesh_client.shell.plugins.LauncherCommand",
            "cloudmesh_client.shell.plugins.LimitsCommand",
            "cloudmesh_client.shell.plugins.ListCommand",
            "cloudmesh_client.shell.plugins.LoadCommand",
            "cloudmesh_client.shell.plugins.LogLevelCommand",
            "cloudmesh_client.shell.plugins.ManCommand",
            "cloudmesh_client.shell.plugins.NetworkCommand",
            "cloudmesh_client.shell.plugins.NovaCommand",
            "cloudmesh_client.shell.plugins.OpenCommand",
            "cloudmesh_client.shell.plugins.PortalCommand",
            "cloudmesh_client.shell.plugins.PyCommand",
            "cloudmesh_client.shell.plugins.QuotaCommand",
            "cloudmesh_client.shell.plugins.RefreshCommand",
            "cloudmesh_client.shell.plugins.RegisterCommand",
            "cloudmesh_client.shell.plugins.ReservationCommand",
            "cloudmesh_client.shell.plugins.ResetCommand",
            "cloudmesh_client.shell.plugins.SecgroupCommand",
            "cloudmesh_client.shell.plugins.SecureShellCommand",
            "cloudmesh_client.shell.plugins.SelectCommand",
            "cloudmesh_client.shell.plugins.ServerCommand",
            "cloudmesh_client.shell.plugins.SetupCommand",
            "cloudmesh_client.shell.plugins.StackCommand",
            "cloudmesh_client.shell.plugins.SubmitCommands",
            "cloudmesh_client.shell.plugins.SyncCommand",
            "cloudmesh_client.shell.plugins.TerminalCommands",
            "cloudmesh_client.shell.plugins.TestCommand",
            "cloudmesh_client.shell.plugins.TimerCommand",
            "cloudmesh_client.shell.plugins.UsageCommand",
            "cloudmesh_client.shell.plugins.VcCommand",
            "cloudmesh_client.shell.plugins.VmCommand",
            "cloudmesh_client.shell.plugins.WhoCommand",
            "cloudmesh_client.shell.plugins.WorkflowCommand",
            "cloudmesh_client.shell_commad",
            "cloudmesh_client.system",
            "cloudmesh_client.system.rack",
            "cloudmesh_client.system.who",
            "cloudmesh_client.var",
            "cloudmesh_client.version",
            "tests",
            "tests.cm_aws",
            "tests.cm_aws.test_aws_API",
            "tests.cm_azure",
            "tests.cm_azure.test_azure_API",
            "tests.cm_azure.test_azure_cli",
            "tests.cm_basic",
            "tests.cm_basic.test_cloud_model",
            "tests.cm_basic.test_configdict",
            "tests.cm_basic.test_database",
            "tests.cm_basic.test_default",
            "tests.cm_basic.test_flatdict",
            "tests.cm_basic.test_model",
            "tests.cm_basic.test_shell",
            "tests.cm_basic.test_tables",
            "tests.cm_basic.test_var",
            "tests.cm_cloud",
            "tests.cm_cloud.test_OS_API",
            "tests.cm_cloud.test_base",
            "tests.cm_cloud.test_flavor",
            "tests.cm_cloud.test_group",
            "tests.cm_cloud.test_image",
            "tests.cm_cloud.test_keys",
            "tests.cm_cloud.test_limits",
            "tests.cm_cloud.test_list",
            "tests.cm_cloud.test_nova",
            "tests.cm_cloud.test_quota",
            "tests.cm_cloud.test_register",
            "tests.cm_cloud.test_reservation",
            "tests.cm_cloud.test_scripts",
            "tests.cm_cloud.test_secgroup",
            "tests.cm_cloud.test_usage",
            "tests.cm_cloud.test_vm",
            "tests.cm_clouds",
            "tests.cm_clouds.test_chameleon",
            "tests.cm_clouds.test_cybera",
            "tests.cm_clouds.test_jetstream",
            "tests.cm_clouds.test_kilo",
            "tests.cm_hpc",
            "tests.cm_hpc.test_hpc",
            "tests.cm_libcloud",
            "tests.cm_libcloud.test_libcloud_api",
            "tests.cm_libcloud.test_libcloud_aws",
            "tests.cm_libcloud.test_libcloud_cli",
            "tests.cm_libcloud.test_libcloud_ec2",
            "tests.test_pass"
        ],
        "version": "4.7.2"
    },
    "cloudmesh-cmd3light": {
        "cmdline": [],
        "modules": [
            "cloudmesh_cmd3light",
            "cloudmesh_cmd3light.cm",
            "cloudmesh_cmd3light.command",
            "cloudmesh_cmd3light.console",
            "cloudmesh_cmd3light.plugins",
            "cloudmesh_cmd3light.plugins.Bar",
            "cloudmesh_cmd3light.plugins.CommandsCommands",
            "cloudmesh_cmd3light.plugins.ManCommand",
            "cloudmesh_cmd3light.plugins.OpenCommand",
            "cloudmesh_cmd3light.plugins.SecureShellCommand",
            "cloudmesh_cmd3light.plugins.TerminalCommands",
            "cloudmesh_cmd3light.version"
        ],
        "version": "1.0.0"
    },
    "cloudmesh-database": {
        "cmdline": [],
        "modules": [
            "cloudmesh_database",
            "cloudmesh_database.dbconn"
        ],
        "version": "1.0.3"
    },
    "cloudmesh-gitissues": {
        "cmdline": [],
        "modules": [
            "cloudmesh_gitissues",
            "cloudmesh_gitissues.GitPriority",
            "cloudmesh_gitissues.issues",
            "cloudmesh_gitissues.issues.views",
            "cloudmesh_gitissues.settings",
            "cloudmesh_gitissues.urls",
            "cloudmesh_gitissues.version",
            "cloudmesh_gitissues.views",
            "cloudmesh_gitissues.wsgi"
        ],
        "version": "3.1.2"
    },
    "cloudmesh-inventory": {
        "cmdline": [],
        "modules": [
            "cloudmesh_inventory",
            "cloudmesh_inventory.command_inventory",
            "cloudmesh_inventory.etc",
            "cloudmesh_inventory.plugins",
            "cloudmesh_inventory.plugins.cm_shell_inventory"
        ],
        "version": "1.2.8"
    },
    "cloudmesh-pbs": {
        "cmdline": [],
        "modules": [
            "cloudmesh_pbs",
            "cloudmesh_pbs.DbPBS",
            "cloudmesh_pbs.OpenPBS",
            "cloudmesh_pbs.pbs_config",
            "cloudmesh_pbs.plugins",
            "cloudmesh_pbs.plugins.cm_shell_pbs"
        ],
        "version": "2.2.6"
    },
    "cloudmesh-piazza": {
        "cmdline": [],
        "modules": [
            "cloudmesh_piazza",
            "cloudmesh_piazza.cm_piazza_api",
            "cloudmesh_piazza.piazza",
            "cloudmesh_piazza.version"
        ],
        "version": "0.0.7"
    },
    "cloudmesh-timestring": {
        "cmdline": [],
        "modules": [
            "timestring",
            "timestring.Date",
            "timestring.Range",
            "timestring.text2num",
            "timestring.timestring_re"
        ],
        "version": "1.6.2.1"
    },
    "cloudmesh-vagrant": {
        "cmdline": [],
        "modules": [
            "cloudmesh_vagrant",
            "cloudmesh_vagrant.cm_vbox",
            "cloudmesh_vagrant.image",
            "cloudmesh_vagrant.image.image",
            "cloudmesh_vagrant.version",
            "cloudmesh_vagrant.vm",
            "cloudmesh_vagrant.vm.vm"
        ],
        "version": "1.2.2"
    },
    "cloudmesh.cmd5": {
        "cmdline": [],
        "modules": [
            "default",
            "default.command",
            "default.command.default",
            "shell",
            "shell.command",
            "shell.shell",
            "shell.variables",
            "terminal",
            "terminal.command",
            "terminal.command.terminal",
            "var",
            "var.command",
            "var.command.var"
        ],
        "version": "1.2.7"
    },
    "cloudmesh.common": {
        "cmdline": [],
        "modules": [
            "common",
            "common.BaseConfigDict",
            "common.ConfigDict",
            "common.FlatDict",
            "common.Printer",
            "common.Shell",
            "common.StopWatch",
            "common.config",
            "common.console",
            "common.default",
            "common.dotdict",
            "common.error",
            "common.locations",
            "common.logger",
            "common.ssh",
            "common.ssh.authorized_keys",
            "common.ssh.ssh_config",
            "common.todo",
            "common.util",
            "tests",
            "tests.cm_basic",
            "tests.cm_basic.test_configdict",
            "tests.cm_basic.test_shell"
        ],
        "version": "1.2.7"
    },
    "cloudmesh.evegenie": {
        "cmdline": [],
        "modules": [
            "evegenie",
            "evegenie.evegenie",
            "evegenie.geneve",
            "evegenie.templates"
        ],
        "version": "1.2.4"
    },
    "cloudmesh.rest": {
        "cmdline": [],
        "modules": [
            "resources",
            "resources.experimental",
            "resources.experimental.schema-api",
            "resources.experimental.schema-cmd",
            "resources.experimental.specification",
            "resources.experimental.test",
            "resources.experimental.test.convert",
            "rest",
            "rest.elements",
            "rest.mongo",
            "rest.schema",
            "rest.service",
            "rest.settings",
            "tests",
            "tests.test_mongo"
        ],
        "version": "1.0.7"
    },
    "cloudmesh.sys": {
        "cmdline": [],
        "modules": [
            "sys",
            "sys.command",
            "sys.command.sys",
            "sys.manage"
        ],
        "version": "1.2.7"
    },
    "cloudmetrics": {
        "cmdline": [],
        "modules": [
            "cloudmetrics",
            "cloudmetrics.api",
            "cloudmetrics.backends",
            "cloudmetrics.backends.cloudwatch_backend",
            "cloudmetrics.backends.test_backend",
            "cloudmetrics.examples",
            "cloudmetrics.examples.printmetrics",
            "cloudmetrics.tests"
        ],
        "version": "0.0.4"
    },
    "cloudminer": {
        "cmdline": [],
        "modules": [
            "cloudminer",
            "cloudminer.cloudminer",
            "cloudminer.tests",
            "cloudminer.tests.test_filedb_cm",
            "cloudminer.tests.test_iaasid_cm",
            "cloudminer.tests.test_simple_cm"
        ],
        "version": "0.2"
    },
    "cloudml": {
        "cmdline": [
            "importhandler.py",
            "predictor.py",
            "trainer.py",
            "transformer.py"
        ],
        "modules": [
            "cloudml",
            "cloudml.importhandler",
            "cloudml.importhandler.base",
            "cloudml.importhandler.datasources",
            "cloudml.importhandler.db",
            "cloudml.importhandler.entities",
            "cloudml.importhandler.exceptions",
            "cloudml.importhandler.importhandler",
            "cloudml.importhandler.inputs",
            "cloudml.importhandler.predict",
            "cloudml.importhandler.processors",
            "cloudml.importhandler.scripts",
            "cloudml.importhandler.tests",
            "cloudml.importhandler.tests.constants",
            "cloudml.importhandler.tests.datasource_tests",
            "cloudml.importhandler.tests.entity_tests",
            "cloudml.importhandler.tests.field_tests",
            "cloudml.importhandler.tests.importhandler_tests",
            "cloudml.importhandler.tests.input_tests",
            "cloudml.importhandler.tests.predict_tests",
            "cloudml.importhandler.tests.processor_tests",
            "cloudml.importhandler.tests.script_tests",
            "cloudml.importhandler.tests.sqoop_tests",
            "cloudml.importhandler.tests.utils_tests",
            "cloudml.importhandler.utils",
            "cloudml.jsonpath",
            "cloudml.tests",
            "cloudml.tests.importhandler_tests",
            "cloudml.tests.predictor_tests",
            "cloudml.tests.test_utils",
            "cloudml.tests.trainer_tests",
            "cloudml.tests.transformer_tests",
            "cloudml.trainer",
            "cloudml.trainer.classifier_settings",
            "cloudml.trainer.config",
            "cloudml.trainer.exceptions",
            "cloudml.trainer.feature_types",
            "cloudml.trainer.feature_types.base",
            "cloudml.trainer.feature_types.categorical",
            "cloudml.trainer.feature_types.composite",
            "cloudml.trainer.feature_types.date",
            "cloudml.trainer.feature_types.ordinal",
            "cloudml.trainer.feature_types.primitive_types",
            "cloudml.trainer.feature_types.regex",
            "cloudml.trainer.metrics",
            "cloudml.trainer.model_visualization",
            "cloudml.trainer.model_visualization.utils",
            "cloudml.trainer.model_visualization.visualizers",
            "cloudml.trainer.model_visualization.weights",
            "cloudml.trainer.scalers",
            "cloudml.trainer.store",
            "cloudml.trainer.streamutils",
            "cloudml.trainer.tests",
            "cloudml.trainer.tests.config_tests",
            "cloudml.trainer.tests.featuretype_tests",
            "cloudml.trainer.tests.metrics_tests",
            "cloudml.trainer.tests.streamingutils_tests",
            "cloudml.trainer.tests.trainer_tests",
            "cloudml.trainer.tests.transformers_tests",
            "cloudml.trainer.tests.utils_test",
            "cloudml.trainer.trainer",
            "cloudml.trainer.transformers",
            "cloudml.trainer.utils",
            "cloudml.transformers",
            "cloudml.transformers.tests",
            "cloudml.transformers.transformer",
            "cloudml.utils"
        ],
        "version": "0.4.2"
    },
    "cloudmlmagic": {
        "cmdline": [],
        "modules": [
            "cloudmlmagic",
            "cloudmlmagic.cloudmlmagic"
        ],
        "version": "0.0.2"
    },
    "cloudmonkey": {
        "cmdline": [],
        "modules": [
            "cloudmonkey",
            "cloudmonkey.cachemaker",
            "cloudmonkey.cloudmonkey",
            "cloudmonkey.config",
            "cloudmonkey.precache",
            "cloudmonkey.printer",
            "cloudmonkey.requester"
        ],
        "version": "5.3.3"
    },
    "cloudmunch-cli": {
        "cmdline": [],
        "modules": [
            "cloudmunch",
            "cloudmunch.cli",
            "cloudmunch.commands",
            "cloudmunch.commands.applications",
            "cloudmunch.commands.applications.commands",
            "cloudmunch.commands.applications.service",
            "cloudmunch.commands.blueprints",
            "cloudmunch.commands.blueprints.commands",
            "cloudmunch.commands.blueprints.service",
            "cloudmunch.commands.configuration",
            "cloudmunch.commands.configuration.commands",
            "cloudmunch.commands.configuration.service",
            "cloudmunch.commands.definitions",
            "cloudmunch.commands.definitions.commands",
            "cloudmunch.commands.definitions.service",
            "cloudmunch.commands.environments",
            "cloudmunch.commands.environments.commands",
            "cloudmunch.commands.environments.service",
            "cloudmunch.commands.metrics",
            "cloudmunch.commands.metrics.commands",
            "cloudmunch.commands.metrics.service",
            "cloudmunch.commands.templates",
            "cloudmunch.commands.templates.commands",
            "cloudmunch.commands.templates.service",
            "cloudmunch.commands.users",
            "cloudmunch.commands.users.commands",
            "cloudmunch.commands.users.service",
            "cloudmunch.config",
            "cloudmunch.decorators"
        ],
        "version": "0.2.2"
    },
    "cloudns": {
        "cmdline": [],
        "modules": [
            "cloudns",
            "cloudns.base",
            "cloudns.cli_logic",
            "cloudns.cli_utils",
            "cloudns.httpclient",
            "cloudns.main",
            "cloudns.record",
            "cloudns.repl",
            "cloudns.user",
            "cloudns.utils",
            "cloudns.zone"
        ],
        "version": "1.2.0.2"
    },
    "cloudooo": {
        "cmdline": [],
        "modules": [
            "cloudooo",
            "cloudooo.bin",
            "cloudooo.bin.cloudooo_tester",
            "cloudooo.bin.echo_cloudooo_conf",
            "cloudooo.file",
            "cloudooo.handler",
            "cloudooo.handler.tests",
            "cloudooo.handler.tests.handlerTestCase",
            "cloudooo.handler.tests.runHandlerUnitTest",
            "cloudooo.interfaces",
            "cloudooo.interfaces.application",
            "cloudooo.interfaces.file",
            "cloudooo.interfaces.filter",
            "cloudooo.interfaces.granulate",
            "cloudooo.interfaces.handler",
            "cloudooo.interfaces.lockable",
            "cloudooo.interfaces.manager",
            "cloudooo.interfaces.mimemapper",
            "cloudooo.interfaces.monitor",
            "cloudooo.manager",
            "cloudooo.paster_application",
            "cloudooo.utils",
            "cloudooo.utils.utils",
            "cloudooo.wsgixmlrpcapplication"
        ],
        "version": "1.2.3"
    },
    "cloudooo.handler.ffmpeg": {
        "cmdline": [],
        "modules": [
            "cloudooo",
            "cloudooo.handler",
            "cloudooo.handler.ffmpeg",
            "cloudooo.handler.ffmpeg.handler",
            "cloudooo.handler.ffmpeg.tests",
            "cloudooo.handler.ffmpeg.tests.runFFMPEGHandlerUnitTest",
            "cloudooo.handler.ffmpeg.tests.testAllVideoSupportedFormat",
            "cloudooo.handler.ffmpeg.tests.testFFMPEGHandler",
            "cloudooo.handler.ffmpeg.tests.testInterface",
            "cloudooo.handler.ffmpeg.tests.testServer"
        ],
        "version": "0.1"
    },
    "cloudooo.handler.imagemagick": {
        "cmdline": [],
        "modules": [
            "cloudooo",
            "cloudooo.handler",
            "cloudooo.handler.imagemagick",
            "cloudooo.handler.imagemagick.handler",
            "cloudooo.handler.imagemagick.tests",
            "cloudooo.handler.imagemagick.tests.runImageMagickHandlerUnitTest",
            "cloudooo.handler.imagemagick.tests.testImageMagickHandler",
            "cloudooo.handler.imagemagick.tests.testServer"
        ],
        "version": "0.1"
    },
    "cloudooo.handler.ooo": {
        "cmdline": [],
        "modules": [
            "cloudooo",
            "cloudooo.handler",
            "cloudooo.handler.ooo",
            "cloudooo.handler.ooo.application",
            "cloudooo.handler.ooo.application.application",
            "cloudooo.handler.ooo.application.openoffice",
            "cloudooo.handler.ooo.document",
            "cloudooo.handler.ooo.filter",
            "cloudooo.handler.ooo.granulator",
            "cloudooo.handler.ooo.handler",
            "cloudooo.handler.ooo.helper",
            "cloudooo.handler.ooo.helper.helper_utils",
            "cloudooo.handler.ooo.helper.openoffice_tester",
            "cloudooo.handler.ooo.helper.unoconverter",
            "cloudooo.handler.ooo.helper.unomimemapper",
            "cloudooo.handler.ooo.mimemapper",
            "cloudooo.handler.ooo.monitor",
            "cloudooo.handler.ooo.monitor.memory",
            "cloudooo.handler.ooo.monitor.monitor",
            "cloudooo.handler.ooo.monitor.request",
            "cloudooo.handler.ooo.monitor.sleeping_time",
            "cloudooo.handler.ooo.monitor.timeout",
            "cloudooo.handler.ooo.tests",
            "cloudooo.handler.ooo.tests.HighTestLoad",
            "cloudooo.handler.ooo.tests.HighTestLoadGranulate",
            "cloudooo.handler.ooo.tests.runOOoHandlerUnitTest",
            "cloudooo.handler.ooo.tests.testAllSupportedFormat",
            "cloudooo.handler.ooo.tests.testAllSupportedFormatERP5Compatibility",
            "cloudooo.handler.ooo.tests.testApplication",
            "cloudooo.handler.ooo.tests.testFileSystemDocument",
            "cloudooo.handler.ooo.tests.testFilter",
            "cloudooo.handler.ooo.tests.testHighLoad",
            "cloudooo.handler.ooo.tests.testInterface",
            "cloudooo.handler.ooo.tests.testLegacyInterface",
            "cloudooo.handler.ooo.tests.testMimemapper",
            "cloudooo.handler.ooo.tests.testMonitorInit",
            "cloudooo.handler.ooo.tests.testMonitorMemory",
            "cloudooo.handler.ooo.tests.testMonitorRequest",
            "cloudooo.handler.ooo.tests.testMonitorTimeout",
            "cloudooo.handler.ooo.tests.testOOGranulator",
            "cloudooo.handler.ooo.tests.testOOHandler",
            "cloudooo.handler.ooo.tests.testOdfDocument",
            "cloudooo.handler.ooo.tests.testOpenOffice",
            "cloudooo.handler.ooo.tests.testServer",
            "cloudooo.handler.ooo.tests.testUnoConverter",
            "cloudooo.handler.ooo.tests.testUnoMimemapper",
            "cloudooo.handler.ooo.tests.testUtils",
            "cloudooo.handler.ooo.utils",
            "cloudooo.handler.ooo.utils.utils"
        ],
        "version": "0.2"
    },
    "cloudooo.handler.pdf": {
        "cmdline": [],
        "modules": [
            "cloudooo",
            "cloudooo.handler",
            "cloudooo.handler.pdf",
            "cloudooo.handler.pdf.handler",
            "cloudooo.handler.pdf.tests",
            "cloudooo.handler.pdf.tests.runPDFHandlerUnitTest",
            "cloudooo.handler.pdf.tests.testPDFHandler",
            "cloudooo.handler.pdf.tests.testServer"
        ],
        "version": "0.1"
    },
    "cloudpassage": {
        "cmdline": [],
        "modules": [
            "cloudpassage",
            "cloudpassage.alert_profile",
            "cloudpassage.api_key_manager",
            "cloudpassage.configuration_policy",
            "cloudpassage.event",
            "cloudpassage.exceptions",
            "cloudpassage.fim_policy",
            "cloudpassage.firewall_policy",
            "cloudpassage.halo",
            "cloudpassage.http_helper",
            "cloudpassage.issue",
            "cloudpassage.lids_policy",
            "cloudpassage.local_user_account",
            "cloudpassage.local_user_group",
            "cloudpassage.policy",
            "cloudpassage.retry",
            "cloudpassage.sanity",
            "cloudpassage.scan",
            "cloudpassage.server",
            "cloudpassage.server_group",
            "cloudpassage.special_events_policy",
            "cloudpassage.system_announcement",
            "cloudpassage.utility"
        ],
        "version": "1.0.6.3"
    },
    "cloudpayments": {
        "cmdline": [],
        "modules": [
            "cloudpayments",
            "cloudpayments.client",
            "cloudpayments.enums",
            "cloudpayments.errors",
            "cloudpayments.models",
            "cloudpayments.tests",
            "cloudpayments.utils"
        ],
        "version": "1.2"
    },
    "cloudpickle": {
        "cmdline": [],
        "modules": [
            "cloudpickle",
            "cloudpickle.cloudpickle"
        ],
        "version": "0.2.2"
    },
    "cloudpipe": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloudplay": {
        "cmdline": [
            "cloudplay"
        ],
        "modules": [],
        "version": "0.1"
    },
    "cloudplaya": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "cloudpool": {
        "cmdline": [],
        "modules": [
            "cloudpool",
            "cloudpool.environment",
            "cloudpool.shell",
            "cloudpool.task",
            "cloudpool.utils"
        ],
        "version": "0.1.3"
    },
    "cloudprint": {
        "cmdline": [],
        "modules": [
            "cloudprint",
            "cloudprint.cloudprint",
            "cloudprint.xmpp"
        ],
        "version": "0.14"
    },
    "cloudprinting": {
        "cmdline": [],
        "modules": [
            "cloudprinting",
            "cloudprinting.auth",
            "cloudprinting.client",
            "cloudprinting.sample"
        ],
        "version": "0.3.2"
    },
    "cloudpulse": {
        "cmdline": [],
        "modules": [],
        "version": "2016.1.1"
    },
    "cloudpy": {
        "cmdline": [],
        "modules": [
            "cloudpy",
            "cloudpy.cloudpy_agent",
            "cloudpy.cloudpy_clean",
            "cloudpy.cloudpy_config",
            "cloudpy.cloudpy_deps",
            "cloudpy.cloudpy_files",
            "cloudpy.cloudpy_main",
            "cloudpy.cloudpy_package",
            "cloudpy.cloudpy_run",
            "cloudpy.cloudpy_struct",
            "cloudpy.cloudpy_sync"
        ],
        "version": "0.3.12"
    },
    "cloudrun": {
        "cmdline": [
            "cloudrun"
        ],
        "modules": [
            "cloudrun",
            "cloudrun.api",
            "cloudrun.config",
            "cloudrun.main",
            "cloudrun.misc",
            "cloudrun.mount",
            "cloudrun.runner",
            "cloudrun.socks_connect"
        ],
        "version": "0.1.3"
    },
    "cloudrunner": {
        "cmdline": [
            "cloudrunner-autocomplete"
        ],
        "modules": [
            "cloudrunner",
            "cloudrunner.api",
            "cloudrunner.api.base",
            "cloudrunner.api.client",
            "cloudrunner.api.exceptions",
            "cloudrunner.api.library",
            "cloudrunner.api.logs",
            "cloudrunner.api.nodes",
            "cloudrunner.core",
            "cloudrunner.core.exceptions",
            "cloudrunner.core.message",
            "cloudrunner.core.parser",
            "cloudrunner.core.platform",
            "cloudrunner.core.platform.nix",
            "cloudrunner.core.platform.nt",
            "cloudrunner.core.platform.tests",
            "cloudrunner.core.platform.tests.test_nix",
            "cloudrunner.core.platform.tests.test_nt",
            "cloudrunner.core.process",
            "cloudrunner.core.statemanager",
            "cloudrunner.core.tests",
            "cloudrunner.core.tests.test_message",
            "cloudrunner.core.tests.test_parser",
            "cloudrunner.core.tests.test_process",
            "cloudrunner.core.tests.test_state",
            "cloudrunner.node",
            "cloudrunner.node.agent",
            "cloudrunner.node.matcher",
            "cloudrunner.plugins",
            "cloudrunner.plugins.args_provider",
            "cloudrunner.plugins.state",
            "cloudrunner.plugins.state.base",
            "cloudrunner.plugins.state.functions",
            "cloudrunner.plugins.transport",
            "cloudrunner.plugins.transport.base",
            "cloudrunner.plugins.transport.node_transport",
            "cloudrunner.plugins.transport.rest_transport",
            "cloudrunner.plugins.transport.zmq_node_transport",
            "cloudrunner.plugins.transport.zmq_transport",
            "cloudrunner.tests",
            "cloudrunner.tests.base",
            "cloudrunner.util",
            "cloudrunner.util.aes_crypto",
            "cloudrunner.util.cert_store",
            "cloudrunner.util.config",
            "cloudrunner.util.crypto",
            "cloudrunner.util.daemon",
            "cloudrunner.util.decorators",
            "cloudrunner.util.http",
            "cloudrunner.util.loader",
            "cloudrunner.util.logconfig",
            "cloudrunner.util.net",
            "cloudrunner.util.nix",
            "cloudrunner.util.nt",
            "cloudrunner.util.psutil_wrapper",
            "cloudrunner.util.shell",
            "cloudrunner.util.string",
            "cloudrunner.util.tlszmq",
            "cloudrunner.util.validator",
            "cloudrunner.version"
        ],
        "version": "1.6.2"
    },
    "clouds": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.a.dev"
    },
    "clouds-aws": {
        "cmdline": [],
        "modules": [
            "clouds_aws"
        ],
        "version": "0.2.3.post3"
    },
    "cloudsafe": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloudsearch-logger": {
        "cmdline": [],
        "modules": [
            "cloudsearch_logger",
            "cloudsearch_logger.constants",
            "cloudsearch_logger.exceptions",
            "cloudsearch_logger.formatter",
            "cloudsearch_logger.handler"
        ],
        "version": "0.2"
    },
    "cloudseed": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloudshare": {
        "cmdline": [],
        "modules": [
            "cloudshare",
            "cloudshare.authentication_parameter_provider",
            "cloudshare.hmacer",
            "cloudshare.http",
            "cloudshare.ioc",
            "cloudshare.requester",
            "cloudshare.token_generator"
        ],
        "version": "0.1.1"
    },
    "cloudshare-cli": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloudshell": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloudshell-api": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloudshell-automation-api": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.api",
            "cloudshell.api.cloudshell_api",
            "cloudshell.api.common_cloudshell_api",
            "cloudshell.helpers",
            "cloudshell.helpers.scripts",
            "cloudshell.helpers.scripts.cloudshell_dev_helpers",
            "cloudshell.helpers.scripts.cloudshell_scripts_helpers"
        ],
        "version": "8.1.0.29"
    },
    "cloudshell-cli": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.cli",
            "cloudshell.cli.cli",
            "cloudshell.cli.cli_exception",
            "cloudshell.cli.cli_service",
            "cloudshell.cli.cli_service_impl",
            "cloudshell.cli.command_mode",
            "cloudshell.cli.command_mode_helper",
            "cloudshell.cli.command_template",
            "cloudshell.cli.command_template.command_template",
            "cloudshell.cli.command_template.command_template_executor",
            "cloudshell.cli.examples",
            "cloudshell.cli.examples.cli_demo",
            "cloudshell.cli.examples.cli_demo.connect_to_AWS",
            "cloudshell.cli.examples.cli_demo.connect_to_AWS.runnur",
            "cloudshell.cli.examples.cli_demo.connect_to_switch",
            "cloudshell.cli.examples.cli_demo.connect_to_switch.SwitchClihandler",
            "cloudshell.cli.examples.cli_demo.connect_to_switch.runner",
            "cloudshell.cli.examples.cli_demo.connect_to_ubuntu",
            "cloudshell.cli.examples.cli_demo.connect_to_ubuntu.runnur",
            "cloudshell.cli.helper",
            "cloudshell.cli.helper.normalize_buffer",
            "cloudshell.cli.node",
            "cloudshell.cli.session",
            "cloudshell.cli.session.connection_params",
            "cloudshell.cli.session.console_session",
            "cloudshell.cli.session.expect_session",
            "cloudshell.cli.session.session",
            "cloudshell.cli.session.session_exceptions",
            "cloudshell.cli.session.ssh_session",
            "cloudshell.cli.session.tcp_session",
            "cloudshell.cli.session.telnet_session",
            "cloudshell.cli.session_manager",
            "cloudshell.cli.session_manager_impl",
            "cloudshell.cli.session_pool",
            "cloudshell.cli.session_pool_context_manager",
            "cloudshell.cli.session_pool_manager",
            "cloudshell.tests",
            "cloudshell.tests.cli",
            "cloudshell.tests.cli.session",
            "cloudshell.tests.cli.session.test_connection_params",
            "cloudshell.tests.cli.session.test_expect_session",
            "cloudshell.tests.cli.session.test_ssh_session",
            "cloudshell.tests.cli.session.test_telnet_session",
            "cloudshell.tests.cli.test_cli",
            "cloudshell.tests.cli.test_cli_service_impl",
            "cloudshell.tests.cli.test_command_mode",
            "cloudshell.tests.cli.test_command_mode_helper",
            "cloudshell.tests.cli.test_node",
            "cloudshell.tests.cli.test_session_manager",
            "cloudshell.tests.cli.test_session_pool_context_manager",
            "cloudshell.tests.cli.test_session_pool_manager",
            "cloudshell.tests.tests"
        ],
        "version": "3.1.0"
    },
    "cloudshell-cm-ansible": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.cm",
            "cloudshell.cm.ansible",
            "cloudshell.cm.ansible.ansible_shell",
            "cloudshell.cm.ansible.domain",
            "cloudshell.cm.ansible.domain.Helpers",
            "cloudshell.cm.ansible.domain.Helpers.ansible_connection_helper",
            "cloudshell.cm.ansible.domain.ansible_command_executor",
            "cloudshell.cm.ansible.domain.ansible_config_file",
            "cloudshell.cm.ansible.domain.ansible_configuration",
            "cloudshell.cm.ansible.domain.cancellation_sampler",
            "cloudshell.cm.ansible.domain.connection_service",
            "cloudshell.cm.ansible.domain.exceptions",
            "cloudshell.cm.ansible.domain.file_system_service",
            "cloudshell.cm.ansible.domain.filename_extractor",
            "cloudshell.cm.ansible.domain.host_vars_file",
            "cloudshell.cm.ansible.domain.http_request_service",
            "cloudshell.cm.ansible.domain.inventory_file",
            "cloudshell.cm.ansible.domain.output",
            "cloudshell.cm.ansible.domain.output.ansible_result",
            "cloudshell.cm.ansible.domain.output.unixToHtmlConverter",
            "cloudshell.cm.ansible.domain.playbook_downloader",
            "cloudshell.cm.ansible.domain.stdout_accumulator",
            "cloudshell.cm.ansible.domain.temp_folder_scope",
            "cloudshell.cm.ansible.domain.zip_service",
            "tests",
            "tests.helpers",
            "tests.mocks",
            "tests.mocks.file_system_service_mock",
            "tests.test_ansible_command_executor",
            "tests.test_ansible_config_file",
            "tests.test_ansible_configutarion",
            "tests.test_ansible_result",
            "tests.test_ansible_shell",
            "tests.test_filename_extractor",
            "tests.test_host_vars_file",
            "tests.test_inventory_file",
            "tests.test_output_writer",
            "tests.test_playbook_downloader",
            "tests.test_temp_folder_scope",
            "tests.test_unixToHtml_converter",
            "tests.test_zip_service"
        ],
        "version": "1.1.0"
    },
    "cloudshell-cm-customscript": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.cm",
            "cloudshell.cm.customscript",
            "cloudshell.cm.customscript.customscript_shell",
            "cloudshell.cm.customscript.domain",
            "cloudshell.cm.customscript.domain.cancellation_sampler",
            "cloudshell.cm.customscript.domain.linux_script_executor",
            "cloudshell.cm.customscript.domain.reservation_output_writer",
            "cloudshell.cm.customscript.domain.script_configuration",
            "cloudshell.cm.customscript.domain.script_downloader",
            "cloudshell.cm.customscript.domain.script_executor",
            "cloudshell.cm.customscript.domain.script_executor_selector",
            "cloudshell.cm.customscript.domain.script_file",
            "cloudshell.cm.customscript.domain.windows_script_executor",
            "tests",
            "tests.helpers",
            "tests.test_customscript_shell",
            "tests.test_linux_script_executor",
            "tests.test_reservation_output_writer",
            "tests.test_script_configuration",
            "tests.test_script_executor_selector",
            "tests.test_windows_script_executor"
        ],
        "version": "1.0.0"
    },
    "cloudshell-core": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.core",
            "cloudshell.core.context",
            "cloudshell.core.context.error_handling_context",
            "cloudshell.core.driver_request",
            "cloudshell.core.driver_response",
            "cloudshell.core.driver_response_root",
            "cloudshell.core.logger",
            "cloudshell.core.logger.interprocess_logger",
            "cloudshell.core.logger.qs_config_parser",
            "cloudshell.core.logger.qs_logger",
            "tests",
            "tests.cloudshell_core_tests",
            "tests.core",
            "tests.core.logger",
            "tests.core.logger.test_qs_config_parser",
            "tests.core.logger.test_qs_logger"
        ],
        "version": "2.2.176"
    },
    "cloudshell-cp-aws": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.cp",
            "cloudshell.cp.aws",
            "cloudshell.cp.aws.aws_shell",
            "cloudshell.cp.aws.common",
            "cloudshell.cp.aws.common.deploy_data_holder",
            "cloudshell.cp.aws.common.driver_helper",
            "cloudshell.cp.aws.common.retry_helper",
            "cloudshell.cp.aws.domain",
            "cloudshell.cp.aws.domain.ami_management",
            "cloudshell.cp.aws.domain.ami_management.operations",
            "cloudshell.cp.aws.domain.ami_management.operations.access_key_operation",
            "cloudshell.cp.aws.domain.ami_management.operations.delete_operation",
            "cloudshell.cp.aws.domain.ami_management.operations.deploy_operation",
            "cloudshell.cp.aws.domain.ami_management.operations.power_operation",
            "cloudshell.cp.aws.domain.ami_management.operations.refresh_ip_operation",
            "cloudshell.cp.aws.domain.common",
            "cloudshell.cp.aws.domain.common.aws_session_manager",
            "cloudshell.cp.aws.domain.conncetivity",
            "cloudshell.cp.aws.domain.conncetivity.operations",
            "cloudshell.cp.aws.domain.conncetivity.operations.cleanup",
            "cloudshell.cp.aws.domain.conncetivity.operations.prepare",
            "cloudshell.cp.aws.domain.context",
            "cloudshell.cp.aws.domain.context.aws_api",
            "cloudshell.cp.aws.domain.context.aws_resource_model",
            "cloudshell.cp.aws.domain.context.aws_shell",
            "cloudshell.cp.aws.domain.context.ec2_client",
            "cloudshell.cp.aws.domain.context.ec2_session",
            "cloudshell.cp.aws.domain.context.s3_session",
            "cloudshell.cp.aws.domain.deployed_app",
            "cloudshell.cp.aws.domain.deployed_app.operations",
            "cloudshell.cp.aws.domain.deployed_app.operations.app_ports_operation",
            "cloudshell.cp.aws.domain.services",
            "cloudshell.cp.aws.domain.services.crypto",
            "cloudshell.cp.aws.domain.services.crypto.cryptography",
            "cloudshell.cp.aws.domain.services.ec2",
            "cloudshell.cp.aws.domain.services.ec2.ebs",
            "cloudshell.cp.aws.domain.services.ec2.instance",
            "cloudshell.cp.aws.domain.services.ec2.instance_credentials",
            "cloudshell.cp.aws.domain.services.ec2.keypair",
            "cloudshell.cp.aws.domain.services.ec2.route_table",
            "cloudshell.cp.aws.domain.services.ec2.security_group",
            "cloudshell.cp.aws.domain.services.ec2.subnet",
            "cloudshell.cp.aws.domain.services.ec2.tags",
            "cloudshell.cp.aws.domain.services.ec2.vpc",
            "cloudshell.cp.aws.domain.services.parsers",
            "cloudshell.cp.aws.domain.services.parsers.aws_model_parser",
            "cloudshell.cp.aws.domain.services.parsers.command_results_parser",
            "cloudshell.cp.aws.domain.services.parsers.custom_param_extractor",
            "cloudshell.cp.aws.domain.services.parsers.port_group_attribute_parser",
            "cloudshell.cp.aws.domain.services.s3",
            "cloudshell.cp.aws.domain.services.s3.bucket",
            "cloudshell.cp.aws.domain.services.session_providers",
            "cloudshell.cp.aws.domain.services.session_providers.aws_session_provider",
            "cloudshell.cp.aws.domain.services.waiters",
            "cloudshell.cp.aws.domain.services.waiters.instance",
            "cloudshell.cp.aws.domain.services.waiters.password",
            "cloudshell.cp.aws.domain.services.waiters.subnet",
            "cloudshell.cp.aws.domain.services.waiters.vpc",
            "cloudshell.cp.aws.domain.services.waiters.vpc_peering",
            "cloudshell.cp.aws.models",
            "cloudshell.cp.aws.models.ami_credentials",
            "cloudshell.cp.aws.models.ami_deployment_model",
            "cloudshell.cp.aws.models.aws_api",
            "cloudshell.cp.aws.models.aws_ec2_cloud_provider_resource_model",
            "cloudshell.cp.aws.models.connectivity_models",
            "cloudshell.cp.aws.models.deploy_aws_ec2_ami_instance_resource_model",
            "cloudshell.cp.aws.models.deploy_result_model",
            "cloudshell.cp.aws.models.port_data",
            "cloudshell.cp.aws.models.reservation_model",
            "tests",
            "tests.test_ami_management",
            "tests.test_ami_management.test_operations",
            "tests.test_ami_management.test_operations.test_delete_operation",
            "tests.test_ami_management.test_operations.test_deploy_operation",
            "tests.test_ami_management.test_operations.test_power_operation",
            "tests.test_ami_management.test_operations.test_refresh_ip_operation",
            "tests.test_aws_shell",
            "tests.test_connectivity",
            "tests.test_connectivity.test_cleanup_connectivity",
            "tests.test_connectivity.test_prepare_connectivity",
            "tests.test_deployed_app",
            "tests.test_deployed_app.test_operations",
            "tests.test_deployed_app.test_operations.test_access_key_operation",
            "tests.test_deployed_app.test_operations.test_app_ports_operation",
            "tests.test_domain_services",
            "tests.test_domain_services.test_ami_creds_service",
            "tests.test_domain_services.test_bucket",
            "tests.test_domain_services.test_cryptography_service",
            "tests.test_domain_services.test_instance_service",
            "tests.test_domain_services.test_instance_waiter",
            "tests.test_domain_services.test_key_pair",
            "tests.test_domain_services.test_password_waiter",
            "tests.test_domain_services.test_route_table",
            "tests.test_domain_services.test_security_groups",
            "tests.test_domain_services.test_session_provider",
            "tests.test_domain_services.test_subnet",
            "tests.test_domain_services.test_subnet_waiter",
            "tests.test_domain_services.test_tag_service",
            "tests.test_domain_services.test_vm_custom_params_extractor",
            "tests.test_domain_services.test_vpc",
            "tests.test_domain_services.test_vpc_peering_waiter",
            "tests.test_domain_services.test_vpc_waiter"
        ],
        "version": "1.1.1"
    },
    "cloudshell-cp-azure": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.cp",
            "cloudshell.cp.azure",
            "cloudshell.cp.azure.azure_shell",
            "cloudshell.cp.azure.common",
            "cloudshell.cp.azure.common.azure_clients",
            "cloudshell.cp.azure.common.deploy_data_holder",
            "cloudshell.cp.azure.common.exceptions",
            "cloudshell.cp.azure.common.exceptions.autoload_exception",
            "cloudshell.cp.azure.common.exceptions.cancellation_exception",
            "cloudshell.cp.azure.common.exceptions.quali_timeout_exception",
            "cloudshell.cp.azure.common.exceptions.validation_error",
            "cloudshell.cp.azure.common.exceptions.virtual_network_not_found_exception",
            "cloudshell.cp.azure.common.handlers",
            "cloudshell.cp.azure.common.helpers",
            "cloudshell.cp.azure.common.helpers.deployment_helper",
            "cloudshell.cp.azure.common.helpers.retrying_helpers",
            "cloudshell.cp.azure.common.helpers.url_helper",
            "cloudshell.cp.azure.common.parsers",
            "cloudshell.cp.azure.common.parsers.azure_model_parser",
            "cloudshell.cp.azure.common.parsers.azure_resource_id_parser",
            "cloudshell.cp.azure.common.parsers.command_result_parser",
            "cloudshell.cp.azure.common.parsers.custom_param_extractor",
            "cloudshell.cp.azure.common.parsers.resource_context",
            "cloudshell.cp.azure.common.parsers.rules_attribute_parser",
            "cloudshell.cp.azure.common.profiler",
            "cloudshell.cp.azure.common.profiler.profiler",
            "cloudshell.cp.azure.common.singletons",
            "cloudshell.cp.azure.domain",
            "cloudshell.cp.azure.domain.context",
            "cloudshell.cp.azure.domain.context.azure_resource_model",
            "cloudshell.cp.azure.domain.services",
            "cloudshell.cp.azure.domain.services.command_cancellation",
            "cloudshell.cp.azure.domain.services.cryptography_service",
            "cloudshell.cp.azure.domain.services.image_data",
            "cloudshell.cp.azure.domain.services.ip_service",
            "cloudshell.cp.azure.domain.services.key_pair",
            "cloudshell.cp.azure.domain.services.lock_service",
            "cloudshell.cp.azure.domain.services.name_provider",
            "cloudshell.cp.azure.domain.services.network_service",
            "cloudshell.cp.azure.domain.services.security_group",
            "cloudshell.cp.azure.domain.services.storage_service",
            "cloudshell.cp.azure.domain.services.subscription",
            "cloudshell.cp.azure.domain.services.tags",
            "cloudshell.cp.azure.domain.services.task_waiter",
            "cloudshell.cp.azure.domain.services.virtual_machine_service",
            "cloudshell.cp.azure.domain.services.vm_credentials_service",
            "cloudshell.cp.azure.domain.services.vm_extension",
            "cloudshell.cp.azure.domain.vm_management",
            "cloudshell.cp.azure.domain.vm_management.operations",
            "cloudshell.cp.azure.domain.vm_management.operations.access_key_operation",
            "cloudshell.cp.azure.domain.vm_management.operations.app_ports_operation",
            "cloudshell.cp.azure.domain.vm_management.operations.autoload_operation",
            "cloudshell.cp.azure.domain.vm_management.operations.delete_operation",
            "cloudshell.cp.azure.domain.vm_management.operations.deploy_operation",
            "cloudshell.cp.azure.domain.vm_management.operations.power_operation",
            "cloudshell.cp.azure.domain.vm_management.operations.prepare_connectivity_operation",
            "cloudshell.cp.azure.domain.vm_management.operations.refresh_ip_operation",
            "cloudshell.cp.azure.models",
            "cloudshell.cp.azure.models.authorized_key",
            "cloudshell.cp.azure.models.azure_blob_url",
            "cloudshell.cp.azure.models.azure_cloud_provider_resource_model",
            "cloudshell.cp.azure.models.blob_copy_operation",
            "cloudshell.cp.azure.models.deploy_azure_vm_resource_models",
            "cloudshell.cp.azure.models.deploy_result_model",
            "cloudshell.cp.azure.models.image_data",
            "cloudshell.cp.azure.models.prepare_connectivity_action_result",
            "cloudshell.cp.azure.models.reservation_model",
            "cloudshell.cp.azure.models.rule_data",
            "cloudshell.cp.azure.models.ssh_key",
            "cloudshell.cp.azure.models.vm_credentials",
            "tests",
            "tests.helpers",
            "tests.helpers.test_helper",
            "tests.test_cp",
            "tests.test_cp.test_azure",
            "tests.test_cp.test_azure.test_azure_shell",
            "tests.test_cp.test_azure.test_common",
            "tests.test_cp.test_azure.test_common.test_azure_clients",
            "tests.test_cp.test_azure.test_common.test_deploy_data_holder",
            "tests.test_cp.test_azure.test_common.test_singletons",
            "tests.test_cp.test_azure.test_domain",
            "tests.test_cp.test_azure.test_domain.test_services",
            "tests.test_cp.test_azure.test_domain.test_services.test_command_cancellation",
            "tests.test_cp.test_azure.test_domain.test_services.test_cryptography_service",
            "tests.test_cp.test_azure.test_domain.test_services.test_generic_lock_provider",
            "tests.test_cp.test_azure.test_domain.test_services.test_image_data_factory",
            "tests.test_cp.test_azure.test_domain.test_services.test_ip_service",
            "tests.test_cp.test_azure.test_domain.test_services.test_key_pair",
            "tests.test_cp.test_azure.test_domain.test_services.test_name_provider",
            "tests.test_cp.test_azure.test_domain.test_services.test_network_service",
            "tests.test_cp.test_azure.test_domain.test_services.test_security_group",
            "tests.test_cp.test_azure.test_domain.test_services.test_storage_service",
            "tests.test_cp.test_azure.test_domain.test_services.test_subscription",
            "tests.test_cp.test_azure.test_domain.test_services.test_tags",
            "tests.test_cp.test_azure.test_domain.test_services.test_task_waiter",
            "tests.test_cp.test_azure.test_domain.test_services.test_virtual_machine_service",
            "tests.test_cp.test_azure.test_domain.test_services.test_vm_credentials_service",
            "tests.test_cp.test_azure.test_domain.test_services.test_vm_extension",
            "tests.test_cp.test_azure.test_domain.test_vm_management",
            "tests.test_cp.test_azure.test_domain.test_vm_management.test_operations",
            "tests.test_cp.test_azure.test_domain.test_vm_management.test_operations.test_accesskey_operation",
            "tests.test_cp.test_azure.test_domain.test_vm_management.test_operations.test_app_ports_operation",
            "tests.test_cp.test_azure.test_domain.test_vm_management.test_operations.test_autoload_operation",
            "tests.test_cp.test_azure.test_domain.test_vm_management.test_operations.test_delete_operation",
            "tests.test_cp.test_azure.test_domain.test_vm_management.test_operations.test_deploy_operation",
            "tests.test_cp.test_azure.test_domain.test_vm_management.test_operations.test_power_operation",
            "tests.test_cp.test_azure.test_domain.test_vm_management.test_operations.test_prepare_connectivity",
            "tests.test_cp.test_azure.test_domain.test_vm_management.test_operations.test_refresh_ip_operation"
        ],
        "version": "1.1.0"
    },
    "cloudshell-cp-openstack": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.cp",
            "cloudshell.cp.openstack",
            "cloudshell.cp.openstack.command",
            "cloudshell.cp.openstack.command.command_result_parser",
            "cloudshell.cp.openstack.command.operations",
            "cloudshell.cp.openstack.command.operations.autoload_operation",
            "cloudshell.cp.openstack.command.operations.connectivity_operation",
            "cloudshell.cp.openstack.command.operations.deploy_operation",
            "cloudshell.cp.openstack.command.operations.hidden_operation",
            "cloudshell.cp.openstack.command.operations.power_operation",
            "cloudshell.cp.openstack.command.operations.refresh_ip_operation",
            "cloudshell.cp.openstack.common",
            "cloudshell.cp.openstack.common.deploy_data_holder",
            "cloudshell.cp.openstack.common.driver_helper",
            "cloudshell.cp.openstack.domain",
            "cloudshell.cp.openstack.domain.services",
            "cloudshell.cp.openstack.domain.services.cancellation_services",
            "cloudshell.cp.openstack.domain.services.cancellation_services.command_cancellation",
            "cloudshell.cp.openstack.domain.services.cinder",
            "cloudshell.cp.openstack.domain.services.connectivity",
            "cloudshell.cp.openstack.domain.services.connectivity.vlan_connectivity_service",
            "cloudshell.cp.openstack.domain.services.cp_validators",
            "cloudshell.cp.openstack.domain.services.cp_validators.cp_validator",
            "cloudshell.cp.openstack.domain.services.glance",
            "cloudshell.cp.openstack.domain.services.neutron",
            "cloudshell.cp.openstack.domain.services.neutron.neutron_network_service",
            "cloudshell.cp.openstack.domain.services.nova",
            "cloudshell.cp.openstack.domain.services.nova.nova_instance_service",
            "cloudshell.cp.openstack.domain.services.nova.udev_rules",
            "cloudshell.cp.openstack.domain.services.session_providers",
            "cloudshell.cp.openstack.domain.services.session_providers.os_session_provider",
            "cloudshell.cp.openstack.domain.services.waiters",
            "cloudshell.cp.openstack.domain.services.waiters.instance",
            "cloudshell.cp.openstack.models",
            "cloudshell.cp.openstack.models.connectivity_action_resource_info",
            "cloudshell.cp.openstack.models.connectivity_action_result_model",
            "cloudshell.cp.openstack.models.deploy_os_nova_image_instance_resource_model",
            "cloudshell.cp.openstack.models.deploy_result_model",
            "cloudshell.cp.openstack.models.driver_response_model",
            "cloudshell.cp.openstack.models.exceptions",
            "cloudshell.cp.openstack.models.model_parser",
            "cloudshell.cp.openstack.models.openstack_resource_model",
            "cloudshell.cp.openstack.models.reservation_model",
            "cloudshell.cp.openstack.openstack_shell"
        ],
        "version": "1.0.1"
    },
    "cloudshell-cp-vcenter": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.cp",
            "cloudshell.cp.vcenter",
            "cloudshell.cp.vcenter.commands",
            "cloudshell.cp.vcenter.commands.command_orchestrator",
            "cloudshell.cp.vcenter.commands.connect_dvswitch",
            "cloudshell.cp.vcenter.commands.connect_orchestrator",
            "cloudshell.cp.vcenter.commands.deploy_vm",
            "cloudshell.cp.vcenter.commands.destroy_vm",
            "cloudshell.cp.vcenter.commands.disconnect_dvswitch",
            "cloudshell.cp.vcenter.commands.ip_result",
            "cloudshell.cp.vcenter.commands.load_vm",
            "cloudshell.cp.vcenter.commands.power_manager_vm",
            "cloudshell.cp.vcenter.commands.refresh_ip",
            "cloudshell.cp.vcenter.commands.restore_snapshot",
            "cloudshell.cp.vcenter.commands.retrieve_snapshots",
            "cloudshell.cp.vcenter.commands.save_snapshot",
            "cloudshell.cp.vcenter.common",
            "cloudshell.cp.vcenter.common.cloud_shell",
            "cloudshell.cp.vcenter.common.cloud_shell.conn_details_retriever",
            "cloudshell.cp.vcenter.common.cloud_shell.driver_helper",
            "cloudshell.cp.vcenter.common.cloud_shell.resource_creator",
            "cloudshell.cp.vcenter.common.cloud_shell.resource_helper",
            "cloudshell.cp.vcenter.common.cloud_shell.resource_remover",
            "cloudshell.cp.vcenter.common.model_factory",
            "cloudshell.cp.vcenter.common.utilites",
            "cloudshell.cp.vcenter.common.utilites.command_result",
            "cloudshell.cp.vcenter.common.utilites.common_name",
            "cloudshell.cp.vcenter.common.utilites.common_utils",
            "cloudshell.cp.vcenter.common.utilites.context_based_logger_factory",
            "cloudshell.cp.vcenter.common.utilites.debug",
            "cloudshell.cp.vcenter.common.utilites.io",
            "cloudshell.cp.vcenter.common.utilites.lazy_property",
            "cloudshell.cp.vcenter.common.vcenter",
            "cloudshell.cp.vcenter.common.vcenter.data_model_retriever",
            "cloudshell.cp.vcenter.common.vcenter.deployment_details",
            "cloudshell.cp.vcenter.common.vcenter.deployment_details_factory",
            "cloudshell.cp.vcenter.common.vcenter.model_auto_discovery",
            "cloudshell.cp.vcenter.common.vcenter.ovf_service",
            "cloudshell.cp.vcenter.common.vcenter.task_waiter",
            "cloudshell.cp.vcenter.common.vcenter.test_vm",
            "cloudshell.cp.vcenter.common.vcenter.vm_details",
            "cloudshell.cp.vcenter.common.vcenter.vm_location",
            "cloudshell.cp.vcenter.common.vcenter.vm_snapshots",
            "cloudshell.cp.vcenter.common.vcenter.vmomi_service",
            "cloudshell.cp.vcenter.common.wrappers",
            "cloudshell.cp.vcenter.common.wrappers.command_wrapper",
            "cloudshell.cp.vcenter.exceptions",
            "cloudshell.cp.vcenter.exceptions.snapshot_exists",
            "cloudshell.cp.vcenter.exceptions.snapshot_not_found",
            "cloudshell.cp.vcenter.exceptions.task_waiter",
            "cloudshell.cp.vcenter.models",
            "cloudshell.cp.vcenter.models.ActionResult",
            "cloudshell.cp.vcenter.models.ConnectionResult",
            "cloudshell.cp.vcenter.models.DeployDataHolder",
            "cloudshell.cp.vcenter.models.DeployFromTemplateDetails",
            "cloudshell.cp.vcenter.models.DeployResultModel",
            "cloudshell.cp.vcenter.models.DriverResponse",
            "cloudshell.cp.vcenter.models.GenericAppModelResourceModel",
            "cloudshell.cp.vcenter.models.GenericDeployedAppResourceModel",
            "cloudshell.cp.vcenter.models.GenericInstallationOptionResourceModel",
            "cloudshell.cp.vcenter.models.ImageDeployedAppModel",
            "cloudshell.cp.vcenter.models.OrchestrationSaveResult",
            "cloudshell.cp.vcenter.models.OrchestrationSavedArtifact",
            "cloudshell.cp.vcenter.models.OrchestrationSavedArtifactsInfo",
            "cloudshell.cp.vcenter.models.QualiDriverModels",
            "cloudshell.cp.vcenter.models.VCenterConnectionDetails",
            "cloudshell.cp.vcenter.models.VCenterDeployVMFromLinkedCloneResourceModel",
            "cloudshell.cp.vcenter.models.VCenterDetails",
            "cloudshell.cp.vcenter.models.VCenterInventoryPathAttribute",
            "cloudshell.cp.vcenter.models.VCenterTemplateModel",
            "cloudshell.cp.vcenter.models.VLANAutoResourceModel",
            "cloudshell.cp.vcenter.models.VLANDefaultResourceModel",
            "cloudshell.cp.vcenter.models.VLANManualResourceModel",
            "cloudshell.cp.vcenter.models.VMClusterModel",
            "cloudshell.cp.vcenter.models.VMwarevCenterResourceModel",
            "cloudshell.cp.vcenter.models.VirtualNicModel",
            "cloudshell.cp.vcenter.models.vCenterCloneVMFromVMResourceModel",
            "cloudshell.cp.vcenter.models.vCenterVMFromImageResourceModel",
            "cloudshell.cp.vcenter.models.vCenterVMFromTemplateResourceModel",
            "cloudshell.cp.vcenter.network",
            "cloudshell.cp.vcenter.network.dvswitch",
            "cloudshell.cp.vcenter.network.dvswitch.creator",
            "cloudshell.cp.vcenter.network.dvswitch.name_generator",
            "cloudshell.cp.vcenter.network.network_specifications",
            "cloudshell.cp.vcenter.network.vlan",
            "cloudshell.cp.vcenter.network.vlan.factory",
            "cloudshell.cp.vcenter.network.vlan.range_parser",
            "cloudshell.cp.vcenter.network.vnic",
            "cloudshell.cp.vcenter.network.vnic.vnic_service",
            "cloudshell.cp.vcenter.vm",
            "cloudshell.cp.vcenter.vm.deploy",
            "cloudshell.cp.vcenter.vm.dvswitch_connector",
            "cloudshell.cp.vcenter.vm.ip_manager",
            "cloudshell.cp.vcenter.vm.ovf_image_params",
            "cloudshell.cp.vcenter.vm.portgroup_configurer",
            "cloudshell.cp.vcenter.vm.vcenter_details_factory",
            "cloudshell.cp.vcenter.vm.vnic_to_network_mapper",
            "cloudshell.tests",
            "cloudshell.tests.test_commands",
            "cloudshell.tests.test_commands.test_command_orchestrator",
            "cloudshell.tests.test_commands.test_connect_orchestrator",
            "cloudshell.tests.test_commands.test_connect_vm",
            "cloudshell.tests.test_commands.test_deploy_vm",
            "cloudshell.tests.test_commands.test_destroy_vm",
            "cloudshell.tests.test_commands.test_disconnect_vm",
            "cloudshell.tests.test_commands.test_power_management_vm",
            "cloudshell.tests.test_commands.test_refresh_ip",
            "cloudshell.tests.test_commands.test_restore_snapshot",
            "cloudshell.tests.test_commands.test_retrieve_snapshot",
            "cloudshell.tests.test_commands.test_save_snapshot",
            "cloudshell.tests.test_commands.test_vm_loader",
            "cloudshell.tests.test_common",
            "cloudshell.tests.test_common.test_cloudshell",
            "cloudshell.tests.test_common.test_cloudshell.test_connection_detail_retriever",
            "cloudshell.tests.test_common.test_cloudshell.test_driver_helper",
            "cloudshell.tests.test_common.test_cloudshell.test_resource_remover",
            "cloudshell.tests.test_common.test_logger",
            "cloudshell.tests.test_common.test_model_factory",
            "cloudshell.tests.test_common.test_utilities",
            "cloudshell.tests.test_common.test_utilities.test_command_result",
            "cloudshell.tests.test_common.test_utilities.test_command_wrapper",
            "cloudshell.tests.test_common.test_utilities.test_common_name_utils",
            "cloudshell.tests.test_common.test_utilities.test_common_utils",
            "cloudshell.tests.test_common.test_vcenter",
            "cloudshell.tests.test_common.test_vcenter.test_ovf_image_tool",
            "cloudshell.tests.test_common.test_vcenter.test_task_waiter",
            "cloudshell.tests.test_common.test_vcenter.test_vcenter_data_model_retriever",
            "cloudshell.tests.test_common.test_vcenter.test_vm_location",
            "cloudshell.tests.test_common.test_vcenter.test_vm_snapshots",
            "cloudshell.tests.test_common.test_vcenter.test_vmomi_service",
            "cloudshell.tests.test_models",
            "cloudshell.tests.test_models.test_deploy_data_holder",
            "cloudshell.tests.test_network",
            "cloudshell.tests.test_network.test_dvswitch",
            "cloudshell.tests.test_network.test_dvswitch.test_connector",
            "cloudshell.tests.test_network.test_dvswitch.test_creator",
            "cloudshell.tests.test_network.test_dvswitch.test_name_generator",
            "cloudshell.tests.test_network.test_dvswitch.test_port_group_configurer",
            "cloudshell.tests.test_network.vlan",
            "cloudshell.tests.test_network.vlan.test_factory",
            "cloudshell.tests.test_network.vlan.test_range_parser",
            "cloudshell.tests.test_network.vnic",
            "cloudshell.tests.test_network.vnic.test_network_vnic",
            "cloudshell.tests.test_vm",
            "cloudshell.tests.test_vm.test_deployer",
            "cloudshell.tests.test_vm.test_dvswitch_connector",
            "cloudshell.tests.test_vm.test_vm_ip_manager",
            "cloudshell.tests.test_vm.test_vnic_to_network_mapper",
            "cloudshell.tests.tests",
            "cloudshell.tests.tests_pycommon",
            "cloudshell.tests.tests_pycommon.test_resourceModelParser",
            "cloudshell.tests.utils",
            "cloudshell.tests.utils.command_context_mocker",
            "cloudshell.tests.utils.helpers",
            "cloudshell.tests.utils.testing_credentials",
            "cloudshell.tests.utils.vm_context"
        ],
        "version": "1.6.1"
    },
    "cloudshell-firewall": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.firewall",
            "cloudshell.firewall.firewall_resource_driver_interface"
        ],
        "version": "3.0.1"
    },
    "cloudshell-firewall-cisco-asa": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.firewall",
            "cloudshell.firewall.cisco",
            "cloudshell.firewall.cisco.asa",
            "cloudshell.firewall.cisco.asa.autoload",
            "cloudshell.firewall.cisco.asa.autoload.cisco_asa_snmp_autoload",
            "cloudshell.firewall.cisco.asa.cisco_asa_configuration",
            "cloudshell.firewall.cisco.asa.cisco_asa_configuration_operations",
            "cloudshell.firewall.cisco.asa.cisco_asa_resource_driver",
            "cloudshell.firewall.cisco.asa.cisco_asa_send_command_operations",
            "cloudshell.firewall.cisco.asa.firmware_data",
            "cloudshell.firewall.cisco.asa.firmware_data.cisco_asa_firmware_data",
            "cloudshell.firewall.cisco.asa.firmware_data.firmware_data",
            "cloudshell.firewall.cisco.asa.mibs",
            "cloudshell.firewall.cisco.asa.mibs.CISCO-CDP-MIB",
            "cloudshell.firewall.cisco.asa.mibs.CISCO-ENTITY-VENDORTYPE-OID-MIB",
            "cloudshell.firewall.cisco.asa.mibs.CISCO-PRODUCTS-MIB",
            "cloudshell.firewall.cisco.asa.mibs.CISCO-SMI",
            "cloudshell.firewall.cisco.asa.mibs.CISCO-STACK-MIB",
            "cloudshell.firewall.cisco.asa.mibs.CISCO-TC",
            "cloudshell.firewall.cisco.asa.mibs.CISCO-VTP-MIB"
        ],
        "version": "1.0.26"
    },
    "cloudshell-firewall-core": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.firewall",
            "cloudshell.firewall.autoload",
            "cloudshell.firewall.autoload.firewall_attributes",
            "cloudshell.firewall.autoload.firewall_autoload_resource_attributes",
            "cloudshell.firewall.autoload.firewall_autoload_resource_structure",
            "cloudshell.firewall.autoload.firewall_model",
            "cloudshell.firewall.autoload.model",
            "cloudshell.firewall.autoload.model.attribute_container",
            "cloudshell.firewall.autoload.model.generic_resource",
            "cloudshell.firewall.firewall_resource_driver_interface",
            "cloudshell.firewall.generic_bootstrap",
            "cloudshell.firewall.networking_utils",
            "cloudshell.firewall.operations",
            "cloudshell.firewall.operations.interfaces",
            "cloudshell.firewall.operations.interfaces.autoload_operations_interface",
            "cloudshell.firewall.operations.interfaces.configuration_operations_interface",
            "cloudshell.firewall.operations.interfaces.firmware_operations_interface",
            "cloudshell.firewall.operations.interfaces.power_operations_interface",
            "cloudshell.firewall.operations.interfaces.send_command_interface"
        ],
        "version": "1.0.8"
    },
    "cloudshell-firewall-juniper-junos": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.firewall",
            "cloudshell.firewall.juniper",
            "cloudshell.firewall.juniper.junos",
            "cloudshell.firewall.juniper.junos.autoload",
            "cloudshell.firewall.juniper.junos.autoload.juniper_snmp_autoload",
            "cloudshell.firewall.juniper.junos.cli",
            "cloudshell.firewall.juniper.junos.cli.juniper_cli_handler",
            "cloudshell.firewall.juniper.junos.cli.juniper_command_modes",
            "cloudshell.firewall.juniper.junos.command_actions",
            "cloudshell.firewall.juniper.junos.command_actions.commit_rollback_actions",
            "cloudshell.firewall.juniper.junos.command_actions.enable_disable_snmp_actions",
            "cloudshell.firewall.juniper.junos.command_actions.save_restore_actions",
            "cloudshell.firewall.juniper.junos.command_actions.system_actions",
            "cloudshell.firewall.juniper.junos.command_templates",
            "cloudshell.firewall.juniper.junos.command_templates.commit_rollback",
            "cloudshell.firewall.juniper.junos.command_templates.enable_disable_snmp",
            "cloudshell.firewall.juniper.junos.command_templates.save_restore",
            "cloudshell.firewall.juniper.junos.command_templates.system_commands",
            "cloudshell.firewall.juniper.junos.flows",
            "cloudshell.firewall.juniper.junos.flows.juniper_autoload_flow",
            "cloudshell.firewall.juniper.junos.flows.juniper_disable_snmp_flow",
            "cloudshell.firewall.juniper.junos.flows.juniper_enable_snmp_flow",
            "cloudshell.firewall.juniper.junos.flows.juniper_firmware_flow",
            "cloudshell.firewall.juniper.junos.flows.juniper_restore_flow",
            "cloudshell.firewall.juniper.junos.flows.juniper_save_flow",
            "cloudshell.firewall.juniper.junos.flows.juniper_shutdown_flow",
            "cloudshell.firewall.juniper.junos.helpers",
            "cloudshell.firewall.juniper.junos.helpers.save_restore_helper",
            "cloudshell.firewall.juniper.junos.mibs",
            "cloudshell.firewall.juniper.junos.mibs.JUNIPER-CHASSIS-DEFINES-MIB",
            "cloudshell.firewall.juniper.junos.mibs.JUNIPER-IF-MIB",
            "cloudshell.firewall.juniper.junos.mibs.JUNIPER-L2CP-FEATURES-MIB",
            "cloudshell.firewall.juniper.junos.mibs.JUNIPER-MIB",
            "cloudshell.firewall.juniper.junos.mibs.JUNIPER-SMI",
            "cloudshell.firewall.juniper.junos.runners",
            "cloudshell.firewall.juniper.junos.runners.juniper_autoload_runner",
            "cloudshell.firewall.juniper.junos.runners.juniper_configuration_runner",
            "cloudshell.firewall.juniper.junos.runners.juniper_firmware_runner",
            "cloudshell.firewall.juniper.junos.runners.juniper_run_command_runner",
            "cloudshell.firewall.juniper.junos.runners.juniper_state_runner",
            "cloudshell.firewall.juniper.junos.snmp",
            "cloudshell.firewall.juniper.junos.snmp.juniper_snmp_handler",
            "cloudshell.firewall.juniper.junos.utils"
        ],
        "version": "1.0.3"
    },
    "cloudshell-networking": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.networking",
            "cloudshell.networking.apply_connectivity",
            "cloudshell.networking.apply_connectivity.apply_connectivity_operation",
            "cloudshell.networking.apply_connectivity.models",
            "cloudshell.networking.apply_connectivity.models.connectivity_request",
            "cloudshell.networking.apply_connectivity.models.connectivity_result",
            "cloudshell.networking.networking_resource_driver_interface",
            "cloudshell.tests",
            "cloudshell.tests.networking",
            "cloudshell.tests.networking.standard_connectivity_requests",
            "cloudshell.tests.networking.tests_standard_apply_connectivity"
        ],
        "version": "5.0.0"
    },
    "cloudshell-networking-arista": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.networking",
            "cloudshell.networking.arista",
            "cloudshell.networking.arista.autoload",
            "cloudshell.networking.arista.autoload.arista_autoload_structure",
            "cloudshell.networking.arista.autoload.arista_snmp_autoload",
            "cloudshell.networking.arista.cli",
            "cloudshell.networking.arista.cli.arista_cli_handler",
            "cloudshell.networking.arista.cli.arista_command_modes",
            "cloudshell.networking.arista.command_actions",
            "cloudshell.networking.arista.command_actions.arista_command_actions",
            "cloudshell.networking.arista.command_actions.cisco_command_actions",
            "cloudshell.networking.arista.command_actions.enable_disable_snmp_actions",
            "cloudshell.networking.arista.command_templates",
            "cloudshell.networking.arista.command_templates.arista_configuration_templates",
            "cloudshell.networking.arista.command_templates.cisco_configuration_templates",
            "cloudshell.networking.arista.command_templates.cisco_interface",
            "cloudshell.networking.arista.command_templates.common_cisco_templates",
            "cloudshell.networking.arista.flows",
            "cloudshell.networking.arista.flows.arista_autoload_flow",
            "cloudshell.networking.arista.flows.arista_disable_snmp_flow",
            "cloudshell.networking.arista.flows.arista_enable_snmp_flow",
            "cloudshell.networking.arista.flows.arista_load_firmware_flow",
            "cloudshell.networking.arista.flows.cisco_add_vlan_flow",
            "cloudshell.networking.arista.flows.cisco_remove_vlan_flow",
            "cloudshell.networking.arista.flows.cisco_restore_flow",
            "cloudshell.networking.arista.flows.cisco_save_flow",
            "cloudshell.networking.arista.mibs",
            "cloudshell.networking.arista.mibs.ARISTA-PRODUCTS-MIB",
            "cloudshell.networking.arista.mibs.ARISTA-SMI-MIB",
            "cloudshell.networking.arista.runners",
            "cloudshell.networking.arista.runners.arista_autoload_runner",
            "cloudshell.networking.arista.runners.arista_configuration_runner",
            "cloudshell.networking.arista.runners.arista_connectivity_runner",
            "cloudshell.networking.arista.runners.arista_firmware_runner",
            "cloudshell.networking.arista.runners.arista_run_command_runner",
            "cloudshell.networking.arista.runners.arista_state_runner",
            "cloudshell.networking.arista.snmp",
            "cloudshell.networking.arista.snmp.arista_snmp_handler"
        ],
        "version": "1.0.0"
    },
    "cloudshell-networking-brocade": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.networking",
            "cloudshell.networking.brocade",
            "cloudshell.networking.brocade.autoload",
            "cloudshell.networking.brocade.autoload.brocade_snmp_autoload",
            "cloudshell.networking.brocade.brocade_configuration_operations",
            "cloudshell.networking.brocade.brocade_connectivity_operations",
            "cloudshell.networking.brocade.brocade_firmware_operations",
            "cloudshell.networking.brocade.brocade_send_command_operations",
            "cloudshell.networking.brocade.brocade_state_operations",
            "cloudshell.networking.brocade.mibs",
            "cloudshell.networking.brocade.mibs.BROCADE-ENTITY-OID-MIB",
            "cloudshell.networking.brocade.mibs.FOUNDRY-SN-ROOT-MIB",
            "cloudshell.tests",
            "cloudshell.tests.networking_brocade_tests",
            "cloudshell.tests.test_brocade_connectivity_operations",
            "cloudshell.tests.test_brocade_firmware_operations"
        ],
        "version": "1.0.9"
    },
    "cloudshell-networking-brocade-fastiron": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.networking",
            "cloudshell.networking.brocade",
            "cloudshell.networking.brocade.fastiron",
            "cloudshell.networking.brocade.fastiron.autoload",
            "cloudshell.networking.brocade.fastiron.autoload.brocade_fastiron_snmp_autoload",
            "cloudshell.networking.brocade.fastiron.fastiron_configuration",
            "cloudshell.networking.brocade.fastiron.fastiron_resource_driver",
            "cloudshell.networking.brocade.fastiron.handler",
            "cloudshell.networking.brocade.fastiron.handler.brocade_fastiron_configuration_operations",
            "cloudshell.networking.brocade.fastiron.handler.brocade_fastiron_connectivity_operations",
            "cloudshell.networking.brocade.fastiron.handler.brocade_fastiron_firmware_operations",
            "cloudshell.networking.brocade.fastiron.mibs",
            "cloudshell.networking.brocade.fastiron.mibs.FOUNDRY-SN-AGENT-MIB",
            "cloudshell.networking.brocade.fastiron.mibs.FOUNDRY-SN-IP-MIB",
            "cloudshell.networking.brocade.fastiron.mibs.FOUNDRY-SN-STACKING-MIB",
            "cloudshell.networking.brocade.fastiron.mibs.FOUNDRY-SN-SWITCH-GROUP-MIB",
            "cloudshell.networking.brocade.fastiron.mibs.HCNUM-TC",
            "cloudshell.networking.brocade.fastiron.mibs.INET-ADDRESS-MIB"
        ],
        "version": "1.0.27"
    },
    "cloudshell-networking-brocade-netiron": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.networking",
            "cloudshell.networking.brocade",
            "cloudshell.networking.brocade.netiron",
            "cloudshell.networking.brocade.netiron.autoload",
            "cloudshell.networking.brocade.netiron.autoload.brocade_netiron_snmp_autoload",
            "cloudshell.networking.brocade.netiron.handler",
            "cloudshell.networking.brocade.netiron.handler.brocade_netiron_configuration_operations",
            "cloudshell.networking.brocade.netiron.handler.brocade_netiron_connectivity_operations",
            "cloudshell.networking.brocade.netiron.netiron_configuration",
            "cloudshell.networking.brocade.netiron.netiron_resource_driver"
        ],
        "version": "1.0.32"
    },
    "cloudshell-networking-cisco": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.networking",
            "cloudshell.networking.cisco",
            "cloudshell.networking.cisco.autoload",
            "cloudshell.networking.cisco.autoload.cisco_generic_snmp_autoload",
            "cloudshell.networking.cisco.cli",
            "cloudshell.networking.cisco.cli.cisco_cli_handler",
            "cloudshell.networking.cisco.cli.cisco_command_modes",
            "cloudshell.networking.cisco.command_actions",
            "cloudshell.networking.cisco.command_actions.add_remove_vlan_actions",
            "cloudshell.networking.cisco.command_actions.enable_disable_snmp_actions",
            "cloudshell.networking.cisco.command_actions.iface_actions",
            "cloudshell.networking.cisco.command_actions.system_actions",
            "cloudshell.networking.cisco.command_templates",
            "cloudshell.networking.cisco.command_templates.add_remove_vlan",
            "cloudshell.networking.cisco.command_templates.configuration",
            "cloudshell.networking.cisco.command_templates.enable_disable_snmp",
            "cloudshell.networking.cisco.command_templates.firmware",
            "cloudshell.networking.cisco.command_templates.iface",
            "cloudshell.networking.cisco.firmware_data",
            "cloudshell.networking.cisco.firmware_data.cisco_firmware_data",
            "cloudshell.networking.cisco.firmware_data.firmware_data",
            "cloudshell.networking.cisco.flows",
            "cloudshell.networking.cisco.flows.cisco_add_vlan_flow",
            "cloudshell.networking.cisco.flows.cisco_autoload_flow",
            "cloudshell.networking.cisco.flows.cisco_disable_snmp_flow",
            "cloudshell.networking.cisco.flows.cisco_enable_snmp_flow",
            "cloudshell.networking.cisco.flows.cisco_load_firmware_flow",
            "cloudshell.networking.cisco.flows.cisco_remove_vlan_flow",
            "cloudshell.networking.cisco.flows.cisco_restore_flow",
            "cloudshell.networking.cisco.flows.cisco_save_flow",
            "cloudshell.networking.cisco.mibs",
            "cloudshell.networking.cisco.mibs.CISCO-CDP-MIB",
            "cloudshell.networking.cisco.mibs.CISCO-ENTITY-VENDORTYPE-OID-MIB",
            "cloudshell.networking.cisco.mibs.CISCO-PRODUCTS-MIB",
            "cloudshell.networking.cisco.mibs.CISCO-SMI",
            "cloudshell.networking.cisco.mibs.CISCO-STACK-MIB",
            "cloudshell.networking.cisco.mibs.CISCO-TC",
            "cloudshell.networking.cisco.mibs.CISCO-VTP-MIB",
            "cloudshell.networking.cisco.runners",
            "cloudshell.networking.cisco.runners.cisco_autoload_runner",
            "cloudshell.networking.cisco.runners.cisco_configuration_runner",
            "cloudshell.networking.cisco.runners.cisco_connectivity_runner",
            "cloudshell.networking.cisco.runners.cisco_firmware_runner",
            "cloudshell.networking.cisco.runners.cisco_run_command_runner",
            "cloudshell.networking.cisco.runners.cisco_state_runner",
            "cloudshell.networking.cisco.sessions",
            "cloudshell.networking.cisco.sessions.console_ssh_session",
            "cloudshell.networking.cisco.sessions.console_telnet_session",
            "cloudshell.networking.cisco.snmp",
            "cloudshell.networking.cisco.snmp.cisco_snmp_handler",
            "cloudshell.tests",
            "cloudshell.tests.cloudshell_networking_cisco_tests",
            "cloudshell.tests.networking",
            "cloudshell.tests.networking.cisco",
            "cloudshell.tests.networking.cisco.command_actions",
            "cloudshell.tests.networking.cisco.command_actions.test_system_actions",
            "cloudshell.tests.networking.cisco.connectivity_methods",
            "cloudshell.tests.networking.cisco.connectivity_methods.test_apply_connectivity_changes",
            "cloudshell.tests.networking.cisco.flows",
            "cloudshell.tests.networking.cisco.flows.test_save_configuration_flow",
            "cloudshell.tests.networking.cisco.save_restore_methods",
            "cloudshell.tests.networking.cisco.save_restore_methods.test_backup_configuration_fixed_bugs",
            "cloudshell.tests.networking.cisco.save_restore_methods.test_backup_configuration_parameter_validation",
            "cloudshell.tests.networking.cisco.save_restore_methods.test_configure_replace",
            "cloudshell.tests.networking.cisco.save_restore_methods.test_restore_configuration_fixed_bugs"
        ],
        "version": "5.0.19"
    },
    "cloudshell-networking-cisco-aireos": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.networking",
            "cloudshell.networking.cisco",
            "cloudshell.networking.cisco.aireos",
            "cloudshell.networking.cisco.aireos.aireos_bootstrap",
            "cloudshell.networking.cisco.aireos.aireos_config",
            "cloudshell.networking.cisco.aireos.aireos_resource_driver",
            "cloudshell.networking.cisco.aireos.cli",
            "cloudshell.networking.cisco.aireos.cli.aireos_ssh_session",
            "cloudshell.networking.cisco.aireos.mibs",
            "cloudshell.networking.cisco.aireos.mibs.CISCO-CDP-MIB",
            "cloudshell.networking.cisco.aireos.mibs.CISCO-SMI",
            "cloudshell.networking.cisco.aireos.mibs.CISCO-TC",
            "cloudshell.networking.cisco.aireos.mibs.CISCO-VTP-MIB",
            "cloudshell.networking.cisco.aireos.operations",
            "cloudshell.networking.cisco.aireos.operations.aireos_autoload",
            "cloudshell.networking.cisco.aireos.operations.aireos_operations",
            "cloudshell.networking.cisco.aireos.operations.templates",
            "cloudshell.networking.cisco.aireos.operations.templates.add_remove_vlan",
            "cloudshell.networking.cisco.aireos.operations.templates.save_restore_configuration"
        ],
        "version": "1.0.50"
    },
    "cloudshell-networking-cisco-beta": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.networking",
            "cloudshell.networking.cisco",
            "cloudshell.networking.cisco.autoload",
            "cloudshell.networking.cisco.autoload.cisco_generic_snmp_autoload",
            "cloudshell.networking.cisco.cisco_configuration_operations",
            "cloudshell.networking.cisco.cisco_connectivity_operations",
            "cloudshell.networking.cisco.cisco_send_command_operations",
            "cloudshell.networking.cisco.command_templates",
            "cloudshell.networking.cisco.command_templates.cisco_interface",
            "cloudshell.networking.cisco.command_templates.ethernet",
            "cloudshell.networking.cisco.command_templates.interfaces_configurator",
            "cloudshell.networking.cisco.command_templates.mgmt",
            "cloudshell.networking.cisco.command_templates.port_channel",
            "cloudshell.networking.cisco.command_templates.vlan",
            "cloudshell.networking.cisco.firmware_data",
            "cloudshell.networking.cisco.firmware_data.cisco_firmware_data",
            "cloudshell.networking.cisco.firmware_data.firmware_data",
            "cloudshell.networking.cisco.mibs",
            "cloudshell.networking.cisco.mibs.CISCO-CDP-MIB",
            "cloudshell.networking.cisco.mibs.CISCO-ENTITY-VENDORTYPE-OID-MIB",
            "cloudshell.networking.cisco.mibs.CISCO-PRODUCTS-MIB",
            "cloudshell.networking.cisco.mibs.CISCO-SMI",
            "cloudshell.networking.cisco.mibs.CISCO-STACK-MIB",
            "cloudshell.networking.cisco.mibs.CISCO-TC",
            "cloudshell.networking.cisco.mibs.CISCO-VTP-MIB",
            "cloudshell.networking.cisco.resource_drivers_map",
            "cloudshell.tests",
            "cloudshell.tests.cloudshell_networking_cisco_tests",
            "cloudshell.tests.networking",
            "cloudshell.tests.networking.cisco",
            "cloudshell.tests.networking.cisco.config_for_tests",
            "cloudshell.tests.networking.cisco.connectivity_methods",
            "cloudshell.tests.networking.cisco.connectivity_methods.test_apply_connectivity_changes",
            "cloudshell.tests.networking.cisco.save_restore_methods",
            "cloudshell.tests.networking.cisco.save_restore_methods.test_backup_configuration_fixed_bugs",
            "cloudshell.tests.networking.cisco.save_restore_methods.test_backup_configuration_parameter_validation",
            "cloudshell.tests.networking.cisco.save_restore_methods.test_copy_output",
            "cloudshell.tests.networking.cisco.save_restore_methods.test_restore_configuration_fixed_bugs"
        ],
        "version": "2.1.196"
    },
    "cloudshell-networking-cisco-ios": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.networking",
            "cloudshell.networking.cisco",
            "cloudshell.networking.cisco.ios",
            "cloudshell.networking.cisco.ios.autoload",
            "cloudshell.networking.cisco.ios.autoload.autoload_structure",
            "cloudshell.networking.cisco.ios.autoload.cisco_autoload_runner",
            "cloudshell.networking.cisco.ios.autoload.cisco_ios_autoload",
            "cloudshell.tests"
        ],
        "version": "4.0.187"
    },
    "cloudshell-networking-cisco-iosxr": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.networking",
            "cloudshell.networking.cisco",
            "cloudshell.networking.cisco.iosxr",
            "cloudshell.networking.cisco.iosxr.autoload",
            "cloudshell.networking.cisco.iosxr.autoload.autoload_structure",
            "cloudshell.networking.cisco.iosxr.autoload.cisco_ios_xr_autoload",
            "cloudshell.networking.cisco.iosxr.cisco_ios_xr_cli_handler",
            "cloudshell.networking.cisco.iosxr.cisco_ios_xr_custom_actions",
            "cloudshell.networking.cisco.iosxr.command_templates",
            "cloudshell.networking.cisco.iosxr.command_templates.cisco_ios_xr_cmd_templates",
            "cloudshell.networking.cisco.iosxr.flows",
            "cloudshell.networking.cisco.iosxr.flows.cisco_ios_xr_restore_flow",
            "cloudshell.networking.cisco.iosxr.runners",
            "cloudshell.networking.cisco.iosxr.runners.cisco_ios_xr_autoload_runner",
            "cloudshell.networking.cisco.iosxr.runners.cisco_ios_xr_configuration_runner",
            "cloudshell.networking.cisco.iosxr.runners.cisco_ios_xr_connectivity_runner",
            "cloudshell.networking.cisco.iosxr.runners.cisco_ios_xr_firmware_runner",
            "cloudshell.networking.cisco.iosxr.runners.cisco_ios_xr_run_command_runner",
            "cloudshell.networking.cisco.iosxr.runners.cisco_ios_xr_state_runner",
            "cloudshell.tests",
            "cloudshell.tests.networking",
            "cloudshell.tests.networking.cisco",
            "cloudshell.tests.networking.cisco.iosxr",
            "cloudshell.tests.networking.cisco.iosxr.flows",
            "cloudshell.tests.networking.cisco.iosxr.flows.test_restore_configuration_flow"
        ],
        "version": "2.0.44"
    },
    "cloudshell-networking-cisco-iosxr-beta": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.networking",
            "cloudshell.networking.cisco",
            "cloudshell.networking.cisco.iosxr",
            "cloudshell.networking.cisco.iosxr.cisco_iosxr_autoload_operations",
            "cloudshell.networking.cisco.iosxr.cisco_iosxr_bootstrap",
            "cloudshell.networking.cisco.iosxr.cisco_iosxr_configuration",
            "cloudshell.networking.cisco.iosxr.cisco_iosxr_configuration_operations",
            "cloudshell.networking.cisco.iosxr.cisco_iosxr_handler",
            "cloudshell.networking.cisco.iosxr.cisco_iosxr_resource_driver",
            "cloudshell.networking.cisco.iosxr.test_iosxr"
        ],
        "version": "1.0.19"
    },
    "cloudshell-networking-cisco-nxos": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.networking",
            "cloudshell.networking.cisco",
            "cloudshell.networking.cisco.nxos",
            "cloudshell.networking.cisco.nxos.flows",
            "cloudshell.networking.cisco.nxos.flows.cisco_nxos_restore_flow",
            "cloudshell.networking.cisco.nxos.runners",
            "cloudshell.networking.cisco.nxos.runners.cisco_nxos_configuration_runner"
        ],
        "version": "5.0.3"
    },
    "cloudshell-networking-core": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloudshell-networking-devices": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.devices",
            "cloudshell.devices.autoload",
            "cloudshell.devices.autoload.autoload_builder",
            "cloudshell.devices.autoload.autoload_migration_helper",
            "cloudshell.devices.cli_handler_impl",
            "cloudshell.devices.cli_handler_interface",
            "cloudshell.devices.driver_helper",
            "cloudshell.devices.flows",
            "cloudshell.devices.flows.action_flows",
            "cloudshell.devices.flows.cli_action_flows",
            "cloudshell.devices.flows.snmp_action_flows",
            "cloudshell.devices.json_request_helper",
            "cloudshell.devices.networking_utils",
            "cloudshell.devices.runners",
            "cloudshell.devices.runners.autoload_runner",
            "cloudshell.devices.runners.configuration_runner",
            "cloudshell.devices.runners.connectivity_runner",
            "cloudshell.devices.runners.firmware_runner",
            "cloudshell.devices.runners.interfaces",
            "cloudshell.devices.runners.interfaces.autoload_runner_interface",
            "cloudshell.devices.runners.interfaces.configuration_runner_interface",
            "cloudshell.devices.runners.interfaces.connectivity_runner_interface",
            "cloudshell.devices.runners.interfaces.firmware_runner_interface",
            "cloudshell.devices.runners.interfaces.run_command_runner_interface",
            "cloudshell.devices.runners.interfaces.state_runner_interface",
            "cloudshell.devices.runners.run_command_runner",
            "cloudshell.devices.runners.state_runner",
            "cloudshell.devices.snmp_handler",
            "cloudshell.devices.snmp_handler_interface",
            "cloudshell.devices.standards",
            "cloudshell.devices.standards.firewall",
            "cloudshell.devices.standards.firewall.autoload_structure",
            "cloudshell.devices.standards.firewall.configuration_attributes_structure",
            "cloudshell.devices.standards.networking",
            "cloudshell.devices.standards.networking.autoload_structure",
            "cloudshell.devices.standards.networking.configuration_attributes_structure",
            "cloudshell.devices.standards.validators",
            "tests",
            "tests.test_devices",
            "tests.test_devices.test_autoload",
            "tests.test_devices.test_autoload.test_autoload_builder",
            "tests.test_devices.test_autoload.test_autoload_migration_helper",
            "tests.test_devices.test_cli_handler_impl",
            "tests.test_devices.test_cli_handler_interface",
            "tests.test_devices.test_driver_helper",
            "tests.test_devices.test_flows",
            "tests.test_devices.test_flows.test_action_flows",
            "tests.test_devices.test_flows.test_cli_action_flows",
            "tests.test_devices.test_json_request_helper",
            "tests.test_devices.test_runners",
            "tests.test_devices.test_runners.test_autoload_runner",
            "tests.test_devices.test_runners.test_firmware_runner",
            "tests.test_devices.test_runners.test_interfaces",
            "tests.test_devices.test_runners.test_interfaces.test_autoload_runner_interface",
            "tests.test_devices.test_runners.test_interfaces.test_configuration_runner_interface",
            "tests.test_devices.test_runners.test_interfaces.test_connectivity_runner_interface",
            "tests.test_devices.test_runners.test_interfaces.test_firmware_runner_interface",
            "tests.test_devices.test_runners.test_interfaces.test_run_command_runner_interface",
            "tests.test_devices.test_runners.test_interfaces.test_state_runner_interface",
            "tests.test_devices.test_runners.test_run_command_runner",
            "tests.test_devices.test_snmp_handler",
            "tests.test_devices.test_snmp_handler_interface",
            "tests.test_devices.test_standards",
            "tests.test_devices.test_standards.test_validators"
        ],
        "version": "2.0.10"
    },
    "cloudshell-networking-ericsson": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.networking",
            "cloudshell.networking.ericsson",
            "cloudshell.networking.ericsson.autoload",
            "cloudshell.networking.ericsson.autoload.ericsson_generic_snmp_autoload",
            "cloudshell.networking.ericsson.ericsson_configuration_operations",
            "cloudshell.networking.ericsson.ericsson_connectivity_operations",
            "cloudshell.networking.ericsson.ericsson_firmware_operations",
            "cloudshell.networking.ericsson.ericsson_run_command_operations",
            "cloudshell.networking.ericsson.ericsson_state_operations",
            "cloudshell.tests",
            "cloudshell.tests.cloudshell_networking_ericsson_tests",
            "cloudshell.tests.networking",
            "cloudshell.tests.networking.ericsson",
            "cloudshell.tests.networking.ericsson.configuration",
            "cloudshell.tests.networking.ericsson.configuration.tests_ericsson_configuration",
            "cloudshell.tests.networking.ericsson.connectivity",
            "cloudshell.tests.networking.ericsson.connectivity.tests_ericsson_connectivity",
            "cloudshell.tests.networking.ericsson.firmware",
            "cloudshell.tests.networking.ericsson.firmware.tests_ericsson_firmware_ops",
            "cloudshell.tests.networking.ericsson.state",
            "cloudshell.tests.networking.ericsson.state.test_ericsson_state_operations"
        ],
        "version": "1.0.16"
    },
    "cloudshell-networking-ericsson-ipos": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.networking",
            "cloudshell.networking.ericsson",
            "cloudshell.networking.ericsson.ipos",
            "cloudshell.networking.ericsson.ipos.autoload",
            "cloudshell.networking.ericsson.ipos.autoload.ericsson_ipos_snmp_autoload",
            "cloudshell.networking.ericsson.ipos.autoload.mib",
            "cloudshell.networking.ericsson.ipos.autoload.mib.ERICSSON-ROUTER-IP-BIND-MIB",
            "cloudshell.networking.ericsson.ipos.autoload.mib.ERICSSON-ROUTER-PRODUCT-MIB",
            "cloudshell.networking.ericsson.ipos.autoload.mib.ERICSSON-ROUTER-SMI",
            "cloudshell.networking.ericsson.ipos.autoload.mib.ERICSSON-ROUTER-TC",
            "cloudshell.networking.ericsson.ipos.autoload.mib.ERICSSON-TOP-MIB",
            "cloudshell.networking.ericsson.ipos.ericsson_ipos_configuration",
            "cloudshell.networking.ericsson.ipos.ericsson_ipos_resource_driver"
        ],
        "version": "1.0.21"
    },
    "cloudshell-networking-ericsson-seos": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.networking",
            "cloudshell.networking.ericsson",
            "cloudshell.networking.ericsson.seos",
            "cloudshell.networking.ericsson.seos.autoload",
            "cloudshell.networking.ericsson.seos.autoload.ericsson_seos_snmp_autoload",
            "cloudshell.networking.ericsson.seos.autoload.mib",
            "cloudshell.networking.ericsson.seos.autoload.mib.RBN-IP-BIND-MIB",
            "cloudshell.networking.ericsson.seos.autoload.mib.RBN-PRODUCT-MIB",
            "cloudshell.networking.ericsson.seos.autoload.mib.RBN-SMI",
            "cloudshell.networking.ericsson.seos.autoload.mib.RBN-TC",
            "cloudshell.networking.ericsson.seos.ericsson_seos_configuration",
            "cloudshell.networking.ericsson.seos.ericsson_seos_resource_driver"
        ],
        "version": "1.0.25"
    },
    "cloudshell-networking-huawei": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.networking",
            "cloudshell.networking.huawei",
            "cloudshell.networking.huawei.autoload",
            "cloudshell.networking.huawei.autoload.huawei_generic_snmp_autoload",
            "cloudshell.networking.huawei.autoload.mib_attributes",
            "cloudshell.networking.huawei.command_templates",
            "cloudshell.networking.huawei.command_templates.huawei_commands_templates",
            "cloudshell.networking.huawei.command_templates.huawei_configure_vlan_template",
            "cloudshell.networking.huawei.command_templates.vlan",
            "cloudshell.networking.huawei.firmware_data",
            "cloudshell.networking.huawei.firmware_data.firmware_data",
            "cloudshell.networking.huawei.firmware_data.huawei_firmware_data",
            "cloudshell.networking.huawei.flows",
            "cloudshell.networking.huawei.flows.huawei_add_vlan_flow",
            "cloudshell.networking.huawei.flows.huawei_autoload_flow",
            "cloudshell.networking.huawei.flows.huawei_load_firmware_flow",
            "cloudshell.networking.huawei.flows.huawei_remove_vlan_flow",
            "cloudshell.networking.huawei.flows.huawei_restore_flow",
            "cloudshell.networking.huawei.flows.huawei_save_flow",
            "cloudshell.networking.huawei.huawei_cli_handler",
            "cloudshell.networking.huawei.huawei_command_actions",
            "cloudshell.networking.huawei.huawei_command_modes",
            "cloudshell.networking.huawei.huawei_configuration_operations",
            "cloudshell.networking.huawei.huawei_connectivity_operations",
            "cloudshell.networking.huawei.huawei_send_command_operations",
            "cloudshell.networking.huawei.mibs",
            "cloudshell.networking.huawei.mibs.HUAWEI-IMA-MIB",
            "cloudshell.networking.huawei.mibs.HUAWEI-MIB",
            "cloudshell.networking.huawei.mibs.HUAWEI-PORT-MIB",
            "cloudshell.networking.huawei.mibs.P-BRIDGE-MIB",
            "cloudshell.networking.huawei.runners",
            "cloudshell.networking.huawei.runners.huawei_autoload_runner",
            "cloudshell.networking.huawei.runners.huawei_configuration_runner",
            "cloudshell.networking.huawei.runners.huawei_connectivity_runner",
            "cloudshell.networking.huawei.runners.huawei_firmware_runner",
            "cloudshell.networking.huawei.runners.huawei_run_command_runner",
            "cloudshell.networking.huawei.runners.huawei_state_runner",
            "cloudshell.tests",
            "cloudshell.tests.networking",
            "cloudshell.tests.networking.huawei",
            "cloudshell.tests.networking.huawei.test_connectivity",
            "cloudshell.tests.networking.huawei.test_connectivity.test_apply_connectivity_changes",
            "cloudshell.tests.networking.test_suite"
        ],
        "version": "2.2.0.20"
    },
    "cloudshell-networking-huawei-vrp": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.networking",
            "cloudshell.networking.huawei",
            "cloudshell.networking.huawei.vrp",
            "cloudshell.networking.huawei.vrp.structures",
            "cloudshell.networking.huawei.vrp.structures.autoload_structure",
            "cloudshell.networking.huawei.vrp.wrapper"
        ],
        "version": "2.0.0"
    },
    "cloudshell-networking-juniper": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.networking",
            "cloudshell.networking.juniper",
            "cloudshell.networking.juniper.autoload",
            "cloudshell.networking.juniper.autoload.juniper_snmp_autoload",
            "cloudshell.networking.juniper.cli",
            "cloudshell.networking.juniper.cli.juniper_cli_handler",
            "cloudshell.networking.juniper.cli.junipr_command_modes",
            "cloudshell.networking.juniper.command_actions",
            "cloudshell.networking.juniper.command_actions.add_remove_vlan_actions",
            "cloudshell.networking.juniper.command_actions.commit_rollback_actions",
            "cloudshell.networking.juniper.command_actions.enable_disable_snmp_actions",
            "cloudshell.networking.juniper.command_actions.save_restore_actions",
            "cloudshell.networking.juniper.command_actions.system_actions",
            "cloudshell.networking.juniper.command_templates",
            "cloudshell.networking.juniper.command_templates.add_remove_vlan",
            "cloudshell.networking.juniper.command_templates.commit_rollback",
            "cloudshell.networking.juniper.command_templates.enable_disable_snmp",
            "cloudshell.networking.juniper.command_templates.save_restore",
            "cloudshell.networking.juniper.command_templates.system_commands",
            "cloudshell.networking.juniper.flows",
            "cloudshell.networking.juniper.flows.juniper_add_vlan_flow",
            "cloudshell.networking.juniper.flows.juniper_autoload_flow",
            "cloudshell.networking.juniper.flows.juniper_disable_snmp_flow",
            "cloudshell.networking.juniper.flows.juniper_enable_snmp_flow",
            "cloudshell.networking.juniper.flows.juniper_firmware_flow",
            "cloudshell.networking.juniper.flows.juniper_remove_vlan_flow",
            "cloudshell.networking.juniper.flows.juniper_restore_flow",
            "cloudshell.networking.juniper.flows.juniper_save_flow",
            "cloudshell.networking.juniper.helpers",
            "cloudshell.networking.juniper.helpers.add_remove_vlan_helper",
            "cloudshell.networking.juniper.helpers.save_restore_helper",
            "cloudshell.networking.juniper.mibs",
            "cloudshell.networking.juniper.mibs.JUNIPER-CHASSIS-DEFINES-MIB",
            "cloudshell.networking.juniper.mibs.JUNIPER-IF-MIB",
            "cloudshell.networking.juniper.mibs.JUNIPER-L2CP-FEATURES-MIB",
            "cloudshell.networking.juniper.mibs.JUNIPER-MIB",
            "cloudshell.networking.juniper.mibs.JUNIPER-SMI",
            "cloudshell.networking.juniper.runners",
            "cloudshell.networking.juniper.runners.juniper_autoload_runner",
            "cloudshell.networking.juniper.runners.juniper_configuration_runner",
            "cloudshell.networking.juniper.runners.juniper_connectiviry_runner",
            "cloudshell.networking.juniper.runners.juniper_firmware_runner",
            "cloudshell.networking.juniper.runners.juniper_run_command_runner",
            "cloudshell.networking.juniper.runners.juniper_state_runner",
            "cloudshell.networking.juniper.snmp",
            "cloudshell.networking.juniper.snmp.juniper_snmp_handler",
            "cloudshell.networking.juniper.utils"
        ],
        "version": "4.0.5"
    },
    "cloudshell-networking-juniper-junos": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.networking",
            "cloudshell.networking.juniper",
            "cloudshell.networking.juniper.junos",
            "cloudshell.tests",
            "cloudshell.tests.tests"
        ],
        "version": "3.0.150"
    },
    "cloudshell-octopus-deploy": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.octopus",
            "cloudshell.octopus.environment_spec",
            "cloudshell.octopus.machine_spec",
            "cloudshell.octopus.release_spec",
            "cloudshell.octopus.session"
        ],
        "version": "4.1.55"
    },
    "cloudshell-orch-core": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.workflow",
            "cloudshell.workflow.helpers",
            "cloudshell.workflow.helpers.resource_helpers",
            "cloudshell.workflow.orchestration",
            "cloudshell.workflow.orchestration.app",
            "cloudshell.workflow.orchestration.apps_configuration",
            "cloudshell.workflow.orchestration.components",
            "cloudshell.workflow.orchestration.sandbox",
            "cloudshell.workflow.orchestration.setup",
            "cloudshell.workflow.orchestration.setup.default_setup_logic",
            "cloudshell.workflow.orchestration.setup.default_setup_orchestrator",
            "cloudshell.workflow.orchestration.setup.remap_child_resources_constants",
            "cloudshell.workflow.orchestration.teardown",
            "cloudshell.workflow.orchestration.teardown.default_teardown_logic",
            "cloudshell.workflow.orchestration.teardown.default_teardown_orchestrator",
            "cloudshell.workflow.orchestration.workflow",
            "cloudshell.workflow.profiler",
            "cloudshell.workflow.profiler.env_profiler"
        ],
        "version": "0.0.11"
    },
    "cloudshell-pdu-core": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.power",
            "cloudshell.power.pdu",
            "cloudshell.power.pdu.device",
            "cloudshell.power.pdu.device.outlet",
            "cloudshell.power.pdu.device.pdu_factory",
            "cloudshell.power.pdu.managed_devices",
            "cloudshell.power.pdu.managed_devices.connected_to_pdu_resource",
            "cloudshell.power.pdu.power_resource_driver_interface"
        ],
        "version": "1.0.21"
    },
    "cloudshell-pdu-raritan": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.power",
            "cloudshell.power.pdu",
            "cloudshell.power.pdu.mibs",
            "cloudshell.power.pdu.mibs.INET-ADDRESS-MIB",
            "cloudshell.power.pdu.mibs.PDU2-MIB",
            "cloudshell.power.pdu.mibs.SNMPv2-MIB",
            "cloudshell.power.pdu.raritan",
            "cloudshell.power.pdu.raritan.device",
            "cloudshell.power.pdu.raritan.device.factory_context",
            "cloudshell.power.pdu.raritan.device.raritan_rpcapi_pdu_factory",
            "cloudshell.power.pdu.raritan.device.rpcapi_outlet",
            "cloudshell.power.pdu.raritan.raritan_handler",
            "cloudshell.power.pdu.raritan.raritan_resource_driver",
            "cloudshell.power.pdu.raritan.shell_helper",
            "raritan",
            "raritan.rpc",
            "raritan.rpc.Agent",
            "raritan.rpc.Enumeration",
            "raritan.rpc.Interface",
            "raritan.rpc.Structure",
            "raritan.rpc.Time",
            "raritan.rpc.TypeInfo",
            "raritan.rpc.Utils",
            "raritan.rpc.ValueObject",
            "raritan.rpc.assetmgrmodel",
            "raritan.rpc.auth",
            "raritan.rpc.auth.ldapsrv",
            "raritan.rpc.bulkcfg",
            "raritan.rpc.bulkrpc",
            "raritan.rpc.cascading",
            "raritan.rpc.cert",
            "raritan.rpc.cew",
            "raritan.rpc.cfg",
            "raritan.rpc.datetime",
            "raritan.rpc.devsettings",
            "raritan.rpc.diag",
            "raritan.rpc.display",
            "raritan.rpc.emdmodel",
            "raritan.rpc.event",
            "raritan.rpc.firmware",
            "raritan.rpc.fitness",
            "raritan.rpc.hmi",
            "raritan.rpc.idl",
            "raritan.rpc.jsonrpc",
            "raritan.rpc.lhx",
            "raritan.rpc.lhxmodel",
            "raritan.rpc.logging",
            "raritan.rpc.modbus",
            "raritan.rpc.net",
            "raritan.rpc.opaque",
            "raritan.rpc.opaque.bulkrpc",
            "raritan.rpc.pdumodel",
            "raritan.rpc.peripheral",
            "raritan.rpc.portsmodel",
            "raritan.rpc.powerlogic",
            "raritan.rpc.production",
            "raritan.rpc.radius",
            "raritan.rpc.res_mon",
            "raritan.rpc.security",
            "raritan.rpc.sensors",
            "raritan.rpc.serial",
            "raritan.rpc.servermon",
            "raritan.rpc.session",
            "raritan.rpc.smartcard",
            "raritan.rpc.sys",
            "raritan.rpc.test",
            "raritan.rpc.tfw",
            "raritan.rpc.typecheck",
            "raritan.rpc.um",
            "raritan.rpc.usb",
            "raritan.rpc.usermgmt",
            "raritan.rpc.webcam",
            "raritan_pdu_shell_package"
        ],
        "version": "1.0.55"
    },
    "cloudshell-rest-api": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.rest",
            "cloudshell.rest.api",
            "cloudshell.rest.exceptions",
            "cloudshell.version",
            "tests",
            "tests.test_packaging_rest_api_client"
        ],
        "version": "7.2.0.7"
    },
    "cloudshell-shell-core": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.shell",
            "cloudshell.shell.core",
            "cloudshell.shell.core.api_utils",
            "cloudshell.shell.core.base_autoload_structure_generator",
            "cloudshell.shell.core.context",
            "cloudshell.shell.core.context_utils",
            "cloudshell.shell.core.cryptography",
            "cloudshell.shell.core.cryptography.aes_service",
            "cloudshell.shell.core.cryptography.rsa_service",
            "cloudshell.shell.core.driver_context",
            "cloudshell.shell.core.driver_utils",
            "cloudshell.shell.core.interfaces",
            "cloudshell.shell.core.interfaces.save_restore",
            "cloudshell.shell.core.resource_driver_interface",
            "cloudshell.shell.core.session",
            "cloudshell.shell.core.session.cloudshell_session",
            "cloudshell.shell.core.session.logging_session",
            "cloudshell.tests",
            "cloudshell.tests.cryptography",
            "cloudshell.tests.cryptography.test_aes",
            "cloudshell.tests.interfaces",
            "cloudshell.tests.interfaces.test_save_and_restore",
            "cloudshell.tests.session",
            "cloudshell.tests.session.test_cloudshell_session",
            "cloudshell.tests.session.test_logging_session",
            "cloudshell.tests.tests",
            "cloudshell.tests.utils",
            "cloudshell.tests.utils.test_api_utils",
            "cloudshell.tests.utils.test_context_utils"
        ],
        "version": "3.1.237"
    },
    "cloudshell-snmp": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.snmp",
            "cloudshell.snmp.mibs",
            "cloudshell.snmp.mibs.ASN1",
            "cloudshell.snmp.mibs.ASN1-ENUMERATION",
            "cloudshell.snmp.mibs.ASN1-REFINEMENT",
            "cloudshell.snmp.mibs.BRIDGE-MIB",
            "cloudshell.snmp.mibs.ENTITY-MIB",
            "cloudshell.snmp.mibs.EtherLike-MIB",
            "cloudshell.snmp.mibs.HCNUM-TC",
            "cloudshell.snmp.mibs.IANA-ADDRESS-FAMILY-NUMBERS-MIB",
            "cloudshell.snmp.mibs.IANA-MAU-MIB",
            "cloudshell.snmp.mibs.IANAifType-MIB",
            "cloudshell.snmp.mibs.IEEE8023-LAG-MIB",
            "cloudshell.snmp.mibs.IF-MIB",
            "cloudshell.snmp.mibs.INET-ADDRESS-MIB",
            "cloudshell.snmp.mibs.IP-MIB",
            "cloudshell.snmp.mibs.IPV6-MIB",
            "cloudshell.snmp.mibs.IPV6-TC",
            "cloudshell.snmp.mibs.LLDP-MIB",
            "cloudshell.snmp.mibs.MAU-MIB",
            "cloudshell.snmp.mibs.PYSNMP-MIB",
            "cloudshell.snmp.mibs.PYSNMP-SOURCE-MIB",
            "cloudshell.snmp.mibs.PYSNMP-USM-MIB",
            "cloudshell.snmp.mibs.RFC-1212",
            "cloudshell.snmp.mibs.RFC1155-SMI",
            "cloudshell.snmp.mibs.RFC1213-MIB",
            "cloudshell.snmp.mibs.RFC1271-MIB",
            "cloudshell.snmp.mibs.RMON-MIB",
            "cloudshell.snmp.mibs.RMON2-MIB",
            "cloudshell.snmp.mibs.SNMP-FRAMEWORK-MIB",
            "cloudshell.snmp.mibs.SNMPv2-CONF",
            "cloudshell.snmp.mibs.SNMPv2-MIB",
            "cloudshell.snmp.mibs.SNMPv2-SMI",
            "cloudshell.snmp.mibs.SNMPv2-TC",
            "cloudshell.snmp.mibs.SNMPv2-TM",
            "cloudshell.snmp.mibs.TOKEN-RING-RMON-MIB",
            "cloudshell.snmp.mibs.__PYSNMP-USM-MIB",
            "cloudshell.snmp.mibs.__SNMPv2-MIB",
            "cloudshell.snmp.quali_snmp",
            "cloudshell.snmp.quali_snmp_cached",
            "cloudshell.snmp.snmp_parameters",
            "cloudshell.tests"
        ],
        "version": "3.0.136"
    },
    "cloudshell-tg-breaking-point": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.tests",
            "cloudshell.tests.tg",
            "cloudshell.tests.tg.breaking_point",
            "cloudshell.tests.tg.breaking_point.flows",
            "cloudshell.tests.tg.breaking_point.flows.test_bp_flow",
            "cloudshell.tests.tg.breaking_point.helpers",
            "cloudshell.tests.tg.breaking_point.helpers.test_context_utils",
            "cloudshell.tests.tg.breaking_point.rest_actions",
            "cloudshell.tests.tg.breaking_point.rest_actions.test_auth_actions",
            "cloudshell.tests.tg.breaking_point.rest_actions.test_rest_actions",
            "cloudshell.tests.tg.breaking_point.rest_api",
            "cloudshell.tests.tg.breaking_point.rest_api.test_rest_json_client",
            "cloudshell.tests.tg.breaking_point.rest_api.test_rest_session_manager",
            "cloudshell.tests.tg.breaking_point.runners",
            "cloudshell.tests.tg.breaking_point.runners.test_bp_runner",
            "cloudshell.tg",
            "cloudshell.tg.breaking_point",
            "cloudshell.tg.breaking_point.bp_exception",
            "cloudshell.tg.breaking_point.flows",
            "cloudshell.tg.breaking_point.flows.bp_flow",
            "cloudshell.tg.breaking_point.flows.exceptions",
            "cloudshell.tg.breaking_point.helpers",
            "cloudshell.tg.breaking_point.helpers.context_utils",
            "cloudshell.tg.breaking_point.rest_actions",
            "cloudshell.tg.breaking_point.rest_actions.auth_actions",
            "cloudshell.tg.breaking_point.rest_actions.exceptions",
            "cloudshell.tg.breaking_point.rest_actions.rest_actions",
            "cloudshell.tg.breaking_point.rest_api",
            "cloudshell.tg.breaking_point.rest_api.rest_json_client",
            "cloudshell.tg.breaking_point.rest_api.rest_requests",
            "cloudshell.tg.breaking_point.rest_api.rest_session_manager",
            "cloudshell.tg.breaking_point.runners",
            "cloudshell.tg.breaking_point.runners.bp_runner",
            "cloudshell.tg.breaking_point.runners.exceptions"
        ],
        "version": "1.0.25"
    },
    "cloudshell-traffic-teravm": {
        "cmdline": [],
        "modules": [
            "cloudshell",
            "cloudshell.traffic",
            "cloudshell.traffic.teravm",
            "cloudshell.traffic.teravm.cleanup",
            "cloudshell.traffic.teravm.cleanup.app_cleanup_handler",
            "cloudshell.traffic.teravm.common",
            "cloudshell.traffic.teravm.common.cloudshell_helper",
            "cloudshell.traffic.teravm.common.error_messages",
            "cloudshell.traffic.teravm.common.i18n",
            "cloudshell.traffic.teravm.common.parsing_utilities",
            "cloudshell.traffic.teravm.common.path_utilties",
            "cloudshell.traffic.teravm.common.vsphere_helper",
            "cloudshell.traffic.teravm.controller",
            "cloudshell.traffic.teravm.controller.driver_handler",
            "cloudshell.traffic.teravm.controller.port_selector_helper",
            "cloudshell.traffic.teravm.controller.teravm_executive_helper",
            "cloudshell.traffic.teravm.deployment",
            "cloudshell.traffic.teravm.deployment.app_deployment_handler",
            "cloudshell.traffic.teravm.management_assistant",
            "cloudshell.traffic.teravm.management_assistant.tvm_ma",
            "cloudshell.traffic.teravm.management_assistant.tvmma_controller",
            "cloudshell.traffic.teravm.models",
            "cloudshell.traffic.teravm.models.deployment_configuration",
            "cloudshell.traffic.teravm.models.tvm_ma_model",
            "cloudshell.traffic.teravm.models.tvm_request",
            "cloudshell.traffic.teravm.test_module",
            "cloudshell.traffic.teravm.test_module.driver_handler",
            "drivers",
            "drivers.controller",
            "drivers.controller.src",
            "drivers.controller.src.driver",
            "drivers.controller.src.tvm_cli_service",
            "drivers.controller.src.tvm_controller_config"
        ],
        "version": "1.0.10"
    },
    "cloudshell-utility-snmp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloudshell-utility-ssh": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloudshellcontroller": {
        "cmdline": [],
        "modules": [
            "CloudshellController"
        ],
        "version": "0.12"
    },
    "cloudsight": {
        "cmdline": [],
        "modules": [
            "cloudsight",
            "cloudsight.api",
            "cloudsight.auth",
            "cloudsight.errors"
        ],
        "version": "0.9.2"
    },
    "cloudsigma": {
        "cmdline": [],
        "modules": [
            "cloudsigma",
            "cloudsigma.bulk",
            "cloudsigma.conf",
            "cloudsigma.errors",
            "cloudsigma.generic",
            "cloudsigma.metadata",
            "cloudsigma.resource",
            "cloudsigma.resumable_upload",
            "cloudsigma.scenarios",
            "cloudsigma.upload_client",
            "cloudsigma.version"
        ],
        "version": "0.4"
    },
    "cloudsns": {
        "cmdline": [],
        "modules": [
            "cloudsns",
            "cloudsns.cloudlistener",
            "cloudsns.integration_test",
            "cloudsns.integration_test.create",
            "cloudsns.message"
        ],
        "version": "0.0.1"
    },
    "cloudspecs": {
        "cmdline": [],
        "modules": [
            "cloudspecs",
            "cloudspecs.aws",
            "cloudspecs.aws.ec2",
            "cloudspecs.aws.ec2.instances",
            "cloudspecs.data_file"
        ],
        "version": "0.1.1"
    },
    "cloudstack": {
        "cmdline": [],
        "modules": [
            "CloudStack",
            "CloudStack.BaseClient",
            "CloudStack.Client",
            "CloudStack.ExtendedClient"
        ],
        "version": "3.0.0.1"
    },
    "cloudstack-marvin": {
        "cmdline": [],
        "modules": [
            "marvin",
            "marvin.asyncJobMgr",
            "marvin.cloudstackAPI",
            "marvin.cloudstackAPI.activateProject",
            "marvin.cloudstackAPI.addAccountToProject",
            "marvin.cloudstackAPI.addBaremetalDhcp",
            "marvin.cloudstackAPI.addBaremetalHost",
            "marvin.cloudstackAPI.addBaremetalPxeKickStartServer",
            "marvin.cloudstackAPI.addBaremetalPxePingServer",
            "marvin.cloudstackAPI.addBigSwitchVnsDevice",
            "marvin.cloudstackAPI.addCluster",
            "marvin.cloudstackAPI.addGuestOs",
            "marvin.cloudstackAPI.addGuestOsMapping",
            "marvin.cloudstackAPI.addHost",
            "marvin.cloudstackAPI.addImageStore",
            "marvin.cloudstackAPI.addIpToNic",
            "marvin.cloudstackAPI.addLdapConfiguration",
            "marvin.cloudstackAPI.addNetscalerLoadBalancer",
            "marvin.cloudstackAPI.addNetworkDevice",
            "marvin.cloudstackAPI.addNetworkServiceProvider",
            "marvin.cloudstackAPI.addNicToVirtualMachine",
            "marvin.cloudstackAPI.addNiciraNvpDevice",
            "marvin.cloudstackAPI.addPaloAltoFirewall",
            "marvin.cloudstackAPI.addRegion",
            "marvin.cloudstackAPI.addResourceDetail",
            "marvin.cloudstackAPI.addS3",
            "marvin.cloudstackAPI.addSecondaryStorage",
            "marvin.cloudstackAPI.addStratosphereSsp",
            "marvin.cloudstackAPI.addSwift",
            "marvin.cloudstackAPI.addTrafficMonitor",
            "marvin.cloudstackAPI.addTrafficType",
            "marvin.cloudstackAPI.addUcsManager",
            "marvin.cloudstackAPI.addVpnUser",
            "marvin.cloudstackAPI.archiveAlerts",
            "marvin.cloudstackAPI.archiveEvents",
            "marvin.cloudstackAPI.assignCertToLoadBalancer",
            "marvin.cloudstackAPI.assignToGlobalLoadBalancerRule",
            "marvin.cloudstackAPI.assignToLoadBalancerRule",
            "marvin.cloudstackAPI.assignVirtualMachine",
            "marvin.cloudstackAPI.associateIpAddress",
            "marvin.cloudstackAPI.associateUcsProfileToBlade",
            "marvin.cloudstackAPI.attachIso",
            "marvin.cloudstackAPI.attachVolume",
            "marvin.cloudstackAPI.authorizeSecurityGroupEgress",
            "marvin.cloudstackAPI.authorizeSecurityGroupIngress",
            "marvin.cloudstackAPI.baseCmd",
            "marvin.cloudstackAPI.baseResponse",
            "marvin.cloudstackAPI.cancelHostMaintenance",
            "marvin.cloudstackAPI.cancelStorageMaintenance",
            "marvin.cloudstackAPI.changeServiceForRouter",
            "marvin.cloudstackAPI.changeServiceForSystemVm",
            "marvin.cloudstackAPI.changeServiceForVirtualMachine",
            "marvin.cloudstackAPI.cleanVMReservations",
            "marvin.cloudstackAPI.cloudstackAPIClient",
            "marvin.cloudstackAPI.configureInternalLoadBalancerElement",
            "marvin.cloudstackAPI.configureNetscalerLoadBalancer",
            "marvin.cloudstackAPI.configureOvsElement",
            "marvin.cloudstackAPI.configurePaloAltoFirewall",
            "marvin.cloudstackAPI.configureVirtualRouterElement",
            "marvin.cloudstackAPI.copyIso",
            "marvin.cloudstackAPI.copyTemplate",
            "marvin.cloudstackAPI.createAccount",
            "marvin.cloudstackAPI.createAffinityGroup",
            "marvin.cloudstackAPI.createAutoScalePolicy",
            "marvin.cloudstackAPI.createAutoScaleVmGroup",
            "marvin.cloudstackAPI.createAutoScaleVmProfile",
            "marvin.cloudstackAPI.createCondition",
            "marvin.cloudstackAPI.createCounter",
            "marvin.cloudstackAPI.createDiskOffering",
            "marvin.cloudstackAPI.createDomain",
            "marvin.cloudstackAPI.createEgressFirewallRule",
            "marvin.cloudstackAPI.createFirewallRule",
            "marvin.cloudstackAPI.createGlobalLoadBalancerRule",
            "marvin.cloudstackAPI.createInstanceGroup",
            "marvin.cloudstackAPI.createInternalLoadBalancerElement",
            "marvin.cloudstackAPI.createIpForwardingRule",
            "marvin.cloudstackAPI.createLBHealthCheckPolicy",
            "marvin.cloudstackAPI.createLBStickinessPolicy",
            "marvin.cloudstackAPI.createLoadBalancer",
            "marvin.cloudstackAPI.createLoadBalancerRule",
            "marvin.cloudstackAPI.createNetwork",
            "marvin.cloudstackAPI.createNetworkACL",
            "marvin.cloudstackAPI.createNetworkACLList",
            "marvin.cloudstackAPI.createNetworkOffering",
            "marvin.cloudstackAPI.createPhysicalNetwork",
            "marvin.cloudstackAPI.createPod",
            "marvin.cloudstackAPI.createPortForwardingRule",
            "marvin.cloudstackAPI.createPortableIpRange",
            "marvin.cloudstackAPI.createPrivateGateway",
            "marvin.cloudstackAPI.createProject",
            "marvin.cloudstackAPI.createRemoteAccessVpn",
            "marvin.cloudstackAPI.createSSHKeyPair",
            "marvin.cloudstackAPI.createSecondaryStagingStore",
            "marvin.cloudstackAPI.createSecurityGroup",
            "marvin.cloudstackAPI.createServiceOffering",
            "marvin.cloudstackAPI.createSnapshot",
            "marvin.cloudstackAPI.createSnapshotPolicy",
            "marvin.cloudstackAPI.createStaticRoute",
            "marvin.cloudstackAPI.createStorageNetworkIpRange",
            "marvin.cloudstackAPI.createStoragePool",
            "marvin.cloudstackAPI.createTags",
            "marvin.cloudstackAPI.createTemplate",
            "marvin.cloudstackAPI.createUser",
            "marvin.cloudstackAPI.createVMSnapshot",
            "marvin.cloudstackAPI.createVPC",
            "marvin.cloudstackAPI.createVPCOffering",
            "marvin.cloudstackAPI.createVirtualRouterElement",
            "marvin.cloudstackAPI.createVlanIpRange",
            "marvin.cloudstackAPI.createVolume",
            "marvin.cloudstackAPI.createVpnConnection",
            "marvin.cloudstackAPI.createVpnCustomerGateway",
            "marvin.cloudstackAPI.createVpnGateway",
            "marvin.cloudstackAPI.createZone",
            "marvin.cloudstackAPI.dedicateCluster",
            "marvin.cloudstackAPI.dedicateGuestVlanRange",
            "marvin.cloudstackAPI.dedicateHost",
            "marvin.cloudstackAPI.dedicatePod",
            "marvin.cloudstackAPI.dedicatePublicIpRange",
            "marvin.cloudstackAPI.dedicateZone",
            "marvin.cloudstackAPI.deleteAccount",
            "marvin.cloudstackAPI.deleteAccountFromProject",
            "marvin.cloudstackAPI.deleteAffinityGroup",
            "marvin.cloudstackAPI.deleteAlerts",
            "marvin.cloudstackAPI.deleteAutoScalePolicy",
            "marvin.cloudstackAPI.deleteAutoScaleVmGroup",
            "marvin.cloudstackAPI.deleteAutoScaleVmProfile",
            "marvin.cloudstackAPI.deleteBigSwitchVnsDevice",
            "marvin.cloudstackAPI.deleteCluster",
            "marvin.cloudstackAPI.deleteCondition",
            "marvin.cloudstackAPI.deleteCounter",
            "marvin.cloudstackAPI.deleteDiskOffering",
            "marvin.cloudstackAPI.deleteDomain",
            "marvin.cloudstackAPI.deleteEgressFirewallRule",
            "marvin.cloudstackAPI.deleteEvents",
            "marvin.cloudstackAPI.deleteFirewallRule",
            "marvin.cloudstackAPI.deleteGlobalLoadBalancerRule",
            "marvin.cloudstackAPI.deleteHost",
            "marvin.cloudstackAPI.deleteImageStore",
            "marvin.cloudstackAPI.deleteInstanceGroup",
            "marvin.cloudstackAPI.deleteIpForwardingRule",
            "marvin.cloudstackAPI.deleteIso",
            "marvin.cloudstackAPI.deleteLBHealthCheckPolicy",
            "marvin.cloudstackAPI.deleteLBStickinessPolicy",
            "marvin.cloudstackAPI.deleteLdapConfiguration",
            "marvin.cloudstackAPI.deleteLoadBalancer",
            "marvin.cloudstackAPI.deleteLoadBalancerRule",
            "marvin.cloudstackAPI.deleteNetscalerLoadBalancer",
            "marvin.cloudstackAPI.deleteNetwork",
            "marvin.cloudstackAPI.deleteNetworkACL",
            "marvin.cloudstackAPI.deleteNetworkACLList",
            "marvin.cloudstackAPI.deleteNetworkDevice",
            "marvin.cloudstackAPI.deleteNetworkOffering",
            "marvin.cloudstackAPI.deleteNetworkServiceProvider",
            "marvin.cloudstackAPI.deleteNiciraNvpDevice",
            "marvin.cloudstackAPI.deletePaloAltoFirewall",
            "marvin.cloudstackAPI.deletePhysicalNetwork",
            "marvin.cloudstackAPI.deletePod",
            "marvin.cloudstackAPI.deletePortForwardingRule",
            "marvin.cloudstackAPI.deletePortableIpRange",
            "marvin.cloudstackAPI.deletePrivateGateway",
            "marvin.cloudstackAPI.deleteProject",
            "marvin.cloudstackAPI.deleteProjectInvitation",
            "marvin.cloudstackAPI.deleteRemoteAccessVpn",
            "marvin.cloudstackAPI.deleteSSHKeyPair",
            "marvin.cloudstackAPI.deleteSecondaryStagingStore",
            "marvin.cloudstackAPI.deleteSecurityGroup",
            "marvin.cloudstackAPI.deleteServiceOffering",
            "marvin.cloudstackAPI.deleteSnapshot",
            "marvin.cloudstackAPI.deleteSnapshotPolicies",
            "marvin.cloudstackAPI.deleteSslCert",
            "marvin.cloudstackAPI.deleteStaticRoute",
            "marvin.cloudstackAPI.deleteStorageNetworkIpRange",
            "marvin.cloudstackAPI.deleteStoragePool",
            "marvin.cloudstackAPI.deleteTags",
            "marvin.cloudstackAPI.deleteTemplate",
            "marvin.cloudstackAPI.deleteTrafficMonitor",
            "marvin.cloudstackAPI.deleteTrafficType",
            "marvin.cloudstackAPI.deleteUser",
            "marvin.cloudstackAPI.deleteVMSnapshot",
            "marvin.cloudstackAPI.deleteVPC",
            "marvin.cloudstackAPI.deleteVPCOffering",
            "marvin.cloudstackAPI.deleteVlanIpRange",
            "marvin.cloudstackAPI.deleteVolume",
            "marvin.cloudstackAPI.deleteVpnConnection",
            "marvin.cloudstackAPI.deleteVpnCustomerGateway",
            "marvin.cloudstackAPI.deleteVpnGateway",
            "marvin.cloudstackAPI.deleteZone",
            "marvin.cloudstackAPI.deployVirtualMachine",
            "marvin.cloudstackAPI.destroyRouter",
            "marvin.cloudstackAPI.destroySystemVm",
            "marvin.cloudstackAPI.destroyVirtualMachine",
            "marvin.cloudstackAPI.detachIso",
            "marvin.cloudstackAPI.detachVolume",
            "marvin.cloudstackAPI.disableAccount",
            "marvin.cloudstackAPI.disableAutoScaleVmGroup",
            "marvin.cloudstackAPI.disableStaticNat",
            "marvin.cloudstackAPI.disableUser",
            "marvin.cloudstackAPI.disassociateIpAddress",
            "marvin.cloudstackAPI.enableAccount",
            "marvin.cloudstackAPI.enableAutoScaleVmGroup",
            "marvin.cloudstackAPI.enableStaticNat",
            "marvin.cloudstackAPI.enableStorageMaintenance",
            "marvin.cloudstackAPI.enableUser",
            "marvin.cloudstackAPI.expungeVirtualMachine",
            "marvin.cloudstackAPI.extractIso",
            "marvin.cloudstackAPI.extractTemplate",
            "marvin.cloudstackAPI.extractVolume",
            "marvin.cloudstackAPI.findHostsForMigration",
            "marvin.cloudstackAPI.findStoragePoolsForMigration",
            "marvin.cloudstackAPI.generateAlert",
            "marvin.cloudstackAPI.generateUsageRecords",
            "marvin.cloudstackAPI.getApiLimit",
            "marvin.cloudstackAPI.getCloudIdentifier",
            "marvin.cloudstackAPI.getUser",
            "marvin.cloudstackAPI.getVMPassword",
            "marvin.cloudstackAPI.getVirtualMachineUserData",
            "marvin.cloudstackAPI.importLdapUsers",
            "marvin.cloudstackAPI.ldapCreateAccount",
            "marvin.cloudstackAPI.listAccounts",
            "marvin.cloudstackAPI.listAffinityGroupTypes",
            "marvin.cloudstackAPI.listAffinityGroups",
            "marvin.cloudstackAPI.listAlerts",
            "marvin.cloudstackAPI.listApis",
            "marvin.cloudstackAPI.listAsyncJobs",
            "marvin.cloudstackAPI.listAutoScalePolicies",
            "marvin.cloudstackAPI.listAutoScaleVmGroups",
            "marvin.cloudstackAPI.listAutoScaleVmProfiles",
            "marvin.cloudstackAPI.listBaremetalDhcp",
            "marvin.cloudstackAPI.listBaremetalPxeServers",
            "marvin.cloudstackAPI.listBigSwitchVnsDevices",
            "marvin.cloudstackAPI.listCapabilities",
            "marvin.cloudstackAPI.listCapacity",
            "marvin.cloudstackAPI.listClusters",
            "marvin.cloudstackAPI.listConditions",
            "marvin.cloudstackAPI.listConfigurations",
            "marvin.cloudstackAPI.listCounters",
            "marvin.cloudstackAPI.listDedicatedClusters",
            "marvin.cloudstackAPI.listDedicatedGuestVlanRanges",
            "marvin.cloudstackAPI.listDedicatedHosts",
            "marvin.cloudstackAPI.listDedicatedPods",
            "marvin.cloudstackAPI.listDedicatedZones",
            "marvin.cloudstackAPI.listDeploymentPlanners",
            "marvin.cloudstackAPI.listDiskOfferings",
            "marvin.cloudstackAPI.listDomainChildren",
            "marvin.cloudstackAPI.listDomains",
            "marvin.cloudstackAPI.listEgressFirewallRules",
            "marvin.cloudstackAPI.listEventTypes",
            "marvin.cloudstackAPI.listEvents",
            "marvin.cloudstackAPI.listFirewallRules",
            "marvin.cloudstackAPI.listGlobalLoadBalancerRules",
            "marvin.cloudstackAPI.listGuestOsMapping",
            "marvin.cloudstackAPI.listHosts",
            "marvin.cloudstackAPI.listHypervisorCapabilities",
            "marvin.cloudstackAPI.listHypervisors",
            "marvin.cloudstackAPI.listImageStores",
            "marvin.cloudstackAPI.listInstanceGroups",
            "marvin.cloudstackAPI.listInternalLoadBalancerElements",
            "marvin.cloudstackAPI.listInternalLoadBalancerVMs",
            "marvin.cloudstackAPI.listIpForwardingRules",
            "marvin.cloudstackAPI.listIsoPermissions",
            "marvin.cloudstackAPI.listIsos",
            "marvin.cloudstackAPI.listLBHealthCheckPolicies",
            "marvin.cloudstackAPI.listLBStickinessPolicies",
            "marvin.cloudstackAPI.listLdapConfigurations",
            "marvin.cloudstackAPI.listLdapUsers",
            "marvin.cloudstackAPI.listLoadBalancerRuleInstances",
            "marvin.cloudstackAPI.listLoadBalancerRules",
            "marvin.cloudstackAPI.listLoadBalancers",
            "marvin.cloudstackAPI.listNetscalerLoadBalancerNetworks",
            "marvin.cloudstackAPI.listNetscalerLoadBalancers",
            "marvin.cloudstackAPI.listNetworkACLLists",
            "marvin.cloudstackAPI.listNetworkACLs",
            "marvin.cloudstackAPI.listNetworkDevice",
            "marvin.cloudstackAPI.listNetworkIsolationMethods",
            "marvin.cloudstackAPI.listNetworkOfferings",
            "marvin.cloudstackAPI.listNetworkServiceProviders",
            "marvin.cloudstackAPI.listNetworks",
            "marvin.cloudstackAPI.listNiciraNvpDeviceNetworks",
            "marvin.cloudstackAPI.listNiciraNvpDevices",
            "marvin.cloudstackAPI.listNics",
            "marvin.cloudstackAPI.listOsCategories",
            "marvin.cloudstackAPI.listOsTypes",
            "marvin.cloudstackAPI.listOvsElements",
            "marvin.cloudstackAPI.listPaloAltoFirewallNetworks",
            "marvin.cloudstackAPI.listPaloAltoFirewalls",
            "marvin.cloudstackAPI.listPhysicalNetworks",
            "marvin.cloudstackAPI.listPods",
            "marvin.cloudstackAPI.listPortForwardingRules",
            "marvin.cloudstackAPI.listPortableIpRanges",
            "marvin.cloudstackAPI.listPrivateGateways",
            "marvin.cloudstackAPI.listProjectAccounts",
            "marvin.cloudstackAPI.listProjectInvitations",
            "marvin.cloudstackAPI.listProjects",
            "marvin.cloudstackAPI.listPublicIpAddresses",
            "marvin.cloudstackAPI.listRegions",
            "marvin.cloudstackAPI.listRemoteAccessVpns",
            "marvin.cloudstackAPI.listResourceDetails",
            "marvin.cloudstackAPI.listResourceLimits",
            "marvin.cloudstackAPI.listRouters",
            "marvin.cloudstackAPI.listS3s",
            "marvin.cloudstackAPI.listSSHKeyPairs",
            "marvin.cloudstackAPI.listSecondaryStagingStores",
            "marvin.cloudstackAPI.listSecurityGroups",
            "marvin.cloudstackAPI.listServiceOfferings",
            "marvin.cloudstackAPI.listSnapshotPolicies",
            "marvin.cloudstackAPI.listSnapshots",
            "marvin.cloudstackAPI.listSslCerts",
            "marvin.cloudstackAPI.listStaticRoutes",
            "marvin.cloudstackAPI.listStorageNetworkIpRange",
            "marvin.cloudstackAPI.listStoragePools",
            "marvin.cloudstackAPI.listStorageProviders",
            "marvin.cloudstackAPI.listSupportedNetworkServices",
            "marvin.cloudstackAPI.listSwifts",
            "marvin.cloudstackAPI.listSystemVms",
            "marvin.cloudstackAPI.listTags",
            "marvin.cloudstackAPI.listTemplatePermissions",
            "marvin.cloudstackAPI.listTemplates",
            "marvin.cloudstackAPI.listTrafficMonitors",
            "marvin.cloudstackAPI.listTrafficTypeImplementors",
            "marvin.cloudstackAPI.listTrafficTypes",
            "marvin.cloudstackAPI.listUcsBlades",
            "marvin.cloudstackAPI.listUcsManagers",
            "marvin.cloudstackAPI.listUcsProfiles",
            "marvin.cloudstackAPI.listUsageRecords",
            "marvin.cloudstackAPI.listUsageTypes",
            "marvin.cloudstackAPI.listUsers",
            "marvin.cloudstackAPI.listVMSnapshot",
            "marvin.cloudstackAPI.listVPCOfferings",
            "marvin.cloudstackAPI.listVPCs",
            "marvin.cloudstackAPI.listVirtualMachines",
            "marvin.cloudstackAPI.listVirtualRouterElements",
            "marvin.cloudstackAPI.listVlanIpRanges",
            "marvin.cloudstackAPI.listVolumes",
            "marvin.cloudstackAPI.listVpnConnections",
            "marvin.cloudstackAPI.listVpnCustomerGateways",
            "marvin.cloudstackAPI.listVpnGateways",
            "marvin.cloudstackAPI.listVpnUsers",
            "marvin.cloudstackAPI.listZones",
            "marvin.cloudstackAPI.lockAccount",
            "marvin.cloudstackAPI.lockUser",
            "marvin.cloudstackAPI.login",
            "marvin.cloudstackAPI.logout",
            "marvin.cloudstackAPI.markDefaultZoneForAccount",
            "marvin.cloudstackAPI.migrateSystemVm",
            "marvin.cloudstackAPI.migrateVirtualMachine",
            "marvin.cloudstackAPI.migrateVirtualMachineWithVolume",
            "marvin.cloudstackAPI.migrateVolume",
            "marvin.cloudstackAPI.prepareHostForMaintenance",
            "marvin.cloudstackAPI.prepareTemplate",
            "marvin.cloudstackAPI.queryAsyncJobResult",
            "marvin.cloudstackAPI.rebootRouter",
            "marvin.cloudstackAPI.rebootSystemVm",
            "marvin.cloudstackAPI.rebootVirtualMachine",
            "marvin.cloudstackAPI.reconnectHost",
            "marvin.cloudstackAPI.recoverVirtualMachine",
            "marvin.cloudstackAPI.registerIso",
            "marvin.cloudstackAPI.registerSSHKeyPair",
            "marvin.cloudstackAPI.registerTemplate",
            "marvin.cloudstackAPI.registerUserKeys",
            "marvin.cloudstackAPI.releaseDedicatedCluster",
            "marvin.cloudstackAPI.releaseDedicatedGuestVlanRange",
            "marvin.cloudstackAPI.releaseDedicatedHost",
            "marvin.cloudstackAPI.releaseDedicatedPod",
            "marvin.cloudstackAPI.releaseDedicatedZone",
            "marvin.cloudstackAPI.releaseHostReservation",
            "marvin.cloudstackAPI.releasePublicIpRange",
            "marvin.cloudstackAPI.removeCertFromLoadBalancer",
            "marvin.cloudstackAPI.removeFromGlobalLoadBalancerRule",
            "marvin.cloudstackAPI.removeFromLoadBalancerRule",
            "marvin.cloudstackAPI.removeGuestOs",
            "marvin.cloudstackAPI.removeGuestOsMapping",
            "marvin.cloudstackAPI.removeIpFromNic",
            "marvin.cloudstackAPI.removeNicFromVirtualMachine",
            "marvin.cloudstackAPI.removeRegion",
            "marvin.cloudstackAPI.removeResourceDetail",
            "marvin.cloudstackAPI.removeVpnUser",
            "marvin.cloudstackAPI.replaceNetworkACLList",
            "marvin.cloudstackAPI.resetApiLimit",
            "marvin.cloudstackAPI.resetPasswordForVirtualMachine",
            "marvin.cloudstackAPI.resetSSHKeyForVirtualMachine",
            "marvin.cloudstackAPI.resetVpnConnection",
            "marvin.cloudstackAPI.resizeVolume",
            "marvin.cloudstackAPI.restartNetwork",
            "marvin.cloudstackAPI.restartVPC",
            "marvin.cloudstackAPI.restoreVirtualMachine",
            "marvin.cloudstackAPI.revertSnapshot",
            "marvin.cloudstackAPI.revertToVMSnapshot",
            "marvin.cloudstackAPI.revokeSecurityGroupEgress",
            "marvin.cloudstackAPI.revokeSecurityGroupIngress",
            "marvin.cloudstackAPI.scaleSystemVm",
            "marvin.cloudstackAPI.scaleVirtualMachine",
            "marvin.cloudstackAPI.startInternalLoadBalancerVM",
            "marvin.cloudstackAPI.startRouter",
            "marvin.cloudstackAPI.startSystemVm",
            "marvin.cloudstackAPI.startVirtualMachine",
            "marvin.cloudstackAPI.stopInternalLoadBalancerVM",
            "marvin.cloudstackAPI.stopRouter",
            "marvin.cloudstackAPI.stopSystemVm",
            "marvin.cloudstackAPI.stopVirtualMachine",
            "marvin.cloudstackAPI.suspendProject",
            "marvin.cloudstackAPI.updateAccount",
            "marvin.cloudstackAPI.updateAutoScalePolicy",
            "marvin.cloudstackAPI.updateAutoScaleVmGroup",
            "marvin.cloudstackAPI.updateAutoScaleVmProfile",
            "marvin.cloudstackAPI.updateCloudToUseObjectStore",
            "marvin.cloudstackAPI.updateCluster",
            "marvin.cloudstackAPI.updateConfiguration",
            "marvin.cloudstackAPI.updateDefaultNicForVirtualMachine",
            "marvin.cloudstackAPI.updateDiskOffering",
            "marvin.cloudstackAPI.updateDomain",
            "marvin.cloudstackAPI.updateEgressFirewallRule",
            "marvin.cloudstackAPI.updateFirewallRule",
            "marvin.cloudstackAPI.updateGlobalLoadBalancerRule",
            "marvin.cloudstackAPI.updateGuestOs",
            "marvin.cloudstackAPI.updateGuestOsMapping",
            "marvin.cloudstackAPI.updateHost",
            "marvin.cloudstackAPI.updateHostPassword",
            "marvin.cloudstackAPI.updateHypervisorCapabilities",
            "marvin.cloudstackAPI.updateInstanceGroup",
            "marvin.cloudstackAPI.updateIpAddress",
            "marvin.cloudstackAPI.updateIso",
            "marvin.cloudstackAPI.updateIsoPermissions",
            "marvin.cloudstackAPI.updateLBHealthCheckPolicy",
            "marvin.cloudstackAPI.updateLBStickinessPolicy",
            "marvin.cloudstackAPI.updateLoadBalancer",
            "marvin.cloudstackAPI.updateLoadBalancerRule",
            "marvin.cloudstackAPI.updateNetwork",
            "marvin.cloudstackAPI.updateNetworkACLItem",
            "marvin.cloudstackAPI.updateNetworkACLList",
            "marvin.cloudstackAPI.updateNetworkOffering",
            "marvin.cloudstackAPI.updateNetworkServiceProvider",
            "marvin.cloudstackAPI.updatePhysicalNetwork",
            "marvin.cloudstackAPI.updatePod",
            "marvin.cloudstackAPI.updatePortForwardingRule",
            "marvin.cloudstackAPI.updateProject",
            "marvin.cloudstackAPI.updateProjectInvitation",
            "marvin.cloudstackAPI.updateRegion",
            "marvin.cloudstackAPI.updateRemoteAccessVpn",
            "marvin.cloudstackAPI.updateResourceCount",
            "marvin.cloudstackAPI.updateResourceLimit",
            "marvin.cloudstackAPI.updateServiceOffering",
            "marvin.cloudstackAPI.updateStorageNetworkIpRange",
            "marvin.cloudstackAPI.updateStoragePool",
            "marvin.cloudstackAPI.updateTemplate",
            "marvin.cloudstackAPI.updateTemplatePermissions",
            "marvin.cloudstackAPI.updateTrafficType",
            "marvin.cloudstackAPI.updateUser",
            "marvin.cloudstackAPI.updateVMAffinityGroup",
            "marvin.cloudstackAPI.updateVPC",
            "marvin.cloudstackAPI.updateVPCOffering",
            "marvin.cloudstackAPI.updateVirtualMachine",
            "marvin.cloudstackAPI.updateVolume",
            "marvin.cloudstackAPI.updateVpnConnection",
            "marvin.cloudstackAPI.updateVpnCustomerGateway",
            "marvin.cloudstackAPI.updateVpnGateway",
            "marvin.cloudstackAPI.updateZone",
            "marvin.cloudstackAPI.upgradeRouterTemplate",
            "marvin.cloudstackAPI.uploadCustomCertificate",
            "marvin.cloudstackAPI.uploadSslCert",
            "marvin.cloudstackAPI.uploadVolume",
            "marvin.cloudstackConnection",
            "marvin.cloudstackException",
            "marvin.cloudstackTestCase",
            "marvin.cloudstackTestClient",
            "marvin.codegenerator",
            "marvin.codes",
            "marvin.configGenerator",
            "marvin.dbConnection",
            "marvin.deployAndRun",
            "marvin.deployDataCenter",
            "marvin.integration",
            "marvin.integration.lib",
            "marvin.integration.lib.base",
            "marvin.integration.lib.common",
            "marvin.integration.lib.utils",
            "marvin.jsonHelper",
            "marvin.marvinInit",
            "marvin.marvinLog",
            "marvin.marvinPlugin",
            "marvin.sandbox",
            "marvin.sandbox.advanced",
            "marvin.sandbox.advanced.advanced_env",
            "marvin.sandbox.advancedsg",
            "marvin.sandbox.advancedsg.advancedsg_env",
            "marvin.sandbox.basic",
            "marvin.sandbox.basic.basic_env",
            "marvin.sandbox.testSetupSuccess",
            "marvin.settings",
            "marvin.sshClient",
            "marvin.tcExecuteEngine",
            "marvin.testSetupSuccess"
        ],
        "version": "4.4.0"
    },
    "cloudstackclient": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloudstorage": {
        "cmdline": [],
        "modules": [
            "cloudstorage",
            "cloudstorage.base",
            "cloudstorage.drivers",
            "cloudstorage.drivers.amazon",
            "cloudstorage.drivers.google",
            "cloudstorage.drivers.local",
            "cloudstorage.drivers.rackspace",
            "cloudstorage.exceptions",
            "cloudstorage.helpers",
            "cloudstorage.messages",
            "cloudstorage.utils"
        ],
        "version": "0.2"
    },
    "cloudtask": {
        "cmdline": [],
        "modules": [
            "cloudtask",
            "cloudtask._hub",
            "cloudtask.executor",
            "cloudtask.reporter",
            "cloudtask.session",
            "cloudtask.ssh",
            "cloudtask.task",
            "cloudtask.taskconf",
            "package",
            "package.bar",
            "package.foo"
        ],
        "version": "1.0"
    },
    "cloudtb": {
        "cmdline": [],
        "modules": [
            "cloudtb",
            "cloudtb.bokeh",
            "cloudtb.builtin",
            "cloudtb.collections",
            "cloudtb.dbe",
            "cloudtb.dictionary",
            "cloudtb.os",
            "cloudtb.pandas",
            "cloudtb.platform",
            "cloudtb.plot",
            "cloudtb.pprint",
            "cloudtb.re",
            "cloudtb.sys"
        ],
        "version": "0.2.2"
    },
    "cloudtee": {
        "cmdline": [],
        "modules": [
            "cloudtee",
            "cloudtee.cli",
            "cloudtee.core"
        ],
        "version": "0.0.6"
    },
    "cloudtemplatemanager": {
        "cmdline": [],
        "modules": [
            "cloudtemplatemanager",
            "cloudtemplatemanager.base",
            "cloudtemplatemanager.provision",
            "cloudtemplatemanager.stack"
        ],
        "version": "1.0.0"
    },
    "cloudwatch-fluent-metrics": {
        "cmdline": [],
        "modules": [
            "fluentmetrics"
        ],
        "version": "0.1.7"
    },
    "cloudwatch-logs-environment": {
        "cmdline": [],
        "modules": [
            "cloudwatch_logs_environment",
            "cloudwatch_logs_environment.confgen",
            "cloudwatch_logs_environment.runner",
            "cloudwatch_logs_environment.test",
            "cloudwatch_logs_environment.test.test_confgen",
            "cloudwatch_logs_environment.version"
        ],
        "version": "1.0.0"
    },
    "cloudwatch-robot": {
        "cmdline": [
            "cloudwatch-robot"
        ],
        "modules": [],
        "version": "0.0.1"
    },
    "cloudwatch-to-graphite": {
        "cmdline": [],
        "modules": [
            "leadbutt",
            "plumbum"
        ],
        "version": "0.9.2"
    },
    "cloudwatchmon": {
        "cmdline": [],
        "modules": [
            "cloudwatchmon",
            "cloudwatchmon.cli",
            "cloudwatchmon.cli.get_instance_stats",
            "cloudwatchmon.cli.put_instance_stats",
            "cloudwatchmon.cloud_watch_client"
        ],
        "version": "2.0.6"
    },
    "cloudxns-api-sdk-python": {
        "cmdline": [],
        "modules": [
            "cloudxns",
            "cloudxns.api"
        ],
        "version": "1.0.4"
    },
    "cloudy": {
        "cmdline": [],
        "modules": [
            "cloudy",
            "cloudy.cloudy"
        ],
        "version": "0.1.0"
    },
    "cloudy-helpers": {
        "cmdline": [],
        "modules": [
            "cloudy_helpers",
            "cloudy_helpers.helpers",
            "cloudy_helpers.utils"
        ],
        "version": "0.0.7"
    },
    "cloudy-release-client": {
        "cmdline": [],
        "modules": [
            "cloudyclient",
            "cloudyclient.api",
            "cloudyclient.api.base",
            "cloudyclient.api.script",
            "cloudyclient.api.shell",
            "cloudyclient.api.virtualenv",
            "cloudyclient.checkout",
            "cloudyclient.cli",
            "cloudyclient.cli.base",
            "cloudyclient.cli.deploy",
            "cloudyclient.cli.poll",
            "cloudyclient.client",
            "cloudyclient.conf",
            "cloudyclient.deploy",
            "cloudyclient.exceptions",
            "cloudyclient.log",
            "cloudyclient.state",
            "cloudyclient.tests",
            "cloudyclient.tests.test_api",
            "cloudyclient.tests.test_conf",
            "cloudyclient.tests.test_deploy",
            "cloudyclient.tests.utils",
            "cloudyclient.utils"
        ],
        "version": "0.10.0"
    },
    "cloudydict": {
        "cmdline": [],
        "modules": [
            "cloudydict",
            "cloudydict.cloudfiles",
            "cloudydict.common",
            "cloudydict.django_storage",
            "cloudydict.s3",
            "cloudydict/__init__",
            "cloudydict/cloudfiles",
            "cloudydict/common",
            "cloudydict/django_storage",
            "cloudydict/s3"
        ],
        "version": "0.0.19"
    },
    "cloudyqueue": {
        "cmdline": [],
        "modules": [
            "cloudyqueue/__init__",
            "cloudyqueue/queue"
        ],
        "version": "0.0.0"
    },
    "cloudyvents": {
        "cmdline": [],
        "modules": [
            "cloudyvents",
            "cloudyvents.cyvents",
            "cloudyvents.tests",
            "cloudyvents.tests.test_cyvents"
        ],
        "version": "0.1"
    },
    "clover": {
        "cmdline": [],
        "modules": [
            "clover",
            "clover.builder",
            "clover.closure",
            "clover.closure.client",
            "clover.closure.compiler",
            "clover.closure.compiler_test",
            "clover.closure.inputmanifest",
            "clover.closure.jpypeclient",
            "clover.closure.messageextractor",
            "clover.closure.outputmanifest",
            "clover.closure.soycompiler",
            "clover.command",
            "clover.commands",
            "clover.commands.build",
            "clover.commands.convertpo",
            "clover.commands.externs",
            "clover.commands.messages",
            "clover.commands.serve",
            "clover.commands.test",
            "clover.config",
            "clover.config.baseconfig",
            "clover.config.cloverconfig",
            "clover.config.dictconfig",
            "clover.config.markedloader",
            "clover.config.multiconfig",
            "clover.config.options",
            "clover.config.yamlconfig",
            "clover.main",
            "clover.server",
            "clover.server.handlers",
            "clover.server.handlers.base",
            "clover.server.handlers.compile",
            "clover.server.handlers.deps",
            "clover.server.handlers.externs",
            "clover.server.handlers.index",
            "clover.server.handlers.input",
            "clover.server.handlers.library",
            "clover.server.handlers.listsources",
            "clover.server.handlers.listtests",
            "clover.server.handlers.precompile",
            "clover.server.handlers.sourcemap",
            "clover.server.handlers.test",
            "clover.server.handlers.testcommand",
            "clover.server.handlers.testrunner",
            "clover.server.main",
            "clover.server.reloader",
            "clover.service",
            "clover.solver",
            "clover.sourcefile",
            "clover.sourcefiles",
            "clover.sourcefiles.javascript",
            "clover.sourcefiles.scan",
            "clover.sourcefiles.soy",
            "tests",
            "tests.chrome_extension",
            "tests.full",
            "tests.seleniumtestcase",
            "tests.server",
            "tests.server.test",
            "tests.simple",
            "tests.simple.test",
            "tests.translations",
            "tests.translations.test"
        ],
        "version": "0.2.2"
    },
    "cloverdb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloverhealth-api-public": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloverhealth-config": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloverhealth-edi-tools": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloverhealth-lib-bitemporal": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloverhealth-lib-data-util": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloverhealth-lib-member": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloverhealth-lib-service": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloverhealth-lib-test": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloverhealth-lib-tigershark": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloverhealth-lib-util": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloverhealth-pyx12": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cloverpy": {
        "cmdline": [],
        "modules": [
            "cloverpy",
            "cloverpy.clover"
        ],
        "version": "0.1.1"
    },
    "clowder": {
        "cmdline": [],
        "modules": [
            "clowder"
        ],
        "version": "0.1.2"
    },
    "clowder-git": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clowncar": {
        "cmdline": [],
        "modules": [
            "clowncar",
            "clowncar.backends",
            "clowncar.exc",
            "clowncar.server",
            "clowncar.version"
        ],
        "version": "0.1.2"
    },
    "clplot": {
        "cmdline": [],
        "modules": [
            "clplot",
            "clplot.main"
        ],
        "version": "0.2.1a0"
    },
    "clr": {
        "cmdline": [],
        "modules": [
            "clr",
            "clr.style_builder"
        ],
        "version": "1.0.3"
    },
    "clrmagic": {
        "cmdline": [],
        "modules": [
            "clrmagic"
        ],
        "version": "0.0.1a2"
    },
    "clrs": {
        "cmdline": [],
        "modules": [
            "sorting",
            "sorting.bubble_sort",
            "sorting.bucket_sort",
            "sorting.counting_sort",
            "sorting.heap_sort",
            "sorting.insertion_sort",
            "sorting.merge_sort",
            "sorting.quick_sort",
            "sorting.radix_sort",
            "sorting.run_sample_input",
            "sorting.selection_sort",
            "sorting.test",
            "tree",
            "tree.binary_tree"
        ],
        "version": "0.0.1"
    },
    "clsearch": {
        "cmdline": [
            "clsearch"
        ],
        "modules": [
            "clsearch",
            "clsearch.base",
            "clsearch.index",
            "clsearch.search",
            "clsearch.test",
            "clsearch.test.test_base",
            "clsearch.test.test_index",
            "clsearch.test.test_search"
        ],
        "version": "0.1a1"
    },
    "clsflib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clstr": {
        "cmdline": [],
        "modules": [
            "clstr"
        ],
        "version": "0.1.0"
    },
    "clt": {
        "cmdline": [
            "clt"
        ],
        "modules": [],
        "version": "1.1"
    },
    "cltabb": {
        "cmdline": [],
        "modules": [
            "cltabb"
        ],
        "version": "1.0.0"
    },
    "cltk": {
        "cmdline": [],
        "modules": [
            "cltk",
            "cltk.corpus",
            "cltk.corpus.bengali",
            "cltk.corpus.bengali.alphabet",
            "cltk.corpus.bengali.corpora",
            "cltk.corpus.chinese",
            "cltk.corpus.chinese.corpora",
            "cltk.corpus.classical_hindi",
            "cltk.corpus.classical_hindi.corpora",
            "cltk.corpus.coptic",
            "cltk.corpus.coptic.corpora",
            "cltk.corpus.egyptian",
            "cltk.corpus.egyptian.transliterate_mdc",
            "cltk.corpus.greek",
            "cltk.corpus.greek.alphabet",
            "cltk.corpus.greek.beta_to_unicode",
            "cltk.corpus.greek.corpora",
            "cltk.corpus.greek.tlg",
            "cltk.corpus.greek.tlg.author_date",
            "cltk.corpus.greek.tlg.author_epithet",
            "cltk.corpus.greek.tlg.author_female",
            "cltk.corpus.greek.tlg.author_geo",
            "cltk.corpus.greek.tlg.id_author",
            "cltk.corpus.greek.tlg.index_lists",
            "cltk.corpus.greek.tlg.parse_tlg_indices",
            "cltk.corpus.greek.tlg.work_numbers",
            "cltk.corpus.greek.tlg_index",
            "cltk.corpus.greek.tlgu",
            "cltk.corpus.hebrew",
            "cltk.corpus.hebrew.corpora",
            "cltk.corpus.hindi",
            "cltk.corpus.hindi.corpora",
            "cltk.corpus.javanese",
            "cltk.corpus.javanese.corpora",
            "cltk.corpus.latin",
            "cltk.corpus.latin.corpora",
            "cltk.corpus.latin.phi5_index",
            "cltk.corpus.malayalam",
            "cltk.corpus.malayalam.corpora",
            "cltk.corpus.multilingual",
            "cltk.corpus.multilingual.corpora",
            "cltk.corpus.old_church_slavonic",
            "cltk.corpus.old_church_slavonic.corpora",
            "cltk.corpus.old_english",
            "cltk.corpus.old_english.corpora",
            "cltk.corpus.pali",
            "cltk.corpus.pali.corpora",
            "cltk.corpus.prakrit",
            "cltk.corpus.prakrit.corpora",
            "cltk.corpus.punjabi",
            "cltk.corpus.punjabi.alphabet",
            "cltk.corpus.punjabi.corpora",
            "cltk.corpus.punjabi.numerifier",
            "cltk.corpus.sanskrit",
            "cltk.corpus.sanskrit.alphabet",
            "cltk.corpus.sanskrit.corpora",
            "cltk.corpus.sanskrit.itrans",
            "cltk.corpus.sanskrit.itrans.itrans_transliterator",
            "cltk.corpus.sanskrit.itrans.langinfo",
            "cltk.corpus.sanskrit.itrans.sinhala_transliterator",
            "cltk.corpus.sanskrit.itrans.unicode_transliterate",
            "cltk.corpus.telugu",
            "cltk.corpus.telugu.corpora",
            "cltk.corpus.tibetan",
            "cltk.corpus.tibetan.corpora",
            "cltk.corpus.utils",
            "cltk.corpus.utils.formatter",
            "cltk.corpus.utils.importer",
            "cltk.exceptions",
            "cltk.ir",
            "cltk.ir.boolean",
            "cltk.ir.query",
            "cltk.lemmatize",
            "cltk.lemmatize.greek",
            "cltk.lemmatize.latin",
            "cltk.lemmatize.latin.backoff",
            "cltk.phonology",
            "cltk.phonology.greek",
            "cltk.phonology.greek.transcription",
            "cltk.phonology.latin",
            "cltk.phonology.latin.transcription",
            "cltk.prosody",
            "cltk.prosody.greek",
            "cltk.prosody.greek.scanner",
            "cltk.prosody.latin",
            "cltk.prosody.latin.clausulae_analysis",
            "cltk.prosody.latin.macronizer",
            "cltk.prosody.latin.scanner",
            "cltk.stem",
            "cltk.stem.latin",
            "cltk.stem.latin.declension",
            "cltk.stem.latin.j_v",
            "cltk.stem.latin.stem",
            "cltk.stem.latin.syllabifier",
            "cltk.stem.lemma",
            "cltk.stem.sanskrit",
            "cltk.stem.sanskrit.indian_syllabifier",
            "cltk.stop",
            "cltk.stop.greek",
            "cltk.stop.greek.stops",
            "cltk.stop.latin",
            "cltk.stop.latin.stops",
            "cltk.stop.middle_english",
            "cltk.stop.middle_english.stops",
            "cltk.stop.old_english",
            "cltk.stop.old_english.stops",
            "cltk.stop.punjabi",
            "cltk.stop.punjabi.stops",
            "cltk.stop.sanskrit",
            "cltk.stop.sanskrit.stops",
            "cltk.tag",
            "cltk.tag.ner",
            "cltk.tag.pos",
            "cltk.text_reuse",
            "cltk.text_reuse.comparison",
            "cltk.text_reuse.levenshtein",
            "cltk.text_reuse.text_reuse",
            "cltk.tokenize",
            "cltk.tokenize.indian_tokenizer",
            "cltk.tokenize.latin_exceptions",
            "cltk.tokenize.sentence",
            "cltk.tokenize.word",
            "cltk.utils",
            "cltk.utils.cltk_logger",
            "cltk.utils.contributors",
            "cltk.utils.file_operations",
            "cltk.utils.frequency",
            "cltk.utils.philology",
            "cltk.vector",
            "cltk.vector.word2vec"
        ],
        "version": "0.1.47"
    },
    "cltool": {
        "cmdline": [],
        "modules": [
            "cltool"
        ],
        "version": "0.8.1.3dev"
    },
    "cltools": {
        "cmdline": [],
        "modules": [
            "cltools",
            "cltools.configurable_runnable",
            "cltools.exceptions",
            "cltools.i18n",
            "cltools.runnable",
            "cltools.runner"
        ],
        "version": "0.4.2"
    },
    "cltwit": {
        "cmdline": [],
        "modules": [],
        "version": "0.6"
    },
    "clu": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clue": {
        "cmdline": [],
        "modules": [
            "clue",
            "clue.completion",
            "clue.feature",
            "clue.hooks",
            "clue.output"
        ],
        "version": "0.40"
    },
    "clue-script": {
        "cmdline": [],
        "modules": [
            "clue_script",
            "clue_script._wsgi",
            "clue_script.tests"
        ],
        "version": "0.3.1"
    },
    "clue-sqlaloader": {
        "cmdline": [],
        "modules": [
            "clue_sqlaloader",
            "clue_sqlaloader.tests",
            "clue_sqlaloader.tests_flymake"
        ],
        "version": "0.1.1"
    },
    "cluebin": {
        "cmdline": [],
        "modules": [
            "cluebin",
            "cluebin.googledata",
            "cluebin.paste",
            "cluebin.pastebin",
            "cluebin.sqldata",
            "cluebin.tests",
            "cluebin.utils"
        ],
        "version": "0.2.3"
    },
    "cluebzrserver": {
        "cmdline": [],
        "modules": [
            "clue",
            "clue.bzrserver",
            "clue.bzrserver.main",
            "clue.bzrserver.server",
            "clue.bzrserver.utils",
            "clue.bzrserver.wsgi"
        ],
        "version": "0.2"
    },
    "cluedojo": {
        "cmdline": [],
        "modules": [
            "cluedojo",
            "cluedojo.demoapp",
            "cluedojo.wsgiapp"
        ],
        "version": "1.4.3-1"
    },
    "cluemapper": {
        "cmdline": [],
        "modules": [
            "clue",
            "clue.app",
            "clue.app.admin",
            "clue.app.config",
            "clue.app.controller",
            "clue.app.environinit",
            "clue.app.patches",
            "clue.app.pdbcheck",
            "clue.app.project",
            "clue.app.redirect",
            "clue.app.server",
            "clue.app.tests",
            "clue.app.tracplugins",
            "clue.app.tracplugins.sourcecontrol",
            "clue.app.tracplugins.theme",
            "clue.app.tracplugins.user",
            "clue.app.utils"
        ],
        "version": "0.7"
    },
    "cluemapperchatter": {
        "cmdline": [],
        "modules": [
            "clue",
            "clue.chatter",
            "clue.chatter.svnnotify"
        ],
        "version": "0.6"
    },
    "cluemappersecure": {
        "cmdline": [],
        "modules": [
            "clue",
            "clue.secure",
            "clue.secure.auth",
            "clue.secure.htpasswd",
            "clue.secure.tests"
        ],
        "version": "0.6.3"
    },
    "cluemapperthemer": {
        "cmdline": [],
        "modules": [
            "clue",
            "clue.themer",
            "clue.themer.tests",
            "clue.themer.theme"
        ],
        "version": "0.6.3"
    },
    "cluemappertools": {
        "cmdline": [],
        "modules": [
            "clue",
            "clue.tools",
            "clue.tools.fileio",
            "clue.tools.testing",
            "clue.tools.tests"
        ],
        "version": "0.6.1"
    },
    "cluereleasemanager": {
        "cmdline": [],
        "modules": [
            "clue",
            "clue.relmgr",
            "clue.relmgr.cmdtool",
            "clue.relmgr.main",
            "clue.relmgr.model",
            "clue.relmgr.pypi",
            "clue.relmgr.static",
            "clue.relmgr.templates",
            "clue.relmgr.tests",
            "clue.relmgr.utils",
            "clue.relmgr.wsgiapp"
        ],
        "version": "0.3.3"
    },
    "cluereleasemanager.paste": {
        "cmdline": [],
        "modules": [
            "ClueReleaseManager",
            "ClueReleaseManager.paste",
            "ClueReleaseManager.paste.paste",
            "ClueReleaseManager.paste.paste.tests",
            "ClueReleaseManager.paste.paste.tests.test_crm"
        ],
        "version": "1.1"
    },
    "clui": {
        "cmdline": [],
        "modules": [
            "clui",
            "clui.clui"
        ],
        "version": "1.0"
    },
    "clust": {
        "cmdline": [],
        "modules": [
            "clust",
            "clust.clustpipeline",
            "clust.scripts",
            "clust.scripts.clustering",
            "clust.scripts.datastructures",
            "clust.scripts.glob",
            "clust.scripts.graphics",
            "clust.scripts.io",
            "clust.scripts.mnplots",
            "clust.scripts.numeric",
            "clust.scripts.output",
            "clust.scripts.postprocess_results",
            "clust.scripts.preprocess_data",
            "clust.scripts.statistical",
            "clust.scripts.uncles"
        ],
        "version": "1.1.5"
    },
    "clustaar.authorize": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "clustalo": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "cluster": {
        "cmdline": [],
        "modules": [
            "cluster",
            "cluster.cluster",
            "cluster.linkage",
            "cluster.matrix",
            "cluster.method",
            "cluster.method.base",
            "cluster.method.hierarchical",
            "cluster.method.kmeans",
            "cluster.util"
        ],
        "version": "1.3.3"
    },
    "cluster-ensembles": {
        "cmdline": [],
        "modules": [
            "Cluster_Ensembles",
            "Cluster_Ensembles.Cluster_Ensembles"
        ],
        "version": "1.16"
    },
    "cluster-flag": {
        "cmdline": [],
        "modules": [
            "clusterflag",
            "clusterflag.country_flags"
        ],
        "version": "0.1.2"
    },
    "cluster-func": {
        "cmdline": [
            "cluf"
        ],
        "modules": [
            "cluster_func",
            "cluster_func._cf",
            "cluster_func.arg_parser",
            "cluster_func.arguments",
            "cluster_func.exceptions",
            "cluster_func.rc_params",
            "cluster_func.utils"
        ],
        "version": "0.0.6"
    },
    "cluster-lensing": {
        "cmdline": [],
        "modules": [
            "clusterlensing",
            "clusterlensing.clusters",
            "clusterlensing.cofm",
            "clusterlensing.halobias",
            "clusterlensing.nfw",
            "clusterlensing.utils",
            "clusterlensing/tests",
            "clusterlensing/tests.test_clusters",
            "clusterlensing/tests.test_cofm",
            "clusterlensing/tests.test_halobias",
            "clusterlensing/tests.test_nfw"
        ],
        "version": "0.1.2"
    },
    "clusterclienttest": {
        "cmdline": [],
        "modules": [
            "clusterclienttest"
        ],
        "version": "0.2.0"
    },
    "clustercron": {
        "cmdline": [],
        "modules": [
            "clustercron",
            "clustercron.cache",
            "clustercron.config",
            "clustercron.elb",
            "clustercron.main"
        ],
        "version": "0.4.10"
    },
    "clusterfutures": {
        "cmdline": [],
        "modules": [
            "cfut",
            "cfut.condor",
            "cfut.remote",
            "cfut.slurm",
            "cfut.util"
        ],
        "version": "0.2"
    },
    "clusterfuzz": {
        "cmdline": [],
        "modules": [
            "clusterfuzz",
            "clusterfuzz.asan_symbolize_proxy",
            "clusterfuzz.binary_providers",
            "clusterfuzz.commands",
            "clusterfuzz.commands.reproduce",
            "clusterfuzz.common",
            "clusterfuzz.local_logging",
            "clusterfuzz.main",
            "clusterfuzz.reproducers",
            "clusterfuzz.stackdriver_logging",
            "clusterfuzz.testcase"
        ],
        "version": "0.2.2rc4"
    },
    "clustergrammer": {
        "cmdline": [],
        "modules": [
            "clustergrammer",
            "clustergrammer.calc_clust",
            "clustergrammer.cat_pval",
            "clustergrammer.categories",
            "clustergrammer.data_formats",
            "clustergrammer.downsample_fun",
            "clustergrammer.enrichr_functions",
            "clustergrammer.export_data",
            "clustergrammer.iframe_web_app",
            "clustergrammer.initialize_net",
            "clustergrammer.load_data",
            "clustergrammer.load_vect_post",
            "clustergrammer.make_clust_fun",
            "clustergrammer.make_sim_mat",
            "clustergrammer.make_unique_labels",
            "clustergrammer.make_views",
            "clustergrammer.make_viz",
            "clustergrammer.normalize_fun",
            "clustergrammer.proc_df_labels",
            "clustergrammer.run_filter"
        ],
        "version": "1.13.3"
    },
    "clustergrammer-widget": {
        "cmdline": [],
        "modules": [
            "clustergrammer_widget",
            "clustergrammer_widget._version",
            "clustergrammer_widget.clustergrammer",
            "clustergrammer_widget.clustergrammer.calc_clust",
            "clustergrammer_widget.clustergrammer.cat_pval",
            "clustergrammer_widget.clustergrammer.categories",
            "clustergrammer_widget.clustergrammer.data_formats",
            "clustergrammer_widget.clustergrammer.downsample_fun",
            "clustergrammer_widget.clustergrammer.enrichr_functions",
            "clustergrammer_widget.clustergrammer.export_data",
            "clustergrammer_widget.clustergrammer.iframe_web_app",
            "clustergrammer_widget.clustergrammer.initialize_net",
            "clustergrammer_widget.clustergrammer.load_data",
            "clustergrammer_widget.clustergrammer.load_vect_post",
            "clustergrammer_widget.clustergrammer.make_clust_fun",
            "clustergrammer_widget.clustergrammer.make_sim_mat",
            "clustergrammer_widget.clustergrammer.make_unique_labels",
            "clustergrammer_widget.clustergrammer.make_views",
            "clustergrammer_widget.clustergrammer.make_viz",
            "clustergrammer_widget.clustergrammer.normalize_fun",
            "clustergrammer_widget.clustergrammer.proc_df_labels",
            "clustergrammer_widget.clustergrammer.run_filter",
            "clustergrammer_widget.example"
        ],
        "version": "1.10.6"
    },
    "clusterit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clusterjob": {
        "cmdline": [],
        "modules": [
            "clusterjob",
            "clusterjob.backends",
            "clusterjob.backends.lpbs",
            "clusterjob.backends.pbs",
            "clusterjob.backends.sge",
            "clusterjob.backends.slurm",
            "clusterjob.status",
            "clusterjob.utils"
        ],
        "version": "1.1.3"
    },
    "clusterlib": {
        "cmdline": [],
        "modules": [
            "clusterlib",
            "clusterlib.scheduler",
            "clusterlib.storage",
            "clusterlib.tests",
            "clusterlib.tests.test_scheduler",
            "clusterlib.tests.test_storage"
        ],
        "version": "0.1"
    },
    "clusterlogger": {
        "cmdline": [],
        "modules": [
            "clusterlogger",
            "clusterlogger.handler",
            "clusterlogger.logfilter"
        ],
        "version": "0.2.0"
    },
    "clusteror": {
        "cmdline": [],
        "modules": [
            "clusteror",
            "clusteror._version",
            "clusteror.config",
            "clusteror.core",
            "clusteror.data_layer",
            "clusteror.discovery_layer",
            "clusteror.implementation_layer",
            "clusteror.nn",
            "clusteror.plot",
            "clusteror.preprocessing_layer",
            "clusteror.settings",
            "clusteror.skeleton",
            "clusteror.utils",
            "clusteror.versioneer",
            "tests",
            "tests.conftest",
            "tests.example_iris",
            "tests.example_tips",
            "tests.test",
            "tests.test_clusteror",
            "tests.test_skeleton"
        ],
        "version": "0.0.2"
    },
    "clusterous": {
        "cmdline": [
            "clusterous"
        ],
        "modules": [
            "clusterous",
            "clusterous.cli",
            "clusterous.cluster",
            "clusterous.clusterbuilder",
            "clusterous.clusterousconfig",
            "clusterous.clusterousmain",
            "clusterous.defaults",
            "clusterous.environment",
            "clusterous.environmentfile",
            "clusterous.helpers",
            "clusterous.setupwizard",
            "clusterous.terminalio"
        ],
        "version": "1.0.0"
    },
    "clusterpoint-api": {
        "cmdline": [],
        "modules": [
            "clusterpoint-api",
            "clusterpoint-api.connection",
            "clusterpoint-api.converters",
            "clusterpoint-api.errors",
            "clusterpoint-api.query",
            "clusterpoint-api.request",
            "clusterpoint-api.response",
            "clusterpoint-api.utils"
        ],
        "version": "0.3.0"
    },
    "clusterpolate": {
        "cmdline": [],
        "modules": [
            "clusterpolate"
        ],
        "version": "0.2.0"
    },
    "clusterpool": {
        "cmdline": [],
        "modules": [
            "ClusterPool",
            "ClusterPool.ClusterPool",
            "ClusterPool.Dispatcher",
            "ClusterPool.PrimeChecker",
            "ClusterPool.Trawler"
        ],
        "version": "0.10"
    },
    "clusterprocessing": {
        "cmdline": [],
        "modules": [
            "clusterprocessing",
            "clusterprocessing.version",
            "fabfile",
            "fabfile.utils",
            "tests",
            "tests.conftest",
            "tests.main",
            "tests.test_cluster"
        ],
        "version": "0.0.0.dev"
    },
    "clusterpy": {
        "cmdline": [],
        "modules": [
            "clusterpy",
            "clusterpy.core",
            "clusterpy.core.componentsIO",
            "clusterpy.core.data",
            "clusterpy.core.data.car",
            "clusterpy.core.data.componentsData",
            "clusterpy.core.data.createVariable",
            "clusterpy.core.data.dissolvedata",
            "clusterpy.core.data.gBinomial",
            "clusterpy.core.data.lBinomial",
            "clusterpy.core.data.sar",
            "clusterpy.core.data.sma",
            "clusterpy.core.data.spots",
            "clusterpy.core.data.uniform",
            "clusterpy.core.geometry",
            "clusterpy.core.geometry.areas",
            "clusterpy.core.geometry.bbox",
            "clusterpy.core.geometry.centroids",
            "clusterpy.core.geometry.dissolve",
            "clusterpy.core.geometry.expand",
            "clusterpy.core.geometry.transport",
            "clusterpy.core.inputs",
            "clusterpy.core.layer",
            "clusterpy.core.outputs",
            "clusterpy.core.toolboxes",
            "clusterpy.core.toolboxes.cluster",
            "clusterpy.core.toolboxes.cluster.amoeba",
            "clusterpy.core.toolboxes.cluster.arisel",
            "clusterpy.core.toolboxes.cluster.azp",
            "clusterpy.core.toolboxes.cluster.azpRtabu",
            "clusterpy.core.toolboxes.cluster.azpSa",
            "clusterpy.core.toolboxes.cluster.azpTabu",
            "clusterpy.core.toolboxes.cluster.componentsAlg",
            "clusterpy.core.toolboxes.cluster.componentsAlg.dist2Regions",
            "clusterpy.core.toolboxes.cluster.componentsAlg.distanceFunctions",
            "clusterpy.core.toolboxes.cluster.componentsAlg.objFunctions",
            "clusterpy.core.toolboxes.cluster.componentsAlg.selectionTypeFunctions",
            "clusterpy.core.toolboxes.cluster.geoSOM",
            "clusterpy.core.toolboxes.cluster.maxpTabu",
            "clusterpy.core.toolboxes.cluster.random",
            "clusterpy.core.toolboxes.cluster.som"
        ],
        "version": "0.9.9"
    },
    "clusters": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clustershell": {
        "cmdline": [],
        "modules": [
            "ClusterShell",
            "ClusterShell.CLI",
            "ClusterShell.CLI.Clubak",
            "ClusterShell.CLI.Clush",
            "ClusterShell.CLI.Config",
            "ClusterShell.CLI.Display",
            "ClusterShell.CLI.Error",
            "ClusterShell.CLI.Nodeset",
            "ClusterShell.CLI.OptionParser",
            "ClusterShell.CLI.Utils",
            "ClusterShell.Communication",
            "ClusterShell.Defaults",
            "ClusterShell.Engine",
            "ClusterShell.Engine.EPoll",
            "ClusterShell.Engine.Engine",
            "ClusterShell.Engine.Factory",
            "ClusterShell.Engine.Poll",
            "ClusterShell.Engine.Select",
            "ClusterShell.Event",
            "ClusterShell.Gateway",
            "ClusterShell.MsgTree",
            "ClusterShell.NodeSet",
            "ClusterShell.NodeUtils",
            "ClusterShell.Propagation",
            "ClusterShell.RangeSet",
            "ClusterShell.Task",
            "ClusterShell.Topology",
            "ClusterShell.Worker",
            "ClusterShell.Worker.EngineClient",
            "ClusterShell.Worker.Exec",
            "ClusterShell.Worker.Pdsh",
            "ClusterShell.Worker.Popen",
            "ClusterShell.Worker.Rsh",
            "ClusterShell.Worker.Ssh",
            "ClusterShell.Worker.Tree",
            "ClusterShell.Worker.Worker",
            "ClusterShell.Worker.fastsubprocess"
        ],
        "version": "1.7.3"
    },
    "clusterui": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "clusto": {
        "cmdline": [
            "clusto-dhcpd",
            "clusto-httpd",
            "clusto-update-db",
            "clusto-update-info"
        ],
        "modules": [
            "clusto",
            "clusto.commands",
            "clusto.commands.allocate",
            "clusto.commands.attr",
            "clusto.commands.console",
            "clusto.commands.deallocate",
            "clusto.commands.info",
            "clusto.commands.initdb",
            "clusto.commands.list_all",
            "clusto.commands.list_pool",
            "clusto.commands.pool",
            "clusto.commands.reboot",
            "clusto.commands.rename",
            "clusto.commands.shell",
            "clusto.commands.tree",
            "clusto.drivers",
            "clusto.drivers.base",
            "clusto.drivers.base.clustodriver",
            "clusto.drivers.base.clustometa",
            "clusto.drivers.base.controller",
            "clusto.drivers.base.device",
            "clusto.drivers.base.driver",
            "clusto.drivers.base.location",
            "clusto.drivers.base.resourcemanager",
            "clusto.drivers.categories",
            "clusto.drivers.categories.pool",
            "clusto.drivers.devices",
            "clusto.drivers.devices.appliance",
            "clusto.drivers.devices.appliance.basicappliance",
            "clusto.drivers.devices.common",
            "clusto.drivers.devices.common.ipmixin",
            "clusto.drivers.devices.common.portmixin",
            "clusto.drivers.devices.consoleservers",
            "clusto.drivers.devices.consoleservers.basicconsoleserver",
            "clusto.drivers.devices.networkswitches",
            "clusto.drivers.devices.networkswitches.basicnetworkswitch",
            "clusto.drivers.devices.powerstrips",
            "clusto.drivers.devices.powerstrips.basicpowerstrip",
            "clusto.drivers.devices.servers",
            "clusto.drivers.devices.servers.basicserver",
            "clusto.drivers.locations",
            "clusto.drivers.locations.datacenters",
            "clusto.drivers.locations.datacenters.basiccage",
            "clusto.drivers.locations.datacenters.basicdatacenter",
            "clusto.drivers.locations.racks",
            "clusto.drivers.locations.racks.basicrack",
            "clusto.drivers.locations.zones",
            "clusto.drivers.locations.zones.basiczone",
            "clusto.drivers.resourcemanagers",
            "clusto.drivers.resourcemanagers.ipmanager",
            "clusto.drivers.resourcemanagers.simplenamemanager",
            "clusto.drivers.resourcemanagers.simplenummanager",
            "clusto.exceptions",
            "clusto.schema",
            "clusto.script_helper",
            "clusto.services",
            "clusto.services.config",
            "clusto.services.dhcp",
            "clusto.services.http",
            "clusto.services.snmp",
            "clusto.test",
            "clusto.test.alltests",
            "clusto.test.base",
            "clusto.test.base.clustotests",
            "clusto.test.base.countertests",
            "clusto.test.base.drivertests",
            "clusto.test.base.entitytests",
            "clusto.test.base.versioningtests",
            "clusto.test.drivers",
            "clusto.test.drivers.categories",
            "clusto.test.drivers.categories.pooltests",
            "clusto.test.drivers.common",
            "clusto.test.drivers.common.porttests",
            "clusto.test.drivers.devices",
            "clusto.test.drivers.devices.servers",
            "clusto.test.drivers.devices.servers.basicservertest",
            "clusto.test.drivers.locations",
            "clusto.test.drivers.locations.racks",
            "clusto.test.drivers.locations.racks.basicracktests",
            "clusto.test.drivers.resourcemanagers",
            "clusto.test.drivers.resourcemanagers.ipmanagertest",
            "clusto.test.drivers.resourcemanagers.simplenamemanagertest",
            "clusto.test.drivers.resourcemanagers.simplenummanagertest",
            "clusto.test.drivers.resourcetests",
            "clusto.test.testbase",
            "clusto.test.usage",
            "clusto.test.usage.clusterusage",
            "clusto.test.usage.concurrentusage",
            "clusto.test.usage.serverinstallation",
            "clusto.test.util",
            "clusto.test.util.utiltests",
            "clusto.util"
        ],
        "version": "0.7.9"
    },
    "clusto-apiserver": {
        "cmdline": [],
        "modules": [
            "clustoapi",
            "clustoapi.apps",
            "clustoapi.apps.attribute",
            "clustoapi.apps.entity",
            "clustoapi.apps.resourcemanager",
            "clustoapi.server",
            "clustoapi.util",
            "tests",
            "tests.all",
            "tests.suites",
            "tests.suites.coding_style",
            "tests.suites.python_docs",
            "tests.suites.shell_docs",
            "tests.suites.util"
        ],
        "version": "0.5.2"
    },
    "clusto-ec2": {
        "cmdline": [],
        "modules": [
            "clustoec2",
            "clustoec2.commands",
            "clustoec2.commands.bootstrap",
            "clustoec2.commands.ec2",
            "clustoec2.commands.vpc",
            "clustoec2.drivers",
            "clustoec2.drivers.base",
            "clustoec2.drivers.categories",
            "clustoec2.drivers.categories.securitygroup",
            "clustoec2.drivers.devices",
            "clustoec2.drivers.devices.servers",
            "clustoec2.drivers.devices.servers.ec2server",
            "clustoec2.drivers.devices.servers.vpcserver",
            "clustoec2.drivers.locations",
            "clustoec2.drivers.locations.datacenters",
            "clustoec2.drivers.locations.datacenters.ec2region",
            "clustoec2.drivers.locations.datacenters.vpc",
            "clustoec2.drivers.locations.zones",
            "clustoec2.drivers.locations.zones.ec2zone",
            "clustoec2.drivers.locations.zones.subnet",
            "clustoec2.drivers.resourcemanagers",
            "clustoec2.drivers.resourcemanagers.ec2connmanager",
            "clustoec2.drivers.resourcemanagers.vpcconnmanager"
        ],
        "version": "0.6.4"
    },
    "clustrous": {
        "cmdline": [],
        "modules": [
            "clustrous",
            "clustrous.cluster",
            "tests",
            "tests.test_cluster"
        ],
        "version": "0.1.2"
    },
    "clutch": {
        "cmdline": [],
        "modules": [
            "clutch",
            "clutch.blob",
            "clutch.controllers",
            "clutch.dottedtemplatelookup",
            "clutch.forms",
            "clutch.forms.core",
            "clutch.forms.seekable",
            "clutch.lib",
            "clutch.render",
            "clutch.validation",
            "clutch.wsgiapp"
        ],
        "version": "0.1a2"
    },
    "clutchclient": {
        "cmdline": [],
        "modules": [
            "clutchclient",
            "clutchclient.commands",
            "clutchclient.commands.dev",
            "clutchclient.commands.startapp",
            "clutchclient.commands.startscreen",
            "clutchclient.commands.upload",
            "clutchclient.commands.version",
            "clutchclient.main",
            "clutchclient.utils"
        ],
        "version": "0.1.8"
    },
    "clutchserver": {
        "cmdline": [
            "clutch-all",
            "clutch-config",
            "clutch-rpc",
            "clutch-test",
            "clutch-tunnel",
            "clutch-web"
        ],
        "modules": [
            "ab",
            "ab.admin",
            "ab.forms",
            "ab.interface",
            "ab.models",
            "ab.tests",
            "ab.urls",
            "ab.views",
            "accounts",
            "accounts.forms",
            "accounts.models",
            "accounts.tests",
            "accounts.urls",
            "accounts.views",
            "admin_ext",
            "admin_ext.models",
            "admin_ext.tests",
            "admin_ext.views",
            "clutch",
            "clutch.settings",
            "clutch.urls",
            "clutch.views",
            "clutch.wsgi",
            "clutchrpc",
            "clutchrpc.ab",
            "clutchrpc.app",
            "clutchrpc.db",
            "clutchrpc.framework",
            "clutchrpc.pg2",
            "clutchrpc.utils",
            "clutchtunnel",
            "clutchtunnel.tunnel",
            "dashboard",
            "dashboard.actions",
            "dashboard.admin",
            "dashboard.forms",
            "dashboard.managers",
            "dashboard.models",
            "dashboard.tests",
            "dashboard.urls",
            "dashboard.utils",
            "dashboard.views",
            "django_ext",
            "django_ext.authentication_backends",
            "django_ext.http",
            "django_ext.logging",
            "django_ext.models",
            "django_ext.tests",
            "django_ext.utils",
            "stats",
            "stats.admin",
            "stats.interface",
            "stats.models",
            "stats.tests",
            "stats.urls",
            "stats.views"
        ],
        "version": "0.1.0"
    },
    "clutter-webcam-viewer": {
        "cmdline": [],
        "modules": [
            "clutter_webcam_viewer",
            "clutter_webcam_viewer.pipeline",
            "clutter_webcam_viewer.pipeline_manager",
            "clutter_webcam_viewer.svg",
            "clutter_webcam_viewer.warp",
            "clutter_webcam_viewer.warp_control"
        ],
        "version": "0.3"
    },
    "clvault": {
        "cmdline": [],
        "modules": [
            "clvault",
            "clvault.get_password",
            "clvault.passwordlist",
            "clvault.set_password"
        ],
        "version": "0.5"
    },
    "clwapp": {
        "cmdline": [],
        "modules": [
            "clwapp",
            "clwapp.clwapp",
            "clwapp.factory",
            "clwapp.utils"
        ],
        "version": "0.1.1"
    },
    "clx-nester": {
        "cmdline": [],
        "modules": [
            "clx_nester"
        ],
        "version": "1.3.0"
    },
    "clx-sdk-xms": {
        "cmdline": [],
        "modules": [
            "clx",
            "clx.xms",
            "clx.xms.__about__",
            "clx.xms.api",
            "clx.xms.client",
            "clx.xms.deserialize",
            "clx.xms.exceptions",
            "clx.xms.serialize"
        ],
        "version": "1.0.0"
    },
    "cly": {
        "cmdline": [],
        "modules": [
            "cly",
            "cly.builder",
            "cly.console",
            "cly.exceptions",
            "cly.extra",
            "cly.interactive",
            "cly.parser",
            "cly.rlext",
            "cly.test"
        ],
        "version": "0.9"
    },
    "clyent": {
        "cmdline": [],
        "modules": [
            "clyent",
            "clyent._version",
            "clyent.colors",
            "clyent.colors.color",
            "clyent.colors.color_formatter",
            "clyent.errors",
            "clyent.logs",
            "clyent.logs.colors",
            "clyent.logs.colors.printer",
            "clyent.logs.handlers",
            "clyent.tests",
            "clyent.tests.test_clyent"
        ],
        "version": "1.2.1"
    },
    "clyther": {
        "cmdline": [],
        "modules": [
            "clyther",
            "clyther.array",
            "clyther.array.array_context",
            "clyther.array.blitz",
            "clyther.array.clarray",
            "clyther.array.functions",
            "clyther.array.reduce_array",
            "clyther.array.ufunc_framework",
            "clyther.array.ufuncs",
            "clyther.array.utils",
            "clyther.caching",
            "clyther.clast",
            "clyther.clast.cast",
            "clyther.clast.mutators",
            "clyther.clast.mutators.for_loops",
            "clyther.clast.mutators.keywords",
            "clyther.clast.mutators.placeholder_replace",
            "clyther.clast.mutators.printf",
            "clyther.clast.mutators.replace_constants",
            "clyther.clast.mutators.rm_const_params",
            "clyther.clast.mutators.type_cast",
            "clyther.clast.mutators.unpacker",
            "clyther.clast.openCL_sourcegen",
            "clyther.clast.visitors",
            "clyther.clast.visitors.returns",
            "clyther.clast.visitors.typify",
            "clyther.cly_kernel",
            "clyther.my_sphinx",
            "clyther.pipeline",
            "clyther.pybuiltins",
            "clyther.queue_record",
            "clyther.rttt",
            "clyther.runtime",
            "clyther.scripts",
            "clyther.scripts.inspect_cly",
            "clyther.test",
            "clyther.test.clast",
            "clyther.test.clast.test_typify",
            "clyther.test.test_array_info",
            "clyther.test.test_builtins",
            "clyther.test.test_simple",
            "clyther.test.test_ufuncs",
            "clyther.version"
        ],
        "version": "0.4-beta"
    },
    "clytnester": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "cm": {
        "cmdline": [],
        "modules": [
            "cm",
            "cm.arguments",
            "cm.arguments_module",
            "cm.base",
            "cm.option",
            "cm.options_module"
        ],
        "version": "0.1a2"
    },
    "cm-api": {
        "cmdline": [],
        "modules": [
            "cm_api",
            "cm_api.api_client",
            "cm_api.endpoints",
            "cm_api.endpoints.batch",
            "cm_api.endpoints.clusters",
            "cm_api.endpoints.cms",
            "cm_api.endpoints.dashboards",
            "cm_api.endpoints.events",
            "cm_api.endpoints.external_accounts",
            "cm_api.endpoints.host_templates",
            "cm_api.endpoints.hosts",
            "cm_api.endpoints.parcels",
            "cm_api.endpoints.role_config_groups",
            "cm_api.endpoints.roles",
            "cm_api.endpoints.services",
            "cm_api.endpoints.timeseries",
            "cm_api.endpoints.tools",
            "cm_api.endpoints.types",
            "cm_api.endpoints.users",
            "cm_api.http_client",
            "cm_api.resource",
            "cm_shell",
            "cm_shell.cmps",
            "cm_shell.prettytable"
        ],
        "version": "16.0.0"
    },
    "cm-stv": {
        "cmdline": [],
        "modules": [
            "cmstv",
            "cmstv.models",
            "cmstv.stv"
        ],
        "version": "0.1.6"
    },
    "cm-stv-statistics": {
        "cmdline": [],
        "modules": [
            "cmstv_statistics",
            "cmstv_statistics.stats"
        ],
        "version": "0.2"
    },
    "cm-tools": {
        "cmdline": [],
        "modules": [
            "cm_tools",
            "cm_tools.images"
        ],
        "version": "0.0.1"
    },
    "cm2c": {
        "cmdline": [
            "cm2c.pyz"
        ],
        "modules": [],
        "version": "0.3.1"
    },
    "cma": {
        "cmdline": [],
        "modules": [
            "cma"
        ],
        "version": "1.1.7"
    },
    "cmadison": {
        "cmdline": [],
        "modules": [
            "cmadison",
            "cmadison.cmadison"
        ],
        "version": "0.0.3"
    },
    "cmajor": {
        "cmdline": [],
        "modules": [
            "cmajor"
        ],
        "version": "0.1"
    },
    "cmake": {
        "cmdline": [],
        "modules": [],
        "version": "0.6.0"
    },
    "cmake2scons": {
        "cmdline": [
            "CMake2SCons"
        ],
        "modules": [
            "cmake2scons",
            "cmake2scons.cmakecmds"
        ],
        "version": "1.1"
    },
    "cmakeast": {
        "cmdline": [],
        "modules": [
            "cmakeast",
            "cmakeast.ast",
            "cmakeast.ast_visitor",
            "cmakeast.printer"
        ],
        "version": "0.0.18"
    },
    "cmakehelp": {
        "cmdline": [],
        "modules": [],
        "version": "0.1dev"
    },
    "cmakelint": {
        "cmdline": [
            "cmakelint"
        ],
        "modules": [
            "cmakelint",
            "cmakelint.__version__",
            "cmakelint.main"
        ],
        "version": "1.3.4.1"
    },
    "cmakelintbear": {
        "cmdline": [],
        "modules": [
            "coalaCMakeLintBear",
            "coalaCMakeLintBear.CMakeLintBear"
        ],
        "version": "0.10.0"
    },
    "cmakelists-parsing": {
        "cmdline": [],
        "modules": [
            "cmakelists_parsing",
            "cmakelists_parsing.cmake_pprint",
            "cmakelists_parsing.list_utils",
            "cmakelists_parsing.parsing",
            "cmakelists_parsing.rand",
            "tests",
            "tests.example_inputs_test",
            "tests.parsing_test"
        ],
        "version": "0.3"
    },
    "cmakepy": {
        "cmdline": [],
        "modules": [
            "cmakepy",
            "cmakepy.cmakepy",
            "cmakepy.templates"
        ],
        "version": "0.1.2"
    },
    "cmakew": {
        "cmdline": [],
        "modules": [
            "cmakew",
            "cmakew._cd",
            "cmakew._common",
            "cmakew._compiler",
            "cmakew._logger",
            "cmakew._option",
            "cmakew._visual_studio",
            "cmakew.cmakew"
        ],
        "version": "0.0.3"
    },
    "cmanager": {
        "cmdline": [],
        "modules": [
            "cmanager",
            "cmanager.cmanager",
            "cmanager.core",
            "cmanager.core.cm_app",
            "cmanager.core.cm_connection",
            "cmanager.core.cm_help",
            "cmanager.core.cm_interfaces",
            "cmanager.core.cm_iw_parse",
            "cmanager.core.cm_network"
        ],
        "version": "2.6"
    },
    "cmany": {
        "cmdline": [],
        "modules": [
            "c4",
            "c4.cmany",
            "c4.cmany.architecture",
            "c4.cmany.args",
            "c4.cmany.build",
            "c4.cmany.build_flags",
            "c4.cmany.build_item",
            "c4.cmany.build_type",
            "c4.cmany.cmake",
            "c4.cmany.combination_rules",
            "c4.cmany.compiler",
            "c4.cmany.conan",
            "c4.cmany.conf",
            "c4.cmany.flags",
            "c4.cmany.generator",
            "c4.cmany.help",
            "c4.cmany.main",
            "c4.cmany.named_item",
            "c4.cmany.project",
            "c4.cmany.system",
            "c4.cmany.util",
            "c4.cmany.variant",
            "c4.cmany.vsinfo"
        ],
        "version": "0.1.0.post1"
    },
    "cmappertools": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.24"
    },
    "cmappy": {
        "cmdline": [],
        "modules": [
            "cmapPy",
            "cmapPy.clue_api_client",
            "cmapPy.clue_api_client.cell_queries",
            "cmapPy.clue_api_client.clue_api_client",
            "cmapPy.clue_api_client.gene_queries",
            "cmapPy.clue_api_client.macchiato_queries",
            "cmapPy.clue_api_client.mock_clue_api_client",
            "cmapPy.clue_api_client.pert_queries",
            "cmapPy.clue_api_client.setup_logger",
            "cmapPy.pandasGEXpress",
            "cmapPy.pandasGEXpress.GCToo",
            "cmapPy.pandasGEXpress.concat_gctoo",
            "cmapPy.pandasGEXpress.gct2gctx",
            "cmapPy.pandasGEXpress.gctx2gct",
            "cmapPy.pandasGEXpress.mini_gctoo_for_testing",
            "cmapPy.pandasGEXpress.parse",
            "cmapPy.pandasGEXpress.parse_gct",
            "cmapPy.pandasGEXpress.parse_gctx",
            "cmapPy.pandasGEXpress.plategrp",
            "cmapPy.pandasGEXpress.random_slice",
            "cmapPy.pandasGEXpress.setup_GCToo_logger",
            "cmapPy.pandasGEXpress.slice_gct",
            "cmapPy.pandasGEXpress.write_gct",
            "cmapPy.pandasGEXpress.write_gctx"
        ],
        "version": "1.0.9"
    },
    "cmark": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmarkdown": {
        "cmdline": [
            "markdown"
        ],
        "modules": [],
        "version": "0.1.1"
    },
    "cmarkpy": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "cmcl": {
        "cmdline": [],
        "modules": [
            "cmcl",
            "cmcl.ORIG__init__",
            "cmcl.io"
        ],
        "version": "0.1.2"
    },
    "cmcpy": {
        "cmdline": [
            "cmc"
        ],
        "modules": [
            "cmcpy",
            "cmcpy.amino_acid_spaces",
            "cmcpy.codon_spaces",
            "cmcpy.evolvers",
            "cmcpy.genetic_codes",
            "cmcpy.misreading",
            "cmcpy.observables",
            "cmcpy.site_type_spaces"
        ],
        "version": "0.3"
    },
    "cmd-server": {
        "cmdline": [
            "cubi-cmd-server",
            "cubi-cmd-server-test"
        ],
        "modules": [],
        "version": "0.0.1"
    },
    "cmd-utils": {
        "cmdline": [],
        "modules": [
            "cmd_utils",
            "cmd_utils.cmd_exception",
            "cmd_utils.cmd_utils",
            "cmd_utils.ssh_conn",
            "cmd_utils.streaming"
        ],
        "version": "0.4.1"
    },
    "cmd2": {
        "cmdline": [],
        "modules": [
            "cmd2"
        ],
        "version": "0.7.0"
    },
    "cmd3": {
        "cmdline": [],
        "modules": [
            "cmd3",
            "cmd3.console",
            "cmd3.etc",
            "cmd3.etc.cmd3_template",
            "cmd3.etc.cmd3_template.cmd3_template",
            "cmd3.etc.cmd3_template.cmd3_template.plugins",
            "cmd3.generate",
            "cmd3.plugins",
            "cmd3.plugins-example",
            "cmd3.plugins-example.graphviz",
            "cmd3.plugins.activate",
            "cmd3.plugins.browser",
            "cmd3.plugins.clear",
            "cmd3.plugins.edit",
            "cmd3.plugins.info",
            "cmd3.plugins.load",
            "cmd3.plugins.pause",
            "cmd3.plugins.py",
            "cmd3.plugins.rst",
            "cmd3.plugins.script",
            "cmd3.plugins.shell_core",
            "cmd3.plugins.shell_generate",
            "cmd3.plugins.shell_plugins",
            "cmd3.plugins.shell_scope",
            "cmd3.plugins.template",
            "cmd3.plugins.timer",
            "cmd3.scripts",
            "cmd3.setup_management",
            "cmd3.shell",
            "cmd3.version",
            "cmd3.yaml_setup",
            "deprecated",
            "deprecated.setup",
            "deprecated.setup-orig",
            "fabfile",
            "fabfile.clean",
            "fabfile.doc",
            "fabfile.security"
        ],
        "version": "3.2.0"
    },
    "cmdb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmdbikes": {
        "cmdline": [],
        "modules": [
            "cli"
        ],
        "version": "0.1.6"
    },
    "cmdbot": {
        "cmdline": [],
        "modules": [
            "cmdbot",
            "cmdbot.configs",
            "cmdbot.core",
            "cmdbot.decorators"
        ],
        "version": "1.0.4"
    },
    "cmdbot-evented": {
        "cmdline": [],
        "modules": [
            "cmdbot_evented",
            "cmdbot_evented.configs",
            "cmdbot_evented.core",
            "cmdbot_evented.decorators"
        ],
        "version": "0.1.0dev"
    },
    "cmdcache": {
        "cmdline": [],
        "modules": [
            "cmdcache"
        ],
        "version": "0.1.1"
    },
    "cmddict": {
        "cmdline": [],
        "modules": [
            "cmddict"
        ],
        "version": "1.0dev"
    },
    "cmddocs": {
        "cmdline": [],
        "modules": [
            "cmddocs",
            "cmddocs.articles",
            "cmddocs.completions",
            "cmddocs.rendering",
            "cmddocs.utils",
            "cmddocs.version"
        ],
        "version": "1.0.3"
    },
    "cmdfunc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmdhelper": {
        "cmdline": [],
        "modules": [
            "cmdhelper"
        ],
        "version": "0.2.6"
    },
    "cmdhist": {
        "cmdline": [
            "cmdhist.py",
            "cmdhistd.py"
        ],
        "modules": [],
        "version": "0.2.1"
    },
    "cmdjudge": {
        "cmdline": [
            "cmdjudge"
        ],
        "modules": [],
        "version": "0.1"
    },
    "cmdlet": {
        "cmdline": [],
        "modules": [
            "cmdlet",
            "cmdlet.cmdlet",
            "cmdlet.cmds"
        ],
        "version": "0.3.0"
    },
    "cmdline": {
        "cmdline": [],
        "modules": [
            "cmdline",
            "cmdline.command",
            "cmdline.config",
            "cmdline.exceptions",
            "cmdline.logconfig",
            "cmdline.settings",
            "cmdline.util"
        ],
        "version": "0.1.8"
    },
    "cmdline-bootstrap": {
        "cmdline": [],
        "modules": [
            "bootstrap",
            "bootstrap.bootstrap",
            "bootstrap.stuff"
        ],
        "version": "0.2.0"
    },
    "cmdline-brute": {
        "cmdline": [],
        "modules": [
            "brute",
            "brute.scrape",
            "brute.status",
            "brute.submit",
            "brute.version",
            "util"
        ],
        "version": "0.5"
    },
    "cmdline-csv2keychain": {
        "cmdline": [],
        "modules": [
            "csv2keychain",
            "csv2keychain.csv2keychain",
            "csv2keychain.csv2keychain-runner"
        ],
        "version": "0.1.3"
    },
    "cmdline-til": {
        "cmdline": [],
        "modules": [
            "til",
            "til.editors",
            "til.til"
        ],
        "version": "0.4.3"
    },
    "cmdln": {
        "cmdline": [],
        "modules": [
            "cmdln"
        ],
        "version": "2.0.0"
    },
    "cmdlnui": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmdloop": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmdlr": {
        "cmdline": [],
        "modules": [
            "cmdlr",
            "cmdlr.analyzers",
            "cmdlr.analyzers.cartoonmad",
            "cmdlr.analyzers.eightcomic",
            "cmdlr.analyzers.u17",
            "cmdlr.analyzersmanager",
            "cmdlr.cmdline",
            "cmdlr.comicanalyzer",
            "cmdlr.comicdb",
            "cmdlr.comicdownloader",
            "cmdlr.comicpath",
            "cmdlr.downloader",
            "cmdlr.info",
            "cmdlr.stringprocess"
        ],
        "version": "2.1.4"
    },
    "cmdman": {
        "cmdline": [],
        "modules": [
            "cmdman",
            "cmdman.logging"
        ],
        "version": "0.0.3"
    },
    "cmdmessenger": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmdo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmdopt": {
        "cmdline": [],
        "modules": [
            "cmdopt"
        ],
        "version": "0.2.0"
    },
    "cmdpack": {
        "cmdline": [],
        "modules": [
            "cmdpack"
        ],
        "version": "0.4.6"
    },
    "cmdparse": {
        "cmdline": [],
        "modules": [
            "cmdparse",
            "cmdparse.cmdparse"
        ],
        "version": "0.9"
    },
    "cmdparser": {
        "cmdline": [],
        "modules": [
            "cmdparser",
            "cmdparser.cmdparser",
            "cmdparser.datetimeparse"
        ],
        "version": "1.0.1"
    },
    "cmdpp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmdpro": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "cmdpy": {
        "cmdline": [],
        "modules": [
            "cmdpy",
            "distribute_setup"
        ],
        "version": "1.4"
    },
    "cmdr": {
        "cmdline": [],
        "modules": [
            "cmdr",
            "cmdr.cli",
            "cmdr.error",
            "cmdr.flag",
            "cmdr.utils"
        ],
        "version": "0.0.2"
    },
    "cmds": {
        "cmdline": [],
        "modules": [
            "cmds"
        ],
        "version": "0.1.1"
    },
    "cmdssh": {
        "cmdline": [],
        "modules": [
            "cmdssh",
            "cmdssh.scp"
        ],
        "version": "54"
    },
    "cmdstats": {
        "cmdline": [],
        "modules": [
            "cmdstats"
        ],
        "version": "0.3"
    },
    "cmdstyle": {
        "cmdline": [],
        "modules": [
            "cmdstyle"
        ],
        "version": "0.1.0"
    },
    "cmdsyntax": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmdtest": {
        "cmdline": [],
        "modules": [
            "cmdtest"
        ],
        "version": "0.1.1"
    },
    "cmdtool": {
        "cmdline": [],
        "modules": [
            "cmdtool",
            "cmdtool.actions",
            "cmdtool.base_command",
            "cmdtool.command",
            "cmdtool.end_command",
            "cmdtool.sub_command",
            "cmdtool.super_command"
        ],
        "version": "0.2"
    },
    "cmdtree": {
        "cmdline": [],
        "modules": [
            "cmdtree",
            "cmdtree._compat",
            "cmdtree.exceptions",
            "cmdtree.parser",
            "cmdtree.registry",
            "cmdtree.shortcuts",
            "cmdtree.tree",
            "cmdtree.types"
        ],
        "version": "0.0.5"
    },
    "cmdutils": {
        "cmdline": [],
        "modules": [
            "cmdutils",
            "cmdutils.arg",
            "cmdutils.log",
            "cmdutils.templates"
        ],
        "version": "0.1"
    },
    "cmdvars": {
        "cmdline": [],
        "modules": [
            "cmdvars",
            "cmdvars._version"
        ],
        "version": "0.1.3"
    },
    "cme": {
        "cmdline": [],
        "modules": [
            "CME",
            "CME.CME"
        ],
        "version": "1.0"
    },
    "cmemcache-hash": {
        "cmdline": [],
        "modules": [
            "cmemcache_hash"
        ],
        "version": "0.1.1"
    },
    "cmf.pt": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmga-athletelist": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "cmgaathletelist": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "cmigemo": {
        "cmdline": [],
        "modules": [
            "cmigemo",
            "cmigemo.info",
            "cmigemo.migemo"
        ],
        "version": "0.1.6"
    },
    "cmimapper": {
        "cmdline": [],
        "modules": [
            "cmimapper"
        ],
        "version": "1.0"
    },
    "cmipdata": {
        "cmdline": [],
        "modules": [
            "cmipdata",
            "cmipdata.classes",
            "cmipdata.loading_tools",
            "cmipdata.plotting_tools",
            "cmipdata.preprocessing_tools",
            "cmipdata.slice_nc"
        ],
        "version": "0.6"
    },
    "cmis-storage": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmislib": {
        "cmdline": [],
        "modules": [
            "cmislib",
            "cmislib.exceptions",
            "cmislib.messages",
            "cmislib.model",
            "cmislib.net"
        ],
        "version": "0.5.1"
    },
    "cml": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cml-basic": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmmap": {
        "cmdline": [],
        "modules": [
            "cmmap"
        ],
        "version": "0.0.1"
    },
    "cmmnbuild-dep-manager": {
        "cmdline": [],
        "modules": [
            "cmmnbuild_dep_manager",
            "cmmnbuild_dep_manager.cmmnbuild_dep_manager"
        ],
        "version": "2.1.1"
    },
    "cmndr": {
        "cmdline": [],
        "modules": [
            "cmndr",
            "cmndr.commandbus",
            "cmndr.exception",
            "cmndr.exception.invalidmiddlewareexception",
            "cmndr.handlers",
            "cmndr.handlers.commandhandler",
            "cmndr.handlers.inflectors",
            "cmndr.handlers.inflectors.callableinflector",
            "cmndr.handlers.inflectors.inflector",
            "cmndr.handlers.locators",
            "cmndr.handlers.locators.inmemorylocator",
            "cmndr.handlers.locators.lazyloadinginmemorylocator",
            "cmndr.handlers.locators.locator",
            "cmndr.handlers.middlewarehandler",
            "cmndr.handlers.nameextractors",
            "cmndr.handlers.nameextractors.classnameextractor",
            "cmndr.handlers.nameextractors.nameextractor",
            "cmndr.middleware"
        ],
        "version": "1.0.5"
    },
    "cmocean": {
        "cmdline": [],
        "modules": [
            "cmocean",
            "cmocean.cm",
            "cmocean.data",
            "cmocean.plots",
            "cmocean.tools"
        ],
        "version": "1.1"
    },
    "cmonkey": {
        "cmdline": [],
        "modules": [
            "cmonkey",
            "cmonkey.cmd"
        ],
        "version": "0.1.1"
    },
    "cmonkey2": {
        "cmdline": [
            "cm2export",
            "cm2plot",
            "cm2view",
            "cmonkey2"
        ],
        "modules": [
            "cmonkey",
            "cmonkey.BSCM",
            "cmonkey.cmonkey_run",
            "cmonkey.cmviewer",
            "cmonkey.cmviewer.webapp",
            "cmonkey.config",
            "cmonkey.database",
            "cmonkey.datamatrix",
            "cmonkey.debug",
            "cmonkey.membership",
            "cmonkey.meme",
            "cmonkey.microarray",
            "cmonkey.microbes_online",
            "cmonkey.motif",
            "cmonkey.network",
            "cmonkey.organism",
            "cmonkey.patches",
            "cmonkey.pssm",
            "cmonkey.rsat",
            "cmonkey.schedule",
            "cmonkey.scoring",
            "cmonkey.seqtools",
            "cmonkey.set_enrichment",
            "cmonkey.sizes",
            "cmonkey.stringdb",
            "cmonkey.thesaurus",
            "cmonkey.tools",
            "cmonkey.tools.export",
            "cmonkey.tools.plot_expressions",
            "cmonkey.tools.plot_motif_positions",
            "cmonkey.tools.plot_motifs",
            "cmonkey.tools.util",
            "cmonkey.util",
            "cmonkey.weeder",
            "cmonkey.weederlauncher"
        ],
        "version": "1.2.6"
    },
    "cmp-version": {
        "cmdline": [
            "cmp-version"
        ],
        "modules": [
            "cmp_version"
        ],
        "version": "2.0.0"
    },
    "cmpcfg": {
        "cmdline": [
            "cmpcfg"
        ],
        "modules": [],
        "version": "0.6"
    },
    "cmpgen": {
        "cmdline": [],
        "modules": [
            "cmpGen",
            "cmpGen.cmpGen"
        ],
        "version": "0.1.2"
    },
    "cmph-cffi": {
        "cmdline": [],
        "modules": [
            "cmph",
            "cmph._adapters",
            "cmph._utils"
        ],
        "version": "0.3.0"
    },
    "cmppy": {
        "cmdline": [],
        "modules": [
            "cmppy"
        ],
        "version": "0.1"
    },
    "cmpy": {
        "cmdline": [],
        "modules": [
            "cmpy",
            "cmpy.cmpy"
        ],
        "version": "0.2"
    },
    "cmreshandler": {
        "cmdline": [],
        "modules": [
            "cmreslogging",
            "cmreslogging.handlers",
            "tests",
            "tests.test_cmreshandler"
        ],
        "version": "1.0.0b3"
    },
    "cms-booklet": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cms-bootstrap-templates": {
        "cmdline": [],
        "modules": [
            "cms_bootstrap_templates",
            "cms_bootstrap_templates.cms_plugins",
            "cms_bootstrap_templates.settings",
            "cms_bootstrap_templates.urls",
            "cms_bootstrap_templates.wsgi"
        ],
        "version": "1.1.0"
    },
    "cms-draggable-files": {
        "cmdline": [],
        "modules": [
            "cms_draggable_files",
            "cms_draggable_files.forms",
            "cms_draggable_files.models",
            "cms_draggable_files.urls",
            "cms_draggable_files.views"
        ],
        "version": "0.1.6"
    },
    "cms7": {
        "cmdline": [],
        "modules": [
            "cms7",
            "cms7.cli",
            "cms7.config",
            "cms7.error",
            "cms7.generator",
            "cms7.hyphenate",
            "cms7.mdext",
            "cms7.modules",
            "cms7.modules.blog",
            "cms7.modules.faq",
            "cms7.modules.feed",
            "cms7.modules.null",
            "cms7.modules.pages",
            "cms7.resources",
            "cms7.source",
            "cms7.util"
        ],
        "version": "0.1a19"
    },
    "cmsapp-rt": {
        "cmdline": [],
        "modules": [
            "cmsapp_rt",
            "cmsapp_rt.bsglobals",
            "cmsapp_rt.bsglobals.admin",
            "cmsapp_rt.bsglobals.context_processors",
            "cmsapp_rt.bsglobals.migrations",
            "cmsapp_rt.bsglobals.migrations.0001_initial",
            "cmsapp_rt.bsglobals.models",
            "cmsapp_rt.bsglobals.tests",
            "cmsapp_rt.bsglobals.views"
        ],
        "version": "0.0.4"
    },
    "cmsbooklet": {
        "cmdline": [
            "mktesto"
        ],
        "modules": [
            "cmsbooklet",
            "cmsbooklet.cmsbooklet",
            "cmsbooklet.templates"
        ],
        "version": "0.9"
    },
    "cmscommon": {
        "cmdline": [],
        "modules": [
            "cmscommon",
            "cmscommon.archive",
            "cmscommon.commands",
            "cmscommon.crypto",
            "cmscommon.datetime",
            "cmscommon.eventsource",
            "cmscommon.isocodes",
            "cmscommon.mimetypes",
            "cmscommon.terminal",
            "cmscommon.tex"
        ],
        "version": "0.1.0"
    },
    "cmsis-svd": {
        "cmdline": [],
        "modules": [
            "cmsis_svd",
            "cmsis_svd.examples",
            "cmsis_svd.examples.show_k20_json",
            "cmsis_svd.examples.show_k20_peripherals",
            "cmsis_svd.model",
            "cmsis_svd.parser",
            "cmsis_svd.tests",
            "cmsis_svd.tests.test_parser"
        ],
        "version": "0.4"
    },
    "cmsmenu-redirect": {
        "cmdline": [],
        "modules": [
            "cmsmenu_redirect",
            "cmsmenu_redirect.menu"
        ],
        "version": "0.1"
    },
    "cmsplugin-accordion": {
        "cmdline": [],
        "modules": [
            "cmsplugin_accordion",
            "cmsplugin_accordion.admin",
            "cmsplugin_accordion.cms_plugins",
            "cmsplugin_accordion.forms",
            "cmsplugin_accordion.migrations",
            "cmsplugin_accordion.migrations.0001_initial",
            "cmsplugin_accordion.models",
            "cmsplugin_accordion.tests",
            "cmsplugin_accordion.tests.cms_plugins_tests",
            "cmsplugin_accordion.tests.factories",
            "cmsplugin_accordion.tests.models_tests",
            "cmsplugin_accordion.tests.runtests",
            "cmsplugin_accordion.tests.south_settings",
            "cmsplugin_accordion.tests.test_app",
            "cmsplugin_accordion.tests.test_app.models",
            "cmsplugin_accordion.tests.test_settings",
            "cmsplugin_accordion.tests.urls",
            "cmsplugin_accordion.urls",
            "cmsplugin_accordion.views"
        ],
        "version": "0.2.2"
    },
    "cmsplugin-articles": {
        "cmdline": [],
        "modules": [
            "cmsplugin_articles",
            "cmsplugin_articles.admin",
            "cmsplugin_articles.cms_plugins",
            "cmsplugin_articles.cms_toolbar",
            "cmsplugin_articles.migrations",
            "cmsplugin_articles.migrations.0001_initial",
            "cmsplugin_articles.models",
            "cmsplugin_articles.settings",
            "cmsplugin_articles.south_migrations",
            "cmsplugin_articles.south_migrations.0001_initial",
            "cmsplugin_articles.south_migrations.0002_auto__add_teaserextension",
            "cmsplugin_articles.templatetags",
            "cmsplugin_articles.templatetags.article_tags"
        ],
        "version": "0.2.2"
    },
    "cmsplugin-articles-ai": {
        "cmdline": [],
        "modules": [
            "cmsplugin_articles_ai",
            "cmsplugin_articles_ai.admin",
            "cmsplugin_articles_ai.article_urls",
            "cmsplugin_articles_ai.cms_apps",
            "cmsplugin_articles_ai.cms_plugins",
            "cmsplugin_articles_ai.factories",
            "cmsplugin_articles_ai.management",
            "cmsplugin_articles_ai.management.commands",
            "cmsplugin_articles_ai.management.commands.publish_test_articles",
            "cmsplugin_articles_ai.migrations",
            "cmsplugin_articles_ai.migrations.0001_initial",
            "cmsplugin_articles_ai.migrations.0002_add_language_fields",
            "cmsplugin_articles_ai.migrations.0003_add_non_unique_slug_to_tags",
            "cmsplugin_articles_ai.migrations.0004_data_migration_for_slug_field",
            "cmsplugin_articles_ai.migrations.0005_make_tag_slug_field_unique",
            "cmsplugin_articles_ai.models",
            "cmsplugin_articles_ai.models.articles",
            "cmsplugin_articles_ai.models.plugin_models",
            "cmsplugin_articles_ai.models.tags",
            "cmsplugin_articles_ai.views"
        ],
        "version": "0.1.2"
    },
    "cmsplugin-blog": {
        "cmdline": [],
        "modules": [
            "cmsplugin_blog",
            "cmsplugin_blog.admin",
            "cmsplugin_blog.cms_app",
            "cmsplugin_blog.cms_plugins",
            "cmsplugin_blog.feeds",
            "cmsplugin_blog.middleware",
            "cmsplugin_blog.migrations",
            "cmsplugin_blog.migrations.0001_initial",
            "cmsplugin_blog.migrations.0002_auto__add_field_entry_pub_date",
            "cmsplugin_blog.migrations.0003_auto__add_field_entry_is_published",
            "cmsplugin_blog.migrations.0004_auto__add_pygmentsplugin",
            "cmsplugin_blog.migrations.0005_auto__add_latestentriesplugin",
            "cmsplugin_blog.migrations.0006_auto__add_field_entry_tags",
            "cmsplugin_blog.migrations.0007_auto__del_pygmentsplugin__chg_field_entry_tags",
            "cmsplugin_blog.migrations.0008_removed_placeholder",
            "cmsplugin_blog.migrations.0009_added_manytomany_to_placeholder",
            "cmsplugin_blog.migrations.0010_auto__add_unique_entrytitle_slug",
            "cmsplugin_blog.migrations.0011_auto__add_field_entrytitle_author",
            "cmsplugin_blog.migrations.0012_auto__chg_field_entrytitle_language",
            "cmsplugin_blog.migrations.0013_auto__chg_field_entrytitle_slug",
            "cmsplugin_blog.migrations.0014_auto__del_unique_entrytitle_slug__add_unique_entrytitle_slug_language",
            "cmsplugin_blog.migrations.0015_auto__add_field_latestentriesplug",
            "cmsplugin_blog.models",
            "cmsplugin_blog.simple_translate",
            "cmsplugin_blog.sitemaps",
            "cmsplugin_blog.templatetags",
            "cmsplugin_blog.templatetags.cmsplugin_blog_tags",
            "cmsplugin_blog.test",
            "cmsplugin_blog.test.run_tests",
            "cmsplugin_blog.test.testapp",
            "cmsplugin_blog.test.testapp.models",
            "cmsplugin_blog.test.testapp.urls",
            "cmsplugin_blog.test.testcases",
            "cmsplugin_blog.tests",
            "cmsplugin_blog.urls",
            "cmsplugin_blog.utils",
            "cmsplugin_blog.views",
            "cmsplugin_blog.widgets"
        ],
        "version": "1.1.2"
    },
    "cmsplugin-blog-attachments": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmsplugin-blog-authors": {
        "cmdline": [],
        "modules": [
            "cmsplugin_blog_authors",
            "cmsplugin_blog_authors.admin",
            "cmsplugin_blog_authors.migrations",
            "cmsplugin_blog_authors.migrations.0001_initial",
            "cmsplugin_blog_authors.models",
            "cmsplugin_blog_authors.tests",
            "cmsplugin_blog_authors.tests.factories",
            "cmsplugin_blog_authors.tests.models_tests",
            "cmsplugin_blog_authors.tests.runtests",
            "cmsplugin_blog_authors.tests.south_settings",
            "cmsplugin_blog_authors.tests.test_app",
            "cmsplugin_blog_authors.tests.test_app.models",
            "cmsplugin_blog_authors.tests.test_settings",
            "cmsplugin_blog_authors.tests.urls"
        ],
        "version": "0.1"
    },
    "cmsplugin-blog-categories": {
        "cmdline": [],
        "modules": [
            "cmsplugin_blog_categories",
            "cmsplugin_blog_categories.admin",
            "cmsplugin_blog_categories.cms_app",
            "cmsplugin_blog_categories.cms_plugins",
            "cmsplugin_blog_categories.migrations",
            "cmsplugin_blog_categories.migrations.0001_initial",
            "cmsplugin_blog_categories.migrations.0002_auto__add_categoryplugin",
            "cmsplugin_blog_categories.migrations.0003_auto__del_field_categoryplugin_category",
            "cmsplugin_blog_categories.migrations.0004_auto__del_unique_entrycategory_category_entry",
            "cmsplugin_blog_categories.migrations.0005_auto__add_field_categoryplugin_template_argument",
            "cmsplugin_blog_categories.migrations.0006_auto__add_field_category_parent",
            "cmsplugin_blog_categories.models",
            "cmsplugin_blog_categories.simple_translate",
            "cmsplugin_blog_categories.templatetags",
            "cmsplugin_blog_categories.templatetags.cmsplugin_blog_categories_tags",
            "cmsplugin_blog_categories.tests",
            "cmsplugin_blog_categories.tests.cmsplugin_tests",
            "cmsplugin_blog_categories.tests.factories",
            "cmsplugin_blog_categories.tests.models_tests",
            "cmsplugin_blog_categories.tests.runtests",
            "cmsplugin_blog_categories.tests.south_settings",
            "cmsplugin_blog_categories.tests.tags_tests",
            "cmsplugin_blog_categories.tests.test_app",
            "cmsplugin_blog_categories.tests.test_app.models",
            "cmsplugin_blog_categories.tests.test_settings",
            "cmsplugin_blog_categories.tests.urls",
            "cmsplugin_blog_categories.urls",
            "cmsplugin_blog_categories.views"
        ],
        "version": "0.7"
    },
    "cmsplugin-blog-images": {
        "cmdline": [],
        "modules": [
            "cmsplugin_blog_images",
            "cmsplugin_blog_images.admin",
            "cmsplugin_blog_images.migrations",
            "cmsplugin_blog_images.migrations.0001_initial",
            "cmsplugin_blog_images.models",
            "cmsplugin_blog_images.templatetags",
            "cmsplugin_blog_images.templatetags.cmsplugin_blog_images_tags",
            "cmsplugin_blog_images.tests",
            "cmsplugin_blog_images.tests.runtests",
            "cmsplugin_blog_images.tests.south_settings",
            "cmsplugin_blog_images.tests.test_app",
            "cmsplugin_blog_images.tests.test_app.models",
            "cmsplugin_blog_images.tests.test_settings",
            "cmsplugin_blog_images.tests.urls"
        ],
        "version": "0.1"
    },
    "cmsplugin-blog-language-publish": {
        "cmdline": [],
        "modules": [
            "cmsplugin_blog_language_publish",
            "cmsplugin_blog_language_publish.admin",
            "cmsplugin_blog_language_publish.migrations",
            "cmsplugin_blog_language_publish.migrations.0001_initial",
            "cmsplugin_blog_language_publish.models",
            "cmsplugin_blog_language_publish.templatetags",
            "cmsplugin_blog_language_publish.templatetags.cmsplugin_blog_language_publish_tags",
            "cmsplugin_blog_language_publish.tests",
            "cmsplugin_blog_language_publish.tests.cmsplugin_blog_language_publish_tags_tests",
            "cmsplugin_blog_language_publish.tests.factories",
            "cmsplugin_blog_language_publish.tests.models_tests",
            "cmsplugin_blog_language_publish.tests.runtests",
            "cmsplugin_blog_language_publish.tests.south_settings",
            "cmsplugin_blog_language_publish.tests.test_app",
            "cmsplugin_blog_language_publish.tests.test_app.models",
            "cmsplugin_blog_language_publish.tests.test_settings",
            "cmsplugin_blog_language_publish.tests.urls",
            "cmsplugin_blog_language_publish.urls"
        ],
        "version": "0.1.3"
    },
    "cmsplugin-blog-search": {
        "cmdline": [],
        "modules": [
            "cmsplugin_blog_search",
            "cmsplugin_blog_search.search_indexes"
        ],
        "version": "0.9"
    },
    "cmsplugin-blog-seo-addons": {
        "cmdline": [],
        "modules": [
            "cmsplugin_blog_seo_addons",
            "cmsplugin_blog_seo_addons.admin",
            "cmsplugin_blog_seo_addons.migrations",
            "cmsplugin_blog_seo_addons.migrations.0001_initial",
            "cmsplugin_blog_seo_addons.migrations.0002_auto__del_entryseoaddontranslation__add_seoaddontranslation__add_seoad",
            "cmsplugin_blog_seo_addons.models",
            "cmsplugin_blog_seo_addons.simple_translate",
            "cmsplugin_blog_seo_addons.templatetags",
            "cmsplugin_blog_seo_addons.templatetags.seo_addons_tags",
            "cmsplugin_blog_seo_addons.tests",
            "cmsplugin_blog_seo_addons.tests.factories",
            "cmsplugin_blog_seo_addons.tests.models_tests",
            "cmsplugin_blog_seo_addons.tests.runtests",
            "cmsplugin_blog_seo_addons.tests.seo_addons_tags_tests",
            "cmsplugin_blog_seo_addons.tests.south_settings",
            "cmsplugin_blog_seo_addons.tests.test_settings",
            "cmsplugin_blog_seo_addons.tests.urls"
        ],
        "version": "0.2.3"
    },
    "cmsplugin-bootstrap": {
        "cmdline": [],
        "modules": [
            "cmsplugin_bootstrap",
            "cmsplugin_bootstrap.migrations",
            "cmsplugin_bootstrap.migrations_django",
            "cmsplugin_bootstrap.templatetags",
            "cmsplugin_bootstrap.templatetags.bootstrap",
            "cmsplugin_bootstrap.utils",
            "cmsplugin_bootstrap_carousel",
            "cmsplugin_bootstrap_carousel.cms_plugins",
            "cmsplugin_bootstrap_carousel.migrations",
            "cmsplugin_bootstrap_carousel.migrations_django",
            "cmsplugin_bootstrap_carousel.migrations_django.0001_initial",
            "cmsplugin_bootstrap_carousel.migrations_django.0002_auto_20150402_1410",
            "cmsplugin_bootstrap_carousel.models",
            "cmsplugin_bootstrap_grid",
            "cmsplugin_bootstrap_grid.cms_plugins",
            "cmsplugin_bootstrap_grid.forms",
            "cmsplugin_bootstrap_grid.migrations",
            "cmsplugin_bootstrap_grid.migrations_django",
            "cmsplugin_bootstrap_grid.migrations_django.0001_initial",
            "cmsplugin_bootstrap_grid.models",
            "cmsplugin_bootstrap_grid.utils",
            "cmsplugin_bootstrap_section",
            "cmsplugin_bootstrap_section.cms_plugins",
            "cmsplugin_bootstrap_section.migrations",
            "cmsplugin_bootstrap_section.migrations_django",
            "cmsplugin_bootstrap_section.migrations_django.0001_initial",
            "cmsplugin_bootstrap_section.models"
        ],
        "version": "0.1"
    },
    "cmsplugin-bootstrap-carousel": {
        "cmdline": [],
        "modules": [
            "cmsplugin_bootstrap_carousel",
            "cmsplugin_bootstrap_carousel.cms_plugins",
            "cmsplugin_bootstrap_carousel.migrations",
            "cmsplugin_bootstrap_carousel.migrations.0001_initial",
            "cmsplugin_bootstrap_carousel.migrations.0002_auto__add_field_carousel_show_controls__add_field_carousel_show_indica",
            "cmsplugin_bootstrap_carousel.models",
            "cmsplugin_bootstrap_carousel.models_default",
            "cmsplugin_bootstrap_carousel.models_filer",
            "tests",
            "tests.settings"
        ],
        "version": "0.2.2"
    },
    "cmsplugin-carousel": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmsplugin-carousel-ai": {
        "cmdline": [],
        "modules": [
            "cmsplugin_carousel_ai",
            "cmsplugin_carousel_ai.cms_plugins",
            "cmsplugin_carousel_ai.migrations",
            "cmsplugin_carousel_ai.migrations.0001_initial",
            "cmsplugin_carousel_ai.migrations.0002_add_call_to_action_label_for_slides",
            "cmsplugin_carousel_ai.models"
        ],
        "version": "0.0.2"
    },
    "cmsplugin-catalog": {
        "cmdline": [],
        "modules": [
            "cmsplugin_catalog",
            "cmsplugin_catalog.admin",
            "cmsplugin_catalog.cms_plugins",
            "cmsplugin_catalog.cms_toolbar",
            "cmsplugin_catalog.migrations",
            "cmsplugin_catalog.migrations.0001_initial",
            "cmsplugin_catalog.models",
            "cmsplugin_catalog.south_migrations",
            "cmsplugin_catalog.south_migrations.0001_initial",
            "cmsplugin_catalog.templatetags",
            "cmsplugin_catalog.templatetags.catalog_tags",
            "tests",
            "tests.settings",
            "tests.settings_17",
            "tests.settings_south",
            "tests.test_models",
            "tests.urls"
        ],
        "version": "0.1"
    },
    "cmsplugin-collapse": {
        "cmdline": [],
        "modules": [
            "cmsplugin_collapse",
            "cmsplugin_collapse.cms_plugins",
            "cmsplugin_collapse.migrations",
            "cmsplugin_collapse.migrations.0001_initial",
            "cmsplugin_collapse.migrations.0002_auto_20160210_0651",
            "cmsplugin_collapse.migrations.0003_auto_20160210_0656",
            "cmsplugin_collapse.migrations.0004_update_related_name",
            "cmsplugin_collapse.models",
            "cmsplugin_collapse.south_migrations",
            "cmsplugin_collapse.south_migrations.0001_initial",
            "cmsplugin_collapse.tests"
        ],
        "version": "0.4.0"
    },
    "cmsplugin-comments": {
        "cmdline": [],
        "modules": [
            "cmsplugin_comments",
            "cmsplugin_comments.admin",
            "cmsplugin_comments.cms_plugins",
            "cmsplugin_comments.forms",
            "cmsplugin_comments.migrations",
            "cmsplugin_comments.migrations.0001_init",
            "cmsplugin_comments.migrations.0002_auto__add_field_discussion_enable_comments",
            "cmsplugin_comments.models"
        ],
        "version": "0.1"
    },
    "cmsplugin-configurableproduct": {
        "cmdline": [],
        "modules": [
            "cmsplugin_configurableproduct",
            "cmsplugin_configurableproduct.cms_plugins",
            "cmsplugin_configurableproduct.forms",
            "cmsplugin_configurableproduct.lib",
            "cmsplugin_configurableproduct.lib.choices",
            "cmsplugin_configurableproduct.lib.formatting",
            "cmsplugin_configurableproduct.migrations",
            "cmsplugin_configurableproduct.migrations.0001_initial",
            "cmsplugin_configurableproduct.models"
        ],
        "version": "0.0.11"
    },
    "cmsplugin-contact": {
        "cmdline": [],
        "modules": [
            "cmsplugin_contact",
            "cmsplugin_contact.admin",
            "cmsplugin_contact.cms_plugins",
            "cmsplugin_contact.forms",
            "cmsplugin_contact.middleware",
            "cmsplugin_contact.migrations",
            "cmsplugin_contact.migrations.0001_initial",
            "cmsplugin_contact.migrations.0002_auto__chg_field_contact_thanks",
            "cmsplugin_contact.migrations.0003_auto__add_field_contact_form_name",
            "cmsplugin_contact.migrations.0004_add_field_Contact_form_layout",
            "cmsplugin_contact.migrations.0005_auto__del_field_contact_content_label__del_field_contact_subject_label",
            "cmsplugin_contact.migrations.0006_fix_table_names",
            "cmsplugin_contact.migrations.0007_add_url_field",
            "cmsplugin_contact.migrations_django",
            "cmsplugin_contact.migrations_django.0001_initial",
            "cmsplugin_contact.models",
            "cmsplugin_contact.nospam",
            "cmsplugin_contact.nospam.fields",
            "cmsplugin_contact.nospam.forms",
            "cmsplugin_contact.nospam.utils",
            "cmsplugin_contact.nospam.widgets",
            "cmsplugin_contact.settings",
            "cmsplugin_contact.utils"
        ],
        "version": "1.1.2"
    },
    "cmsplugin-contact-plus": {
        "cmdline": [],
        "modules": [
            "cmsplugin_contact_plus",
            "cmsplugin_contact_plus.actions",
            "cmsplugin_contact_plus.admin",
            "cmsplugin_contact_plus.apps",
            "cmsplugin_contact_plus.checks",
            "cmsplugin_contact_plus.cms_plugins",
            "cmsplugin_contact_plus.forms",
            "cmsplugin_contact_plus.local_settings",
            "cmsplugin_contact_plus.migrations",
            "cmsplugin_contact_plus.migrations.0001_initial",
            "cmsplugin_contact_plus.migrations.0002_auto_20151013_1157",
            "cmsplugin_contact_plus.migrations.0003_auto_20161102_1927",
            "cmsplugin_contact_plus.migrations.0004_auto_20170410_1553",
            "cmsplugin_contact_plus.models",
            "cmsplugin_contact_plus.signals",
            "cmsplugin_contact_plus.south_migrations",
            "cmsplugin_contact_plus.utils"
        ],
        "version": "1.3.11"
    },
    "cmsplugin-container": {
        "cmdline": [],
        "modules": [
            "cmsplugin_container",
            "cmsplugin_container.admin",
            "cmsplugin_container.cms_plugins",
            "cmsplugin_container.migrations",
            "cmsplugin_container.migrations.0001_initial",
            "cmsplugin_container.models",
            "cmsplugin_container.tests",
            "cmsplugin_container.views"
        ],
        "version": "1.1.2"
    },
    "cmsplugin-css-background": {
        "cmdline": [],
        "modules": [
            "cmsplugin_css_background",
            "cmsplugin_css_background.cms_plugins",
            "cmsplugin_css_background.migrations",
            "cmsplugin_css_background.migrations.0001_initial",
            "cmsplugin_css_background.migrations.0002_filercssbackground",
            "cmsplugin_css_background.models"
        ],
        "version": "0.1.0"
    },
    "cmsplugin-demo": {
        "cmdline": [],
        "modules": [
            "cmsplugin_demo",
            "cmsplugin_demo.admin",
            "cmsplugin_demo.cms_plugins",
            "cmsplugin_demo.forms",
            "cmsplugin_demo.migrations",
            "cmsplugin_demo.migrations.0001_initial",
            "cmsplugin_demo.models",
            "cmsplugin_demo.nospam",
            "cmsplugin_demo.nospam.fields",
            "cmsplugin_demo.nospam.forms",
            "cmsplugin_demo.nospam.utils",
            "cmsplugin_demo.nospam.widgets",
            "cmsplugin_demo.settings",
            "cmsplugin_demo.utils"
        ],
        "version": "1.0.9"
    },
    "cmsplugin-disqus": {
        "cmdline": [],
        "modules": [
            "cmsplugin_disqus",
            "cmsplugin_disqus.cms_plugins",
            "cmsplugin_disqus.migrations",
            "cmsplugin_disqus.migrations.0001_initial",
            "cmsplugin_disqus.models"
        ],
        "version": "1.0"
    },
    "cmsplugin-django-outlets": {
        "cmdline": [],
        "modules": [
            "cmsplugin_outlets",
            "cmsplugin_outlets.cms_app",
            "cmsplugin_outlets.menu",
            "cmsplugin_outlets.models",
            "cmsplugin_outlets.tests",
            "cmsplugin_outlets.tests.settings",
            "cmsplugin_outlets.tests.test_settings",
            "cmsplugin_outlets.tests.urls"
        ],
        "version": "0.2"
    },
    "cmsplugin-embedded-menu": {
        "cmdline": [],
        "modules": [
            "cmsplugin_embeddedmenu",
            "cmsplugin_embeddedmenu.cms_plugins",
            "cmsplugin_embeddedmenu.lib",
            "cmsplugin_embeddedmenu.lib.choices",
            "cmsplugin_embeddedmenu.lib.formatting",
            "cmsplugin_embeddedmenu.migrations",
            "cmsplugin_embeddedmenu.migrations.0001_initial",
            "cmsplugin_embeddedmenu.migrations.0002_auto__add_field_menupluginsettings_template",
            "cmsplugin_embeddedmenu.migrations.0003_auto__del_field_menupluginsettings_template__add_field_menupluginsetti",
            "cmsplugin_embeddedmenu.migrations.0004_auto__del_field_menupluginsettings_menu_template__add_field_menuplugin",
            "cmsplugin_embeddedmenu.migrations.0005_auto__add_field_menupluginsettings_include_root",
            "cmsplugin_embeddedmenu.models"
        ],
        "version": "0.0.7"
    },
    "cmsplugin-embedded-pages": {
        "cmdline": [],
        "modules": [
            "cmsplugin_embeddedpages",
            "cmsplugin_embeddedpages.cms_plugins",
            "cmsplugin_embeddedpages.forms",
            "cmsplugin_embeddedpages.lib",
            "cmsplugin_embeddedpages.lib.choices",
            "cmsplugin_embeddedpages.lib.formatting",
            "cmsplugin_embeddedpages.migrations",
            "cmsplugin_embeddedpages.migrations.0001_initial",
            "cmsplugin_embeddedpages.migrations.0002_auto__add_field_pagepluginsettings_placeholders",
            "cmsplugin_embeddedpages.migrations.0003_auto__del_field_pagepluginsettings_placeholders",
            "cmsplugin_embeddedpages.migrations.0004_auto__add_field_pagepluginsettings_depth",
            "cmsplugin_embeddedpages.migrations.0005_auto__del_field_pagepluginsettings_template__add_field_pagepluginsetti",
            "cmsplugin_embeddedpages.models"
        ],
        "version": "0.0.4"
    },
    "cmsplugin-eviscape": {
        "cmdline": [],
        "modules": [
            "cmsplugin_eviscape",
            "cmsplugin_eviscape.cms_plugins",
            "cmsplugin_eviscape.migrations",
            "cmsplugin_eviscape.migrations.0001_initial",
            "cmsplugin_eviscape.migrations.0002_auto__add_field_eviscapeinstance_evis_type",
            "cmsplugin_eviscape.migrations.0003_auto__add_field_eviscapeinstance_limit",
            "cmsplugin_eviscape.migrations.0004_auto__add_field_eviscapeinstance_title",
            "cmsplugin_eviscape.models",
            "cmsplugin_eviscape.tests",
            "cmsplugin_eviscape.views"
        ],
        "version": "0.9.3"
    },
    "cmsplugin-facebook": {
        "cmdline": [],
        "modules": [
            "cmsplugin_facebook",
            "cmsplugin_facebook.cms_plugins",
            "cmsplugin_facebook.migrations",
            "cmsplugin_facebook.migrations.0001_initial",
            "cmsplugin_facebook.migrations.0002_auto__add_field_facebooklikebox_transparent",
            "cmsplugin_facebook.models"
        ],
        "version": "0.2.0"
    },
    "cmsplugin-fb-agenda": {
        "cmdline": [],
        "modules": [
            "cmsplugin_fb_agenda",
            "cmsplugin_fb_agenda.cms_plugins",
            "cmsplugin_fb_agenda.migrations",
            "cmsplugin_fb_agenda.migrations.0001_initial",
            "cmsplugin_fb_agenda.migrations.0002_auto__add_field_fbagendaplugin_count",
            "cmsplugin_fb_agenda.models",
            "cmsplugin_fb_agenda.settings"
        ],
        "version": "0.2"
    },
    "cmsplugin-fb-graph": {
        "cmdline": [],
        "modules": [
            "cmsplugin_fb_graph",
            "cmsplugin_fb_graph.cms_plugins",
            "cmsplugin_fb_graph.migrations",
            "cmsplugin_fb_graph.migrations.0001_initial",
            "cmsplugin_fb_graph.models",
            "cmsplugin_fb_graph.settings"
        ],
        "version": "0.3"
    },
    "cmsplugin-fbalbum": {
        "cmdline": [],
        "modules": [
            "cmsplugin_fbalbum",
            "cmsplugin_fbalbum.cms_plugins",
            "cmsplugin_fbalbum.models"
        ],
        "version": "0.5.7"
    },
    "cmsplugin-fbalbumlight": {
        "cmdline": [],
        "modules": [
            "cmsplugin_fbalbumlight",
            "cmsplugin_fbalbumlight.cms_plugins",
            "cmsplugin_fbalbumlight.models"
        ],
        "version": "1.0.2"
    },
    "cmsplugin-fbgallery": {
        "cmdline": [],
        "modules": [
            "cmsplugin_fbgallery",
            "cmsplugin_fbgallery.admin",
            "cmsplugin_fbgallery.cms_plugins",
            "cmsplugin_fbgallery.facebook",
            "cmsplugin_fbgallery.migrations",
            "cmsplugin_fbgallery.migrations.0001_initial",
            "cmsplugin_fbgallery.migrations.0002_rename_table",
            "cmsplugin_fbgallery.models",
            "cmsplugin_fbgallery.tests",
            "cmsplugin_fbgallery.views"
        ],
        "version": "1.1.0"
    },
    "cmsplugin-feed-ai": {
        "cmdline": [],
        "modules": [
            "cmsplugin_feed_ai",
            "cmsplugin_feed_ai.cms_plugins",
            "cmsplugin_feed_ai.feed",
            "cmsplugin_feed_ai.management",
            "cmsplugin_feed_ai.management.commands",
            "cmsplugin_feed_ai.management.commands.test_social_feeds",
            "cmsplugin_feed_ai.migrations",
            "cmsplugin_feed_ai.migrations.0001_initial",
            "cmsplugin_feed_ai.models",
            "cmsplugin_feed_ai.providers",
            "cmsplugin_feed_ai.providers.common",
            "cmsplugin_feed_ai.providers.exceptions",
            "cmsplugin_feed_ai.providers.facebook",
            "cmsplugin_feed_ai.providers.twitter",
            "cmsplugin_feed_ai.utils"
        ],
        "version": "0.0.1"
    },
    "cmsplugin-feedback": {
        "cmdline": [],
        "modules": [
            "cmsplugin_feedback",
            "cmsplugin_feedback.admin",
            "cmsplugin_feedback.cms_plugins",
            "cmsplugin_feedback.forms",
            "cmsplugin_feedback.migrations",
            "cmsplugin_feedback.migrations.0001_initial",
            "cmsplugin_feedback.models",
            "cmsplugin_feedback.settings",
            "cmsplugin_feedback.signals",
            "cmsplugin_feedback.south_migrations",
            "cmsplugin_feedback.south_migrations.0001_initial",
            "cmsplugin_feedback.south_migrations.0002_auto__del_field_feedbackplugin_title",
            "cmsplugin_feedback.south_migrations.0003_auto__del_field_feedbackplugin_submit",
            "cmsplugin_feedback.south_migrations.0004_auto__del_field_feedbackplugin_ok_message",
            "cmsplugin_feedback.templatetags",
            "cmsplugin_feedback.templatetags.feedback_tags",
            "cmsplugin_feedback.urls",
            "cmsplugin_feedback.views"
        ],
        "version": "0.3.1"
    },
    "cmsplugin-feedparser": {
        "cmdline": [],
        "modules": [
            "cmsplugin_feedparser",
            "cmsplugin_feedparser.cms_plugins",
            "cmsplugin_feedparser.migrations",
            "cmsplugin_feedparser.migrations.0001_initial",
            "cmsplugin_feedparser.migrations.0002_update_related_name",
            "cmsplugin_feedparser.models",
            "cmsplugin_feedparser.settings",
            "cmsplugin_feedparser.south_migrations",
            "cmsplugin_feedparser.south_migrations.0001_initial"
        ],
        "version": "0.3.0"
    },
    "cmsplugin-file": {
        "cmdline": [],
        "modules": [
            "cmsplugin_file",
            "cmsplugin_file.cms_plugins",
            "cmsplugin_file.migrations",
            "cmsplugin_file.migrations.0001_initial",
            "cmsplugin_file.migrations.0002_freeze",
            "cmsplugin_file.migrations.0003_publisher",
            "cmsplugin_file.migrations.0004_table_rename",
            "cmsplugin_file.migrations.0005_publisher2",
            "cmsplugin_file.models"
        ],
        "version": "1.0.0"
    },
    "cmsplugin-filer": {
        "cmdline": [],
        "modules": [
            "cmsplugin_filer_file",
            "cmsplugin_filer_file.cms_plugins",
            "cmsplugin_filer_file.conf",
            "cmsplugin_filer_file.forms",
            "cmsplugin_filer_file.migrations",
            "cmsplugin_filer_file.migrations.0001_initial",
            "cmsplugin_filer_file.migrations.0002_auto_20160112_1617",
            "cmsplugin_filer_file.migrations.0003_filerfile_link_attributes",
            "cmsplugin_filer_file.migrations.0004_auto_20160705_1334",
            "cmsplugin_filer_file.migrations.0005_auto_20160713_1853",
            "cmsplugin_filer_file.models",
            "cmsplugin_filer_file.tests",
            "cmsplugin_filer_folder",
            "cmsplugin_filer_folder.admin",
            "cmsplugin_filer_folder.cms_plugins",
            "cmsplugin_filer_folder.conf",
            "cmsplugin_filer_folder.migrations",
            "cmsplugin_filer_folder.migrations.0001_initial",
            "cmsplugin_filer_folder.migrations.0002_auto_20160113_1318",
            "cmsplugin_filer_folder.migrations.0003_auto_20160713_1853",
            "cmsplugin_filer_folder.models",
            "cmsplugin_filer_folder.tests",
            "cmsplugin_filer_image",
            "cmsplugin_filer_image.apps",
            "cmsplugin_filer_image.cms_plugins",
            "cmsplugin_filer_image.conf",
            "cmsplugin_filer_image.forms",
            "cmsplugin_filer_image.integrations",
            "cmsplugin_filer_image.integrations.ckeditor",
            "cmsplugin_filer_image.migrations",
            "cmsplugin_filer_image.migrations.0001_initial",
            "cmsplugin_filer_image.migrations.0002_auto_20160108_1708",
            "cmsplugin_filer_image.migrations.0003_mv_thumbnail_option_to_filer_20160119_1720",
            "cmsplugin_filer_image.migrations.0004_auto_20160120_0950",
            "cmsplugin_filer_image.migrations.0005_auto_20160224_1457",
            "cmsplugin_filer_image.migrations.0006_auto_20160427_1438",
            "cmsplugin_filer_image.migrations.0007_filerimage_link_attributes",
            "cmsplugin_filer_image.migrations.0008_auto_20160705_1334",
            "cmsplugin_filer_image.migrations.0009_auto_20160713_1853",
            "cmsplugin_filer_image.models",
            "cmsplugin_filer_image.tests",
            "cmsplugin_filer_link",
            "cmsplugin_filer_link.cms_plugins",
            "cmsplugin_filer_link.forms",
            "cmsplugin_filer_link.migrations",
            "cmsplugin_filer_link.migrations.0001_initial",
            "cmsplugin_filer_link.migrations.0002_auto_20160108_1710",
            "cmsplugin_filer_link.migrations.0003_auto_20160224_1453",
            "cmsplugin_filer_link.migrations.0004_auto_20160224_1457",
            "cmsplugin_filer_link.migrations.0005_filerlinkplugin_link_attributes",
            "cmsplugin_filer_link.migrations.0006_auto_20160705_1334",
            "cmsplugin_filer_link.migrations.0007_auto_20160713_1853",
            "cmsplugin_filer_link.models",
            "cmsplugin_filer_link.tests",
            "cmsplugin_filer_teaser",
            "cmsplugin_filer_teaser.cms_plugins",
            "cmsplugin_filer_teaser.conf",
            "cmsplugin_filer_teaser.migrations",
            "cmsplugin_filer_teaser.migrations.0001_initial",
            "cmsplugin_filer_teaser.migrations.0002_auto_20160108_1712",
            "cmsplugin_filer_teaser.migrations.0003_auto_20160713_1853",
            "cmsplugin_filer_teaser.models",
            "cmsplugin_filer_teaser.tests",
            "cmsplugin_filer_tests_shared",
            "cmsplugin_filer_tests_shared.base",
            "cmsplugin_filer_utils",
            "cmsplugin_filer_utils.migration",
            "cmsplugin_filer_video",
            "cmsplugin_filer_video.cms_plugins",
            "cmsplugin_filer_video.forms",
            "cmsplugin_filer_video.migrations",
            "cmsplugin_filer_video.migrations.0001_initial",
            "cmsplugin_filer_video.migrations.0002_auto_20160108_1710",
            "cmsplugin_filer_video.migrations.0003_auto_20160713_1853",
            "cmsplugin_filer_video.models",
            "cmsplugin_filer_video.settings",
            "cmsplugin_filer_video.templatetags",
            "cmsplugin_filer_video.templatetags.cmsplugin_filer_js_tmp",
            "cmsplugin_filer_video.tests"
        ],
        "version": "1.1.3"
    },
    "cmsplugin-filer-album": {
        "cmdline": [],
        "modules": [
            "cmsplugin_filer_album",
            "cmsplugin_filer_album.cms_plugins",
            "cmsplugin_filer_album.models"
        ],
        "version": "0.0.5"
    },
    "cmsplugin-filer-audio": {
        "cmdline": [],
        "modules": [
            "cmsplugin_filer_audio",
            "cmsplugin_filer_audio.cms_plugins",
            "cmsplugin_filer_audio.migrations",
            "cmsplugin_filer_audio.migrations.0001_initial",
            "cmsplugin_filer_audio.models"
        ],
        "version": "0.2"
    },
    "cmsplugin-filer-gallery": {
        "cmdline": [],
        "modules": [
            "cmsplugin_filer_gallery",
            "cmsplugin_filer_gallery.cms_app",
            "cmsplugin_filer_gallery.cms_plugins",
            "cmsplugin_filer_gallery.models",
            "cmsplugin_filer_gallery.test",
            "cmsplugin_filer_gallery.test.run_tests",
            "cmsplugin_filer_gallery.test.testapp",
            "cmsplugin_filer_gallery.test.testapp.models",
            "cmsplugin_filer_gallery.test.testapp.urls"
        ],
        "version": "1.0.1.pre-alpha"
    },
    "cmsplugin-filer-html5video": {
        "cmdline": [],
        "modules": [
            "cmsplugin_filer_html5video",
            "cmsplugin_filer_html5video.cms_plugins",
            "cmsplugin_filer_html5video.migrations",
            "cmsplugin_filer_html5video.migrations.0001_initial",
            "cmsplugin_filer_html5video.models",
            "cmsplugin_filer_html5video.plugin_settings"
        ],
        "version": "0.1"
    },
    "cmsplugin-filer-image-translated": {
        "cmdline": [],
        "modules": [
            "cmsplugin_filer_image_translated",
            "cmsplugin_filer_image_translated.admin",
            "cmsplugin_filer_image_translated.migrations",
            "cmsplugin_filer_image_translated.migrations.0001_initial",
            "cmsplugin_filer_image_translated.migrations.0002_create_translation_for_all_images",
            "cmsplugin_filer_image_translated.migrations.0003_temporarily_rename_translation_model",
            "cmsplugin_filer_image_translated.migrations.0004_auto__add_imagetranslationtranslation__add_unique_imagetranslationtran",
            "cmsplugin_filer_image_translated.migrations.0005_move_data_from_simpletrans_to_hvad",
            "cmsplugin_filer_image_translated.migrations.0006_auto__del_imagetranslationrenamed",
            "cmsplugin_filer_image_translated.models",
            "cmsplugin_filer_image_translated.settings",
            "cmsplugin_filer_image_translated.settings.app_settings",
            "cmsplugin_filer_image_translated.settings.test_settings",
            "cmsplugin_filer_image_translated.tests",
            "cmsplugin_filer_image_translated.tests.factories",
            "cmsplugin_filer_image_translated.tests.models_tests",
            "cmsplugin_filer_image_translated.tests.test_app",
            "cmsplugin_filer_image_translated.tests.test_app.urls",
            "cmsplugin_filer_image_translated.views",
            "fabfile",
            "fabfile.local"
        ],
        "version": "0.2"
    },
    "cmsplugin-filery": {
        "cmdline": [],
        "modules": [
            "cmsplugin_filery",
            "cmsplugin_filery.admin",
            "cmsplugin_filery.cms_plugins",
            "cmsplugin_filery.migrations",
            "cmsplugin_filery.migrations.0001_initial",
            "cmsplugin_filery.models"
        ],
        "version": "1.0.1"
    },
    "cmsplugin-flexiblevideo": {
        "cmdline": [],
        "modules": [
            "cmsplugin_flexiblevideo",
            "cmsplugin_flexiblevideo.cms_plugins",
            "cmsplugin_flexiblevideo.migrations",
            "cmsplugin_flexiblevideo.migrations.0001_initial",
            "cmsplugin_flexiblevideo.models",
            "cmsplugin_flexiblevideo.tests",
            "cmsplugin_flexiblevideo.views"
        ],
        "version": "0.0.9"
    },
    "cmsplugin-flickr": {
        "cmdline": [],
        "modules": [
            "cmsplugin_flickr",
            "cmsplugin_flickr.cms_plugins",
            "cmsplugin_flickr.models"
        ],
        "version": "0.1.2.1"
    },
    "cmsplugin-flickr-player": {
        "cmdline": [],
        "modules": [
            "cmsplugin_flickr_player",
            "cmsplugin_flickr_player.cms_plugins",
            "cmsplugin_flickr_player.forms",
            "cmsplugin_flickr_player.migrations",
            "cmsplugin_flickr_player.migrations.0001_initial",
            "cmsplugin_flickr_player.migrations.0002_auto__chg_field_flickrlink_width__chg_field_flickrlink_height",
            "cmsplugin_flickr_player.models"
        ],
        "version": "0.2.9.8"
    },
    "cmsplugin-flickr-slideshow": {
        "cmdline": [],
        "modules": [
            "cmsplugin_flickr_slideshow",
            "cmsplugin_flickr_slideshow.cms_plugins",
            "cmsplugin_flickr_slideshow.migrations",
            "cmsplugin_flickr_slideshow.migrations.0001_initial",
            "cmsplugin_flickr_slideshow.models",
            "cmsplugin_flickr_slideshow.settings",
            "cmsplugin_flickr_slideshow.test"
        ],
        "version": "0.1"
    },
    "cmsplugin-footnote": {
        "cmdline": [],
        "modules": [
            "cmsplugin_footnote",
            "cmsplugin_footnote.cms_plugins",
            "cmsplugin_footnote.migrations",
            "cmsplugin_footnote.migrations.0001_initial",
            "cmsplugin_footnote.models",
            "cmsplugin_footnote.settings",
            "cmsplugin_footnote.south_migrations",
            "cmsplugin_footnote.south_migrations.0001_initial",
            "cmsplugin_footnote.templatetags",
            "cmsplugin_footnote.templatetags.footnote",
            "cmsplugin_footnote.utils"
        ],
        "version": "0.3.5"
    },
    "cmsplugin-form-handler": {
        "cmdline": [],
        "modules": [
            "cmsplugin_form_handler",
            "cmsplugin_form_handler.cms_plugins",
            "cmsplugin_form_handler.forms",
            "cmsplugin_form_handler.templatetags",
            "cmsplugin_form_handler.templatetags.cmsplugin_form_tags",
            "cmsplugin_form_handler.urls",
            "cmsplugin_form_handler.views"
        ],
        "version": "0.1.3"
    },
    "cmsplugin-forms-builder": {
        "cmdline": [],
        "modules": [
            "cmsplugin_forms_builder",
            "cmsplugin_forms_builder.cms_plugins",
            "cmsplugin_forms_builder.migrations",
            "cmsplugin_forms_builder.migrations.0001_initial",
            "cmsplugin_forms_builder.migrations.0002_update_related_name",
            "cmsplugin_forms_builder.models",
            "cmsplugin_forms_builder.south_migrations",
            "cmsplugin_forms_builder.south_migrations.0001_initial",
            "cmsplugin_forms_builder.tests"
        ],
        "version": "1.1.0"
    },
    "cmsplugin-frequently": {
        "cmdline": [],
        "modules": [
            "cmsplugin_frequently",
            "cmsplugin_frequently.cms_plugins",
            "cmsplugin_frequently.management",
            "cmsplugin_frequently.management.commands",
            "cmsplugin_frequently.management.commands.migrate_to_frequently_v1",
            "cmsplugin_frequently.migrations",
            "cmsplugin_frequently.migrations.0001_initial",
            "cmsplugin_frequently.models",
            "cmsplugin_frequently.south_migrations",
            "cmsplugin_frequently.south_migrations.0001_initial",
            "cmsplugin_frequently.tests",
            "cmsplugin_frequently.tests.cms_plugins_tests",
            "cmsplugin_frequently.tests.settings",
            "cmsplugin_frequently.tests.test_app",
            "cmsplugin_frequently.tests.test_app.models",
            "cmsplugin_frequently.tests.test_settings",
            "cmsplugin_frequently.tests.urls"
        ],
        "version": "0.2"
    },
    "cmsplugin-gallery": {
        "cmdline": [],
        "modules": [
            "cmsplugin_gallery",
            "cmsplugin_gallery.admin",
            "cmsplugin_gallery.cms_plugins",
            "cmsplugin_gallery.forms",
            "cmsplugin_gallery.migrations",
            "cmsplugin_gallery.migrations.0001_initial",
            "cmsplugin_gallery.models",
            "cmsplugin_gallery.settings",
            "cmsplugin_gallery.utils"
        ],
        "version": "0.6.3"
    },
    "cmsplugin-gallery-filer": {
        "cmdline": [],
        "modules": [
            "cmsplugin_gallery",
            "cmsplugin_gallery.admin",
            "cmsplugin_gallery.cms_plugins",
            "cmsplugin_gallery.forms",
            "cmsplugin_gallery.migrations",
            "cmsplugin_gallery.migrations.0001_initial",
            "cmsplugin_gallery.migrations.0002_auto__add_field_galleryplugin_template",
            "cmsplugin_gallery.migrations.0003_move_images_to_media_path",
            "cmsplugin_gallery.migrations.0004_auto__add_field_image_src_new",
            "cmsplugin_gallery.migrations.0005_migrate_to_filer",
            "cmsplugin_gallery.migrations.0006_auto__del_field_image_src",
            "cmsplugin_gallery.migrations.0007_rename_src_new_to_src",
            "cmsplugin_gallery.models",
            "cmsplugin_gallery.settings",
            "cmsplugin_gallery.utils"
        ],
        "version": "0.5.2.1"
    },
    "cmsplugin-getthecode": {
        "cmdline": [],
        "modules": [
            "cmsplugin_getthecode",
            "cmsplugin_getthecode.cms_plugins",
            "cmsplugin_getthecode.migrations",
            "cmsplugin_getthecode.migrations.0001_initial",
            "cmsplugin_getthecode.migrations.0002_auto_20161025_2002",
            "cmsplugin_getthecode.models"
        ],
        "version": "0.1.0"
    },
    "cmsplugin-googleform": {
        "cmdline": [],
        "modules": [
            "cmsplugin_googleform",
            "cmsplugin_googleform.cms_plugins",
            "cmsplugin_googleform.migrations",
            "cmsplugin_googleform.migrations.0001_initial",
            "cmsplugin_googleform.migrations.0002_add_dimensions",
            "cmsplugin_googleform.models"
        ],
        "version": "0.1"
    },
    "cmsplugin-googlegroups-widgets": {
        "cmdline": [],
        "modules": [
            "cmsplugin_googlegroups_widgets",
            "cmsplugin_googlegroups_widgets.admin",
            "cmsplugin_googlegroups_widgets.cms_plugins",
            "cmsplugin_googlegroups_widgets.models"
        ],
        "version": "0.1"
    },
    "cmsplugin-googlemap": {
        "cmdline": [],
        "modules": [
            "cmsplugin_googlemap",
            "cmsplugin_googlemap.cms_plugins",
            "cmsplugin_googlemap.forms",
            "cmsplugin_googlemap.migrations",
            "cmsplugin_googlemap.migrations.0001_initial",
            "cmsplugin_googlemap.models",
            "cmsplugin_googlemap.tests",
            "cmsplugin_googlemap.tests.runtests",
            "cmsplugin_googlemap.tests.south_settings",
            "cmsplugin_googlemap.tests.test_settings",
            "cmsplugin_googlemap.tests.urls"
        ],
        "version": "0.1.5"
    },
    "cmsplugin-googleplus": {
        "cmdline": [],
        "modules": [
            "cmsplugin_googleplus",
            "cmsplugin_googleplus.cms_plugins",
            "cmsplugin_googleplus.conf",
            "cmsplugin_googleplus.globals",
            "cmsplugin_googleplus.googleplus",
            "cmsplugin_googleplus.migrations",
            "cmsplugin_googleplus.migrations.0001_initial",
            "cmsplugin_googleplus.migrations.0002_add_google_api_key",
            "cmsplugin_googleplus.migrations.0003_alter_cmsplugin_ptr",
            "cmsplugin_googleplus.models",
            "cmsplugin_googleplus.tests",
            "cmsplugin_googleplus.tests.base",
            "cmsplugin_googleplus.tests.example_project",
            "cmsplugin_googleplus.tests.example_project.urls",
            "cmsplugin_googleplus.tests.test_cms_plugins",
            "cmsplugin_googleplus.tests.test_googleplus",
            "cmsplugin_googleplus.tests.test_models"
        ],
        "version": "0.7.0"
    },
    "cmsplugin-header-control": {
        "cmdline": [],
        "modules": [
            "cmsplugin_header_control",
            "cmsplugin_header_control.admin",
            "cmsplugin_header_control.cms_plugins",
            "cmsplugin_header_control.migrations",
            "cmsplugin_header_control.migrations.0001_initial",
            "cmsplugin_header_control.models"
        ],
        "version": "0.1.0"
    },
    "cmsplugin-hoverimage": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmsplugin-htmlsitemap": {
        "cmdline": [],
        "modules": [
            "cmsplugin_htmlsitemap",
            "cmsplugin_htmlsitemap.cms_plugins",
            "cmsplugin_htmlsitemap.migrations",
            "cmsplugin_htmlsitemap.migrations.0001_initial",
            "cmsplugin_htmlsitemap.migrations.0002_auto__add_field_htmlsitemap_match_language",
            "cmsplugin_htmlsitemap.models"
        ],
        "version": "0.1.4"
    },
    "cmsplugin-iconlist": {
        "cmdline": [],
        "modules": [
            "cmsplugin_iconlist",
            "cmsplugin_iconlist.cms_plugins",
            "cmsplugin_iconlist.models",
            "cmsplugin_iconlist.tests"
        ],
        "version": "0.1.0b2"
    },
    "cmsplugin-iframe": {
        "cmdline": [],
        "modules": [
            "cmsplugin_iframe",
            "cmsplugin_iframe.cms_plugins",
            "cmsplugin_iframe.forms",
            "cmsplugin_iframe.migrations",
            "cmsplugin_iframe.migrations.0001_initial",
            "cmsplugin_iframe.models",
            "cmsplugin_iframe.south_migrations",
            "cmsplugin_iframe.south_migrations.0001_initial"
        ],
        "version": "0.1.5"
    },
    "cmsplugin-iframe2": {
        "cmdline": [],
        "modules": [
            "cmsplugin_iframe2",
            "cmsplugin_iframe2.cms_plugins",
            "cmsplugin_iframe2.conf",
            "cmsplugin_iframe2.conf.default_settings",
            "cmsplugin_iframe2.migrations",
            "cmsplugin_iframe2.migrations.0001_initial",
            "cmsplugin_iframe2.models"
        ],
        "version": "1.2.0"
    },
    "cmsplugin-image-gallery": {
        "cmdline": [],
        "modules": [
            "image_gallery",
            "image_gallery.admin",
            "image_gallery.app_settings",
            "image_gallery.cms_app",
            "image_gallery.cms_plugins",
            "image_gallery.migrations",
            "image_gallery.migrations.0001_initial",
            "image_gallery.models",
            "image_gallery.south_migrations",
            "image_gallery.south_migrations.0001_initial",
            "image_gallery.south_migrations.0002_auto__add_gallerycategory__add_field_gallery_category",
            "image_gallery.south_migrations.0003_auto__add_field_gallery_is_published",
            "image_gallery.south_migrations.0004_auto__add_field_galleryplugin_display_type",
            "image_gallery.south_migrations.0005_auto__add_galleryimageextension",
            "image_gallery.south_migrations.0006_auto__chg_field_galleryimageextension_image__add_unique_galleryimageex",
            "image_gallery.templatetags",
            "image_gallery.templatetags.image_gallery_tags",
            "image_gallery.tests",
            "image_gallery.tests.cmsplugin_tests",
            "image_gallery.tests.models_tests",
            "image_gallery.tests.settings",
            "image_gallery.tests.tags_tests",
            "image_gallery.tests.test_settings",
            "image_gallery.tests.urls",
            "image_gallery.tests.views_tests",
            "image_gallery.urls",
            "image_gallery.views"
        ],
        "version": "0.7.2"
    },
    "cmsplugin-ink-news": {
        "cmdline": [],
        "modules": [
            "cmsplugin_news",
            "cmsplugin_news.admin",
            "cmsplugin_news.cms_app",
            "cmsplugin_news.cms_plugins",
            "cmsplugin_news.feeds",
            "cmsplugin_news.forms",
            "cmsplugin_news.menu",
            "cmsplugin_news.models",
            "cmsplugin_news.search_indexes",
            "cmsplugin_news.settings",
            "cmsplugin_news.tests",
            "cmsplugin_news.urls",
            "cmsplugin_news.views"
        ],
        "version": "0.9.1"
    },
    "cmsplugin-instagram": {
        "cmdline": [],
        "modules": [
            "cmsplugin_instagram",
            "cmsplugin_instagram.cms_plugins",
            "cmsplugin_instagram.models"
        ],
        "version": "0.0.12"
    },
    "cmsplugin-jcarousellite": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmsplugin-lastfm": {
        "cmdline": [],
        "modules": [
            "cmsplugin_lastfm",
            "cmsplugin_lastfm.cms_plugins",
            "cmsplugin_lastfm.migrations",
            "cmsplugin_lastfm.migrations.0001_initial",
            "cmsplugin_lastfm.models"
        ],
        "version": "0.1.0"
    },
    "cmsplugin-latest": {
        "cmdline": [],
        "modules": [
            "cmsplugin_latest",
            "cmsplugin_latest.cms_plugins",
            "cmsplugin_latest.forms",
            "cmsplugin_latest.logger_setup",
            "cmsplugin_latest.models",
            "cmsplugin_latest.settings",
            "cmsplugin_latest.urls",
            "cmsplugin_latest.utils",
            "cmsplugin_latest.views"
        ],
        "version": "0.3"
    },
    "cmsplugin-link-extended": {
        "cmdline": [],
        "modules": [
            "cmsplugin_link_extended",
            "cmsplugin_link_extended.cms_plugins",
            "cmsplugin_link_extended.migrations",
            "cmsplugin_link_extended.migrations.0001_initial",
            "cmsplugin_link_extended.migrations.0002_auto__chg_field_linkextension_link",
            "cmsplugin_link_extended.migrations.0003_auto__add_linkextended",
            "cmsplugin_link_extended.migrations.0004_move_links_to_new_model",
            "cmsplugin_link_extended.migrations.0005_auto__del_linkextension",
            "cmsplugin_link_extended.models",
            "cmsplugin_link_extended.tests",
            "cmsplugin_link_extended.tests.runtests",
            "cmsplugin_link_extended.tests.south_settings",
            "cmsplugin_link_extended.tests.test_app",
            "cmsplugin_link_extended.tests.test_app.models",
            "cmsplugin_link_extended.tests.test_settings",
            "cmsplugin_link_extended.tests.urls"
        ],
        "version": "0.2"
    },
    "cmsplugin-livestats": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmsplugin-markdown": {
        "cmdline": [],
        "modules": [
            "cmsplugin_markdown",
            "cmsplugin_markdown.cms_plugins",
            "cmsplugin_markdown.migrations",
            "cmsplugin_markdown.migrations.0001_initial",
            "cmsplugin_markdown.models",
            "cmsplugin_markdown.south_migrations",
            "cmsplugin_markdown.south_migrations.0001_initial",
            "cmsplugin_markdown.south_migrations.0002_auto__del_field_markdownplugin_text__add_field_markdownplugin_markdown",
            "cmsplugin_markdown.south_migrations.0003_renametable",
            "cmsplugin_markdown.tests",
            "cmsplugin_markdown.tests.models_tests",
            "cmsplugin_markdown.tests.settings",
            "cmsplugin_markdown.tests.test_settings",
            "cmsplugin_markdown.tests.urls",
            "cmsplugin_markdown.utils"
        ],
        "version": "0.1.5"
    },
    "cmsplugin-markdownx": {
        "cmdline": [],
        "modules": [
            "cmsplugin_markdownx",
            "cmsplugin_markdownx.cms_plugins",
            "cmsplugin_markdownx.forms",
            "cmsplugin_markdownx.migrations",
            "cmsplugin_markdownx.migrations.0001_initial",
            "cmsplugin_markdownx.models",
            "cmsplugin_markdownx.templatetags",
            "cmsplugin_markdownx.templatetags.cmsplugin_markdownx",
            "cmsplugin_markdownx.tests"
        ],
        "version": "0.1.3"
    },
    "cmsplugin-markup": {
        "cmdline": [],
        "modules": [
            "cmsplugin_markup",
            "cmsplugin_markup.cms_plugins",
            "cmsplugin_markup.conf",
            "cmsplugin_markup.conf.global_settings",
            "cmsplugin_markup.forms",
            "cmsplugin_markup.migrations",
            "cmsplugin_markup.migrations.0001_initial",
            "cmsplugin_markup.migrations.0002_auto__add_field_markupfield_body_scripts__add_field_markupfield_body_s",
            "cmsplugin_markup.migrations.0003_auto__add_field_markupfield_css_class",
            "cmsplugin_markup.models",
            "cmsplugin_markup.plugins",
            "cmsplugin_markup.plugins.base",
            "cmsplugin_markup.plugins.markdown",
            "cmsplugin_markup.plugins.markdown.conf",
            "cmsplugin_markup.plugins.markdown.conf.global_settings",
            "cmsplugin_markup.plugins.markdown.mark_down",
            "cmsplugin_markup.plugins.restructuredtext",
            "cmsplugin_markup.plugins.textile",
            "cmsplugin_markup.templatetags",
            "cmsplugin_markup.templatetags.markuptags",
            "cmsplugin_markup.urls",
            "cmsplugin_markup.utils",
            "cmsplugin_markup.utils.markup",
            "cmsplugin_markup.utils.plugins"
        ],
        "version": "0.2.4"
    },
    "cmsplugin-markup-tracwiki": {
        "cmdline": [],
        "modules": [
            "cmsplugin_markup_tracwiki",
            "cmsplugin_markup_tracwiki.components",
            "cmsplugin_markup_tracwiki.macros",
            "cmsplugin_markup_tracwiki.models",
            "cmsplugin_markup_tracwiki.templatetags",
            "cmsplugin_markup_tracwiki.templatetags.tracwiki",
            "cmsplugin_markup_tracwiki.tracwiki"
        ],
        "version": "0.2.4"
    },
    "cmsplugin-mathjax": {
        "cmdline": [],
        "modules": [
            "cmsplugin_mathjax",
            "cmsplugin_mathjax.cms_plugins",
            "cmsplugin_mathjax.migrations",
            "cmsplugin_mathjax.migrations.0001_initial",
            "cmsplugin_mathjax.migrations.0002_auto_20161021_2213",
            "cmsplugin_mathjax.migrations.0003_auto_20161021_2222",
            "cmsplugin_mathjax.models",
            "cmsplugin_mathjax.settings"
        ],
        "version": "0.1.1"
    },
    "cmsplugin-multipinmap": {
        "cmdline": [],
        "modules": [
            "cmsplugin_multipinmap",
            "cmsplugin_multipinmap.cms_plugins",
            "cmsplugin_multipinmap.models",
            "cmsplugin_multipinmap.tests"
        ],
        "version": "0.1.0"
    },
    "cmsplugin-multiple-faq": {
        "cmdline": [],
        "modules": [
            "cmsplugin_multiple_faq",
            "cmsplugin_multiple_faq.admin",
            "cmsplugin_multiple_faq.cms_plugins",
            "cmsplugin_multiple_faq.migrations",
            "cmsplugin_multiple_faq.migrations.0001_initial",
            "cmsplugin_multiple_faq.migrations.0002_auto__chg_field_faqentry_answer",
            "cmsplugin_multiple_faq.migrations.0003_auto__add_faqlistplugin",
            "cmsplugin_multiple_faq.migrations.0004_auto__chg_field_faqlist_title__chg_field_faqentry_question",
            "cmsplugin_multiple_faq.migrations.0005_auto__add_field_faqlist_language__add_field_faqlist_order__add_field_f",
            "cmsplugin_multiple_faq.models"
        ],
        "version": "0.0.5"
    },
    "cmsplugin-news": {
        "cmdline": [],
        "modules": [
            "cmsplugin_news",
            "cmsplugin_news.admin",
            "cmsplugin_news.cms_app",
            "cmsplugin_news.cms_plugins",
            "cmsplugin_news.feeds",
            "cmsplugin_news.forms",
            "cmsplugin_news.menu",
            "cmsplugin_news.migrations",
            "cmsplugin_news.migrations.0001_initial",
            "cmsplugin_news.migrations.0002_directlinks",
            "cmsplugin_news.models",
            "cmsplugin_news.navigation",
            "cmsplugin_news.settings",
            "cmsplugin_news.tests",
            "cmsplugin_news.urls",
            "cmsplugin_news.views",
            "cmsplugin_news.widgets",
            "cmsplugin_news.widgets.tinymce_widget",
            "cmsplugin_news.widgets.wymeditor_widget"
        ],
        "version": "0.4.4"
    },
    "cmsplugin-news3": {
        "cmdline": [],
        "modules": [
            "cmsplugin_news3",
            "cmsplugin_news3.admin",
            "cmsplugin_news3.cms_app",
            "cmsplugin_news3.cms_plugins",
            "cmsplugin_news3.cms_toolbar",
            "cmsplugin_news3.forms",
            "cmsplugin_news3.menu",
            "cmsplugin_news3.migrations",
            "cmsplugin_news3.migrations.0001_initial",
            "cmsplugin_news3.models",
            "cmsplugin_news3.settings",
            "cmsplugin_news3.urls",
            "cmsplugin_news3.view"
        ],
        "version": "0.0.2"
    },
    "cmsplugin-newsplus": {
        "cmdline": [],
        "modules": [
            "cmsplugin_newsplus",
            "cmsplugin_newsplus.admin",
            "cmsplugin_newsplus.cms_app",
            "cmsplugin_newsplus.cms_plugins",
            "cmsplugin_newsplus.feeds",
            "cmsplugin_newsplus.forms",
            "cmsplugin_newsplus.menu",
            "cmsplugin_newsplus.migrations",
            "cmsplugin_newsplus.migrations.0001_initial",
            "cmsplugin_newsplus.migrations.0002_auto_20150428_1335",
            "cmsplugin_newsplus.models",
            "cmsplugin_newsplus.navigation",
            "cmsplugin_newsplus.settings",
            "cmsplugin_newsplus.south_migrations",
            "cmsplugin_newsplus.south_migrations.0001_initial",
            "cmsplugin_newsplus.tests",
            "cmsplugin_newsplus.urls",
            "cmsplugin_newsplus.views",
            "cmsplugin_newsplus.widgets",
            "cmsplugin_newsplus.widgets.tinymce_widget",
            "cmsplugin_newsplus.widgets.wymeditor_widget"
        ],
        "version": "0.1.10"
    },
    "cmsplugin-nextlink": {
        "cmdline": [],
        "modules": [
            "cmsplugin_nextlink",
            "cmsplugin_nextlink.admin",
            "cmsplugin_nextlink.cms_plugins",
            "cmsplugin_nextlink.forms",
            "cmsplugin_nextlink.migrations",
            "cmsplugin_nextlink.migrations.0001_initial",
            "cmsplugin_nextlink.migrations.0002_auto__add_field_nextlink_image__add_field_nextlink_alt_attribute",
            "cmsplugin_nextlink.migrations.0003_auto__add_field_nextlink_description",
            "cmsplugin_nextlink.migrations.0004_auto__del_field_nextlink_link_create__add_field_nextlink_link_created",
            "cmsplugin_nextlink.migrations.0005_auto__del_field_nextlink_access_key__del_field_nextlink_title__del_fie",
            "cmsplugin_nextlink.models",
            "cmsplugin_nextlink.utils",
            "cmsplugin_nextlink.validator"
        ],
        "version": "0.0.2.1"
    },
    "cmsplugin-nivoslider": {
        "cmdline": [],
        "modules": [
            "cmsplugin_nivoslider",
            "cmsplugin_nivoslider.cms_plugins",
            "cmsplugin_nivoslider.migrations",
            "cmsplugin_nivoslider.migrations.0001_initial",
            "cmsplugin_nivoslider.models",
            "cmsplugin_nivoslider.south_migrations",
            "cmsplugin_nivoslider.south_migrations.0001_initial",
            "cmsplugin_nivoslider.south_migrations.0002_auto__add_field_sliderplugin_theme__add_field_sliderplugin_effect",
            "cmsplugin_nivoslider.south_migrations.0003_auto__add_field_sliderplugin_anim_speed__add_field_sliderplugin_pause_",
            "cmsplugin_nivoslider.south_migrations.0004_auto__add_field_sliderplugin_image_width__add_field_sliderplugin_image",
            "cmsplugin_nivoslider.south_migrations.0005_auto__add_field_sliderplugin_show_ribbon",
            "cmsplugin_nivoslider.south_migrations.0006_rename_fields_image_height_width__del_field_show_ribbon",
            "cmsplugin_nivoslider.south_migrations.0007_auto__add_field_sliderplugin_manual_advance__add_field_sliderplugin_ar",
            "cmsplugin_nivoslider.south_migrations.0008_auto__del_sliderimage__del_slideralbum",
            "cmsplugin_nivoslider.south_migrations.0009_rename_table",
            "cmsplugin_nivoslider.thumbnail_processors"
        ],
        "version": "0.5.9"
    },
    "cmsplugin-nvd3": {
        "cmdline": [],
        "modules": [
            "cmsplugin_nvd3",
            "cmsplugin_nvd3.cms_plugins",
            "cmsplugin_nvd3.models",
            "cmsplugin_nvd3.settings",
            "cmsplugin_nvd3.utils"
        ],
        "version": "0.5.2"
    },
    "cmsplugin-oembed": {
        "cmdline": [],
        "modules": [
            "cmsplugin_oembed",
            "cmsplugin_oembed.cms_plugins",
            "cmsplugin_oembed.models"
        ],
        "version": "0.1.0b6"
    },
    "cmsplugin-pagebreaks": {
        "cmdline": [],
        "modules": [
            "cmsplugin_pagebreaks",
            "cmsplugin_pagebreaks.cms_plugins",
            "cmsplugin_pagebreaks.migrations",
            "cmsplugin_pagebreaks.migrations.0001_initial",
            "cmsplugin_pagebreaks.models",
            "cmsplugin_pagebreaks.settings"
        ],
        "version": "0.1.1"
    },
    "cmsplugin-pagedown": {
        "cmdline": [],
        "modules": [
            "cmsplugin_pagedown",
            "cmsplugin_pagedown.cms_plugins",
            "cmsplugin_pagedown.forms",
            "cmsplugin_pagedown.migrations",
            "cmsplugin_pagedown.migrations.0001_initial",
            "cmsplugin_pagedown.migrations.0002_auto__add_field_pagedownconfig_css_id__add_field_pagedownconfig_css_cl",
            "cmsplugin_pagedown.models",
            "cmsplugin_pagedown.tests",
            "cmsplugin_pagedown.views"
        ],
        "version": "0.0.2"
    },
    "cmsplugin-pdf": {
        "cmdline": [],
        "modules": [
            "cmsplugin_pdf",
            "cmsplugin_pdf.admin",
            "cmsplugin_pdf.cms_plugins",
            "cmsplugin_pdf.migrations",
            "cmsplugin_pdf.migrations.0001_initial",
            "cmsplugin_pdf.migrations.0002_auto__add_field_pdfpluginmodel_display_type",
            "cmsplugin_pdf.models",
            "cmsplugin_pdf.settings",
            "cmsplugin_pdf.templatetags",
            "cmsplugin_pdf.templatetags.cmsplugin_pdf_tags",
            "cmsplugin_pdf.tests",
            "cmsplugin_pdf.tests.cmsplugin_pdf_tags_tests",
            "cmsplugin_pdf.tests.cmsplugin_tests",
            "cmsplugin_pdf.tests.factories",
            "cmsplugin_pdf.tests.models_tests",
            "cmsplugin_pdf.tests.runtests",
            "cmsplugin_pdf.tests.south_settings",
            "cmsplugin_pdf.tests.test_settings",
            "cmsplugin_pdf.tests.urls"
        ],
        "version": "0.5.1"
    },
    "cmsplugin-phlog": {
        "cmdline": [],
        "modules": [
            "cmsplugin_phlog",
            "cmsplugin_phlog.admin",
            "cmsplugin_phlog.cms_plugins",
            "cmsplugin_phlog.forms",
            "cmsplugin_phlog.forms.fields",
            "cmsplugin_phlog.forms.forms",
            "cmsplugin_phlog.forms.widgets",
            "cmsplugin_phlog.migrations",
            "cmsplugin_phlog.migrations.0001_initial",
            "cmsplugin_phlog.migrations.0002_v0_2",
            "cmsplugin_phlog.migrations.0003_v0_2_3",
            "cmsplugin_phlog.models"
        ],
        "version": "0.3.1"
    },
    "cmsplugin-photologue": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmsplugin-plain-text": {
        "cmdline": [],
        "modules": [
            "cmsplugin_plain_text",
            "cmsplugin_plain_text.cms_plugins",
            "cmsplugin_plain_text.models"
        ],
        "version": "0.1.2"
    },
    "cmsplugin-plaintext": {
        "cmdline": [],
        "modules": [
            "cmsplugin_plaintext",
            "cmsplugin_plaintext.cms_plugins",
            "cmsplugin_plaintext.models"
        ],
        "version": "0.1.1-alpha-2"
    },
    "cmsplugin-plaintext-djangocms3": {
        "cmdline": [],
        "modules": [
            "cmsplugin_plaintext",
            "cmsplugin_plaintext.cms_plugins",
            "cmsplugin_plaintext.migrations",
            "cmsplugin_plaintext.migrations.0001_initial",
            "cmsplugin_plaintext.migrations.0002_rename_plugin",
            "cmsplugin_plaintext.models"
        ],
        "version": "0.2.1"
    },
    "cmsplugin-poll": {
        "cmdline": [],
        "modules": [
            "cmsplugin_poll",
            "cmsplugin_poll.admin",
            "cmsplugin_poll.cms_plugins",
            "cmsplugin_poll.migrations",
            "cmsplugin_poll.migrations.0001_initial",
            "cmsplugin_poll.migrations.0002_auto__add_field_poll_close_date",
            "cmsplugin_poll.models",
            "cmsplugin_poll.templatetags",
            "cmsplugin_poll.templatetags.poll_tags",
            "cmsplugin_poll.tests",
            "cmsplugin_poll.urls",
            "cmsplugin_poll.views"
        ],
        "version": "0.4"
    },
    "cmsplugin-polls": {
        "cmdline": [],
        "modules": [
            "cmsplugin_polls",
            "cmsplugin_polls.admin",
            "cmsplugin_polls.cms_plugins",
            "cmsplugin_polls.migrations",
            "cmsplugin_polls.migrations.0001_initial",
            "cmsplugin_polls.models",
            "cmsplugin_polls.south_migrations",
            "cmsplugin_polls.south_migrations.0001_initial",
            "cmsplugin_polls.templatetags",
            "cmsplugin_polls.templatetags.poll_tags",
            "cmsplugin_polls.urls",
            "cmsplugin_polls.views"
        ],
        "version": "0.1.0"
    },
    "cmsplugin-porticus": {
        "cmdline": [],
        "modules": [
            "cmsplugin_porticus",
            "cmsplugin_porticus.cms_plugins",
            "cmsplugin_porticus.cms_toolbars",
            "cmsplugin_porticus.migrations",
            "cmsplugin_porticus.migrations.0001_initial",
            "cmsplugin_porticus.migrations.0002_add_limits",
            "cmsplugin_porticus.migrations.0003_add_cloudtag",
            "cmsplugin_porticus.models",
            "cmsplugin_porticus.settings",
            "cmsplugin_porticus.south_migrations",
            "cmsplugin_porticus.south_migrations.0001_initial",
            "cmsplugin_porticus.south_migrations.0002_auto__chg_field_galleryplugin_gallery"
        ],
        "version": "0.6.0"
    },
    "cmsplugin-price": {
        "cmdline": [],
        "modules": [
            "cmsplugin_price",
            "cmsplugin_price.admin",
            "cmsplugin_price.cms_plugins",
            "cmsplugin_price.forms",
            "cmsplugin_price.models",
            "cmsplugin_price.nospam",
            "cmsplugin_price.nospam.fields",
            "cmsplugin_price.nospam.forms",
            "cmsplugin_price.nospam.utils",
            "cmsplugin_price.nospam.widgets",
            "cmsplugin_price.settings",
            "cmsplugin_price.utils"
        ],
        "version": "1.0.5"
    },
    "cmsplugin-pygments": {
        "cmdline": [],
        "modules": [
            "cmsplugin_pygments",
            "cmsplugin_pygments.cms_plugins",
            "cmsplugin_pygments.migrations",
            "cmsplugin_pygments.migrations.0001_initial",
            "cmsplugin_pygments.models"
        ],
        "version": "0.8.2"
    },
    "cmsplugin-question": {
        "cmdline": [],
        "modules": [
            "cmsplugin_question",
            "cmsplugin_question.admin",
            "cmsplugin_question.cms_plugins",
            "cmsplugin_question.forms",
            "cmsplugin_question.models",
            "cmsplugin_question.nospam",
            "cmsplugin_question.nospam.fields",
            "cmsplugin_question.nospam.forms",
            "cmsplugin_question.nospam.utils",
            "cmsplugin_question.nospam.widgets",
            "cmsplugin_question.settings",
            "cmsplugin_question.utils"
        ],
        "version": "1.0.5"
    },
    "cmsplugin-randomquote": {
        "cmdline": [],
        "modules": [
            "cmsplugin_randomquote",
            "cmsplugin_randomquote.admin",
            "cmsplugin_randomquote.cms_plugins",
            "cmsplugin_randomquote.migrations",
            "cmsplugin_randomquote.migrations.0001_initial",
            "cmsplugin_randomquote.migrations.0002_author_url_field",
            "cmsplugin_randomquote.models"
        ],
        "version": "0.1.3"
    },
    "cmsplugin-redirect": {
        "cmdline": [],
        "modules": [
            "cmsplugin_redirect",
            "cmsplugin_redirect.admin",
            "cmsplugin_redirect.cms_plugins",
            "cmsplugin_redirect.middleware",
            "cmsplugin_redirect.migrations",
            "cmsplugin_redirect.migrations.0001_initial",
            "cmsplugin_redirect.models",
            "cmsplugin_redirect.tests",
            "cmsplugin_redirect.tests.cms_plugins_tests",
            "cmsplugin_redirect.tests.cmsplugin_tests",
            "cmsplugin_redirect.tests.factories",
            "cmsplugin_redirect.tests.models_tests",
            "cmsplugin_redirect.tests.runtests",
            "cmsplugin_redirect.tests.south_settings",
            "cmsplugin_redirect.tests.test_settings",
            "cmsplugin_redirect.tests.urls"
        ],
        "version": "0.2.1"
    },
    "cmsplugin-rst": {
        "cmdline": [],
        "modules": [
            "cmsplugin_rst",
            "cmsplugin_rst.cms_plugins",
            "cmsplugin_rst.docutils_plugins",
            "cmsplugin_rst.forms",
            "cmsplugin_rst.migrations",
            "cmsplugin_rst.migrations.0001_initial",
            "cmsplugin_rst.migrations.0002_rstpluginmodel_header_level",
            "cmsplugin_rst.models",
            "cmsplugin_rst.utils"
        ],
        "version": "0.2"
    },
    "cmsplugin-rt": {
        "cmdline": [],
        "modules": [
            "cmsplugin_rt",
            "cmsplugin_rt.button",
            "cmsplugin_rt.button.cms_plugins",
            "cmsplugin_rt.button.forms",
            "cmsplugin_rt.button.migrations",
            "cmsplugin_rt.button.migrations.0001_initial",
            "cmsplugin_rt.button.migrations.0002_auto__chg_field_buttonpluginmodel_button_link",
            "cmsplugin_rt.button.models",
            "cmsplugin_rt.button.templatetags",
            "cmsplugin_rt.button.templatetags.allow_special",
            "cmsplugin_rt.button_appstore",
            "cmsplugin_rt.button_appstore.cms_plugins",
            "cmsplugin_rt.button_appstore.migrations",
            "cmsplugin_rt.button_appstore.migrations.0001_initial",
            "cmsplugin_rt.button_appstore.models",
            "cmsplugin_rt.facebook_button",
            "cmsplugin_rt.facebook_button.cms_plugins",
            "cmsplugin_rt.facebook_button.migrations",
            "cmsplugin_rt.facebook_button.migrations.0001_initial",
            "cmsplugin_rt.facebook_button.models",
            "cmsplugin_rt.google_analytics",
            "cmsplugin_rt.google_analytics.cms_plugins",
            "cmsplugin_rt.google_analytics.migrations",
            "cmsplugin_rt.google_analytics.migrations.0001_initial",
            "cmsplugin_rt.google_analytics.models",
            "cmsplugin_rt.google_font",
            "cmsplugin_rt.google_font.cms_plugins",
            "cmsplugin_rt.google_font.migrations",
            "cmsplugin_rt.google_font.migrations.0001_initial",
            "cmsplugin_rt.google_font.models",
            "cmsplugin_rt.hbar",
            "cmsplugin_rt.hbar.cms_plugins",
            "cmsplugin_rt.hbar.migrations",
            "cmsplugin_rt.hbar.migrations.0001_initial",
            "cmsplugin_rt.hbar.models",
            "cmsplugin_rt.mailchimp_form",
            "cmsplugin_rt.mailchimp_form.cms_plugins",
            "cmsplugin_rt.mailchimp_form.migrations",
            "cmsplugin_rt.mailchimp_form.migrations.0001_initial",
            "cmsplugin_rt.mailchimp_form.migrations.0002_auto__del_field_mailchimppluginmodel_link__add_field_mailchimppluginmo",
            "cmsplugin_rt.mailchimp_form.migrations.0003_auto__add_field_mailchimppluginmodel_subscribe_text",
            "cmsplugin_rt.mailchimp_form.migrations.0004_auto__add_field_mailchimppluginmodel_button_type__add_field_mailchimpp",
            "cmsplugin_rt.mailchimp_form.models",
            "cmsplugin_rt.meta_icons",
            "cmsplugin_rt.meta_icons.cms_plugins",
            "cmsplugin_rt.meta_icons.migrations",
            "cmsplugin_rt.meta_icons.migrations.0001_initial",
            "cmsplugin_rt.meta_icons.models",
            "cmsplugin_rt.navbar",
            "cmsplugin_rt.navbar.cms_plugins",
            "cmsplugin_rt.navbar.migrations",
            "cmsplugin_rt.navbar.migrations.0001_initial",
            "cmsplugin_rt.navbar.models",
            "cmsplugin_rt.navbar.tests",
            "cmsplugin_rt.navbar.views",
            "cmsplugin_rt.open_graph",
            "cmsplugin_rt.open_graph.cms_plugins",
            "cmsplugin_rt.open_graph.migrations",
            "cmsplugin_rt.open_graph.migrations.0001_initial",
            "cmsplugin_rt.open_graph.models",
            "cmsplugin_rt.resizeable_picture",
            "cmsplugin_rt.resizeable_picture.cms_plugins",
            "cmsplugin_rt.resizeable_picture.migrations",
            "cmsplugin_rt.resizeable_picture.migrations.0001_initial",
            "cmsplugin_rt.resizeable_picture.migrations.0002_auto__add_field_resizeablepicturepluginmodel_img_max_width",
            "cmsplugin_rt.resizeable_picture.migrations.0003_auto__add_field_resizeablepicturepluginmodel_img_max_height",
            "cmsplugin_rt.resizeable_picture.models",
            "cmsplugin_rt.rt_carousel",
            "cmsplugin_rt.rt_carousel.cms_plugins",
            "cmsplugin_rt.rt_carousel.migrations",
            "cmsplugin_rt.rt_carousel.migrations.0001_initial",
            "cmsplugin_rt.rt_carousel.models",
            "cmsplugin_rt.rt_carousel.tests",
            "cmsplugin_rt.rt_carousel.views",
            "cmsplugin_rt.self_calc_pagination",
            "cmsplugin_rt.self_calc_pagination.cms_plugins",
            "cmsplugin_rt.self_calc_pagination.migrations",
            "cmsplugin_rt.self_calc_pagination.migrations.0001_initial",
            "cmsplugin_rt.self_calc_pagination.models",
            "cmsplugin_rt.self_calc_pagination.templatetags",
            "cmsplugin_rt.self_calc_pagination.templatetags.descendant_selected",
            "cmsplugin_rt.spacer",
            "cmsplugin_rt.spacer.cms_plugins",
            "cmsplugin_rt.spacer.migrations",
            "cmsplugin_rt.spacer.migrations.0001_initial",
            "cmsplugin_rt.spacer.models",
            "cmsplugin_rt.style_modifier",
            "cmsplugin_rt.style_modifier.cms_plugins",
            "cmsplugin_rt.style_modifier.migrations",
            "cmsplugin_rt.style_modifier.migrations.0001_initial",
            "cmsplugin_rt.style_modifier.migrations.0002_auto__add_field_stylemodifierpluginmodel_font_family",
            "cmsplugin_rt.style_modifier.models",
            "cmsplugin_rt.text_minimal_markup",
            "cmsplugin_rt.text_minimal_markup.cms_plugins",
            "cmsplugin_rt.text_minimal_markup.migrations",
            "cmsplugin_rt.text_minimal_markup.migrations.0001_initial",
            "cmsplugin_rt.text_minimal_markup.models",
            "cmsplugin_rt.text_minimal_markup.templatetags",
            "cmsplugin_rt.text_minimal_markup.templatetags.allow_special",
            "cmsplugin_rt.twitter_button",
            "cmsplugin_rt.twitter_button.cms_plugins",
            "cmsplugin_rt.twitter_button.migrations",
            "cmsplugin_rt.twitter_button.migrations.0001_initial",
            "cmsplugin_rt.twitter_button.models"
        ],
        "version": "0.5.1"
    },
    "cmsplugin-satchmo": {
        "cmdline": [],
        "modules": [
            "cmsplugin_satchmo",
            "cmsplugin_satchmo.admin",
            "cmsplugin_satchmo.cms_plugins",
            "cmsplugin_satchmo.models"
        ],
        "version": "0.2.2"
    },
    "cmsplugin-search": {
        "cmdline": [],
        "modules": [
            "cmsplugin_search",
            "cmsplugin_search.cms_app",
            "cmsplugin_search.search_helpers",
            "cmsplugin_search.search_helpers.fields",
            "cmsplugin_search.search_helpers.indexes",
            "cmsplugin_search.search_helpers.models",
            "cmsplugin_search.search_helpers.templatetags",
            "cmsplugin_search.search_helpers.templatetags.cms_search_tags",
            "cmsplugin_search.search_indexes",
            "cmsplugin_search.settings",
            "cmsplugin_search.utils"
        ],
        "version": "0.7.3"
    },
    "cmsplugin-section": {
        "cmdline": [],
        "modules": [
            "cmsplugin_section",
            "cmsplugin_section.cms_plugins",
            "cmsplugin_section.models",
            "cmsplugin_section.tests",
            "cmsplugin_section.utils"
        ],
        "version": "0.1.0"
    },
    "cmsplugin-sections": {
        "cmdline": [],
        "modules": [
            "cmsplugin_sections",
            "cmsplugin_sections.cms_plugins",
            "cmsplugin_sections.migrations",
            "cmsplugin_sections.migrations.0001_initial",
            "cmsplugin_sections.migrations_django",
            "cmsplugin_sections.migrations_django.0001_initial",
            "cmsplugin_sections.models",
            "cmsplugin_sections.unique_slugify"
        ],
        "version": "0.1.1"
    },
    "cmsplugin-seocheck": {
        "cmdline": [],
        "modules": [
            "cmsplugin_seocheck",
            "cmsplugin_seocheck.cms_toolbar",
            "cmsplugin_seocheck.urls",
            "cmsplugin_seocheck.views"
        ],
        "version": "0.1.0.a1"
    },
    "cmsplugin-shop": {
        "cmdline": [],
        "modules": [
            "cmsplugin_shop",
            "cmsplugin_shop.admin",
            "cmsplugin_shop.admins",
            "cmsplugin_shop.cms_app",
            "cmsplugin_shop.cms_menus",
            "cmsplugin_shop.cms_plugins",
            "cmsplugin_shop.cms_toolbar",
            "cmsplugin_shop.cms_toolbars",
            "cmsplugin_shop.forms",
            "cmsplugin_shop.menu",
            "cmsplugin_shop.middleware",
            "cmsplugin_shop.models",
            "cmsplugin_shop.plugins",
            "cmsplugin_shop.price",
            "cmsplugin_shop.settings",
            "cmsplugin_shop.templatetags",
            "cmsplugin_shop.templatetags.shop_tags",
            "cmsplugin_shop.tests",
            "cmsplugin_shop.urls",
            "cmsplugin_shop.utils",
            "cmsplugin_shop.views"
        ],
        "version": "0.2"
    },
    "cmsplugin-simple-markdown": {
        "cmdline": [],
        "modules": [
            "cmsplugin_simple_markdown",
            "cmsplugin_simple_markdown.cms_plugins",
            "cmsplugin_simple_markdown.migrations",
            "cmsplugin_simple_markdown.migrations.0001_initial",
            "cmsplugin_simple_markdown.migrations.0002_auto__add_field_simplemarkdownplugin_template",
            "cmsplugin_simple_markdown.migrations_django",
            "cmsplugin_simple_markdown.migrations_django.0001_initial",
            "cmsplugin_simple_markdown.migrations_django.0002_auto_20160417_1727",
            "cmsplugin_simple_markdown.models",
            "cmsplugin_simple_markdown.utils"
        ],
        "version": "1.6"
    },
    "cmsplugin-simpleslider": {
        "cmdline": [],
        "modules": [
            "cmsplugin_simpleslider",
            "cmsplugin_simpleslider.admin",
            "cmsplugin_simpleslider.cms_plugins",
            "cmsplugin_simpleslider.models",
            "cmsplugin_simpleslider.settings",
            "cmsplugin_simpleslider.tests"
        ],
        "version": "0.1.0b5"
    },
    "cmsplugin-slick": {
        "cmdline": [],
        "modules": [
            "cmsplugin_slick",
            "cmsplugin_slick.cms_plugins",
            "cmsplugin_slick.models"
        ],
        "version": "0.2.4"
    },
    "cmsplugin-slideshows": {
        "cmdline": [],
        "modules": [
            "cmsplugin_slideshows",
            "cmsplugin_slideshows.cms_plugins",
            "cmsplugin_slideshows.cms_toolbars",
            "cmsplugin_slideshows.migrations",
            "cmsplugin_slideshows.migrations.0001_initial",
            "cmsplugin_slideshows.models"
        ],
        "version": "0.2.0"
    },
    "cmsplugin-socialbuttons": {
        "cmdline": [],
        "modules": [
            "cmsplugin_socialbuttons",
            "cmsplugin_socialbuttons.cms_plugins",
            "cmsplugin_socialbuttons.migrations",
            "cmsplugin_socialbuttons.migrations.0001_initial",
            "cmsplugin_socialbuttons.models",
            "cmsplugin_socialbuttons.templatetags",
            "cmsplugin_socialbuttons.templatetags.cmsplugin_socialbuttons_tags"
        ],
        "version": "0.1.2"
    },
    "cmsplugin-socialschools": {
        "cmdline": [],
        "modules": [
            "cmsplugin_socialschools",
            "cmsplugin_socialschools.cms_plugins",
            "cmsplugin_socialschools.migrations",
            "cmsplugin_socialschools.migrations.0001_initial",
            "cmsplugin_socialschools.migrations.0002_auto_20160718_1114",
            "cmsplugin_socialschools.models",
            "cmsplugin_socialschools.tests",
            "cmsplugin_socialschools.views"
        ],
        "version": "1.3.3"
    },
    "cmsplugin-soundcloud": {
        "cmdline": [],
        "modules": [
            "cmsplugin_soundcloud",
            "cmsplugin_soundcloud.cms_plugins",
            "cmsplugin_soundcloud.models",
            "cmsplugin_soundcloud.settings"
        ],
        "version": "1.0"
    },
    "cmsplugin-survey": {
        "cmdline": [],
        "modules": [
            "cmsplugin_survey",
            "cmsplugin_survey.admin",
            "cmsplugin_survey.apps",
            "cmsplugin_survey.cms_plugins",
            "cmsplugin_survey.conf",
            "cmsplugin_survey.fields",
            "cmsplugin_survey.migrations",
            "cmsplugin_survey.migrations.0001_initial",
            "cmsplugin_survey.models",
            "cmsplugin_survey.templatetags",
            "cmsplugin_survey.templatetags.survey",
            "cmsplugin_survey.tests",
            "cmsplugin_survey.urls",
            "cmsplugin_survey.views"
        ],
        "version": "1.1.1"
    },
    "cmsplugin-svg": {
        "cmdline": [],
        "modules": [
            "cmsplugin_svg",
            "cmsplugin_svg.cms_plugins",
            "cmsplugin_svg.migrations",
            "cmsplugin_svg.migrations.0001_initial",
            "cmsplugin_svg.migrations.0002_auto_20161017_1706",
            "cmsplugin_svg.migrations.0003_auto_20161017_1750",
            "cmsplugin_svg.migrations.0004_auto_20161017_1832",
            "cmsplugin_svg.models"
        ],
        "version": "0.1.1"
    },
    "cmsplugin-syntax-highlight": {
        "cmdline": [],
        "modules": [
            "cmsplugin_syntax_highlight",
            "cmsplugin_syntax_highlight.cms_plugins",
            "cmsplugin_syntax_highlight.migrations",
            "cmsplugin_syntax_highlight.migrations.0001_initial",
            "cmsplugin_syntax_highlight.models",
            "cmsplugin_syntax_highlight.utils"
        ],
        "version": "0.1.5"
    },
    "cmsplugin-tab-ui": {
        "cmdline": [],
        "modules": [
            "cmsplugin_tab_ui",
            "cmsplugin_tab_ui.admin",
            "cmsplugin_tab_ui.cms_plugins",
            "cmsplugin_tab_ui.migrations",
            "cmsplugin_tab_ui.migrations.0001_initial",
            "cmsplugin_tab_ui.models",
            "cmsplugin_tab_ui.tests",
            "cmsplugin_tab_ui.views"
        ],
        "version": "1.0"
    },
    "cmsplugin-tabs": {
        "cmdline": [],
        "modules": [
            "cmsplugin_tabs",
            "cmsplugin_tabs.cms_plugins",
            "cmsplugin_tabs.migrations",
            "cmsplugin_tabs.migrations.0001_initial",
            "cmsplugin_tabs.migrations.0002_update_related_name",
            "cmsplugin_tabs.models",
            "cmsplugin_tabs.south_migrations",
            "cmsplugin_tabs.south_migrations.0001_initial",
            "cmsplugin_tabs.tests",
            "tests",
            "tests.settings"
        ],
        "version": "0.2.0"
    },
    "cmsplugin-team": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "cmsplugin-template-placeholder": {
        "cmdline": [],
        "modules": [
            "cmsplugin_template_placeholder",
            "cmsplugin_template_placeholder.models",
            "cmsplugin_template_placeholder.templatetags",
            "cmsplugin_template_placeholder.templatetags.cmsplugin_template_placeholder_tags",
            "cmsplugin_template_placeholder.tests",
            "cmsplugin_template_placeholder.tests.runtests",
            "cmsplugin_template_placeholder.tests.south_settings",
            "cmsplugin_template_placeholder.tests.test_settings",
            "cmsplugin_template_placeholder.tests.urls"
        ],
        "version": "0.1"
    },
    "cmsplugin-text-ng": {
        "cmdline": [],
        "modules": [
            "cmsplugin_text_ng",
            "cmsplugin_text_ng.admin",
            "cmsplugin_text_ng.cms_plugins",
            "cmsplugin_text_ng.compat",
            "cmsplugin_text_ng.contrib",
            "cmsplugin_text_ng.contrib.textng_filer",
            "cmsplugin_text_ng.contrib.textng_filer.migrations",
            "cmsplugin_text_ng.contrib.textng_filer.migrations.0001_initial",
            "cmsplugin_text_ng.contrib.textng_filer.models",
            "cmsplugin_text_ng.exceptions",
            "cmsplugin_text_ng.forms",
            "cmsplugin_text_ng.migrations",
            "cmsplugin_text_ng.migrations.0001_initial",
            "cmsplugin_text_ng.migrations.0002_auto__add_textngvariabletext__add_unique_textngvariabletext_text_ng_la",
            "cmsplugin_text_ng.models",
            "cmsplugin_text_ng.templatetags",
            "cmsplugin_text_ng.templatetags.text_ng_tags",
            "cmsplugin_text_ng.type_registry",
            "cmsplugin_text_ng.utils"
        ],
        "version": "0.6"
    },
    "cmsplugin-text-wrapper": {
        "cmdline": [],
        "modules": [
            "cmsplugin_text_wrapper",
            "cmsplugin_text_wrapper.cms_plugins",
            "cmsplugin_text_wrapper.fields",
            "cmsplugin_text_wrapper.forms",
            "cmsplugin_text_wrapper.migrations",
            "cmsplugin_text_wrapper.migrations.0001_initial",
            "cmsplugin_text_wrapper.migrations.0002_add_wrapper",
            "cmsplugin_text_wrapper.migrations.0003_add_field_textwrapper_classes",
            "cmsplugin_text_wrapper.models"
        ],
        "version": "0.6"
    },
    "cmsplugin-tumblr": {
        "cmdline": [],
        "modules": [
            "tumblr_plugin",
            "tumblr_plugin.cms_plugins",
            "tumblr_plugin.models",
            "tumblr_plugin.tumblr"
        ],
        "version": "1.0"
    },
    "cmsplugin-twcarousel": {
        "cmdline": [],
        "modules": [
            "twcarousel",
            "twcarousel.admin",
            "twcarousel.cms_plugins",
            "twcarousel.models"
        ],
        "version": "0.1c0"
    },
    "cmsplugin-twitter": {
        "cmdline": [],
        "modules": [
            "cmsplugin_twitter",
            "cmsplugin_twitter.cms_plugins",
            "cmsplugin_twitter.migrations",
            "cmsplugin_twitter.migrations.0001_initial",
            "cmsplugin_twitter.models"
        ],
        "version": "1.1.2"
    },
    "cmsplugin-viadeo-resume": {
        "cmdline": [],
        "modules": [
            "cmsplugin_viadeo_resume",
            "cmsplugin_viadeo_resume.cms_plugins",
            "cmsplugin_viadeo_resume.viadeoapi"
        ],
        "version": "0.4"
    },
    "cmsplugin-video-gallery": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmsplugin-vimeo": {
        "cmdline": [],
        "modules": [
            "cmsplugin_vimeo",
            "cmsplugin_vimeo.cms_plugins",
            "cmsplugin_vimeo.migrations",
            "cmsplugin_vimeo.migrations.0001_initial",
            "cmsplugin_vimeo.models",
            "cmsplugin_vimeo.settings",
            "cmsplugin_vimeo.test"
        ],
        "version": "0.1"
    },
    "cmsplugin-yandex-maps": {
        "cmdline": [],
        "modules": [
            "cmsplugin_yandex_maps",
            "cmsplugin_yandex_maps.addon_urls",
            "cmsplugin_yandex_maps.admin",
            "cmsplugin_yandex_maps.apps",
            "cmsplugin_yandex_maps.cms_apps",
            "cmsplugin_yandex_maps.cms_plugins",
            "cmsplugin_yandex_maps.forms",
            "cmsplugin_yandex_maps.migrations",
            "cmsplugin_yandex_maps.migrations.0001_initial",
            "cmsplugin_yandex_maps.migrations.0002_load_init_data",
            "cmsplugin_yandex_maps.migrations.0003_auto_20170207_0923",
            "cmsplugin_yandex_maps.migrations.0004_from_fk_to_m2m",
            "cmsplugin_yandex_maps.migrations.0005_collections_claster_routes",
            "cmsplugin_yandex_maps.models",
            "cmsplugin_yandex_maps.tests",
            "cmsplugin_yandex_maps.tests.runtests",
            "cmsplugin_yandex_maps.tests.settings",
            "cmsplugin_yandex_maps.tests.test_forms",
            "cmsplugin_yandex_maps.tests.test_models",
            "cmsplugin_yandex_maps.tests.test_plugins",
            "cmsplugin_yandex_maps.tests.test_views",
            "cmsplugin_yandex_maps.tests.urls",
            "cmsplugin_yandex_maps.urls",
            "cmsplugin_yandex_maps.views"
        ],
        "version": "0.4.4"
    },
    "cmsplugin-yandexmap": {
        "cmdline": [],
        "modules": [
            "cmsplugin_yandexmap",
            "cmsplugin_yandexmap.cms_plugins",
            "cmsplugin_yandexmap.migrations",
            "cmsplugin_yandexmap.migrations.0001_initial",
            "cmsplugin_yandexmap.models"
        ],
        "version": "1.3.2"
    },
    "cmsplugin-youtube": {
        "cmdline": [],
        "modules": [
            "cmsplugin_youtube",
            "cmsplugin_youtube.cms_plugins",
            "cmsplugin_youtube.models",
            "cmsplugin_youtube.settings"
        ],
        "version": "0.1.5-alpha-1"
    },
    "cmsplugin-youtube-embed": {
        "cmdline": [],
        "modules": [
            "cmsplugin_youtube",
            "cmsplugin_youtube.cms_plugins",
            "cmsplugin_youtube.models",
            "cmsplugin_youtube.tests",
            "cmsplugin_youtube.views"
        ],
        "version": "0.1"
    },
    "cmsplugin-zinnia": {
        "cmdline": [],
        "modules": [
            "cmsplugin_zinnia",
            "cmsplugin_zinnia.admin",
            "cmsplugin_zinnia.cms_app",
            "cmsplugin_zinnia.cms_plugins",
            "cmsplugin_zinnia.cms_toolbar",
            "cmsplugin_zinnia.forms",
            "cmsplugin_zinnia.menu",
            "cmsplugin_zinnia.migrations",
            "cmsplugin_zinnia.migrations.0001_initial",
            "cmsplugin_zinnia.models",
            "cmsplugin_zinnia.placeholder",
            "cmsplugin_zinnia.settings",
            "demo_cmsplugin_zinnia.migrations",
            "demo_cmsplugin_zinnia.migrations.zinnia",
            "demo_cmsplugin_zinnia.migrations.zinnia.0001_initial"
        ],
        "version": "0.8.1"
    },
    "cmsutils": {
        "cmdline": [],
        "modules": [
            "cmsutils",
            "cmsutils.adminfilters",
            "cmsutils.auth",
            "cmsutils.auth.backends",
            "cmsutils.cache",
            "cmsutils.compat",
            "cmsutils.db",
            "cmsutils.db.fields",
            "cmsutils.db_utils",
            "cmsutils.decorators",
            "cmsutils.docfilters",
            "cmsutils.exceptions",
            "cmsutils.forms",
            "cmsutils.forms.fields",
            "cmsutils.forms.forms",
            "cmsutils.forms.gridform",
            "cmsutils.forms.widgets",
            "cmsutils.forms.wtform",
            "cmsutils.i18n",
            "cmsutils.log",
            "cmsutils.longtask",
            "cmsutils.management",
            "cmsutils.management.commands",
            "cmsutils.management.commands.backupdb",
            "cmsutils.management.commands.freshdb",
            "cmsutils.management.commands.indexdocs",
            "cmsutils.management.commands.install_media",
            "cmsutils.management.commands.load_production_db",
            "cmsutils.management.commands.pack_fixtures",
            "cmsutils.management.commands.rebuild_db",
            "cmsutils.management.commands.save_fixtures",
            "cmsutils.managers",
            "cmsutils.map_utils",
            "cmsutils.middleware",
            "cmsutils.models",
            "cmsutils.resourcemanager",
            "cmsutils.search",
            "cmsutils.signals",
            "cmsutils.spidertests",
            "cmsutils.tag_utils",
            "cmsutils.templatetags",
            "cmsutils.templatetags.breadcrumbs",
            "cmsutils.templatetags.columnize",
            "cmsutils.templatetags.datefilters",
            "cmsutils.templatetags.delete",
            "cmsutils.templatetags.googlemap",
            "cmsutils.templatetags.html_tags",
            "cmsutils.templatetags.list_utils",
            "cmsutils.templatetags.merge",
            "cmsutils.templatetags.messagebox",
            "cmsutils.templatetags.modelfilters",
            "cmsutils.templatetags.parameter",
            "cmsutils.templatetags.profiling",
            "cmsutils.templatetags.smart_if",
            "cmsutils.templatetags.staticgooglemap",
            "cmsutils.templatetags.stringfilters",
            "cmsutils.templatetags.svn",
            "cmsutils.tests",
            "cmsutils.upload_handlers",
            "cmsutils.utils",
            "cmsutils.uuid25",
            "cmsutils.views",
            "cmsutils.views.generic"
        ],
        "version": "0.6.6"
    },
    "cmsync": {
        "cmdline": [],
        "modules": [
            "cmsync",
            "cmsync.cmsync",
            "cmsync.color",
            "cmsync.transport"
        ],
        "version": "0.8.2"
    },
    "cmtbasicmodelinginterface": {
        "cmdline": [],
        "modules": [
            "cmt",
            "cmt.bmi",
            "cmt.bmi.checker",
            "cmt.bmi.examples",
            "cmt.bmi.examples.water_tank",
            "cmt.bmi.examples.water_tank.rain_in_tank",
            "cmt.bmi.examples.water_tank.rainfall",
            "cmt.bmi.examples.water_tank.water_tank",
            "cmt.bmi.interfaces",
            "cmt.bmi.lint",
            "cmt.bmi.tests",
            "cmt.bmi.tests.test_checker"
        ],
        "version": "0.1.2"
    },
    "cmtconvert": {
        "cmdline": [],
        "modules": [
            "cmt_convert",
            "cmt_convert._utils",
            "cmt_convert.convert",
            "cmt_convert.decorator",
            "cmt_convert.map",
            "cmt_convert.plugin",
            "cmt_convert.plugins",
            "cmt_convert.plugins.asc",
            "cmt_convert.plugins.ww3",
            "cmt_convert.readers",
            "cmt_convert.tests",
            "cmt_convert.tests.test_utils",
            "cmt_convert.writers"
        ],
        "version": "0.1.0"
    },
    "cmtimer": {
        "cmdline": [],
        "modules": [
            "cmtimer"
        ],
        "version": "0.0.1"
    },
    "cmtoolkit": {
        "cmdline": [],
        "modules": [
            "conformalmapping",
            "conformalmapping.circle",
            "conformalmapping.closedcurve",
            "conformalmapping.cmt",
            "conformalmapping.conformalmap",
            "conformalmapping.disk",
            "conformalmapping.gridcurves",
            "conformalmapping.homog",
            "conformalmapping.mobius",
            "conformalmapping.mobiusbase",
            "conformalmapping.region",
            "conformalmapping.unitdisk",
            "conformalmapping.zline"
        ],
        "version": "0.0.1"
    },
    "cmtstandardnames": {
        "cmdline": [],
        "modules": [
            "standard_names",
            "standard_names.cmd",
            "standard_names.cmd.snbuild",
            "standard_names.cmd.sndump",
            "standard_names.cmd.snscrape",
            "standard_names.cmd.snsql",
            "standard_names.collection",
            "standard_names.decorators",
            "standard_names.io",
            "standard_names.standardname",
            "standard_names.tests",
            "standard_names.tests.test_collection",
            "standard_names.tests.test_io",
            "standard_names.tests.test_standardname",
            "standard_names.validnames"
        ],
        "version": "0.2.2"
    },
    "cmu-auth": {
        "cmdline": [
            "cmu_auth"
        ],
        "modules": [
            "cmu_auth",
            "cmu_auth.auth"
        ],
        "version": "0.1.7"
    },
    "cmu-course-api": {
        "cmdline": [
            "cmu-course-api",
            "cmu-fce-api"
        ],
        "modules": [
            "cmu_course_api",
            "cmu_course_api.aggregate",
            "cmu_course_api.parse_descs",
            "cmu_course_api.parse_fces",
            "cmu_course_api.parse_schedules"
        ],
        "version": "1.5.1"
    },
    "cmuclmtk": {
        "cmdline": [],
        "modules": [
            "cmuclmtk"
        ],
        "version": "0.1.5"
    },
    "cmus-notify": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.2"
    },
    "cmvisualizations": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cmwu": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "cmysql": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cn-api-python": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cn-python-api": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cn-stock-holidays": {
        "cmdline": [],
        "modules": [
            "cn_stock_holidays",
            "cn_stock_holidays.data",
            "cn_stock_holidays.zipline",
            "cn_stock_holidays.zipline.default_calendar",
            "cn_stock_holidays.zipline.exchange_calendar_shsz"
        ],
        "version": "0.8"
    },
    "cn-stock-src": {
        "cmdline": [],
        "modules": [
            "cn_stock_src",
            "cn_stock_src.cn_stock_base",
            "cn_stock_src.cn_stock_util",
            "cn_stock_src.netease",
            "cn_stock_src.netease.test_netease_stock",
            "cn_stock_src.sina",
            "cn_stock_src.sina.sina_stock",
            "cn_stock_src.sina.sina_stock_info",
            "cn_stock_src.sina.test_sina_stock",
            "cn_stock_src.tdx",
            "cn_stock_src.tdx.test_tdx",
            "cn_stock_src.test_cn_stock_util",
            "cn_stock_src.yahoo",
            "cn_stock_src.yahoo.test_yahoo_data",
            "test",
            "test.netease",
            "test.netease.test_netease",
            "test.sina",
            "test.sina.test_sina_stock",
            "test.tdx",
            "test.tdx.test_tdx",
            "test.test_cn_stock_util",
            "test.yahoo",
            "test.yahoo.test_yahoo_data"
        ],
        "version": "0.1.8"
    },
    "cn-treasury-curve": {
        "cmdline": [],
        "modules": [
            "cn_treasury_curve",
            "cn_treasury_curve.data",
            "cn_treasury_curve.xlsx"
        ],
        "version": "0.5"
    },
    "cnab240": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cnam": {
        "cmdline": [
            "cnam"
        ],
        "modules": [],
        "version": "0.2"
    },
    "cnamedtuple": {
        "cmdline": [],
        "modules": [
            "cnamedtuple"
        ],
        "version": "0.1.6"
    },
    "cnb": {
        "cmdline": [],
        "modules": [
            "cnb"
        ],
        "version": "0.9.3"
    },
    "cnb-exchange-rate": {
        "cmdline": [],
        "modules": [
            "cnb_exchange_rate",
            "cnb_exchange_rate.cnb_exchange_rate"
        ],
        "version": "0.1.2"
    },
    "cnc25d": {
        "cmdline": [
            "cnc25d_example_generator.py"
        ],
        "modules": [
            "cnc25d",
            "cnc25d.angles",
            "cnc25d.axle_lid",
            "cnc25d.bagel",
            "cnc25d.bare_design",
            "cnc25d.bell",
            "cnc25d.bell_bagel_assembly",
            "cnc25d.bell_outline",
            "cnc25d.box_wood_frame",
            "cnc25d.box_wood_frame_ng",
            "cnc25d.box_wood_frame_outline",
            "cnc25d.cnc25d_api",
            "cnc25d.cnc25d_design",
            "cnc25d.cnc_outline",
            "cnc25d.crest",
            "cnc25d.cross_cube",
            "cnc25d.cross_cube_sub",
            "cnc25d.design_help",
            "cnc25d.design_output",
            "cnc25d.display_backend",
            "cnc25d.epicyclic_gearing",
            "cnc25d.export_2d",
            "cnc25d.gear_profile",
            "cnc25d.gear_profile_outline",
            "cnc25d.gearbar",
            "cnc25d.gearring",
            "cnc25d.gearwheel",
            "cnc25d.gimbal",
            "cnc25d.importing_freecad",
            "cnc25d.motor_lid",
            "cnc25d.outline_backends",
            "cnc25d.positioning",
            "cnc25d.small_geometry",
            "cnc25d.split_gearwheel",
            "cnc25d.tests",
            "cnc25d.tests.axle_lid_macro",
            "cnc25d.tests.bagel_macro",
            "cnc25d.tests.bell_bagel_assembly_macro",
            "cnc25d.tests.bell_macro",
            "cnc25d.tests.box_wood_frame_macro",
            "cnc25d.tests.bug_dxf_arc",
            "cnc25d.tests.cnc25d_api_macro",
            "cnc25d.tests.crest_macro",
            "cnc25d.tests.cross_cube_macro",
            "cnc25d.tests.epicyclic_gearing_macro",
            "cnc25d.tests.gear_profile_macro",
            "cnc25d.tests.gearbar_macro",
            "cnc25d.tests.gearring_macro",
            "cnc25d.tests.gearwheel_macro",
            "cnc25d.tests.gimbal_macro",
            "cnc25d.tests.importing_cnc25d",
            "cnc25d.tests.juergen_four_gearwheel_test",
            "cnc25d.tests.motor_lid_macro",
            "cnc25d.tests.simple_cnc25d_api_macro",
            "cnc25d.tests.split_gearwheel_macro"
        ],
        "version": "0.1.10"
    },
    "cnclibrary": {
        "cmdline": [],
        "modules": [
            "CncLibrary",
            "CncLibrary.version"
        ],
        "version": "0.1.1"
    },
    "cnd": {
        "cmdline": [
            "cnd",
            "cndcc"
        ],
        "modules": [
            "cnd",
            "cnd.version"
        ],
        "version": "2012.1"
    },
    "cnd-utilitybelt": {
        "cmdline": [],
        "modules": [
            "utilitybelt",
            "utilitybelt.utilitybelt"
        ],
        "version": "0.2.1"
    },
    "cndate": {
        "cmdline": [],
        "modules": [
            "cndate",
            "cndate.chinese_parse1_my",
            "cndate.cnparser",
            "cndate.convert_test",
            "cndate.globels",
            "cndate.langconv",
            "cndate.parse_object",
            "cndate.parser_collections",
            "cndate.process",
            "cndate.test",
            "cndate.utils",
            "cndate.zh_wiki"
        ],
        "version": "1.2"
    },
    "cndota2-nester": {
        "cmdline": [],
        "modules": [
            "CNDotA2_nester"
        ],
        "version": "1.0.7"
    },
    "cne": {
        "cmdline": [],
        "modules": [
            "cne",
            "cne.choices"
        ],
        "version": "0.1.4"
    },
    "cnfconverter": {
        "cmdline": [],
        "modules": [
            "cnf",
            "cnf.cnfconverter",
            "cnf.parsetab"
        ],
        "version": "1.1.1"
    },
    "cnfg": {
        "cmdline": [],
        "modules": [
            "cnfg",
            "cnfg.cnfg",
            "cnfg.test"
        ],
        "version": "1.0.0"
    },
    "cnfgen": {
        "cmdline": [],
        "modules": [
            "cnfformula",
            "cnfformula.cmdline",
            "cnfformula.cnf",
            "cnfformula.cnfgen",
            "cnfformula.families",
            "cnfformula.families.cliquecoloring",
            "cnfformula.families.coloring",
            "cnfformula.families.counting",
            "cnfformula.families.dominatingset",
            "cnfformula.families.graphisomorphism",
            "cnfformula.families.ordering",
            "cnfformula.families.pebbling",
            "cnfformula.families.pigeonhole",
            "cnfformula.families.ramsey",
            "cnfformula.families.randomformulas",
            "cnfformula.families.simple",
            "cnfformula.families.subgraph",
            "cnfformula.families.subsetcardinality",
            "cnfformula.families.tseitin",
            "cnfformula.graphs",
            "cnfformula.prjdata",
            "cnfformula.transformations",
            "cnfformula.transformations.shuffle",
            "cnfformula.transformations.substitutions",
            "cnfformula.utils",
            "cnfformula.utils.cnfshuffle",
            "cnfformula.utils.dimacstransform",
            "cnfformula.utils.kthlist2pebbling",
            "cnfformula.utils.solver"
        ],
        "version": "0.7.1"
    },
    "cnfggr": {
        "cmdline": [
            "cnfggr"
        ],
        "modules": [
            "cnfggr",
            "cnfggr.ansi",
            "cnfggr.core",
            "cnfggr.version"
        ],
        "version": "0.0.3"
    },
    "cnfhash": {
        "cmdline": [],
        "modules": [
            "cnfhash",
            "cnfhash.hashing",
            "cnfhash.run"
        ],
        "version": "2.1.2"
    },
    "cnh": {
        "cmdline": [
            "cctrlapp",
            "cctrluser",
            "cnhapp",
            "cnhuser",
            "dcapp",
            "dcuser",
            "exoapp",
            "exouser"
        ],
        "modules": [
            "cctrl",
            "cctrl.addonoptionhelpers",
            "cctrl.app",
            "cctrl.app_commands",
            "cctrl.auth",
            "cctrl.common",
            "cctrl.error",
            "cctrl.keyhelpers",
            "cctrl.oshelpers",
            "cctrl.output",
            "cctrl.settings",
            "cctrl.user",
            "cctrl.user_commands",
            "cctrl.version",
            "tests",
            "tests.app_test",
            "tests.config_test",
            "tests.keyhelpers_test",
            "tests.settings_test",
            "tests.user_test"
        ],
        "version": "1.16.1"
    },
    "cnilsimsa": {
        "cmdline": [],
        "modules": [
            "cnilsimsa"
        ],
        "version": "0.1.2"
    },
    "cno": {
        "cmdline": [],
        "modules": [
            "cno",
            "cno.admin",
            "cno.admin.distribute",
            "cno.admin.install",
            "cno.apps",
            "cno.apps.plotmodel",
            "cno.boolean",
            "cno.boolean.asp",
            "cno.boolean.cnorbool",
            "cno.boolean.cnordt",
            "cno.boolean.cross_validation",
            "cno.boolean.simulator",
            "cno.boolean.steady",
            "cno.boolean.steady_cont",
            "cno.boolean.steady_cont_neg",
            "cno.boolean.ternary",
            "cno.core",
            "cno.core.base",
            "cno.core.fitness",
            "cno.core.gtt",
            "cno.core.models",
            "cno.core.params",
            "cno.core.report",
            "cno.core.results",
            "cno.core.standalone",
            "cno.datasets",
            "cno.datasets.EGFR-ErbB_PCB2009",
            "cno.datasets.ExtLiverBMC2012",
            "cno.datasets.ExtLiverPCB",
            "cno.datasets.ExtLiverPriHuMCP2010",
            "cno.datasets.HepG2CancerRes2011",
            "cno.datasets.LiverDREAM",
            "cno.datasets.LiverMSB2009",
            "cno.datasets.TCellPCB2007",
            "cno.datasets.ToyMMB",
            "cno.datasets.ToyMMB_Feedback",
            "cno.datasets.ToyMMB_FeedbackAnd",
            "cno.datasets.ToyMMB_T2",
            "cno.datasets.ToyMMB_added_link",
            "cno.datasets.ToyMSB2009",
            "cno.datasets.ToyPB",
            "cno.datasets.ToyPB_SBML",
            "cno.datasets.ToyPB_True",
            "cno.datasets.ToyPCB",
            "cno.datasets.cnodata",
            "cno.feeder",
            "cno.feeder.feeder",
            "cno.fuzzy",
            "cno.fuzzy.cnofuzzy",
            "cno.fuzzy.cnorfuzzy",
            "cno.fuzzy.fuzzy",
            "cno.io",
            "cno.io.adj2sif",
            "cno.io.cna",
            "cno.io.cnograph",
            "cno.io.eda",
            "cno.io.mapback",
            "cno.io.measurements",
            "cno.io.metabolites",
            "cno.io.midas",
            "cno.io.midas_normalisation",
            "cno.io.multigraph",
            "cno.io.multimidas",
            "cno.io.net",
            "cno.io.obs",
            "cno.io.randomisation",
            "cno.io.reactions",
            "cno.io.sbml",
            "cno.io.sbmlqual",
            "cno.io.sif",
            "cno.io.sif2asp",
            "cno.io.sop2sif",
            "cno.io.validation",
            "cno.io.xcnograph",
            "cno.io.xmlmidas",
            "cno.milp",
            "cno.milp.model",
            "cno.misc",
            "cno.misc.classifier",
            "cno.misc.dependencies",
            "cno.misc.matfun",
            "cno.misc.profiler",
            "cno.misc.tools",
            "cno.misc.truthtable",
            "cno.ode",
            "cno.ode.cnorode",
            "cno.optimisers",
            "cno.optimisers.binary_tools",
            "cno.optimisers.core",
            "cno.optimisers.diagnostics",
            "cno.optimisers.genetic_algo",
            "cno.optimisers.metropolis",
            "cno.optimisers.multiresults",
            "cno.optimisers.optimisation",
            "cno.optimisers.results",
            "cno.testing",
            "test",
            "test.admin",
            "test.admin.test_admin",
            "test.admin.test_install",
            "test.apps",
            "test.apps.test_plotmodel",
            "test.boolean",
            "test.boolean.test_asp",
            "test.boolean.test_cnorbool",
            "test.boolean.test_cnordt",
            "test.boolean.test_steady",
            "test.datasets",
            "test.datasets.test_datasets",
            "test.feeder",
            "test.feeder.test_feeder",
            "test.fuzzy",
            "test.fuzzy.test_fuzzy",
            "test.io",
            "test.io.test_adj2sif",
            "test.io.test_cna",
            "test.io.test_cnograph",
            "test.io.test_eda",
            "test.io.test_mapback",
            "test.io.test_measurements",
            "test.io.test_metabolites",
            "test.io.test_midas",
            "test.io.test_net",
            "test.io.test_obs",
            "test.io.test_reactions",
            "test.io.test_sbml",
            "test.io.test_sif",
            "test.io.test_sif2asp_net",
            "test.io.test_sop2sif",
            "test.io.test_xcnograph",
            "test.io.test_xmlmidas",
            "test.milp",
            "test.milp.test_milp_model",
            "test.misc",
            "test.misc.test_matfun",
            "test.misc.test_profiler",
            "test.misc.test_tools",
            "test.misc.test_truthtable",
            "test.ode",
            "test.ode.test_cnorode",
            "test.testing",
            "test.testing.test_getdata"
        ],
        "version": "0.1.4"
    },
    "cnorm": {
        "cmdline": [],
        "modules": [
            "cnorm",
            "cnorm.nodes",
            "cnorm.parsing",
            "cnorm.parsing.declaration",
            "cnorm.parsing.expression",
            "cnorm.parsing.literal",
            "cnorm.parsing.statement",
            "cnorm.passes",
            "cnorm.passes.pickle",
            "cnorm.passes.to_c",
            "cnorm.passes.visit"
        ],
        "version": "4.0.5"
    },
    "cnprep": {
        "cmdline": [],
        "modules": [
            "cnprep",
            "cnprep.extractor",
            "cnprep.test_extractor",
            "cnprep.zh2num"
        ],
        "version": "0.1.10"
    },
    "cnpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cnr": {
        "cmdline": [
            "cnr"
        ],
        "modules": [
            "cnrclient",
            "cnrclient.auth",
            "cnrclient.client",
            "cnrclient.commands",
            "cnrclient.commands.channel",
            "cnrclient.commands.cli",
            "cnrclient.commands.command_base",
            "cnrclient.commands.config",
            "cnrclient.commands.delete_package",
            "cnrclient.commands.helm",
            "cnrclient.commands.inspect",
            "cnrclient.commands.list_package",
            "cnrclient.commands.login",
            "cnrclient.commands.logout",
            "cnrclient.commands.plugins",
            "cnrclient.commands.pull",
            "cnrclient.commands.push",
            "cnrclient.commands.show",
            "cnrclient.commands.version",
            "cnrclient.config",
            "cnrclient.discovery",
            "cnrclient.display",
            "cnrclient.formats",
            "cnrclient.formats.helm",
            "cnrclient.formats.helm.chart",
            "cnrclient.formats.helm.manifest_chart",
            "cnrclient.formats.kpm",
            "cnrclient.formats.kpm.kpm",
            "cnrclient.formats.kub_base",
            "cnrclient.pack",
            "cnrclient.plugins",
            "cnrclient.plugins.helm",
            "cnrclient.utils"
        ],
        "version": "0.3.8"
    },
    "cnr-server": {
        "cmdline": [],
        "modules": [
            "cnr",
            "cnr.api",
            "cnr.api.app",
            "cnr.api.config",
            "cnr.api.impl",
            "cnr.api.impl.registry",
            "cnr.api.info",
            "cnr.api.registry",
            "cnr.api.wsgi",
            "cnr.exception",
            "cnr.models",
            "cnr.models.blob_base",
            "cnr.models.channel_base",
            "cnr.models.db_base",
            "cnr.models.kv",
            "cnr.models.kv.blob_kv_base",
            "cnr.models.kv.channel_kv_base",
            "cnr.models.kv.etcd",
            "cnr.models.kv.etcd.blob",
            "cnr.models.kv.etcd.channel",
            "cnr.models.kv.etcd.db",
            "cnr.models.kv.etcd.models_index",
            "cnr.models.kv.etcd.package",
            "cnr.models.kv.filesystem",
            "cnr.models.kv.filesystem.blob",
            "cnr.models.kv.filesystem.channel",
            "cnr.models.kv.filesystem.db",
            "cnr.models.kv.filesystem.models_index",
            "cnr.models.kv.filesystem.package",
            "cnr.models.kv.models_index_base",
            "cnr.models.kv.package_kv_base",
            "cnr.models.kv.redis",
            "cnr.models.kv.redis.blob",
            "cnr.models.kv.redis.channel",
            "cnr.models.kv.redis.db",
            "cnr.models.kv.redis.models_index",
            "cnr.models.kv.redis.package",
            "cnr.models.package_base",
            "cnr.packager",
            "cnr.semver",
            "cnr.tests",
            "cnr.tests.conftest",
            "cnr.tests.test_apiserver",
            "cnr.tests.test_models",
            "cnr.utils"
        ],
        "version": "0.2.7.post2"
    },
    "cnrclient": {
        "cmdline": [
            "cnr"
        ],
        "modules": [
            "cnrclient",
            "cnrclient.auth",
            "cnrclient.client",
            "cnrclient.commands",
            "cnrclient.commands.channel",
            "cnrclient.commands.cli",
            "cnrclient.commands.command_base",
            "cnrclient.commands.config",
            "cnrclient.commands.delete_package",
            "cnrclient.commands.inspect",
            "cnrclient.commands.list_package",
            "cnrclient.commands.login",
            "cnrclient.commands.logout",
            "cnrclient.commands.plugins",
            "cnrclient.commands.pull",
            "cnrclient.commands.push",
            "cnrclient.commands.show",
            "cnrclient.commands.version",
            "cnrclient.config",
            "cnrclient.discovery",
            "cnrclient.display",
            "cnrclient.formats",
            "cnrclient.formats.helm",
            "cnrclient.formats.helm.chart",
            "cnrclient.formats.helm.manifest_chart",
            "cnrclient.formats.kpm",
            "cnrclient.formats.kpm.kpm",
            "cnrclient.formats.kub_base",
            "cnrclient.pack",
            "cnrclient.utils"
        ],
        "version": "0.3.5"
    },
    "cnregion": {
        "cmdline": [],
        "modules": [
            "cnregion",
            "cnregion._compat",
            "cnregion.division",
            "cnregion.exceptions",
            "cnregion.region",
            "cnregion.utils"
        ],
        "version": "0.1.0"
    },
    "cns.recipe.maildrophost": {
        "cmdline": [],
        "modules": [
            "cns",
            "cns.recipe",
            "cns.recipe.maildrophost"
        ],
        "version": "1.5.2"
    },
    "cns.recipe.symlink": {
        "cmdline": [],
        "modules": [
            "cns",
            "cns.recipe",
            "cns.recipe.symlink",
            "cns.recipe.symlink.tests",
            "cns.recipe.symlink.tests.test_docs"
        ],
        "version": "0.2.3"
    },
    "cns.recipe.zmysqlda": {
        "cmdline": [],
        "modules": [
            "cns",
            "cns.recipe",
            "cns.recipe.zmysqlda"
        ],
        "version": "2.0.9"
    },
    "cnsdi": {
        "cmdline": [],
        "modules": [
            "di",
            "di.decorator",
            "di.exceptions",
            "di.helpers",
            "di.test",
            "di.test.test_decorators",
            "di.test.test_exceptions",
            "di.test.test_helpers",
            "di.test.test_namespaced_services",
            "di.test.test_partial_injection"
        ],
        "version": "0.1.4"
    },
    "cntalib": {
        "cmdline": [],
        "modules": [
            "cntalib",
            "cntalib.K_matching",
            "cntalib.K_matching.K_matching",
            "cntalib.Logic",
            "cntalib.Logic.Logic",
            "cntalib.Reference",
            "cntalib.Reference.Reference"
        ],
        "version": "20170310"
    },
    "cntv": {
        "cmdline": [],
        "modules": [
            "cntv"
        ],
        "version": "1.0.0"
    },
    "cnv": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cnvkit": {
        "cmdline": [
            "cnn_updater.py",
            "cnvkit.py",
            "coverage_bin_size.py",
            "guess_baits.py",
            "refFlat2bed.py",
            "reference2targets.py"
        ],
        "modules": [
            "cnvlib",
            "cnvlib._version",
            "cnvlib.access",
            "cnvlib.antitarget",
            "cnvlib.autobin",
            "cnvlib.batch",
            "cnvlib.call",
            "cnvlib.cmdutil",
            "cnvlib.cnary",
            "cnvlib.commands",
            "cnvlib.core",
            "cnvlib.coverage",
            "cnvlib.descriptives",
            "cnvlib.diagram",
            "cnvlib.export",
            "cnvlib.fix",
            "cnvlib.genome",
            "cnvlib.genome.chromsort",
            "cnvlib.genome.combiners",
            "cnvlib.genome.gary",
            "cnvlib.genome.intersect",
            "cnvlib.genome.merge",
            "cnvlib.genome.pdcombiners",
            "cnvlib.genome.rangelabel",
            "cnvlib.genome.roman",
            "cnvlib.genome.subdivide",
            "cnvlib.genome.subtract",
            "cnvlib.heatmap",
            "cnvlib.importers",
            "cnvlib.jenks",
            "cnvlib.metrics",
            "cnvlib.parallel",
            "cnvlib.params",
            "cnvlib.plots",
            "cnvlib.reference",
            "cnvlib.reports",
            "cnvlib.samutil",
            "cnvlib.scatter",
            "cnvlib.segfilters",
            "cnvlib.segmentation",
            "cnvlib.segmentation.cbs",
            "cnvlib.segmentation.flasso",
            "cnvlib.segmentation.haar",
            "cnvlib.smoothing",
            "cnvlib.tabio",
            "cnvlib.tabio.bedio",
            "cnvlib.tabio.genepred",
            "cnvlib.tabio.gff",
            "cnvlib.tabio.picard",
            "cnvlib.tabio.seg",
            "cnvlib.tabio.simplevcf",
            "cnvlib.tabio.tab",
            "cnvlib.tabio.textcoord",
            "cnvlib.tabio.util",
            "cnvlib.tabio.vcfio",
            "cnvlib.target",
            "cnvlib.vary"
        ],
        "version": "0.8.5"
    },
    "cnx-archive": {
        "cmdline": [],
        "modules": [
            "cnxarchive",
            "cnxarchive.cache",
            "cnxarchive.config",
            "cnxarchive.database",
            "cnxarchive.events",
            "cnxarchive.logs",
            "cnxarchive.robots",
            "cnxarchive.scripts",
            "cnxarchive.scripts._utils",
            "cnxarchive.scripts.export_epub",
            "cnxarchive.scripts.export_epub.db",
            "cnxarchive.scripts.export_epub.exceptions",
            "cnxarchive.scripts.export_epub.main",
            "cnxarchive.scripts.export_epub.modeling",
            "cnxarchive.scripts.hits_counter",
            "cnxarchive.scripts.initializedb",
            "cnxarchive.scripts.inject_resource",
            "cnxarchive.search",
            "cnxarchive.sitemap",
            "cnxarchive.tests",
            "cnxarchive.tests.scripts",
            "cnxarchive.tests.scripts.test_export_epub",
            "cnxarchive.tests.scripts.test_hit_counter",
            "cnxarchive.tests.scripts.test_initializedb",
            "cnxarchive.tests.scripts.test_inject_resource",
            "cnxarchive.tests.scripts.test_utils",
            "cnxarchive.tests.test_database",
            "cnxarchive.tests.test_functional",
            "cnxarchive.tests.test_routes",
            "cnxarchive.tests.test_search",
            "cnxarchive.tests.test_sitemap",
            "cnxarchive.tests.test_utils",
            "cnxarchive.tests.test_views",
            "cnxarchive.tests.testing",
            "cnxarchive.tests.transforms",
            "cnxarchive.tests.transforms.test_converters",
            "cnxarchive.tests.transforms.test_producers",
            "cnxarchive.tests.transforms.test_resolvers",
            "cnxarchive.transforms",
            "cnxarchive.transforms.converters",
            "cnxarchive.transforms.producers",
            "cnxarchive.transforms.resolvers",
            "cnxarchive.utils",
            "cnxarchive.utils.date",
            "cnxarchive.utils.ident_hash",
            "cnxarchive.utils.mimetype",
            "cnxarchive.utils.text",
            "cnxarchive.views"
        ],
        "version": "2.5.1"
    },
    "cnx-authoring": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cnx-completezip": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cnx-db": {
        "cmdline": [],
        "modules": [
            "cnxdb",
            "cnxdb._version",
            "cnxdb.cli",
            "cnxdb.cli.common",
            "cnxdb.cli.discovery",
            "cnxdb.cli.main",
            "cnxdb.cli.subcommands",
            "cnxdb.init",
            "cnxdb.init.exceptions",
            "cnxdb.init.main",
            "cnxdb.init.manifest",
            "cnxdb.tests",
            "cnxdb.tests.cli",
            "cnxdb.tests.cli.scanned_import",
            "cnxdb.tests.cli.scanned_import.module1",
            "cnxdb.tests.cli.scanned_import.module2",
            "cnxdb.tests.cli.test_discovery",
            "cnxdb.tests.cli.test_main",
            "cnxdb.tests.conftest",
            "cnxdb.tests.init",
            "cnxdb.tests.init.test_main",
            "cnxdb.tests.init.test_manifest",
            "cnxdb.tests.schema",
            "cnxdb.tests.schema.test_triggers",
            "cnxdb.tests.testing"
        ],
        "version": "0.5.0"
    },
    "cnx-easybake": {
        "cmdline": [],
        "modules": [
            "cnxeasybake",
            "cnxeasybake.oven",
            "cnxeasybake.scripts",
            "cnxeasybake.scripts.main",
            "cnxeasybake.tests",
            "cnxeasybake.tests.test_cli",
            "cnxeasybake.tests.test_oven",
            "cnxeasybake.tests.test_rulesets"
        ],
        "version": "0.6.0"
    },
    "cnx-epub": {
        "cmdline": [],
        "modules": [
            "cnxepub",
            "cnxepub.adapters",
            "cnxepub.collation",
            "cnxepub.data_uri",
            "cnxepub.epub",
            "cnxepub.formatters",
            "cnxepub.html_parsers",
            "cnxepub.models",
            "cnxepub.scripts",
            "cnxepub.scripts.collated_single_html",
            "cnxepub.scripts.collated_single_html.main",
            "cnxepub.scripts.single_html",
            "cnxepub.scripts.single_html.main",
            "cnxepub.testing",
            "cnxepub.tests",
            "cnxepub.tests.scripts",
            "cnxepub.tests.scripts.test_collated_single_html",
            "cnxepub.tests.scripts.test_single_html",
            "cnxepub.tests.test_adapters",
            "cnxepub.tests.test_collation",
            "cnxepub.tests.test_epub",
            "cnxepub.tests.test_formatters",
            "cnxepub.tests.test_html_parsers",
            "cnxepub.tests.test_models"
        ],
        "version": "0.10.0"
    },
    "cnx-litezip": {
        "cmdline": [],
        "modules": [
            "litezip",
            "litezip.cli",
            "litezip.cli.common",
            "litezip.cli.completezip2litezip",
            "litezip.cli.validate",
            "litezip.completezip",
            "litezip.exceptions",
            "litezip.logger",
            "litezip.main",
            "litezip.tests",
            "litezip.tests.cli",
            "litezip.tests.cli.test_completezip2litezip",
            "litezip.tests.cli.test_validate",
            "litezip.tests.conftest",
            "litezip.tests.test_completezip",
            "litezip.tests.test_main",
            "litezip.tests.test_validate",
            "litezip.tests.utils",
            "litezip.validate"
        ],
        "version": "1.1.0"
    },
    "cnx-publishing": {
        "cmdline": [],
        "modules": [
            "cnxpublishing",
            "cnxpublishing._version",
            "cnxpublishing.authnz",
            "cnxpublishing.collation",
            "cnxpublishing.config",
            "cnxpublishing.db",
            "cnxpublishing.exceptions",
            "cnxpublishing.main",
            "cnxpublishing.publish",
            "cnxpublishing.scripts",
            "cnxpublishing.scripts.post_publication",
            "cnxpublishing.tests",
            "cnxpublishing.tests.scripts",
            "cnxpublishing.tests.scripts.test_post_publication",
            "cnxpublishing.tests.test_collation",
            "cnxpublishing.tests.test_db",
            "cnxpublishing.tests.test_doctests",
            "cnxpublishing.tests.test_publish",
            "cnxpublishing.tests.test_utils",
            "cnxpublishing.tests.testing",
            "cnxpublishing.tests.use_cases",
            "cnxpublishing.tests.views",
            "cnxpublishing.tests.views.base",
            "cnxpublishing.tests.views.test_admin",
            "cnxpublishing.tests.views.test_api_keys",
            "cnxpublishing.tests.views.test_publishing",
            "cnxpublishing.tests.views.test_user_actions",
            "cnxpublishing.utils",
            "cnxpublishing.views",
            "cnxpublishing.views.admin",
            "cnxpublishing.views.api_keys",
            "cnxpublishing.views.common",
            "cnxpublishing.views.moderation",
            "cnxpublishing.views.publishing",
            "cnxpublishing.views.user_actions"
        ],
        "version": "0.7.0"
    },
    "cnx-query-grammar": {
        "cmdline": [],
        "modules": [
            "cnxquerygrammar",
            "cnxquerygrammar.query_parser",
            "cnxquerygrammar.tests"
        ],
        "version": "0.2.2"
    },
    "cnxml": {
        "cmdline": [],
        "modules": [
            "cnxml",
            "cnxml.cli",
            "cnxml.jing",
            "cnxml.tests",
            "cnxml.tests.conftest",
            "cnxml.tests.test_cli",
            "cnxml.tests.test_jing",
            "cnxml.tests.test_util",
            "cnxml.tests.test_validation",
            "cnxml.util",
            "cnxml.validation"
        ],
        "version": "2.0.0"
    },
    "co": {
        "cmdline": [],
        "modules": [
            "co",
            "co.component",
            "co.converters",
            "co.difference",
            "co.feature",
            "co.identifiers",
            "co.mutation",
            "co.organism",
            "co.translation"
        ],
        "version": "0.2.0"
    },
    "co-nester": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.1"
    },
    "co2meter": {
        "cmdline": [],
        "modules": [
            "co2meter",
            "co2meter._version",
            "co2meter.co2meter"
        ],
        "version": "0.1.2"
    },
    "co2mpas": {
        "cmdline": [],
        "modules": [
            "co2mpas",
            "co2mpas._vendor",
            "co2mpas._vendor.traitlets",
            "co2mpas._vendor.traitlets._version",
            "co2mpas._vendor.traitlets.config",
            "co2mpas._vendor.traitlets.config.application",
            "co2mpas._vendor.traitlets.config.configurable",
            "co2mpas._vendor.traitlets.config.loader",
            "co2mpas._vendor.traitlets.config.manager",
            "co2mpas._vendor.traitlets.log",
            "co2mpas._vendor.traitlets.traitlets",
            "co2mpas._vendor.traitlets.utils",
            "co2mpas._vendor.traitlets.utils.bunch",
            "co2mpas._vendor.traitlets.utils.getargspec",
            "co2mpas._vendor.traitlets.utils.importstring",
            "co2mpas._vendor.traitlets.utils.sentinel",
            "co2mpas._version",
            "co2mpas.batch",
            "co2mpas.conf",
            "co2mpas.datasync",
            "co2mpas.docoptutils",
            "co2mpas.io",
            "co2mpas.io.constants",
            "co2mpas.io.dill",
            "co2mpas.io.excel",
            "co2mpas.io.schema",
            "co2mpas.io.validations",
            "co2mpas.model",
            "co2mpas.model.physical",
            "co2mpas.model.physical.clutch_tc",
            "co2mpas.model.physical.clutch_tc.clutch",
            "co2mpas.model.physical.clutch_tc.torque_converter",
            "co2mpas.model.physical.cycle",
            "co2mpas.model.physical.cycle.NEDC",
            "co2mpas.model.physical.cycle.WLTP",
            "co2mpas.model.physical.defaults",
            "co2mpas.model.physical.electrics",
            "co2mpas.model.physical.electrics.electrics_prediction",
            "co2mpas.model.physical.engine",
            "co2mpas.model.physical.engine.co2_emission",
            "co2mpas.model.physical.engine.cold_start",
            "co2mpas.model.physical.engine.start_stop",
            "co2mpas.model.physical.engine.thermal",
            "co2mpas.model.physical.final_drive",
            "co2mpas.model.physical.gear_box",
            "co2mpas.model.physical.gear_box.at_gear",
            "co2mpas.model.physical.gear_box.cvt",
            "co2mpas.model.physical.gear_box.mechanical",
            "co2mpas.model.physical.gear_box.thermal",
            "co2mpas.model.physical.vehicle",
            "co2mpas.model.physical.wheels",
            "co2mpas.model.selector",
            "co2mpas.model.selector.co2_params",
            "co2mpas.plan",
            "co2mpas.plot",
            "co2mpas.report",
            "co2mpas.sampling",
            "co2mpas.sampling.baseapp",
            "co2mpas.sampling.cfgcmd",
            "co2mpas.sampling.crypto",
            "co2mpas.sampling.dice",
            "co2mpas.sampling.project",
            "co2mpas.sampling.report",
            "co2mpas.sampling.tstamp",
            "co2mpas.tkdialog",
            "co2mpas.tkui",
            "co2mpas.utils"
        ],
        "version": "1.6.0.dev4"
    },
    "co2sys": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "coa": {
        "cmdline": [],
        "modules": [
            "coa",
            "coa.coa"
        ],
        "version": "0.1"
    },
    "coach": {
        "cmdline": [],
        "modules": [
            "coach"
        ],
        "version": "1.0.0"
    },
    "coach-ljw": {
        "cmdline": [],
        "modules": [
            "coach_ljw"
        ],
        "version": "1.0.0"
    },
    "coal": {
        "cmdline": [],
        "modules": [
            "coal",
            "coal.async",
            "coal.caching"
        ],
        "version": "0.0.2"
    },
    "coal-mine": {
        "cmdline": [],
        "modules": [
            "coal_mine",
            "coal_mine.abstract_store",
            "coal_mine.business_logic",
            "coal_mine.cli",
            "coal_mine.crontab_schedule",
            "coal_mine.memory_store",
            "coal_mine.mongo_store",
            "coal_mine.server"
        ],
        "version": "0.4.10"
    },
    "coala": {
        "cmdline": [],
        "modules": [
            "coalib",
            "coalib.bearlib",
            "coalib.bearlib.abstractions",
            "coalib.bearlib.abstractions.ExternalBearWrap",
            "coalib.bearlib.abstractions.Linter",
            "coalib.bearlib.abstractions.SectionCreatable",
            "coalib.bearlib.aspects",
            "coalib.bearlib.aspects.Metadata",
            "coalib.bearlib.aspects.Redundancy",
            "coalib.bearlib.aspects.Spelling",
            "coalib.bearlib.aspects.base",
            "coalib.bearlib.aspects.collections",
            "coalib.bearlib.aspects.docs",
            "coalib.bearlib.aspects.meta",
            "coalib.bearlib.aspects.root",
            "coalib.bearlib.aspects.taste",
            "coalib.bearlib.languages",
            "coalib.bearlib.languages.Language",
            "coalib.bearlib.languages.LanguageDefinition",
            "coalib.bearlib.languages.definitions",
            "coalib.bearlib.languages.definitions.C",
            "coalib.bearlib.languages.definitions.CPP",
            "coalib.bearlib.languages.definitions.CSS",
            "coalib.bearlib.languages.definitions.CSharp",
            "coalib.bearlib.languages.definitions.Golang",
            "coalib.bearlib.languages.definitions.Java",
            "coalib.bearlib.languages.definitions.JavaScript",
            "coalib.bearlib.languages.definitions.Python",
            "coalib.bearlib.languages.definitions.Unknown",
            "coalib.bearlib.languages.definitions.Vala",
            "coalib.bearlib.languages.documentation",
            "coalib.bearlib.languages.documentation.DocstyleDefinition",
            "coalib.bearlib.languages.documentation.DocumentationComment",
            "coalib.bearlib.languages.documentation.DocumentationExtraction",
            "coalib.bearlib.naming_conventions",
            "coalib.bearlib.spacing",
            "coalib.bearlib.spacing.SpacingHelper",
            "coalib.bears",
            "coalib.bears.BEAR_KIND",
            "coalib.bears.Bear",
            "coalib.bears.GlobalBear",
            "coalib.bears.LocalBear",
            "coalib.bears.meta",
            "coalib.coala",
            "coalib.coala_ci",
            "coalib.coala_delete_orig",
            "coalib.coala_format",
            "coalib.coala_json",
            "coalib.coala_main",
            "coalib.coala_modes",
            "coalib.collecting",
            "coalib.collecting.Collectors",
            "coalib.collecting.Dependencies",
            "coalib.collecting.Importers",
            "coalib.core",
            "coalib.core.Bear",
            "coalib.core.CircularDependencyError",
            "coalib.core.Core",
            "coalib.core.DependencyTracker",
            "coalib.core.Graphs",
            "coalib.misc",
            "coalib.misc.BuildManPage",
            "coalib.misc.Caching",
            "coalib.misc.CachingUtilities",
            "coalib.misc.Compatibility",
            "coalib.misc.Constants",
            "coalib.misc.DictUtilities",
            "coalib.misc.Enum",
            "coalib.misc.Exceptions",
            "coalib.misc.Shell",
            "coalib.output",
            "coalib.output.ConfWriter",
            "coalib.output.ConsoleInteraction",
            "coalib.output.Interactions",
            "coalib.output.JSONEncoder",
            "coalib.output.Logging",
            "coalib.output.printers",
            "coalib.output.printers.LOG_LEVEL",
            "coalib.output.printers.ListLogPrinter",
            "coalib.output.printers.LogPrinter",
            "coalib.parsing",
            "coalib.parsing.CliParsing",
            "coalib.parsing.ConfParser",
            "coalib.parsing.DefaultArgParser",
            "coalib.parsing.Globbing",
            "coalib.parsing.LineParser",
            "coalib.processes",
            "coalib.processes.BearRunning",
            "coalib.processes.CONTROL_ELEMENT",
            "coalib.processes.LogPrinterThread",
            "coalib.processes.Processing",
            "coalib.processes.communication",
            "coalib.processes.communication.LogMessage",
            "coalib.results",
            "coalib.results.AbsolutePosition",
            "coalib.results.Diff",
            "coalib.results.HiddenResult",
            "coalib.results.LineDiff",
            "coalib.results.RESULT_SEVERITY",
            "coalib.results.Result",
            "coalib.results.ResultFilter",
            "coalib.results.SourcePosition",
            "coalib.results.SourceRange",
            "coalib.results.TextPosition",
            "coalib.results.TextRange",
            "coalib.results.result_actions",
            "coalib.results.result_actions.ApplyPatchAction",
            "coalib.results.result_actions.IgnoreResultAction",
            "coalib.results.result_actions.OpenEditorAction",
            "coalib.results.result_actions.PrintAspectAction",
            "coalib.results.result_actions.PrintDebugMessageAction",
            "coalib.results.result_actions.PrintMoreInfoAction",
            "coalib.results.result_actions.ResultAction",
            "coalib.results.result_actions.ShowPatchAction",
            "coalib.settings",
            "coalib.settings.Annotations",
            "coalib.settings.ConfigurationGathering",
            "coalib.settings.DocstringMetadata",
            "coalib.settings.FunctionMetadata",
            "coalib.settings.Section",
            "coalib.settings.SectionFilling",
            "coalib.settings.Setting",
            "coalib.testing",
            "coalib.testing.BearTestHelper",
            "coalib.testing.LocalBearTestHelper"
        ],
        "version": "0.12.0.dev20170517235947"
    },
    "coala-bears": {
        "cmdline": [],
        "modules": [
            "bears",
            "bears.Constants",
            "bears.c_languages",
            "bears.c_languages.CPPCheckBear",
            "bears.c_languages.CPPCleanBear",
            "bears.c_languages.CPPLintBear",
            "bears.c_languages.CSecurityBear",
            "bears.c_languages.CSharpLintBear",
            "bears.c_languages.ClangBear",
            "bears.c_languages.ClangComplexityBear",
            "bears.c_languages.GNUIndentBear",
            "bears.c_languages.codeclone_detection",
            "bears.c_languages.codeclone_detection.ClangASTPrintBear",
            "bears.c_languages.codeclone_detection.ClangCloneDetectionBear",
            "bears.c_languages.codeclone_detection.ClangCountVectorCreator",
            "bears.c_languages.codeclone_detection.ClangCountingConditions",
            "bears.c_languages.codeclone_detection.ClangFunctionDifferenceBear",
            "bears.c_languages.codeclone_detection.CloneDetectionRoutines",
            "bears.c_languages.codeclone_detection.CountVector",
            "bears.cmake",
            "bears.cmake.CMakeLintBear",
            "bears.coffee_script",
            "bears.coffee_script.CoffeeLintBear",
            "bears.configfiles",
            "bears.configfiles.DockerfileLintBear",
            "bears.configfiles.PuppetLintBear",
            "bears.configfiles.TOMLBear",
            "bears.css",
            "bears.css.CSSAutoPrefixBear",
            "bears.css.CSSLintBear",
            "bears.css.StyleLintBear",
            "bears.csv",
            "bears.csv.CSVLintBear",
            "bears.dart",
            "bears.dart.DartLintBear",
            "bears.elm",
            "bears.elm.ElmLintBear",
            "bears.general",
            "bears.general.AnnotationBear",
            "bears.general.CPDBear",
            "bears.general.DuplicateFileBear",
            "bears.general.FilenameBear",
            "bears.general.IndentationBear",
            "bears.general.InvalidLinkBear",
            "bears.general.KeywordBear",
            "bears.general.LicenseCheckBear",
            "bears.general.LineCountBear",
            "bears.general.LineLengthBear",
            "bears.general.QuotesBear",
            "bears.general.SpaceConsistencyBear",
            "bears.general.coalaBear",
            "bears.generate_package",
            "bears.gettext",
            "bears.gettext.DennisBear",
            "bears.go",
            "bears.go.GoErrCheckBear",
            "bears.go.GoImportsBear",
            "bears.go.GoLintBear",
            "bears.go.GoReturnsBear",
            "bears.go.GoTypeBear",
            "bears.go.GoVetBear",
            "bears.go.GofmtBear",
            "bears.haskell",
            "bears.haskell.GhcModBear",
            "bears.haskell.HaskellLintBear",
            "bears.hypertext",
            "bears.hypertext.BootLintBear",
            "bears.hypertext.HTMLLintBear",
            "bears.java",
            "bears.java.CheckstyleBear",
            "bears.java.InferBear",
            "bears.java.JavaPMDBear",
            "bears.jinja2",
            "bears.jinja2.Jinja2Bear",
            "bears.js",
            "bears.js.ESLintBear",
            "bears.js.HappinessLintBear",
            "bears.js.JSComplexityBear",
            "bears.js.JSHintBear",
            "bears.js.JSONFormatBear",
            "bears.julia",
            "bears.julia.JuliaLintBear",
            "bears.latex",
            "bears.latex.LatexLintBear",
            "bears.lua",
            "bears.lua.LuaLintBear",
            "bears.markdown",
            "bears.markdown.MarkdownBear",
            "bears.matlab",
            "bears.matlab.MatlabIndentationBear",
            "bears.natural_language",
            "bears.natural_language.AlexBear",
            "bears.natural_language.LanguageToolBear",
            "bears.natural_language.ProseLintBear",
            "bears.natural_language.SpellCheckBear",
            "bears.natural_language.WriteGoodLintBear",
            "bears.perl",
            "bears.perl.PerlCriticBear",
            "bears.php",
            "bears.php.PHPCodeSnifferBear",
            "bears.php.PHPLintBear",
            "bears.php.PHPMessDetectorBear",
            "bears.python",
            "bears.python.BanditBear",
            "bears.python.MypyBear",
            "bears.python.PEP8Bear",
            "bears.python.PEP8NotebookBear",
            "bears.python.PyCommentedCodeBear",
            "bears.python.PyDocStyleBear",
            "bears.python.PyFlakesBear",
            "bears.python.PyImportSortBear",
            "bears.python.PyLintBear",
            "bears.python.PyUnusedCodeBear",
            "bears.python.PycodestyleBear",
            "bears.python.PyromaBear",
            "bears.python.PythonPackageInitBear",
            "bears.python.RadonBear",
            "bears.python.VultureBear",
            "bears.python.YapfBear",
            "bears.python.requirements",
            "bears.python.requirements.PinRequirementsBear",
            "bears.python.requirements.PySafetyBear",
            "bears.r",
            "bears.r.FormatRBear",
            "bears.r.RLintBear",
            "bears.rest",
            "bears.rest.RSTcheckBear",
            "bears.rest.reSTLintBear",
            "bears.ruby",
            "bears.ruby.RuboCopBear",
            "bears.ruby.RubySmellBear",
            "bears.ruby.RubySyntaxBear",
            "bears.scala",
            "bears.scala.ScalaLintBear",
            "bears.scss",
            "bears.scss.SCSSLintBear",
            "bears.shell",
            "bears.shell.ShellCheckBear",
            "bears.sql",
            "bears.sql.SQLintBear",
            "bears.swift",
            "bears.swift.TailorBear",
            "bears.typescript",
            "bears.typescript.TSLintBear",
            "bears.vcs",
            "bears.vcs.git",
            "bears.vcs.git.GitCommitBear",
            "bears.verilog",
            "bears.verilog.VerilogLintBear",
            "bears.vhdl",
            "bears.vhdl.VHDLLintBear",
            "bears.vimscript",
            "bears.vimscript.VintBear",
            "bears.xml2",
            "bears.xml2.XMLBear",
            "bears.yaml",
            "bears.yaml.RAMLLintBear",
            "bears.yaml.YAMLLintBear"
        ],
        "version": "0.12.0.dev20170518184442"
    },
    "coala-bears-create": {
        "cmdline": [],
        "modules": [
            "coala_bears_create",
            "coala_bears_create.coala_bears_create"
        ],
        "version": "1.60"
    },
    "coala-decorators": {
        "cmdline": [],
        "modules": [
            "coala_decorators"
        ],
        "version": "0.3.0"
    },
    "coala-html": {
        "cmdline": [],
        "modules": [
            "coalahtml",
            "coalahtml.Constants",
            "coalahtml.coala_html",
            "coalahtml.helper",
            "coalahtml.tree"
        ],
        "version": "0.3.1"
    },
    "coala-install": {
        "cmdline": [],
        "modules": [
            "coala_install",
            "coala_install.installation_tool"
        ],
        "version": "0.1.6"
    },
    "coala-quickstart": {
        "cmdline": [],
        "modules": [
            "coala_quickstart",
            "coala_quickstart.Constants",
            "coala_quickstart.Strings",
            "coala_quickstart.coala_quickstart",
            "coala_quickstart.generation",
            "coala_quickstart.generation.Bears",
            "coala_quickstart.generation.FileGlobs",
            "coala_quickstart.generation.Project",
            "coala_quickstart.generation.Settings",
            "coala_quickstart.generation.Utilities",
            "coala_quickstart.interaction",
            "coala_quickstart.interaction.Logo",
            "tests",
            "tests.generation",
            "tests.generation.Bears",
            "tests.generation.FileGlobs",
            "tests.generation.Project",
            "tests.interaction",
            "tests.interaction.Logo"
        ],
        "version": "0.3.0"
    },
    "coala-utils": {
        "cmdline": [],
        "modules": [
            "coala_utils",
            "coala_utils.Constants",
            "coala_utils.ContextManagers",
            "coala_utils.Extensions",
            "coala_utils.FileUtils",
            "coala_utils.MutableValue",
            "coala_utils.Question",
            "coala_utils.decorators",
            "coala_utils.param_conversion",
            "coala_utils.string_processing",
            "coala_utils.string_processing.Core",
            "coala_utils.string_processing.Filters",
            "coala_utils.string_processing.InBetweenMatch",
            "coala_utils.string_processing.Match",
            "coala_utils.string_processing.StringConverter"
        ],
        "version": "0.6.2"
    },
    "coalabear": {
        "cmdline": [],
        "modules": [
            "coalacoalaBear",
            "coalacoalaBear.coalaBear"
        ],
        "version": "0.10.0"
    },
    "coalaip": {
        "cmdline": [],
        "modules": [
            "coalaip",
            "coalaip.coalaip",
            "coalaip.context_urls",
            "coalaip.data_formats",
            "coalaip.entities",
            "coalaip.exceptions",
            "coalaip.jsonld",
            "coalaip.model_validators",
            "coalaip.models",
            "coalaip.plugin",
            "coalaip.utils"
        ],
        "version": "0.0.3"
    },
    "coalaip-bigchaindb": {
        "cmdline": [],
        "modules": [
            "coalaip_bigchaindb",
            "coalaip_bigchaindb.plugin",
            "coalaip_bigchaindb.utils"
        ],
        "version": "0.0.4"
    },
    "coalition": {
        "cmdline": [],
        "modules": [
            "coalition",
            "coalition.coalition",
            "coalition.locale",
            "coalition.locale.countries",
            "coalition.tests",
            "coalition.vcard",
            "coalition.vcard.defintions",
            "coalition.vcard.utility",
            "coalition.vcard.vcard"
        ],
        "version": "0.0.0.dev5"
    },
    "coalmine": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "coalminer": {
        "cmdline": [],
        "modules": [
            "coalminer",
            "coalminer.console",
            "coalminer.console.main",
            "coalminer.console.parsers",
            "coalminer.core",
            "coalminer.core.phase",
            "coalminer.core.satellite",
            "coalminer.queue",
            "coalminer.queue.base",
            "coalminer.queue.redis",
            "coalminer.version"
        ],
        "version": "0.0.0"
    },
    "coalringbuf": {
        "cmdline": [],
        "modules": [
            "coalringbuf"
        ],
        "version": "0.1.0"
    },
    "coap": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "coapthon": {
        "cmdline": [
            "coapclient.py",
            "coapforwardproxy.py",
            "coapreverseproxy.py",
            "coapserver.py",
            "exampleresources.py"
        ],
        "modules": [
            "coapthon",
            "coapthon.caching",
            "coapthon.caching.cache",
            "coapthon.caching.coapcache",
            "coapthon.caching.coaplrucache",
            "coapthon.client",
            "coapthon.client.coap",
            "coapthon.client.helperclient",
            "coapthon.defines",
            "coapthon.forward_proxy",
            "coapthon.forward_proxy.coap",
            "coapthon.layers",
            "coapthon.layers.blocklayer",
            "coapthon.layers.cachelayer",
            "coapthon.layers.forwardLayer",
            "coapthon.layers.messagelayer",
            "coapthon.layers.observelayer",
            "coapthon.layers.requestlayer",
            "coapthon.layers.resourcelayer",
            "coapthon.messages",
            "coapthon.messages.message",
            "coapthon.messages.option",
            "coapthon.messages.request",
            "coapthon.messages.response",
            "coapthon.resources",
            "coapthon.resources.remoteResource",
            "coapthon.resources.resource",
            "coapthon.reverse_proxy",
            "coapthon.reverse_proxy.coap",
            "coapthon.serializer",
            "coapthon.server",
            "coapthon.server.coap",
            "coapthon.transaction",
            "coapthon.utils"
        ],
        "version": "4.0.2"
    },
    "coapy": {
        "cmdline": [
            "coapclient.py",
            "coapforwardproxy.py",
            "coapreverseproxy.py",
            "coapserver.py",
            "exampleresources.py"
        ],
        "modules": [
            "coapthon",
            "coapthon.client",
            "coapthon.client.coap",
            "coapthon.client.helperclient",
            "coapthon.defines",
            "coapthon.forward_proxy",
            "coapthon.forward_proxy.coap",
            "coapthon.layers",
            "coapthon.layers.blocklayer",
            "coapthon.layers.cachelayer",
            "coapthon.layers.forwardLayer",
            "coapthon.layers.messagelayer",
            "coapthon.layers.observelayer",
            "coapthon.layers.requestlayer",
            "coapthon.layers.resourcelayer",
            "coapthon.messages",
            "coapthon.messages.message",
            "coapthon.messages.option",
            "coapthon.messages.request",
            "coapthon.messages.response",
            "coapthon.resources",
            "coapthon.resources.remoteResource",
            "coapthon.resources.resource",
            "coapthon.reverse_proxy",
            "coapthon.reverse_proxy.coap",
            "coapthon.serializer",
            "coapthon.server",
            "coapthon.server.coap",
            "coapthon.transaction",
            "coapthon.utils"
        ],
        "version": "4.0.2"
    },
    "coards": {
        "cmdline": [],
        "modules": [
            "coards"
        ],
        "version": "1.0.5"
    },
    "coaster": {
        "cmdline": [],
        "modules": [
            "coaster",
            "coaster._version",
            "coaster.app",
            "coaster.assets",
            "coaster.db",
            "coaster.docflow",
            "coaster.gfm",
            "coaster.logger",
            "coaster.manage",
            "coaster.nlp",
            "coaster.sqlalchemy",
            "coaster.utils",
            "coaster.views"
        ],
        "version": "0.5.2"
    },
    "coati": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cob": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cobalt": {
        "cmdline": [],
        "modules": [
            "cobalt",
            "cobalt.act",
            "cobalt.render",
            "cobalt.toc",
            "cobalt.uri"
        ],
        "version": "0.1.11"
    },
    "cobalt-heat": {
        "cmdline": [],
        "modules": [
            "cobalt_heat",
            "cobalt_heat.instance"
        ],
        "version": "0.1"
    },
    "cobalt-python-novaclient-ext": {
        "cmdline": [],
        "modules": [
            "cobalt_python_novaclient_ext",
            "cobalt_python_novaclient_ext.agent"
        ],
        "version": "1.3.107"
    },
    "cobaltuoft": {
        "cmdline": [],
        "modules": [
            "cobaltuoft",
            "cobaltuoft.cobalt",
            "cobaltuoft.datasets",
            "cobaltuoft.endpoint",
            "cobaltuoft.helpers",
            "cobaltuoft.helpers.scrapers",
            "cobaltuoft.helpers.scrapers.active_apis",
            "cobaltuoft.helpers.scrapers.filter_keys",
            "cobaltuoft.response"
        ],
        "version": "0.1.1"
    },
    "cobaya": {
        "cmdline": [],
        "modules": [
            "cobaya",
            "cobaya.app",
            "cobaya.config",
            "cobaya.hamster_db",
            "cobaya.hamster_task",
            "cobaya.password",
            "cobaya.remote_server",
            "cobaya.remote_task",
            "tests",
            "tests.config",
            "tests.hamster_db"
        ],
        "version": "0.7.1"
    },
    "cobble": {
        "cmdline": [],
        "modules": [
            "cobble",
            "cobble.inflection",
            "cobble.six"
        ],
        "version": "0.1.2"
    },
    "cobbler": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cobblestones": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cobe": {
        "cmdline": [],
        "modules": [
            "cobe",
            "cobe.bot",
            "cobe.brain",
            "cobe.commands",
            "cobe.control",
            "cobe.instatrace",
            "cobe.scoring",
            "cobe.tokenizers"
        ],
        "version": "2.1.2"
    },
    "cobe-act": {
        "cmdline": [],
        "modules": [
            "act",
            "act._appbase",
            "act._log",
            "act._msgpack",
            "act._resources",
            "act._zkit"
        ],
        "version": "1.6.0"
    },
    "cobertura-aggregator": {
        "cmdline": [],
        "modules": [
            "cobertura_aggregator",
            "cobertura_aggregator.base",
            "cobertura_aggregator.run",
            "cobertura_aggregator.tests",
            "cobertura_aggregator.tests.api",
            "cobertura_aggregator.tests.test_run",
            "cobertura_aggregator.tests.xml"
        ],
        "version": "0.1"
    },
    "cobertura-clover-transform": {
        "cmdline": [],
        "modules": [
            "cobertura_clover_transform",
            "cobertura_clover_transform.converter"
        ],
        "version": "1.1.4.post1"
    },
    "cobertura2clover": {
        "cmdline": [],
        "modules": [
            "cobertura2clover",
            "cobertura2clover.parser"
        ],
        "version": "0.1"
    },
    "cobilib": {
        "cmdline": [],
        "modules": [
            "cobilib",
            "cobilib.cobigui",
            "cobilib.cobilib",
            "cobilib.tests"
        ],
        "version": "1.0.0"
    },
    "cobmcmc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cobolsharp": {
        "cmdline": [],
        "modules": [
            "CobolSharp",
            "CobolSharp.analyze",
            "CobolSharp.command",
            "CobolSharp.format",
            "CobolSharp.graph",
            "CobolSharp.koopa",
            "CobolSharp.output",
            "CobolSharp.structure",
            "CobolSharp.syntax"
        ],
        "version": "0.1"
    },
    "cobra": {
        "cmdline": [],
        "modules": [
            "cobra",
            "cobra.config",
            "cobra.core",
            "cobra.core.arraybasedmodel",
            "cobra.core.dictlist",
            "cobra.core.formula",
            "cobra.core.gene",
            "cobra.core.metabolite",
            "cobra.core.model",
            "cobra.core.object",
            "cobra.core.reaction",
            "cobra.core.solution",
            "cobra.core.species",
            "cobra.design",
            "cobra.design.design_algorithms",
            "cobra.exceptions",
            "cobra.flux_analysis",
            "cobra.flux_analysis.deletion_worker",
            "cobra.flux_analysis.double_deletion",
            "cobra.flux_analysis.gapfilling",
            "cobra.flux_analysis.loopless",
            "cobra.flux_analysis.moma",
            "cobra.flux_analysis.parsimonious",
            "cobra.flux_analysis.phenotype_phase_plane",
            "cobra.flux_analysis.reaction",
            "cobra.flux_analysis.sampling",
            "cobra.flux_analysis.single_deletion",
            "cobra.flux_analysis.summary",
            "cobra.flux_analysis.variability",
            "cobra.io",
            "cobra.io.dict",
            "cobra.io.json",
            "cobra.io.mat",
            "cobra.io.sbml",
            "cobra.io.sbml3",
            "cobra.io.yaml",
            "cobra.manipulation",
            "cobra.manipulation.annotate",
            "cobra.manipulation.delete",
            "cobra.manipulation.modify",
            "cobra.manipulation.validate",
            "cobra.solvers",
            "cobra.solvers.coin",
            "cobra.solvers.cplex_solver",
            "cobra.solvers.cplex_solver_java",
            "cobra.solvers.esolver",
            "cobra.solvers.glpk_solver",
            "cobra.solvers.glpk_solver_java",
            "cobra.solvers.gurobi_solver",
            "cobra.solvers.gurobi_solver_java",
            "cobra.solvers.mosek",
            "cobra.solvers.parameters",
            "cobra.solvers.wrappers",
            "cobra.test",
            "cobra.test.conftest",
            "cobra.test.test_flux_analysis",
            "cobra.test.test_io",
            "cobra.test.test_manipulation",
            "cobra.test.test_model",
            "cobra.test.test_solver_model",
            "cobra.test.test_solver_utils",
            "cobra.test.test_solvers",
            "cobra.test.test_util",
            "cobra.topology",
            "cobra.topology.reporter_metabolites",
            "cobra.util",
            "cobra.util.array",
            "cobra.util.context",
            "cobra.util.solver",
            "cobra.util.util"
        ],
        "version": "0.6.1"
    },
    "cobrababel": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cobrad": {
        "cmdline": [],
        "modules": [
            "app",
            "app.CommonClass",
            "app.CommonClass.DataDictClass",
            "app.CommonClass.ValidateClass",
            "app.controller",
            "app.controller.api",
            "app.controller.backend",
            "app.controller.backend.BackendAPIController",
            "app.controller.backend.DashboardController",
            "app.controller.backend.IndexController",
            "app.controller.backend.LanguagesController",
            "app.controller.backend.ProjectsController",
            "app.controller.backend.RulesController",
            "app.controller.backend.SearchController",
            "app.controller.backend.TasksController",
            "app.controller.backend.VulsController",
            "app.controller.backend.WhiteListsController",
            "app.controller.route",
            "app.models",
            "engine",
            "engine.static",
            "pickup",
            "pickup.GitTools",
            "pickup.compress",
            "pickup.directory",
            "pickup.file",
            "pickup.subversion",
            "utils",
            "utils.common",
            "utils.config",
            "utils.decompress",
            "utils.log"
        ],
        "version": "1.3.1"
    },
    "cobrapy-shim": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cobrascript": {
        "cmdline": [],
        "modules": [
            "cobra",
            "cobra.ast",
            "cobra.base",
            "cobra.compiler",
            "cobra.translator",
            "cobra.utils"
        ],
        "version": "0.1.2"
    },
    "cobrawinldtp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cobs": {
        "cmdline": [],
        "modules": [
            "cobs",
            "cobs._version",
            "cobs.cobs",
            "cobs.cobs._cobs_py",
            "cobs.cobs.test",
            "cobs.cobsr",
            "cobs.cobsr._cobsr_py",
            "cobs.cobsr.test"
        ],
        "version": "1.1.3"
    },
    "cobutils": {
        "cmdline": [
            "cobcreate.py",
            "cobextract.py"
        ],
        "modules": [
            "cobutils",
            "cobutils.extract",
            "cobutils.parser",
            "cobutils.record"
        ],
        "version": "0.2.4"
    },
    "cobweb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "coc": {
        "cmdline": [],
        "modules": [
            "coc",
            "coc.api",
            "coc.utils"
        ],
        "version": "0.2"
    },
    "cocaine": {
        "cmdline": [],
        "modules": [
            "cocaine",
            "cocaine.anniversary",
            "cocaine.common",
            "cocaine.decorators",
            "cocaine.decorators.http_dec",
            "cocaine.decorators.wsgi",
            "cocaine.detail",
            "cocaine.detail.api",
            "cocaine.detail.baseservice",
            "cocaine.detail.channel",
            "cocaine.detail.defaults",
            "cocaine.detail.headers",
            "cocaine.detail.iotimer",
            "cocaine.detail.locator",
            "cocaine.detail.log",
            "cocaine.detail.logger",
            "cocaine.detail.service",
            "cocaine.detail.trace",
            "cocaine.detail.util",
            "cocaine.exceptions",
            "cocaine.logger",
            "cocaine.services",
            "cocaine.worker",
            "cocaine.worker.disowntimer",
            "cocaine.worker.message",
            "cocaine.worker.request",
            "cocaine.worker.response",
            "cocaine.worker.worker"
        ],
        "version": "0.12.13.3"
    },
    "cocaine-cli": {
        "cmdline": [],
        "modules": [
            "cocaine",
            "cocaine.cli",
            "cocaine.cli.config_reader",
            "cocaine.cli.util",
            "cocaine.cli.webcli"
        ],
        "version": "0.12.0.1"
    },
    "cocaine-pipeline-cli": {
        "cmdline": [],
        "modules": [
            "cocaine.pipeline"
        ],
        "version": "0.11.9.5"
    },
    "cocaine-tools": {
        "cmdline": [],
        "modules": [
            "cocaine",
            "cocaine.proxy",
            "cocaine.proxy.helpers",
            "cocaine.proxy.jsonrpc",
            "cocaine.proxy.logutils",
            "cocaine.proxy.mds_direct",
            "cocaine.proxy.mds_exec",
            "cocaine.proxy.plugin",
            "cocaine.proxy.proxy",
            "cocaine.proxy.utilserver",
            "cocaine.tools",
            "cocaine.tools.actions",
            "cocaine.tools.actions.access",
            "cocaine.tools.actions.access.event",
            "cocaine.tools.actions.access.storage",
            "cocaine.tools.actions.app",
            "cocaine.tools.actions.auth",
            "cocaine.tools.actions.common",
            "cocaine.tools.actions.crashlog",
            "cocaine.tools.actions.docker",
            "cocaine.tools.actions.group",
            "cocaine.tools.actions.keyring",
            "cocaine.tools.actions.logs",
            "cocaine.tools.actions.mql",
            "cocaine.tools.actions.profile",
            "cocaine.tools.actions.proxy",
            "cocaine.tools.actions.runlist",
            "cocaine.tools.actions.timeouts",
            "cocaine.tools.actions.tracing",
            "cocaine.tools.cli",
            "cocaine.tools.cocaine_tool",
            "cocaine.tools.dispatch",
            "cocaine.tools.error",
            "cocaine.tools.helpers",
            "cocaine.tools.helpers._unix",
            "cocaine.tools.helpers.completer",
            "cocaine.tools.helpers.dockertemplate",
            "cocaine.tools.helpers.editor",
            "cocaine.tools.installer",
            "cocaine.tools.interactive",
            "cocaine.tools.plugins",
            "cocaine.tools.plugins.secure",
            "cocaine.tools.plugins.secure.promiscuous",
            "cocaine.tools.plugins.secure.tvm",
            "cocaine.tools.printer",
            "cocaine.tools.repository",
            "cocaine.tools.tags",
            "cocaine.tools.version"
        ],
        "version": "0.12.13.6"
    },
    "coccigrep": {
        "cmdline": [
            "coccigrep"
        ],
        "modules": [
            "coccigrep",
            "coccigrep.coccigrep"
        ],
        "version": "1.13"
    },
    "cochlea": {
        "cmdline": [
            "run_zilany2014"
        ],
        "modules": [
            "cochlea",
            "cochlea.asr",
            "cochlea.external",
            "cochlea.external.matlab_auditory_periphery",
            "cochlea.holmberg2007",
            "cochlea.holmberg2007.bm_pars",
            "cochlea.holmberg2007.holmberg2007_vesicles",
            "cochlea.holmberg2007.traveling_waves",
            "cochlea.stats",
            "cochlea.stats.isointensity",
            "cochlea.stats.modulation_gain",
            "cochlea.stats.rate_level",
            "cochlea.stats.synchronization",
            "cochlea.stats.threshold_rate",
            "cochlea.stats.threshold_si",
            "cochlea.stats.tuning",
            "cochlea.zilany2009",
            "cochlea.zilany2009.ffGn_module",
            "cochlea.zilany2014",
            "cochlea.zilany2014.util",
            "cochlea.zilany2014.zilany2014_rate"
        ],
        "version": "1.2.2"
    },
    "cockatiel": {
        "cmdline": [],
        "modules": [
            "cockatiel",
            "cockatiel.config",
            "cockatiel.handlers",
            "cockatiel.queue",
            "cockatiel.replication",
            "cockatiel.server",
            "cockatiel.utils",
            "cockatiel.utils.filenames",
            "cockatiel.utils.streams"
        ],
        "version": "0.0.2"
    },
    "cockatoo": {
        "cmdline": [],
        "modules": [
            "cockatoo",
            "cockatoo.cli",
            "cockatoo.hclust",
            "cockatoo.metric",
            "cockatoo.screen"
        ],
        "version": "0.5.1"
    },
    "cockerel": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cockpit": {
        "cmdline": [],
        "modules": [
            "Cockpit",
            "Cockpit.backends",
            "Cockpit.backends.ldapauth",
            "Cockpit.cockpit",
            "Cockpit.cockpit.admin",
            "Cockpit.cockpit.checks",
            "Cockpit.cockpit.contact",
            "Cockpit.cockpit.context_processors",
            "Cockpit.cockpit.duplicate",
            "Cockpit.cockpit.edit_tags",
            "Cockpit.cockpit.fields",
            "Cockpit.cockpit.import",
            "Cockpit.cockpit.management",
            "Cockpit.cockpit.management.commands",
            "Cockpit.cockpit.management.commands.add_master_user",
            "Cockpit.cockpit.management.commands.apacheconf",
            "Cockpit.cockpit.management.commands.caas-add-admin",
            "Cockpit.cockpit.management.commands.check",
            "Cockpit.cockpit.management.commands.check_db",
            "Cockpit.cockpit.management.commands.sync_users",
            "Cockpit.cockpit.management.commands.upgrade_db",
            "Cockpit.cockpit.mass_delete",
            "Cockpit.cockpit.migration",
            "Cockpit.cockpit.models",
            "Cockpit.cockpit.other",
            "Cockpit.cockpit.paginat0r",
            "Cockpit.cockpit.quota",
            "Cockpit.cockpit.root_urls",
            "Cockpit.cockpit.rpcs",
            "Cockpit.cockpit.sqlconfig",
            "Cockpit.cockpit.tags",
            "Cockpit.cockpit.utils",
            "Cockpit.cockpit.views",
            "Cockpit.cockpit.widget",
            "Cockpit.common",
            "Cockpit.common.countries",
            "Cockpit.common.fields",
            "Cockpit.common.models",
            "Cockpit.common.utils",
            "Cockpit.dbhelper",
            "Cockpit.dbhelper.migration",
            "Cockpit.dbhelper.tests",
            "Cockpit.dbhelper.tests.columns",
            "Cockpit.dbhelper.tests.general",
            "Cockpit.dbhelper.tests.relations",
            "Cockpit.dbhelper.tests.tables",
            "Cockpit.djangofix",
            "Cockpit.emencia_django_admin",
            "Cockpit.emencia_django_admin.admin",
            "Cockpit.emencia_django_admin.models",
            "Cockpit.emencia_django_admin.release",
            "Cockpit.emencia_django_admin.root_urls",
            "Cockpit.emencia_django_admin.templatetags",
            "Cockpit.emencia_django_admin.templatetags.admin_csv",
            "Cockpit.emencia_django_admin.templatetags.admin_emencia",
            "Cockpit.emencia_django_admin.views",
            "Cockpit.manage",
            "Cockpit.newsletter",
            "Cockpit.newsletter.admin",
            "Cockpit.newsletter.checks",
            "Cockpit.newsletter.fields",
            "Cockpit.newsletter.mailfeeder",
            "Cockpit.newsletter.mailsenders",
            "Cockpit.newsletter.migration",
            "Cockpit.newsletter.models",
            "Cockpit.newsletter.newsletter",
            "Cockpit.newsletter.popcontrol",
            "Cockpit.newsletter.rest",
            "Cockpit.newsletter.rofields",
            "Cockpit.newsletter.root_urls",
            "Cockpit.newsletter.rpcs",
            "Cockpit.newsletter.stats",
            "Cockpit.newsletter.tracking",
            "Cockpit.newsletter.unsubscribe",
            "Cockpit.newsletter.urls",
            "Cockpit.newsletter.utils",
            "Cockpit.newsletter.views",
            "Cockpit.newsletter.widgets",
            "Cockpit.rpc",
            "Cockpit.rpc.admin",
            "Cockpit.rpc.calls",
            "Cockpit.rpc.checks",
            "Cockpit.rpc.decorators",
            "Cockpit.rpc.migration",
            "Cockpit.rpc.models",
            "Cockpit.rpc.registry",
            "Cockpit.rpc.root_urls",
            "Cockpit.rpc.smartprocess",
            "Cockpit.settings",
            "Cockpit.urls"
        ],
        "version": "1.0"
    },
    "cockroachdb": {
        "cmdline": [],
        "modules": [
            "cockroachdb",
            "cockroachdb.sqlalchemy",
            "cockroachdb.sqlalchemy.ddl_compiler",
            "cockroachdb.sqlalchemy.dialect",
            "cockroachdb.sqlalchemy.test_requirements",
            "cockroachdb.sqlalchemy.transaction"
        ],
        "version": "0.1.0"
    },
    "cocktail": {
        "cmdline": [],
        "modules": [
            "cocktail",
            "cocktail.asynctask",
            "cocktail.caching",
            "cocktail.caching.cache",
            "cocktail.caching.cacheserializer",
            "cocktail.caching.cachestorage",
            "cocktail.caching.exceptions",
            "cocktail.caching.memorycachestorage",
            "cocktail.caching.picklecacheserializer",
            "cocktail.caching.restcacheserver",
            "cocktail.caching.restcachestorage",
            "cocktail.caching.scope",
            "cocktail.caching.utils",
            "cocktail.controllers",
            "cocktail.controllers.asyncupload",
            "cocktail.controllers.autocomplete",
            "cocktail.controllers.controller",
            "cocktail.controllers.dispatcher",
            "cocktail.controllers.displayerror",
            "cocktail.controllers.erroremail",
            "cocktail.controllers.filepublication",
            "cocktail.controllers.fileupload",
            "cocktail.controllers.formcontrollermixin",
            "cocktail.controllers.formprocessor",
            "cocktail.controllers.grouping",
            "cocktail.controllers.handlerprofiler",
            "cocktail.controllers.imageupload",
            "cocktail.controllers.location",
            "cocktail.controllers.pagination",
            "cocktail.controllers.parameters",
            "cocktail.controllers.proxyhandler",
            "cocktail.controllers.renderingengines",
            "cocktail.controllers.requesthandler",
            "cocktail.controllers.requestproperty",
            "cocktail.controllers.sessions",
            "cocktail.controllers.static",
            "cocktail.controllers.uriutils",
            "cocktail.controllers.useragentsniffer",
            "cocktail.controllers.usercollection",
            "cocktail.controllers.userfilter",
            "cocktail.controllers.viewstate",
            "cocktail.controllers.webservices",
            "cocktail.controllers.zodbdebuggertool",
            "cocktail.dateutils",
            "cocktail.events",
            "cocktail.html",
            "cocktail.html.autocomplete",
            "cocktail.html.checkbox",
            "cocktail.html.checklist",
            "cocktail.html.clone",
            "cocktail.html.codeeditor",
            "cocktail.html.collectioneditor",
            "cocktail.html.colorpicker",
            "cocktail.html.datadisplay",
            "cocktail.html.datepicker",
            "cocktail.html.document",
            "cocktail.html.documentmetadata",
            "cocktail.html.dropdownselector",
            "cocktail.html.element",
            "cocktail.html.emailaddressbox",
            "cocktail.html.emailpropertytable",
            "cocktail.html.fileuploadbox",
            "cocktail.html.form",
            "cocktail.html.grouping",
            "cocktail.html.hiddeninput",
            "cocktail.html.ibanbox",
            "cocktail.html.ieconditionalcomment",
            "cocktail.html.linkselector",
            "cocktail.html.list",
            "cocktail.html.mailtolink",
            "cocktail.html.mappingeditor",
            "cocktail.html.mappingtable",
            "cocktail.html.maskedinputbox",
            "cocktail.html.mediaelementvideo",
            "cocktail.html.memberextensions",
            "cocktail.html.modalselector",
            "cocktail.html.multiplechoiceselector",
            "cocktail.html.numberbox",
            "cocktail.html.overlay",
            "cocktail.html.pager",
            "cocktail.html.pagingcontrols",
            "cocktail.html.passwordbox",
            "cocktail.html.phonenumberbox",
            "cocktail.html.propertytable",
            "cocktail.html.radioselector",
            "cocktail.html.readonlydisplay",
            "cocktail.html.relativetimedisplay",
            "cocktail.html.renderers",
            "cocktail.html.rendering",
            "cocktail.html.resources",
            "cocktail.html.searchbox",
            "cocktail.html.selectable",
            "cocktail.html.selector",
            "cocktail.html.table",
            "cocktail.html.tagcloud",
            "cocktail.html.tagcloudselector",
            "cocktail.html.templates",
            "cocktail.html.templates.buffetplugin",
            "cocktail.html.templates.compiler",
            "cocktail.html.templates.loader",
            "cocktail.html.templates.sourcecodewriter",
            "cocktail.html.textarea",
            "cocktail.html.textbox",
            "cocktail.html.tinymce",
            "cocktail.html.translationdisplay",
            "cocktail.html.treeselector",
            "cocktail.html.treeview",
            "cocktail.html.uigeneration",
            "cocktail.html.urlbox",
            "cocktail.html.utils",
            "cocktail.html.valuedisplay",
            "cocktail.html.viewnames",
            "cocktail.html.vimeoplayer",
            "cocktail.html.youtubeplayer",
            "cocktail.iteration",
            "cocktail.language",
            "cocktail.memoryutils",
            "cocktail.modeling",
            "cocktail.persistence",
            "cocktail.persistence.datastore",
            "cocktail.persistence.deletedryrun",
            "cocktail.persistence.fulltextsearch",
            "cocktail.persistence.incremental_id",
            "cocktail.persistence.index",
            "cocktail.persistence.indexing",
            "cocktail.persistence.maxvalue",
            "cocktail.persistence.migration",
            "cocktail.persistence.persistentlist",
            "cocktail.persistence.persistentmapping",
            "cocktail.persistence.persistentobject",
            "cocktail.persistence.persistentorderedset",
            "cocktail.persistence.persistentrelations",
            "cocktail.persistence.persistentset",
            "cocktail.persistence.pickling",
            "cocktail.persistence.query",
            "cocktail.persistence.transactional",
            "cocktail.persistence.utils",
            "cocktail.persistence.zodbdebugger",
            "cocktail.pkgutils",
            "cocktail.resourceloader",
            "cocktail.schema",
            "cocktail.schema.accessors",
            "cocktail.schema.adapter",
            "cocktail.schema.bankaccountnumber",
            "cocktail.schema.calendarpage",
            "cocktail.schema.codeblock",
            "cocktail.schema.color",
            "cocktail.schema.creditcardnumber",
            "cocktail.schema.differences",
            "cocktail.schema.emailaddress",
            "cocktail.schema.errorlist",
            "cocktail.schema.exceptions",
            "cocktail.schema.expressions",
            "cocktail.schema.geocoordinates",
            "cocktail.schema.html",
            "cocktail.schema.iban",
            "cocktail.schema.io",
            "cocktail.schema.member",
            "cocktail.schema.memberreference",
            "cocktail.schema.money",
            "cocktail.schema.month",
            "cocktail.schema.phonenumber",
            "cocktail.schema.rangedmember",
            "cocktail.schema.regularexpression",
            "cocktail.schema.schema",
            "cocktail.schema.schemabooleans",
            "cocktail.schema.schemacollections",
            "cocktail.schema.schemadates",
            "cocktail.schema.schemamappings",
            "cocktail.schema.schemanumbers",
            "cocktail.schema.schemaobject",
            "cocktail.schema.schemaobjectaccessor",
            "cocktail.schema.schemareference",
            "cocktail.schema.schemarelations",
            "cocktail.schema.schemastrings",
            "cocktail.schema.schematuples",
            "cocktail.schema.searchhighlighter",
            "cocktail.schema.swiftbic",
            "cocktail.schema.textextractor",
            "cocktail.schema.url",
            "cocktail.schema.validationcontext",
            "cocktail.sortedcollection",
            "cocktail.stringutils",
            "cocktail.styled",
            "cocktail.tests",
            "cocktail.tests.controllers",
            "cocktail.tests.controllers.test_parameters",
            "cocktail.tests.html",
            "cocktail.tests.html.test_cache",
            "cocktail.tests.html.test_documentmetadata",
            "cocktail.tests.html.test_element",
            "cocktail.tests.html.test_output",
            "cocktail.tests.html.test_templateloader",
            "cocktail.tests.persistence",
            "cocktail.tests.persistence.tempstoragemixin",
            "cocktail.tests.persistence.test_cascadedelete",
            "cocktail.tests.persistence.test_collectionindexing",
            "cocktail.tests.persistence.test_delete",
            "cocktail.tests.persistence.test_fulltextindexing",
            "cocktail.tests.persistence.test_getinstance",
            "cocktail.tests.persistence.test_incrementalid",
            "cocktail.tests.persistence.test_index",
            "cocktail.tests.persistence.test_insertion",
            "cocktail.tests.persistence.test_integral",
            "cocktail.tests.persistence.test_modification",
            "cocktail.tests.persistence.test_persistentcollections",
            "cocktail.tests.persistence.test_pickling",
            "cocktail.tests.persistence.test_primarymember",
            "cocktail.tests.persistence.test_query",
            "cocktail.tests.persistence.test_unique",
            "cocktail.tests.schema",
            "cocktail.tests.schema.test_adapter",
            "cocktail.tests.schema.test_expressions",
            "cocktail.tests.schema.test_relations",
            "cocktail.tests.schema.test_schema",
            "cocktail.tests.schema.test_schemaobject",
            "cocktail.tests.schema.test_validation",
            "cocktail.tests.seleniumtester",
            "cocktail.tests.test_dateutils",
            "cocktail.tests.test_events",
            "cocktail.tests.test_modeling",
            "cocktail.tests.translations",
            "cocktail.tests.translations.test_literals",
            "cocktail.tests.translations.test_translations",
            "cocktail.tests.utils",
            "cocktail.translations",
            "cocktail.translations.helpers",
            "cocktail.translations.strings",
            "cocktail.translations.translation",
            "cocktail.translations.wordprocessing",
            "cocktail.typemapping"
        ],
        "version": "1.8.3"
    },
    "coclust": {
        "cmdline": [],
        "modules": [
            "coclust",
            "coclust.coclust",
            "coclust.initialization",
            "coclust/clustering",
            "coclust/clustering.spherical_kmeans",
            "coclust/coclustering",
            "coclust/coclustering.base_diagonal_coclust",
            "coclust/coclustering.base_non_diagonal_coclust",
            "coclust/coclustering.coclust_info",
            "coclust/coclustering.coclust_mod",
            "coclust/coclustering.coclust_spec_mod",
            "coclust/evaluation",
            "coclust/evaluation.external",
            "coclust/evaluation.internal",
            "coclust/io",
            "coclust/io.data_loading",
            "coclust/io.data_transformation",
            "coclust/io.input_checking",
            "coclust/io.notebook",
            "coclust/visualization"
        ],
        "version": "0.2.1"
    },
    "coco": {
        "cmdline": [
            "coco.py"
        ],
        "modules": [],
        "version": "0.4.0"
    },
    "coco-nester": {
        "cmdline": [],
        "modules": [
            "coco_nester"
        ],
        "version": "1.0.0"
    },
    "cococrawler": {
        "cmdline": [],
        "modules": [
            "cococrawler",
            "cococrawler.command",
            "cococrawler.command.cmd",
            "cococrawler.config",
            "cococrawler.crawler",
            "cococrawler.data_source",
            "cococrawler.exceptions",
            "cococrawler.items",
            "cococrawler.piplines",
            "cococrawler.templates",
            "cococrawler.templates.config",
            "cococrawler.templates.crawler",
            "cococrawler.templates.items",
            "cococrawler.templates.pipelines",
            "cococrawler.templates.sources"
        ],
        "version": "0.0.5"
    },
    "cocograph": {
        "cmdline": [],
        "modules": [
            "cocograph",
            "cocograph.dialog_node",
            "cocograph.tile_dialogs",
            "cocograph.tile_layers",
            "cocograph.tile_widgets"
        ],
        "version": "0.1.0"
    },
    "cocomo": {
        "cmdline": [],
        "modules": [
            "cocomo",
            "cocomo.cocomo"
        ],
        "version": "0.3.1"
    },
    "coconut": {
        "cmdline": [],
        "modules": [
            "coconut",
            "coconut.command",
            "coconut.command.cli",
            "coconut.command.command",
            "coconut.command.mypy",
            "coconut.command.util",
            "coconut.command.watch",
            "coconut.compiler",
            "coconut.compiler.compiler",
            "coconut.compiler.grammar",
            "coconut.compiler.header",
            "coconut.compiler.matching",
            "coconut.compiler.util",
            "coconut.constants",
            "coconut.convenience",
            "coconut.exceptions",
            "coconut.highlighter",
            "coconut.icoconut",
            "coconut.icoconut.root",
            "coconut.main",
            "coconut.requirements",
            "coconut.root",
            "coconut.terminal"
        ],
        "version": "1.2.3"
    },
    "coconut-develop": {
        "cmdline": [],
        "modules": [
            "coconut",
            "coconut.command",
            "coconut.command.cli",
            "coconut.command.command",
            "coconut.command.mypy",
            "coconut.command.util",
            "coconut.command.watch",
            "coconut.compiler",
            "coconut.compiler.compiler",
            "coconut.compiler.grammar",
            "coconut.compiler.header",
            "coconut.compiler.matching",
            "coconut.compiler.util",
            "coconut.constants",
            "coconut.convenience",
            "coconut.exceptions",
            "coconut.highlighter",
            "coconut.icoconut",
            "coconut.icoconut.root",
            "coconut.main",
            "coconut.requirements",
            "coconut.root",
            "coconut.terminal"
        ],
        "version": "1.2.3.post0.dev1"
    },
    "coconutpy": {
        "cmdline": [],
        "modules": [
            "coconut",
            "coconut.config",
            "coconut.job"
        ],
        "version": "2.2.1"
    },
    "cocoon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cocoon-framework": {
        "cmdline": [],
        "modules": [
            "cocoon",
            "cocoon.cui",
            "cocoon.task"
        ],
        "version": "0.1.1"
    },
    "cocopot": {
        "cmdline": [],
        "modules": [
            "cocopot",
            "cocopot._compat",
            "cocopot.app",
            "cocopot.blueprints",
            "cocopot.datastructures",
            "cocopot.exceptions",
            "cocopot.globals",
            "cocopot.http",
            "cocopot.local",
            "cocopot.request",
            "cocopot.response",
            "cocopot.routing",
            "cocopot.run",
            "cocopot.testing",
            "cocopot.utils"
        ],
        "version": "0.2"
    },
    "cocopy": {
        "cmdline": [],
        "modules": [
            "CharClass",
            "Coco",
            "CodeGenerator",
            "Core",
            "DriverGen",
            "Errors",
            "Parser",
            "ParserGen",
            "Scanner",
            "Trace",
            "setupInfo"
        ],
        "version": "1.1.0rc"
    },
    "cocorahs-download-tool": {
        "cmdline": [],
        "modules": [
            "cocorahs_dlt"
        ],
        "version": "0.0.3"
    },
    "cocorpy27": {
        "cmdline": [],
        "modules": [
            "CharClass",
            "Coco",
            "CodeGenerator",
            "Core",
            "DriverGen",
            "Errors",
            "Parser",
            "ParserGen",
            "Scanner",
            "Trace",
            "setupInfo"
        ],
        "version": "1.4.1"
    },
    "cocos2d": {
        "cmdline": [],
        "modules": [
            "cocos",
            "cocos.batch",
            "cocos.camera",
            "cocos.cocosnode",
            "cocos.collision_model",
            "cocos.compat",
            "cocos.custom_clocks",
            "cocos.director",
            "cocos.draw",
            "cocos.euclid",
            "cocos.fps",
            "cocos.framegrabber",
            "cocos.gl_framebuffer_object",
            "cocos.grid",
            "cocos.mapcolliders",
            "cocos.menu",
            "cocos.particle",
            "cocos.particle_systems",
            "cocos.path",
            "cocos.rect",
            "cocos.scene",
            "cocos.shader",
            "cocos.skeleton",
            "cocos.sprite",
            "cocos.text",
            "cocos.tiles",
            "cocos.utils",
            "cocos.wired",
            "cocos/actions",
            "cocos/actions.base_actions",
            "cocos/actions.basegrid_actions",
            "cocos/actions.camera_actions",
            "cocos/actions.grid3d_actions",
            "cocos/actions.instant_actions",
            "cocos/actions.interval_actions",
            "cocos/actions.move_actions",
            "cocos/actions.quadmoveby_actions",
            "cocos/actions.tiledgrid_actions",
            "cocos/audio",
            "cocos/audio.actions",
            "cocos/audio.effect",
            "cocos/audio.exceptions",
            "cocos/audio.music",
            "cocos/layer",
            "cocos/layer.base_layers",
            "cocos/layer.python_interpreter",
            "cocos/layer.scrolling",
            "cocos/layer.util_layers",
            "cocos/scenes",
            "cocos/scenes.pause",
            "cocos/scenes.sequences",
            "cocos/scenes.transitions"
        ],
        "version": "0.6.4"
    },
    "cocov": {
        "cmdline": [],
        "modules": [
            "coco",
            "coco.coco"
        ],
        "version": "0.0.1"
    },
    "cocrawler": {
        "cmdline": [],
        "modules": [
            "cocrawler",
            "cocrawler.accumulator",
            "cocrawler.burner",
            "cocrawler.conf",
            "cocrawler.cookies",
            "cocrawler.datalayer",
            "cocrawler.dns",
            "cocrawler.facet",
            "cocrawler.fetcher",
            "cocrawler.hostdomain",
            "cocrawler.parse",
            "cocrawler.pdeathsig",
            "cocrawler.post_fetch",
            "cocrawler.pre_fetch",
            "cocrawler.robots",
            "cocrawler.seeds",
            "cocrawler.stats",
            "cocrawler.timebin",
            "cocrawler.timer",
            "cocrawler.topk",
            "cocrawler.url_allowed",
            "cocrawler.urls",
            "cocrawler.useragent",
            "cocrawler.warc",
            "cocrawler.webserver"
        ],
        "version": "0.1.4"
    },
    "cocy": {
        "cmdline": [],
        "modules": [
            "cocy",
            "cocy.core",
            "cocy.misc",
            "cocy.portlets",
            "cocy.portlets.device_directory",
            "cocy.portlets.device_server",
            "cocy.portlets.portlets_factory",
            "cocy.providers",
            "cocy.soap",
            "cocy.soaplib",
            "cocy.soaplib.serializers",
            "cocy.soaplib.serializers.base",
            "cocy.soaplib.serializers.binary",
            "cocy.soaplib.serializers.clazz",
            "cocy.soaplib.serializers.enum",
            "cocy.soaplib.serializers.exception",
            "cocy.soaplib.serializers.primitive",
            "cocy.soaplib.serializers.table",
            "cocy.soaplib.service",
            "cocy.soaplib.soap",
            "cocy.soaplib.test",
            "cocy.soaplib.test.test_service",
            "cocy.soaplib.test.test_soap",
            "cocy.soaplib.util",
            "cocy.soaplib.util.duration",
            "cocy.soaplib.util.etreeconv",
            "cocy.soaplib.util.odict",
            "cocy.soaplib.util.server",
            "cocy.soaplib.wsgi",
            "cocy.upnp",
            "cocy.upnp.adapters",
            "cocy.upnp.adapters.adapter",
            "cocy.upnp.adapters.audio_video",
            "cocy.upnp.adapters.home_automation",
            "cocy.upnp.device_directory",
            "cocy.upnp.device_server",
            "cocy.upnp.service",
            "cocy.upnp.soap",
            "cocy.upnp.ssdp",
            "sampleapps",
            "sampleapps.binary_light",
            "sampleapps.binary_light.misc",
            "sampleapps.binary_light.portlet",
            "sampleapps.binary_light.server",
            "sampleapps.media_renderer",
            "sampleapps.media_renderer.renderer",
            "sampleapps.media_renderer.server"
        ],
        "version": "0.1.13"
    },
    "coda": {
        "cmdline": [],
        "modules": [
            "coda",
            "coda.db",
            "coda.objects",
            "coda.utils",
            "tests",
            "tests.test_coda",
            "tests.test_db",
            "tests.test_objects"
        ],
        "version": "0.0.5"
    },
    "codacy-coverage": {
        "cmdline": [],
        "modules": [
            "codacy",
            "codacy.reporter"
        ],
        "version": "1.3.6"
    },
    "codado": {
        "cmdline": [
            "jentemplate",
            "urltool"
        ],
        "modules": [
            "codado",
            "codado._version",
            "codado.kleinish",
            "codado.kleinish.tree",
            "codado.kleinish.urltool",
            "codado.py",
            "codado.tx"
        ],
        "version": "0.3.3"
    },
    "codalab-cli": {
        "cmdline": [],
        "modules": [
            "codalab",
            "codalab.bin",
            "codalab.bin.cl",
            "codalab.bundles",
            "codalab.bundles.dataset_bundle",
            "codalab.bundles.derived_bundle",
            "codalab.bundles.make_bundle",
            "codalab.bundles.named_bundle",
            "codalab.bundles.private_bundle",
            "codalab.bundles.program_bundle",
            "codalab.bundles.run_bundle",
            "codalab.bundles.uploaded_bundle",
            "codalab.client",
            "codalab.client.json_api_client",
            "codalab.common",
            "codalab.lib",
            "codalab.lib.bundle_action",
            "codalab.lib.bundle_cli",
            "codalab.lib.bundle_fuse",
            "codalab.lib.bundle_store",
            "codalab.lib.bundle_util",
            "codalab.lib.canonicalize",
            "codalab.lib.cli_util",
            "codalab.lib.codalab_manager",
            "codalab.lib.completers",
            "codalab.lib.crypt_util",
            "codalab.lib.docker_util",
            "codalab.lib.download_manager",
            "codalab.lib.editor_util",
            "codalab.lib.emailer",
            "codalab.lib.file_util",
            "codalab.lib.formatting",
            "codalab.lib.metadata_defaults",
            "codalab.lib.metadata_util",
            "codalab.lib.path_util",
            "codalab.lib.print_util",
            "codalab.lib.server_util",
            "codalab.lib.spec_util",
            "codalab.lib.ui_actions",
            "codalab.lib.upload_manager",
            "codalab.lib.worksheet_util",
            "codalab.lib.zip_util",
            "codalab.model",
            "codalab.model.bundle_model",
            "codalab.model.mysql_model",
            "codalab.model.orm_object",
            "codalab.model.sqlite_model",
            "codalab.model.tables",
            "codalab.model.util",
            "codalab.model.worker_model",
            "codalab.objects",
            "codalab.objects.bundle",
            "codalab.objects.chat_box_qa",
            "codalab.objects.dependency",
            "codalab.objects.metadata",
            "codalab.objects.metadata_spec",
            "codalab.objects.oauth2",
            "codalab.objects.permission",
            "codalab.objects.user",
            "codalab.objects.worksheet",
            "codalab.rest",
            "codalab.rest.account",
            "codalab.rest.bundle_actions",
            "codalab.rest.bundles",
            "codalab.rest.chats",
            "codalab.rest.cli",
            "codalab.rest.groups",
            "codalab.rest.help",
            "codalab.rest.interpret",
            "codalab.rest.oauth2",
            "codalab.rest.schemas",
            "codalab.rest.titlejs",
            "codalab.rest.users",
            "codalab.rest.util",
            "codalab.rest.workers",
            "codalab.rest.worksheets",
            "codalab.server",
            "codalab.server.auth",
            "codalab.server.authenticated_plugin",
            "codalab.server.cookie",
            "codalab.server.json_api_plugin",
            "codalab.server.oauth2_provider",
            "codalab.server.rest_server",
            "codalab.worker",
            "codalab.worker.bundle_manager",
            "codalab.worker.default_bundle_manager",
            "codalab.worker.torque_bundle_manager",
            "codalab.worker.worker_info_accessor",
            "worker",
            "worker.bundle_service_client",
            "worker.dependency_manager",
            "worker.docker_client",
            "worker.docker_image_manager",
            "worker.download_util",
            "worker.file_util",
            "worker.formatting",
            "worker.main",
            "worker.rest_client",
            "worker.run",
            "worker.worker"
        ],
        "version": "0.2.7"
    },
    "codalib": {
        "cmdline": [],
        "modules": [
            "codalib",
            "codalib.anvl",
            "codalib.bagatom",
            "codalib.util",
            "codalib.xsdatetime",
            "tests",
            "tests.bagatom",
            "tests.bagatom.test_bagToXML",
            "tests.bagatom.test_getters",
            "tests.bagatom.test_makeObjectFeed",
            "tests.bagatom.test_makeServiceDocXML",
            "tests.bagatom.test_nodeToXML",
            "tests.bagatom.test_queueEntryToXML",
            "tests.bagatom.test_updateObjectFromXML",
            "tests.bagatom.test_wrapAtom",
            "tests.test_anvl",
            "tests.util",
            "tests.util.test_createPREMISEventXML",
            "tests.util.test_deleteQueue",
            "tests.util.test_doWaitWebRequest",
            "tests.util.test_doWebRequest",
            "tests.util.test_parseVocabularySources",
            "tests.util.test_requests",
            "tests.util.test_sendPREMISEvent",
            "tests.util.test_updateQueue",
            "tests.util.test_waitForURL",
            "tests.util.test_xsDateTime"
        ],
        "version": "1.0.3"
    },
    "codap": {
        "cmdline": [],
        "modules": [
            "codap",
            "tests",
            "tests.test_codap"
        ],
        "version": "0.0.5"
    },
    "codar2netcdf": {
        "cmdline": [],
        "modules": [
            "codar2netcdf",
            "codar2netcdf.codar",
            "codar2netcdf.tests",
            "codar2netcdf.tests.test_convert"
        ],
        "version": "0.0.2"
    },
    "codd": {
        "cmdline": [],
        "modules": [
            "codd"
        ],
        "version": "0.2.2"
    },
    "code": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "code-beatrix": {
        "cmdline": [],
        "modules": [
            "code_beatrix",
            "code_beatrix.algorithm",
            "code_beatrix.algorithm.classroom",
            "code_beatrix.algorithm.data",
            "code_beatrix.algorithm.tsp",
            "code_beatrix.automation",
            "code_beatrix.automation.notebook_const_helper",
            "code_beatrix.automation.notebook_test_helper",
            "code_beatrix.faq",
            "code_beatrix.faq.faq_python",
            "code_beatrix.ipythonhelper",
            "code_beatrix.ipythonhelper.magic_scratch",
            "code_beatrix.ipythonhelper.nbcanvas",
            "code_beatrix.ipythonhelper.path_helper",
            "code_beatrix.jsscripts",
            "code_beatrix.jsscripts.snap",
            "code_beatrix.scratchs",
            "code_beatrix.scratchs.example_chute",
            "code_beatrix.scratchs.example_echiquier",
            "code_beatrix.scratchs.example_pyramide",
            "code_beatrix.scratchs.example_tri"
        ],
        "version": "0.5.295"
    },
    "code-checker": {
        "cmdline": [],
        "modules": [
            "codechecker",
            "codechecker.checker",
            "codechecker.checker.builder",
            "codechecker.checker.task",
            "codechecker.checkers_spec",
            "codechecker.git",
            "codechecker.result_creators",
            "codechecker.scripts",
            "codechecker.scripts.hooksetup",
            "codechecker.scripts.runner",
            "codechecker.worker"
        ],
        "version": "0.2.2.post1"
    },
    "code-guide": {
        "cmdline": [
            "code-guide"
        ],
        "modules": [
            "code_guide",
            "code_guide.test_code_guide"
        ],
        "version": "1.0.2"
    },
    "code-monkey": {
        "cmdline": [],
        "modules": [
            "code_monkey",
            "code_monkey.change",
            "code_monkey.edit",
            "code_monkey.end_detection",
            "code_monkey.format",
            "code_monkey.node_query",
            "code_monkey.utils"
        ],
        "version": "0.0.3"
    },
    "code-organizer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "code-quality": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "code-sniffer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "code-time-tracker": {
        "cmdline": [],
        "modules": [
            "code_time_tracker"
        ],
        "version": "0.1"
    },
    "code-utils": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "code128": {
        "cmdline": [],
        "modules": [
            "code128",
            "code128.format",
            "code128.image",
            "code128.svg",
            "code128.tool",
            "code128.tool.ModifiedMixin",
            "code128.tool.console",
            "code128.tool.gui"
        ],
        "version": "0.3"
    },
    "code2html": {
        "cmdline": [],
        "modules": [
            "code2html",
            "code2html.args",
            "code2html.cli",
            "code2html.core",
            "code2html.ignores",
            "code2html.util",
            "code2html.vim"
        ],
        "version": "0.3.2"
    },
    "code2pdf": {
        "cmdline": [],
        "modules": [
            "Code2pdf",
            "Code2pdf.code2pdf"
        ],
        "version": "1.0.0"
    },
    "codeanalyzer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "codeart-benchmarks": {
        "cmdline": [],
        "modules": [
            "codeart",
            "codeart.benchmarks",
            "codeart.benchmarks._bottle",
            "codeart.benchmarks._falcon",
            "codeart.benchmarks._flask",
            "codeart.benchmarks._tornado",
            "codeart.benchmarks._tornado_async",
            "codeart.benchmarks._wheezy_http",
            "codeart.benchmarks._wheezy_web",
            "codeart.benchmarks._wsgi",
            "codeart.benchmarks._wsgi_py3",
            "codeart.benchmarks.models",
            "codeart.benchmarks.responses",
            "codeart.benchmarks.servers",
            "codeart.benchmarks.servers._meinheld",
            "codeart.benchmarks.servers._tornado",
            "codeart.tests"
        ],
        "version": "0.0.27"
    },
    "codebackup": {
        "cmdline": [],
        "modules": [
            "codebackup"
        ],
        "version": "1.0b1"
    },
    "codebakers": {
        "cmdline": [],
        "modules": [
            "codebakers"
        ],
        "version": "1.0.2"
    },
    "codebase-api": {
        "cmdline": [],
        "modules": [
            "codebase",
            "codebase.client"
        ],
        "version": "0.1.1"
    },
    "codebase-api-client": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "codebase-cli": {
        "cmdline": [
            "cb"
        ],
        "modules": [],
        "version": "0.1.10"
    },
    "codebehind": {
        "cmdline": [],
        "modules": [
            "codebehind",
            "codebehind.authentication",
            "codebehind.migrations",
            "codebehind.migrations.0001_initial",
            "codebehind.models",
            "codebehind.serializers",
            "codebehind.tests",
            "codebehind.views"
        ],
        "version": "1.4.7"
    },
    "codeblock": {
        "cmdline": [],
        "modules": [
            "codeblock"
        ],
        "version": "0.1"
    },
    "codebom": {
        "cmdline": [
            "codebom"
        ],
        "modules": [
            "codebom",
            "codebom._version",
            "codebom._version_test",
            "codebom.analyze",
            "codebom.analyze_test",
            "codebom.bom",
            "codebom.bom_test",
            "codebom.graph",
            "codebom.graph_test",
            "codebom.licenseconflict",
            "codebom.licenseconflict_test",
            "codebom.licenseidentifier",
            "codebom.licenseidentifier_test",
            "codebom.licenses",
            "codebom.lint",
            "codebom.lint_test",
            "codebom.parseargs",
            "codebom.parseargs_test",
            "codebom.scan",
            "codebom.scan_test",
            "codebom.verify",
            "codebom.verify_test"
        ],
        "version": "1.0.2"
    },
    "codebottle": {
        "cmdline": [],
        "modules": [
            "codebottle"
        ],
        "version": "0.0.1"
    },
    "codebug-i2c-tether": {
        "cmdline": [],
        "modules": [
            "codebug_i2c_tether",
            "codebug_i2c_tether.char_map",
            "codebug_i2c_tether.codebug_i2c",
            "codebug_i2c_tether.core",
            "codebug_i2c_tether.font",
            "codebug_i2c_tether.i2c",
            "codebug_i2c_tether.linux_i2c",
            "codebug_i2c_tether.sprites",
            "codebug_i2c_tether.version"
        ],
        "version": "0.3.0"
    },
    "codebug-tether": {
        "cmdline": [],
        "modules": [
            "codebug_tether",
            "codebug_tether.colourtail",
            "codebug_tether.core",
            "codebug_tether.font",
            "codebug_tether.i2c",
            "codebug_tether.platform",
            "codebug_tether.serial_channel_device",
            "codebug_tether.sprites",
            "codebug_tether.version"
        ],
        "version": "0.9.1"
    },
    "codebuilder": {
        "cmdline": [],
        "modules": [
            "codebuilder",
            "codebuilder.cli",
            "codebuilder.helpers",
            "codebuilder.helpers.aws",
            "codebuilder.helpers.base",
            "codebuilder.helpers.docker",
            "codebuilder.subcommands",
            "codebuilder.subcommands.aws",
            "codebuilder.subcommands.docker",
            "codebuilder.subcommands.github"
        ],
        "version": "0.0.1a3"
    },
    "codec": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "codechat": {
        "cmdline": [],
        "modules": [
            "CodeChat",
            "CodeChat.CodeToRest",
            "CodeChat.CodeToRestSphinx",
            "CodeChat.CommentDelimiterInfo"
        ],
        "version": "1.4.1"
    },
    "codechef": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "codecli": {
        "cmdline": [],
        "modules": [
            "codecli",
            "codecli.apic",
            "codecli.commands",
            "codecli.commands.clone",
            "codecli.commands.config",
            "codecli.commands.end",
            "codecli.commands.fetch",
            "codecli.commands.fork",
            "codecli.commands.hotfix",
            "codecli.commands.merge",
            "codecli.commands.pullreq",
            "codecli.commands.start",
            "codecli.commands.sync",
            "codecli.providers",
            "codecli.providers.base",
            "codecli.providers.provider_code",
            "codecli.providers.provider_github",
            "codecli.utils"
        ],
        "version": "0.1"
    },
    "codeclimate-test-reporter": {
        "cmdline": [],
        "modules": [
            "codeclimate_test_reporter",
            "codeclimate_test_reporter.components",
            "codeclimate_test_reporter.components.api_client",
            "codeclimate_test_reporter.components.argument_parser",
            "codeclimate_test_reporter.components.ci",
            "codeclimate_test_reporter.components.file_coverage",
            "codeclimate_test_reporter.components.formatter",
            "codeclimate_test_reporter.components.git_command",
            "codeclimate_test_reporter.components.payload_validator",
            "codeclimate_test_reporter.components.reporter",
            "codeclimate_test_reporter.components.runner"
        ],
        "version": "0.2.3"
    },
    "codeco": {
        "cmdline": [
            "codeco"
        ],
        "modules": [
            "codeco",
            "codeco.directive",
            "codeco.processor"
        ],
        "version": "1.4"
    },
    "codeconvert": {
        "cmdline": [],
        "modules": [],
        "version": "2.0.4"
    },
    "codecounter": {
        "cmdline": [],
        "modules": [
            "CodeCounter",
            "CodeCounter.CodeCounter",
            "CodeCounter.filerange"
        ],
        "version": "1.1.0"
    },
    "codecov": {
        "cmdline": [],
        "modules": [
            "codecov"
        ],
        "version": "2.0.9"
    },
    "coded-exceptions": {
        "cmdline": [],
        "modules": [
            "coded_exceptions"
        ],
        "version": "0.1.0"
    },
    "coded4": {
        "cmdline": [],
        "modules": [
            "coded4",
            "coded4.approx",
            "coded4.cluster",
            "coded4.output",
            "coded4.stats",
            "coded4.utils",
            "coded4.vcs"
        ],
        "version": "0.3.3"
    },
    "codedep": {
        "cmdline": [
            "codedep_check"
        ],
        "modules": [
            "codedep",
            "codedep.check_deps",
            "codedep.compute",
            "codedep.decorators",
            "codedep.hash",
            "codedep.test_codedep"
        ],
        "version": "0.3"
    },
    "codedeploy-generator": {
        "cmdline": [],
        "modules": [
            "codedeploy_generator",
            "codedeploy_generator.cli"
        ],
        "version": "1.0.16"
    },
    "codedeploy-monitor": {
        "cmdline": [],
        "modules": [
            "codedeploy_monitor",
            "codedeploy_monitor.config",
            "codedeploy_monitor.config_parser",
            "codedeploy_monitor.deploy_utils",
            "codedeploy_monitor.exceptions",
            "codedeploy_monitor.main_app"
        ],
        "version": "0.1"
    },
    "codedoc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "codedocu": {
        "cmdline": [],
        "modules": [
            "codedocu"
        ],
        "version": "0.1"
    },
    "codeedu": {
        "cmdline": [],
        "modules": [
            "codeEDU.code_edu"
        ],
        "version": "0.21"
    },
    "codefactory": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.2"
    },
    "codefights": {
        "cmdline": [],
        "modules": [
            "codefights",
            "codefights.boilerplate",
            "codefights.boilerplate.Arena",
            "codefights.boilerplate.Commentator",
            "codefights.boilerplate.Human",
            "codefights.boilerplate.ProtocolException",
            "codefights.boilerplate.SDK",
            "codefights.boilerplate.server",
            "codefights.boilerplate.server.Protocol",
            "codefights.boilerplate.server.ServerMode",
            "codefights.model",
            "codefights.model.Area",
            "codefights.model.GameScoringRules",
            "codefights.model.IFighter",
            "codefights.model.Move",
            "codefights.samples",
            "codefights.samples.Boxer",
            "codefights.samples.Kickboxer"
        ],
        "version": "0.2"
    },
    "codeflow": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "codeforces-api": {
        "cmdline": [],
        "modules": [
            "codeforces",
            "codeforces.api",
            "codeforces.api.codeforces_api",
            "codeforces.api.json_objects",
            "codeforces.api.json_objects.base_json_object",
            "codeforces.api.json_objects.contest",
            "codeforces.api.json_objects.hack",
            "codeforces.api.json_objects.judge_protocol",
            "codeforces.api.json_objects.member",
            "codeforces.api.json_objects.party",
            "codeforces.api.json_objects.problem",
            "codeforces.api.json_objects.problem_result",
            "codeforces.api.json_objects.problem_statistics",
            "codeforces.api.json_objects.ranklist_row",
            "codeforces.api.json_objects.rating_change",
            "codeforces.api.json_objects.submission",
            "codeforces.api.json_objects.user",
            "codeforces.utils",
            "codeforces.utils.lazy_property"
        ],
        "version": "0.3.1"
    },
    "codeforces-dl": {
        "cmdline": [],
        "modules": [
            "codeforcesDl",
            "codeforcesDl.codeforcesdl"
        ],
        "version": "1.0.0.1"
    },
    "codeforces-tool": {
        "cmdline": [],
        "modules": [
            "cftool",
            "cftool.download",
            "cftool.editor",
            "cftool.notify",
            "cftool.seed",
            "cftool.submit",
            "cftool.template",
            "cftool.tester",
            "cftool.tool",
            "cftool.watch"
        ],
        "version": "0.6.2"
    },
    "codeforlife-portal": {
        "cmdline": [],
        "modules": [
            "deploy",
            "deploy.captcha",
            "deploy.mail",
            "deploy.middleware",
            "deploy.middleware.basicauth",
            "deploy.middleware.exceptionlogging",
            "deploy.permissions",
            "deploy.views",
            "example_project",
            "example_project.example_project",
            "example_project.example_project.settings",
            "example_project.example_project.wsgi",
            "example_project.manage",
            "portal",
            "portal._version",
            "portal.admin",
            "portal.app_settings",
            "portal.autoconfig",
            "portal.beta",
            "portal.emailMessages",
            "portal.emailMessages_new",
            "portal.forms",
            "portal.forms.admin_login",
            "portal.forms.auth_forms",
            "portal.forms.home",
            "portal.forms.organisation",
            "portal.forms.play",
            "portal.forms.play_new",
            "portal.forms.registration",
            "portal.forms.teach",
            "portal.forms.teach_new",
            "portal.handlers",
            "portal.helpers",
            "portal.helpers.emails",
            "portal.helpers.emails_new",
            "portal.helpers.generators",
            "portal.helpers.location",
            "portal.helpers.password",
            "portal.middleware",
            "portal.middleware.ratelimit_login_attempts",
            "portal.migrations",
            "portal.migrations.0001_squashed_0041_new_news",
            "portal.migrations.0042_school_country",
            "portal.migrations.0043_auto_20150430_0952",
            "portal.migrations.0044_auto_20150430_0959",
            "portal.migrations.0045_auto_20150430_1446",
            "portal.migrations.0046_auto_20150723_1101",
            "portal.migrations.0047_remove_userprofile_avatar",
            "portal.migrations.0048_plural_management_frontnews",
            "portal.migrations.0049_refactor_emailverifications",
            "portal.migrations.0050_refactor_emailverifications_2",
            "portal.migrations.0051_add_missing_ev_records",
            "portal.migrations.0052_refactor_emailverifications_3",
            "portal.migrations.0053_refactor_teacher_student_1",
            "portal.models",
            "portal.permissions",
            "portal.templatetags",
            "portal.templatetags.app_tags",
            "portal.templatetags.table_tags",
            "portal.tests",
            "portal.tests.base_test",
            "portal.tests.base_test_migration",
            "portal.tests.base_test_new",
            "portal.tests.custom_handler",
            "portal.tests.pageObjects",
            "portal.tests.pageObjects.portal",
            "portal.tests.pageObjects.portal.about_page",
            "portal.tests.pageObjects.portal.admin",
            "portal.tests.pageObjects.portal.admin.admin_base_page",
            "portal.tests.pageObjects.portal.admin.admin_data_page",
            "portal.tests.pageObjects.portal.admin.admin_login_page",
            "portal.tests.pageObjects.portal.admin.admin_map_page",
            "portal.tests.pageObjects.portal.base_page",
            "portal.tests.pageObjects.portal.contact_page",
            "portal.tests.pageObjects.portal.email_verification_needed_page",
            "portal.tests.pageObjects.portal.email_verification_needed_page_new",
            "portal.tests.pageObjects.portal.forbidden_page",
            "portal.tests.pageObjects.portal.game_page",
            "portal.tests.pageObjects.portal.help_and_support_page",
            "portal.tests.pageObjects.portal.home_page",
            "portal.tests.pageObjects.portal.home_page_new",
            "portal.tests.pageObjects.portal.login_page",
            "portal.tests.pageObjects.portal.pdf_viewer_page",
            "portal.tests.pageObjects.portal.play",
            "portal.tests.pageObjects.portal.play.account_page",
            "portal.tests.pageObjects.portal.play.dashboard_page",
            "portal.tests.pageObjects.portal.play.join_school_or_club_page",
            "portal.tests.pageObjects.portal.play.play_base_page",
            "portal.tests.pageObjects.portal.play_page",
            "portal.tests.pageObjects.portal.resources_page",
            "portal.tests.pageObjects.portal.signup_page",
            "portal.tests.pageObjects.portal.teach",
            "portal.tests.pageObjects.portal.teach.account_page",
            "portal.tests.pageObjects.portal.teach.add_independent_student_to_class_page",
            "portal.tests.pageObjects.portal.teach.added_independent_student_to_class_page",
            "portal.tests.pageObjects.portal.teach.class_page",
            "portal.tests.pageObjects.portal.teach.class_page_new",
            "portal.tests.pageObjects.portal.teach.class_settings_page",
            "portal.tests.pageObjects.portal.teach.class_settings_page_new",
            "portal.tests.pageObjects.portal.teach.classes_page",
            "portal.tests.pageObjects.portal.teach.dashboard_page",
            "portal.tests.pageObjects.portal.teach.dashboard_page_new",
            "portal.tests.pageObjects.portal.teach.dismiss_students_page",
            "portal.tests.pageObjects.portal.teach.edit_student_page",
            "portal.tests.pageObjects.portal.teach.edit_student_password_page",
            "portal.tests.pageObjects.portal.teach.move_class_page",
            "portal.tests.pageObjects.portal.teach.move_class_page_new",
            "portal.tests.pageObjects.portal.teach.move_students_disambiguate_page",
            "portal.tests.pageObjects.portal.teach.move_students_disambiguate_page_new",
            "portal.tests.pageObjects.portal.teach.move_students_page",
            "portal.tests.pageObjects.portal.teach.move_students_page_new",
            "portal.tests.pageObjects.portal.teach.new_students_page",
            "portal.tests.pageObjects.portal.teach.onboarding_classes_page",
            "portal.tests.pageObjects.portal.teach.onboarding_organisation_page",
            "portal.tests.pageObjects.portal.teach.onboarding_revoke_request_page",
            "portal.tests.pageObjects.portal.teach.onboarding_student_list_page",
            "portal.tests.pageObjects.portal.teach.onboarding_students_page",
            "portal.tests.pageObjects.portal.teach.organisation_create_page",
            "portal.tests.pageObjects.portal.teach.organisation_manage_page",
            "portal.tests.pageObjects.portal.teach.organisation_revoke_page",
            "portal.tests.pageObjects.portal.teach.teach_base_page",
            "portal.tests.pageObjects.portal.teach.teach_base_page_new",
            "portal.tests.pageObjects.portal.teach.thanks_for_reset_page",
            "portal.tests.pageObjects.portal.teach_page",
            "portal.tests.pageObjects.portal.terms_page",
            "portal.tests.pageObjects.registration",
            "portal.tests.pageObjects.registration.independent_student_login_form_page",
            "portal.tests.pageObjects.registration.password_reset_form_page",
            "portal.tests.pageObjects.registration.student_password_reset_form_page",
            "portal.tests.pageObjects.registration.teacher_password_reset_form_page",
            "portal.tests.test_admin",
            "portal.tests.test_api",
            "portal.tests.test_class",
            "portal.tests.test_class_new",
            "portal.tests.test_emails",
            "portal.tests.test_independent_student",
            "portal.tests.test_independent_student_joins_a_class",
            "portal.tests.test_independent_student_new",
            "portal.tests.test_location",
            "portal.tests.test_navigation",
            "portal.tests.test_organisation",
            "portal.tests.test_organisation_new",
            "portal.tests.test_school_student",
            "portal.tests.test_school_student_new",
            "portal.tests.test_security",
            "portal.tests.test_teacher",
            "portal.tests.test_teacher_new",
            "portal.tests.test_teacher_student",
            "portal.tests.test_teacher_student_new",
            "portal.tests.test_views",
            "portal.tests.test_views_new",
            "portal.tests.utils",
            "portal.tests.utils.classes",
            "portal.tests.utils.classes_new",
            "portal.tests.utils.email",
            "portal.tests.utils.messages",
            "portal.tests.utils.organisation",
            "portal.tests.utils.organisation_new",
            "portal.tests.utils.student",
            "portal.tests.utils.student_new",
            "portal.tests.utils.teacher",
            "portal.tests.utils.teacher_new",
            "portal.urls",
            "portal.utils",
            "portal.views",
            "portal.views.admin",
            "portal.views.api",
            "portal.views.email",
            "portal.views.email_new",
            "portal.views.home",
            "portal.views.home_new",
            "portal.views.organisation",
            "portal.views.organisation_new",
            "portal.views.play",
            "portal.views.registration",
            "portal.views.teacher",
            "portal.views.teacher.dashboard",
            "portal.views.teacher.home",
            "portal.views.teacher.pdfs",
            "portal.views.teacher.solutions_level_selector",
            "portal.views.teacher.teach",
            "portal.views.teacher.teach_new",
            "portal.wsgi",
            "ratelimit",
            "ratelimit.backends",
            "ratelimit.backends.cache",
            "ratelimit.decorators",
            "reports",
            "reports.admin",
            "reports.migrations",
            "reports.migrations.0001_initial",
            "reports.migrations.0002_hitsperlevelperday",
            "reports.models",
            "reports.tests",
            "reports.urls",
            "reports.views"
        ],
        "version": "1.0.0.post.dev440"
    },
    "codefurther": {
        "cmdline": [],
        "modules": [
            "codefurther",
            "codefurther.directions",
            "codefurther.directions.directions",
            "codefurther.email",
            "codefurther.email.email",
            "codefurther.errors",
            "codefurther.football",
            "codefurther.football.constants",
            "codefurther.football.football",
            "codefurther.football.models",
            "codefurther.helpers",
            "codefurther.lyrics",
            "codefurther.lyrics.lyrics",
            "codefurther.slack",
            "codefurther.slack.slack",
            "codefurther.textmessage",
            "codefurther.textmessage.textmessage",
            "codefurther.top40",
            "codefurther.top40.top40",
            "codefurther.twitter",
            "codefurther.twitter.twitter",
            "codefurther.utils",
            "codefurther.weather",
            "codefurther.weather.weather",
            "examples",
            "examples.directionsdemo",
            "examples.footballdemo1",
            "examples.lyricsdemo",
            "examples.lyricsdemo2",
            "examples.lyricsdemo3",
            "examples.lyricsdemo4",
            "examples.lyricsdemo5",
            "examples.slack",
            "examples.sms",
            "examples.top40demo",
            "examples.top40demo2",
            "examples.top40demo3",
            "examples.top40demo4",
            "examples.top40demo5",
            "examples.twitter"
        ],
        "version": "0.1.0.dev15"
    },
    "codegen": {
        "cmdline": [],
        "modules": [
            "codegen"
        ],
        "version": "1.0"
    },
    "codegenerator": {
        "cmdline": [],
        "modules": [
            "codegenerator"
        ],
        "version": "0.0.1"
    },
    "codegenloader": {
        "cmdline": [],
        "modules": [
            "codegenloader",
            "codegenloader.base",
            "codegenloader.protobuf",
            "codegenloader.test",
            "codegenloader.test.proto",
            "codegenloader.test.protobuf_test",
            "codegenloader.test.runtests",
            "codegenloader.test.thrift_test",
            "codegenloader.test.thriftgen",
            "codegenloader.thrift"
        ],
        "version": "0.2"
    },
    "codegrapher": {
        "cmdline": [],
        "modules": [
            "cli",
            "cli.script",
            "codegrapher",
            "codegrapher.graph",
            "codegrapher.parser",
            "tests",
            "tests.test_graph",
            "tests.test_parser"
        ],
        "version": "0.2.1"
    },
    "codehack": {
        "cmdline": [],
        "modules": [
            "codehack",
            "codehack.decorators",
            "codehack.definition",
            "codehack.general",
            "codehack.manipulator",
            "codehack.trace",
            "codehack.util",
            "codehack.var_warning",
            "codehack.visualize"
        ],
        "version": "0.06"
    },
    "codeharvester": {
        "cmdline": [
            "harvester.py"
        ],
        "modules": [
            "codeharvester",
            "codeharvester.harvester"
        ],
        "version": "0.0.2"
    },
    "codehosting": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "codeink": {
        "cmdline": [],
        "modules": [
            "codeink",
            "codeink.artist",
            "codeink.atelier",
            "codeink.atelier.draftsman",
            "codeink.atelier.scientist",
            "codeink.atelier.secretary",
            "codeink.canvas",
            "codeink.parchment",
            "codeink.parchment.peephole",
            "codeink.parchment.pkginfo",
            "codeink.parchment.tools"
        ],
        "version": "1.0"
    },
    "codeintel": {
        "cmdline": [],
        "modules": [
            "codeintel",
            "codeintel.HTMLTreeParser",
            "codeintel.SilverCity",
            "codeintel.SilverCity.CPP",
            "codeintel.SilverCity.CSS",
            "codeintel.SilverCity.DispatchHandler",
            "codeintel.SilverCity.HTMLGenerator",
            "codeintel.SilverCity.HyperText",
            "codeintel.SilverCity.JavaScript",
            "codeintel.SilverCity.Keywords",
            "codeintel.SilverCity.LanguageInfo",
            "codeintel.SilverCity.Lexer",
            "codeintel.SilverCity.NULL",
            "codeintel.SilverCity.Perl",
            "codeintel.SilverCity.PostScript",
            "codeintel.SilverCity.Python",
            "codeintel.SilverCity.Ruby",
            "codeintel.SilverCity.SQL",
            "codeintel.SilverCity.ScintillaConstants",
            "codeintel.SilverCity.Utils",
            "codeintel.SilverCity.XML",
            "codeintel.SilverCity.XSLT",
            "codeintel.SilverCity.YAML",
            "codeintel.applib",
            "codeintel.benchmark",
            "codeintel.codeintel",
            "codeintel.codeintel2",
            "codeintel.codeintel2.accessor",
            "codeintel.codeintel2.buffer",
            "codeintel.codeintel2.citadel",
            "codeintel.codeintel2.citadel_common",
            "codeintel.codeintel2.common",
            "codeintel.codeintel2.constants_css1",
            "codeintel.codeintel2.constants_css2",
            "codeintel.codeintel2.constants_css3",
            "codeintel.codeintel2.constants_css_microsoft_extensions",
            "codeintel.codeintel2.constants_css_moz_extensions",
            "codeintel.codeintel2.constants_css_webkit_extensions",
            "codeintel.codeintel2.css_linter",
            "codeintel.codeintel2.database",
            "codeintel.codeintel2.database.catalog",
            "codeintel.codeintel2.database.database",
            "codeintel.codeintel2.database.langlib",
            "codeintel.codeintel2.database.langlibbase",
            "codeintel.codeintel2.database.multilanglib",
            "codeintel.codeintel2.database.projlib",
            "codeintel.codeintel2.database.resource",
            "codeintel.codeintel2.database.stdlib",
            "codeintel.codeintel2.database.util",
            "codeintel.codeintel2.environment",
            "codeintel.codeintel2.gencix_utils",
            "codeintel.codeintel2.hooks",
            "codeintel.codeintel2.indexer",
            "codeintel.codeintel2.jsdoc",
            "codeintel.codeintel2.lang_cpp",
            "codeintel.codeintel2.lang_css",
            "codeintel.codeintel2.lang_django",
            "codeintel.codeintel2.lang_go",
            "codeintel.codeintel2.lang_html",
            "codeintel.codeintel2.lang_html5",
            "codeintel.codeintel2.lang_javascript",
            "codeintel.codeintel2.lang_less",
            "codeintel.codeintel2.lang_mason",
            "codeintel.codeintel2.lang_mustache",
            "codeintel.codeintel2.lang_mxml",
            "codeintel.codeintel2.lang_nodejs",
            "codeintel.codeintel2.lang_perl",
            "codeintel.codeintel2.lang_php",
            "codeintel.codeintel2.lang_python",
            "codeintel.codeintel2.lang_python3",
            "codeintel.codeintel2.lang_rhtml",
            "codeintel.codeintel2.lang_ruby",
            "codeintel.codeintel2.lang_ruby_common",
            "codeintel.codeintel2.lang_smarty",
            "codeintel.codeintel2.lang_tcl",
            "codeintel.codeintel2.lang_templatetoolkit",
            "codeintel.codeintel2.lang_twig",
            "codeintel.codeintel2.lang_xbl",
            "codeintel.codeintel2.lang_xml",
            "codeintel.codeintel2.lang_xslt",
            "codeintel.codeintel2.lang_xul",
            "codeintel.codeintel2.lang_zend",
            "codeintel.codeintel2.langintel",
            "codeintel.codeintel2.manager",
            "codeintel.codeintel2.oop",
            "codeintel.codeintel2.oop.controller",
            "codeintel.codeintel2.oop.driver",
            "codeintel.codeintel2.oop.memory_reporter",
            "codeintel.codeintel2.parser_cix",
            "codeintel.codeintel2.parser_data",
            "codeintel.codeintel2.parseutil",
            "codeintel.codeintel2.perl_lexer",
            "codeintel.codeintel2.perl_parser",
            "codeintel.codeintel2.perlcile",
            "codeintel.codeintel2.phpdoc",
            "codeintel.codeintel2.pybinary",
            "codeintel.codeintel2.pythoncile",
            "codeintel.codeintel2.pythoncile1",
            "codeintel.codeintel2.pythoncile2",
            "codeintel.codeintel2.ruby_lexer",
            "codeintel.codeintel2.ruby_parser",
            "codeintel.codeintel2.rubycile",
            "codeintel.codeintel2.shared_lexer",
            "codeintel.codeintel2.shared_parser",
            "codeintel.codeintel2.tcl_lexer",
            "codeintel.codeintel2.tcl_parser",
            "codeintel.codeintel2.tclcile",
            "codeintel.codeintel2.tdparser",
            "codeintel.codeintel2.tree",
            "codeintel.codeintel2.tree_javascript",
            "codeintel.codeintel2.tree_perl",
            "codeintel.codeintel2.tree_php",
            "codeintel.codeintel2.tree_python",
            "codeintel.codeintel2.tree_ruby",
            "codeintel.codeintel2.udl",
            "codeintel.codeintel2.util",
            "codeintel.ctypesutils",
            "codeintel.difflibex",
            "codeintel.directoryServiceUtils",
            "codeintel.elementtree",
            "codeintel.elementtree.ElementInclude",
            "codeintel.elementtree.ElementPath",
            "codeintel.elementtree.ElementTree",
            "codeintel.elementtree.HTMLTreeBuilder",
            "codeintel.elementtree.SgmlopXMLTreeBuilder",
            "codeintel.elementtree.SimpleXMLTreeBuilder",
            "codeintel.elementtree.SimpleXMLWriter",
            "codeintel.elementtree.TidyHTMLTreeBuilder",
            "codeintel.elementtree.TidyTools",
            "codeintel.elementtree.XMLTreeBuilder",
            "codeintel.eollib",
            "codeintel.fileutils",
            "codeintel.koCatalog",
            "codeintel.koDTD",
            "codeintel.koRNGElementTree",
            "codeintel.koSimpleLexer",
            "codeintel.koTreeView.p",
            "codeintel.koUnicodeEncoding",
            "codeintel.koXMLDatasetInfo",
            "codeintel.koXMLPrefs",
            "codeintel.koXMLTreeService",
            "codeintel.koprocessutils",
            "codeintel.kotaclib",
            "codeintel.langinfo",
            "codeintel.langinfo_binary",
            "codeintel.langinfo_doc",
            "codeintel.langinfo_go",
            "codeintel.langinfo_komodo",
            "codeintel.langinfo_mozilla",
            "codeintel.langinfo_mxml",
            "codeintel.langinfo_other",
            "codeintel.langinfo_prog",
            "codeintel.langinfo_template",
            "codeintel.langinfo_tiny",
            "codeintel.memutils",
            "codeintel.mozutils",
            "codeintel.process",
            "codeintel.pythonVersionUtils",
            "codeintel.pyxpcomProfiler",
            "codeintel.reflow",
            "codeintel.sitepyxpcom",
            "codeintel.strptime",
            "codeintel.styles",
            "codeintel.textinfo",
            "codeintel.textutils",
            "codeintel.thread_helper",
            "codeintel.upgradeutils",
            "codeintel.uriparse",
            "codeintel.which",
            "codeintel.win32_named_pipe",
            "codeintel.wininteg",
            "codeintel.winprocess"
        ],
        "version": "0.9.3"
    },
    "codejam": {
        "cmdline": [],
        "modules": [
            "codejam",
            "codejam.algebra",
            "codejam.datastructures",
            "codejam.datastructures.interval_bag",
            "codejam.datastructures.sorted_list",
            "codejam.datastructures.summing_list",
            "codejam.graphs",
            "codejam.iterators",
            "codejam.maths"
        ],
        "version": "0.3.0"
    },
    "codejamhelpers": {
        "cmdline": [],
        "modules": [
            "codejamhelpers",
            "codejamhelpers.binary_search",
            "codejamhelpers.primes",
            "codejamhelpers.probability"
        ],
        "version": "0.1.1"
    },
    "codekitlang": {
        "cmdline": [],
        "modules": [
            "codekitlang",
            "codekitlang.command",
            "codekitlang.compiler"
        ],
        "version": "0.4"
    },
    "codelibwrapper": {
        "cmdline": [],
        "modules": [
            "CodeLibWrapper",
            "CodeLibWrapper.API",
            "CodeLibWrapper.API.APIReader",
            "CodeLibWrapper.BuildInLibs",
            "CodeLibWrapper.BuildInLibs.OS_Path",
            "CodeLibWrapper.CodeLibWrapper",
            "CodeLibWrapper.Collection",
            "CodeLibWrapper.Collection.CollectionHelper",
            "CodeLibWrapper.DataAnalysis",
            "CodeLibWrapper.DataAnalysis.DeepDiffUtils",
            "CodeLibWrapper.Database",
            "CodeLibWrapper.Database.DummyCursor",
            "CodeLibWrapper.Database.InformaticaHelper",
            "CodeLibWrapper.Database.MySQLHelper",
            "CodeLibWrapper.Database.SQLServerHelper",
            "CodeLibWrapper.Database.SQLServerWithBloomFilter",
            "CodeLibWrapper.Database.SQLiteHelper",
            "CodeLibWrapper.Database.dvff",
            "CodeLibWrapper.FileFormat",
            "CodeLibWrapper.FileFormat.CSVHelper",
            "CodeLibWrapper.FileFormat.Excel",
            "CodeLibWrapper.FileFormat.JmeterReportConvert",
            "CodeLibWrapper.FileFormat.JsonUtils",
            "CodeLibWrapper.FileFormat.xml2json",
            "CodeLibWrapper.IO",
            "CodeLibWrapper.IO.CompareUtils",
            "CodeLibWrapper.IO.FileHelper",
            "CodeLibWrapper.IO.FileTraversal",
            "CodeLibWrapper.IO.FolderCompare",
            "CodeLibWrapper.IO.ReadTxtFile",
            "CodeLibWrapper.IO.SimpleFileCompare",
            "CodeLibWrapper.IO.ZipFileHelper",
            "CodeLibWrapper.MathUtils",
            "CodeLibWrapper.MathUtils.MathUtils",
            "CodeLibWrapper.Network",
            "CodeLibWrapper.Network.EmailUtils",
            "CodeLibWrapper.Network.FTPHelper",
            "CodeLibWrapper.Network.IPSeek",
            "CodeLibWrapper.Network.NetworkUtils",
            "CodeLibWrapper.Security",
            "CodeLibWrapper.Security.SecurityUtils",
            "CodeLibWrapper.Serialization",
            "CodeLibWrapper.Serialization.Py2XML",
            "CodeLibWrapper.Serialization.SerializationDemo",
            "CodeLibWrapper.Serialization.XML2Py",
            "CodeLibWrapper.TestCaseManagement",
            "CodeLibWrapper.TestCaseManagement.TestCaseManagement",
            "CodeLibWrapper.TextTools",
            "CodeLibWrapper.TextTools.RandomUtils",
            "CodeLibWrapper.UIAction",
            "CodeLibWrapper.UIAction.JenkinsLogSpiders",
            "CodeLibWrapper.UIAction.SeliniumUtils",
            "CodeLibWrapper.UtilsHelper",
            "CodeLibWrapper.UtilsHelper.HashUtils",
            "CodeLibWrapper.XMLFunction",
            "CodeLibWrapper.XMLFunction.ConvertXML2Obj",
            "CodeLibWrapper.XMLFunction.EnvironmentConfig",
            "CodeLibWrapper.XMLFunction.ParseXMLBySAX",
            "CodeLibWrapper.XMLFunction.Py2XML",
            "CodeLibWrapper.XMLFunction.XMLSortHelper",
            "CodeLibWrapper.XMLFunction.XmlUtils",
            "CodeLibWrapper.XMLFunction.xmlvalidatehelper",
            "RobotFrameworkSample",
            "UserKeywords"
        ],
        "version": "0.1.36"
    },
    "codemod": {
        "cmdline": [],
        "modules": [
            "codemod",
            "codemod.base"
        ],
        "version": "0.2.1"
    },
    "codemommywebpython": {
        "cmdline": [],
        "modules": [
            "CodeMommy.WebPython",
            "CodeMommy/core.About",
            "CodeMommy/core.Http",
            "CodeMommy/core.Output",
            "CodeMommy/core.Route",
            "CodeMommy/core.Server"
        ],
        "version": "0.0.3"
    },
    "codenamize": {
        "cmdline": [],
        "modules": [
            "codenamize",
            "codenamize.codenamize"
        ],
        "version": "1.2.2"
    },
    "codenode": {
        "cmdline": [
            "codenode-admin"
        ],
        "modules": [
            "codenode",
            "codenode.backend",
            "codenode.backend._devel_settings",
            "codenode.backend._settings",
            "codenode.backend.core",
            "codenode.backend.engine",
            "codenode.backend.server",
            "codenode.engine",
            "codenode.engine.completer",
            "codenode.engine.interpreter",
            "codenode.engine.introspection",
            "codenode.engine.outputtrap",
            "codenode.engine.runtime",
            "codenode.engine.sage",
            "codenode.engine.sage.interpreter",
            "codenode.engine.sage.runtime",
            "codenode.engine.server",
            "codenode.external",
            "codenode.external.mmaplotlib",
            "codenode.external.mmaplotlib.axes",
            "codenode.external.mmaplotlib.codenode_plot",
            "codenode.external.mmaplotlib.knoboo_plot",
            "codenode.external.mmaplotlib.plot",
            "codenode.frontend",
            "codenode.frontend._devel_settings",
            "codenode.frontend._settings",
            "codenode.frontend.async",
            "codenode.frontend.async.backend",
            "codenode.frontend.async.check",
            "codenode.frontend.async.dbmanager",
            "codenode.frontend.backend",
            "codenode.frontend.backend.admin",
            "codenode.frontend.backend.fixtures",
            "codenode.frontend.backend.fixtures.development",
            "codenode.frontend.backend.manager",
            "codenode.frontend.backend.models",
            "codenode.frontend.backend.rpc",
            "codenode.frontend.backend.urls",
            "codenode.frontend.backend.views",
            "codenode.frontend.bookshelf",
            "codenode.frontend.bookshelf.admin",
            "codenode.frontend.bookshelf.models",
            "codenode.frontend.bookshelf.tests",
            "codenode.frontend.bookshelf.urls",
            "codenode.frontend.bookshelf.views",
            "codenode.frontend.notebook",
            "codenode.frontend.notebook.admin",
            "codenode.frontend.notebook.forms",
            "codenode.frontend.notebook.models",
            "codenode.frontend.notebook.revision",
            "codenode.frontend.notebook.revision_utils",
            "codenode.frontend.notebook.tests",
            "codenode.frontend.notebook.urls",
            "codenode.frontend.notebook.views",
            "codenode.frontend.registration",
            "codenode.frontend.registration.admin",
            "codenode.frontend.registration.forms",
            "codenode.frontend.registration.management",
            "codenode.frontend.registration.management.commands",
            "codenode.frontend.registration.management.commands.cleanupregistration",
            "codenode.frontend.registration.models",
            "codenode.frontend.registration.urls",
            "codenode.frontend.registration.views",
            "codenode.frontend.search",
            "codenode.frontend.search.search",
            "codenode.frontend.search.tests",
            "codenode.frontend.search.urls",
            "codenode.frontend.search.views",
            "codenode.frontend.urls",
            "codenode.frontend.usersettings",
            "codenode.frontend.usersettings.admin",
            "codenode.frontend.usersettings.forms",
            "codenode.frontend.usersettings.models",
            "codenode.frontend.usersettings.urls",
            "codenode.frontend.usersettings.views",
            "codenode.frontend.util",
            "codenode.frontend.util.urls",
            "codenode.frontend.util.views",
            "codenode.management",
            "codenode.management.args",
            "codenode.management.codenode_admin",
            "codenode.printing",
            "codenode.printing.printers",
            "codenode.service",
            "codenode.twisted.plugins.backend_plugin",
            "codenode.twisted.plugins.frontend_plugin",
            "codenode.twisted.plugins.python"
        ],
        "version": "0.02"
    },
    "codeowl": {
        "cmdline": [],
        "modules": [
            "codeowl",
            "codeowl.cli",
            "codeowl.code",
            "codeowl.index",
            "codeowl.score",
            "codeowl.search"
        ],
        "version": "0.0.1"
    },
    "codepackager": {
        "cmdline": [
            "prep_codepkg.py",
            "recv_codepkg.py"
        ],
        "modules": [
            "codepackager",
            "codepackager.cmd",
            "codepackager.codepkgr_common",
            "codepackager.codepkgrtypes"
        ],
        "version": "1.02"
    },
    "codepad": {
        "cmdline": [
            "codepad"
        ],
        "modules": [
            "codepad"
        ],
        "version": "0.1"
    },
    "codepadr": {
        "cmdline": [],
        "modules": [
            "codepadr",
            "codepadr.cli"
        ],
        "version": "0.9"
    },
    "codepair": {
        "cmdline": [
            "codepair"
        ],
        "modules": [
            "codepair"
        ],
        "version": "1.1"
    },
    "codepoints": {
        "cmdline": [],
        "modules": [
            "codepoints"
        ],
        "version": "1.0"
    },
    "codepy": {
        "cmdline": [],
        "modules": [
            "codepy",
            "codepy.bpl",
            "codepy.cgen",
            "codepy.cuda",
            "codepy.elementwise",
            "codepy.jit",
            "codepy.libraries",
            "codepy.toolchain",
            "codepy.tools"
        ],
        "version": "2013.1.2"
    },
    "codequality": {
        "cmdline": [],
        "modules": [
            "codequality",
            "codequality.checkers",
            "codequality.main",
            "codequality.scmhandlers"
        ],
        "version": "0.2-dev"
    },
    "codereview": {
        "cmdline": [
            "diff-viewer",
            "pyqgit"
        ],
        "modules": [
            "CodeReview",
            "CodeReview.Application",
            "CodeReview.Application.ApplicationBase",
            "CodeReview.Config",
            "CodeReview.Config.Config",
            "CodeReview.Config.ConfigInstall",
            "CodeReview.Config.Messages",
            "CodeReview.Diff",
            "CodeReview.Diff.RawTextDocument",
            "CodeReview.Diff.RawTextDocumentDiff",
            "CodeReview.Diff.SyntaxHighlighter",
            "CodeReview.Diff.TextDocumentDiffModel",
            "CodeReview.Diff.TextDocumentModel",
            "CodeReview.GUI",
            "CodeReview.GUI.Base",
            "CodeReview.GUI.Base.GuiApplicationBase",
            "CodeReview.GUI.Base.MainWindowBase",
            "CodeReview.GUI.DiffViewer",
            "CodeReview.GUI.DiffViewer.DiffViewerApplication",
            "CodeReview.GUI.DiffViewer.DiffViewerMainWindow",
            "CodeReview.GUI.DiffViewer.DiffWidget",
            "CodeReview.GUI.DiffViewer.DiffWidgetConfig",
            "CodeReview.GUI.DiffViewer.SyntaxHighlighterStyle",
            "CodeReview.GUI.Forms",
            "CodeReview.GUI.Forms.CriticalErrorForm",
            "CodeReview.GUI.LogBrowser",
            "CodeReview.GUI.LogBrowser.CommitTableModel",
            "CodeReview.GUI.LogBrowser.LogBrowserApplication",
            "CodeReview.GUI.LogBrowser.LogBrowserMainWindow",
            "CodeReview.GUI.LogBrowser.LogTableModel",
            "CodeReview.GUI.Widgets",
            "CodeReview.GUI.Widgets.IconLoader",
            "CodeReview.GUI.Widgets.MessageBox",
            "CodeReview.GUI.ui",
            "CodeReview.GUI.ui.critical_error_form_ui",
            "CodeReview.Logging",
            "CodeReview.Logging.ExceptionHook",
            "CodeReview.Logging.Logging",
            "CodeReview.Math",
            "CodeReview.Math.Functions",
            "CodeReview.Math.Interval",
            "CodeReview.PatienceDiff",
            "CodeReview.PatienceDiff._patiencediff_py",
            "CodeReview.Repository",
            "CodeReview.Repository.Git",
            "CodeReview.Tools",
            "CodeReview.Tools.AttributeDictionaryInterface",
            "CodeReview.Tools.BackTrace",
            "CodeReview.Tools.EnumFactory",
            "CodeReview.Tools.IteratorTools",
            "CodeReview.Tools.Path",
            "CodeReview.Tools.Platform",
            "CodeReview.Tools.ProgramOptions",
            "CodeReview.Tools.RevisionVersion",
            "CodeReview.Tools.Singleton",
            "CodeReview.Tools.Slice",
            "CodeReview.Tools.StringTools",
            "CodeReview.Version"
        ],
        "version": "0.3.0"
    },
    "codernitydb": {
        "cmdline": [],
        "modules": [
            "CodernityDB",
            "CodernityDB.database",
            "CodernityDB.database_gevent",
            "CodernityDB.database_safe_shared",
            "CodernityDB.database_super_thread_safe",
            "CodernityDB.database_thread_safe",
            "CodernityDB.debug_stuff",
            "CodernityDB.env",
            "CodernityDB.hash_index",
            "CodernityDB.index",
            "CodernityDB.indexcreator",
            "CodernityDB.lfu_cache",
            "CodernityDB.lfu_cache_with_lock",
            "CodernityDB.migrate",
            "CodernityDB.misc",
            "CodernityDB.multi_index",
            "CodernityDB.patch",
            "CodernityDB.rr_cache",
            "CodernityDB.rr_cache_with_lock",
            "CodernityDB.sharded_hash",
            "CodernityDB.sharded_index",
            "CodernityDB.storage",
            "CodernityDB.tree_index"
        ],
        "version": "0.5.0"
    },
    "codernitydb-http": {
        "cmdline": [],
        "modules": [
            "CodernityDBHTTP",
            "CodernityDBHTTP.all_exceptions",
            "CodernityDBHTTP.app",
            "CodernityDBHTTP.database_gevent",
            "CodernityDBHTTP.database_threads",
            "CodernityDBHTTP.misc",
            "CodernityDBHTTP.server",
            "CodernityDBHTTP.server_gevent",
            "CodernityDBHTTP.server_wsgiref"
        ],
        "version": "0.4.1"
    },
    "codernitydb-pyclient": {
        "cmdline": [],
        "modules": [
            "CodernityDBPyClient",
            "CodernityDBPyClient.all_exceptions",
            "CodernityDBPyClient.client",
            "CodernityDBPyClient.database"
        ],
        "version": "0.4.1"
    },
    "coderwall": {
        "cmdline": [],
        "modules": [
            "coderwall"
        ],
        "version": "1.3.0"
    },
    "codeschool": {
        "cmdline": [],
        "modules": [
            "codeschool",
            "codeschool.__meta__",
            "codeschool.constants",
            "codeschool.decorators",
            "codeschool.filters",
            "codeschool.meta",
            "codeschool.models",
            "codeschool.settings",
            "codeschool.settings.base",
            "codeschool.settings.dev",
            "codeschool.settings.production",
            "codeschool.shortcuts",
            "codeschool.templatetags",
            "codeschool.test",
            "codeschool.test.test_codeschool",
            "codeschool.urls",
            "codeschool.utils",
            "codeschool.wsgi",
            "cs_activities",
            "cs_activities.admin",
            "cs_activities.apps",
            "cs_activities.migrations",
            "cs_activities.migrations.0001_initial",
            "cs_activities.migrations.0002_auto_20160307_0208",
            "cs_activities.migrations.0003_auto_20160307_0239",
            "cs_activities.migrations.0004_textualresponse",
            "cs_activities.migrations.0005_auto_20160315_1541",
            "cs_activities.migrations.0006_activity_max_grade",
            "cs_activities.migrations.0007_auto_20160323_1302",
            "cs_activities.models",
            "cs_activities.tests",
            "cs_activities.views",
            "cs_auth",
            "cs_auth.admin",
            "cs_auth.apps",
            "cs_auth.forms",
            "cs_auth.migrations",
            "cs_auth.migrations.0001_initial",
            "cs_auth.migrations.0002_auto_20160306_2312",
            "cs_auth.migrations.0003_singleusergroup",
            "cs_auth.migrations.0004_auto_20160315_1542",
            "cs_auth.migrations.0005_auto_20160315_1730",
            "cs_auth.models",
            "cs_auth.tests",
            "cs_auth.urls",
            "cs_auth.views",
            "cs_core",
            "cs_core.admin",
            "cs_core.apps",
            "cs_core.migrations",
            "cs_core.models",
            "cs_core.tests",
            "cs_core.views",
            "cs_courses",
            "cs_courses.admin",
            "cs_courses.apps",
            "cs_courses.migrations",
            "cs_courses.migrations.0001_initial",
            "cs_courses.migrations.0002_auto_20160307_0039",
            "cs_courses.migrations.0003_remove_course_is_expired",
            "cs_courses.models",
            "cs_courses.tests",
            "cs_courses.urls",
            "cs_courses.views",
            "cs_gallery",
            "cs_gallery.admin",
            "cs_gallery.apps",
            "cs_gallery.migrations",
            "cs_gallery.models",
            "cs_gallery.tests",
            "cs_gallery.views",
            "cs_linktable",
            "cs_linktable.admin",
            "cs_linktable.apps",
            "cs_linktable.migrations",
            "cs_linktable.migrations.0001_initial",
            "cs_linktable.models",
            "cs_linktable.tests",
            "cs_linktable.urls",
            "cs_linktable.views",
            "cs_pages",
            "cs_pages.migrations",
            "cs_pages.migrations.0001_initial",
            "cs_pages.models",
            "cs_questions",
            "cs_questions.admin",
            "cs_questions.apps",
            "cs_questions.migrations",
            "cs_questions.migrations.0001_initial",
            "cs_questions.migrations.0002_question_discipline",
            "cs_questions.migrations.0003_auto_20160307_0239",
            "cs_questions.migrations.0004_auto_20160323_1302",
            "cs_questions.migrations.0005_auto_20160323_1303",
            "cs_questions.migrations.0006_auto_20160326_1534",
            "cs_questions.migrations.0007_auto_20160326_1535",
            "cs_questions.migrations.0008_auto_20160326_1535",
            "cs_questions.migrations.0009_auto_20160326_1546",
            "cs_questions.migrations.0010_remove_codeiofeedback_title",
            "cs_questions.models",
            "cs_questions.tests",
            "cs_questions.urls",
            "cs_questions.views",
            "cs_search",
            "cs_search.views",
            "unitfields",
            "unitfields.fields",
            "unitfields.models",
            "unitfields.tests",
            "unitfields.units"
        ],
        "version": "0.2.3"
    },
    "codeshare": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "codeship-yaml": {
        "cmdline": [],
        "modules": [
            "codeship_yaml",
            "codeship_yaml.main"
        ],
        "version": "0.1.2"
    },
    "codeshow": {
        "cmdline": [],
        "modules": [
            "codeshow",
            "codeshow.cmdline",
            "codeshow.format",
            "codeshow.util"
        ],
        "version": "0.2.2"
    },
    "codeskel": {
        "cmdline": [],
        "modules": [
            "codeskel",
            "codeskel.base",
            "codeskel.bootstrap_theme",
            "codeskel.cs_django_buildout",
            "codeskel.cs_django_project",
            "codeskel.cs_plone3_theme",
            "codeskel.cs_plone4_buildout",
            "codeskel.cs_plone5_theme",
            "codeskel.dexterity_cs",
            "codeskel.localcommands",
            "codeskel.localcommands.dexterity"
        ],
        "version": "4.0.13"
    },
    "codeskeleton": {
        "cmdline": [],
        "modules": [
            "codeskeleton",
            "codeskeleton.cli",
            "codeskeleton.cli.cliutils",
            "codeskeleton.cli.codeskeleton_cli",
            "codeskeleton.cli.colorize",
            "codeskeleton.config",
            "codeskeleton.exceptions",
            "codeskeleton.gui",
            "codeskeleton.gui.gui",
            "codeskeleton.gui.snippetbutton",
            "codeskeleton.gui.snippetlist",
            "codeskeleton.spec",
            "codeskeleton.spec.abstract_spec_object",
            "codeskeleton.spec.abstract_toplevel",
            "codeskeleton.spec.default",
            "codeskeleton.spec.file",
            "codeskeleton.spec.files",
            "codeskeleton.spec.filesystem_loader",
            "codeskeleton.spec.snippet",
            "codeskeleton.spec.spec_cache",
            "codeskeleton.spec.tree",
            "codeskeleton.spec.value_validators",
            "codeskeleton.spec.variable",
            "codeskeleton.spec.variables",
            "codeskeleton.template",
            "codeskeleton.tests",
            "codeskeleton.tests.test_config",
            "codeskeleton.tests.test_spec",
            "codeskeleton.tests.test_spec.test_default",
            "codeskeleton.tests.test_spec.test_file",
            "codeskeleton.tests.test_spec.test_files",
            "codeskeleton.tests.test_spec.test_filesystem_loader",
            "codeskeleton.tests.test_spec.test_snippet",
            "codeskeleton.tests.test_spec.test_spec_cache",
            "codeskeleton.tests.test_spec.test_tree",
            "codeskeleton.tests.test_spec.test_variable",
            "codeskeleton.tests.test_spec.test_variables",
            "codeskeleton.tests.test_yaml_loader",
            "codeskeleton.value_generators",
            "codeskeleton.value_generators.debug",
            "codeskeleton.value_generators.django_secret_key",
            "codeskeleton.value_generators.make_random_string",
            "codeskeleton.value_generators.random_alphanumeric_string",
            "codeskeleton.value_generators.random_int",
            "codeskeleton.value_generators.registry",
            "codeskeleton.value_validators",
            "codeskeleton.value_validators.email",
            "codeskeleton.value_validators.one_letter",
            "codeskeleton.value_validators.python_modulename",
            "codeskeleton.value_validators.registry",
            "codeskeleton.yaml_loader"
        ],
        "version": "1.0.1"
    },
    "codespeed": {
        "cmdline": [],
        "modules": [
            "codespeed",
            "codespeed.admin",
            "codespeed.commits",
            "codespeed.commits.exceptions",
            "codespeed.commits.git",
            "codespeed.commits.github",
            "codespeed.commits.logs",
            "codespeed.commits.mercurial",
            "codespeed.commits.subversion",
            "codespeed.feeds",
            "codespeed.migrations",
            "codespeed.migrations.0001_initial",
            "codespeed.migrations.0002_median",
            "codespeed.models",
            "codespeed.results",
            "codespeed.settings",
            "codespeed.south_migrations",
            "codespeed.south_migrations.0001_initial",
            "codespeed.south_migrations.0002_auto__chg_field_report_summary",
            "codespeed.south_migrations.0003_auto__add_field_revision_branch",
            "codespeed.south_migrations.0004_auto__add_branch",
            "codespeed.south_migrations.0005_auto__del_unique_revision_commitid_project__add_unique_revision_commit",
            "codespeed.south_migrations.0006_auto__chg_field_revision_branch",
            "codespeed.south_migrations.0007_auto__del_unique_revision_commitid_project_branch__add_unique_revision",
            "codespeed.south_migrations.0008_auto__chg_field_benchmark_description",
            "codespeed.south_migrations.0009_auto__chg_field_revision_project",
            "codespeed.south_migrations.0010_auto__add_field_benchmark_default_on_comparison",
            "codespeed.south_migrations.0011_auto__add_field_project_commit_browsing_url",
            "codespeed.south_migrations.0011_auto__del_unique_executable_name__add_unique_executable_project_name",
            "codespeed.south_migrations.0012_auto__add_field_benchmark_parent__add_field_project_commit_browsing_ur",
            "codespeed.south_migrations.0013_auto__chg_field_revision_author__chg_field_environment_kernel__chg_fie",
            "codespeed.south_migrations.migrations",
            "codespeed.south_migrations.migrations.0001_initial",
            "codespeed.south_migrations.migrations.0002_auto__chg_field_report_summary",
            "codespeed.south_migrations.migrations.0003_auto__add_field_revision_branch",
            "codespeed.south_migrations.migrations.0004_auto__add_branch",
            "codespeed.south_migrations.migrations.0005_auto__del_unique_revision_commitid_project__add_unique_revision_commit",
            "codespeed.south_migrations.migrations.0006_auto__chg_field_revision_branch",
            "codespeed.south_migrations.migrations.0007_auto__del_unique_revision_commitid_project_branch__add_unique_revision",
            "codespeed.south_migrations.migrations.0008_auto__chg_field_benchmark_description",
            "codespeed.south_migrations.migrations.0009_auto__chg_field_revision_project",
            "codespeed.south_migrations.migrations.0010_auto__add_field_benchmark_default_on_comparison",
            "codespeed.south_migrations.migrations.0011_auto__add_field_project_commit_browsing_url",
            "codespeed.south_migrations.migrations.0011_auto__del_unique_executable_name__add_unique_executable_project_name",
            "codespeed.south_migrations.migrations.0012_auto__add_field_benchmark_parent__add_field_project_commit_browsing_ur",
            "codespeed.south_migrations.migrations.0013_auto__chg_field_revision_author__chg_field_environment_kernel__chg_fie",
            "codespeed.templatetags",
            "codespeed.templatetags.percentages",
            "codespeed.tests",
            "codespeed.tests.test_models",
            "codespeed.tests.test_settings",
            "codespeed.tests.test_views",
            "codespeed.tests.test_views_data",
            "codespeed.urls",
            "codespeed.views",
            "codespeed.views_data"
        ],
        "version": "0.11.0"
    },
    "codespeed-client": {
        "cmdline": [
            "codespeed-client"
        ],
        "modules": [
            "codespeed_client",
            "codespeed_client.client"
        ],
        "version": "0.3.3"
    },
    "codespell": {
        "cmdline": [
            "codespell"
        ],
        "modules": [
            "codespell_lib",
            "codespell_lib._codespell",
            "codespell_lib.data",
            "codespell_lib.tests",
            "codespell_lib.tests.test_basic"
        ],
        "version": "1.10.0"
    },
    "codesters": {
        "cmdline": [],
        "modules": [
            "codesters",
            "codesters.bezier",
            "codesters.display_object",
            "codesters.environment",
            "codesters.example",
            "codesters.execute",
            "codesters.hitbox",
            "codesters.manager",
            "codesters.run",
            "codesters.shapes",
            "codesters.sprite",
            "codesters.transformations"
        ],
        "version": "0.0.42"
    },
    "codestyle": {
        "cmdline": [
            "codestyle"
        ],
        "modules": [
            "codestyle",
            "codestyle.application",
            "codestyle.checkers",
            "codestyle.result",
            "codestyle.settings",
            "codestyle.utils",
            "tests",
            "tests.test_application",
            "tests.test_checkers"
        ],
        "version": "0.4.3"
    },
    "codesync": {
        "cmdline": [
            "csync"
        ],
        "modules": [],
        "version": "0.1"
    },
    "codet-ari": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "codet-swaggerpy": {
        "cmdline": [],
        "modules": [
            "swaggerpy",
            "swaggerpy.client",
            "swaggerpy.codegen",
            "swaggerpy.http_client",
            "swaggerpy.processors",
            "swaggerpy.swagger_model"
        ],
        "version": "0.2.1"
    },
    "codetalker": {
        "cmdline": [],
        "modules": [
            "codetalker",
            "codetalker.contrib",
            "codetalker.contrib.configparser",
            "codetalker.contrib.json",
            "codetalker.contrib.math",
            "codetalker.pgm",
            "codetalker.pgm.errors",
            "codetalker.pgm.grammar",
            "codetalker.pgm.logger",
            "codetalker.pgm.nodes",
            "codetalker.pgm.parse",
            "codetalker.pgm.rules",
            "codetalker.pgm.special",
            "codetalker.pgm.text",
            "codetalker.pgm.token",
            "codetalker.pgm.tokenize",
            "codetalker.pgm.tokens",
            "codetalker.pgm.translator",
            "codetalker.testing"
        ],
        "version": "1.1"
    },
    "codethecity-slackbot": {
        "cmdline": [],
        "modules": [
            "slackbot",
            "slackbot.slackbot"
        ],
        "version": "1.0.0.dev3"
    },
    "codetimer": {
        "cmdline": [],
        "modules": [
            "codetimer"
        ],
        "version": "0.1.0"
    },
    "codetodo": {
        "cmdline": [],
        "modules": [
            "codetodo"
        ],
        "version": "1.1"
    },
    "codetools": {
        "cmdline": [],
        "modules": [
            "codetools",
            "codetools.blocks",
            "codetools.blocks.analysis",
            "codetools.blocks.api",
            "codetools.blocks.ast_25",
            "codetools.blocks.ast_25.api",
            "codetools.blocks.ast_25.ast",
            "codetools.blocks.ast_25.parser",
            "codetools.blocks.ast_25.unparse_",
            "codetools.blocks.block",
            "codetools.blocks.compiler_",
            "codetools.blocks.compiler_.api",
            "codetools.blocks.compiler_.ast",
            "codetools.blocks.compiler_.ast.api",
            "codetools.blocks.compiler_.ast.ast",
            "codetools.blocks.compiler_.ast.deep_equality",
            "codetools.blocks.compiler_.ast.extract_children_trees",
            "codetools.blocks.compiler_.ast.get_children_tree",
            "codetools.blocks.compiler_.compiler_",
            "codetools.blocks.compiler_.tests",
            "codetools.blocks.compiler_unparse",
            "codetools.blocks.decorators",
            "codetools.blocks.namespace_tools",
            "codetools.blocks.parser_",
            "codetools.blocks.rename",
            "codetools.blocks.tests",
            "codetools.blocks.tests.decorators_test",
            "codetools.blocks.tests.error_continue_test",
            "codetools.blocks.tests.test_block",
            "codetools.blocks.tests.test_namespace_tools",
            "codetools.blocks2",
            "codetools.blocks2.analysis",
            "codetools.blocks2.block",
            "codetools.blocks2.block_transformer",
            "codetools.contexts",
            "codetools.contexts.adapted_data_context",
            "codetools.contexts.adapter",
            "codetools.contexts.adapter.abstract_context_adapter",
            "codetools.contexts.adapter.adapter_manager_mixin",
            "codetools.contexts.adapter.i_adapter",
            "codetools.contexts.adapter.i_adapter_manager",
            "codetools.contexts.adapter.masking_adapter",
            "codetools.contexts.adapter.name_adapter",
            "codetools.contexts.adapter.tests",
            "codetools.contexts.adapter.tests.adapter_manager_mixin_test_case",
            "codetools.contexts.adapter.tests.masking_adapter_test_case",
            "codetools.contexts.adapter.tests.name_adapter_test_case",
            "codetools.contexts.adapter.tests.unit_apply_adapter_test_case",
            "codetools.contexts.adapter.tests.unit_conversion_adapter_test_case",
            "codetools.contexts.adapter.unit_apply_adapter",
            "codetools.contexts.adapter.unit_conversion_adapter",
            "codetools.contexts.adapter.unit_converter_functions",
            "codetools.contexts.adapter.unit_corrector_adapter",
            "codetools.contexts.adapter.unit_manipulation_adapter",
            "codetools.contexts.api",
            "codetools.contexts.context_function",
            "codetools.contexts.data_context",
            "codetools.contexts.function_filter_context",
            "codetools.contexts.geo_context",
            "codetools.contexts.hdf5_context",
            "codetools.contexts.i_adapted_data_context",
            "codetools.contexts.i_context",
            "codetools.contexts.items_modified_event",
            "codetools.contexts.iterable_adapted_data_context",
            "codetools.contexts.masks",
            "codetools.contexts.masks.context_mask",
            "codetools.contexts.masks.index_context_mask",
            "codetools.contexts.multi_context",
            "codetools.contexts.name_filter_context",
            "codetools.contexts.tests",
            "codetools.contexts.tests.abstract_context_test_case",
            "codetools.contexts.tests.adapted_data_context_test_case",
            "codetools.contexts.tests.context_function_test_case",
            "codetools.contexts.tests.context_with_unit_conversion_adapter_test_case",
            "codetools.contexts.tests.data_context_test_case",
            "codetools.contexts.tests.events_test_case",
            "codetools.contexts.tests.function_filter_context_test_case",
            "codetools.contexts.tests.hdf5_context_test_case",
            "codetools.contexts.tests.mapping_test_case",
            "codetools.contexts.tests.multi_context_test_case",
            "codetools.contexts.tests.multi_context_with_geo_context_test_case",
            "codetools.contexts.tests.name_adapter_test",
            "codetools.contexts.tests.name_filter_context_test_case",
            "codetools.contexts.tests.traitslike_test_case",
            "codetools.contexts.tests.utils_test",
            "codetools.contexts.tests.with_mask_adapter_test_case",
            "codetools.contexts.tests.with_mask_test_case",
            "codetools.contexts.traitslike_context_wrapper",
            "codetools.contexts.utils",
            "codetools.contexts.with_mask",
            "codetools.contexts.with_mask_adapter",
            "codetools.execution",
            "codetools.execution.api",
            "codetools.execution.async_executing_context",
            "codetools.execution.executing_context",
            "codetools.execution.expression_context",
            "codetools.execution.formula_executing_context",
            "codetools.execution.interfaces",
            "codetools.execution.restricting_code_executable",
            "codetools.execution.tests",
            "codetools.execution.tests.executing_context_test",
            "codetools.execution.tests.expression_context_test",
            "codetools.execution.tests.test_async_executing_context",
            "codetools.execution.tests.test_formula_executing_context",
            "codetools.execution.tests.test_restricting_code_executable",
            "codetools.util",
            "codetools.util.cbook",
            "codetools.util.dict",
            "codetools.util.equivalence",
            "codetools.util.functional",
            "codetools.util.graph",
            "codetools.util.sequence",
            "codetools.util.tree"
        ],
        "version": "4.2.0"
    },
    "codetransformer": {
        "cmdline": [],
        "modules": [
            "codetransformer",
            "codetransformer.code",
            "codetransformer.core",
            "codetransformer.decompiler",
            "codetransformer.decompiler._343",
            "codetransformer.instructions",
            "codetransformer.patterns",
            "codetransformer.tests",
            "codetransformer.tests.test_code",
            "codetransformer.tests.test_core",
            "codetransformer.tests.test_decompiler",
            "codetransformer.tests.test_instructions",
            "codetransformer.transformers",
            "codetransformer.transformers.constants",
            "codetransformer.transformers.exc_patterns",
            "codetransformer.transformers.literals",
            "codetransformer.transformers.tests",
            "codetransformer.transformers.tests.test_constants",
            "codetransformer.transformers.tests.test_exc_patterns",
            "codetransformer.transformers.tests.test_literals",
            "codetransformer.utils",
            "codetransformer.utils.functional",
            "codetransformer.utils.immutable",
            "codetransformer.utils.instance",
            "codetransformer.utils.no_default",
            "codetransformer.utils.pretty",
            "codetransformer.utils.tests",
            "codetransformer.utils.tests.test_pretty"
        ],
        "version": "0.6.0"
    },
    "codetree": {
        "cmdline": [],
        "modules": [
            "codetree",
            "codetree.main"
        ],
        "version": "2009.12.24.py3k.cpp"
    },
    "codetype": {
        "cmdline": [],
        "modules": [
            "codetype",
            "codetype.re_globals"
        ],
        "version": "1.0.1"
    },
    "codev": {
        "cmdline": [],
        "modules": [
            "codev",
            "codev.control",
            "codev.control.cli",
            "codev.control.isolation",
            "codev.control.log",
            "codev.core",
            "codev.core.cli",
            "codev.core.debug",
            "codev.core.infrastructure",
            "codev.core.isolator",
            "codev.core.log",
            "codev.core.machines",
            "codev.core.performer",
            "codev.core.provider",
            "codev.core.providers",
            "codev.core.providers.isolators",
            "codev.core.providers.isolators.directory",
            "codev.core.providers.isolators.lxc",
            "codev.core.providers.isolators.lxd",
            "codev.core.providers.isolators.none",
            "codev.core.providers.isolators.virtualenv",
            "codev.core.providers.machines",
            "codev.core.providers.machines.lxc",
            "codev.core.providers.machines.lxd",
            "codev.core.providers.machines.real",
            "codev.core.providers.machines.virtualbox",
            "codev.core.providers.performers",
            "codev.core.providers.performers.local",
            "codev.core.providers.performers.ssh",
            "codev.core.providers.sources",
            "codev.core.providers.sources.actual",
            "codev.core.providers.sources.git",
            "codev.core.providers.sources.live",
            "codev.core.scripts",
            "codev.core.settings",
            "codev.core.source",
            "codev.core.utils",
            "codev.perform",
            "codev.perform.cli",
            "codev.perform.log",
            "codev.perform.providers",
            "codev.perform.providers.provisioners",
            "codev.perform.providers.provisioners.ansible",
            "codev.perform.providers.provisioners.ansible.source",
            "codev.perform.providers.provisioners.ansible.sources",
            "codev.perform.providers.provisioners.ansible.sources.git",
            "codev.perform.providers.provisioners.fabric",
            "codev.perform.providers.tasks",
            "codev.perform.providers.tasks.ansible",
            "codev.perform.providers.tasks.ansible.source",
            "codev.perform.providers.tasks.ansible.sources",
            "codev.perform.providers.tasks.ansible.sources.git",
            "codev.perform.providers.tasks.fabric",
            "codev.perform.provisioner",
            "codev.perform.provisioning",
            "codev.perform.runner",
            "codev.perform.task"
        ],
        "version": "0.7.4a3"
    },
    "codev-dashboard": {
        "cmdline": [],
        "modules": [
            "codev_dashboard"
        ],
        "version": "0.1.2a1"
    },
    "codevalidator": {
        "cmdline": [],
        "modules": [
            "codevalidator",
            "pythontidy",
            "pythontidy.PythonTidy"
        ],
        "version": "0.8.2"
    },
    "codeviking.collections": {
        "cmdline": [],
        "modules": [
            "codeviking",
            "codeviking.collections",
            "codeviking.collections.dict",
            "codeviking.collections.dict._FrozenDict",
            "codeviking.collections.dict._dictchain",
            "codeviking.collections.dict._dirdict",
            "codeviking.collections.dict._filedict",
            "codeviking.collections.dict._multidict"
        ],
        "version": "0.10"
    },
    "codeviking.contracts": {
        "cmdline": [],
        "modules": [
            "codeviking.contracts",
            "codeviking.contracts._version",
            "codeviking.contracts.argcheckers",
            "codeviking.contracts.conditions",
            "codeviking.contracts.contracts",
            "codeviking.contracts.decorator",
            "codeviking.contracts.error",
            "codeviking.contracts.switch",
            "codeviking.contracts.types"
        ],
        "version": "0.17.0"
    },
    "codeviking.math": {
        "cmdline": [],
        "modules": [
            "codeviking.math",
            "codeviking.math._version",
            "codeviking.math.comparisons",
            "codeviking.math.ease",
            "codeviking.math.functions",
            "codeviking.math.geom2d",
            "codeviking.math.interval",
            "codeviking.math.linalg",
            "codeviking.math.primitives"
        ],
        "version": "0.18.1"
    },
    "codeviking.random": {
        "cmdline": [],
        "modules": [
            "codeviking.random",
            "codeviking.random._version",
            "codeviking.random.lcg",
            "codeviking.random.primitive",
            "codeviking.random.rng"
        ],
        "version": "0.13.6"
    },
    "codeville": {
        "cmdline": [],
        "modules": [
            "codeville"
        ],
        "version": "0.4.0"
    },
    "codewords": {
        "cmdline": [],
        "modules": [
            "codewords",
            "codewords.gen",
            "codewords.version",
            "codewords.words",
            "tests",
            "tests.simple"
        ],
        "version": "0.0.3"
    },
    "codewrap": {
        "cmdline": [],
        "modules": [
            "codewrap"
        ],
        "version": "1.0"
    },
    "codex": {
        "cmdline": [],
        "modules": [
            "codex"
        ],
        "version": "0.2.4"
    },
    "codic": {
        "cmdline": [
            "codic"
        ],
        "modules": [
            "codic",
            "codic.api",
            "codic.cli",
            "codic.config",
            "codic.executor",
            "codic.formatter"
        ],
        "version": "0.1.2"
    },
    "codicefiscale": {
        "cmdline": [],
        "modules": [
            "codicefiscale"
        ],
        "version": "0.9"
    },
    "codigo-avulso-test-tutorial": {
        "cmdline": [],
        "modules": [
            "codigo_avulso_test_tutorial",
            "codigo_avulso_test_tutorial.circulo",
            "codigo_avulso_test_tutorial.figura_geometrica",
            "codigo_avulso_test_tutorial.quadrado",
            "test",
            "test.circulo_test",
            "test.figura_geometrica_test",
            "test.quadrado_test"
        ],
        "version": "0.1.1"
    },
    "coding": {
        "cmdline": [],
        "modules": [
            "coding"
        ],
        "version": "0.3"
    },
    "codinghyde.ant": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "codinghyde.enigma": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "codinghyde.synapse": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "codmacs": {
        "cmdline": [],
        "modules": [
            "CMCore",
            "CMFunc",
            "CodMACs"
        ],
        "version": "0.02"
    },
    "codon": {
        "cmdline": [],
        "modules": [
            "codon",
            "codon.cli",
            "codon.clock",
            "codon.jsd",
            "codon.masterslave",
            "codon.ml",
            "codon.mong",
            "codon.monglog",
            "codon.nest",
            "codon.omega",
            "codon.scipy_optimize",
            "codon.selection",
            "codon.timedec",
            "codon.toposort",
            "codon.util"
        ],
        "version": "0.0.1"
    },
    "codon-tools": {
        "cmdline": [],
        "modules": [
            "codon_tools",
            "codon_tools.codon_analyzer",
            "codon_tools.codon_optimizer",
            "codon_tools.codon_shuffler",
            "codon_tools.lookup_tables",
            "codon_tools.scorer",
            "codon_tools.sequence_analyzer"
        ],
        "version": "0.2"
    },
    "codplayer": {
        "cmdline": [
            "codadmin",
            "codctl",
            "codlcd",
            "codlircd",
            "codplayerd",
            "codrestd"
        ],
        "modules": [
            "codplayer",
            "codplayer.audio",
            "codplayer.codaemon",
            "codplayer.command",
            "codplayer.config",
            "codplayer.db",
            "codplayer.lcd",
            "codplayer.lirc",
            "codplayer.model",
            "codplayer.player",
            "codplayer.py_alsa_sink",
            "codplayer.remotecontrol",
            "codplayer.rest",
            "codplayer.rip",
            "codplayer.serialize",
            "codplayer.sink",
            "codplayer.source",
            "codplayer.state",
            "codplayer.test",
            "codplayer.test.test_audio",
            "codplayer.test.test_command",
            "codplayer.test.test_db",
            "codplayer.test.test_lcd",
            "codplayer.test.test_model",
            "codplayer.test.test_player",
            "codplayer.test.test_serialize",
            "codplayer.test.test_toc",
            "codplayer.toc",
            "codplayer.zerohub"
        ],
        "version": "2.0"
    },
    "codrspace-cli": {
        "cmdline": [],
        "modules": [
            "create",
            "export"
        ],
        "version": "0.3"
    },
    "cody": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "coeasm": {
        "cmdline": [],
        "modules": [
            "coeasm",
            "coeasm.asm_parser",
            "coeasm.main",
            "coeasm.opcode_parser",
            "coeasm.test",
            "coeasm.test.test_example",
            "coeasm.util"
        ],
        "version": "1.1.1"
    },
    "coegen": {
        "cmdline": [],
        "modules": [
            "coegen",
            "coegen.main",
            "coegen.test",
            "coegen.test.test_example"
        ],
        "version": "1.1.0"
    },
    "coercion": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "coeus": {
        "cmdline": [
            "coeus.py"
        ],
        "modules": [
            "coeus"
        ],
        "version": "0.2"
    },
    "coexecutor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "coffee": {
        "cmdline": [],
        "modules": [
            "coffee"
        ],
        "version": "0.1.0"
    },
    "coffee-compressor-compiler": {
        "cmdline": [],
        "modules": [
            "coffeecompressorcompiler",
            "coffeecompressorcompiler.filter",
            "tests",
            "tests.compiler_test",
            "tests.filter_test"
        ],
        "version": "0.2.0"
    },
    "coffeebuzz": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "coffeelintbear": {
        "cmdline": [],
        "modules": [
            "coalaCoffeeLintBear",
            "coalaCoffeeLintBear.CoffeeLintBear"
        ],
        "version": "0.10.0"
    },
    "coffeepot": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "coffeescript": {
        "cmdline": [],
        "modules": [
            "coffeescript"
        ],
        "version": "1.1.2"
    },
    "coffeetools": {
        "cmdline": [],
        "modules": [
            "coffeetools",
            "coffeetools.ipython",
            "coffeetools.jinja"
        ],
        "version": "0.1.2"
    },
    "coffeewhale": {
        "cmdline": [],
        "modules": [
            "coffeewhale",
            "coffeewhale.coffeewhale"
        ],
        "version": "0.0.10"
    },
    "coffer": {
        "cmdline": [],
        "modules": [
            "coffer",
            "coffer.cli",
            "coffer.client",
            "coffer.server",
            "coffer.webapp",
            "coffer.zeroconf_utils"
        ],
        "version": "0.3"
    },
    "coffer-container": {
        "cmdline": [],
        "modules": [
            "coffer",
            "coffer.clone",
            "coffer.coffer",
            "coffer.create",
            "coffer.enter",
            "coffer.ls",
            "coffer.package",
            "coffer.remove",
            "coffer.rename",
            "coffer.unpackage",
            "coffer.utils",
            "coffer.utils.ccopy",
            "coffer.utils.commands",
            "coffer.utils.content",
            "coffer.utils.getArg",
            "coffer.utils.getFlag",
            "coffer.utils.getRootDir",
            "coffer.utils.isRoot",
            "coffer.utils.setupEnv",
            "coffer.utils.templateUtils",
            "coffer.utils.text",
            "coffer.version"
        ],
        "version": "1.3.2"
    },
    "coffin": {
        "cmdline": [],
        "modules": [
            "coffin",
            "coffin.common",
            "coffin.interop",
            "coffin.static",
            "coffin.staticfiles",
            "tests",
            "tests.test_defaultags"
        ],
        "version": "2.0.1"
    },
    "coffin-absolute": {
        "cmdline": [],
        "modules": [
            "coffin_absolute"
        ],
        "version": "0.1.0"
    },
    "coffin-garetjax": {
        "cmdline": [],
        "modules": [
            "coffin",
            "coffin.common",
            "coffin.contrib",
            "coffin.contrib.auth",
            "coffin.contrib.auth.admin",
            "coffin.contrib.auth.backends",
            "coffin.contrib.auth.decorators",
            "coffin.contrib.auth.forms",
            "coffin.contrib.auth.handlers",
            "coffin.contrib.auth.middleware",
            "coffin.contrib.auth.models",
            "coffin.contrib.auth.tokens",
            "coffin.contrib.auth.urls",
            "coffin.contrib.auth.views",
            "coffin.contrib.flatpages",
            "coffin.contrib.flatpages.middleware",
            "coffin.contrib.flatpages.views",
            "coffin.contrib.loader",
            "coffin.contrib.syndication",
            "coffin.contrib.syndication.feeds",
            "coffin.contrib.syndication.views",
            "coffin.interop",
            "coffin.management",
            "coffin.management.commands",
            "coffin.management.commands.makemessages",
            "coffin.shortcuts",
            "coffin.template",
            "coffin.template.defaultfilters",
            "coffin.template.defaulttags",
            "coffin.template.library",
            "coffin.template.loader",
            "coffin.template.loaders",
            "coffin.template.response",
            "coffin.views",
            "coffin.views.decorators",
            "coffin.views.defaults",
            "coffin.views.generic",
            "coffin.views.generic.base",
            "coffin.views.generic.create_update",
            "coffin.views.generic.date_based",
            "coffin.views.generic.dates",
            "coffin.views.generic.detail",
            "coffin.views.generic.edit",
            "coffin.views.generic.list",
            "coffin.views.generic.list_detail",
            "coffin.views.generic.simple",
            "tests",
            "tests.test_contrib",
            "tests.test_defaultags",
            "tests.test_defaultfilters",
            "tests.test_env",
            "tests.test_library",
            "tests.test_shortcuts",
            "tests.test_template",
            "tests.test_views"
        ],
        "version": "0.3.8.dev"
    },
    "cofman": {
        "cmdline": [],
        "modules": [
            "cofman",
            "cofman.bin",
            "cofman.documentation",
            "cofman.lib",
            "cofman.mechanics",
            "cofman.project",
            "cofman.release",
            "cofman.release.pypi",
            "cofman.release.xdistutils",
            "cofman.test",
            "cofman.test.test_lib",
            "cofman.test.test_mechanics"
        ],
        "version": "0.1.0"
    },
    "coform": {
        "cmdline": [],
        "modules": [
            "coform"
        ],
        "version": "0.0.2"
    },
    "cofre": {
        "cmdline": [
            "cofre"
        ],
        "modules": [
            "cofre",
            "cofre.core",
            "cofre.errors",
            "cofre.simplesecure",
            "cofre.store"
        ],
        "version": "0.2.5"
    },
    "cog": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cogapp": {
        "cmdline": [
            "cog.py"
        ],
        "modules": [
            "cogapp",
            "cogapp.backward",
            "cogapp.cogapp",
            "cogapp.makefiles",
            "cogapp.test_cogapp",
            "cogapp.test_makefiles",
            "cogapp.test_whiteutils",
            "cogapp.whiteutils"
        ],
        "version": "2.5.1"
    },
    "cogbin": {
        "cmdline": [],
        "modules": [
            "cogbin",
            "cogbin.config",
            "cogbin.config.app_cfg",
            "cogbin.config.environment",
            "cogbin.config.middleware",
            "cogbin.controllers",
            "cogbin.controllers.error",
            "cogbin.controllers.pypiload",
            "cogbin.controllers.pypisync",
            "cogbin.controllers.root",
            "cogbin.controllers.secure",
            "cogbin.controllers.template",
            "cogbin.lib",
            "cogbin.lib.app_globals",
            "cogbin.lib.base",
            "cogbin.lib.helpers",
            "cogbin.model",
            "cogbin.model.auth",
            "cogbin.model.pypi",
            "cogbin.templates",
            "cogbin.tests",
            "cogbin.tests.functional",
            "cogbin.tests.functional.test_root",
            "cogbin.tests.test_models",
            "cogbin.websetup"
        ],
        "version": "0.2.11dev"
    },
    "cogen": {
        "cmdline": [],
        "modules": [
            "cogen",
            "cogen.common",
            "cogen.core",
            "cogen.core.coroutines",
            "cogen.core.events",
            "cogen.core.pipe",
            "cogen.core.proactors",
            "cogen.core.proactors.base",
            "cogen.core.proactors.epoll_impl",
            "cogen.core.proactors.iocp_impl",
            "cogen.core.proactors.kqueue_impl",
            "cogen.core.proactors.poll_impl",
            "cogen.core.proactors.select_impl",
            "cogen.core.proactors.stdlib_epoll_impl",
            "cogen.core.proactors.stdlib_kqueue_impl",
            "cogen.core.pubsub",
            "cogen.core.queue",
            "cogen.core.schedulers",
            "cogen.core.sockets",
            "cogen.core.util",
            "cogen.web",
            "cogen.web.async",
            "cogen.web.wsgi"
        ],
        "version": "0.2.1"
    },
    "cogent": {
        "cmdline": [],
        "modules": [
            "cogent",
            "cogent.align",
            "cogent.align.algorithm",
            "cogent.align.align",
            "cogent.align.dp_calculation",
            "cogent.align.indel_model",
            "cogent.align.indel_positions",
            "cogent.align.pairwise",
            "cogent.align.progressive",
            "cogent.align.pycompare",
            "cogent.align.traceback",
            "cogent.align.weights",
            "cogent.align.weights.methods",
            "cogent.align.weights.util",
            "cogent.app",
            "cogent.app.blast",
            "cogent.app.blat",
            "cogent.app.bwa",
            "cogent.app.carnac",
            "cogent.app.cd_hit",
            "cogent.app.cdbfasta",
            "cogent.app.clearcut",
            "cogent.app.clustalw",
            "cogent.app.cmfinder",
            "cogent.app.comrna",
            "cogent.app.consan",
            "cogent.app.contrafold",
            "cogent.app.cove",
            "cogent.app.dialign",
            "cogent.app.dotur",
            "cogent.app.dynalign",
            "cogent.app.fastq_join",
            "cogent.app.fasttree",
            "cogent.app.fasttree_v1",
            "cogent.app.flash",
            "cogent.app.foldalign",
            "cogent.app.formatdb",
            "cogent.app.gctmpca",
            "cogent.app.guppy",
            "cogent.app.ilm",
            "cogent.app.infernal",
            "cogent.app.knetfold",
            "cogent.app.mafft",
            "cogent.app.mfold",
            "cogent.app.mothur",
            "cogent.app.msms",
            "cogent.app.muscle",
            "cogent.app.muscle_v38",
            "cogent.app.nupack",
            "cogent.app.pandaseq",
            "cogent.app.parameters",
            "cogent.app.parsinsert",
            "cogent.app.pfold",
            "cogent.app.pknotsrg",
            "cogent.app.pplacer",
            "cogent.app.raxml",
            "cogent.app.raxml_v730",
            "cogent.app.rdp_classifier",
            "cogent.app.rdp_classifier20",
            "cogent.app.rnaalifold",
            "cogent.app.rnaforester",
            "cogent.app.rnashapes",
            "cogent.app.rnaview",
            "cogent.app.rtax",
            "cogent.app.seqprep",
            "cogent.app.sfffile",
            "cogent.app.sffinfo",
            "cogent.app.sfold",
            "cogent.app.stride",
            "cogent.app.uclust",
            "cogent.app.unafold",
            "cogent.app.usearch",
            "cogent.app.util",
            "cogent.app.vienna_package",
            "cogent.cluster",
            "cogent.cluster.UPGMA",
            "cogent.cluster.approximate_mds",
            "cogent.cluster.goodness_of_fit",
            "cogent.cluster.metric_scaling",
            "cogent.cluster.nmds",
            "cogent.cluster.procrustes",
            "cogent.core",
            "cogent.core.alignment",
            "cogent.core.alphabet",
            "cogent.core.annotation",
            "cogent.core.bitvector",
            "cogent.core.entity",
            "cogent.core.genetic_code",
            "cogent.core.info",
            "cogent.core.location",
            "cogent.core.moltype",
            "cogent.core.profile",
            "cogent.core.sequence",
            "cogent.core.tree",
            "cogent.core.usage",
            "cogent.data",
            "cogent.data.energy_params",
            "cogent.data.ligand_properties",
            "cogent.data.molecular_weight",
            "cogent.data.nucleic_properties",
            "cogent.data.protein_properties",
            "cogent.db",
            "cogent.db.ensembl",
            "cogent.db.ensembl.assembly",
            "cogent.db.ensembl.compara",
            "cogent.db.ensembl.database",
            "cogent.db.ensembl.feature_level",
            "cogent.db.ensembl.genome",
            "cogent.db.ensembl.host",
            "cogent.db.ensembl.name",
            "cogent.db.ensembl.region",
            "cogent.db.ensembl.related_region",
            "cogent.db.ensembl.sequence",
            "cogent.db.ensembl.species",
            "cogent.db.ensembl.util",
            "cogent.db.ncbi",
            "cogent.db.pdb",
            "cogent.db.rfam",
            "cogent.db.util",
            "cogent.draw",
            "cogent.draw.arrow_rates",
            "cogent.draw.codon_usage",
            "cogent.draw.compatibility",
            "cogent.draw.dendrogram",
            "cogent.draw.dinuc",
            "cogent.draw.distribution_plots",
            "cogent.draw.dotplot",
            "cogent.draw.fancy_arrow",
            "cogent.draw.legend",
            "cogent.draw.linear",
            "cogent.draw.multivariate_plot",
            "cogent.draw.rlg2mpl",
            "cogent.draw.util",
            "cogent.evolve",
            "cogent.evolve.best_likelihood",
            "cogent.evolve.bootstrap",
            "cogent.evolve.coevolution",
            "cogent.evolve.discrete_markov",
            "cogent.evolve.likelihood_calculation",
            "cogent.evolve.likelihood_function",
            "cogent.evolve.likelihood_tree",
            "cogent.evolve.models",
            "cogent.evolve.motif_prob_model",
            "cogent.evolve.pairwise_distance",
            "cogent.evolve.parameter_controller",
            "cogent.evolve.predicate",
            "cogent.evolve.simulate",
            "cogent.evolve.solved_models",
            "cogent.evolve.substitution_calculation",
            "cogent.evolve.substitution_model",
            "cogent.format",
            "cogent.format.alignment",
            "cogent.format.bedgraph",
            "cogent.format.clustal",
            "cogent.format.fasta",
            "cogent.format.mage",
            "cogent.format.motif",
            "cogent.format.nexus",
            "cogent.format.pdb",
            "cogent.format.pdb_color",
            "cogent.format.phylip",
            "cogent.format.rna_struct",
            "cogent.format.stockholm",
            "cogent.format.structure",
            "cogent.format.table",
            "cogent.format.text_tree",
            "cogent.format.xyzrn",
            "cogent.maths",
            "cogent.maths.distance_transform",
            "cogent.maths.fit_function",
            "cogent.maths.function_optimisation",
            "cogent.maths.geometry",
            "cogent.maths.markov",
            "cogent.maths.matrix",
            "cogent.maths.matrix.distance",
            "cogent.maths.matrix_exponential_integration",
            "cogent.maths.matrix_exponentiation",
            "cogent.maths.matrix_logarithm",
            "cogent.maths.optimisers",
            "cogent.maths.period",
            "cogent.maths.scipy_optimisers",
            "cogent.maths.scipy_optimize",
            "cogent.maths.simannealingoptimiser",
            "cogent.maths.solve",
            "cogent.maths.spatial",
            "cogent.maths.stats",
            "cogent.maths.stats.alpha_diversity",
            "cogent.maths.stats.cai",
            "cogent.maths.stats.cai.adaptor",
            "cogent.maths.stats.cai.get_by_cai",
            "cogent.maths.stats.cai.util",
            "cogent.maths.stats.distribution",
            "cogent.maths.stats.histogram",
            "cogent.maths.stats.information_criteria",
            "cogent.maths.stats.jackknife",
            "cogent.maths.stats.kendall",
            "cogent.maths.stats.ks",
            "cogent.maths.stats.period",
            "cogent.maths.stats.rarefaction",
            "cogent.maths.stats.special",
            "cogent.maths.stats.test",
            "cogent.maths.stats.util",
            "cogent.maths.svd",
            "cogent.maths.unifrac",
            "cogent.maths.unifrac.fast_tree",
            "cogent.maths.unifrac.fast_unifrac",
            "cogent.motif",
            "cogent.motif.k_word",
            "cogent.motif.util",
            "cogent.parse",
            "cogent.parse.aaindex",
            "cogent.parse.agilent_microarray",
            "cogent.parse.binary_sff",
            "cogent.parse.blast",
            "cogent.parse.blast_xml",
            "cogent.parse.bowtie",
            "cogent.parse.bpseq",
            "cogent.parse.carnac",
            "cogent.parse.cigar",
            "cogent.parse.clustal",
            "cogent.parse.cmfinder",
            "cogent.parse.column",
            "cogent.parse.comrna",
            "cogent.parse.consan",
            "cogent.parse.contrafold",
            "cogent.parse.cove",
            "cogent.parse.ct",
            "cogent.parse.cut",
            "cogent.parse.cutg",
            "cogent.parse.dialign",
            "cogent.parse.dotur",
            "cogent.parse.dynalign",
            "cogent.parse.ebi",
            "cogent.parse.fasta",
            "cogent.parse.fastq",
            "cogent.parse.flowgram",
            "cogent.parse.flowgram_collection",
            "cogent.parse.flowgram_parser",
            "cogent.parse.foldalign",
            "cogent.parse.gbseq",
            "cogent.parse.gcg",
            "cogent.parse.genbank",
            "cogent.parse.gff",
            "cogent.parse.gibbs",
            "cogent.parse.greengenes",
            "cogent.parse.hmmscan",
            "cogent.parse.illumina_sequence",
            "cogent.parse.ilm",
            "cogent.parse.infernal",
            "cogent.parse.kegg_fasta",
            "cogent.parse.kegg_ko",
            "cogent.parse.kegg_pos",
            "cogent.parse.kegg_taxonomy",
            "cogent.parse.knetfold",
            "cogent.parse.locuslink",
            "cogent.parse.macsim",
            "cogent.parse.mage",
            "cogent.parse.meme",
            "cogent.parse.mfold",
            "cogent.parse.mothur",
            "cogent.parse.msms",
            "cogent.parse.ncbi_taxonomy",
            "cogent.parse.newick",
            "cogent.parse.nexus",
            "cogent.parse.nupack",
            "cogent.parse.paml",
            "cogent.parse.paml_matrix",
            "cogent.parse.pdb",
            "cogent.parse.pfold",
            "cogent.parse.phylip",
            "cogent.parse.pknotsrg",
            "cogent.parse.psl",
            "cogent.parse.rdb",
            "cogent.parse.record",
            "cogent.parse.record_finder",
            "cogent.parse.rfam",
            "cogent.parse.rna_fold",
            "cogent.parse.rna_plot",
            "cogent.parse.rnaalifold",
            "cogent.parse.rnaforester",
            "cogent.parse.rnashapes",
            "cogent.parse.rnaview",
            "cogent.parse.sequence",
            "cogent.parse.sfold",
            "cogent.parse.sprinzl",
            "cogent.parse.stockholm",
            "cogent.parse.stride",
            "cogent.parse.structure",
            "cogent.parse.table",
            "cogent.parse.tinyseq",
            "cogent.parse.tree",
            "cogent.parse.tree_xml",
            "cogent.parse.unafold",
            "cogent.parse.unigene",
            "cogent.phylo",
            "cogent.phylo.consensus",
            "cogent.phylo.distance",
            "cogent.phylo.least_squares",
            "cogent.phylo.maximum_likelihood",
            "cogent.phylo.nj",
            "cogent.phylo.tree_collection",
            "cogent.phylo.tree_space",
            "cogent.phylo.util",
            "cogent.recalculation",
            "cogent.recalculation.calculation",
            "cogent.recalculation.definition",
            "cogent.recalculation.scope",
            "cogent.recalculation.setting",
            "cogent.seqsim",
            "cogent.seqsim.analysis",
            "cogent.seqsim.birth_death",
            "cogent.seqsim.markov",
            "cogent.seqsim.microarray",
            "cogent.seqsim.microarray_normalize",
            "cogent.seqsim.randomization",
            "cogent.seqsim.searchpath",
            "cogent.seqsim.sequence_generators",
            "cogent.seqsim.tree",
            "cogent.seqsim.usage",
            "cogent.struct",
            "cogent.struct.annotation",
            "cogent.struct.asa",
            "cogent.struct.contact",
            "cogent.struct.dihedral",
            "cogent.struct.knots",
            "cogent.struct.manipulation",
            "cogent.struct.pairs_util",
            "cogent.struct.rna2d",
            "cogent.struct.selection",
            "cogent.util",
            "cogent.util.array",
            "cogent.util.checkpointing",
            "cogent.util.datatypes",
            "cogent.util.dict2d",
            "cogent.util.dict_array",
            "cogent.util.misc",
            "cogent.util.modules",
            "cogent.util.option_parsing",
            "cogent.util.organizer",
            "cogent.util.parallel",
            "cogent.util.progress_display",
            "cogent.util.recode_alignment",
            "cogent.util.table",
            "cogent.util.terminal",
            "cogent.util.transform",
            "cogent.util.trie",
            "cogent.util.unit_test",
            "cogent.util.update_version",
            "cogent.util.warning"
        ],
        "version": "1.9"
    },
    "cogito": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "cogl-helpers": {
        "cmdline": [],
        "modules": [
            "cogl_helpers"
        ],
        "version": "0.1"
    },
    "cognate": {
        "cmdline": [],
        "modules": [
            "cognate",
            "cognate.component_core"
        ],
        "version": "0.0.4"
    },
    "cogniac": {
        "cmdline": [
            "icogniac"
        ],
        "modules": [
            "cogniac",
            "cogniac.app",
            "cogniac.cogniac",
            "cogniac.common",
            "cogniac.exceptions",
            "cogniac.ipython",
            "cogniac.media",
            "cogniac.subject",
            "cogniac.tenant"
        ],
        "version": "1.5.8"
    },
    "cognious": {
        "cmdline": [],
        "modules": [
            "cognious",
            "cognious.app",
            "cognious.utils"
        ],
        "version": "1.1"
    },
    "cognitive": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cognitive-face": {
        "cmdline": [],
        "modules": [
            "cognitive_face",
            "cognitive_face.face",
            "cognitive_face.face_list",
            "cognitive_face.person",
            "cognitive_face.person_group",
            "cognitive_face.tests",
            "cognitive_face.tests.config",
            "cognitive_face.tests.config.sample",
            "cognitive_face.tests.test_face",
            "cognitive_face.tests.test_face_list",
            "cognitive_face.tests.test_person",
            "cognitive_face.tests.test_person_group",
            "cognitive_face.tests.util",
            "cognitive_face.util"
        ],
        "version": "1.3.1"
    },
    "cognitive-face-latest": {
        "cmdline": [],
        "modules": [
            "cognitive_face",
            "cognitive_face.face",
            "cognitive_face.face_list",
            "cognitive_face.person",
            "cognitive_face.person_group",
            "cognitive_face.tests",
            "cognitive_face.tests.config.sample",
            "cognitive_face.tests.test_face",
            "cognitive_face.tests.test_face_list",
            "cognitive_face.tests.test_person",
            "cognitive_face.tests.test_person_group",
            "cognitive_face.tests.util",
            "cognitive_face.util"
        ],
        "version": "1.2.1"
    },
    "cognitiveatlas": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cognitiveservices": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cognosco": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "cogplanet": {
        "cmdline": [],
        "modules": [
            "cogplanet",
            "cogplanet.admin",
            "cogplanet.admin.controller",
            "cogplanet.config",
            "cogplanet.controllers",
            "cogplanet.easy_config",
            "cogplanet.json",
            "cogplanet.model",
            "cogplanet.release",
            "cogplanet.templates",
            "cogplanet.templates.admin",
            "cogplanet.tests",
            "cogplanet.tests.test_controllers",
            "cogplanet.tests.test_model",
            "cogplanet.util"
        ],
        "version": "0.8"
    },
    "cogpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cogs": {
        "cmdline": [],
        "modules": [
            "cogs",
            "cogs.core",
            "cogs.fs",
            "cogs.log",
            "cogs.run",
            "cogs.std"
        ],
        "version": "0.4.1"
    },
    "cogwheel": {
        "cmdline": [],
        "modules": [
            "cogwheel",
            "cogwheel.compiler"
        ],
        "version": "0.2.1"
    },
    "cohash": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.4"
    },
    "cohen": {
        "cmdline": [
            "cohen"
        ],
        "modules": [
            "coherence",
            "coherence.backend",
            "coherence.backends",
            "coherence.backends.ampache_storage",
            "coherence.backends.appletrailers_storage",
            "coherence.backends.audiocd_storage",
            "coherence.backends.axiscam_storage",
            "coherence.backends.banshee_storage",
            "coherence.backends.bbc_storage",
            "coherence.backends.buzztard_control",
            "coherence.backends.dvbd_storage",
            "coherence.backends.elisa_renderer",
            "coherence.backends.elisa_storage",
            "coherence.backends.feed_storage",
            "coherence.backends.flickr_storage",
            "coherence.backends.fs_storage",
            "coherence.backends.gallery2_storage",
            "coherence.backends.gstreamer_renderer",
            "coherence.backends.iradio_storage",
            "coherence.backends.itv_storage",
            "coherence.backends.lastfm_storage",
            "coherence.backends.lolcats_storage",
            "coherence.backends.mediadb_storage",
            "coherence.backends.miroguide_storage",
            "coherence.backends.picasa_storage",
            "coherence.backends.playlist_storage",
            "coherence.backends.radiotime_storage",
            "coherence.backends.swr3_storage",
            "coherence.backends.ted_storage",
            "coherence.backends.test_storage",
            "coherence.backends.tracker_storage",
            "coherence.backends.twitch_storage",
            "coherence.backends.yamj_storage",
            "coherence.backends.youtube_storage",
            "coherence.base",
            "coherence.dbus_constants",
            "coherence.dbus_service",
            "coherence.dispatcher",
            "coherence.extern",
            "coherence.extern.covers_by_amazon",
            "coherence.extern.db_row",
            "coherence.extern.louie",
            "coherence.extern.simple_plugin",
            "coherence.extern.xdg",
            "coherence.extern.youtubedl",
            "coherence.extern.youtubedl.youtubedl",
            "coherence.json_service",
            "coherence.log",
            "coherence.transcoder",
            "coherence.tube_service",
            "coherence.upnp",
            "coherence.upnp.core",
            "coherence.upnp.core.DIDLLite",
            "coherence.upnp.core.action",
            "coherence.upnp.core.device",
            "coherence.upnp.core.dlna",
            "coherence.upnp.core.event",
            "coherence.upnp.core.msearch",
            "coherence.upnp.core.service",
            "coherence.upnp.core.soap_lite",
            "coherence.upnp.core.soap_proxy",
            "coherence.upnp.core.soap_service",
            "coherence.upnp.core.ssdp",
            "coherence.upnp.core.utils",
            "coherence.upnp.core.uuid",
            "coherence.upnp.core.variable",
            "coherence.upnp.core.xml_constants",
            "coherence.upnp.devices",
            "coherence.upnp.devices.basics",
            "coherence.upnp.devices.control_point",
            "coherence.upnp.devices.internet_gateway_device_client",
            "coherence.upnp.devices.media_renderer",
            "coherence.upnp.devices.media_renderer_client",
            "coherence.upnp.devices.media_server",
            "coherence.upnp.devices.media_server_client",
            "coherence.upnp.devices.wan_connection_device_client",
            "coherence.upnp.devices.wan_device_client",
            "coherence.upnp.services",
            "coherence.upnp.services.clients",
            "coherence.upnp.services.clients.av_transport_client",
            "coherence.upnp.services.clients.connection_manager_client",
            "coherence.upnp.services.clients.content_directory_client",
            "coherence.upnp.services.clients.dimming_client",
            "coherence.upnp.services.clients.rendering_control_client",
            "coherence.upnp.services.clients.switch_power_client",
            "coherence.upnp.services.clients.wan_common_interface_config_client",
            "coherence.upnp.services.clients.wan_ip_connection_client",
            "coherence.upnp.services.clients.wan_ppp_connection_client",
            "coherence.upnp.services.servers",
            "coherence.upnp.services.servers.av_transport_server",
            "coherence.upnp.services.servers.connection_manager_server",
            "coherence.upnp.services.servers.content_directory_server",
            "coherence.upnp.services.servers.dimming_server",
            "coherence.upnp.services.servers.media_receiver_registrar_server",
            "coherence.upnp.services.servers.rendering_control_server",
            "coherence.upnp.services.servers.scheduled_recording_server",
            "coherence.upnp.services.servers.switch_power_server",
            "coherence.web",
            "coherence.web.ui",
            "tests",
            "tests.backends",
            "tests.backends.test_ampache_storage",
            "tests.backends.test_fs_storage",
            "tests.rpc_client",
            "tests.test_base",
            "tests.test_dbus",
            "tests.test_dispatching",
            "tests.test_transcoder",
            "tests.upnp",
            "tests.upnp.core",
            "tests.upnp.core.test_ServiceServer",
            "tests.upnp.core.test_action",
            "tests.upnp.core.test_device",
            "tests.upnp.core.test_didl",
            "tests.upnp.core.test_msearch",
            "tests.upnp.core.test_service",
            "tests.upnp.core.test_soap_lite",
            "tests.upnp.core.test_ssdp",
            "tests.upnp.core.test_utils",
            "tests.upnp.core.test_uuid",
            "tests.upnp.test_content_directory_server"
        ],
        "version": "0.7.2"
    },
    "coherence": {
        "cmdline": [
            "applet-coherence",
            "coherence"
        ],
        "modules": [
            "coherence",
            "coherence.backend",
            "coherence.backends",
            "coherence.backends.ampache_storage",
            "coherence.backends.appletrailers_storage",
            "coherence.backends.axiscam_storage",
            "coherence.backends.banshee_storage",
            "coherence.backends.bbc_storage",
            "coherence.backends.buzztard_control",
            "coherence.backends.dvbd_storage",
            "coherence.backends.elisa_renderer",
            "coherence.backends.elisa_storage",
            "coherence.backends.feed_storage",
            "coherence.backends.flickr_storage",
            "coherence.backends.fs_storage",
            "coherence.backends.gallery2_storage",
            "coherence.backends.gstreamer_renderer",
            "coherence.backends.iradio_storage",
            "coherence.backends.itv_storage",
            "coherence.backends.lastfm_storage",
            "coherence.backends.light",
            "coherence.backends.lolcats_storage",
            "coherence.backends.mediadb_storage",
            "coherence.backends.miroguide_storage",
            "coherence.backends.picasa_storage",
            "coherence.backends.playlist_storage",
            "coherence.backends.swr3_storage",
            "coherence.backends.ted_storage",
            "coherence.backends.test_storage",
            "coherence.backends.tracker_storage",
            "coherence.backends.yamj_storage",
            "coherence.backends.youtube_storage",
            "coherence.base",
            "coherence.dbus_constants",
            "coherence.dbus_service",
            "coherence.dispatcher",
            "coherence.extern",
            "coherence.extern.config",
            "coherence.extern.covers_by_amazon",
            "coherence.extern.db_row",
            "coherence.extern.et",
            "coherence.extern.galleryremote",
            "coherence.extern.galleryremote.gallery",
            "coherence.extern.inotify",
            "coherence.extern.log",
            "coherence.extern.log.log",
            "coherence.extern.log.termcolor",
            "coherence.extern.log.test_log",
            "coherence.extern.logger",
            "coherence.extern.louie",
            "coherence.extern.simple_config",
            "coherence.extern.simple_plugin",
            "coherence.extern.telepathy",
            "coherence.extern.telepathy.client",
            "coherence.extern.telepathy.connect",
            "coherence.extern.telepathy.mirabeau_tube_consumer",
            "coherence.extern.telepathy.mirabeau_tube_publisher",
            "coherence.extern.telepathy.stream",
            "coherence.extern.telepathy.tube",
            "coherence.extern.telepathy.tubeconn",
            "coherence.extern.test_inotify",
            "coherence.extern.uuid",
            "coherence.extern.uuid.uuid",
            "coherence.extern.xdg",
            "coherence.extern.youtubedl",
            "coherence.extern.youtubedl.youtubedl",
            "coherence.json",
            "coherence.log",
            "coherence.mirabeau",
            "coherence.test",
            "coherence.test.test_base",
            "coherence.test.test_dbus",
            "coherence.test.test_dispatching",
            "coherence.test.test_transcoder",
            "coherence.transcoder",
            "coherence.tube_service",
            "coherence.ui",
            "coherence.ui.av_widgets",
            "coherence.upnp",
            "coherence.upnp.core",
            "coherence.upnp.core.DIDLLite",
            "coherence.upnp.core.action",
            "coherence.upnp.core.device",
            "coherence.upnp.core.dlna",
            "coherence.upnp.core.event",
            "coherence.upnp.core.msearch",
            "coherence.upnp.core.service",
            "coherence.upnp.core.soap_lite",
            "coherence.upnp.core.soap_proxy",
            "coherence.upnp.core.soap_service",
            "coherence.upnp.core.ssdp",
            "coherence.upnp.core.test",
            "coherence.upnp.core.test.test_didl",
            "coherence.upnp.core.test.test_utils",
            "coherence.upnp.core.utils",
            "coherence.upnp.core.uuid",
            "coherence.upnp.core.variable",
            "coherence.upnp.devices",
            "coherence.upnp.devices.basics",
            "coherence.upnp.devices.binary_light",
            "coherence.upnp.devices.binary_light_client",
            "coherence.upnp.devices.control_point",
            "coherence.upnp.devices.dimmable_light",
            "coherence.upnp.devices.dimmable_light_client",
            "coherence.upnp.devices.media_renderer",
            "coherence.upnp.devices.media_renderer_client",
            "coherence.upnp.devices.media_server",
            "coherence.upnp.devices.media_server_client",
            "coherence.upnp.services",
            "coherence.upnp.services.clients",
            "coherence.upnp.services.clients.av_transport_client",
            "coherence.upnp.services.clients.connection_manager_client",
            "coherence.upnp.services.clients.content_directory_client",
            "coherence.upnp.services.clients.dimming_client",
            "coherence.upnp.services.clients.rendering_control_client",
            "coherence.upnp.services.clients.switch_power_client",
            "coherence.upnp.services.clients.test",
            "coherence.upnp.services.clients.test.test_switch_power_client",
            "coherence.upnp.services.servers",
            "coherence.upnp.services.servers.av_transport_server",
            "coherence.upnp.services.servers.connection_manager_server",
            "coherence.upnp.services.servers.content_directory_server",
            "coherence.upnp.services.servers.dimming_server",
            "coherence.upnp.services.servers.media_receiver_registrar_server",
            "coherence.upnp.services.servers.rendering_control_server",
            "coherence.upnp.services.servers.scheduled_recording_server",
            "coherence.upnp.services.servers.switch_power_server",
            "coherence.upnp.services.servers.test",
            "coherence.upnp.services.servers.test.test_content_directory_server",
            "coherence.web",
            "coherence.web.ui",
            "misc.media_server_observer",
            "misc.upnp-tester"
        ],
        "version": "0.6.6"
    },
    "cohesion": {
        "cmdline": [],
        "modules": [
            "cohesion",
            "cohesion.filesystem",
            "cohesion.parser"
        ],
        "version": "0.6.1"
    },
    "cohorte": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cohorte-herald": {
        "cmdline": [],
        "modules": [
            "herald",
            "herald.beans",
            "herald.core",
            "herald.directory",
            "herald.exceptions",
            "herald.probe",
            "herald.probe.core",
            "herald.probe.shell",
            "herald.probe.store_log",
            "herald.probe.store_sqlite",
            "herald.remote",
            "herald.remote.discovery",
            "herald.remote.herald_jabsorbrpc",
            "herald.remote.herald_jsonrpc",
            "herald.remote.herald_xmlrpc",
            "herald.shell",
            "herald.transports",
            "herald.transports.http",
            "herald.transports.http.beans",
            "herald.transports.http.directory",
            "herald.transports.http.discovery_multicast",
            "herald.transports.http.servlet",
            "herald.transports.http.transport",
            "herald.transports.peer_contact",
            "herald.transports.xmpp",
            "herald.transports.xmpp.beans",
            "herald.transports.xmpp.bot",
            "herald.transports.xmpp.directory",
            "herald.transports.xmpp.monitor",
            "herald.transports.xmpp.transport",
            "herald.transports.xmpp.utils",
            "herald.utils"
        ],
        "version": "0.0.3"
    },
    "cohorts": {
        "cmdline": [],
        "modules": [
            "cohorts",
            "cohorts._version",
            "cohorts.cohort",
            "cohorts.collection",
            "cohorts.dataframe_loader",
            "cohorts.functions",
            "cohorts.model",
            "cohorts.patient",
            "cohorts.plot",
            "cohorts.provenance",
            "cohorts.random",
            "cohorts.rounding",
            "cohorts.sample",
            "cohorts.styling",
            "cohorts.survival",
            "cohorts.utils",
            "cohorts.varcode_utils",
            "cohorts.variant_filters",
            "cohorts.variant_stats"
        ],
        "version": "0.5.5"
    },
    "coid": {
        "cmdline": [],
        "modules": [
            "coid"
        ],
        "version": "0.1.1"
    },
    "coil": {
        "cmdline": [],
        "modules": [
            "coil",
            "coil.forms",
            "coil.init",
            "coil.tasks",
            "coil.utils",
            "coil.web"
        ],
        "version": "1.3.10"
    },
    "coilmq": {
        "cmdline": [],
        "modules": [
            "coilmq",
            "coilmq.auth",
            "coilmq.auth.simple",
            "coilmq.config",
            "coilmq.engine",
            "coilmq.exception",
            "coilmq.protocol",
            "coilmq.queue",
            "coilmq.scheduler",
            "coilmq.server",
            "coilmq.server.socket_server",
            "coilmq.start",
            "coilmq.store",
            "coilmq.store.dbm",
            "coilmq.store.memory",
            "coilmq.store.rds",
            "coilmq.store.sa",
            "coilmq.store.sa.meta",
            "coilmq.store.sa.model",
            "coilmq.topic",
            "coilmq.util",
            "coilmq.util.concurrency",
            "coilmq.util.frames"
        ],
        "version": "1.0.1"
    },
    "coils": {
        "cmdline": [],
        "modules": [
            "coils",
            "coils.Averager",
            "coils.Config",
            "coils.MapSock",
            "coils.RateTicker",
            "coils.Ring",
            "coils.SocketTalk",
            "coils.SortedList",
            "coils.String",
            "coils.Timer",
            "coils.UserInput"
        ],
        "version": "1.0.9"
    },
    "coima": {
        "cmdline": [],
        "modules": [
            "coima"
        ],
        "version": "0.0.2"
    },
    "coin": {
        "cmdline": [
            "coin"
        ],
        "modules": [
            "coinlib",
            "coinlib.debian",
            "coinlib.python",
            "coinlib.raw",
            "coinlib.util"
        ],
        "version": "0.23"
    },
    "coinage": {
        "cmdline": [],
        "modules": [
            "coinage",
            "coinage.address"
        ],
        "version": "0.1"
    },
    "coinbase": {
        "cmdline": [],
        "modules": [
            "coinbase",
            "coinbase.wallet",
            "coinbase.wallet.auth",
            "coinbase.wallet.client",
            "coinbase.wallet.compat",
            "coinbase.wallet.error",
            "coinbase.wallet.model",
            "coinbase.wallet.util"
        ],
        "version": "2.0.6"
    },
    "coinbase-python": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "coinbase4py": {
        "cmdline": [],
        "modules": [
            "lib",
            "lib.coinbasev1"
        ],
        "version": "0.3.2"
    },
    "coinbits": {
        "cmdline": [],
        "modules": [
            "coinbits",
            "coinbits.client",
            "coinbits.encoding",
            "coinbits.protocol",
            "coinbits.protocol.buffer",
            "coinbits.protocol.exceptions",
            "coinbits.protocol.fields",
            "coinbits.protocol.serializers",
            "coinbits.protocol.utils",
            "coinbits.tests",
            "coinbits.tests.test_encoding",
            "coinbits.txns",
            "coinbits.txns.exceptions",
            "coinbits.txns.keys",
            "coinbits.txns.scripts",
            "coinbits.txns.tests",
            "coinbits.txns.tests.test_keys",
            "coinbits.txns.wallet"
        ],
        "version": "0.3"
    },
    "coinbridge": {
        "cmdline": [],
        "modules": [
            "coinbridge",
            "coinbridge.db"
        ],
        "version": "0.1.4"
    },
    "coincheck": {
        "cmdline": [],
        "modules": [
            "coincheck",
            "coincheck.account",
            "coincheck.market",
            "coincheck.order",
            "coincheck.utils"
        ],
        "version": "0.1.10"
    },
    "coincurve": {
        "cmdline": [],
        "modules": [
            "coincurve",
            "coincurve._windows_libsecp256k1",
            "coincurve.context",
            "coincurve.ecdsa",
            "coincurve.flags",
            "coincurve.keys",
            "coincurve.utils",
            "tests",
            "tests.samples",
            "tests.test_ecdsa",
            "tests.test_keys",
            "tests.test_utils"
        ],
        "version": "4.5.1"
    },
    "coinfee": {
        "cmdline": [],
        "modules": [
            "coinfee"
        ],
        "version": "0.1.4"
    },
    "coinhash": {
        "cmdline": [],
        "modules": [
            "coinhash"
        ],
        "version": "1.1.5"
    },
    "coinkit": {
        "cmdline": [],
        "modules": [
            "coinkit",
            "coinkit.address",
            "coinkit.b58check",
            "coinkit.constants",
            "coinkit.errors",
            "coinkit.formatcheck",
            "coinkit.hash",
            "coinkit.keypair",
            "coinkit.merkle",
            "coinkit.passphrases",
            "coinkit.passphrases.english_words",
            "coinkit.passphrases.legacy",
            "coinkit.passphrases.passphrase",
            "coinkit.privatekey",
            "coinkit.publickey",
            "coinkit.services",
            "coinkit.services.bitcoind",
            "coinkit.services.blockchain_client",
            "coinkit.services.blockchain_info",
            "coinkit.services.chain_com",
            "coinkit.transactions",
            "coinkit.transactions.network",
            "coinkit.transactions.opcodes",
            "coinkit.transactions.outputs",
            "coinkit.transactions.scripts",
            "coinkit.transactions.serialize",
            "coinkit.transactions.utils",
            "coinkit.wallet"
        ],
        "version": "0.7.8"
    },
    "coinkite-api": {
        "cmdline": [],
        "modules": [
            "ckapi",
            "ckapi.exc",
            "ckapi.http_client",
            "ckapi.multisig",
            "ckapi.objs",
            "ckapi.paper",
            "ckapi.requestor",
            "ckapi.test_code",
            "ckapi.utils"
        ],
        "version": "1.0.1"
    },
    "coinmarketcap": {
        "cmdline": [],
        "modules": [
            "coinmarketcap",
            "coinmarketcap.core"
        ],
        "version": "2.0.1"
    },
    "coinmate-api": {
        "cmdline": [],
        "modules": [
            "coinmate_api"
        ],
        "version": "1.1.5"
    },
    "coinop": {
        "cmdline": [],
        "modules": [
            "coinop",
            "coinop.bit",
            "coinop.crypto",
            "coinop.crypto.passphrasebox",
            "coinop.ecdsa_pure",
            "coinop.keys",
            "coinop.multiwallet",
            "coinop.passphrasebox",
            "coinop.script",
            "coinop.test",
            "coinop.test.test_passphrase_box",
            "coinop.transaction",
            "coinop.util"
        ],
        "version": "0.3.1"
    },
    "coinor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "coinor.blimpy": {
        "cmdline": [],
        "modules": [
            "coinor",
            "coinor.blimpy",
            "coinor.blimpy.LinkedList",
            "coinor.blimpy.Queues",
            "coinor.blimpy.Stack"
        ],
        "version": "1.3.5"
    },
    "coinor.coopr": {
        "cmdline": [],
        "modules": [],
        "version": "2.4"
    },
    "coinor.cuppy": {
        "cmdline": [],
        "modules": [
            "coinor",
            "coinor.GomoryCutGenerator",
            "coinor.MIP1",
            "coinor.MIP10",
            "coinor.MIP11",
            "coinor.MIP12",
            "coinor.MIP13",
            "coinor.MIP2",
            "coinor.MIP3",
            "coinor.MIP4",
            "coinor.MIP5",
            "coinor.MIP6",
            "coinor.MIP7",
            "coinor.MIP8",
            "coinor.MIP9",
            "coinor.cuppy",
            "coinor.cuppy.cuttingPlanes",
            "coinor.cuppy.examples",
            "coinor.cuppy.examples.MIP1",
            "coinor.cuppy.examples.MIP10",
            "coinor.cuppy.examples.MIP2",
            "coinor.cuppy.examples.MIP3",
            "coinor.cuppy.examples.MIP4",
            "coinor.cuppy.examples.MIP5",
            "coinor.cuppy.examples.MIP6",
            "coinor.cuppy.examples.MIP7",
            "coinor.cuppy.examples.MIP8",
            "coinor.cuppy.examples.MIP9",
            "coinor.cuppy.genericSeparation",
            "coinor.cuppy.instances",
            "coinor.cuppy.instances.MIP1",
            "coinor.cuppy.instances.MIP2",
            "coinor.cuppy.instances.MIP3",
            "coinor.cuppy.instances.MIP4",
            "coinor.cuppy.instances.MIP5",
            "coinor.cuppy.instances.MIP6",
            "coinor.cuppy.instances.MIP7",
            "coinor.cuppy.instances.MIP8",
            "coinor.cuppy.milpInstance"
        ],
        "version": "0.7.2"
    },
    "coinor.dippy": {
        "cmdline": [],
        "modules": [
            "dippy",
            "dippy.dipapi",
            "dippy.dippy",
            "dippy.examples"
        ],
        "version": "1.92.3"
    },
    "coinor.gimpy": {
        "cmdline": [],
        "modules": [
            "coinor",
            "coinor.gimpy",
            "coinor.gimpy.examples",
            "coinor.gimpy.examples.BB",
            "coinor.gimpy.examples.SAT",
            "coinor.gimpy.examples.expression_tree",
            "coinor.gimpy.examples.forestry",
            "coinor.gimpy.examples.maxflow",
            "coinor.gimpy.examples.milp1",
            "coinor.gimpy.examples.milp2",
            "coinor.gimpy.examples.milp3",
            "coinor.gimpy.examples.mincostflow",
            "coinor.gimpy.examples.postordereval",
            "coinor.gimpy.examples.prerequisites",
            "coinor.gimpy.examples.search",
            "coinor.gimpy.examples.simplex_test",
            "coinor.gimpy.examples.simplex_visualization_test",
            "coinor.gimpy.global_constants",
            "coinor.gimpy.graph",
            "coinor.gimpy.tree"
        ],
        "version": "1.3.11"
    },
    "coinor.grumpy": {
        "cmdline": [],
        "modules": [
            "coinor",
            "coinor.grumpy",
            "coinor.grumpy.BB",
            "coinor.grumpy.BBTree",
            "coinor.grumpy.BranchAndBound",
            "coinor.grumpy.examples",
            "coinor.grumpy.examples.BBVis",
            "coinor.grumpy.examples.DecompVis",
            "coinor.grumpy.examples.Dippy",
            "coinor.grumpy.examples.DisplayPolyhedronAndSolveLP",
            "coinor.grumpy.examples.GMI-Example",
            "coinor.grumpy.examples.LP1",
            "coinor.grumpy.examples.LP10",
            "coinor.grumpy.examples.LP2",
            "coinor.grumpy.examples.LP3",
            "coinor.grumpy.examples.LP4",
            "coinor.grumpy.examples.LP5",
            "coinor.grumpy.examples.LP6",
            "coinor.grumpy.examples.LP7",
            "coinor.grumpy.examples.LP8",
            "coinor.grumpy.examples.LP9",
            "coinor.grumpy.examples.generators",
            "coinor.grumpy.examples.run",
            "coinor.grumpy.forecasting",
            "coinor.grumpy.polyhedron2D"
        ],
        "version": "0.85.0"
    },
    "coinor.pulp": {
        "cmdline": [],
        "modules": [
            "coinor",
            "coinor.pulp"
        ],
        "version": "1.0.4"
    },
    "coinrpc": {
        "cmdline": [],
        "modules": [
            "coinrpc",
            "coinrpc.bitcoind_server",
            "coinrpc.config",
            "coinrpc.config_local",
            "coinrpc.namecoind_cluster",
            "coinrpc.namecoind_server"
        ],
        "version": "0.1.0"
    },
    "coins": {
        "cmdline": [],
        "modules": [
            "coins",
            "coins.b58check",
            "coins.entropy",
            "coins.keypair",
            "coins.keyspace",
            "coins.passphrase",
            "coins.utils",
            "coins.words"
        ],
        "version": "0.2.2"
    },
    "coinsbill": {
        "cmdline": [],
        "modules": [
            "coinsbill",
            "coinsbill.base",
            "coinsbill.client",
            "coinsbill.helper",
            "coinsbill.resource"
        ],
        "version": "1.0.9"
    },
    "coinshot": {
        "cmdline": [
            "shoot"
        ],
        "modules": [
            "coinshot",
            "coinshot.coinshot"
        ],
        "version": "3.1.1"
    },
    "cointk": {
        "cmdline": [],
        "modules": [
            "cointk",
            "cointk.backtest",
            "cointk.data",
            "cointk.init",
            "cointk.order",
            "cointk.prescient_sim",
            "cointk.strategies",
            "cointk.strategies.core",
            "cointk.strategies.ema",
            "cointk.strategies.naive",
            "cointk.strategies.naive_reverse",
            "cointk.strategies.prescient",
            "cointk.strategies.prescient.core",
            "cointk.strategies.prescient.qty_independent",
            "cointk.strategies.prescient.qty_semidependent",
            "cointk.strategies.simple_random"
        ],
        "version": "0.0.11"
    },
    "cointrader": {
        "cmdline": [],
        "modules": [
            "cointrader",
            "cointrader.bot",
            "cointrader.chart",
            "cointrader.cli",
            "cointrader.config",
            "cointrader.exchange",
            "cointrader.exchanges",
            "cointrader.exchanges.poloniex",
            "cointrader.helpers",
            "cointrader.strategies",
            "cointrader.strategies.trend",
            "cointrader.strategy",
            "tests",
            "tests.strategies",
            "tests.strategies.test_followtrend",
            "tests.test_cointrader"
        ],
        "version": "0.4.0"
    },
    "cola": {
        "cmdline": [],
        "modules": [
            "app",
            "app.weibo",
            "app.weibo.bundle",
            "app.weibo.conf",
            "app.weibo.login",
            "app.weibo.parsers",
            "app.weibo.storage",
            "app.weibo.utils",
            "app.wiki",
            "cola",
            "cola.cluster",
            "cola.cluster.master",
            "cola.cluster.stage",
            "cola.cluster.tracker",
            "cola.cluster.worker",
            "cola.cmdline",
            "cola.commands",
            "cola.commands.job",
            "cola.commands.master",
            "cola.commands.startproject",
            "cola.commands.worker",
            "cola.context",
            "cola.core",
            "cola.core.bloomfilter",
            "cola.core.bloomfilter.hashtype",
            "cola.core.config",
            "cola.core.counter",
            "cola.core.dedup",
            "cola.core.errors",
            "cola.core.extractor",
            "cola.core.extractor.preprocess",
            "cola.core.extractor.readability",
            "cola.core.extractor.utils",
            "cola.core.handlers",
            "cola.core.logs",
            "cola.core.mq",
            "cola.core.mq.client",
            "cola.core.mq.distributor",
            "cola.core.mq.hash_ring",
            "cola.core.mq.node",
            "cola.core.mq.store",
            "cola.core.mq.utils",
            "cola.core.opener",
            "cola.core.parsers",
            "cola.core.rpc",
            "cola.core.unit",
            "cola.core.urls",
            "cola.core.utils",
            "cola.core.zip",
            "cola.functions",
            "cola.functions.budget",
            "cola.functions.counter",
            "cola.functions.speed",
            "cola.job",
            "cola.job.container",
            "cola.job.executor",
            "cola.job.task",
            "cola.settings"
        ],
        "version": "0.1.0"
    },
    "colab": {
        "cmdline": [],
        "modules": [
            "colab",
            "colab.accounts",
            "colab.accounts.admin",
            "colab.accounts.apps",
            "colab.accounts.context_processors",
            "colab.accounts.filters",
            "colab.accounts.forms",
            "colab.accounts.migrations",
            "colab.accounts.migrations.0001_initial",
            "colab.accounts.migrations.0002_user_needs_update",
            "colab.accounts.migrations.0003_auto_20141218_1755",
            "colab.accounts.migrations.0004_auto_20150311_1818",
            "colab.accounts.migrations.0005_auto_20150312_1454",
            "colab.accounts.migrations.0006_auto_20150828_1719",
            "colab.accounts.models",
            "colab.accounts.search_indexes",
            "colab.accounts.signals",
            "colab.accounts.tasks",
            "colab.accounts.templatetags",
            "colab.accounts.templatetags.gravatar",
            "colab.accounts.tests",
            "colab.accounts.tests.test_forms",
            "colab.accounts.tests.test_mailman",
            "colab.accounts.tests.test_request",
            "colab.accounts.tests.test_tasks",
            "colab.accounts.tests.test_user",
            "colab.accounts.tests.test_user_subscription",
            "colab.accounts.tests.test_utils_validators",
            "colab.accounts.tests.test_view_signup",
            "colab.accounts.tests.test_widgets",
            "colab.accounts.tests.utils",
            "colab.accounts.urls",
            "colab.accounts.utils",
            "colab.accounts.utils.mailman",
            "colab.accounts.utils.validators",
            "colab.accounts.views",
            "colab.accounts.widgets",
            "colab.accounts.widgets.collaboration_chart",
            "colab.accounts.widgets.group",
            "colab.accounts.widgets.group_membership",
            "colab.accounts.widgets.latest_contributions",
            "colab.accounts.widgets.latest_posted",
            "colab.accounts.widgets.participation_chart",
            "colab.celery",
            "colab.conf",
            "colab.exceptions",
            "colab.home",
            "colab.home.admin",
            "colab.home.apps",
            "colab.home.context_processors",
            "colab.home.models",
            "colab.home.tests",
            "colab.home.views",
            "colab.management",
            "colab.management.commands",
            "colab.management.commands.celery",
            "colab.management.commands.initconfig",
            "colab.management.commands.initwidgetsconfig",
            "colab.management.commands.startplugin",
            "colab.management.tests",
            "colab.management.tests.test_celery_command",
            "colab.management.tests.test_initconfig_command",
            "colab.management.tests.test_startplugin",
            "colab.middlewares",
            "colab.middlewares.cookie_middleware",
            "colab.middlewares.models",
            "colab.middlewares.tests",
            "colab.middlewares.tests.test_cookie_middleware",
            "colab.plugins",
            "colab.plugins.apps",
            "colab.plugins.conf",
            "colab.plugins.context_processors",
            "colab.plugins.data",
            "colab.plugins.data.base_importer",
            "colab.plugins.data.tasks",
            "colab.plugins.migrations",
            "colab.plugins.migrations.0001_initial",
            "colab.plugins.migrations.0002_auto_20160106_1843",
            "colab.plugins.models",
            "colab.plugins.tasks",
            "colab.plugins.templatetags",
            "colab.plugins.templatetags.plugins",
            "colab.plugins.templatetags.set_var",
            "colab.plugins.tests",
            "colab.plugins.tests.test_tasks",
            "colab.plugins.tests.test_templatetags",
            "colab.plugins.tests.test_timestamp",
            "colab.plugins.tests.test_views",
            "colab.plugins.urls",
            "colab.plugins.utils",
            "colab.plugins.utils.apps",
            "colab.plugins.utils.collaborations",
            "colab.plugins.utils.filters_importer",
            "colab.plugins.utils.menu",
            "colab.plugins.utils.models",
            "colab.plugins.utils.signals",
            "colab.plugins.utils.tests",
            "colab.plugins.utils.tests.test_apps",
            "colab.plugins.utils.tests.test_collaboration",
            "colab.plugins.utils.tests.test_signals",
            "colab.plugins.views",
            "colab.queue",
            "colab.queue.command",
            "colab.rss",
            "colab.rss.feeds",
            "colab.rss.urls",
            "colab.search",
            "colab.search.admin",
            "colab.search.base_indexes",
            "colab.search.fixtures",
            "colab.search.forms",
            "colab.search.models",
            "colab.search.templatetags",
            "colab.search.templatetags.search_preview_templates",
            "colab.search.tests",
            "colab.search.tests.test_base_index",
            "colab.search.tests.test_search_view",
            "colab.search.tests.test_templatetags",
            "colab.search.urls",
            "colab.search.views",
            "colab.settings",
            "colab.signals",
            "colab.signals.exceptions",
            "colab.signals.signals",
            "colab.signals.tests",
            "colab.signals.tests.test_signals",
            "colab.super_archives",
            "colab.super_archives.admin",
            "colab.super_archives.apps",
            "colab.super_archives.context_processors",
            "colab.super_archives.filters",
            "colab.super_archives.management",
            "colab.super_archives.management.commands",
            "colab.super_archives.management.commands.import_emails",
            "colab.super_archives.management.commands.message",
            "colab.super_archives.management.commands.update_blocks",
            "colab.super_archives.management.commands.update_keywords",
            "colab.super_archives.managers",
            "colab.super_archives.migrations",
            "colab.super_archives.migrations.0001_initial",
            "colab.super_archives.migrations.0002_mailinglist_is_private",
            "colab.super_archives.models",
            "colab.super_archives.search_indexes",
            "colab.super_archives.signals",
            "colab.super_archives.templatetags",
            "colab.super_archives.templatetags.superarchives",
            "colab.super_archives.tests",
            "colab.super_archives.tests.test_email_validation",
            "colab.super_archives.tests.test_import_emails_command",
            "colab.super_archives.tests.test_mailinglist_view",
            "colab.super_archives.tests.test_privatelist",
            "colab.super_archives.tests.test_utils_blocks",
            "colab.super_archives.tests.test_widgets",
            "colab.super_archives.urls",
            "colab.super_archives.utils",
            "colab.super_archives.utils.blocks",
            "colab.super_archives.utils.collaborations",
            "colab.super_archives.utils.email",
            "colab.super_archives.utils.etiquetador",
            "colab.super_archives.utils.url",
            "colab.super_archives.views",
            "colab.super_archives.widgets",
            "colab.super_archives.widgets.dashboard_collaboration_graph",
            "colab.super_archives.widgets.dashboard_latest_collaborations",
            "colab.super_archives.widgets.dashboard_latest_threads",
            "colab.super_archives.widgets.dashboard_most_relevant_threads",
            "colab.tz",
            "colab.tz.middleware",
            "colab.tz.tests",
            "colab.tz.tests.test_middleware",
            "colab.urls",
            "colab.utils",
            "colab.utils.conf",
            "colab.utils.highlighting",
            "colab.utils.runner",
            "colab.utils.tests",
            "colab.utils.tests.colab_settings",
            "colab.utils.tests.test_conf",
            "colab.widgets",
            "colab.widgets.admin",
            "colab.widgets.migrations",
            "colab.widgets.models",
            "colab.widgets.profile_widget",
            "colab.widgets.templatetags",
            "colab.widgets.templatetags.widgets_tag",
            "colab.widgets.tests",
            "colab.widgets.tests.test_profile_widget",
            "colab.widgets.tests.test_widget_manager",
            "colab.widgets.tests.test_widgets",
            "colab.widgets.views",
            "colab.widgets.widget_manager",
            "colab.wsgi",
            "tests",
            "tests.colab_settings",
            "tests.run"
        ],
        "version": "1.13.5"
    },
    "colab-gitlab": {
        "cmdline": [],
        "modules": [
            "colab_gitlab",
            "colab_gitlab.apps",
            "colab_gitlab.data_importer",
            "colab_gitlab.filters",
            "colab_gitlab.fixtures",
            "colab_gitlab.migrations",
            "colab_gitlab.migrations.0001_initial",
            "colab_gitlab.migrations.0002_auto_20151210_1653",
            "colab_gitlab.models",
            "colab_gitlab.password_validators",
            "colab_gitlab.search_indexes",
            "colab_gitlab.signals",
            "colab_gitlab.tasks",
            "colab_gitlab.templatetags",
            "colab_gitlab.templatetags.gitlab_urls",
            "colab_gitlab.urls",
            "colab_gitlab.views",
            "colab_gitlab.widgets",
            "colab_gitlab.widgets.profile",
            "colab_gitlab.widgets.profile.profile"
        ],
        "version": "0.2.6"
    },
    "colab-noosfero": {
        "cmdline": [],
        "modules": [
            "colab_noosfero",
            "colab_noosfero.apps",
            "colab_noosfero.data_importer",
            "colab_noosfero.filters",
            "colab_noosfero.migrations",
            "colab_noosfero.migrations.0001_initial",
            "colab_noosfero.migrations.0002_auto_20151006_1811",
            "colab_noosfero.migrations.0003_auto_20151006_1946",
            "colab_noosfero.migrations.0004_auto_20151112_1322",
            "colab_noosfero.migrations.0005_auto_20151123_1816",
            "colab_noosfero.migrations.0006_remove_noosferosoftwareadmin_user",
            "colab_noosfero.migrations.0007_noosferosoftwarecommunity",
            "colab_noosfero.migrations.0008_noosferosoftwareadmin_username",
            "colab_noosfero.models",
            "colab_noosfero.search_indexes",
            "colab_noosfero.signals",
            "colab_noosfero.tasks",
            "colab_noosfero.templatetags",
            "colab_noosfero.templatetags.upstream",
            "colab_noosfero.templatetags.urls",
            "colab_noosfero.urls",
            "colab_noosfero.views",
            "colab_noosfero.widgets",
            "colab_noosfero.widgets.profile",
            "colab_noosfero.widgets.profile.profile"
        ],
        "version": "0.2.7"
    },
    "colab-superarchives": {
        "cmdline": [],
        "modules": [
            "colab_superarchives",
            "colab_superarchives.admin",
            "colab_superarchives.apps",
            "colab_superarchives.context_processors",
            "colab_superarchives.filters",
            "colab_superarchives.management",
            "colab_superarchives.management.commands",
            "colab_superarchives.management.commands.import_emails",
            "colab_superarchives.management.commands.message",
            "colab_superarchives.management.commands.update_blocks",
            "colab_superarchives.management.commands.update_keywords",
            "colab_superarchives.managers",
            "colab_superarchives.migrations",
            "colab_superarchives.migrations.0001_initial",
            "colab_superarchives.migrations.0002_thread_user",
            "colab_superarchives.models",
            "colab_superarchives.search_indexes",
            "colab_superarchives.signals",
            "colab_superarchives.templatetags",
            "colab_superarchives.templatetags.superarchives",
            "colab_superarchives.urls",
            "colab_superarchives.utils",
            "colab_superarchives.utils.blocks",
            "colab_superarchives.utils.collaborations",
            "colab_superarchives.utils.etiquetador",
            "colab_superarchives.utils.mailman",
            "colab_superarchives.utils.url",
            "colab_superarchives.views",
            "colab_superarchives.widgets",
            "colab_superarchives.widgets.dashboard_collaboration_graph",
            "colab_superarchives.widgets.dashboard_latest_collaborations",
            "colab_superarchives.widgets.dashboard_latest_threads",
            "colab_superarchives.widgets.dashboard_most_relevant_threads",
            "colab_superarchives.widgets.group",
            "colab_superarchives.widgets.group_membership",
            "colab_superarchives.widgets.latest_posted",
            "colab_superarchives.widgets.participation_chart"
        ],
        "version": "0.1.0"
    },
    "colander": {
        "cmdline": [],
        "modules": [
            "colander",
            "colander.compat",
            "colander.interfaces",
            "colander.iso8601",
            "colander.tests",
            "colander.tests.test_colander",
            "colander.tests.test_interfaces",
            "colander.tests.test_iso8601"
        ],
        "version": "1.3.3"
    },
    "colander-jsonschema": {
        "cmdline": [],
        "modules": [
            "colander_jsonschema",
            "colander_jsonschema.tests",
            "colander_jsonschema.tests.test_colander_jsonschema"
        ],
        "version": "0.2"
    },
    "colander-tools": {
        "cmdline": [],
        "modules": [
            "colander_tools",
            "colander_tools.bytes",
            "colander_tools.compat",
            "colander_tools.mapping",
            "colander_tools.netaddr",
            "colander_tools.null",
            "colander_tools.serializable",
            "colander_tools.strict",
            "colander_tools.subschema",
            "colander_tools.test_null",
            "colander_tools.test_strict",
            "colander_tools.test_timezone",
            "colander_tools.tests",
            "colander_tools.timezone"
        ],
        "version": "0.8.0"
    },
    "colander-validators": {
        "cmdline": [],
        "modules": [
            "colander_validators"
        ],
        "version": "0.0.4.1"
    },
    "colanderalchemy": {
        "cmdline": [],
        "modules": [
            "colanderalchemy",
            "colanderalchemy.schema",
            "tests",
            "tests.models",
            "tests.test_schema"
        ],
        "version": "0.3.3"
    },
    "colbert": {
        "cmdline": [
            "colbert_balance_des_comptes.py",
            "colbert_balance_des_comptes_to_rst.py",
            "colbert_bilan.py",
            "colbert_bilan_to_rst.py",
            "colbert_calculer_facture.py",
            "colbert_check_livre_journal.py",
            "colbert_compte_de_resultat.py",
            "colbert_compte_de_resultat_to_rst.py",
            "colbert_ecriture_facture.py",
            "colbert_ecritures_de_cloture.py",
            "colbert_ecritures_to_livre_journal.py",
            "colbert_facture_to_tex.py",
            "colbert_grand_livre.py",
            "colbert_grand_livre_to_rst.py",
            "colbert_livre_journal.py",
            "colbert_rapport_activite.py",
            "colbert_rapport_activite_to_tex.py",
            "colbert_solde_de_compte.py",
            "colbert_solder_tva.py"
        ],
        "modules": [
            "colbert",
            "colbert.balance_des_comptes",
            "colbert.bilan",
            "colbert.common",
            "colbert.compte_de_resultat",
            "colbert.daterange",
            "colbert.factures",
            "colbert.grand_livre",
            "colbert.livre_journal",
            "colbert.plan_comptable_general",
            "colbert.rapports",
            "colbert.solde_de_compte",
            "colbert.tva",
            "colbert.utils"
        ],
        "version": "0.24"
    },
    "colcol": {
        "cmdline": [],
        "modules": [],
        "version": "0.12"
    },
    "cold-start-recommender": {
        "cmdline": [],
        "modules": [
            "csrec",
            "csrec.dal",
            "csrec.exceptions",
            "csrec.factory_dal",
            "csrec.mem_dal",
            "csrec.recommender"
        ],
        "version": "0.4.1"
    },
    "cold-start-recommender-webapp": {
        "cmdline": [
            "csrec_webapp.py"
        ],
        "modules": [
            "csrec_webapp"
        ],
        "version": "0.4.1"
    },
    "colden-nester": {
        "cmdline": [],
        "modules": [
            "colden_nester"
        ],
        "version": "1.3.0"
    },
    "coleman": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "colibri": {
        "cmdline": [],
        "modules": [
            "colibri",
            "colibri._version",
            "colibri.channel",
            "colibri.connection",
            "colibri.exceptions",
            "colibri.frame",
            "colibri.heartbeat",
            "colibri.log",
            "colibri.message",
            "colibri.protocol",
            "colibri.serialization",
            "colibri.spec",
            "colibri.utils"
        ],
        "version": "0.0.1"
    },
    "colibri2trilegal": {
        "cmdline": [
            "colibri2trilegal"
        ],
        "modules": [
            "colibri2trilegal"
        ],
        "version": "2.11"
    },
    "colibricore": {
        "cmdline": [],
        "modules": [],
        "version": "2.4.5"
    },
    "coliform": {
        "cmdline": [],
        "modules": [
            "Coliform",
            "Coliform.ArduCAM",
            "Coliform.DependenciesInstaller",
            "Coliform.GUI",
            "Coliform.GUItk",
            "Coliform.InitialSetup",
            "Coliform.MultiPlot",
            "Coliform.OneWire",
            "Coliform.RGBSensor",
            "Coliform.RPiCamera",
            "Coliform.RPiCameraBackend",
            "Coliform.RPiGPIO"
        ],
        "version": "0.7.5.1"
    },
    "colifrapy": {
        "cmdline": [],
        "modules": [
            "colifrapy",
            "colifrapy.cacher",
            "colifrapy.commander",
            "colifrapy.hub",
            "colifrapy.logger",
            "colifrapy.model",
            "colifrapy.scaffolder",
            "colifrapy.settings",
            "colifrapy.tools",
            "colifrapy.tools.colorize",
            "colifrapy.tools.decorators",
            "colifrapy.tools.flavors",
            "colifrapy.tools.renderer",
            "colifrapy.tools.utilities"
        ],
        "version": "0.5.0"
    },
    "colin1911": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "colinops": {
        "cmdline": [],
        "modules": [
            "colinops",
            "colinops.devdate",
            "colinops.devlogs",
            "colinops.devops",
            "colinops.devops.opsmysql",
            "colinops.opscommon",
            "colinops.opsdate",
            "colinops.opslogs",
            "colinops.opsmonitor",
            "colinops.opsmonitor.opssystem"
        ],
        "version": "1.0.3"
    },
    "colinws": {
        "cmdline": [],
        "modules": [
            "colinws",
            "colinws.colinwsDate",
            "colinws.colinwsEmail",
            "colinws.colinwsHost",
            "colinws.colinwsLogs",
            "colinws.config"
        ],
        "version": "1.0.6"
    },
    "colinwstools": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "collabi": {
        "cmdline": [],
        "modules": [
            "collabi",
            "collabi.all_help_action",
            "collabi.auth",
            "collabi.cli",
            "collabi.cloud_config",
            "collabi.collab",
            "collabi.core",
            "collabi.formatter",
            "collabi.lazy_file",
            "collabi.open_struct",
            "collabi.rest"
        ],
        "version": "0.0.5"
    },
    "collage": {
        "cmdline": [
            "collage-create"
        ],
        "modules": [
            "collage",
            "collage.base",
            "collage.collager",
            "collage.main",
            "collage.search",
            "collage.test",
            "collage.test.base",
            "collage.test.test_base",
            "collage.test.test_collager",
            "collage.test.test_main",
            "collage.test.test_search"
        ],
        "version": "0.1.0"
    },
    "collagram": {
        "cmdline": [],
        "modules": [
            "collagram"
        ],
        "version": "0.8.4"
    },
    "collar": {
        "cmdline": [],
        "modules": [
            "collar",
            "collar.errors",
            "collar.filters",
            "collar.fleet",
            "collar.main"
        ],
        "version": "0.1.1"
    },
    "collate": {
        "cmdline": [],
        "modules": [
            "collate",
            "collate.collate",
            "collate.spacetime",
            "collate.sql"
        ],
        "version": "0.2.0"
    },
    "collatex": {
        "cmdline": [],
        "modules": [
            "ClusterShell",
            "ClusterShell.RangeSet",
            "collatex",
            "collatex.HTML",
            "collatex.astar",
            "collatex.core_classes",
            "collatex.core_functions",
            "collatex.display_module",
            "collatex.edit_graph_aligner",
            "collatex.exceptions",
            "collatex.experimental_astar_aligner",
            "collatex.extended_suffix_array",
            "collatex.linsuffarr",
            "collatex.near_matching",
            "collatex.suffix_based_scorer",
            "collatex.tokenindex",
            "collatex.transposition_handling"
        ],
        "version": "2.1.2"
    },
    "collect": {
        "cmdline": [],
        "modules": [
            "collect",
            "collect.settings",
            "collect.tests",
            "collect.tests.run"
        ],
        "version": "0.1.1"
    },
    "collect-exceptions": {
        "cmdline": [],
        "modules": [
            "collect_exceptions",
            "collect_exceptions.contrib",
            "collect_exceptions.contrib.celery",
            "collect_exceptions.contrib.django",
            "collect_exceptions.contrib.django.admin",
            "collect_exceptions.contrib.django.models",
            "collect_exceptions.contrib.django.tests",
            "collect_exceptions.contrib.django.views"
        ],
        "version": "0.0.5"
    },
    "collecta-trends": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "collectd": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "collectd-cdn": {
        "cmdline": [],
        "modules": [
            "collectd_cdn",
            "collectd_cdn.fastly"
        ],
        "version": "0.2.1"
    },
    "collectd-ceilometer-plugin": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "collectd-connect-time": {
        "cmdline": [],
        "modules": [
            "collectd_connect_time",
            "collectd_connect_time.collect"
        ],
        "version": "0.3.0"
    },
    "collectd-csv": {
        "cmdline": [
            "fetchCSV.py",
            "monitorCSV.py"
        ],
        "modules": [
            "CollectD_CSV",
            "CollectD_CSV.CollectD_CSV",
            "CollectD_CSV/plugins",
            "CollectD_CSV/plugins.if_octets",
            "CollectD_CSV/plugins.if_packets"
        ],
        "version": "0.6.1"
    },
    "collectd-cuda": {
        "cmdline": [],
        "modules": [
            "collectd_cuda",
            "collectd_cuda.collectd_plugin"
        ],
        "version": "0.0.3"
    },
    "collectd-facter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "collectd-flashcache": {
        "cmdline": [],
        "modules": [
            "collectd_flashcache"
        ],
        "version": "0.1.0"
    },
    "collectd-gnocchi": {
        "cmdline": [],
        "modules": [],
        "version": "1.4.1"
    },
    "collectd-gnocchi-status": {
        "cmdline": [],
        "modules": [
            "collectd_gnocchi_status"
        ],
        "version": "0.2.0"
    },
    "collectd-haproxy": {
        "cmdline": [],
        "modules": [
            "collectd_haproxy",
            "collectd_haproxy.compat",
            "collectd_haproxy.connection",
            "collectd_haproxy.metrics",
            "collectd_haproxy.plugin"
        ],
        "version": "1.2.1"
    },
    "collectd-iscdhcp": {
        "cmdline": [],
        "modules": [
            "collectd_iscdhcp",
            "collectd_iscdhcp.collectd_plugin"
        ],
        "version": "0.1.0"
    },
    "collectd-ntp": {
        "cmdline": [],
        "modules": [
            "ntpoffset"
        ],
        "version": "0.0.4"
    },
    "collectd-nvidianvml": {
        "cmdline": [],
        "modules": [
            "collectd-nvidianvml",
            "collectd-nvidianvml.nvidianvml"
        ],
        "version": "0.1.4"
    },
    "collectd-rabbitmq": {
        "cmdline": [],
        "modules": [
            "collectd_rabbitmq",
            "collectd_rabbitmq.collectd_plugin",
            "collectd_rabbitmq.rabbit",
            "collectd_rabbitmq.utils"
        ],
        "version": "1.18.0"
    },
    "collectd-rabbitmq-monitoring": {
        "cmdline": [],
        "modules": [
            "collectd_rabbitmq_monitoring"
        ],
        "version": "0.0.2"
    },
    "collectd-transmission": {
        "cmdline": [],
        "modules": [
            "collectd_transmission"
        ],
        "version": "3.1.0"
    },
    "collectds": {
        "cmdline": [],
        "modules": [
            "collectds",
            "collectds.base",
            "collectds.ceph_osd_stats",
            "collectds.ceph_pg_mon_status",
            "collectds.ceph_pool_osd",
            "collectds.check_openstack_api",
            "collectds.dbi",
            "collectds.haproxy",
            "collectds.hypervisor_stats",
            "collectds.mysql",
            "collectds.openstack",
            "collectds.openstack_cinder",
            "collectds.openstack_glance",
            "collectds.openstack_keystone",
            "collectds.openstack_neutron",
            "collectds.openstack_nova",
            "collectds.pacemaker_resource",
            "collectds.rabbitmq_info"
        ],
        "version": "0.1.1"
    },
    "collectfast": {
        "cmdline": [],
        "modules": [
            "collectfast",
            "collectfast.boto",
            "collectfast.etag",
            "collectfast.management",
            "collectfast.management.commands",
            "collectfast.management.commands.collectstatic",
            "collectfast.models",
            "collectfast.settings",
            "collectfast.tests",
            "collectfast.tests.test_command",
            "collectfast.tests.test_etag",
            "collectfast.tests.utils"
        ],
        "version": "0.5.2"
    },
    "collection-filter": {
        "cmdline": [],
        "modules": [
            "collection_filter",
            "collection_filter.collection_filter",
            "collection_filter.dict_utils"
        ],
        "version": "0.5"
    },
    "collection-json": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "collection-pipelines": {
        "cmdline": [],
        "modules": [
            "collection_pipelines",
            "collection_pipelines.core",
            "collection_pipelines.graph",
            "collection_pipelines.http",
            "collection_pipelines.json",
            "collection_pipelines.std",
            "collection_pipelines.text"
        ],
        "version": "0.1.3"
    },
    "collectionbatchtool": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.6"
    },
    "collections-extended": {
        "cmdline": [],
        "modules": [
            "collections_extended",
            "collections_extended._compat",
            "collections_extended._util",
            "collections_extended.bags",
            "collections_extended.bijection",
            "collections_extended.range_map",
            "collections_extended.setlists"
        ],
        "version": "0.9.0"
    },
    "collections-recipes": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "collections2": {
        "cmdline": [],
        "modules": [
            "collections2",
            "collections2.dicts",
            "collections2.sets",
            "tests",
            "tests.main",
            "tests.test_OrderedDict",
            "tests.test_OrderedSet"
        ],
        "version": "0.3.0"
    },
    "collectionviews": {
        "cmdline": [],
        "modules": [
            "collectionviews",
            "collectionviews.dicts",
            "collectionviews.filtered",
            "collectionviews.iterables",
            "collectionviews.lists",
            "collectionviews.sliced",
            "collectionviews.wrapper"
        ],
        "version": "0.8"
    },
    "collectionz": {
        "cmdline": [],
        "modules": [
            "collectionz",
            "collectionz.collectionz",
            "collectionz.tests"
        ],
        "version": "0.0.1"
    },
    "collective.aaf": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.aaf",
            "collective.aaf.portlets",
            "collective.aaf.portlets.shibbolethloginportlet",
            "collective.aaf.setuphandlers",
            "collective.aaf.testing",
            "collective.aaf.tests",
            "collective.aaf.tests.base_shibbolethloginportlet",
            "collective.aaf.tests.test_example",
            "collective.aaf.tests.test_robot",
            "collective.aaf.upgrades"
        ],
        "version": "2.1"
    },
    "collective.action.twitter": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.action",
            "collective.action.twitter",
            "collective.action.twitter.tests",
            "collective.action.twitter.twitteraction"
        ],
        "version": "0.2"
    },
    "collective.actions.delete": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.actions",
            "collective.actions.delete",
            "collective.actions.delete.browser",
            "collective.actions.delete.interfaces",
            "collective.actions.delete.tests"
        ],
        "version": "0.1.5"
    },
    "collective.address": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.address",
            "collective.address.behaviors",
            "collective.address.vocabulary"
        ],
        "version": "1.5"
    },
    "collective.addthis": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.addthis",
            "collective.addthis.addthis",
            "collective.addthis.controlpanel",
            "collective.addthis.interfaces",
            "collective.addthis.social_media",
            "collective.addthis.testing",
            "collective.addthis.tests",
            "collective.addthis.tests.test_addthis",
            "collective.addthis.tests.test_controlpanel",
            "collective.addthis.tests.test_setup",
            "collective.addthis.upgrades",
            "collective.addthis.upgrades.all_to_1000",
            "collective.addthis.upgrades.v1x"
        ],
        "version": "1.3.3"
    },
    "collective.addtofolder": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.addtofolder",
            "collective.addtofolder.browser",
            "collective.addtofolder.browser.config",
            "collective.addtofolder.configlet",
            "collective.addtofolder.interfaces",
            "collective.addtofolder.patch",
            "collective.addtofolder.setuphandlers",
            "collective.addtofolder.tests"
        ],
        "version": "0.2"
    },
    "collective.adlibsyncmanager": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.adlibsyncmanager",
            "collective.adlibsyncmanager.Extensions",
            "collective.adlibsyncmanager.Extensions.adlib_migration",
            "collective.adlibsyncmanager.Extensions.adlib_sync_manager",
            "collective.adlibsyncmanager.api_migrator",
            "collective.adlibsyncmanager.sync_mechanism",
            "collective.adlibsyncmanager.tests",
            "collective.adlibsyncmanager.xml_migrator"
        ],
        "version": "0.1"
    },
    "collective.ads": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ads",
            "collective.ads.AppConfig",
            "collective.ads.admin",
            "collective.ads.admin.AdsAdmin",
            "collective.ads.admin.utility",
            "collective.ads.browser",
            "collective.ads.browser.adsadmin",
            "collective.ads.browser.controlpanel",
            "collective.ads.browser.interfaces",
            "collective.ads.browser.portlet",
            "collective.ads.config",
            "collective.ads.content",
            "collective.ads.content.Banner",
            "collective.ads.content.interfaces",
            "collective.ads.setuphandlers",
            "collective.ads.tests"
        ],
        "version": "0.1"
    },
    "collective.advancedsearchtamer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.advancedsearchtamer",
            "collective.advancedsearchtamer.browser",
            "collective.advancedsearchtamer.tests"
        ],
        "version": "1.0"
    },
    "collective.ajaxkeywords": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ajaxkeywords",
            "collective.ajaxkeywords.browser",
            "collective.ajaxkeywords.tests"
        ],
        "version": "0.1"
    },
    "collective.akismet": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.akismet",
            "collective.akismet.browser",
            "collective.akismet.browser.controlpanel",
            "collective.akismet.browser.validator",
            "collective.akismet.browser.verifykey",
            "collective.akismet.interfaces",
            "collective.akismet.tests",
            "collective.akismet.tests.layer",
            "collective.akismet.tests.test_controlpanel",
            "collective.akismet.tests.test_validator",
            "collective.akismet.validator"
        ],
        "version": "1.0b1"
    },
    "collective.alerts": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.alerts",
            "collective.alerts.browser",
            "collective.alerts.browser.config",
            "collective.alerts.browser.interfaces",
            "collective.alerts.config",
            "collective.alerts.interfaces",
            "collective.alerts.setuphandlers"
        ],
        "version": "1.2.3"
    },
    "collective.alertviewlet": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.alertviewlet",
            "collective.alertviewlet.browser",
            "collective.alertviewlet.browser.view",
            "collective.alertviewlet.controlpanel_alert",
            "collective.alertviewlet.tests"
        ],
        "version": "0.2"
    },
    "collective.alias": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.alias",
            "collective.alias.annotations",
            "collective.alias.browser",
            "collective.alias.content",
            "collective.alias.events",
            "collective.alias.info",
            "collective.alias.interfaces",
            "collective.alias.paste",
            "collective.alias.tests",
            "collective.alias.tests.layer",
            "collective.alias.tests.test_aliasing",
            "collective.alias.tests.test_info",
            "collective.alias.tests.test_paste",
            "collective.alias.tests.test_setup",
            "collective.alias.upgrade",
            "collective.alias.vocabulary"
        ],
        "version": "1.3.1"
    },
    "collective.allowsearch": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.allowsearch",
            "collective.allowsearch.adapters",
            "collective.allowsearch.interfaces",
            "collective.allowsearch.tests",
            "collective.allowsearch.utilities"
        ],
        "version": "0.1.4"
    },
    "collective.allowtypes": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.allowtypes",
            "collective.allowtypes.browser",
            "collective.allowtypes.browser.browser",
            "collective.allowtypes.setuphandlers",
            "collective.allowtypes.tests",
            "collective.allowtypes.tests.base",
            "collective.allowtypes.tests.test_setup",
            "collective.allowtypes.tests.test_view"
        ],
        "version": "0.2"
    },
    "collective.amberjack.core": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.amberjack",
            "collective.amberjack.core",
            "collective.amberjack.core.blueprints",
            "collective.amberjack.core.controlpanel",
            "collective.amberjack.core.interfaces",
            "collective.amberjack.core.javascript",
            "collective.amberjack.core.javascript.defaults",
            "collective.amberjack.core.registration",
            "collective.amberjack.core.skins",
            "collective.amberjack.core.tests",
            "collective.amberjack.core.tests.base",
            "collective.amberjack.core.tests.test_config",
            "collective.amberjack.core.tests.test_doctests",
            "collective.amberjack.core.tests.test_registration",
            "collective.amberjack.core.tests.test_validation",
            "collective.amberjack.core.tests.test_viewlet",
            "collective.amberjack.core.tour",
            "collective.amberjack.core.tour_converter",
            "collective.amberjack.core.tour_manager",
            "collective.amberjack.core.translation",
            "collective.amberjack.core.translation.script",
            "collective.amberjack.core.translation.utils",
            "collective.amberjack.core.utils",
            "collective.amberjack.core.validators",
            "collective.amberjack.core.viewlets",
            "collective.amberjack.core.viewlets.tour",
            "collective.amberjack.core.vocabulary",
            "collective.amberjack.core.zcml"
        ],
        "version": "1.1"
    },
    "collective.amberjack.plonetour": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.amberjack",
            "collective.amberjack.plonetour"
        ],
        "version": "1.1"
    },
    "collective.amberjack.portlet": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.amberjack",
            "collective.amberjack.portlet",
            "collective.amberjack.portlet.amberjackchoiceportlet",
            "collective.amberjack.portlet.tests",
            "collective.amberjack.portlet.tests.base",
            "collective.amberjack.portlet.tests.test_choice_portlet"
        ],
        "version": "1.1"
    },
    "collective.analyticspanel": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.analyticspanel",
            "collective.analyticspanel.browser",
            "collective.analyticspanel.browser.controlpanel",
            "collective.analyticspanel.browser.site",
            "collective.analyticspanel.browser.viewlet",
            "collective.analyticspanel.interfaces",
            "collective.analyticspanel.pair_fields",
            "collective.analyticspanel.setuphandlers",
            "collective.analyticspanel.testing",
            "collective.analyticspanel.tests",
            "collective.analyticspanel.tests.base",
            "collective.analyticspanel.tests.test_configuration",
            "collective.analyticspanel.tests.test_viewlet",
            "collective.analyticspanel.vocabularies"
        ],
        "version": "0.5.0"
    },
    "collective.annotationbrowser": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.annotationbrowser",
            "collective.annotationbrowser.browser",
            "collective.annotationbrowser.browser.interfaces",
            "collective.annotationbrowser.browser.view",
            "collective.annotationbrowser.testing",
            "collective.annotationbrowser.tests",
            "collective.annotationbrowser.tests.tests",
            "collective.annotationbrowser.utils"
        ],
        "version": "0.3"
    },
    "collective.anonfeedback": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.anonfeedback",
            "collective.anonfeedback.browser",
            "collective.anonfeedback.browser.feedback",
            "collective.anonfeedback.testing",
            "collective.anonfeedback.tests",
            "collective.anonfeedback.tests.test_installed",
            "collective.anonfeedback.tests.test_views"
        ],
        "version": "1.0"
    },
    "collective.anonymousbrowser": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.anonymousbrowser",
            "collective.anonymousbrowser.browser",
            "collective.anonymousbrowser.real",
            "collective.anonymousbrowser.tests",
            "collective.anonymousbrowser.tests.test_doctest_files",
            "collective.anonymousbrowser.tests.utils"
        ],
        "version": "0.11"
    },
    "collective.anonymousview": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.anonymousview",
            "collective.anonymousview.anonymousview",
            "collective.anonymousview.interfaces",
            "collective.anonymousview.tests",
            "collective.anonymousview.tests.base",
            "collective.anonymousview.tests.test_anonymousview"
        ],
        "version": "1.1"
    },
    "collective.anotherdynamicgroupsplugin": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.anotherdynamicgroupsplugin",
            "collective.anotherdynamicgroupsplugin.config",
            "collective.anotherdynamicgroupsplugin.groupdefinition",
            "collective.anotherdynamicgroupsplugin.interfaces",
            "collective.anotherdynamicgroupsplugin.plugin",
            "collective.anotherdynamicgroupsplugin.setuphandlers",
            "collective.anotherdynamicgroupsplugin.testing",
            "collective.anotherdynamicgroupsplugin.tests",
            "collective.anotherdynamicgroupsplugin.tests.test_doctests",
            "collective.anotherdynamicgroupsplugin.tests.test_plone",
            "collective.anotherdynamicgroupsplugin.util"
        ],
        "version": "1.0.0"
    },
    "collective.api4tal": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.api4tal",
            "collective.api4tal.browser",
            "collective.api4tal.browser.api4tal",
            "collective.api4tal.interfaces",
            "collective.api4tal.setuphandlers",
            "collective.api4tal.testing",
            "collective.api4tal.tests",
            "collective.api4tal.tests.test_robot",
            "collective.api4tal.tests.test_setup"
        ],
        "version": "0.1"
    },
    "collective.arboreal": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.arboreal",
            "collective.arboreal.arboreal",
            "collective.arboreal.arborealselection",
            "collective.arboreal.config",
            "collective.arboreal.field",
            "collective.arboreal.index",
            "collective.arboreal.node",
            "collective.arboreal.public",
            "collective.arboreal.treemanager",
            "collective.arboreal.utils",
            "collective.arboreal.widgets"
        ],
        "version": "2.0"
    },
    "collective.archiveviewer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.archiveviewer",
            "collective.archiveviewer.adapters",
            "collective.archiveviewer.browser",
            "collective.archiveviewer.browser.views",
            "collective.archiveviewer.interfaces",
            "collective.archiveviewer.subscribers",
            "collective.archiveviewer.tests",
            "collective.archiveviewer.tests.base",
            "collective.archiveviewer.tests.test_file",
            "collective.archiveviewer.utils"
        ],
        "version": "1.0b2"
    },
    "collective.argv0spy": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.argv0spy"
        ],
        "version": "0.1.3"
    },
    "collective.atcassandrastorage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.atcassandrastorage",
            "collective.atcassandrastorage.casa_mock",
            "collective.atcassandrastorage.db",
            "collective.atcassandrastorage.interfaces",
            "collective.atcassandrastorage.settings",
            "collective.atcassandrastorage.storage",
            "collective.atcassandrastorage.tests"
        ],
        "version": "0.2"
    },
    "collective.atclamav": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ATClamAV",
            "collective.ATClamAV.browser",
            "collective.ATClamAV.browser.settings",
            "collective.ATClamAV.interfaces",
            "collective.ATClamAV.scanner",
            "collective.ATClamAV.schema",
            "collective.ATClamAV.testing",
            "collective.ATClamAV.tests",
            "collective.ATClamAV.tests.base",
            "collective.ATClamAV.tests.test_integration",
            "collective.ATClamAV.tests.test_scanner",
            "collective.ATClamAV.validator"
        ],
        "version": "1.2"
    },
    "collective.atimage.transformmenu": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.atimage",
            "collective.atimage.transformmenu",
            "collective.atimage.transformmenu.browser",
            "collective.atimage.transformmenu.browser.interfaces",
            "collective.atimage.transformmenu.browser.menu",
            "collective.atimage.transformmenu.browser.transform",
            "collective.atimage.transformmenu.interfaces",
            "collective.atimage.transformmenu.tests",
            "collective.atimage.transformmenu.tests.base",
            "collective.atimage.transformmenu.tests.test_doctest"
        ],
        "version": "1.2.2"
    },
    "collective.atimage.transformtoolbar": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.atimage",
            "collective.atimage.transformtoolbar",
            "collective.atimage.transformtoolbar.browser",
            "collective.atimage.transformtoolbar.browser.transform",
            "collective.atimage.transformtoolbar.browser.viewlets",
            "collective.atimage.transformtoolbar.interfaces",
            "collective.atimage.transformtoolbar.tests",
            "collective.atimage.transformtoolbar.tests.base",
            "collective.atimage.transformtoolbar.tests.test_doctest"
        ],
        "version": "1.2.3"
    },
    "collective.atomrss": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.atomrss",
            "collective.atomrss.Extensions",
            "collective.atomrss.Extensions.install",
            "collective.atomrss.adapters",
            "collective.atomrss.browser",
            "collective.atomrss.interfaces",
            "collective.atomrss.profile",
            "collective.atomrss.setuphandlers",
            "collective.atomrss.testing",
            "collective.atomrss.tests",
            "collective.atomrss.tests.test_setup"
        ],
        "version": "0.1.10"
    },
    "collective.atspreadsheet": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.atspreadsheet",
            "collective.atspreadsheet.browser",
            "collective.atspreadsheet.config",
            "collective.atspreadsheet.content",
            "collective.atspreadsheet.content.csvspreadsheet",
            "collective.atspreadsheet.content.spreadsheet",
            "collective.atspreadsheet.interfaces",
            "collective.atspreadsheet.interfaces.csvspreadsheet",
            "collective.atspreadsheet.interfaces.spreadsheet",
            "collective.atspreadsheet.portlets",
            "collective.atspreadsheet.subscribers",
            "collective.atspreadsheet.tests",
            "collective.atspreadsheet.tests.base",
            "collective.atspreadsheet.tests.test_doctest",
            "collective.atspreadsheet.widget"
        ],
        "version": "1.0a2"
    },
    "collective.auditlog": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.auditlog",
            "collective.auditlog.action",
            "collective.auditlog.async",
            "collective.auditlog.controlpanel",
            "collective.auditlog.db",
            "collective.auditlog.handlers",
            "collective.auditlog.interfaces",
            "collective.auditlog.models",
            "collective.auditlog.td",
            "collective.auditlog.testing",
            "collective.auditlog.tests",
            "collective.auditlog.tests.test_actions",
            "collective.auditlog.upgrades",
            "collective.auditlog.upgrades.to1001",
            "collective.auditlog.utils"
        ],
        "version": "1.3.1"
    },
    "collective.autogroup": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.autogroup",
            "collective.autogroup.base",
            "collective.autogroup.config",
            "collective.autogroup.interfaces",
            "collective.autogroup.tests",
            "collective.autogroup.tests.base",
            "collective.autogroup.tests.test_doc",
            "collective.autogroup.utils"
        ],
        "version": "0.1b1"
    },
    "collective.autopermission": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.autopermission",
            "collective.autopermission.permissions"
        ],
        "version": "1.0b2"
    },
    "collective.autopublishing": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.autopublishing",
            "collective.autopublishing.behavior",
            "collective.autopublishing.browser",
            "collective.autopublishing.browser.autopublishreport",
            "collective.autopublishing.browser.autopublishsettings",
            "collective.autopublishing.eventhandler",
            "collective.autopublishing.interfaces",
            "collective.autopublishing.setuphandlers",
            "collective.autopublishing.tests",
            "collective.autopublishing.tests.layer",
            "collective.autopublishing.tests.test_autopublishing",
            "collective.autopublishing.upgradesteps"
        ],
        "version": "1.0.1"
    },
    "collective.autoresizetextarea": {
        "cmdline": [],
        "modules": [],
        "version": "1.0b2"
    },
    "collective.autorestart": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.autorestart",
            "collective.autorestart.audio",
            "collective.autorestart.bgthread",
            "collective.autorestart.logger",
            "collective.autorestart.monitor",
            "collective.autorestart.scanner",
            "collective.autorestart.signalhandler"
        ],
        "version": "0.2.0"
    },
    "collective.autosaveform": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.autosaveform",
            "collective.autosaveform.browser",
            "collective.autosaveform.config",
            "collective.autosaveform.tests",
            "collective.autosaveform.tests.base",
            "collective.autosaveform.tests.test_browser",
            "collective.autosaveform.tests.test_tool",
            "collective.autosaveform.tool"
        ],
        "version": "0.2"
    },
    "collective.autoscaling": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.autoscaling",
            "collective.autoscaling.browser",
            "collective.autoscaling.browser.controlpanel",
            "collective.autoscaling.browser.resizing",
            "collective.autoscaling.interfaces",
            "collective.autoscaling.resizing",
            "collective.autoscaling.subscribers",
            "collective.autoscaling.testing",
            "collective.autoscaling.tests",
            "collective.autoscaling.tests.library",
            "collective.autoscaling.tests.test_robot",
            "collective.autoscaling.tests.test_setup",
            "collective.autoscaling.tests.variables",
            "collective.autoscaling.utils"
        ],
        "version": "1.1.1"
    },
    "collective.aviary": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.aviary",
            "collective.aviary.Extensions",
            "collective.aviary.Extensions.Install",
            "collective.aviary.browser",
            "collective.aviary.browser.view",
            "collective.aviary.config",
            "collective.aviary.controlpanel",
            "collective.aviary.interfaces",
            "collective.aviary.testing",
            "collective.aviary.tests",
            "collective.aviary.tests.test_controlpanel",
            "collective.aviary.tests.test_robot",
            "collective.aviary.tests.test_setup",
            "collective.aviary.tests.test_vocabularies",
            "collective.aviary.vocabularies"
        ],
        "version": "1.0b1"
    },
    "collective.awstats": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.awstats",
            "collective.awstats.at",
            "collective.awstats.at.awstats",
            "collective.awstats.at.custompart",
            "collective.awstats.at.extender",
            "collective.awstats.browser",
            "collective.awstats.browser.base",
            "collective.awstats.browser.browsers",
            "collective.awstats.browser.clients",
            "collective.awstats.browser.controlpanel",
            "collective.awstats.browser.countries",
            "collective.awstats.browser.custompart",
            "collective.awstats.browser.datatypes",
            "collective.awstats.browser.daysinmonth",
            "collective.awstats.browser.interfaces",
            "collective.awstats.browser.monthhistory",
            "collective.awstats.browser.operatingsystems",
            "collective.awstats.browser.overview",
            "collective.awstats.browser.robots",
            "collective.awstats.browser.servertime",
            "collective.awstats.browser.sessions",
            "collective.awstats.browser.siteurl",
            "collective.awstats.browser.stats",
            "collective.awstats.browser.statschooser",
            "collective.awstats.browser.weekdays",
            "collective.awstats.config",
            "collective.awstats.constants",
            "collective.awstats.interfaces",
            "collective.awstats.provider",
            "collective.awstats.vocabularies"
        ],
        "version": "1.0"
    },
    "collective.awstats-hitcounter": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.awstats_hitcounter",
            "collective.awstats_hitcounter.browser",
            "collective.awstats_hitcounter.browser.utils",
            "collective.awstats_hitcounter.browser.views",
            "collective.awstats_hitcounter.interfaces",
            "collective.awstats_hitcounter.portlet",
            "collective.awstats_hitcounter.portlet.portlets",
            "collective.awstats_hitcounter.portlet.z3cformhelper",
            "collective.awstats_hitcounter.setuphandlers",
            "collective.awstats_hitcounter.testing",
            "collective.awstats_hitcounter.tests",
            "collective.awstats_hitcounter.tests.test_robot",
            "collective.awstats_hitcounter.tests.test_setup",
            "collective.awstats_hitcounter.upgrades",
            "collective.awstats_hitcounter.viewlet"
        ],
        "version": "0.1.6.1"
    },
    "collective.azindexpage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.azindexpage",
            "collective.azindexpage.browser",
            "collective.azindexpage.browser.interfaces",
            "collective.azindexpage.browser.page",
            "collective.azindexpage.keywords",
            "collective.azindexpage.setuphandlers",
            "collective.azindexpage.testing",
            "collective.azindexpage.tests",
            "collective.azindexpage.tests.base",
            "collective.azindexpage.tests.test_page",
            "collective.azindexpage.tests.test_setup",
            "collective.azindexpage.tests.utils",
            "collective.azindexpage.upgrades",
            "collective.azindexpage.upgrades.v1x"
        ],
        "version": "1.0.3"
    },
    "collective.azipfele": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.azipfele",
            "collective.azipfele.browser",
            "collective.azipfele.browser.add",
            "collective.azipfele.browser.download",
            "collective.azipfele.browser.state",
            "collective.azipfele.extractors",
            "collective.azipfele.interfaces",
            "collective.azipfele.queue",
            "collective.azipfele.queue.state",
            "collective.azipfele.queue.taskqueue",
            "collective.azipfele.queue.taskqueue.handler",
            "collective.azipfele.queue.taskqueue.view",
            "collective.azipfele.queue.zamqp",
            "collective.azipfele.queue.zamqp.taskszamqp",
            "collective.azipfele.settings",
            "collective.azipfele.setuphandlers",
            "collective.azipfele.test",
            "collective.azipfele.test.robottest_variables",
            "collective.azipfele.testing",
            "collective.azipfele.tests",
            "collective.azipfele.zipper"
        ],
        "version": "2.0.0"
    },
    "collective.backtowork": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.backtowork"
        ],
        "version": "0.6.4"
    },
    "collective.badge": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.badge",
            "collective.badge.api",
            "collective.badge.content",
            "collective.badge.interfaces",
            "collective.badge.models",
            "collective.badge.testing",
            "collective.badge.tests",
            "collective.badge.tests.test_badge",
            "collective.badge.tests.test_example",
            "collective.badge.workspace"
        ],
        "version": "1.0.1"
    },
    "collective.barcamp": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.barcamp",
            "collective.barcamp.browser",
            "collective.barcamp.browser.eventview",
            "collective.barcamp.browser.userform",
            "collective.barcamp.config",
            "collective.barcamp.content",
            "collective.barcamp.content.barcampevent",
            "collective.barcamp.content.barcampparticipant",
            "collective.barcamp.content.barcampsession",
            "collective.barcamp.indexer",
            "collective.barcamp.interfaces",
            "collective.barcamp.interfaces.barcampevent",
            "collective.barcamp.interfaces.barcampparticipant",
            "collective.barcamp.interfaces.barcampsession",
            "collective.barcamp.portlets",
            "collective.barcamp.tests",
            "collective.barcamp.tests.base",
            "collective.barcamp.tests.test_doctest",
            "collective.barcamp.unrestrictor"
        ],
        "version": "0.1"
    },
    "collective.base": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.base",
            "collective.base.adapter",
            "collective.base.interfaces",
            "collective.base.tests",
            "collective.base.tests.base",
            "collective.base.tests.test_Adapter",
            "collective.base.tests.test_BaseFormView",
            "collective.base.tests.test_BaseView",
            "collective.base.tests.test_RepeatedViewletManager",
            "collective.base.tests.test_Viewlet",
            "collective.base.view",
            "collective.base.viewlet",
            "collective.base.viewletmanager"
        ],
        "version": "0.7.1"
    },
    "collective.base64imagepatch": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.base64imagepatch",
            "collective.base64imagepatch.patch",
            "collective.base64imagepatch.patch_all_view",
            "collective.base64imagepatch.subscribers",
            "collective.base64imagepatch.tests"
        ],
        "version": "0.12"
    },
    "collective.baseid": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.baseid",
            "collective.baseid.interfaces"
        ],
        "version": "1.0rc1"
    },
    "collective.baseline": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.baseline",
            "collective.baseline.layer",
            "collective.baseline.testing",
            "collective.baseline.tests",
            "collective.baseline.tests.base",
            "collective.baseline.tests.test_setup",
            "collective.baseline.upgrades",
            "collective.baseline.viewlet"
        ],
        "version": "1.0"
    },
    "collective.beaker": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.beaker",
            "collective.beaker.interfaces",
            "collective.beaker.metaconfigure",
            "collective.beaker.session",
            "collective.beaker.testing",
            "collective.beaker.tests"
        ],
        "version": "1.0b3"
    },
    "collective.beancounter": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.beancounter",
            "collective.beancounter.adapter",
            "collective.beancounter.browser",
            "collective.beancounter.interfaces",
            "collective.beancounter.tests"
        ],
        "version": "0.3.1"
    },
    "collective.behavior.amp": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.behavior",
            "collective.behavior.amp",
            "collective.behavior.amp.Extensions",
            "collective.behavior.amp.Extensions.Install",
            "collective.behavior.amp.behaviors",
            "collective.behavior.amp.browser",
            "collective.behavior.amp.browser.controlpanel",
            "collective.behavior.amp.browser.helper",
            "collective.behavior.amp.config",
            "collective.behavior.amp.interfaces",
            "collective.behavior.amp.logger",
            "collective.behavior.amp.setuphandlers",
            "collective.behavior.amp.testing",
            "collective.behavior.amp.tests",
            "collective.behavior.amp.tests.test_controlpanel",
            "collective.behavior.amp.tests.test_robot",
            "collective.behavior.amp.tests.test_setup",
            "collective.behavior.amp.tests.test_upgrades",
            "collective.behavior.amp.tests.test_utils",
            "collective.behavior.amp.tests.test_validators",
            "collective.behavior.amp.tests.test_viewlets",
            "collective.behavior.amp.tests.test_views",
            "collective.behavior.amp.tests.utils",
            "collective.behavior.amp.upgrades",
            "collective.behavior.amp.upgrades.v2",
            "collective.behavior.amp.utils",
            "collective.behavior.amp.validators"
        ],
        "version": "1.0a3"
    },
    "collective.behavior.banner": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.behavior",
            "collective.behavior.banner",
            "collective.behavior.banner.banner",
            "collective.behavior.banner.browser",
            "collective.behavior.banner.browser.controlpanel",
            "collective.behavior.banner.browser.viewlets",
            "collective.behavior.banner.interfaces",
            "collective.behavior.banner.setuphandlers",
            "collective.behavior.banner.slider",
            "collective.behavior.banner.testing",
            "collective.behavior.banner.tests",
            "collective.behavior.banner.tests.test_field",
            "collective.behavior.banner.tests.test_setup"
        ],
        "version": "1.0b1"
    },
    "collective.behavior.contactinfo": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.behavior",
            "collective.behavior.contactinfo",
            "collective.behavior.contactinfo.behavior",
            "collective.behavior.contactinfo.behavior.address",
            "collective.behavior.contactinfo.behavior.contactinfo",
            "collective.behavior.contactinfo.config",
            "collective.behavior.contactinfo.docs",
            "collective.behavior.contactinfo.interfaces",
            "collective.behavior.contactinfo.testing",
            "collective.behavior.contactinfo.tests",
            "collective.behavior.contactinfo.tests.test_address",
            "collective.behavior.contactinfo.tests.test_doctest",
            "collective.behavior.contactinfo.tests.test_netinfo",
            "collective.behavior.contactinfo.tests.test_phoneinfo",
            "collective.behavior.contactinfo.utils",
            "collective.behavior.contactinfo.vocabulary"
        ],
        "version": "0.9"
    },
    "collective.behavior.discount": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.behavior",
            "collective.behavior.discount",
            "collective.behavior.discount.behavior",
            "collective.behavior.discount.interfaces",
            "collective.behavior.discount.schema",
            "collective.behavior.discount.tests",
            "collective.behavior.discount.tests.base",
            "collective.behavior.discount.tests.test_Discount",
            "collective.behavior.discount.tests.test_IDiscount",
            "collective.behavior.discount.tests.test_setup"
        ],
        "version": "0.3.1"
    },
    "collective.behavior.localanalytics": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.behavior",
            "collective.behavior.localanalytics",
            "collective.behavior.localanalytics.analytics",
            "collective.behavior.localanalytics.behavior",
            "collective.behavior.localanalytics.browser",
            "collective.behavior.localanalytics.browser.view",
            "collective.behavior.localanalytics.testing",
            "collective.behavior.localanalytics.tests",
            "collective.behavior.localanalytics.tests.test_behavior"
        ],
        "version": "1.0"
    },
    "collective.behavior.localdiazo": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.behavior",
            "collective.behavior.localdiazo",
            "collective.behavior.localdiazo.behavior",
            "collective.behavior.localdiazo.browser",
            "collective.behavior.localdiazo.subscribers",
            "collective.behavior.localdiazo.testing",
            "collective.behavior.localdiazo.tests",
            "collective.behavior.localdiazo.tests.test_setup"
        ],
        "version": "1.0b3"
    },
    "collective.behavior.localregistry": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.behavior",
            "collective.behavior.localregistry",
            "collective.behavior.localregistry.behavior",
            "collective.behavior.localregistry.events",
            "collective.behavior.localregistry.interfaces",
            "collective.behavior.localregistry.proxy",
            "collective.behavior.localregistry.subscribers",
            "collective.behavior.localregistry.testing",
            "collective.behavior.localregistry.tests",
            "collective.behavior.localregistry.tests.test_setup"
        ],
        "version": "1.0b2"
    },
    "collective.behavior.localskin": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.behavior",
            "collective.behavior.localskin",
            "collective.behavior.localskin.behavior",
            "collective.behavior.localskin.testing",
            "collective.behavior.localskin.tests",
            "collective.behavior.localskin.tests.test_robot"
        ],
        "version": "0.9.2"
    },
    "collective.behavior.price": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.behavior",
            "collective.behavior.price",
            "collective.behavior.price.Extensions",
            "collective.behavior.price.Extensions.Install",
            "collective.behavior.price.behavior",
            "collective.behavior.price.interfaces",
            "collective.behavior.price.schema",
            "collective.behavior.price.tests",
            "collective.behavior.price.tests.base",
            "collective.behavior.price.tests.test_ICurrency",
            "collective.behavior.price.tests.test_IPrice",
            "collective.behavior.price.tests.test_Price",
            "collective.behavior.price.tests.test_setup",
            "collective.behavior.price.tests.test_upgrades",
            "collective.behavior.price.upgrades"
        ],
        "version": "0.4.2"
    },
    "collective.behavior.relatedmedia": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.behavior",
            "collective.behavior.relatedmedia",
            "collective.behavior.relatedmedia.behavior",
            "collective.behavior.relatedmedia.browser",
            "collective.behavior.relatedmedia.tests",
            "collective.behavior.relatedmedia.upgrades",
            "collective.behavior.relatedmedia.widget"
        ],
        "version": "1.0b1"
    },
    "collective.behavior.salable": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.behavior",
            "collective.behavior.salable",
            "collective.behavior.salable.behavior",
            "collective.behavior.salable.interfaces",
            "collective.behavior.salable.schema",
            "collective.behavior.salable.tests",
            "collective.behavior.salable.tests.base",
            "collective.behavior.salable.tests.test_ISalable",
            "collective.behavior.salable.tests.test_Salable",
            "collective.behavior.salable.tests.test_setup",
            "collective.behavior.salable.tests.test_upgrades",
            "collective.behavior.salable.upgrades"
        ],
        "version": "0.5.2"
    },
    "collective.behavior.size": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.behavior",
            "collective.behavior.size",
            "collective.behavior.size.behavior",
            "collective.behavior.size.interfaces",
            "collective.behavior.size.schema",
            "collective.behavior.size.tests",
            "collective.behavior.size.tests.base",
            "collective.behavior.size.tests.test_ISize",
            "collective.behavior.size.tests.test_Size",
            "collective.behavior.size.tests.test_setup"
        ],
        "version": "0.3"
    },
    "collective.behavior.sku": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.behavior",
            "collective.behavior.sku",
            "collective.behavior.sku.behavior",
            "collective.behavior.sku.interfaces",
            "collective.behavior.sku.schema",
            "collective.behavior.sku.tests",
            "collective.behavior.sku.tests.base",
            "collective.behavior.sku.tests.dexterity",
            "collective.behavior.sku.tests.dexterity.folder",
            "collective.behavior.sku.tests.dexterity.validator",
            "collective.behavior.sku.tests.test_ISKU",
            "collective.behavior.sku.tests.test_SKU",
            "collective.behavior.sku.tests.test_functional",
            "collective.behavior.sku.tests.test_setup"
        ],
        "version": "0.4"
    },
    "collective.behavior.sql": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.behavior",
            "collective.behavior.sql",
            "collective.behavior.sql.behavior",
            "collective.behavior.sql.behavior.behaviors",
            "collective.behavior.sql.behavior.schemaeditor",
            "collective.behavior.sql.behavior.supermodel",
            "collective.behavior.sql.browser",
            "collective.behavior.sql.browser.add",
            "collective.behavior.sql.browser.add_field",
            "collective.behavior.sql.browser.behaviors",
            "collective.behavior.sql.browser.data",
            "collective.behavior.sql.browser.edit",
            "collective.behavior.sql.browser.fields",
            "collective.behavior.sql.browser.layout",
            "collective.behavior.sql.browser.listing",
            "collective.behavior.sql.browser.overview",
            "collective.behavior.sql.browser.types",
            "collective.behavior.sql.content",
            "collective.behavior.sql.indexers",
            "collective.behavior.sql.interfaces",
            "collective.behavior.sql.monkeypatch",
            "collective.behavior.sql.ordering",
            "collective.behavior.sql.setuphandlers",
            "collective.behavior.sql.upgrades",
            "collective.behavior.sql.vocabularies"
        ],
        "version": "0.9.16"
    },
    "collective.behavior.stock": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.behavior",
            "collective.behavior.stock",
            "collective.behavior.stock.behavior",
            "collective.behavior.stock.interfaces",
            "collective.behavior.stock.schema",
            "collective.behavior.stock.tests",
            "collective.behavior.stock.tests.base",
            "collective.behavior.stock.tests.dexterity",
            "collective.behavior.stock.tests.dexterity.folder",
            "collective.behavior.stock.tests.test_IStock",
            "collective.behavior.stock.tests.test_Stock",
            "collective.behavior.stock.tests.test_setup"
        ],
        "version": "0.6"
    },
    "collective.behavior.talcondition": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.behavior",
            "collective.behavior.talcondition",
            "collective.behavior.talcondition.behavior",
            "collective.behavior.talcondition.extender",
            "collective.behavior.talcondition.interfaces",
            "collective.behavior.talcondition.setuphandlers",
            "collective.behavior.talcondition.testing",
            "collective.behavior.talcondition.tests",
            "collective.behavior.talcondition.tests.test_behavior",
            "collective.behavior.talcondition.tests.test_extender",
            "collective.behavior.talcondition.tests.test_robot",
            "collective.behavior.talcondition.tests.test_setup",
            "collective.behavior.talcondition.tests.test_utils",
            "collective.behavior.talcondition.utils"
        ],
        "version": "0.7"
    },
    "collective.behavior.vat": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.behavior",
            "collective.behavior.vat",
            "collective.behavior.vat.Extensions",
            "collective.behavior.vat.Extensions.Install",
            "collective.behavior.vat.adapter",
            "collective.behavior.vat.adapter.interface",
            "collective.behavior.vat.behavior",
            "collective.behavior.vat.interfaces",
            "collective.behavior.vat.schema",
            "collective.behavior.vat.tests",
            "collective.behavior.vat.tests.base",
            "collective.behavior.vat.tests.dexterity",
            "collective.behavior.vat.tests.dexterity.folder",
            "collective.behavior.vat.tests.test_Adapter",
            "collective.behavior.vat.tests.test_IVAT",
            "collective.behavior.vat.tests.test_VAT",
            "collective.behavior.vat.tests.test_VATRatesVocabulary",
            "collective.behavior.vat.tests.test_functional",
            "collective.behavior.vat.tests.test_setup",
            "collective.behavior.vat.vocabulary"
        ],
        "version": "0.5"
    },
    "collective.betterbrowser": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.betterbrowser",
            "collective.betterbrowser.browser"
        ],
        "version": "0.4"
    },
    "collective.blobsync": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.blobsync",
            "collective.blobsync.copyblobs",
            "collective.blobsync.main",
            "collective.blobsync.utils"
        ],
        "version": "1.0"
    },
    "collective.blog": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.blog",
            "collective.blog.browser",
            "collective.blog.browser.blog_entry",
            "collective.blog.browser.blog_listing",
            "collective.blog.content",
            "collective.blog.content.blog_entry",
            "collective.blog.interfaces",
            "collective.blog.portlets",
            "collective.blog.portlets.tags",
            "collective.blog.setuphandlers",
            "collective.blog.testing",
            "collective.blog.tests",
            "collective.blog.tests.test_blogentry",
            "collective.blog.tests.test_robot",
            "collective.blog.tests.test_setup",
            "collective.blog.viewlets",
            "collective.blog.viewlets.blog_byline"
        ],
        "version": "1.0a1"
    },
    "collective.blog.feeds": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.blog",
            "collective.blog.feeds",
            "collective.blog.feeds.adapters",
            "collective.blog.feeds.fatsyndication_adapters",
            "collective.blog.feeds.tests",
            "collective.blog.feeds.viewlets"
        ],
        "version": "2.1"
    },
    "collective.blog.portlets": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.blog",
            "collective.blog.portlets",
            "collective.blog.portlets.archive",
            "collective.blog.portlets.last_entries",
            "collective.blog.portlets.tests",
            "collective.blog.portlets.utils"
        ],
        "version": "1.6"
    },
    "collective.blog.star": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.blog",
            "collective.blog.star",
            "collective.blog.star.profile"
        ],
        "version": "1.2.1"
    },
    "collective.blog.view": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.blog",
            "collective.blog.view",
            "collective.blog.view.adapters",
            "collective.blog.view.blog",
            "collective.blog.view.default_item",
            "collective.blog.view.interfaces",
            "collective.blog.view.tests"
        ],
        "version": "1.5.2"
    },
    "collective.blogging": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.blogging",
            "collective.blogging.Extensions",
            "collective.blogging.Extensions.Install",
            "collective.blogging.actions",
            "collective.blogging.actions.autoblog",
            "collective.blogging.browser",
            "collective.blogging.browser.bloggingview",
            "collective.blogging.browser.blogview",
            "collective.blogging.browser.document_byline",
            "collective.blogging.browser.entryview",
            "collective.blogging.browser.help",
            "collective.blogging.browser.macros",
            "collective.blogging.extenders",
            "collective.blogging.handlers",
            "collective.blogging.indexer",
            "collective.blogging.interfaces",
            "collective.blogging.migration",
            "collective.blogging.nextprevious",
            "collective.blogging.patch",
            "collective.blogging.portlets",
            "collective.blogging.portlets.archive",
            "collective.blogging.portlets.filter",
            "collective.blogging.portlets.manage",
            "collective.blogging.portlets.share",
            "collective.blogging.setuphandlers",
            "collective.blogging.sharing",
            "collective.blogging.tests"
        ],
        "version": "1.3.3"
    },
    "collective.bloggingmaps": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.bloggingmaps",
            "collective.bloggingmaps.adapter",
            "collective.bloggingmaps.extenders",
            "collective.bloggingmaps.interfaces",
            "collective.bloggingmaps.tests"
        ],
        "version": "1.0b2"
    },
    "collective.blueline": {
        "cmdline": [],
        "modules": [
            "blueline",
            "blueline.Extensions",
            "blueline.Extensions.Install",
            "blueline.browser",
            "blueline.browser.viewlets",
            "blueline.config",
            "blueline.controlpanel",
            "blueline.interfaces",
            "blueline.portlets",
            "blueline.portlets.blueline",
            "blueline.setuphandlers",
            "blueline.testing",
            "blueline.tests",
            "blueline.tests.test_controlpanel",
            "blueline.tests.test_portlet",
            "blueline.tests.test_robot",
            "blueline.tests.test_setup",
            "blueline.tests.test_upgrades",
            "blueline.upgrades",
            "blueline.upgrades.v2"
        ],
        "version": "1.0b1"
    },
    "collective.blueprint.base": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.blueprint",
            "collective.blueprint.base",
            "collective.blueprint.base.blueprint",
            "collective.blueprint.base.configsource",
            "collective.blueprint.base.configsource.blueprint",
            "collective.blueprint.base.configsource.tests",
            "collective.blueprint.base.delete",
            "collective.blueprint.base.delete.blueprint",
            "collective.blueprint.base.delete.tests",
            "collective.blueprint.base.keys",
            "collective.blueprint.base.keysplitter",
            "collective.blueprint.base.keysplitter.blueprint",
            "collective.blueprint.base.keysplitter.tests",
            "collective.blueprint.base.recurser",
            "collective.blueprint.base.recurser.blueprint",
            "collective.blueprint.base.recurser.tests",
            "collective.blueprint.base.testing",
            "collective.blueprint.base.tests"
        ],
        "version": "1.0"
    },
    "collective.blueprint.dancing": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "collective.blueprint.downloader": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.blueprint",
            "collective.blueprint.downloader"
        ],
        "version": "1.0"
    },
    "collective.blueprint.jsonmigrator": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.blueprint",
            "collective.blueprint.jsonmigrator",
            "collective.blueprint.jsonmigrator.blueprint",
            "collective.blueprint.jsonmigrator.tests"
        ],
        "version": "0.1.1"
    },
    "collective.blueprint.translationlinker": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.blueprint",
            "collective.blueprint.translationlinker"
        ],
        "version": "1.0.1"
    },
    "collective.blueprint.usersandgroups": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.blueprint",
            "collective.blueprint.usersandgroups",
            "collective.blueprint.usersandgroups.blueprint",
            "collective.blueprint.usersandgroups.tests"
        ],
        "version": "0.2.0"
    },
    "collective.bouncing": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.bouncing",
            "collective.bouncing.api",
            "collective.bouncing.browser",
            "collective.bouncing.browser.form",
            "collective.bouncing.browser.interfaces",
            "collective.bouncing.browser.portlet",
            "collective.bouncing.browser.traversal",
            "collective.bouncing.channel",
            "collective.bouncing.interfaces",
            "collective.bouncing.push",
            "collective.bouncing.tests"
        ],
        "version": "0.1.2"
    },
    "collective.brasil.vocab": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.brasil",
            "collective.brasil.vocab",
            "collective.brasil.vocab.config",
            "collective.brasil.vocab.docs",
            "collective.brasil.vocab.geo",
            "collective.brasil.vocab.geo.cidades",
            "collective.brasil.vocab.geo.estados",
            "collective.brasil.vocab.geo.paises",
            "collective.brasil.vocab.telecom",
            "collective.brasil.vocab.telecom.cng",
            "collective.brasil.vocab.telecom.ddd",
            "collective.brasil.vocab.tests",
            "collective.brasil.vocab.tests.test_vocabularies"
        ],
        "version": "0.8"
    },
    "collective.braveportletsmanager": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.braveportletsmanager",
            "collective.braveportletsmanager.browser",
            "collective.braveportletsmanager.browser.editmanager",
            "collective.braveportletsmanager.browser.interfaces",
            "collective.braveportletsmanager.browser.kss",
            "collective.braveportletsmanager.retriever",
            "collective.braveportletsmanager.util"
        ],
        "version": "1.0.1"
    },
    "collective.browserdetector": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.browserdetector",
            "collective.browserdetector.browser",
            "collective.browserdetector.i18n",
            "collective.browserdetector.interfaces",
            "collective.browserdetector.portlets",
            "collective.browserdetector.portlets.browserdetector",
            "collective.browserdetector.tests",
            "collective.browserdetector.tests.base_browserdetector",
            "collective.browserdetector.tests.test_browserdetector"
        ],
        "version": "1.1.2"
    },
    "collective.btrees": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.btrees",
            "collective.btrees.adapters",
            "collective.btrees.interfaces",
            "collective.btrees.testing",
            "collective.btrees.tests",
            "collective.btrees.tests.test_functional"
        ],
        "version": "1.1"
    },
    "collective.buildbot": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.buildbot",
            "collective.buildbot.buildbot_service",
            "collective.buildbot.master",
            "collective.buildbot.master_recipe",
            "collective.buildbot.overrides",
            "collective.buildbot.poller",
            "collective.buildbot.poller_recipe",
            "collective.buildbot.project",
            "collective.buildbot.project_recipe",
            "collective.buildbot.recipe",
            "collective.buildbot.scheduler",
            "collective.buildbot.scripts",
            "collective.buildbot.slave_recipe",
            "collective.buildbot.templates",
            "collective.buildbot.tests",
            "collective.buildbot.tests.test_docs",
            "collective.buildbot.tests.test_scheduler",
            "collective.buildbot.utils"
        ],
        "version": "0.4.1"
    },
    "collective.buildout.cluster": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.buildout",
            "collective.buildout.cluster",
            "collective.buildout.cluster.async",
            "collective.buildout.cluster.base",
            "collective.buildout.cluster.client",
            "collective.buildout.cluster.cluster",
            "collective.buildout.cluster.server",
            "collective.buildout.cluster.states",
            "collective.buildout.cluster.tests",
            "collective.buildout.cluster.tests.test_docs"
        ],
        "version": "0.6"
    },
    "collective.bulksharing": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.bulksharing",
            "collective.bulksharing.browser",
            "collective.bulksharing.browser.bulksharing",
            "collective.bulksharing.tests",
            "collective.bulksharing.tests.base",
            "collective.bulksharing.tests.test_functional"
        ],
        "version": "1.0"
    },
    "collective.bumblebee": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.bumblebee",
            "collective.bumblebee.cache",
            "collective.bumblebee.conditions",
            "collective.bumblebee.interfaces",
            "collective.bumblebee.rules",
            "collective.bumblebee.selectors",
            "collective.bumblebee.tests",
            "collective.bumblebee.transform",
            "collective.bumblebee.utils"
        ],
        "version": "1.0a3"
    },
    "collective.cachepurger": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cachepurger",
            "collective.cachepurger.purger"
        ],
        "version": "1.1"
    },
    "collective.caching.hostname": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.caching",
            "collective.caching.hostname",
            "collective.caching.hostname.operations",
            "collective.caching.hostname.operations.default",
            "collective.caching.hostname.operations.utils",
            "collective.caching.hostname.setuphandlers",
            "collective.caching.hostname.testing",
            "collective.caching.hostname.tests",
            "collective.caching.hostname.tests.test_operations",
            "collective.caching.hostname.tests.test_setup",
            "collective.caching.hostname.upgrades",
            "collective.caching.hostname.upgrades.to1000"
        ],
        "version": "0.5"
    },
    "collective.calameo": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.calameo",
            "collective.calameo.browser",
            "collective.calameo.browser.calameoview",
            "collective.calameo.config",
            "collective.calameo.content",
            "collective.calameo.content.calameopdf",
            "collective.calameo.interfaces",
            "collective.calameo.interfaces.calameopdf",
            "collective.calameo.tests",
            "collective.calameo.tests.base",
            "collective.calameo.tests.test_doctest"
        ],
        "version": "0.1"
    },
    "collective.calendarview": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.calendarview",
            "collective.calendarview.browser",
            "collective.calendarview.testing",
            "collective.calendarview.tests"
        ],
        "version": "1.0"
    },
    "collective.calendarwidget": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.calendarwidget",
            "collective.calendarwidget.browser",
            "collective.calendarwidget.widget"
        ],
        "version": "0.2.5"
    },
    "collective.calltoaction": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.calltoaction",
            "collective.calltoaction.browser",
            "collective.calltoaction.browser.controlpanel",
            "collective.calltoaction.browser.viewlet",
            "collective.calltoaction.interfaces",
            "collective.calltoaction.portlets",
            "collective.calltoaction.portlets.calltoactionportlet",
            "collective.calltoaction.setuphandlers",
            "collective.calltoaction.testing",
            "collective.calltoaction.tests",
            "collective.calltoaction.tests.test_portlet",
            "collective.calltoaction.tests.test_robot",
            "collective.calltoaction.tests.test_setup",
            "collective.calltoaction.tests.test_viewlet"
        ],
        "version": "1.1.1"
    },
    "collective.captcha": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.captcha",
            "collective.captcha.browser",
            "collective.captcha.browser.captcha",
            "collective.captcha.browser.interfaces",
            "collective.captcha.browser.tests",
            "collective.captcha.form",
            "collective.captcha.form.field",
            "collective.captcha.form.interfaces",
            "collective.captcha.form.widget"
        ],
        "version": "1.7"
    },
    "collective.captchacontactinfo": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.captchacontactinfo",
            "collective.captchacontactinfo.browser",
            "collective.captchacontactinfo.browser.configlet",
            "collective.captchacontactinfo.browser.contactinfo_support_view",
            "collective.captchacontactinfo.browser.interfaces",
            "collective.captchacontactinfo.exportimport"
        ],
        "version": "1.2.1"
    },
    "collective.captchaforms": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.captchaforms",
            "collective.captchaforms.tests"
        ],
        "version": "0.1-20090814"
    },
    "collective.captionmanager": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.captionmanager",
            "collective.captionmanager.browser",
            "collective.captionmanager.browser.captionsfromyoutube_view",
            "collective.captionmanager.browser.captionstransformer_view",
            "collective.captionmanager.browser.interfaces",
            "collective.captionmanager.i18n",
            "collective.captionmanager.testing",
            "collective.captionmanager.tests",
            "collective.captionmanager.tests.base",
            "collective.captionmanager.tests.test_setup",
            "collective.captionmanager.upgrades",
            "collective.captionmanager.vocabulary"
        ],
        "version": "1.0"
    },
    "collective.carousel": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.carousel",
            "collective.carousel.browser",
            "collective.carousel.browser.leadimagetile",
            "collective.carousel.browser.viewlets",
            "collective.carousel.interfaces",
            "collective.carousel.portlets",
            "collective.carousel.portlets.carousel",
            "collective.carousel.schemaextender",
            "collective.carousel.testing",
            "collective.carousel.tests",
            "collective.carousel.tests.base",
            "collective.carousel.tests.test_adapters",
            "collective.carousel.tests.test_field",
            "collective.carousel.tests.test_integration",
            "collective.carousel.tests.test_portlet",
            "collective.carousel.tests.test_viewlet",
            "collective.carousel.upgrades",
            "collective.carousel.vocabularies"
        ],
        "version": "1.7"
    },
    "collective.carouselbehaviour": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.carouselbehaviour",
            "collective.carouselbehaviour.collectivecarouselbehaviour",
            "collective.carouselbehaviour.tests",
            "collective.carouselbehaviour.viewlets"
        ],
        "version": "0.1"
    },
    "collective.cart.core": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cart",
            "collective.cart.core",
            "collective.cart.core.adapter",
            "collective.cart.core.adapter.article",
            "collective.cart.core.adapter.interface",
            "collective.cart.core.adapter.order",
            "collective.cart.core.adapter.order_container",
            "collective.cart.core.browser",
            "collective.cart.core.browser.interfaces",
            "collective.cart.core.browser.miscellaneous",
            "collective.cart.core.browser.view",
            "collective.cart.core.browser.viewlet",
            "collective.cart.core.content",
            "collective.cart.core.event",
            "collective.cart.core.interfaces",
            "collective.cart.core.portlets",
            "collective.cart.core.portlets.cart",
            "collective.cart.core.schema",
            "collective.cart.core.session",
            "collective.cart.core.subscriber",
            "collective.cart.core.tests",
            "collective.cart.core.tests.base",
            "collective.cart.core.tests.test_AddToCartViewlet",
            "collective.cart.core.tests.test_ArticleAdapter",
            "collective.cart.core.tests.test_CartArticleListingViewlet",
            "collective.cart.core.tests.test_CartView",
            "collective.cart.core.tests.test_CheckOutView",
            "collective.cart.core.tests.test_OrderAdapter",
            "collective.cart.core.tests.test_OrderArticleListingViewlet",
            "collective.cart.core.tests.test_OrderContainerAdapter",
            "collective.cart.core.tests.test_OrderListingView",
            "collective.cart.core.tests.test_OrderListingViewlet",
            "collective.cart.core.tests.test_OrderView",
            "collective.cart.core.tests.test_ShoppingSite",
            "collective.cart.core.tests.test_ValidateOrderIDUniqueness",
            "collective.cart.core.tests.test_anonymous",
            "collective.cart.core.tests.test_content",
            "collective.cart.core.tests.test_functional",
            "collective.cart.core.tests.test_manager",
            "collective.cart.core.tests.test_member",
            "collective.cart.core.tests.test_portlet",
            "collective.cart.core.tests.test_setup",
            "collective.cart.core.tests.test_upgrades",
            "collective.cart.core.upgrades",
            "collective.cart.core.validator"
        ],
        "version": "0.9.1"
    },
    "collective.cart.shipping": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cart",
            "collective.cart.shipping",
            "collective.cart.shipping.Extensions",
            "collective.cart.shipping.Extensions.Install",
            "collective.cart.shipping.browser",
            "collective.cart.shipping.browser.interfaces",
            "collective.cart.shipping.browser.template",
            "collective.cart.shipping.content",
            "collective.cart.shipping.content.shipping",
            "collective.cart.shipping.interfaces",
            "collective.cart.shipping.schema",
            "collective.cart.shipping.setuphandlers",
            "collective.cart.shipping.tests",
            "collective.cart.shipping.tests.base",
            "collective.cart.shipping.tests.test_ShippingMethod",
            "collective.cart.shipping.tests.test_content",
            "collective.cart.shipping.tests.test_functional",
            "collective.cart.shipping.tests.test_setup",
            "collective.cart.shipping.tests.test_upgrades",
            "collective.cart.shipping.upgrades",
            "collective.cart.shipping.vocabulary"
        ],
        "version": "0.7"
    },
    "collective.cart.shopping": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cart",
            "collective.cart.shopping",
            "collective.cart.shopping.Extensions",
            "collective.cart.shopping.Extensions.Install",
            "collective.cart.shopping.adapter",
            "collective.cart.shopping.adapter.article",
            "collective.cart.shopping.adapter.content_listing_object",
            "collective.cart.shopping.adapter.interface",
            "collective.cart.shopping.adapter.order",
            "collective.cart.shopping.adapter.order_article",
            "collective.cart.shopping.adapter.validator",
            "collective.cart.shopping.browser",
            "collective.cart.shopping.browser.ajax",
            "collective.cart.shopping.browser.base",
            "collective.cart.shopping.browser.interfaces",
            "collective.cart.shopping.browser.miscellaneous",
            "collective.cart.shopping.browser.view",
            "collective.cart.shopping.browser.viewlet",
            "collective.cart.shopping.browser.viewletmanager",
            "collective.cart.shopping.config",
            "collective.cart.shopping.content",
            "collective.cart.shopping.event",
            "collective.cart.shopping.interfaces",
            "collective.cart.shopping.schema",
            "collective.cart.shopping.subscriber",
            "collective.cart.shopping.tests",
            "collective.cart.shopping.tests.base",
            "collective.cart.shopping.tests.test_AddSubtractStockViewlet",
            "collective.cart.shopping.tests.test_AddToCartViewlet",
            "collective.cart.shopping.tests.test_ArticleAdapter",
            "collective.cart.shopping.tests.test_ArticleContainerView",
            "collective.cart.shopping.tests.test_ArticleContentListingObject",
            "collective.cart.shopping.tests.test_ArticleImagesViewlet",
            "collective.cart.shopping.tests.test_ArticleListingView",
            "collective.cart.shopping.tests.test_ArticleView",
            "collective.cart.shopping.tests.test_ArticlesInArticleContainerViewlet",
            "collective.cart.shopping.tests.test_ArticlesInArticleViewlet",
            "collective.cart.shopping.tests.test_BaseAddToCartViewlet",
            "collective.cart.shopping.tests.test_BaseArticleView",
            "collective.cart.shopping.tests.test_BaseArticleViewlet",
            "collective.cart.shopping.tests.test_BaseCartArticleListingViewlet",
            "collective.cart.shopping.tests.test_BaseCheckOutButtonsViewlet",
            "collective.cart.shopping.tests.test_BaseOrderMailTemplateView",
            "collective.cart.shopping.tests.test_BillingAndShippingCheckOutButtonsViewlet",
            "collective.cart.shopping.tests.test_BillingAndShippingShippingMethodsViewlet",
            "collective.cart.shopping.tests.test_BillingAndShippingView",
            "collective.cart.shopping.tests.test_CartArticleListingViewlet",
            "collective.cart.shopping.tests.test_CartArticleMultiAdapter",
            "collective.cart.shopping.tests.test_CartArticlesTotalViewlet",
            "collective.cart.shopping.tests.test_CartCheckOutButtonsViewlet",
            "collective.cart.shopping.tests.test_CartContentDescriptionViewlet",
            "collective.cart.shopping.tests.test_CartView",
            "collective.cart.shopping.tests.test_CheckOutFlowViewlet",
            "collective.cart.shopping.tests.test_CheckOutView",
            "collective.cart.shopping.tests.test_CustomerInfoView",
            "collective.cart.shopping.tests.test_LocaleUtility",
            "collective.cart.shopping.tests.test_Message",
            "collective.cart.shopping.tests.test_Miscellaneous",
            "collective.cart.shopping.tests.test_OrderAdapter",
            "collective.cart.shopping.tests.test_OrderArticle",
            "collective.cart.shopping.tests.test_OrderArticleAdapter",
            "collective.cart.shopping.tests.test_OrderConfirmationCartArticlesViewlet",
            "collective.cart.shopping.tests.test_OrderConfirmationTermsViewlet",
            "collective.cart.shopping.tests.test_OrderConfirmationView",
            "collective.cart.shopping.tests.test_OrderContentViewlet",
            "collective.cart.shopping.tests.test_OrderListingViewletManager",
            "collective.cart.shopping.tests.test_PriceUtility",
            "collective.cart.shopping.tests.test_RelatedArticlesViewlet",
            "collective.cart.shopping.tests.test_SelectSubarticle",
            "collective.cart.shopping.tests.test_ShoppingSite",
            "collective.cart.shopping.tests.test_ShoppingSiteMultiAdapter",
            "collective.cart.shopping.tests.test_StockView",
            "collective.cart.shopping.tests.test_ThanksView",
            "collective.cart.shopping.tests.test_ToCustomerOrderMailTemplateView",
            "collective.cart.shopping.tests.test_ToShopOrderMailTemplateView",
            "collective.cart.shopping.tests.test_UnicodeUtility",
            "collective.cart.shopping.tests.test_anonymous",
            "collective.cart.shopping.tests.test_billing_and_shipping",
            "collective.cart.shopping.tests.test_content",
            "collective.cart.shopping.tests.test_create_shop",
            "collective.cart.shopping.tests.test_functional",
            "collective.cart.shopping.tests.test_member",
            "collective.cart.shopping.tests.test_notify_ordered",
            "collective.cart.shopping.tests.test_setup",
            "collective.cart.shopping.tests.test_shop",
            "collective.cart.shopping.tests.test_subscriber",
            "collective.cart.shopping.tests.test_upgrades",
            "collective.cart.shopping.upgrades",
            "collective.cart.shopping.utility",
            "collective.cart.shopping.utility.locale",
            "collective.cart.shopping.utility.money",
            "collective.cart.shopping.utility.price",
            "collective.cart.shopping.utility.styling",
            "collective.cart.shopping.utility.unicode",
            "collective.cart.shopping.vocabulary"
        ],
        "version": "0.12.2"
    },
    "collective.cart.stock": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cart",
            "collective.cart.stock",
            "collective.cart.stock.browser",
            "collective.cart.stock.browser.interfaces",
            "collective.cart.stock.content",
            "collective.cart.stock.interfaces",
            "collective.cart.stock.schema",
            "collective.cart.stock.subscriber",
            "collective.cart.stock.tests",
            "collective.cart.stock.tests.base",
            "collective.cart.stock.tests.dexterity",
            "collective.cart.stock.tests.dexterity.folder",
            "collective.cart.stock.tests.test_content",
            "collective.cart.stock.tests.test_functional",
            "collective.cart.stock.tests.test_setup"
        ],
        "version": "0.5"
    },
    "collective.cas4plone": {
        "cmdline": [],
        "modules": [],
        "version": "1.0a3"
    },
    "collective.castle": {
        "cmdline": [],
        "modules": [],
        "version": "1.2"
    },
    "collective.catalogcache": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.catalogcache",
            "collective.catalogcache.patch"
        ],
        "version": "0.2"
    },
    "collective.catalogcleanup": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.catalogcleanup",
            "collective.catalogcleanup.browser",
            "collective.catalogcleanup.testing",
            "collective.catalogcleanup.tests",
            "collective.catalogcleanup.tests.test_functional"
        ],
        "version": "1.7.1"
    },
    "collective.catalogexport": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.catalogexport",
            "collective.catalogexport.export",
            "collective.catalogexport.tests"
        ],
        "version": "0.1"
    },
    "collective.categories": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.categories",
            "collective.categories.backend",
            "collective.categories.backend_atvm",
            "collective.categories.backend_linguakeyword",
            "collective.categories.extender",
            "collective.categories.layer",
            "collective.categories.testing",
            "collective.categories.tests",
            "collective.categories.tests.base",
            "collective.categories.tests.test_setup",
            "collective.categories.upgrades",
            "collective.categories.viewlet",
            "collective.categories.vocabulary"
        ],
        "version": "1.0"
    },
    "collective.categorizing": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.categorizing",
            "collective.categorizing.adapter",
            "collective.categorizing.adapter.category",
            "collective.categorizing.browser",
            "collective.categorizing.browser.category",
            "collective.categorizing.content",
            "collective.categorizing.content.category",
            "collective.categorizing.content.categorycontainer",
            "collective.categorizing.exceptions",
            "collective.categorizing.interfaces",
            "collective.categorizing.interfaces.adapter",
            "collective.categorizing.interfaces.content",
            "collective.categorizing.interfaces.viewlet_manager",
            "collective.categorizing.portlets",
            "collective.categorizing.portlets.categorizing",
            "collective.categorizing.subscriber",
            "collective.categorizing.subscriber.category",
            "collective.categorizing.subscriber.events",
            "collective.categorizing.tests",
            "collective.categorizing.tests.base",
            "collective.categorizing.tests.test_functional",
            "collective.categorizing.tests.test_integration",
            "collective.categorizing.tests.test_portlet_categorizing",
            "collective.categorizing.tests.test_unittest",
            "collective.categorizing.utility",
            "collective.categorizing.utility.vocabulary"
        ],
        "version": "0.2.3"
    },
    "collective.cdn.alternatehostname": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cdn",
            "collective.cdn.alternatehostname",
            "collective.cdn.alternatehostname.config",
            "collective.cdn.alternatehostname.docs",
            "collective.cdn.alternatehostname.provider",
            "collective.cdn.alternatehostname.tests"
        ],
        "version": "0.5"
    },
    "collective.cdn.coral": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cdn",
            "collective.cdn.coral",
            "collective.cdn.coral.config",
            "collective.cdn.coral.docs",
            "collective.cdn.coral.provider",
            "collective.cdn.coral.tests"
        ],
        "version": "0.5"
    },
    "collective.cdn.core": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cdn",
            "collective.cdn.core",
            "collective.cdn.core.browser",
            "collective.cdn.core.browser.base",
            "collective.cdn.core.browser.interfaces",
            "collective.cdn.core.browser.kss",
            "collective.cdn.core.browser.scripts",
            "collective.cdn.core.browser.styles",
            "collective.cdn.core.config",
            "collective.cdn.core.controlpanel",
            "collective.cdn.core.controlpanel.cdn",
            "collective.cdn.core.docs",
            "collective.cdn.core.image",
            "collective.cdn.core.interfaces",
            "collective.cdn.core.interfaces.provider",
            "collective.cdn.core.setuphandlers",
            "collective.cdn.core.testing",
            "collective.cdn.core.tests",
            "collective.cdn.core.tests.provider",
            "collective.cdn.core.tests.test_functional",
            "collective.cdn.core.tests.test_image",
            "collective.cdn.core.upgrades",
            "collective.cdn.core.upgrades.to01",
            "collective.cdn.core.utils",
            "collective.cdn.core.vocabularies"
        ],
        "version": "0.6"
    },
    "collective.cdn.multiplehostnames": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cdn",
            "collective.cdn.multiplehostnames",
            "collective.cdn.multiplehostnames.config",
            "collective.cdn.multiplehostnames.docs",
            "collective.cdn.multiplehostnames.provider",
            "collective.cdn.multiplehostnames.testing",
            "collective.cdn.multiplehostnames.tests",
            "collective.cdn.multiplehostnames.tests.test_funcional"
        ],
        "version": "0.6"
    },
    "collective.celery": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.celery",
            "collective.celery.base_task",
            "collective.celery.functionrunner",
            "collective.celery.scripts",
            "collective.celery.scripts.ccelery",
            "collective.celery.testing",
            "collective.celery.tests",
            "collective.celery.tests.base",
            "collective.celery.tests.test_base_task",
            "collective.celery.tests.test_functionrunner",
            "collective.celery.tests.test_utils",
            "collective.celery.utils"
        ],
        "version": "1.0.6"
    },
    "collective.check-munin": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.check_munin",
            "collective.check_munin.check_munin"
        ],
        "version": "1.0"
    },
    "collective.checkdocs": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.checkdocs",
            "collective.checkdocs.tests"
        ],
        "version": "0.2"
    },
    "collective.checkpermission": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.checkpermission",
            "collective.checkpermission.check",
            "collective.checkpermission.interfaces",
            "collective.checkpermission.tests",
            "collective.checkpermission.tests.base",
            "collective.checkpermission.tests.test_check",
            "collective.checkpermission.tests.test_doctest"
        ],
        "version": "1.0"
    },
    "collective.checktranslated": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.checktranslated",
            "collective.checktranslated.setuphandlers",
            "collective.checktranslated.symptoms",
            "collective.checktranslated.testing",
            "collective.checktranslated.tests",
            "collective.checktranslated.tests.test_translated"
        ],
        "version": "1.0.1"
    },
    "collective.chimpfeed": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.chimpfeed",
            "collective.chimpfeed.api",
            "collective.chimpfeed.campaign",
            "collective.chimpfeed.controlpanel",
            "collective.chimpfeed.feeds",
            "collective.chimpfeed.form",
            "collective.chimpfeed.interfaces",
            "collective.chimpfeed.legacy",
            "collective.chimpfeed.newsletter",
            "collective.chimpfeed.permissions",
            "collective.chimpfeed.portlet",
            "collective.chimpfeed.schema",
            "collective.chimpfeed.settings",
            "collective.chimpfeed.setuphandlers",
            "collective.chimpfeed.splitters",
            "collective.chimpfeed.tests",
            "collective.chimpfeed.upgradesteps",
            "collective.chimpfeed.vocabularies"
        ],
        "version": "2.0"
    },
    "collective.chromatable": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.chromatable",
            "collective.chromatable.interfaces",
            "collective.chromatable.tests"
        ],
        "version": "1.3.0"
    },
    "collective.cicero": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cicero",
            "collective.cicero.browser",
            "collective.cicero.config",
            "collective.cicero.interfaces",
            "collective.cicero.tests",
            "collective.cicero.tests.tests"
        ],
        "version": "1.1"
    },
    "collective.civicrm": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.civicrm",
            "collective.civicrm.adapters",
            "collective.civicrm.browser",
            "collective.civicrm.browser.base",
            "collective.civicrm.browser.contact",
            "collective.civicrm.browser.find_contacts",
            "collective.civicrm.browser.relationships",
            "collective.civicrm.config",
            "collective.civicrm.controlpanel",
            "collective.civicrm.interfaces",
            "collective.civicrm.logger",
            "collective.civicrm.pythoncivicrm",
            "collective.civicrm.setuphandlers",
            "collective.civicrm.testing",
            "collective.civicrm.tests",
            "collective.civicrm.tests.test_controlpanel",
            "collective.civicrm.tests.test_membership",
            "collective.civicrm.tests.test_robot",
            "collective.civicrm.tests.test_setup",
            "collective.civicrm.tests.test_upgrades",
            "collective.civicrm.tests.test_views",
            "collective.civicrm.timer",
            "collective.civicrm.upgrades",
            "collective.civicrm.upgrades.v1010",
            "collective.civicrm.upgrades.v1010.handler",
            "collective.civicrm.userdataschema"
        ],
        "version": "1.0a1"
    },
    "collective.ckeditor": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ckeditor",
            "collective.ckeditor.Extensions",
            "collective.ckeditor.Extensions.Install",
            "collective.ckeditor.browser",
            "collective.ckeditor.browser.ckeditorfinder",
            "collective.ckeditor.browser.ckeditorsettings",
            "collective.ckeditor.browser.ckeditorview",
            "collective.ckeditor.browser.convertuid",
            "collective.ckeditor.browser.vocabularies",
            "collective.ckeditor.config",
            "collective.ckeditor.setuphandlers",
            "collective.ckeditor.testing",
            "collective.ckeditor.tests",
            "collective.ckeditor.tests.keyword",
            "collective.ckeditor.tests.test_ckeditorview",
            "collective.ckeditor.tests.test_doctests",
            "collective.ckeditor.tests.test_robot",
            "collective.ckeditor.transforms",
            "collective.ckeditor.transforms.ck_ruid_to_url",
            "collective.ckeditor.upgrades",
            "collective.ckeditor.utils",
            "collective.ckeditor.utils.base2zope"
        ],
        "version": "4.5.0"
    },
    "collective.ckeditortemplates": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ckeditortemplates",
            "collective.ckeditortemplates.browser",
            "collective.ckeditortemplates.browser.cktemplatelisting",
            "collective.ckeditortemplates.browser.tests",
            "collective.ckeditortemplates.browser.tests.test_cktemplatelisting",
            "collective.ckeditortemplates.cktemplate",
            "collective.ckeditortemplates.setuphandlers",
            "collective.ckeditortemplates.testing",
            "collective.ckeditortemplates.tests",
            "collective.ckeditortemplates.tests.test_cktemplate",
            "collective.ckeditortemplates.tests.test_robot",
            "collective.ckeditortemplates.upgrades"
        ],
        "version": "0.3.2"
    },
    "collective.clamav": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.clamav",
            "collective.clamav.browser",
            "collective.clamav.browser.controlpanel",
            "collective.clamav.interfaces",
            "collective.clamav.scanner",
            "collective.clamav.schema",
            "collective.clamav.setuphandlers",
            "collective.clamav.testing",
            "collective.clamav.tests",
            "collective.clamav.tests.test_functional",
            "collective.clamav.tests.test_robot",
            "collective.clamav.tests.test_scanner",
            "collective.clamav.tests.test_setup",
            "collective.clamav.validator"
        ],
        "version": "2.0a2"
    },
    "collective.classification": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.classification",
            "collective.classification.adapters",
            "collective.classification.adapters.atcontenttypes",
            "collective.classification.browser",
            "collective.classification.browser.classificationstats",
            "collective.classification.browser.clusterize",
            "collective.classification.browser.controlpanel",
            "collective.classification.browser.similaritems",
            "collective.classification.browser.suggestcategories",
            "collective.classification.browser.terms",
            "collective.classification.classifiers",
            "collective.classification.classifiers.clustering",
            "collective.classification.classifiers.nounbayesclassifier",
            "collective.classification.classifiers.npextractor",
            "collective.classification.classifiers.similarity",
            "collective.classification.classifiers.utils",
            "collective.classification.data",
            "collective.classification.data.downloader",
            "collective.classification.data.trainers",
            "collective.classification.indexer",
            "collective.classification.interfaces",
            "collective.classification.subscribers",
            "collective.classification.taggers",
            "collective.classification.taggers.dutch",
            "collective.classification.taggers.english",
            "collective.classification.taggers.taggers",
            "collective.classification.taggers.tokenizers",
            "collective.classification.tests",
            "collective.classification.tests.base",
            "collective.classification.tests.layer",
            "collective.classification.tests.test_adapters",
            "collective.classification.tests.test_clustering",
            "collective.classification.tests.test_doctests",
            "collective.classification.tests.test_extractor",
            "collective.classification.tests.test_indexer",
            "collective.classification.tests.test_subscribers",
            "collective.classification.tests.test_tagger",
            "collective.classification.tests.test_tokenizer",
            "collective.classification.tests.util"
        ],
        "version": "0.1b2"
    },
    "collective.classifieds": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.classifieds",
            "collective.classifieds.browser",
            "collective.classifieds.browser.all_classifieds_view",
            "collective.classifieds.browser.classified_view",
            "collective.classifieds.browser.classifieds_by_author_view",
            "collective.classifieds.browser.classifiedscategory_view",
            "collective.classifieds.browser.list_view",
            "collective.classifieds.browser.search",
            "collective.classifieds.config",
            "collective.classifieds.content",
            "collective.classifieds.content.Classified",
            "collective.classifieds.content.Classifieds",
            "collective.classifieds.content.ClassifiedsCategory",
            "collective.classifieds.content.OrderedClassifieds",
            "collective.classifieds.content.OrderedClassifiedsCategory",
            "collective.classifieds.content.Validators",
            "collective.classifieds.content.interfaces",
            "collective.classifieds.setuphandlers",
            "collective.classifieds.tests",
            "collective.classifieds.tests.base",
            "collective.classifieds.tests.test_classifieds"
        ],
        "version": "1.7"
    },
    "collective.classifiers": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.classifiers",
            "collective.classifiers.behaviors",
            "collective.classifiers.indexers",
            "collective.classifiers.migration",
            "collective.classifiers.testing",
            "collective.classifiers.tests",
            "collective.classifiers.tests.test_integration",
            "collective.classifiers.tests.test_unit",
            "collective.classifiers.utils",
            "collective.classifiers.vocabularies"
        ],
        "version": "0.4.1"
    },
    "collective.clipboardupload": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.clipboardupload",
            "collective.clipboardupload.imageupload",
            "collective.clipboardupload.testing",
            "collective.clipboardupload.tests",
            "collective.clipboardupload.tests.test_doctests",
            "collective.clipboardupload.tests.test_robot"
        ],
        "version": "1.0"
    },
    "collective.cmcicpaiement": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cmcicpaiement",
            "collective.cmcicpaiement.aller",
            "collective.cmcicpaiement.i18n",
            "collective.cmcicpaiement.layer",
            "collective.cmcicpaiement.retour",
            "collective.cmcicpaiement.sceau",
            "collective.cmcicpaiement.settings",
            "collective.cmcicpaiement.testing",
            "collective.cmcicpaiement.tests",
            "collective.cmcicpaiement.tests.base",
            "collective.cmcicpaiement.tests.test_aller",
            "collective.cmcicpaiement.tests.test_retour",
            "collective.cmcicpaiement.tests.test_sceau",
            "collective.cmcicpaiement.tests.test_setup",
            "collective.cmcicpaiement.tests.utils",
            "collective.cmcicpaiement.upgrades"
        ],
        "version": "1.0b1"
    },
    "collective.cmfeditionsdexteritycompat": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cmfeditionsdexteritycompat",
            "collective.cmfeditionsdexteritycompat.browser",
            "collective.cmfeditionsdexteritycompat.browser.views",
            "collective.cmfeditionsdexteritycompat.config",
            "collective.cmfeditionsdexteritycompat.setuphandlers",
            "collective.cmfeditionsdexteritycompat.testing",
            "collective.cmfeditionsdexteritycompat.tests",
            "collective.cmfeditionsdexteritycompat.tests.test_functional",
            "collective.cmfeditionsdexteritycompat.tests.test_install"
        ],
        "version": "0.1b8"
    },
    "collective.cmfskininspector": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "collective.cmisbrowser": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cmisbrowser",
            "collective.cmisbrowser.browser",
            "collective.cmisbrowser.browser.forms",
            "collective.cmisbrowser.browser.icons",
            "collective.cmisbrowser.browser.settings",
            "collective.cmisbrowser.browser.urls",
            "collective.cmisbrowser.browser.viewlets",
            "collective.cmisbrowser.browser.views",
            "collective.cmisbrowser.cmis",
            "collective.cmisbrowser.cmis.api",
            "collective.cmisbrowser.cmis.content",
            "collective.cmisbrowser.cmis.result",
            "collective.cmisbrowser.connector",
            "collective.cmisbrowser.connector.rest",
            "collective.cmisbrowser.connector.soap",
            "collective.cmisbrowser.content",
            "collective.cmisbrowser.content.cmisbrowser",
            "collective.cmisbrowser.errors",
            "collective.cmisbrowser.interfaces",
            "collective.cmisbrowser.tests",
            "collective.cmisbrowser.tests.base",
            "collective.cmisbrowser.tests.test_api",
            "collective.cmisbrowser.tests.test_browser",
            "collective.cmisbrowser.tests.test_connector"
        ],
        "version": "1.0"
    },
    "collective.cmisquery": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cmisquery",
            "collective.cmisquery.browser",
            "collective.cmisquery.browser.forms",
            "collective.cmisquery.browser.views",
            "collective.cmisquery.content",
            "collective.cmisquery.content.cmisquery",
            "collective.cmisquery.interfaces"
        ],
        "version": "1.0"
    },
    "collective.cmissearch": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cmissearch",
            "collective.cmissearch.cmis",
            "collective.cmissearch.default",
            "collective.cmissearch.interfaces",
            "collective.cmissearch.portlets",
            "collective.cmissearch.search"
        ],
        "version": "1.0"
    },
    "collective.codemirror": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.codemirror"
        ],
        "version": "0.2"
    },
    "collective.collage.blogging": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.collage",
            "collective.collage.blogging",
            "collective.collage.blogging.browser",
            "collective.collage.blogging.browser.utils",
            "collective.collage.blogging.browser.views",
            "collective.collage.blogging.interfaces",
            "collective.collage.blogging.tests"
        ],
        "version": "1.0.1"
    },
    "collective.collage.contentleadimage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.collage",
            "collective.collage.contentleadimage",
            "collective.collage.contentleadimage.browser"
        ],
        "version": "0.1"
    },
    "collective.collage.easyslider": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.collage",
            "collective.collage.easyslider",
            "collective.collage.easyslider.browser",
            "collective.collage.easyslider.browser.utils",
            "collective.collage.easyslider.browser.viewlets",
            "collective.collage.easyslider.browser.views",
            "collective.collage.easyslider.config",
            "collective.collage.easyslider.interfaces",
            "collective.collage.easyslider.setuphandlers",
            "collective.collage.easyslider.tests"
        ],
        "version": "1.0.4"
    },
    "collective.collage.feedfeeder": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.collage",
            "collective.collage.feedfeeder",
            "collective.collage.feedfeeder.browser"
        ],
        "version": "1.0"
    },
    "collective.collage.imagetags": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.collage",
            "collective.collage.imagetags",
            "collective.collage.imagetags.browser",
            "collective.collage.imagetags.browser.interfaces",
            "collective.collage.imagetags.browser.viewlets",
            "collective.collage.imagetags.browser.views",
            "collective.collage.imagetags.tests",
            "collective.collage.imagetags.tests.base",
            "collective.collage.imagetags.tests.image_hack",
            "collective.collage.imagetags.tests.image_hack.image_layout",
            "collective.collage.imagetags.tests.test_doctest",
            "collective.collage.imagetags.vocabulary"
        ],
        "version": "1.0.1"
    },
    "collective.collage.innerfade": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.collage",
            "collective.collage.innerfade",
            "collective.collage.innerfade.browser",
            "collective.collage.innerfade.tests"
        ],
        "version": "1.0-final"
    },
    "collective.collage.maps": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.collage",
            "collective.collage.maps",
            "collective.collage.maps.patches",
            "collective.collage.maps.patches.map",
            "collective.collage.maps.views"
        ],
        "version": "1.2.1"
    },
    "collective.collage.megamenu": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.collage",
            "collective.collage.megamenu",
            "collective.collage.megamenu.browser",
            "collective.collage.megamenu.browser.collage",
            "collective.collage.megamenu.browser.controlpanel",
            "collective.collage.megamenu.browser.interfaces",
            "collective.collage.megamenu.browser.renderer",
            "collective.collage.megamenu.browser.viewlet",
            "collective.collage.megamenu.browser.views",
            "collective.collage.megamenu.interfaces",
            "collective.collage.megamenu.patch",
            "collective.collage.megamenu.setuphandlers",
            "collective.collage.megamenu.tests",
            "collective.collage.megamenu.tests.base",
            "collective.collage.megamenu.tests.test_doctest",
            "collective.collage.megamenu.vocabulary"
        ],
        "version": "1.1.2"
    },
    "collective.collage.nested": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.collage",
            "collective.collage.nested",
            "collective.collage.nested.browser",
            "collective.collage.nested.browser.views",
            "collective.collage.nested.patch",
            "collective.collage.nested.tests",
            "collective.collage.nested.tests.base",
            "collective.collage.nested.tests.test_doctest"
        ],
        "version": "1.0"
    },
    "collective.collage.ploneformgen": {
        "cmdline": [],
        "modules": [],
        "version": "1.0a1"
    },
    "collective.collage.plonetruegallery": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.collage",
            "collective.collage.plonetruegallery",
            "collective.collage.plonetruegallery.patches",
            "collective.collage.plonetruegallery.patches.plonetruegallery_browser_util",
            "collective.collage.plonetruegallery.views"
        ],
        "version": "1.0b1"
    },
    "collective.collage.portlets": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.collage",
            "collective.collage.portlets",
            "collective.collage.portlets.browser"
        ],
        "version": "0.3.1"
    },
    "collective.collage.rssdocument": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.collage",
            "collective.collage.rssdocument",
            "collective.collage.rssdocument.tests",
            "collective.collage.rssdocument.view"
        ],
        "version": "0.2"
    },
    "collective.collage.windowz": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.collage",
            "collective.collage.windowz",
            "collective.collage.windowz.browser"
        ],
        "version": "1.0"
    },
    "collective.collection.alphabetic": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.collection",
            "collective.collection.alphabetic",
            "collective.collection.alphabetic.browser",
            "collective.collection.alphabetic.browser.category_alphabetic",
            "collective.collection.alphabetic.browser.character_options",
            "collective.collection.alphabetic.browser.topic_alphabetic",
            "collective.collection.alphabetic.config",
            "collective.collection.alphabetic.interfaces",
            "collective.collection.alphabetic.tests",
            "collective.collection.alphabetic.tests.base",
            "collective.collection.alphabetic.tests.test_doctest",
            "collective.collection.alphabetic.tests.test_setup",
            "collective.collection.alphabetic.utility",
            "collective.collection.alphabetic.utility.character"
        ],
        "version": "0.4.5-"
    },
    "collective.collection.yearview": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.collection",
            "collective.collection.yearview",
            "collective.collection.yearview.browser",
            "collective.collection.yearview.browser.views",
            "collective.collection.yearview.tests"
        ],
        "version": "1.0"
    },
    "collective.colorbox": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.colorbox",
            "collective.colorbox.browser",
            "collective.colorbox.tests"
        ],
        "version": "0.1.6rc2"
    },
    "collective.comicbookreader": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.comicbookreader",
            "collective.comicbookreader.browser",
            "collective.comicbookreader.browser.extract",
            "collective.comicbookreader.browser.interfaces",
            "collective.comicbookreader.browser.view",
            "collective.comicbookreader.config",
            "collective.comicbookreader.tests"
        ],
        "version": "1.0"
    },
    "collective.complexrecordsproxy": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.complexrecordsproxy",
            "collective.complexrecordsproxy.complexrecordsproxy"
        ],
        "version": "1.0"
    },
    "collective.compoundcriterion": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.compoundcriterion",
            "collective.compoundcriterion.interfaces",
            "collective.compoundcriterion.queryparser",
            "collective.compoundcriterion.setuphandlers",
            "collective.compoundcriterion.testing",
            "collective.compoundcriterion.tests",
            "collective.compoundcriterion.tests.adapter",
            "collective.compoundcriterion.tests.test_criterion",
            "collective.compoundcriterion.tests.test_robot",
            "collective.compoundcriterion.tests.test_setup",
            "collective.compoundcriterion.vocabularies"
        ],
        "version": "0.3"
    },
    "collective.conference": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.conference",
            "collective.conference.browser",
            "collective.conference.browser.agenda",
            "collective.conference.browser.conference_view",
            "collective.conference.browser.listings",
            "collective.conference.browser.location",
            "collective.conference.browser.macros",
            "collective.conference.browser.participant_view",
            "collective.conference.browser.propose",
            "collective.conference.browser.register",
            "collective.conference.browser.session_view",
            "collective.conference.conference",
            "collective.conference.indexer",
            "collective.conference.interfaces",
            "collective.conference.participant",
            "collective.conference.provider",
            "collective.conference.provider.listing",
            "collective.conference.session",
            "collective.conference.tests",
            "collective.conference.vocabulary"
        ],
        "version": "1.0a2"
    },
    "collective.configviews": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.configviews",
            "collective.configviews.browser",
            "collective.configviews.browser.configurable_view",
            "collective.configviews.browser.form",
            "collective.configviews.browser.viewlet",
            "collective.configviews.events",
            "collective.configviews.interfaces",
            "collective.configviews.mutator",
            "collective.configviews.provider",
            "collective.configviews.tests",
            "collective.configviews.tests.base",
            "collective.configviews.tests.example",
            "collective.configviews.tests.example.browser",
            "collective.configviews.tests.fake",
            "collective.configviews.tests.layer",
            "collective.configviews.tests.test_mutator_zopeannotation",
            "collective.configviews.tests.test_provider",
            "collective.configviews.tests.test_provider_interfacedefault",
            "collective.configviews.tests.test_provider_ploneappregistry",
            "collective.configviews.tests.test_provider_zopeannotation"
        ],
        "version": "3.1.0"
    },
    "collective.confirmableforms": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.confirmableforms",
            "collective.confirmableforms.browser",
            "collective.confirmableforms.config",
            "collective.confirmableforms.content",
            "collective.confirmableforms.content.confirmedFormMailerAdapter",
            "collective.confirmableforms.mailer",
            "collective.confirmableforms.setuphandlers",
            "collective.confirmableforms.tests",
            "collective.confirmableforms.utils"
        ],
        "version": "1.4.3"
    },
    "collective.contact.contactlist": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contact",
            "collective.contact.contactlist",
            "collective.contact.contactlist.adapter",
            "collective.contact.contactlist.api",
            "collective.contact.contactlist.browser",
            "collective.contact.contactlist.browser.addtolist",
            "collective.contact.contactlist.browser.eeawidget",
            "collective.contact.contactlist.browser.eeawidget.widget",
            "collective.contact.contactlist.browser.excelexport",
            "collective.contact.contactlist.browser.facetednav",
            "collective.contact.contactlist.browser.removefromlist",
            "collective.contact.contactlist.browser.replacelist",
            "collective.contact.contactlist.browser.view",
            "collective.contact.contactlist.content",
            "collective.contact.contactlist.content.contactlist",
            "collective.contact.contactlist.interfaces",
            "collective.contact.contactlist.setuphandlers",
            "collective.contact.contactlist.source",
            "collective.contact.contactlist.testing",
            "collective.contact.contactlist.tests",
            "collective.contact.contactlist.tests.test_robot",
            "collective.contact.contactlist.tests.test_tool",
            "collective.contact.contactlist.vocabularies"
        ],
        "version": "1.2"
    },
    "collective.contact.core": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contact",
            "collective.contact.core",
            "collective.contact.core.adapters",
            "collective.contact.core.behaviors",
            "collective.contact.core.browser",
            "collective.contact.core.browser.addcontact",
            "collective.contact.core.browser.address",
            "collective.contact.core.browser.basefields",
            "collective.contact.core.browser.basefields.views",
            "collective.contact.core.browser.contact",
            "collective.contact.core.browser.contactable",
            "collective.contact.core.browser.directory",
            "collective.contact.core.browser.excelexport",
            "collective.contact.core.browser.organization",
            "collective.contact.core.browser.person",
            "collective.contact.core.browser.person_title_mapping",
            "collective.contact.core.browser.position",
            "collective.contact.core.browser.ttwfields",
            "collective.contact.core.browser.utils",
            "collective.contact.core.browser.vcard_export",
            "collective.contact.core.content",
            "collective.contact.core.content.directory",
            "collective.contact.core.content.held_position",
            "collective.contact.core.content.organization",
            "collective.contact.core.content.person",
            "collective.contact.core.content.position",
            "collective.contact.core.fields",
            "collective.contact.core.fti",
            "collective.contact.core.indexers",
            "collective.contact.core.interfaces",
            "collective.contact.core.schema",
            "collective.contact.core.setuphandlers",
            "collective.contact.core.subscribers",
            "collective.contact.core.testing",
            "collective.contact.core.tests",
            "collective.contact.core.tests.test_adapters",
            "collective.contact.core.tests.test_behaviors",
            "collective.contact.core.tests.test_content_types",
            "collective.contact.core.tests.test_related",
            "collective.contact.core.tests.test_robot",
            "collective.contact.core.tests.test_search",
            "collective.contact.core.tests.test_setup",
            "collective.contact.core.tests.test_views",
            "collective.contact.core.tests.test_workflow",
            "collective.contact.core.upgrades",
            "collective.contact.core.upgrades.upgrades",
            "collective.contact.core.vocabulary"
        ],
        "version": "1.14"
    },
    "collective.contact.duplicated": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contact",
            "collective.contact.duplicated",
            "collective.contact.duplicated.api",
            "collective.contact.duplicated.browser",
            "collective.contact.duplicated.browser.contactfaceted",
            "collective.contact.duplicated.browser.contactfaceted.action",
            "collective.contact.duplicated.browser.view",
            "collective.contact.duplicated.fields",
            "collective.contact.duplicated.interfaces",
            "collective.contact.duplicated.setuphandlers",
            "collective.contact.duplicated.testing",
            "collective.contact.duplicated.tests",
            "collective.contact.duplicated.tests.test_diff",
            "collective.contact.duplicated.tests.test_setup"
        ],
        "version": "0.3.0"
    },
    "collective.contact.facetednav": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contact",
            "collective.contact.facetednav",
            "collective.contact.facetednav.browser",
            "collective.contact.facetednav.browser.actions",
            "collective.contact.facetednav.browser.actions.base",
            "collective.contact.facetednav.browser.actions.delete",
            "collective.contact.facetednav.browser.actions.edit",
            "collective.contact.facetednav.browser.actions.excelexport",
            "collective.contact.facetednav.browser.actions.manager",
            "collective.contact.facetednav.browser.interfaces",
            "collective.contact.facetednav.browser.subtyper",
            "collective.contact.facetednav.browser.view",
            "collective.contact.facetednav.interfaces",
            "collective.contact.facetednav.setuphandlers",
            "collective.contact.facetednav.testing",
            "collective.contact.facetednav.tests",
            "collective.contact.facetednav.tests.test_setup",
            "collective.contact.facetednav.upgrades",
            "collective.contact.facetednav.upgrades.upgrades",
            "collective.contact.facetednav.vocabularies"
        ],
        "version": "1.1.7"
    },
    "collective.contact.mailaction": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contact",
            "collective.contact.mailaction",
            "collective.contact.mailaction.adapters",
            "collective.contact.mailaction.browser",
            "collective.contact.mailaction.browser.actions",
            "collective.contact.mailaction.browser.actions.mail",
            "collective.contact.mailaction.browser.actions.mail_utils",
            "collective.contact.mailaction.interfaces",
            "collective.contact.mailaction.setuphandlers",
            "collective.contact.mailaction.testing",
            "collective.contact.mailaction.tests",
            "collective.contact.mailaction.tests.test_robot",
            "collective.contact.mailaction.tests.test_setup",
            "collective.contact.mailaction.vocabularies"
        ],
        "version": "1.1"
    },
    "collective.contact.membrane": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contact",
            "collective.contact.membrane",
            "collective.contact.membrane.behaviors",
            "collective.contact.membrane.behaviors.membranegroup",
            "collective.contact.membrane.behaviors.personmembraneuser",
            "collective.contact.membrane.content",
            "collective.contact.membrane.interfaces",
            "collective.contact.membrane.setuphandlers",
            "collective.contact.membrane.testing",
            "collective.contact.membrane.tests",
            "collective.contact.membrane.tests.test_membranegroup",
            "collective.contact.membrane.tests.test_setup",
            "collective.contact.membrane.upgrades",
            "collective.contact.membrane.upgrades.upgrades"
        ],
        "version": "1.0.2"
    },
    "collective.contact.plonegroup": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contact",
            "collective.contact.plonegroup",
            "collective.contact.plonegroup.browser",
            "collective.contact.plonegroup.browser.settings",
            "collective.contact.plonegroup.config",
            "collective.contact.plonegroup.content",
            "collective.contact.plonegroup.interfaces",
            "collective.contact.plonegroup.setuphandlers",
            "collective.contact.plonegroup.subscribers",
            "collective.contact.plonegroup.testing",
            "collective.contact.plonegroup.tests",
            "collective.contact.plonegroup.tests.test_settings",
            "collective.contact.plonegroup.tests.test_setup",
            "collective.contact.plonegroup.tests.test_subscribers",
            "collective.contact.plonegroup.tests.test_upgrades",
            "collective.contact.plonegroup.tests.test_utils",
            "collective.contact.plonegroup.upgrades",
            "collective.contact.plonegroup.upgrades.upgrades",
            "collective.contact.plonegroup.utils"
        ],
        "version": "1.5"
    },
    "collective.contact.widget": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contact",
            "collective.contact.widget",
            "collective.contact.widget.factory",
            "collective.contact.widget.interfaces",
            "collective.contact.widget.schema",
            "collective.contact.widget.source",
            "collective.contact.widget.widgets"
        ],
        "version": "1.8"
    },
    "collective.contactauthor": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contactauthor",
            "collective.contactauthor.browser",
            "collective.contactauthor.browser.controlpanel",
            "collective.contactauthor.browser.status",
            "collective.contactauthor.interfaces",
            "collective.contactauthor.setuphandlers",
            "collective.contactauthor.testing",
            "collective.contactauthor.tests",
            "collective.contactauthor.vocabularies"
        ],
        "version": "1.1.0"
    },
    "collective.contacts": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contacts",
            "collective.contacts.Extensions",
            "collective.contacts.Extensions.Install",
            "collective.contacts.browser",
            "collective.contacts.browser.actions",
            "collective.contacts.browser.address_book_view",
            "collective.contacts.browser.customize",
            "collective.contacts.browser.export",
            "collective.contacts.browser.find",
            "collective.contacts.browser.group",
            "collective.contacts.browser.import",
            "collective.contacts.browser.importview",
            "collective.contacts.browser.ksscommands",
            "collective.contacts.browser.list",
            "collective.contacts.browser.organization",
            "collective.contacts.browser.search",
            "collective.contacts.columns",
            "collective.contacts.config",
            "collective.contacts.content",
            "collective.contacts.content.addressbook",
            "collective.contacts.content.group",
            "collective.contacts.content.organization",
            "collective.contacts.content.person",
            "collective.contacts.export",
            "collective.contacts.import",
            "collective.contacts.imports",
            "collective.contacts.interfaces",
            "collective.contacts.interfaces.addressbook",
            "collective.contacts.interfaces.browser",
            "collective.contacts.interfaces.general",
            "collective.contacts.interfaces.group",
            "collective.contacts.interfaces.organization",
            "collective.contacts.interfaces.person",
            "collective.contacts.interfaces.widgets",
            "collective.contacts.iso3166",
            "collective.contacts.search",
            "collective.contacts.setuphandlers",
            "collective.contacts.table",
            "collective.contacts.tests",
            "collective.contacts.tests.base",
            "collective.contacts.tests.integration",
            "collective.contacts.tests.integration.addressbook",
            "collective.contacts.tests.integration.person",
            "collective.contacts.tests.integration.setup",
            "collective.contacts.tests.test_functional",
            "collective.contacts.tests.test_integration",
            "collective.contacts.tests.test_unit",
            "collective.contacts.tests.unit",
            "collective.contacts.tests.unit.addressbook",
            "collective.contacts.tests.unit.person",
            "collective.contacts.upgrades",
            "collective.contacts.upgrades.v1_3_3_to_v1_4_0",
            "collective.contacts.vocabularies"
        ],
        "version": "1.5.2"
    },
    "collective.contemplate": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contemplate",
            "collective.contemplate.at",
            "collective.contemplate.dynamic",
            "collective.contemplate.form",
            "collective.contemplate.interfaces",
            "collective.contemplate.login",
            "collective.contemplate.meta",
            "collective.contemplate.owner",
            "collective.contemplate.testing",
            "collective.contemplate.tests",
            "collective.contemplate.typeinfo"
        ],
        "version": "0.1"
    },
    "collective.contentalerts": {
        "cmdline": [],
        "modules": [
            "contentalerts",
            "contentalerts.browser",
            "contentalerts.browser.controlpanel",
            "contentalerts.browser.discard_alert",
            "contentalerts.browser.review_objects",
            "contentalerts.contentrules",
            "contentalerts.handlers",
            "contentalerts.interfaces",
            "contentalerts.testing",
            "contentalerts.tests",
            "contentalerts.tests.test_contentrules",
            "contentalerts.tests.test_doctests",
            "contentalerts.tests.test_genericsetup",
            "contentalerts.tests.test_handlers",
            "contentalerts.tests.test_setup",
            "contentalerts.tests.test_utilities",
            "contentalerts.tests.test_views",
            "contentalerts.utilities"
        ],
        "version": "2.0a1"
    },
    "collective.contentexport": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentexport",
            "collective.contentexport.browser",
            "collective.contentexport.browser.export",
            "collective.contentexport.interfaces",
            "collective.contentexport.setuphandlers",
            "collective.contentexport.testing",
            "collective.contentexport.tests",
            "collective.contentexport.tests.test_export",
            "collective.contentexport.tests.test_setup"
        ],
        "version": "1.0"
    },
    "collective.contentfiles2aws": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentfiles2aws",
            "collective.contentfiles2aws.awsfile",
            "collective.contentfiles2aws.browser",
            "collective.contentfiles2aws.browser.content_migration",
            "collective.contentfiles2aws.browser.util",
            "collective.contentfiles2aws.catalog",
            "collective.contentfiles2aws.client",
            "collective.contentfiles2aws.client.awsclient",
            "collective.contentfiles2aws.client.fsclient",
            "collective.contentfiles2aws.client.interfaces",
            "collective.contentfiles2aws.client.interfaces.awsclient",
            "collective.contentfiles2aws.client.interfaces.fsclient",
            "collective.contentfiles2aws.config",
            "collective.contentfiles2aws.content",
            "collective.contentfiles2aws.content.awsfile",
            "collective.contentfiles2aws.content.awsimage",
            "collective.contentfiles2aws.content.interfaces",
            "collective.contentfiles2aws.content_types_patch",
            "collective.contentfiles2aws.fields",
            "collective.contentfiles2aws.handlers",
            "collective.contentfiles2aws.interfaces",
            "collective.contentfiles2aws.interfaces.fields",
            "collective.contentfiles2aws.interfaces.utility",
            "collective.contentfiles2aws.storage",
            "collective.contentfiles2aws.testing",
            "collective.contentfiles2aws.tests",
            "collective.contentfiles2aws.tests.s3_service_mockup",
            "collective.contentfiles2aws.tests.test_aws_file",
            "collective.contentfiles2aws.tests.test_aws_file_field",
            "collective.contentfiles2aws.tests.test_aws_image",
            "collective.contentfiles2aws.tests.test_aws_image_field",
            "collective.contentfiles2aws.tests.test_awsfile",
            "collective.contentfiles2aws.tests.test_awsstorage",
            "collective.contentfiles2aws.tests.test_browser_util",
            "collective.contentfiles2aws.tests.test_catalog",
            "collective.contentfiles2aws.tests.test_install",
            "collective.contentfiles2aws.tests.test_utility",
            "collective.contentfiles2aws.upgrades",
            "collective.contentfiles2aws.utility",
            "collective.contentfiles2aws.utils",
            "collective.contentfiles2aws.widgets"
        ],
        "version": "1.3.0"
    },
    "collective.contentgenerator": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "collective.contentgovernance": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentgovernance",
            "collective.contentgovernance.browser",
            "collective.contentgovernance.browser.catalogghosts",
            "collective.contentgovernance.browser.responsibilities",
            "collective.contentgovernance.indexer",
            "collective.contentgovernance.schemaextender",
            "collective.contentgovernance.testing",
            "collective.contentgovernance.tests",
            "collective.contentgovernance.tests.test_integration_unit"
        ],
        "version": "1.1"
    },
    "collective.contentgroup": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentgroup",
            "collective.contentgroup.base",
            "collective.contentgroup.browser",
            "collective.contentgroup.browser.fix_contentgroups",
            "collective.contentgroup.config",
            "collective.contentgroup.dynamicgroups",
            "collective.contentgroup.events",
            "collective.contentgroup.groupmanager",
            "collective.contentgroup.interfaces",
            "collective.contentgroup.tests",
            "collective.contentgroup.tests.base",
            "collective.contentgroup.tests.base_groupmanager",
            "collective.contentgroup.tests.test_doc",
            "collective.contentgroup.tests.test_dynamicgroups",
            "collective.contentgroup.tests.test_group_manager"
        ],
        "version": "0.1b3"
    },
    "collective.contentleadimage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentleadimage",
            "collective.contentleadimage.browser",
            "collective.contentleadimage.browser.folder_leadimage_view",
            "collective.contentleadimage.browser.viewlets",
            "collective.contentleadimage.config",
            "collective.contentleadimage.extender",
            "collective.contentleadimage.interfaces",
            "collective.contentleadimage.leadimageprefs",
            "collective.contentleadimage.migration",
            "collective.contentleadimage.purgeurls",
            "collective.contentleadimage.setuphandlers",
            "collective.contentleadimage.testing",
            "collective.contentleadimage.tests",
            "collective.contentleadimage.tests.test_base",
            "collective.contentleadimage.utils",
            "collective.contentleadimage.vocabulary"
        ],
        "version": "1.3.5"
    },
    "collective.contentlicensing": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentlicensing",
            "collective.contentlicensing.DublinCoreExtensions",
            "collective.contentlicensing.DublinCoreExtensions.UpdateLicenseMetadata",
            "collective.contentlicensing.DublinCoreExtensions.interfaces",
            "collective.contentlicensing.DublinCoreExtensions.patch",
            "collective.contentlicensing.DublinCoreExtensions.terms",
            "collective.contentlicensing.Extensions",
            "collective.contentlicensing.Extensions.Migration",
            "collective.contentlicensing.browser",
            "collective.contentlicensing.browser.ccwidget",
            "collective.contentlicensing.browser.contentlicensingprefs",
            "collective.contentlicensing.browser.copyrightbyline",
            "collective.contentlicensing.browser.dcmetadata",
            "collective.contentlicensing.browser.otherlicense",
            "collective.contentlicensing.browser.rdfmetadata",
            "collective.contentlicensing.browser.widgets",
            "collective.contentlicensing.config",
            "collective.contentlicensing.events",
            "collective.contentlicensing.indexers",
            "collective.contentlicensing.interfaces",
            "collective.contentlicensing.setupHandlers",
            "collective.contentlicensing.tests",
            "collective.contentlicensing.tests.base",
            "collective.contentlicensing.tests.test_cite_resource",
            "collective.contentlicensing.tests.test_doctests",
            "collective.contentlicensing.tests.test_install",
            "collective.contentlicensing.tests.test_non_licensable",
            "collective.contentlicensing.tests.test_recursively_license",
            "collective.contentlicensing.utilities",
            "collective.contentlicensing.utilities.interfaces",
            "collective.contentlicensing.utilities.utils"
        ],
        "version": "2.2.6"
    },
    "collective.contentmapper": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentMapper",
            "collective.contentMapper.browser",
            "collective.contentMapper.categoryutils",
            "collective.contentMapper.config",
            "collective.contentMapper.events",
            "collective.contentMapper.interfaces",
            "collective.contentMapper.portlets",
            "collective.contentMapper.portlets.selector",
            "collective.contentMapper.tests"
        ],
        "version": "0.12"
    },
    "collective.contentmigrationui": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "collective.contentrules.comingsoon": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentrules",
            "collective.contentrules.comingsoon",
            "collective.contentrules.comingsoon.controlpanel",
            "collective.contentrules.comingsoon.event",
            "collective.contentrules.comingsoon.interfaces",
            "collective.contentrules.comingsoon.notify",
            "collective.contentrules.comingsoon.tests",
            "collective.contentrules.comingsoon.upgrades",
            "collective.contentrules.comingsoon.upgrades.step",
            "collective.contentrules.comingsoon.vocabulary"
        ],
        "version": "1.2"
    },
    "collective.contentrules.imaging": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentrules",
            "collective.contentrules.imaging",
            "collective.contentrules.imaging.actions",
            "collective.contentrules.imaging.actions.scale"
        ],
        "version": "1.0"
    },
    "collective.contentrules.linguatarget": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentrules",
            "collective.contentrules.linguatarget",
            "collective.contentrules.linguatarget.actions",
            "collective.contentrules.linguatarget.tests",
            "collective.contentrules.linguatarget.tests.test_linguacopy",
            "collective.contentrules.linguatarget.tests.test_linguamove"
        ],
        "version": "0.5"
    },
    "collective.contentrules.mail": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentrules",
            "collective.contentrules.mail",
            "collective.contentrules.mail.actions",
            "collective.contentrules.mail.actions.mail",
            "collective.contentrules.mail.adapter",
            "collective.contentrules.mail.browser",
            "collective.contentrules.mail.browser.widget",
            "collective.contentrules.mail.interfaces",
            "collective.contentrules.mail.model",
            "collective.contentrules.mail.tests",
            "collective.contentrules.mail.tests.base",
            "collective.contentrules.mail.tests.test_configuration",
            "collective.contentrules.mail.tests.test_maildocs",
            "collective.contentrules.mail.tests.test_maildocstrings",
            "collective.contentrules.mail.tests.utils",
            "collective.contentrules.mail.vocabulary"
        ],
        "version": "0.7"
    },
    "collective.contentrules.mailadapter": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentrules",
            "collective.contentrules.mailadapter",
            "collective.contentrules.mailadapter.actions",
            "collective.contentrules.mailadapter.actions.mail",
            "collective.contentrules.mailadapter.interfaces"
        ],
        "version": "1.0"
    },
    "collective.contentrules.mailfromfield": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentrules",
            "collective.contentrules.mailfromfield",
            "collective.contentrules.mailfromfield.actions",
            "collective.contentrules.mailfromfield.actions.mail",
            "collective.contentrules.mailfromfield.tests",
            "collective.contentrules.mailfromfield.tests.test_actions_mailfromfield",
            "collective.contentrules.mailfromfield.vocabularies"
        ],
        "version": "0.4.0"
    },
    "collective.contentrules.mailtogroup": {
        "cmdline": [],
        "modules": [
            "mailtogroup",
            "mailtogroup.actions",
            "mailtogroup.actions.mail",
            "mailtogroup.actions_formlib",
            "mailtogroup.actions_formlib.mail",
            "mailtogroup.tests",
            "mailtogroup.tests.dummymailhost",
            "mailtogroup.tests.test_action_mail_to_group"
        ],
        "version": "1.6"
    },
    "collective.contentrules.mailtolocalrole": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentrules",
            "collective.contentrules.mailtolocalrole",
            "collective.contentrules.mailtolocalrole.actions",
            "collective.contentrules.mailtolocalrole.actions.mail",
            "collective.contentrules.mailtolocalrole.actions.vocabularies",
            "collective.contentrules.mailtolocalrole.tests",
            "collective.contentrules.mailtolocalrole.tests.test_action_mailtolocalrole"
        ],
        "version": "1.3"
    },
    "collective.contentrules.mailtorole": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentrules",
            "collective.contentrules.mailtorole",
            "collective.contentrules.mailtorole.actions",
            "collective.contentrules.mailtorole.actions.mail",
            "collective.contentrules.mailtorole.actions.vocabularies",
            "collective.contentrules.mailtorole.tests",
            "collective.contentrules.mailtorole.tests.test_action_mailtorole"
        ],
        "version": "1.7"
    },
    "collective.contentrules.mustread": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentrules",
            "collective.contentrules.mustread",
            "collective.contentrules.mustread.actions",
            "collective.contentrules.mustread.actions.mail",
            "collective.contentrules.mustread.actions.vocabularies",
            "collective.contentrules.mustread.browser",
            "collective.contentrules.mustread.browser.stats",
            "collective.contentrules.mustread.browser.views",
            "collective.contentrules.mustread.config",
            "collective.contentrules.mustread.event",
            "collective.contentrules.mustread.interfaces",
            "collective.contentrules.mustread.setuphandlers",
            "collective.contentrules.mustread.stringinterp",
            "collective.contentrules.mustread.testing",
            "collective.contentrules.mustread.tests",
            "collective.contentrules.mustread.tests.test_contentrule",
            "collective.contentrules.mustread.tests.test_setup",
            "collective.contentrules.mustread.tests.test_views"
        ],
        "version": "1.0a2"
    },
    "collective.contentrules.parentchild": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentrules",
            "collective.contentrules.parentchild",
            "collective.contentrules.parentchild.autotransition",
            "collective.contentrules.parentchild.child",
            "collective.contentrules.parentchild.parenttransition",
            "collective.contentrules.parentchild.tests",
            "collective.contentrules.parentchild.tests.base",
            "collective.contentrules.parentchild.tests.test_autotransition",
            "collective.contentrules.parentchild.tests.test_child",
            "collective.contentrules.parentchild.tests.test_parenttransition"
        ],
        "version": "1.0b1"
    },
    "collective.contentrules.runscript": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentrules",
            "collective.contentrules.runscript",
            "collective.contentrules.runscript.actions",
            "collective.contentrules.runscript.actions.interfaces",
            "collective.contentrules.runscript.actions.runscript",
            "collective.contentrules.runscript.tests"
        ],
        "version": "0.4"
    },
    "collective.contentrules.subscription": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentrules",
            "collective.contentrules.subscription",
            "collective.contentrules.subscription.actions",
            "collective.contentrules.subscription.actions.mail",
            "collective.contentrules.subscription.browser",
            "collective.contentrules.subscription.browser.controlpanel",
            "collective.contentrules.subscription.browser.interfaces",
            "collective.contentrules.subscription.browser.notify_subscribe",
            "collective.contentrules.subscription.testing",
            "collective.contentrules.subscription.tests",
            "collective.contentrules.subscription.tests.base",
            "collective.contentrules.subscription.tests.test_action",
            "collective.contentrules.subscription.tests.test_controlpanel",
            "collective.contentrules.subscription.tests.test_subscription",
            "collective.contentrules.subscription.tests.test_tool",
            "collective.contentrules.subscription.tool",
            "collective.contentrules.subscription.vocabularies"
        ],
        "version": "0.1.0"
    },
    "collective.contentrules.tagcondition": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentrules",
            "collective.contentrules.tagcondition",
            "collective.contentrules.tagcondition.tagcondition",
            "collective.contentrules.tagcondition.tagparser",
            "collective.contentrules.tagcondition.tests"
        ],
        "version": "1.0"
    },
    "collective.contentrules.talesaction": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentrules",
            "collective.contentrules.talesaction",
            "collective.contentrules.talesaction.action",
            "collective.contentrules.talesaction.tests"
        ],
        "version": "1.0"
    },
    "collective.contentrules.template": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "collective.contentrules.yearmonth": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentrules",
            "collective.contentrules.yearmonth",
            "collective.contentrules.yearmonth.actions",
            "collective.contentrules.yearmonth.actions.move",
            "collective.contentrules.yearmonth.interfaces",
            "collective.contentrules.yearmonth.target_folder",
            "collective.contentrules.yearmonth.tests",
            "collective.contentrules.yearmonth.tests.test_action_move"
        ],
        "version": "1.1"
    },
    "collective.contentstats": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contentstats",
            "collective.contentstats.browser",
            "collective.contentstats.browser.summary-statistics",
            "collective.contentstats.tests"
        ],
        "version": "1.0.1"
    },
    "collective.contentsync": {
        "cmdline": [],
        "modules": [],
        "version": "1.01"
    },
    "collective.contextimage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contextimage",
            "collective.contextimage.browser",
            "collective.contextimage.browser.viewlet",
            "collective.contextimage.extender",
            "collective.contextimage.interfaces"
        ],
        "version": "1.3.2"
    },
    "collective.contextimageexamples": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contextimageexamples"
        ],
        "version": "0.1"
    },
    "collective.contextualcontactinfo": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.contextualcontactinfo",
            "collective.contextualcontactinfo.tests"
        ],
        "version": "0.1.0"
    },
    "collective.controlpanel.edit-css": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.controlpanel",
            "collective.controlpanel.edit_css",
            "collective.controlpanel.edit_css.browser",
            "collective.controlpanel.edit_css.browser.edit_css"
        ],
        "version": "0.4.0"
    },
    "collective.cookiecuttr": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cookiecuttr",
            "collective.cookiecuttr.browser",
            "collective.cookiecuttr.browser.controlpanel",
            "collective.cookiecuttr.browser.viewlet",
            "collective.cookiecuttr.interfaces",
            "collective.cookiecuttr.testing",
            "collective.cookiecuttr.tests",
            "collective.cookiecuttr.tests.test_controlpanel",
            "collective.cookiecuttr.tests.test_install",
            "collective.cookiecuttr.tests.test_viewlet",
            "collective.cookiecuttr.upgrades"
        ],
        "version": "0.7.5"
    },
    "collective.coreloadtests": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.coreloadtests",
            "collective.coreloadtests.exportimport",
            "collective.coreloadtests.exportimport.contentcreation",
            "collective.coreloadtests.exportimport.writeheavy",
            "collective.coreloadtests.tests",
            "collective.coreloadtests.tests.test_Contentcreation",
            "collective.coreloadtests.tests.test_Readonly",
            "collective.coreloadtests.tests.test_Writeheavy"
        ],
        "version": "0.2"
    },
    "collective.cover": {
        "cmdline": [],
        "modules": [
            "cover",
            "cover.Extensions",
            "cover.Extensions.Install",
            "cover.behaviors",
            "cover.behaviors.interfaces",
            "cover.browser",
            "cover.browser.adapters",
            "cover.browser.compose",
            "cover.browser.contentchooser",
            "cover.browser.cover",
            "cover.browser.layout",
            "cover.browser.layoutpolicy",
            "cover.browser.scaling",
            "cover.config",
            "cover.content",
            "cover.controlpanel",
            "cover.grids",
            "cover.interfaces",
            "cover.logger",
            "cover.setuphandlers",
            "cover.subscribers",
            "cover.testing",
            "cover.tests",
            "cover.tests.LinkIntegrityUtils",
            "cover.tests.TestInternalServerError",
            "cover.tests.base",
            "cover.tests.test_api",
            "cover.tests.test_banner_tile",
            "cover.tests.test_base_tile",
            "cover.tests.test_basic_tile",
            "cover.tests.test_calendar_tile",
            "cover.tests.test_carousel_tile",
            "cover.tests.test_collection_tile",
            "cover.tests.test_contentbody_tile",
            "cover.tests.test_contentchooser",
            "cover.tests.test_controlpanel",
            "cover.tests.test_cover",
            "cover.tests.test_embed_tile",
            "cover.tests.test_file_tile",
            "cover.tests.test_grid",
            "cover.tests.test_helper_views",
            "cover.tests.test_list_tile",
            "cover.tests.test_permissions",
            "cover.tests.test_pfg_tile",
            "cover.tests.test_refresh_behavior",
            "cover.tests.test_richtext_tile",
            "cover.tests.test_robot",
            "cover.tests.test_setup",
            "cover.tests.test_textlinessortable_widget",
            "cover.tests.test_tiles",
            "cover.tests.test_upgrades",
            "cover.tests.test_views",
            "cover.tests.test_vocabularies",
            "cover.tests.test_widget_preview",
            "cover.tests.utils",
            "cover.tiles",
            "cover.tiles.banner",
            "cover.tiles.base",
            "cover.tiles.basic",
            "cover.tiles.calendar",
            "cover.tiles.carousel",
            "cover.tiles.collection",
            "cover.tiles.configuration",
            "cover.tiles.configuration_view",
            "cover.tiles.configuration_widgets",
            "cover.tiles.configuration_widgets.cssclasswidget",
            "cover.tiles.configuration_widgets.interfaces",
            "cover.tiles.contentbody",
            "cover.tiles.data",
            "cover.tiles.edit",
            "cover.tiles.edit_widgets",
            "cover.tiles.edit_widgets.interfaces",
            "cover.tiles.edit_widgets.more_link",
            "cover.tiles.embed",
            "cover.tiles.file",
            "cover.tiles.handlers",
            "cover.tiles.list",
            "cover.tiles.permissions",
            "cover.tiles.pfg",
            "cover.tiles.richtext",
            "cover.upgrades",
            "cover.upgrades.v11",
            "cover.upgrades.v12",
            "cover.upgrades.v13",
            "cover.upgrades.v14",
            "cover.upgrades.v15",
            "cover.utils",
            "cover.vocabularies",
            "cover.widgets",
            "cover.widgets.interfaces",
            "cover.widgets.selectpreview",
            "cover.widgets.textlinessortable"
        ],
        "version": "1.4b1"
    },
    "collective.cron": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cron",
            "collective.cron.Extensions",
            "collective.cron.Extensions.Install",
            "collective.cron.adapters",
            "collective.cron.adapters.exportimport",
            "collective.cron.adapters.manager",
            "collective.cron.adapters.ploneappasync",
            "collective.cron.adapters.registry",
            "collective.cron.adapters.utils",
            "collective.cron.browser",
            "collective.cron.browser.controlpanel",
            "collective.cron.browser.interfaces",
            "collective.cron.browser.kss",
            "collective.cron.crontab",
            "collective.cron.events",
            "collective.cron.interfaces",
            "collective.cron.setuphandlers",
            "collective.cron.testing",
            "collective.cron.tests",
            "collective.cron.tests.base",
            "collective.cron.tests.globals",
            "collective.cron.tests.test_async_annotedqueue",
            "collective.cron.tests.test_async_marker",
            "collective.cron.tests.test_async_queue",
            "collective.cron.tests.test_cron",
            "collective.cron.tests.test_datetime",
            "collective.cron.tests.test_doctests",
            "collective.cron.tests.test_interfaces",
            "collective.cron.tests.test_jobrunner",
            "collective.cron.tests.test_manager",
            "collective.cron.tests.test_registry",
            "collective.cron.tests.test_utils",
            "collective.cron.upgrades",
            "collective.cron.utils"
        ],
        "version": "2.7"
    },
    "collective.cropimage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cropimage",
            "collective.cropimage.browser",
            "collective.cropimage.browser.interfaces",
            "collective.cropimage.browser.miscellaneous",
            "collective.cropimage.browser.template",
            "collective.cropimage.id",
            "collective.cropimage.interfaces",
            "collective.cropimage.tests",
            "collective.cropimage.tests.base",
            "collective.cropimage.tests.test_CropImageIDControlPanelForm",
            "collective.cropimage.tests.test_CropImageView",
            "collective.cropimage.tests.test_IAddID",
            "collective.cropimage.tests.test_ID",
            "collective.cropimage.tests.test_IID",
            "collective.cropimage.tests.test_Miscellaneous",
            "collective.cropimage.tests.test_functional",
            "collective.cropimage.tests.test_setup",
            "collective.cropimage.tests.test_upgrades",
            "collective.cropimage.upgrades"
        ],
        "version": "1.8"
    },
    "collective.croppingimagefield": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.croppingimagefield",
            "collective.croppingimagefield.fields",
            "collective.croppingimagefield.tests"
        ],
        "version": "0.1beta"
    },
    "collective.css3buttons": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.css3buttons",
            "collective.css3buttons.tests",
            "collective.css3buttons.tests.base",
            "collective.css3buttons.tests.test_resource"
        ],
        "version": "0.1"
    },
    "collective.cssgridsystem": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cssgridsystem",
            "collective.cssgridsystem.tests"
        ],
        "version": "1.0"
    },
    "collective.csv2atvocabularymanager": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.csv2atvocabularymanager",
            "collective.csv2atvocabularymanager.csv_import",
            "collective.csv2atvocabularymanager.testing",
            "collective.csv2atvocabularymanager.tests",
            "collective.csv2atvocabularymanager.tests.test_linguaplone",
            "collective.csv2atvocabularymanager.tests.test_utility"
        ],
        "version": "0.1.1"
    },
    "collective.csv2dict": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.csv2dict",
            "collective.csv2dict.example",
            "collective.csv2dict.readers",
            "collective.csv2dict.utils"
        ],
        "version": "1.1"
    },
    "collective.cu3er": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cu3er",
            "collective.cu3er.Extensions",
            "collective.cu3er.Extensions.Install",
            "collective.cu3er.browser",
            "collective.cu3er.browser.viewlets",
            "collective.cu3er.browser.views",
            "collective.cu3er.interfaces",
            "collective.cu3er.schemaextender",
            "collective.cu3er.setuphandlers",
            "collective.cu3er.tests"
        ],
        "version": "0.1"
    },
    "collective.culturerelations": {
        "cmdline": [],
        "modules": [],
        "version": "0.5"
    },
    "collective.customicons": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.customicons",
            "collective.customicons.at",
            "collective.customicons.at.extender",
            "collective.customicons.controlpanel",
            "collective.customicons.dx",
            "collective.customicons.dx.behavior",
            "collective.customicons.indexer",
            "collective.customicons.interfaces",
            "collective.customicons.lookup",
            "collective.customicons.utils"
        ],
        "version": "1.1"
    },
    "collective.customizablepersonalizeform": {
        "cmdline": [],
        "modules": [],
        "version": "2.0"
    },
    "collective.customlogin": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.customlogin",
            "collective.customlogin.events",
            "collective.customlogin.interfaces",
            "collective.customlogin.plugin",
            "collective.customlogin.redirect",
            "collective.customlogin.testing",
            "collective.customlogin.tests",
            "collective.customlogin.tests.test_example",
            "collective.customlogin.tests.test_robot",
            "collective.customlogin.utils"
        ],
        "version": "1.0.1"
    },
    "collective.customoverrides": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.customoverrides",
            "collective.customoverrides.browser",
            "collective.customoverrides.browser.interfaces",
            "collective.customoverrides.testing",
            "collective.customoverrides.tests",
            "collective.customoverrides.tests.test_example",
            "collective.customoverrides.tests.test_robot",
            "collective.customoverrides.upgrades"
        ],
        "version": "1.0.1"
    },
    "collective.cutandpaste": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.cutandpaste",
            "collective.cutandpaste.blueprint",
            "collective.cutandpaste.tests",
            "collective.cutandpaste.zope2"
        ],
        "version": "1.1"
    },
    "collective.dancefloor": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.dancefloor",
            "collective.dancefloor.browser",
            "collective.dancefloor.browser.clear_default_queue",
            "collective.dancefloor.browser.subscribe_view",
            "collective.dancefloor.browser.views",
            "collective.dancefloor.channels",
            "collective.dancefloor.config",
            "collective.dancefloor.events",
            "collective.dancefloor.events.local_newsletter",
            "collective.dancefloor.exportimport",
            "collective.dancefloor.extender",
            "collective.dancefloor.indexer",
            "collective.dancefloor.interfaces",
            "collective.dancefloor.localroles",
            "collective.dancefloor.monkey",
            "collective.dancefloor.tests",
            "collective.dancefloor.tests.base",
            "collective.dancefloor.tests.test_dancefloor_enable",
            "collective.dancefloor.tests.test_dancefloor_localsite",
            "collective.dancefloor.tests.test_extender",
            "collective.dancefloor.tools",
            "collective.dancefloor.upgrades",
            "collective.dancefloor.utils",
            "collective.dancefloor.vocabularies"
        ],
        "version": "1.0.3"
    },
    "collective.dancing": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.dancing",
            "collective.dancing.browser",
            "collective.dancing.browser.channel",
            "collective.dancing.browser.collector",
            "collective.dancing.browser.composer",
            "collective.dancing.browser.controlpanel",
            "collective.dancing.browser.interfaces",
            "collective.dancing.browser.portlets",
            "collective.dancing.browser.portlets.channelsubscribe",
            "collective.dancing.browser.preview",
            "collective.dancing.browser.query",
            "collective.dancing.browser.scheduler",
            "collective.dancing.browser.sendnewsletter",
            "collective.dancing.browser.settings",
            "collective.dancing.browser.stats",
            "collective.dancing.browser.subscribe",
            "collective.dancing.browser.utils",
            "collective.dancing.channel",
            "collective.dancing.collector",
            "collective.dancing.composer",
            "collective.dancing.contentrules",
            "collective.dancing.cronrunner",
            "collective.dancing.events",
            "collective.dancing.interfaces",
            "collective.dancing.patch",
            "collective.dancing.patch.topic",
            "collective.dancing.setuphandlers",
            "collective.dancing.subscribe",
            "collective.dancing.tests",
            "collective.dancing.transform",
            "collective.dancing.upgrades",
            "collective.dancing.utils"
        ],
        "version": "1.1"
    },
    "collective.dancingcustomtemplates": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.dancingcustomtemplates",
            "collective.dancingcustomtemplates.browser",
            "collective.dancingcustomtemplates.browser.interfaces",
            "collective.dancingcustomtemplates.browser.subscribe",
            "collective.dancingcustomtemplates.monkey"
        ],
        "version": "1.0.0"
    },
    "collective.dancingnotlikely": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.dancingnotlikely"
        ],
        "version": "1.0.2"
    },
    "collective.datagridcolumns": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.datagridcolumns",
            "collective.datagridcolumns.DateColumn",
            "collective.datagridcolumns.MultiSelectColumn",
            "collective.datagridcolumns.ReferenceColumn",
            "collective.datagridcolumns.SelectColumn",
            "collective.datagridcolumns.TextAreaColumn",
            "collective.datagridcolumns.browser",
            "collective.datagridcolumns.browser.autocomplete",
            "collective.datagridcolumns.calling_content_provider",
            "collective.datagridcolumns.interfaces",
            "collective.datagridcolumns.tests"
        ],
        "version": "0.7.0"
    },
    "collective.datatable": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "collective.datatable.reporting": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "collective.datatablesviews": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.datatablesviews",
            "collective.datatablesviews.Extensions",
            "collective.datatablesviews.Extensions.Install",
            "collective.datatablesviews.app_config",
            "collective.datatablesviews.browser",
            "collective.datatablesviews.browser.view",
            "collective.datatablesviews.interfaces",
            "collective.datatablesviews.setuphandlers",
            "collective.datatablesviews.testing",
            "collective.datatablesviews.tests",
            "collective.datatablesviews.tests.base",
            "collective.datatablesviews.tests.globals",
            "collective.datatablesviews.tests.test_doctests",
            "collective.datatablesviews.tests.test_setup",
            "collective.datatablesviews.upgrades"
        ],
        "version": "1.1"
    },
    "collective.datehacker": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.datehacker",
            "collective.datehacker.browser",
            "collective.datehacker.browser.hackdate",
            "collective.datehacker.tests"
        ],
        "version": "0.1.0a"
    },
    "collective.deepsitemap": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.deepsitemap",
            "collective.deepsitemap.navigation",
            "collective.deepsitemap.permissions",
            "collective.deepsitemap.tests"
        ],
        "version": "1.0a"
    },
    "collective.delaycalculator": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.delaycalculator",
            "collective.delaycalculator.browser",
            "collective.delaycalculator.content",
            "collective.delaycalculator.interfaces",
            "collective.delaycalculator.setuphandlers",
            "collective.delaycalculator.testing",
            "collective.delaycalculator.tests",
            "collective.delaycalculator.tests.test_robot",
            "collective.delaycalculator.tests.test_setup"
        ],
        "version": "0.1"
    },
    "collective.delegatesiteadmin": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.delegatesiteadmin",
            "collective.delegatesiteadmin.sharing",
            "collective.delegatesiteadmin.testing",
            "collective.delegatesiteadmin.tests",
            "collective.delegatesiteadmin.tests.test_example"
        ],
        "version": "0.1.2"
    },
    "collective.deletepermission": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.deletepermission",
            "collective.deletepermission.copy",
            "collective.deletepermission.cut_paste_object",
            "collective.deletepermission.del_object",
            "collective.deletepermission.del_object_dexterity",
            "collective.deletepermission.rename",
            "collective.deletepermission.testing",
            "collective.deletepermission.tests",
            "collective.deletepermission.tests.base",
            "collective.deletepermission.tests.builders",
            "collective.deletepermission.tests.dexterity_folder",
            "collective.deletepermission.tests.test_actions",
            "collective.deletepermission.tests.test_copy",
            "collective.deletepermission.tests.test_correct_permission",
            "collective.deletepermission.tests.test_creation",
            "collective.deletepermission.tests.test_cut_permission",
            "collective.deletepermission.tests.test_delete",
            "collective.deletepermission.tests.test_permission_functional",
            "collective.deletepermission.tests.test_remove_only_files",
            "collective.deletepermission.upgrades",
            "collective.deletepermission.upgrades.to1001",
            "collective.deletepermission.upgrades.to1002"
        ],
        "version": "1.4.0"
    },
    "collective.demositebadge": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.demositebadge",
            "collective.demositebadge.controlpanel",
            "collective.demositebadge.interfaces",
            "collective.demositebadge.testing",
            "collective.demositebadge.tests",
            "collective.demositebadge.tests.test_installation",
            "collective.demositebadge.tests.test_view",
            "collective.demositebadge.views"
        ],
        "version": "1.0"
    },
    "collective.depositbox": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.depositbox",
            "collective.depositbox.adapter",
            "collective.depositbox.browser",
            "collective.depositbox.config",
            "collective.depositbox.interfaces",
            "collective.depositbox.sample",
            "collective.depositbox.sample.browser",
            "collective.depositbox.store",
            "collective.depositbox.tests"
        ],
        "version": "1.3"
    },
    "collective.dewplayer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.dewplayer",
            "collective.dewplayer.browser",
            "collective.dewplayer.browser.base",
            "collective.dewplayer.browser.file",
            "collective.dewplayer.browser.folder",
            "collective.dewplayer.browser.itemview",
            "collective.dewplayer.browser.link",
            "collective.dewplayer.browser.playlist",
            "collective.dewplayer.browser.topic",
            "collective.dewplayer.interfaces",
            "collective.dewplayer.upgrades"
        ],
        "version": "1.2"
    },
    "collective.dewslider": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.dewslider",
            "collective.dewslider.tests"
        ],
        "version": "1.0"
    },
    "collective.dexteritydiff": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.dexteritydiff",
            "collective.dexteritydiff.astextdiff",
            "collective.dexteritydiff.binarydiff",
            "collective.dexteritydiff.booldiff",
            "collective.dexteritydiff.choicediff",
            "collective.dexteritydiff.compounddiff",
            "collective.dexteritydiff.config",
            "collective.dexteritydiff.filefields",
            "collective.dexteritydiff.filelistdiff",
            "collective.dexteritydiff.i18n",
            "collective.dexteritydiff.testing",
            "collective.dexteritydiff.tests",
            "collective.dexteritydiff.tests.test_astextdiff",
            "collective.dexteritydiff.tests.test_binarydiff",
            "collective.dexteritydiff.tests.test_booldiff",
            "collective.dexteritydiff.tests.test_choicediff",
            "collective.dexteritydiff.tests.test_compouddiff",
            "collective.dexteritydiff.tests.test_filelistdiff",
            "collective.dexteritydiff.tests.test_install",
            "collective.dexteritydiff.utils"
        ],
        "version": "0.1b4"
    },
    "collective.dexteritypaste": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.dexteritypaste",
            "collective.dexteritypaste.dexterity",
            "collective.dexteritypaste.localcommands",
            "collective.dexteritypaste.localcommands.dexterity"
        ],
        "version": "1.0alpha1.1"
    },
    "collective.dexteritytextindexer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.dexteritytextindexer",
            "collective.dexteritytextindexer.behavior",
            "collective.dexteritytextindexer.converters",
            "collective.dexteritytextindexer.directives",
            "collective.dexteritytextindexer.indexer",
            "collective.dexteritytextindexer.interfaces",
            "collective.dexteritytextindexer.schemaeditor",
            "collective.dexteritytextindexer.supermodel",
            "collective.dexteritytextindexer.testing",
            "collective.dexteritytextindexer.tests",
            "collective.dexteritytextindexer.tests.behaviors",
            "collective.dexteritytextindexer.tests.helpers",
            "collective.dexteritytextindexer.tests.test_basic_behavior",
            "collective.dexteritytextindexer.tests.test_behaviors",
            "collective.dexteritytextindexer.tests.test_directives",
            "collective.dexteritytextindexer.tests.test_schemaeditor",
            "collective.dexteritytextindexer.tests.test_supermodel_handler",
            "collective.dexteritytextindexer.tests.test_utils",
            "collective.dexteritytextindexer.utils"
        ],
        "version": "2.1.1"
    },
    "collective.diazo.readheaders": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.diazo",
            "collective.diazo.readheaders"
        ],
        "version": "0.1"
    },
    "collective.diffbot": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.diffbot",
            "collective.diffbot.browser",
            "collective.diffbot.browser.app",
            "collective.diffbot.browser.app.controlpanel",
            "collective.diffbot.browser.app.view",
            "collective.diffbot.cache",
            "collective.diffbot.cache.cache",
            "collective.diffbot.cache.nocache",
            "collective.diffbot.interfaces",
            "collective.diffbot.upgrades"
        ],
        "version": "1.0"
    },
    "collective.diggdigg": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.diggdigg",
            "collective.diggdigg.buttons",
            "collective.diggdigg.buttons.bufferapp",
            "collective.diggdigg.buttons.button",
            "collective.diggdigg.buttons.facebook",
            "collective.diggdigg.buttons.flattr",
            "collective.diggdigg.buttons.google",
            "collective.diggdigg.buttons.linkedin",
            "collective.diggdigg.buttons.pinterest",
            "collective.diggdigg.buttons.reddit",
            "collective.diggdigg.buttons.twitter",
            "collective.diggdigg.buttons.viadeo",
            "collective.diggdigg.layer",
            "collective.diggdigg.settings",
            "collective.diggdigg.testing",
            "collective.diggdigg.tests",
            "collective.diggdigg.tests.base",
            "collective.diggdigg.tests.test_setup",
            "collective.diggdigg.upgrades",
            "collective.diggdigg.viewlets"
        ],
        "version": "1.0"
    },
    "collective.directoryresourcepatch": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.directoryresourcepatch",
            "collective.directoryresourcepatch.patch"
        ],
        "version": "1.1"
    },
    "collective.disableuser": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.disableuser",
            "collective.disableuser.browser",
            "collective.disableuser.interfaces",
            "collective.disableuser.pas",
            "collective.disableuser.pas.plugin",
            "collective.disableuser.rest",
            "collective.disableuser.setuphandlers",
            "collective.disableuser.testing",
            "collective.disableuser.tests",
            "collective.disableuser.tests.test_setup"
        ],
        "version": "1.0a1"
    },
    "collective.discussionintegration.plonegazette": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.discussionintegration",
            "collective.discussionintegration.plonegazette",
            "collective.discussionintegration.plonegazette.interfaces",
            "collective.discussionintegration.plonegazette.newsletter",
            "collective.discussionintegration.plonegazette.tests"
        ],
        "version": "1.0.0"
    },
    "collective.discussionplus": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.discussionplus",
            "collective.discussionplus.browser",
            "collective.discussionplus.indexers",
            "collective.discussionplus.interfaces",
            "collective.discussionplus.patches",
            "collective.discussionplus.tests"
        ],
        "version": "1.0b2"
    },
    "collective.disqus": {
        "cmdline": [],
        "modules": [
            "disqus",
            "disqus.Extensions",
            "disqus.Extensions.Install",
            "disqus.browser",
            "disqus.browser.disqus_summary_view",
            "disqus.comments",
            "disqus.config",
            "disqus.controlpanel",
            "disqus.i18n",
            "disqus.interfaces",
            "disqus.portlets",
            "disqus.portlets.hot_threads",
            "disqus.portlets.popular_threads",
            "disqus.testing",
            "disqus.tests",
            "disqus.tests.test_comments_counter",
            "disqus.tests.test_controlpanel",
            "disqus.tests.test_portlets",
            "disqus.tests.test_setup",
            "disqus.tests.test_utils",
            "disqus.tests.test_viewlet",
            "disqus.utils"
        ],
        "version": "2.1"
    },
    "collective.dist": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.dist",
            "collective.dist.check",
            "collective.dist.core",
            "collective.dist.mregister",
            "collective.dist.mupload",
            "collective.dist.pypirc",
            "collective.dist.tests",
            "collective.dist.tests.test_check",
            "collective.dist.tests.test_distdocs",
            "collective.dist.tests.test_distdocstrings",
            "collective.dist.tests.test_mregister",
            "collective.dist.tests.test_mupload",
            "collective.dist.tests.test_pypirc"
        ],
        "version": "0.2.5"
    },
    "collective.diversion": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.diversion",
            "collective.diversion.diversion",
            "collective.diversion.metadirectives",
            "collective.diversion.tests",
            "collective.diversion.tests.test_translation",
            "collective.diversion.tests.test_zcml",
            "collective.diversion.tests.test_zope_integration"
        ],
        "version": "1.0"
    },
    "collective.django": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.django",
            "collective.django.directives",
            "collective.django.manager",
            "collective.django.tests",
            "collective.django.tests.layers",
            "collective.django.tests.test_simple"
        ],
        "version": "1.0"
    },
    "collective.dms.basecontent": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.dms",
            "collective.dms.basecontent",
            "collective.dms.basecontent.browser",
            "collective.dms.basecontent.browser.batch",
            "collective.dms.basecontent.browser.column",
            "collective.dms.basecontent.browser.listing",
            "collective.dms.basecontent.browser.table",
            "collective.dms.basecontent.browser.viewlets",
            "collective.dms.basecontent.browser.views",
            "collective.dms.basecontent.dmsdocument",
            "collective.dms.basecontent.dmsfile",
            "collective.dms.basecontent.indexers",
            "collective.dms.basecontent.relateddocs",
            "collective.dms.basecontent.setuphandlers",
            "collective.dms.basecontent.source",
            "collective.dms.basecontent.testing",
            "collective.dms.basecontent.tests",
            "collective.dms.basecontent.tests.test_dmsdocument",
            "collective.dms.basecontent.widget"
        ],
        "version": "0.6"
    },
    "collective.dms.batchimport": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.dms",
            "collective.dms.batchimport",
            "collective.dms.batchimport.batchimport",
            "collective.dms.batchimport.fileimporter",
            "collective.dms.batchimport.testing",
            "collective.dms.batchimport.tests",
            "collective.dms.batchimport.tests.test_setup",
            "collective.dms.batchimport.utils"
        ],
        "version": "1.2.3"
    },
    "collective.dms.mailcontent": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.dms",
            "collective.dms.mailcontent",
            "collective.dms.mailcontent.behaviors",
            "collective.dms.mailcontent.browser",
            "collective.dms.mailcontent.browser.settings",
            "collective.dms.mailcontent.dmsmail",
            "collective.dms.mailcontent.indexers",
            "collective.dms.mailcontent.setuphandlers",
            "collective.dms.mailcontent.testing",
            "collective.dms.mailcontent.tests",
            "collective.dms.mailcontent.tests.test_behaviors",
            "collective.dms.mailcontent.tests.test_content",
            "collective.dms.mailcontent.upgrades",
            "collective.dms.mailcontent.upgrades.upgrades"
        ],
        "version": "0.5"
    },
    "collective.dms.scanbehavior": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.dms",
            "collective.dms.scanbehavior",
            "collective.dms.scanbehavior.behaviors",
            "collective.dms.scanbehavior.behaviors.behaviors",
            "collective.dms.scanbehavior.browser",
            "collective.dms.scanbehavior.interfaces",
            "collective.dms.scanbehavior.setuphandlers",
            "collective.dms.scanbehavior.testing",
            "collective.dms.scanbehavior.tests",
            "collective.dms.scanbehavior.tests.test_robot",
            "collective.dms.scanbehavior.tests.test_setup"
        ],
        "version": "0.4"
    },
    "collective.dnifield": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.dnifield",
            "collective.dnifield.field",
            "collective.dnifield.tests"
        ],
        "version": "1.0a1"
    },
    "collective.document-hide-summary": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.document_hide_summary",
            "collective.document_hide_summary.browser",
            "collective.document_hide_summary.interfaces",
            "collective.document_hide_summary.setuphandlers",
            "collective.document_hide_summary.testing",
            "collective.document_hide_summary.tests",
            "collective.document_hide_summary.tests.test_robot",
            "collective.document_hide_summary.tests.test_setup"
        ],
        "version": "1.1.1"
    },
    "collective.documentgenerator": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.documentgenerator",
            "collective.documentgenerator.AT_renderer",
            "collective.documentgenerator.DX_renderer",
            "collective.documentgenerator.browser",
            "collective.documentgenerator.browser.controlpanel",
            "collective.documentgenerator.browser.generation_view",
            "collective.documentgenerator.config",
            "collective.documentgenerator.content",
            "collective.documentgenerator.content.condition",
            "collective.documentgenerator.content.document_factory",
            "collective.documentgenerator.content.file_representation",
            "collective.documentgenerator.content.merge_templates",
            "collective.documentgenerator.content.pod_template",
            "collective.documentgenerator.content.style_template",
            "collective.documentgenerator.content.vocabulary",
            "collective.documentgenerator.demo",
            "collective.documentgenerator.demo.helper",
            "collective.documentgenerator.events",
            "collective.documentgenerator.events.pod_templates_events",
            "collective.documentgenerator.events.styles_events",
            "collective.documentgenerator.helper",
            "collective.documentgenerator.helper.archetypes",
            "collective.documentgenerator.helper.base",
            "collective.documentgenerator.helper.dexterity",
            "collective.documentgenerator.interfaces",
            "collective.documentgenerator.setuphandlers",
            "collective.documentgenerator.testing",
            "collective.documentgenerator.tests",
            "collective.documentgenerator.tests.test_AT_helper_view",
            "collective.documentgenerator.tests.test_DX_helper_view",
            "collective.documentgenerator.tests.test_base_helper_view",
            "collective.documentgenerator.tests.test_config",
            "collective.documentgenerator.tests.test_configurable_pod_template",
            "collective.documentgenerator.tests.test_demo_profile",
            "collective.documentgenerator.tests.test_generation_view",
            "collective.documentgenerator.tests.test_pod_template",
            "collective.documentgenerator.tests.test_robot",
            "collective.documentgenerator.tests.test_setup",
            "collective.documentgenerator.tests.test_style_template",
            "collective.documentgenerator.tests.test_sub_template",
            "collective.documentgenerator.tests.test_utils",
            "collective.documentgenerator.tests.test_vocabulary",
            "collective.documentgenerator.utils",
            "collective.documentgenerator.viewlets",
            "collective.documentgenerator.viewlets.generationlinks"
        ],
        "version": "1.0.5"
    },
    "collective.documentviewer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.documentviewer",
            "collective.documentviewer.adapters",
            "collective.documentviewer.async",
            "collective.documentviewer.browser",
            "collective.documentviewer.browser.controlpanel",
            "collective.documentviewer.browser.settings",
            "collective.documentviewer.browser.traverse",
            "collective.documentviewer.browser.views",
            "collective.documentviewer.catalog",
            "collective.documentviewer.config",
            "collective.documentviewer.convert",
            "collective.documentviewer.events",
            "collective.documentviewer.interfaces",
            "collective.documentviewer.iso639_2_utf8",
            "collective.documentviewer.settings",
            "collective.documentviewer.storage",
            "collective.documentviewer.subscribers",
            "collective.documentviewer.testing",
            "collective.documentviewer.tests",
            "collective.documentviewer.tests.test_convert",
            "collective.documentviewer.tests.test_migrate",
            "collective.documentviewer.tests.test_storage",
            "collective.documentviewer.tests.test_views",
            "collective.documentviewer.upgrades",
            "collective.documentviewer.utils"
        ],
        "version": "5.0.0"
    },
    "collective.doormat": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.doormat",
            "collective.doormat.browser",
            "collective.doormat.browser.settings",
            "collective.doormat.browser.viewlets",
            "collective.doormat.config",
            "collective.doormat.interfaces",
            "collective.doormat.tests",
            "collective.doormat.tests.base",
            "collective.doormat.tests.test_doctest",
            "collective.doormat.vocabularies"
        ],
        "version": "0.1"
    },
    "collective.downloadtracker": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.downloadtracker",
            "collective.downloadtracker.browser",
            "collective.downloadtracker.browser.delete",
            "collective.downloadtracker.browser.interfaces",
            "collective.downloadtracker.browser.viewlets",
            "collective.downloadtracker.download_patch",
            "collective.downloadtracker.extender",
            "collective.downloadtracker.interfaces",
            "collective.downloadtracker.testing",
            "collective.downloadtracker.tests",
            "collective.downloadtracker.tests.test_setup"
        ],
        "version": "1.0b1"
    },
    "collective.dtwidget": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.dtwidget",
            "collective.dtwidget.dtwidget"
        ],
        "version": "0.3"
    },
    "collective.dualresources": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.dualresources",
            "collective.dualresources.testing",
            "collective.dualresources.tests",
            "collective.dualresources.tests.test_setup",
            "collective.dualresources.zcml"
        ],
        "version": "0.2"
    },
    "collective.duplicateaction": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.duplicateaction",
            "collective.duplicateaction.browser",
            "collective.duplicateaction.tests"
        ],
        "version": "1.0"
    },
    "collective.dynatree": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.dynatree",
            "collective.dynatree.atwidget",
            "collective.dynatree.dxwidget",
            "collective.dynatree.example",
            "collective.dynatree.example.at",
            "collective.dynatree.example.at.archetype",
            "collective.dynatree.example.dx",
            "collective.dynatree.example.dx.behavior",
            "collective.dynatree.interfaces",
            "collective.dynatree.tests",
            "collective.dynatree.utils"
        ],
        "version": "2.0"
    },
    "collective.easyform": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.easyform",
            "collective.easyform.actions",
            "collective.easyform.api",
            "collective.easyform.browser",
            "collective.easyform.browser.actions",
            "collective.easyform.browser.controlpanel",
            "collective.easyform.browser.exportimport",
            "collective.easyform.browser.fields",
            "collective.easyform.browser.view",
            "collective.easyform.browser.widgets",
            "collective.easyform.config",
            "collective.easyform.content",
            "collective.easyform.exportimport",
            "collective.easyform.fields",
            "collective.easyform.interfaces",
            "collective.easyform.interfaces.actions",
            "collective.easyform.interfaces.customscript",
            "collective.easyform.interfaces.easyform",
            "collective.easyform.interfaces.fields",
            "collective.easyform.interfaces.mailer",
            "collective.easyform.interfaces.savedata",
            "collective.easyform.interfaces.validators",
            "collective.easyform.subscribers",
            "collective.easyform.tests",
            "collective.easyform.tests.base",
            "collective.easyform.tests.testCustomScript",
            "collective.easyform.tests.testDocTests",
            "collective.easyform.tests.testEmbedding",
            "collective.easyform.tests.testEvents",
            "collective.easyform.tests.testExportImport",
            "collective.easyform.tests.testFunctions",
            "collective.easyform.tests.testInterfaces",
            "collective.easyform.tests.testLikertField",
            "collective.easyform.tests.testMailer",
            "collective.easyform.tests.testSaver",
            "collective.easyform.tests.testSetup",
            "collective.easyform.tests.testTools",
            "collective.easyform.tests.testValidators",
            "collective.easyform.tests.test_robot",
            "collective.easyform.validators",
            "collective.easyform.vocabularies"
        ],
        "version": "2.0.0a2"
    },
    "collective.easyslider": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.easyslider",
            "collective.easyslider.browser",
            "collective.easyslider.browser.base",
            "collective.easyslider.browser.forms",
            "collective.easyslider.browser.transient",
            "collective.easyslider.browser.utils",
            "collective.easyslider.browser.viewlet",
            "collective.easyslider.browser.views",
            "collective.easyslider.configlet",
            "collective.easyslider.importexport",
            "collective.easyslider.interfaces",
            "collective.easyslider.portlets",
            "collective.easyslider.portlets.slider",
            "collective.easyslider.settings",
            "collective.easyslider.tags",
            "collective.easyslider.testing",
            "collective.easyslider.tests",
            "collective.easyslider.tests.test_doctests",
            "collective.easyslider.tests.test_portlet",
            "collective.easyslider.tests.test_setup",
            "collective.easyslider.upgrades",
            "collective.easyslider.utils",
            "collective.easyslider.vocabularies",
            "collective.easyslider.widgets"
        ],
        "version": "1.4.1"
    },
    "collective.easyslideshow": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.easyslideshow",
            "collective.easyslideshow.Extensions",
            "collective.easyslideshow.Extensions.Install",
            "collective.easyslideshow.browser",
            "collective.easyslideshow.browser.easyslideshow",
            "collective.easyslideshow.browser.interfaces",
            "collective.easyslideshow.browser.slideshowmanager",
            "collective.easyslideshow.browser.slideshowview",
            "collective.easyslideshow.events",
            "collective.easyslideshow.indexers",
            "collective.easyslideshow.interfaces",
            "collective.easyslideshow.portlets",
            "collective.easyslideshow.portlets.slideshow",
            "collective.easyslideshow.setuphandlers",
            "collective.easyslideshow.subscribers",
            "collective.easyslideshow.tests",
            "collective.easyslideshow.tests.base",
            "collective.easyslideshow.tests.test_doctest",
            "collective.easyslideshow.tests.test_slideview",
            "collective.easyslideshow.tests.test_subscribers",
            "collective.easyslideshow.upgrades",
            "collective.easyslideshow.utils"
        ],
        "version": "3.0"
    },
    "collective.easytemplate": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.easytemplate",
            "collective.easytemplate.actions",
            "collective.easytemplate.actions.mail",
            "collective.easytemplate.browser",
            "collective.easytemplate.browser.portlets",
            "collective.easytemplate.browser.portlets.interfaces",
            "collective.easytemplate.browser.portlets.templated",
            "collective.easytemplate.config",
            "collective.easytemplate.content",
            "collective.easytemplate.content.TemplatedDocument",
            "collective.easytemplate.engine",
            "collective.easytemplate.fields",
            "collective.easytemplate.interfaces",
            "collective.easytemplate.messages",
            "collective.easytemplate.tagconfig",
            "collective.easytemplate.tags",
            "collective.easytemplate.tags.content",
            "collective.easytemplate.tags.i18n",
            "collective.easytemplate.tags.rss",
            "collective.easytemplate.tags.views",
            "collective.easytemplate.tests",
            "collective.easytemplate.tests.base",
            "collective.easytemplate.tests.test_content",
            "collective.easytemplate.tests.test_i18n",
            "collective.easytemplate.tests.test_jinja_zope_security",
            "collective.easytemplate.tests.test_mail",
            "collective.easytemplate.tests.test_portlet",
            "collective.easytemplate.tests.test_viewlets",
            "collective.easytemplate.utils"
        ],
        "version": "0.8.0"
    },
    "collective.eclipsescripts": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "collective.editablemenu": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.editablemenu",
            "collective.editablemenu.browser",
            "collective.editablemenu.browser.controlpanel",
            "collective.editablemenu.browser.interfaces",
            "collective.editablemenu.browser.menu_support_view",
            "collective.editablemenu.browser.viewlets",
            "collective.editablemenu.interfaces",
            "collective.editablemenu.setuphandlers",
            "collective.editablemenu.testing",
            "collective.editablemenu.tests",
            "collective.editablemenu.tests.test_robot",
            "collective.editablemenu.tests.test_setup",
            "collective.editablemenu.upgrades"
        ],
        "version": "0.10.1"
    },
    "collective.editmodeswitcher": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.editmodeswitcher",
            "collective.editmodeswitcher.browser",
            "collective.editmodeswitcher.caching",
            "collective.editmodeswitcher.config",
            "collective.editmodeswitcher.handlers",
            "collective.editmodeswitcher.testing",
            "collective.editmodeswitcher.tests",
            "collective.editmodeswitcher.tests.test_caching",
            "collective.editmodeswitcher.tests.test_functional"
        ],
        "version": "1.0.3"
    },
    "collective.editskinswitcher": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.editskinswitcher",
            "collective.editskinswitcher.browser",
            "collective.editskinswitcher.browser.document_preview",
            "collective.editskinswitcher.browser.interfaces",
            "collective.editskinswitcher.browser.menu",
            "collective.editskinswitcher.browser.view",
            "collective.editskinswitcher.browser.viewlets",
            "collective.editskinswitcher.config",
            "collective.editskinswitcher.monkeypatches",
            "collective.editskinswitcher.permissions",
            "collective.editskinswitcher.skin",
            "collective.editskinswitcher.tests",
            "collective.editskinswitcher.tests.add_preview",
            "collective.editskinswitcher.tests.base",
            "collective.editskinswitcher.tests.browser",
            "collective.editskinswitcher.tests.interfaces",
            "collective.editskinswitcher.tests.layer",
            "collective.editskinswitcher.tests.test_functional",
            "collective.editskinswitcher.tests.test_menu",
            "collective.editskinswitcher.tests.test_setup",
            "collective.editskinswitcher.tests.test_unit",
            "collective.editskinswitcher.tests.test_url_switch",
            "collective.editskinswitcher.tests.utils",
            "collective.editskinswitcher.traversal",
            "collective.editskinswitcher.upgrades",
            "collective.editskinswitcher.utils"
        ],
        "version": "3.2"
    },
    "collective.edm.listing": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.edm",
            "collective.edm.listing",
            "collective.edm.listing.editpopup",
            "collective.edm.listing.interfaces",
            "collective.edm.listing.listing",
            "collective.edm.listing.listingoptions",
            "collective.edm.listing.listingrights",
            "collective.edm.listing.quickupload",
            "collective.edm.listing.subscribers",
            "collective.edm.listing.tests",
            "collective.edm.listing.upgrades",
            "collective.edm.listing.utils"
        ],
        "version": "0.13"
    },
    "collective.eeafaceted.collectionwidget": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.eeafaceted",
            "collective.eeafaceted.collectionwidget",
            "collective.eeafaceted.collectionwidget.adapters",
            "collective.eeafaceted.collectionwidget.browser",
            "collective.eeafaceted.collectionwidget.browser.views",
            "collective.eeafaceted.collectionwidget.categories",
            "collective.eeafaceted.collectionwidget.interfaces",
            "collective.eeafaceted.collectionwidget.setuphandlers",
            "collective.eeafaceted.collectionwidget.testing",
            "collective.eeafaceted.collectionwidget.testing.events",
            "collective.eeafaceted.collectionwidget.testing.layers",
            "collective.eeafaceted.collectionwidget.testing.testcase",
            "collective.eeafaceted.collectionwidget.tests",
            "collective.eeafaceted.collectionwidget.tests.test_categories",
            "collective.eeafaceted.collectionwidget.tests.test_robot",
            "collective.eeafaceted.collectionwidget.tests.test_setup",
            "collective.eeafaceted.collectionwidget.tests.test_vocabulary",
            "collective.eeafaceted.collectionwidget.tests.test_widget",
            "collective.eeafaceted.collectionwidget.vocabulary",
            "collective.eeafaceted.collectionwidget.widgets",
            "collective.eeafaceted.collectionwidget.widgets.widget"
        ],
        "version": "0.6"
    },
    "collective.eeafaceted.z3ctable": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.eeafaceted",
            "collective.eeafaceted.z3ctable",
            "collective.eeafaceted.z3ctable.browser",
            "collective.eeafaceted.z3ctable.browser.overrides",
            "collective.eeafaceted.z3ctable.browser.views",
            "collective.eeafaceted.z3ctable.columns",
            "collective.eeafaceted.z3ctable.interfaces",
            "collective.eeafaceted.z3ctable.setuphandlers",
            "collective.eeafaceted.z3ctable.testing",
            "collective.eeafaceted.z3ctable.tests",
            "collective.eeafaceted.z3ctable.tests.test_columns",
            "collective.eeafaceted.z3ctable.tests.test_robot",
            "collective.eeafaceted.z3ctable.tests.test_setup",
            "collective.eeafaceted.z3ctable.tests.test_table",
            "collective.eeafaceted.z3ctable.tests.views",
            "collective.eeafaceted.z3ctable.tests.vocabularies"
        ],
        "version": "0.19"
    },
    "collective.eeatags.collection": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.eeatags",
            "collective.eeatags.collection",
            "collective.eeatags.collection.browser",
            "collective.eeatags.collection.interfaces",
            "collective.eeatags.collection.setuphandlers",
            "collective.eeatags.collection.testing",
            "collective.eeatags.collection.tests",
            "collective.eeatags.collection.tests.test_robot",
            "collective.eeatags.collection.tests.test_setup"
        ],
        "version": "1.0a1"
    },
    "collective.eggproxy": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.eggproxy",
            "collective.eggproxy.apache_handler",
            "collective.eggproxy.config",
            "collective.eggproxy.tests",
            "collective.eggproxy.tests.test_utils",
            "collective.eggproxy.tests.test_wsgi",
            "collective.eggproxy.update_script",
            "collective.eggproxy.utils",
            "collective.eggproxy.wsgi"
        ],
        "version": "0.5.1"
    },
    "collective.elasticindex": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.elasticindex",
            "collective.elasticindex.browser",
            "collective.elasticindex.browser.portlet",
            "collective.elasticindex.browser.search",
            "collective.elasticindex.browser.settings",
            "collective.elasticindex.changes",
            "collective.elasticindex.interfaces",
            "collective.elasticindex.settings",
            "collective.elasticindex.subscribers",
            "collective.elasticindex.tests",
            "collective.elasticindex.tests.base",
            "collective.elasticindex.tests.test_indexing",
            "collective.elasticindex.utils"
        ],
        "version": "1.2.5"
    },
    "collective.elasticsearch": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.elasticsearch",
            "collective.elasticsearch.brain",
            "collective.elasticsearch.browser",
            "collective.elasticsearch.browser.controlpanel",
            "collective.elasticsearch.browser.search",
            "collective.elasticsearch.browser.utilviews",
            "collective.elasticsearch.es",
            "collective.elasticsearch.hook",
            "collective.elasticsearch.indexes",
            "collective.elasticsearch.interfaces",
            "collective.elasticsearch.mapping",
            "collective.elasticsearch.patches",
            "collective.elasticsearch.query",
            "collective.elasticsearch.testing",
            "collective.elasticsearch.tests",
            "collective.elasticsearch.tests.test_catalog",
            "collective.elasticsearch.tests.test_search",
            "collective.elasticsearch.upgrades",
            "collective.elasticsearch.utils"
        ],
        "version": "2.0.0a6"
    },
    "collective.elephantvocabulary": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.elephantvocabulary",
            "collective.elephantvocabulary.base",
            "collective.elephantvocabulary.hidden",
            "collective.elephantvocabulary.interfaces",
            "collective.elephantvocabulary.testing",
            "collective.elephantvocabulary.tests",
            "collective.elephantvocabulary.visible",
            "collective.elephantvocabulary.vocabulary"
        ],
        "version": "0.2.5"
    },
    "collective.emailconfirmationregistration": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.emailconfirmationregistration",
            "collective.emailconfirmationregistration.browser",
            "collective.emailconfirmationregistration.interfaces",
            "collective.emailconfirmationregistration.upgrades"
        ],
        "version": "1.2.0b5"
    },
    "collective.emaillogin": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.emaillogin",
            "collective.emaillogin.migration",
            "collective.emaillogin.utils"
        ],
        "version": "1.3"
    },
    "collective.emaillogin4": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.emaillogin4",
            "collective.emaillogin4.patches",
            "collective.emaillogin4.patches.cmfplone",
            "collective.emaillogin4.patches.cmfplone.utils",
            "collective.emaillogin4.patches.pa_controlpanel",
            "collective.emaillogin4.patches.pa_controlpanel.security",
            "collective.emaillogin4.patches.pa_controlpanel.tests",
            "collective.emaillogin4.patches.pa_controlpanel.tests.test_doctests",
            "collective.emaillogin4.patches.pa_upgrade",
            "collective.emaillogin4.patches.pa_upgrade.final",
            "collective.emaillogin4.patches.pa_upgrade.tests",
            "collective.emaillogin4.patches.pa_users",
            "collective.emaillogin4.patches.pa_users.interfaces",
            "collective.emaillogin4.patches.pa_users.personalpreferences",
            "collective.emaillogin4.patches.pa_users.register",
            "collective.emaillogin4.patches.pa_users.tests",
            "collective.emaillogin4.patches.pa_users.tests.test_doctests",
            "collective.emaillogin4.patches.pa_users.tests.test_userid_generator",
            "collective.emaillogin4.patches.pa_users.utils",
            "collective.emaillogin4.patches.plonepas",
            "collective.emaillogin4.patches.plonepas.property",
            "collective.emaillogin4.setuphandlers",
            "collective.emaillogin4.tests"
        ],
        "version": "1.3"
    },
    "collective.embedly": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.embedly",
            "collective.embedly.browser",
            "collective.embedly.browser.controlpanel",
            "collective.embedly.browser.tools",
            "collective.embedly.interfaces",
            "collective.embedly.setuphandlers",
            "collective.embedly.tests",
            "collective.embedly.tests.layer",
            "collective.embedly.tests.patch",
            "collective.embedly.tests.test_controlpanel",
            "collective.embedly.tests.tests",
            "collective.embedly.transform"
        ],
        "version": "2.4"
    },
    "collective.envlogfile": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.envlogfile",
            "collective.envlogfile.handlers"
        ],
        "version": "1.0.0"
    },
    "collective.error.detector": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.error",
            "collective.error.detector",
            "collective.error.detector.config",
            "collective.error.detector.handlers",
            "collective.error.detector.interfaces",
            "collective.error.detector.memoize",
            "collective.error.detector.requestutils",
            "collective.error.detector.testing",
            "collective.error.detector.tests",
            "collective.error.detector.tests.test_logger",
            "collective.error.detector.tests.test_setup"
        ],
        "version": "0.1.0b1"
    },
    "collective.etherpad": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.etherpad",
            "collective.etherpad.api",
            "collective.etherpad.archetypes",
            "collective.etherpad.dexterity",
            "collective.etherpad.etherpad_view",
            "collective.etherpad.layer",
            "collective.etherpad.settings",
            "collective.etherpad.testing",
            "collective.etherpad.tests",
            "collective.etherpad.tests.base",
            "collective.etherpad.tests.fake",
            "collective.etherpad.tests.test_api",
            "collective.etherpad.tests.test_archetypes",
            "collective.etherpad.tests.test_dexterity",
            "collective.etherpad.tests.test_setup",
            "collective.etherpad.upgrades"
        ],
        "version": "1.1.2"
    },
    "collective.eventinviter": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.eventinviter",
            "collective.eventinviter.attendees",
            "collective.eventinviter.interfaces",
            "collective.eventinviter.inviter",
            "collective.eventinviter.tests",
            "collective.eventinviter.tests.common",
            "collective.eventinviter.tests.test_inviter"
        ],
        "version": "0.1b1"
    },
    "collective.examples.diazo": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.examples",
            "collective.examples.diazo",
            "collective.examples.diazo.tests"
        ],
        "version": "0.2"
    },
    "collective.examples.userdata": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.examples",
            "collective.examples.userdata",
            "collective.examples.userdata.interfaces",
            "collective.examples.userdata.testing",
            "collective.examples.userdata.tests",
            "collective.examples.userdata.tests.test_userdataschema",
            "collective.examples.userdata.userdataschema"
        ],
        "version": "2.1"
    },
    "collective.excelexport": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.excelexport",
            "collective.excelexport.datasources",
            "collective.excelexport.datasources.base",
            "collective.excelexport.datasources.eeafaceted",
            "collective.excelexport.datasources.eeafaceted.datasource",
            "collective.excelexport.datasources.eeafaceted.view",
            "collective.excelexport.datasources.folder",
            "collective.excelexport.datasources.search",
            "collective.excelexport.exportables",
            "collective.excelexport.exportables.base",
            "collective.excelexport.exportables.dexterityfields",
            "collective.excelexport.interfaces",
            "collective.excelexport.setuphandlers",
            "collective.excelexport.styles",
            "collective.excelexport.testing",
            "collective.excelexport.tests",
            "collective.excelexport.tests.test_setup",
            "collective.excelexport.view"
        ],
        "version": "1.3"
    },
    "collective.exhibit": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.exhibit",
            "collective.exhibit.browser",
            "collective.exhibit.browser.controlpanel",
            "collective.exhibit.browser.exhibititem",
            "collective.exhibit.browser.helpers",
            "collective.exhibit.config",
            "collective.exhibit.content",
            "collective.exhibit.content.exhibit",
            "collective.exhibit.content.exhibititem",
            "collective.exhibit.content.exhibitsection",
            "collective.exhibit.interfaces",
            "collective.exhibit.portlets",
            "collective.exhibit.portlets.interfaces",
            "collective.exhibit.portlets.navigation",
            "collective.exhibit.setuphandlers",
            "collective.exhibit.testing",
            "collective.exhibit.tests",
            "collective.exhibit.tests.test_controlpanel",
            "collective.exhibit.tests.test_exhibit",
            "collective.exhibit.tests.test_exhibititem",
            "collective.exhibit.tests.test_exhibitsection",
            "collective.exhibit.tests.test_page_repository"
        ],
        "version": "1.0a1"
    },
    "collective.explicitacquisition": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.explicitacquisition",
            "collective.explicitacquisition.events",
            "collective.explicitacquisition.interfaces",
            "collective.explicitacquisition.testing",
            "collective.explicitacquisition.tests",
            "collective.explicitacquisition.tests.test_bad_acquisition"
        ],
        "version": "1.1"
    },
    "collective.externaleditor": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.externaleditor",
            "collective.externaleditor.browser",
            "collective.externaleditor.browser.controlpanel",
            "collective.externaleditor.browser.views",
            "collective.externaleditor.interfaces",
            "collective.externaleditor.tests",
            "collective.externaleditor.tests.test_doctests",
            "collective.externaleditor.upgrades"
        ],
        "version": "1.0.3"
    },
    "collective.externalimageeditor": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.externalimageeditor",
            "collective.externalimageeditor.Extensions",
            "collective.externalimageeditor.app_config",
            "collective.externalimageeditor.browser",
            "collective.externalimageeditor.browser.methods",
            "collective.externalimageeditor.browser.viewlets",
            "collective.externalimageeditor.controlpanel",
            "collective.externalimageeditor.dashboard",
            "collective.externalimageeditor.interfaces",
            "collective.externalimageeditor.migrations",
            "collective.externalimageeditor.migrations.v11",
            "collective.externalimageeditor.services",
            "collective.externalimageeditor.session",
            "collective.externalimageeditor.setuphandlers",
            "collective.externalimageeditor.testing",
            "collective.externalimageeditor.tests",
            "collective.externalimageeditor.tests.base",
            "collective.externalimageeditor.tests.globals",
            "collective.externalimageeditor.tests.test_doctests",
            "collective.externalimageeditor.tests.test_methods",
            "collective.externalimageeditor.tests.test_services",
            "collective.externalimageeditor.tests.test_session",
            "collective.externalimageeditor.tests.test_setup"
        ],
        "version": "1.6"
    },
    "collective.externalizelink": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.externalizelink",
            "collective.externalizelink.configuration",
            "collective.externalizelink.controlpanel",
            "collective.externalizelink.interfaces",
            "collective.externalizelink.persistent_field",
            "collective.externalizelink.testing"
        ],
        "version": "0.1.0"
    },
    "collective.externalportrait": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "collective.externalsnippet": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.externalsnippet",
            "collective.externalsnippet.extender",
            "collective.externalsnippet.interfaces",
            "collective.externalsnippet.tests",
            "collective.externalsnippet.viewlet"
        ],
        "version": "0.2"
    },
    "collective.facebook.accounts": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.facebook",
            "collective.facebook.accounts",
            "collective.facebook.accounts.Extensions",
            "collective.facebook.accounts.Extensions.Install",
            "collective.facebook.accounts.browser",
            "collective.facebook.accounts.browser.controlpanel",
            "collective.facebook.accounts.browser.interfaces",
            "collective.facebook.accounts.config",
            "collective.facebook.accounts.setuphandlers",
            "collective.facebook.accounts.testing",
            "collective.facebook.accounts.tests",
            "collective.facebook.accounts.tests.test_controlpanel",
            "collective.facebook.accounts.tests.test_setup"
        ],
        "version": "1.0b4"
    },
    "collective.facebook.instantarticles": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.facebook",
            "collective.facebook.instantarticles",
            "collective.facebook.instantarticles.browser",
            "collective.facebook.instantarticles.browser.controlpanel",
            "collective.facebook.instantarticles.browser.instant_article_view",
            "collective.facebook.instantarticles.browser.rss_view",
            "collective.facebook.instantarticles.browser.viewlets",
            "collective.facebook.instantarticles.interfaces",
            "collective.facebook.instantarticles.setuphandlers",
            "collective.facebook.instantarticles.testing",
            "collective.facebook.instantarticles.tests",
            "collective.facebook.instantarticles.tests.test_robot",
            "collective.facebook.instantarticles.tests.test_setup",
            "collective.facebook.instantarticles.tests.test_viewlet"
        ],
        "version": "1.0.0"
    },
    "collective.facebook.portlets": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.facebook",
            "collective.facebook.portlets",
            "collective.facebook.portlets.Extensions",
            "collective.facebook.portlets.Extensions.Install",
            "collective.facebook.portlets.config",
            "collective.facebook.portlets.fbactivity",
            "collective.facebook.portlets.fbwall",
            "collective.facebook.portlets.setuphandlers",
            "collective.facebook.portlets.testing",
            "collective.facebook.portlets.tests",
            "collective.facebook.portlets.tests.test_portlet",
            "collective.facebook.portlets.tests.test_setup"
        ],
        "version": "1.0b2"
    },
    "collective.facetednavigation": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.facetednavigation",
            "collective.facetednavigation.browser",
            "collective.facetednavigation.browser.batch",
            "collective.facetednavigation.browser.facetednavigation",
            "collective.facetednavigation.browser.utils",
            "collective.facetednavigation.exportimport",
            "collective.facetednavigation.tests",
            "collective.facetednavigation.tests.base",
            "collective.facetednavigation.tests.test_browser_batch",
            "collective.facetednavigation.tests.test_browser_utils",
            "collective.facetednavigation.tests.test_browser_view",
            "collective.facetednavigation.tests.test_installation",
            "collective.facetednavigation.tests.test_kss_actions",
            "collective.facetednavigation.tests.test_tool",
            "collective.facetednavigation.tool"
        ],
        "version": "0.7.2"
    },
    "collective.facets": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.facets",
            "collective.facets.browser",
            "collective.facets.interfaces",
            "collective.facets.schema",
            "collective.facets.testing",
            "collective.facets.tests",
            "collective.facets.tests.test_facets",
            "collective.facets.userlist",
            "collective.facets.utils",
            "collective.facets.validation",
            "collective.facets.vocabularies"
        ],
        "version": "1.2"
    },
    "collective.facetsupport": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.facetsupport",
            "collective.facetsupport.adapters",
            "collective.facetsupport.browser",
            "collective.facetsupport.browser.views",
            "collective.facetsupport.config",
            "collective.facetsupport.interfaces",
            "collective.facetsupport.tests",
            "collective.facetsupport.tests.base",
            "collective.facetsupport.tests.dummy_content",
            "collective.facetsupport.tests.test_doc",
            "collective.facetsupport.tests.test_integration"
        ],
        "version": "0.1a"
    },
    "collective.fancybox": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.fancybox",
            "collective.fancybox.dtmlresource"
        ],
        "version": "0.5.1"
    },
    "collective.fancyboxgallery": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.fancyboxgallery",
            "collective.fancyboxgallery.browser",
            "collective.fancyboxgallery.browser.fancybox",
            "collective.fancyboxgallery.browser.interfaces",
            "collective.fancyboxgallery.i18n",
            "collective.fancyboxgallery.tests",
            "collective.fancyboxgallery.tests.base",
            "collective.fancyboxgallery.tests.layer",
            "collective.fancyboxgallery.tests.test_setup",
            "collective.fancyboxgallery.upgrades",
            "collective.fancyboxgallery.vocabulary"
        ],
        "version": "1.0"
    },
    "collective.fancyzoomview": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.fancyzoomview",
            "collective.fancyzoomview.browser",
            "collective.fancyzoomview.browser.views",
            "collective.fancyzoomview.setuphandlers",
            "collective.fancyzoomview.tests",
            "collective.fancyzoomview.tests.base",
            "collective.fancyzoomview.tests.test_doctest"
        ],
        "version": "1.0.2"
    },
    "collective.fastview": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.fastview",
            "collective.fastview.interfaces",
            "collective.fastview.tests",
            "collective.fastview.utilities",
            "collective.fastview.views"
        ],
        "version": "0.2.2"
    },
    "collective.favorites": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.favorites",
            "collective.favorites.actions",
            "collective.favorites.interfaces",
            "collective.favorites.policies",
            "collective.favorites.policies.uid",
            "collective.favorites.portlet",
            "collective.favorites.portlet.favorites",
            "collective.favorites.storage",
            "collective.favorites.testing",
            "collective.favorites.tests",
            "collective.favorites.tests.test_favorites",
            "collective.favorites.upgrades",
            "collective.favorites.viewlet"
        ],
        "version": "1.1.7"
    },
    "collective.favoriting": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.favoriting",
            "collective.favoriting.browser",
            "collective.favoriting.browser.favoriting_view",
            "collective.favoriting.layer",
            "collective.favoriting.permissions",
            "collective.favoriting.storage",
            "collective.favoriting.testing",
            "collective.favoriting.tests",
            "collective.favoriting.tests.base",
            "collective.favoriting.tests.test_robot",
            "collective.favoriting.tests.test_setup",
            "collective.favoriting.tests.test_storage",
            "collective.favoriting.tests.test_views",
            "collective.favoriting.upgrades"
        ],
        "version": "1.0.2"
    },
    "collective.fb": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.fb",
            "collective.fb.interfaces"
        ],
        "version": "1.0"
    },
    "collective.fbshare": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.fbshare",
            "collective.fbshare.browser",
            "collective.fbshare.browser.controlpanel",
            "collective.fbshare.browser.sc_social_like",
            "collective.fbshare.browser.sc_social_like.fbplugin",
            "collective.fbshare.browser.view",
            "collective.fbshare.browser.viewlet",
            "collective.fbshare.interfaces",
            "collective.fbshare.setuphandlers",
            "collective.fbshare.testing",
            "collective.fbshare.tests",
            "collective.fbshare.tests.base",
            "collective.fbshare.tests.test_view",
            "collective.fbshare.tests.test_viewlet",
            "collective.fbshare.vocabularies"
        ],
        "version": "0.3.2"
    },
    "collective.feedaggregator": {
        "cmdline": [],
        "modules": [
            "feedaggregator",
            "feedaggregator.Extensions",
            "feedaggregator.Extensions.Install",
            "feedaggregator.browser",
            "feedaggregator.config",
            "feedaggregator.content",
            "feedaggregator.interfaces",
            "feedaggregator.logger",
            "feedaggregator.setuphandlers",
            "feedaggregator.testing",
            "feedaggregator.tests",
            "feedaggregator.tests.test_content",
            "feedaggregator.tests.test_feedaggregator_tile",
            "feedaggregator.tests.test_setup",
            "feedaggregator.tiles",
            "feedaggregator.tiles.feedaggregator"
        ],
        "version": "1.0a2"
    },
    "collective.feedfiller": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.feedfiller",
            "collective.feedfiller.Extensions",
            "collective.feedfiller.Extensions.Install",
            "collective.feedfiller.adapters",
            "collective.feedfiller.browser",
            "collective.feedfiller.browser.feed",
            "collective.feedfiller.browser.raw",
            "collective.feedfiller.doc",
            "collective.feedfiller.events",
            "collective.feedfiller.filler",
            "collective.feedfiller.flay",
            "collective.feedfiller.flayregistry",
            "collective.feedfiller.handlers",
            "collective.feedfiller.interfaces",
            "collective.feedfiller.openanything",
            "collective.feedfiller.tests",
            "collective.feedfiller.tests.Xtesturllib2",
            "collective.feedfiller.tests.base",
            "collective.feedfiller.tests.pageInspector",
            "collective.feedfiller.tests.test_setup",
            "collective.feedfiller.tests.tests",
            "collective.feedfiller.utils"
        ],
        "version": "0.1dev-r77946"
    },
    "collective.filemeta": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.filemeta",
            "collective.filemeta.base",
            "collective.filemeta.behaviors",
            "collective.filemeta.browser",
            "collective.filemeta.browser.views",
            "collective.filemeta.content",
            "collective.filemeta.interfaces",
            "collective.filemeta.setuphandlers",
            "collective.filemeta.subscribers",
            "collective.filemeta.testing",
            "collective.filemeta.tests",
            "collective.filemeta.tests.test_documentfile",
            "collective.filemeta.tests.test_robot",
            "collective.filemeta.tests.test_setup",
            "collective.filemeta.utilities"
        ],
        "version": "1.0rc3"
    },
    "collective.filepreviewbehavior": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.filepreviewbehavior",
            "collective.filepreviewbehavior.adapters",
            "collective.filepreviewbehavior.interfaces",
            "collective.filepreviewbehavior.tests",
            "collective.filepreviewbehavior.tests.test_doctests",
            "collective.filepreviewbehavior.views"
        ],
        "version": "1.0a1"
    },
    "collective.filteredlocking": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.filteredlocking",
            "collective.filteredlocking.config",
            "collective.filteredlocking.lockable",
            "collective.filteredlocking.testing",
            "collective.filteredlocking.tests"
        ],
        "version": "1.2.0"
    },
    "collective.fingerpointing": {
        "cmdline": [],
        "modules": [
            "fingerpointing",
            "fingerpointing.Extensions",
            "fingerpointing.Extensions.Install",
            "fingerpointing.browser",
            "fingerpointing.browser.logview",
            "fingerpointing.config",
            "fingerpointing.controlpanel",
            "fingerpointing.interfaces",
            "fingerpointing.logger",
            "fingerpointing.setuphandlers",
            "fingerpointing.subscribers",
            "fingerpointing.subscribers.iterate_logger",
            "fingerpointing.subscribers.lifecycle_logger",
            "fingerpointing.subscribers.pas_logger",
            "fingerpointing.subscribers.registry_logger",
            "fingerpointing.testing",
            "fingerpointing.tests",
            "fingerpointing.tests.test_controlpanel",
            "fingerpointing.tests.test_lifecycle_subscriber",
            "fingerpointing.tests.test_pas_subscriber",
            "fingerpointing.tests.test_registry_subscriber",
            "fingerpointing.tests.test_robot",
            "fingerpointing.tests.test_setup",
            "fingerpointing.tests.test_upgrades",
            "fingerpointing.tests.test_utils",
            "fingerpointing.tests.test_view",
            "fingerpointing.upgrades",
            "fingerpointing.upgrades.v2",
            "fingerpointing.upgrades.v3",
            "fingerpointing.utils"
        ],
        "version": "1.2b1"
    },
    "collective.flag": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.flag",
            "collective.flag.interfaces",
            "collective.flag.schemaextender",
            "collective.flag.tests",
            "collective.flag.tests.base",
            "collective.flag.tests.test_integration_unit"
        ],
        "version": "1.3"
    },
    "collective.flattr": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.flattr",
            "collective.flattr.browser",
            "collective.flattr.browser.controlpanel",
            "collective.flattr.browser.flattr",
            "collective.flattr.browser.flattrhelper",
            "collective.flattr.browser.viewlets",
            "collective.flattr.extender",
            "collective.flattr.handlers",
            "collective.flattr.interfaces",
            "collective.flattr.migrations",
            "collective.flattr.migrations.migrations",
            "collective.flattr.portlets",
            "collective.flattr.portlets.flattrportlet",
            "collective.flattr.tests",
            "collective.flattr.tests.base",
            "collective.flattr.tests.mocks",
            "collective.flattr.tests.test_controlpanel",
            "collective.flattr.tests.test_controlpanel_call",
            "collective.flattr.tests.test_flattr_helper_view",
            "collective.flattr.tests.test_flattr_view",
            "collective.flattr.tests.test_flattr_viewlet",
            "collective.flattr.tests.test_flattrportlet",
            "collective.flattr.vocab",
            "collective.flattr.widget"
        ],
        "version": "0.2"
    },
    "collective.flexibleordering": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.flexibleordering",
            "collective.flexibleordering.interfaces",
            "collective.flexibleordering.ordering",
            "collective.flexibleordering.subscriber",
            "collective.flexibleordering.tests"
        ],
        "version": "1.0beta2"
    },
    "collective.flexitopic": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.flexitopic",
            "collective.flexitopic.browser",
            "collective.flexitopic.browser.controlpanel",
            "collective.flexitopic.browser.flexijsonview",
            "collective.flexitopic.browser.flexitopicview",
            "collective.flexitopic.browser.interfaces",
            "collective.flexitopic.browser.utils",
            "collective.flexitopic.browser.viewlets",
            "collective.flexitopic.interfaces",
            "collective.flexitopic.portlets",
            "collective.flexitopic.portlets.flexitopicportlet",
            "collective.flexitopic.portlets.interfaces",
            "collective.flexitopic.portlets.viewlets",
            "collective.flexitopic.setuphandlers",
            "collective.flexitopic.tests",
            "collective.flexitopic.tests.base_flexitopicportlet",
            "collective.flexitopic.tests.test_flexitopicportlet"
        ],
        "version": "0.7.1"
    },
    "collective.flowplayer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.flowplayer",
            "collective.flowplayer.behaviors",
            "collective.flowplayer.browser",
            "collective.flowplayer.browser.portlet",
            "collective.flowplayer.browser.view",
            "collective.flowplayer.dexterity",
            "collective.flowplayer.events",
            "collective.flowplayer.exportimport",
            "collective.flowplayer.flv",
            "collective.flowplayer.interfaces",
            "collective.flowplayer.media",
            "collective.flowplayer.metadata_extraction",
            "collective.flowplayer.migration",
            "collective.flowplayer.schemaextenders",
            "collective.flowplayer.testing",
            "collective.flowplayer.tests",
            "collective.flowplayer.tests.test_doctests",
            "collective.flowplayer.tests.test_install",
            "collective.flowplayer.tests.test_link",
            "collective.flowplayer.tests.test_metadata_profiling",
            "collective.flowplayer.tests.test_migration",
            "collective.flowplayer.tests.test_uninstall",
            "collective.flowplayer.tests.test_utils",
            "collective.flowplayer.uninstall",
            "collective.flowplayer.utils"
        ],
        "version": "4.2.1"
    },
    "collective.flowplayer-toolbar": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.flowplayer_toolbar",
            "collective.flowplayer_toolbar.browser",
            "collective.flowplayer_toolbar.setuphandler",
            "collective.flowplayer_toolbar.tests"
        ],
        "version": "1.0.0"
    },
    "collective.flowplayercaptions": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.flowplayercaptions",
            "collective.flowplayercaptions.browser",
            "collective.flowplayercaptions.browser.viewlets",
            "collective.flowplayercaptions.events",
            "collective.flowplayercaptions.exportimport",
            "collective.flowplayercaptions.extender",
            "collective.flowplayercaptions.interfaces",
            "collective.flowplayercaptions.tests"
        ],
        "version": "0.1.0"
    },
    "collective.flowplayerclipviews": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.flowplayerclipviews",
            "collective.flowplayerclipviews.browser",
            "collective.flowplayerclipviews.browser.clip_views",
            "collective.flowplayerclipviews.browser.view",
            "collective.flowplayerclipviews.interfaces",
            "collective.flowplayerclipviews.view_stats"
        ],
        "version": "0.1.0a"
    },
    "collective.foldercontentsportletmanager": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.FolderContentsPortletManager",
            "collective.FolderContentsPortletManager.browser",
            "collective.FolderContentsPortletManager.browser.foldercontents",
            "collective.FolderContentsPortletManager.browser.interfaces",
            "collective.FolderContentsPortletManager.tests"
        ],
        "version": "0.2.1"
    },
    "collective.folderishpage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.folderishpage",
            "collective.folderishpage.browser",
            "collective.folderishpage.config",
            "collective.folderishpage.content",
            "collective.folderishpage.content.folderishdocument",
            "collective.folderishpage.interfaces",
            "collective.folderishpage.setuphandlers",
            "collective.folderishpage.tests",
            "collective.folderishpage.tests.doc_tests"
        ],
        "version": "0.8"
    },
    "collective.folderishtraverse": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.folderishtraverse",
            "collective.folderishtraverse.browser",
            "collective.folderishtraverse.browser.traverse_view",
            "collective.folderishtraverse.contentmenu"
        ],
        "version": "1.10"
    },
    "collective.folderishtypes": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.folderishtypes",
            "collective.folderishtypes.at",
            "collective.folderishtypes.at.browser",
            "collective.folderishtypes.at.browser.adapters",
            "collective.folderishtypes.at.content",
            "collective.folderishtypes.at.interfaces",
            "collective.folderishtypes.at.migration",
            "collective.folderishtypes.at.migration.migrate_plonearticle",
            "collective.folderishtypes.at.setuphandlers",
            "collective.folderishtypes.at.upgrades",
            "collective.folderishtypes.browser",
            "collective.folderishtypes.browser.listing_portlet",
            "collective.folderishtypes.browser.portlet_contextual_contents",
            "collective.folderishtypes.browser.viewlets",
            "collective.folderishtypes.content",
            "collective.folderishtypes.content.folderish_document",
            "collective.folderishtypes.content.folderish_event",
            "collective.folderishtypes.content.folderish_newsitem",
            "collective.folderishtypes.dx",
            "collective.folderishtypes.dx.content",
            "collective.folderishtypes.dx.interfaces",
            "collective.folderishtypes.dx.migration",
            "collective.folderishtypes.dx.migration.migrate_atdx_folderishtypes",
            "collective.folderishtypes.dx.redirectparent",
            "collective.folderishtypes.dx.upgrades",
            "collective.folderishtypes.interfaces",
            "collective.folderishtypes.upgrades",
            "collective.folderishtypes.vocabularies"
        ],
        "version": "2.0.2"
    },
    "collective.folderlogo": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.folderlogo",
            "collective.folderlogo.Extensions",
            "collective.folderlogo.Extensions.Install",
            "collective.folderlogo.browser",
            "collective.folderlogo.browser.viewlets",
            "collective.folderlogo.interfaces",
            "collective.folderlogo.interfaces.layer",
            "collective.folderlogo.tests",
            "collective.folderlogo.tests.base",
            "collective.folderlogo.tests.test_functional",
            "collective.folderlogo.tests.test_setup",
            "collective.folderlogo.tests.test_upgrades",
            "collective.folderlogo.upgrades"
        ],
        "version": "1.2"
    },
    "collective.folderorder": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.folderorder",
            "collective.folderorder.action",
            "collective.folderorder.form",
            "collective.folderorder.prepend",
            "collective.folderorder.reversed"
        ],
        "version": "1.4.1"
    },
    "collective.folderposition": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.folderposition"
        ],
        "version": "1.0"
    },
    "collective.fontawesome": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.fontawesome",
            "collective.fontawesome.adapters",
            "collective.fontawesome.example",
            "collective.fontawesome.interfaces",
            "collective.fontawesome.testing",
            "collective.fontawesome.tests",
            "collective.fontawesome.tests.base",
            "collective.fontawesome.tests.test_setup",
            "collective.fontawesome.upgrades"
        ],
        "version": "1.0.4"
    },
    "collective.footerportletmanager": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.footerportletmanager",
            "collective.footerportletmanager.layer",
            "collective.footerportletmanager.portletmanager",
            "collective.footerportletmanager.testing",
            "collective.footerportletmanager.tests",
            "collective.footerportletmanager.tests.base",
            "collective.footerportletmanager.tests.test_setup",
            "collective.footerportletmanager.upgrades"
        ],
        "version": "1.0"
    },
    "collective.forgetit": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.forgetit",
            "collective.forgetit.views"
        ],
        "version": "0.0.1"
    },
    "collective.formcriteria": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.formcriteria",
            "collective.formcriteria.columns",
            "collective.formcriteria.columns.browser",
            "collective.formcriteria.columns.content",
            "collective.formcriteria.columns.form",
            "collective.formcriteria.columns.setuphandlers",
            "collective.formcriteria.columns.utils",
            "collective.formcriteria.comma",
            "collective.formcriteria.contained",
            "collective.formcriteria.criteria",
            "collective.formcriteria.criteria.boolean",
            "collective.formcriteria.criteria.checkbox",
            "collective.formcriteria.criteria.comma",
            "collective.formcriteria.criteria.common",
            "collective.formcriteria.criteria.context",
            "collective.formcriteria.criteria.date",
            "collective.formcriteria.criteria.daterange",
            "collective.formcriteria.criteria.list",
            "collective.formcriteria.criteria.path",
            "collective.formcriteria.criteria.pulldown",
            "collective.formcriteria.criteria.relativepath",
            "collective.formcriteria.criteria.selection",
            "collective.formcriteria.criteria.simpleint",
            "collective.formcriteria.criteria.simplestring",
            "collective.formcriteria.criteria.sort",
            "collective.formcriteria.csv",
            "collective.formcriteria.csv.export",
            "collective.formcriteria.foldercontents",
            "collective.formcriteria.foldercontents.buttons",
            "collective.formcriteria.foldercontents.form",
            "collective.formcriteria.form",
            "collective.formcriteria.form.form",
            "collective.formcriteria.grouped",
            "collective.formcriteria.interfaces",
            "collective.formcriteria.portlet",
            "collective.formcriteria.portlet.navigation",
            "collective.formcriteria.portlet.portlet",
            "collective.formcriteria.sort",
            "collective.formcriteria.testing",
            "collective.formcriteria.tests",
            "collective.formcriteria.topic"
        ],
        "version": "2.1"
    },
    "collective.formlib.link": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.formlib",
            "collective.formlib.link",
            "collective.formlib.link.field",
            "collective.formlib.link.interfaces",
            "collective.formlib.link.tests",
            "collective.formlib.link.utils",
            "collective.formlib.link.widget"
        ],
        "version": "0.2"
    },
    "collective.formtoy": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.formtoy",
            "collective.formtoy.browser",
            "collective.formtoy.browser.formtoy",
            "collective.formtoy.tests"
        ],
        "version": "0.3.0"
    },
    "collective.formwidget.mathjax": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.formwidget",
            "collective.formwidget.mathjax",
            "collective.formwidget.mathjax.interfaces",
            "collective.formwidget.mathjax.testing",
            "collective.formwidget.mathjax.tests",
            "collective.formwidget.mathjax.tests.test_example",
            "collective.formwidget.mathjax.widget"
        ],
        "version": "1.0"
    },
    "collective.formwidget.uberselect": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.formwidget",
            "collective.formwidget.uberselect",
            "collective.formwidget.uberselect.archetypes",
            "collective.formwidget.uberselect.wref"
        ],
        "version": "0.1"
    },
    "collective.fourohfour": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.fourohfour",
            "collective.fourohfour.browser",
            "collective.fourohfour.interfaces",
            "collective.fourohfour.middleware",
            "collective.fourohfour.tests",
            "collective.fourohfour.tests.layer",
            "collective.fourohfour.tests.test_middleware",
            "collective.fourohfour.tests.test_setup"
        ],
        "version": "1.0a5"
    },
    "collective.fsdsimplifier": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.fsdsimplifier",
            "collective.fsdsimplifier.browser",
            "collective.fsdsimplifier.browser.interfaces",
            "collective.fsdsimplifier.browser.utils",
            "collective.fsdsimplifier.browser.viewlets",
            "collective.fsdsimplifier.person",
            "collective.fsdsimplifier.setuphandlers",
            "collective.fsdsimplifier.tests",
            "collective.fsdsimplifier.utility"
        ],
        "version": "1.3"
    },
    "collective.fsexternalmethod": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.fsexternalmethod",
            "collective.fsexternalmethod.fsexternalmethod"
        ],
        "version": "0.1"
    },
    "collective.fullview": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.fullview",
            "collective.fullview.full_view"
        ],
        "version": "1.3"
    },
    "collective.funkbot": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.funkbot",
            "collective.funkbot.funkbot",
            "collective.funkbot.tests"
        ],
        "version": "1.0"
    },
    "collective.funkload": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.funkload",
            "collective.funkload.bench",
            "collective.funkload.diff",
            "collective.funkload.label",
            "collective.funkload.loop",
            "collective.funkload.recorder",
            "collective.funkload.report",
            "collective.funkload.stamp",
            "collective.funkload.testcase",
            "collective.funkload.testing",
            "collective.funkload.tests",
            "collective.funkload.tests.tests"
        ],
        "version": "0.4"
    },
    "collective.futures": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.futures",
            "collective.futures.adapters",
            "collective.futures.api",
            "collective.futures.exceptions",
            "collective.futures.interfaces",
            "collective.futures.iterators",
            "collective.futures.testing",
            "collective.futures.tests",
            "collective.futures.tests.test_acceptance",
            "collective.futures.transforms"
        ],
        "version": "0.9.1"
    },
    "collective.gacontext": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.gacontext",
            "collective.gacontext.adapters",
            "collective.gacontext.browser",
            "collective.gacontext.browser.browser",
            "collective.gacontext.browser.viewlets",
            "collective.gacontext.interfaces",
            "collective.gacontext.utilities"
        ],
        "version": "0.2.1"
    },
    "collective.galleria": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.galleria",
            "collective.galleria.browser",
            "collective.galleria.browser.galleria",
            "collective.galleria.i18n",
            "collective.galleria.interfaces",
            "collective.galleria.interfaces.gallerialayerlayer",
            "collective.galleria.interfaces.settings",
            "collective.galleria.tests",
            "collective.galleria.upgrades",
            "collective.galleria.upgrades.v10xx"
        ],
        "version": "1.2.3"
    },
    "collective.galleriffic": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.galleriffic",
            "collective.galleriffic.interfaces",
            "collective.galleriffic.tests",
            "collective.galleriffic.view"
        ],
        "version": "1.1.6"
    },
    "collective.gallery": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.gallery",
            "collective.gallery.brain",
            "collective.gallery.browser",
            "collective.gallery.browser.galleries_view",
            "collective.gallery.cache",
            "collective.gallery.core",
            "collective.gallery.folder",
            "collective.gallery.i18n",
            "collective.gallery.interfaces",
            "collective.gallery.link",
            "collective.gallery.link.base",
            "collective.gallery.link.facebook",
            "collective.gallery.link.flickr",
            "collective.gallery.link.picasaweb",
            "collective.gallery.tests",
            "collective.gallery.tests.base",
            "collective.gallery.tests.layer",
            "collective.gallery.tests.test_core",
            "collective.gallery.tests.test_facebook",
            "collective.gallery.tests.test_flickr",
            "collective.gallery.tests.test_folder",
            "collective.gallery.tests.test_link",
            "collective.gallery.tests.test_picasa",
            "collective.gallery.tests.test_setup",
            "collective.gallery.tests.test_topic",
            "collective.gallery.tests.test_vocabularies",
            "collective.gallery.tests.utils",
            "collective.gallery.topic",
            "collective.gallery.upgrades",
            "collective.gallery.vocabularies"
        ],
        "version": "2.0.1"
    },
    "collective.gelf": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.gelf",
            "collective.gelf.handlers"
        ],
        "version": "0.9.2"
    },
    "collective.generic.devmode": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.generic",
            "collective.generic.devmode",
            "collective.generic.devmode.commands",
            "collective.generic.devmode.common",
            "collective.generic.devmode.devmode",
            "collective.generic.devmode.tests",
            "collective.generic.devmode.tests.globals",
            "collective.generic.devmode.tests.test_doctests"
        ],
        "version": "1.0"
    },
    "collective.generic.skel": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.generic",
            "collective.generic.skel",
            "collective.generic.skel.common",
            "collective.generic.skel.common.package",
            "collective.generic.skel.policy",
            "collective.generic.skel.policy.package",
            "collective.generic.skel.skin",
            "collective.generic.skel.skin.package",
            "collective.generic.skel.testing",
            "collective.generic.skel.testing.package",
            "collective.generic.skel.tma",
            "collective.generic.skel.tma.package"
        ],
        "version": "0.1.0"
    },
    "collective.generic.webbuilder": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.generic",
            "collective.generic.webbuilder",
            "collective.generic.webbuilder.build_index",
            "collective.generic.webbuilder.interfaces",
            "collective.generic.webbuilder.models",
            "collective.generic.webbuilder.paster",
            "collective.generic.webbuilder.plugins",
            "collective.generic.webbuilder.tests",
            "collective.generic.webbuilder.tests.globals",
            "collective.generic.webbuilder.tests.test_doctests",
            "collective.generic.webbuilder.tests.user_testcase",
            "collective.generic.webbuilder.tests.utils",
            "collective.generic.webbuilder.utils",
            "collective.generic.webbuilder.views",
            "collective.generic.webbuilder.webserver",
            "collective.generic.webbuilder.zcml"
        ],
        "version": "1.1"
    },
    "collective.genericsetup.ldap": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.genericsetup",
            "collective.genericsetup.ldap",
            "collective.genericsetup.ldap.exportimport",
            "collective.genericsetup.ldap.interfaces",
            "collective.genericsetup.ldap.tests"
        ],
        "version": "1.0dev-r82790"
    },
    "collective.geo.behaviour": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.behaviour",
            "collective.geo.behaviour.behaviour",
            "collective.geo.behaviour.interfaces",
            "collective.geo.behaviour.testing",
            "collective.geo.behaviour.tests",
            "collective.geo.behaviour.tests.test_behaviour",
            "collective.geo.behaviour.tests.test_setup"
        ],
        "version": "1.2"
    },
    "collective.geo.bundle": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.bundle",
            "collective.geo.bundle.profile",
            "collective.geo.bundle.testing",
            "collective.geo.bundle.tests",
            "collective.geo.bundle.tests.test_robot",
            "collective.geo.bundle.upgrades"
        ],
        "version": "2.3"
    },
    "collective.geo.contentlocations": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.contentlocations",
            "collective.geo.contentlocations.browser",
            "collective.geo.contentlocations.browser.controlpanel",
            "collective.geo.contentlocations.browser.geoshapeform",
            "collective.geo.contentlocations.browser.geostylesform",
            "collective.geo.contentlocations.browser.helperview",
            "collective.geo.contentlocations.config",
            "collective.geo.contentlocations.events",
            "collective.geo.contentlocations.geomanager",
            "collective.geo.contentlocations.geomarker",
            "collective.geo.contentlocations.geostylemanager",
            "collective.geo.contentlocations.indexer",
            "collective.geo.contentlocations.interfaces",
            "collective.geo.contentlocations.testing",
            "collective.geo.contentlocations.tests",
            "collective.geo.contentlocations.tests.test_base",
            "collective.geo.contentlocations.tests.test_controlpanel",
            "collective.geo.contentlocations.tests.test_form",
            "collective.geo.contentlocations.tests.test_geomanager",
            "collective.geo.contentlocations.tests.test_geomarker",
            "collective.geo.contentlocations.tests.test_setup",
            "collective.geo.contentlocations.upgrades",
            "collective.geo.contentlocations.utils",
            "collective.geo.contentlocations.vocabularies"
        ],
        "version": "3.1"
    },
    "collective.geo.exif": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.exif",
            "collective.geo.exif.browser",
            "collective.geo.exif.browser.forms",
            "collective.geo.exif.interfaces",
            "collective.geo.exif.readexif",
            "collective.geo.exif.tests",
            "collective.geo.exif.utils"
        ],
        "version": "0.1"
    },
    "collective.geo.faceted": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.faceted",
            "collective.geo.faceted.browser",
            "collective.geo.faceted.browser.mapviewlet",
            "collective.geo.faceted.browser.view",
            "collective.geo.faceted.interfaces",
            "collective.geo.faceted.setuphandlers",
            "collective.geo.faceted.testing",
            "collective.geo.faceted.tests",
            "collective.geo.faceted.tests.test_robot",
            "collective.geo.faceted.tests.test_setup",
            "collective.geo.faceted.tests.test_view",
            "collective.geo.faceted.tests.test_viewlet",
            "collective.geo.faceted.tests.test_widget",
            "collective.geo.faceted.widget",
            "collective.geo.faceted.widget.adapters",
            "collective.geo.faceted.widget.bounds",
            "collective.geo.faceted.widget.interfaces"
        ],
        "version": "1.0.1"
    },
    "collective.geo.fastkml": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.fastkml",
            "collective.geo.fastkml.browser",
            "collective.geo.fastkml.browser.kmldocument",
            "collective.geo.fastkml.interfaces",
            "collective.geo.fastkml.tests"
        ],
        "version": "0.3"
    },
    "collective.geo.file": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.file",
            "collective.geo.file.browser",
            "collective.geo.file.browser.filekmlview",
            "collective.geo.file.browser.maplayer",
            "collective.geo.file.config",
            "collective.geo.file.interfaces",
            "collective.geo.file.setuphandlers",
            "collective.geo.file.tests",
            "collective.geo.file.utils"
        ],
        "version": "0.6"
    },
    "collective.geo.flexitopic": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.flexitopic",
            "collective.geo.flexitopic.browser",
            "collective.geo.flexitopic.browser.flexitopicview",
            "collective.geo.flexitopic.browser.kmlview",
            "collective.geo.flexitopic.browser.maplayer",
            "collective.geo.flexitopic.interfaces",
            "collective.geo.flexitopic.portlets",
            "collective.geo.flexitopic.portlets.fleximapportlet",
            "collective.geo.flexitopic.portlets.maplayer",
            "collective.geo.flexitopic.portlets.viewlets",
            "collective.geo.flexitopic.profile",
            "collective.geo.flexitopic.setuphandlers",
            "collective.geo.flexitopic.tests",
            "collective.geo.flexitopic.tests.base_fleximapportlet",
            "collective.geo.flexitopic.tests.test_fleximapportlet"
        ],
        "version": "0.5"
    },
    "collective.geo.geographer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.geographer",
            "collective.geo.geographer.event",
            "collective.geo.geographer.geo",
            "collective.geo.geographer.geoview",
            "collective.geo.geographer.interfaces",
            "collective.geo.geographer.testing",
            "collective.geo.geographer.tests",
            "collective.geo.geographer.tests.test_doctests",
            "collective.geo.geographer.tests.test_permissions",
            "collective.geo.geographer.tests.test_setup"
        ],
        "version": "2.1"
    },
    "collective.geo.geopoint": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.geopoint",
            "collective.geo.geopoint.config",
            "collective.geo.geopoint.geopoint",
            "collective.geo.geopoint.geopointform",
            "collective.geo.geopoint.interfaces",
            "collective.geo.geopoint.schema",
            "collective.geo.geopoint.tests"
        ],
        "version": "0.1"
    },
    "collective.geo.index": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.index",
            "collective.geo.index.browser",
            "collective.geo.index.browser.kmlview",
            "collective.geo.index.browser.maplayer",
            "collective.geo.index.browser.query",
            "collective.geo.index.browser.search",
            "collective.geo.index.geometryindex",
            "collective.geo.index.index",
            "collective.geo.index.setuphandlers",
            "collective.geo.index.tests"
        ],
        "version": "0.1"
    },
    "collective.geo.json": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.json",
            "collective.geo.json.browser",
            "collective.geo.json.browser.jsonview",
            "collective.geo.json.interfaces",
            "collective.geo.json.testing",
            "collective.geo.json.tests",
            "collective.geo.json.tests.test_collection",
            "collective.geo.json.tests.test_document",
            "collective.geo.json.tests.test_folder",
            "collective.geo.json.tests.test_install"
        ],
        "version": "0.3"
    },
    "collective.geo.kml": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.kml",
            "collective.geo.kml.browser",
            "collective.geo.kml.browser.kmldocument",
            "collective.geo.kml.browser.kmldocument_macros",
            "collective.geo.kml.browser.kmlopenlayersview",
            "collective.geo.kml.browser.maplayers",
            "collective.geo.kml.browser.viewlets",
            "collective.geo.kml.config",
            "collective.geo.kml.interfaces",
            "collective.geo.kml.setuphandlers",
            "collective.geo.kml.testing",
            "collective.geo.kml.tests",
            "collective.geo.kml.tests.test_colorconversion",
            "collective.geo.kml.tests.test_doctests",
            "collective.geo.kml.tests.test_kmldocument",
            "collective.geo.kml.utils"
        ],
        "version": "3.3"
    },
    "collective.geo.leaflet": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.leaflet",
            "collective.geo.leaflet.browser",
            "collective.geo.leaflet.browser.collectivegeoleaflet_macros",
            "collective.geo.leaflet.browser.viewlets",
            "collective.geo.leaflet.browser.views",
            "collective.geo.leaflet.geomap",
            "collective.geo.leaflet.indexer",
            "collective.geo.leaflet.interfaces",
            "collective.geo.leaflet.maplayers",
            "collective.geo.leaflet.profile",
            "collective.geo.leaflet.setuphandlers",
            "collective.geo.leaflet.testing",
            "collective.geo.leaflet.tests",
            "collective.geo.leaflet.tests.test_geomap",
            "collective.geo.leaflet.tests.test_maplayers",
            "collective.geo.leaflet.tests.test_robot",
            "collective.geo.leaflet.tests.test_setup",
            "collective.geo.leaflet.upgradehandlers",
            "collective.geo.leaflet.utils"
        ],
        "version": "0.2.5"
    },
    "collective.geo.mapcontent": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.mapcontent",
            "collective.geo.mapcontent.browser",
            "collective.geo.mapcontent.config",
            "collective.geo.mapcontent.content",
            "collective.geo.mapcontent.content.mapcontent",
            "collective.geo.mapcontent.interfaces",
            "collective.geo.mapcontent.interfaces.mapcontent",
            "collective.geo.mapcontent.portlets",
            "collective.geo.mapcontent.tests",
            "collective.geo.mapcontent.tests.base",
            "collective.geo.mapcontent.tests.test_doctest"
        ],
        "version": "0.1"
    },
    "collective.geo.mapwidget": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.mapwidget",
            "collective.geo.mapwidget.browser",
            "collective.geo.mapwidget.browser.collectivegeo_macros",
            "collective.geo.mapwidget.browser.controlpanel",
            "collective.geo.mapwidget.browser.geocoder",
            "collective.geo.mapwidget.browser.geofeaturestyle_view",
            "collective.geo.mapwidget.browser.geosettings_view",
            "collective.geo.mapwidget.browser.interfaces",
            "collective.geo.mapwidget.browser.shapewidget",
            "collective.geo.mapwidget.browser.widget",
            "collective.geo.mapwidget.config",
            "collective.geo.mapwidget.indexer",
            "collective.geo.mapwidget.interfaces",
            "collective.geo.mapwidget.maplayers",
            "collective.geo.mapwidget.testing",
            "collective.geo.mapwidget.tests",
            "collective.geo.mapwidget.tests.test_defaultmaplayers",
            "collective.geo.mapwidget.tests.test_doctests",
            "collective.geo.mapwidget.tests.test_geocoder",
            "collective.geo.mapwidget.tests.test_geomacros",
            "collective.geo.mapwidget.upgrades",
            "collective.geo.mapwidget.utils",
            "collective.geo.mapwidget.vocabularies"
        ],
        "version": "2.4"
    },
    "collective.geo.openlayers": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.openlayers",
            "collective.geo.openlayers.browser",
            "collective.geo.openlayers.browser.interfaces",
            "collective.geo.openlayers.config",
            "collective.geo.openlayers.testing",
            "collective.geo.openlayers.tests",
            "collective.geo.openlayers.tests.test_doctests",
            "collective.geo.openlayers.tests.test_setup",
            "collective.geo.openlayers.upgrades"
        ],
        "version": "3.2b1"
    },
    "collective.geo.opensearch": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.opensearch",
            "collective.geo.opensearch.browser",
            "collective.geo.opensearch.browser.atomview",
            "collective.geo.opensearch.browser.extkmlview",
            "collective.geo.opensearch.browser.folderview",
            "collective.geo.opensearch.browser.kmlview",
            "collective.geo.opensearch.browser.maplayers",
            "collective.geo.opensearch.browser.mapview",
            "collective.geo.opensearch.browser.rssview",
            "collective.geo.opensearch.browser.utils",
            "collective.geo.opensearch.interfaces",
            "collective.geo.opensearch.tests"
        ],
        "version": "0.4"
    },
    "collective.geo.polymaps": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.polymaps",
            "collective.geo.polymaps.browser",
            "collective.geo.polymaps.browser.mapview",
            "collective.geo.polymaps.browser.utils",
            "collective.geo.polymaps.browser.viewlets",
            "collective.geo.polymaps.interfaces",
            "collective.geo.polymaps.setuphandlers",
            "collective.geo.polymaps.tests"
        ],
        "version": "0.1"
    },
    "collective.geo.settings": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.settings",
            "collective.geo.settings.config",
            "collective.geo.settings.events",
            "collective.geo.settings.field",
            "collective.geo.settings.interfaces",
            "collective.geo.settings.schema",
            "collective.geo.settings.setuphandlers",
            "collective.geo.settings.testing",
            "collective.geo.settings.tests",
            "collective.geo.settings.tests.test_doctests",
            "collective.geo.settings.tests.test_setup",
            "collective.geo.settings.utils",
            "collective.geo.settings.vocabularies"
        ],
        "version": "3.1"
    },
    "collective.geo.wms": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.wms",
            "collective.geo.wms.interfaces",
            "collective.geo.wms.maplayers",
            "collective.geo.wms.tests",
            "collective.geo.wms.views",
            "collective.geo.wms.wmslayer",
            "collective.geo.wms.wmsserver"
        ],
        "version": "0.2"
    },
    "collective.geo.zugmap": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geo",
            "collective.geo.zugmap",
            "collective.geo.zugmap.browser",
            "collective.geo.zugmap.maplayers",
            "collective.geo.zugmap.tests",
            "collective.geo.zugmap.tests.layer"
        ],
        "version": "1.0.5"
    },
    "collective.geolocationbehavior": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geolocationbehavior",
            "collective.geolocationbehavior.geolocation",
            "collective.geolocationbehavior.upgrades"
        ],
        "version": "1.5.1"
    },
    "collective.geotransform": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.geotransform",
            "collective.geotransform.testing",
            "collective.geotransform.tests",
            "collective.geotransform.tests.test_installation",
            "collective.geotransform.tests.test_robot",
            "collective.geotransform.tests.test_transform",
            "collective.geotransform.transform",
            "collective.geotransform.upgradehandlers"
        ],
        "version": "1.0.2"
    },
    "collective.getpid": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.getpid",
            "collective.getpid.browser",
            "collective.getpid.tests",
            "collective.getpid.zope2"
        ],
        "version": "0.1"
    },
    "collective.glossary": {
        "cmdline": [],
        "modules": [
            "glossary",
            "glossary.Extensions",
            "glossary.Extensions.Install",
            "glossary.browser",
            "glossary.browser.views",
            "glossary.config",
            "glossary.content",
            "glossary.controlpanel",
            "glossary.interfaces",
            "glossary.logger",
            "glossary.setuphandlers",
            "glossary.testing",
            "glossary.tests",
            "glossary.tests.test_controlpanel",
            "glossary.tests.test_glossary",
            "glossary.tests.test_robot",
            "glossary.tests.test_setup",
            "glossary.tests.test_term",
            "glossary.tests.test_upgrades",
            "glossary.tests.test_views",
            "glossary.upgrades",
            "glossary.upgrades.v2",
            "glossary.utils",
            "glossary.vocabulary"
        ],
        "version": "1.0b1"
    },
    "collective.gmaplocation": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.gmaplocation",
            "collective.gmaplocation.browser",
            "collective.gmaplocation.browser.controlpanel",
            "collective.gmaplocation.browser.provider",
            "collective.gmaplocation.browser.views",
            "collective.gmaplocation.extender",
            "collective.gmaplocation.interfaces",
            "collective.gmaplocation.location",
            "collective.gmaplocation.properties",
            "collective.gmaplocation.utils"
        ],
        "version": "0.4"
    },
    "collective.googleanalytics": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.googleanalytics",
            "collective.googleanalytics.browser",
            "collective.googleanalytics.browser.auth",
            "collective.googleanalytics.browser.controlpanel",
            "collective.googleanalytics.browser.report",
            "collective.googleanalytics.config",
            "collective.googleanalytics.error",
            "collective.googleanalytics.events",
            "collective.googleanalytics.exportimport",
            "collective.googleanalytics.interfaces",
            "collective.googleanalytics.interfaces.browserlayer",
            "collective.googleanalytics.interfaces.loader",
            "collective.googleanalytics.interfaces.plugins",
            "collective.googleanalytics.interfaces.report",
            "collective.googleanalytics.interfaces.tracking",
            "collective.googleanalytics.interfaces.utility",
            "collective.googleanalytics.interfaces.viewlets",
            "collective.googleanalytics.loader",
            "collective.googleanalytics.plugins",
            "collective.googleanalytics.portlets",
            "collective.googleanalytics.portlets.analyticsportlet",
            "collective.googleanalytics.renderer",
            "collective.googleanalytics.report",
            "collective.googleanalytics.testing",
            "collective.googleanalytics.tests",
            "collective.googleanalytics.tests.base",
            "collective.googleanalytics.tests.test_controlpanel",
            "collective.googleanalytics.tests.test_permissions",
            "collective.googleanalytics.tests.test_reports",
            "collective.googleanalytics.tests.test_setup",
            "collective.googleanalytics.tracking",
            "collective.googleanalytics.tracking.plugins",
            "collective.googleanalytics.upgrades",
            "collective.googleanalytics.utility",
            "collective.googleanalytics.utils",
            "collective.googleanalytics.viewlets",
            "collective.googleanalytics.viewlets.sitewide",
            "collective.googleanalytics.viewlets.tracking",
            "collective.googleanalytics.visualization",
            "collective.googleanalytics.vocabularies"
        ],
        "version": "1.6.0"
    },
    "collective.googleauthentication": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.googleauthentication",
            "collective.googleauthentication.browser",
            "collective.googleauthentication.browser.session_token",
            "collective.googleauthentication.tests"
        ],
        "version": "1.0.0"
    },
    "collective.googleauthenticator": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.googleauthenticator",
            "collective.googleauthenticator.adapter",
            "collective.googleauthenticator.browser",
            "collective.googleauthenticator.browser.controlpanel",
            "collective.googleauthenticator.browser.disable_two_factor_authentication",
            "collective.googleauthenticator.browser.disable_two_factor_authentication_for_all_users",
            "collective.googleauthenticator.browser.enable_two_factor_authentication_for_all_users",
            "collective.googleauthenticator.browser.forms",
            "collective.googleauthenticator.browser.forms.request_bar_code_reset",
            "collective.googleauthenticator.browser.forms.reset_bar_code",
            "collective.googleauthenticator.browser.forms.token",
            "collective.googleauthenticator.browser.forms.user_setup",
            "collective.googleauthenticator.browser.settings_helper",
            "collective.googleauthenticator.helpers",
            "collective.googleauthenticator.interfaces",
            "collective.googleauthenticator.pas_plugin",
            "collective.googleauthenticator.setuphandlers",
            "collective.googleauthenticator.testing",
            "collective.googleauthenticator.tests",
            "collective.googleauthenticator.tests.base",
            "collective.googleauthenticator.tests.test_generic",
            "collective.googleauthenticator.tests.test_pas_plugin",
            "collective.googleauthenticator.tests.test_robot",
            "collective.googleauthenticator.tests.test_security",
            "collective.googleauthenticator.userdataschema"
        ],
        "version": "0.2.5"
    },
    "collective.googledocsviewer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.googledocsviewer",
            "collective.googledocsviewer.interfaces",
            "collective.googledocsviewer.views"
        ],
        "version": "1.0b1"
    },
    "collective.googleforms": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.googleforms",
            "collective.googleforms.browser",
            "collective.googleforms.browser.googleformview",
            "collective.googleforms.interfaces",
            "collective.googleforms.interfaces.browserlayer",
            "collective.googleforms.tests"
        ],
        "version": "1.0a1"
    },
    "collective.googlelibraries": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.googlelibraries",
            "collective.googlelibraries.apikey",
            "collective.googlelibraries.config",
            "collective.googlelibraries.controlpanel",
            "collective.googlelibraries.googleapi",
            "collective.googlelibraries.interfaces",
            "collective.googlelibraries.libraries",
            "collective.googlelibraries.scripts",
            "collective.googlelibraries.tests",
            "collective.googlelibraries.tests.base",
            "collective.googlelibraries.tests.test_apikey",
            "collective.googlelibraries.tests.test_googleapi",
            "collective.googlelibraries.tests.test_libraries",
            "collective.googlelibraries.tests.test_scripts",
            "collective.googlelibraries.tests.test_setup"
        ],
        "version": "1.0b1"
    },
    "collective.googleloader": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.googleloader",
            "collective.googleloader.interfaces",
            "collective.googleloader.scripts",
            "collective.googleloader.testing",
            "collective.googleloader.tests",
            "collective.googleloader.tests.test_setup"
        ],
        "version": "1.0b1"
    },
    "collective.googlemodifycontent": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.googlemodifycontent",
            "collective.googlemodifycontent.browser",
            "collective.googlemodifycontent.browser.googlemodifycontent",
            "collective.googlemodifycontent.tests"
        ],
        "version": "1.0.0"
    },
    "collective.googlenews": {
        "cmdline": [],
        "modules": [
            "googlenews",
            "googlenews.Extensions",
            "googlenews.Extensions.Install",
            "googlenews.behaviors",
            "googlenews.behaviors.interfaces",
            "googlenews.browser",
            "googlenews.browser.sitemap",
            "googlenews.browser.viewlets",
            "googlenews.browser.views",
            "googlenews.config",
            "googlenews.controlpanel",
            "googlenews.interfaces",
            "googlenews.logger",
            "googlenews.patches",
            "googlenews.setuphandlers",
            "googlenews.testing",
            "googlenews.tests",
            "googlenews.tests.test_behaviors",
            "googlenews.tests.test_catalog",
            "googlenews.tests.test_controlpanel",
            "googlenews.tests.test_robot",
            "googlenews.tests.test_setup",
            "googlenews.tests.test_sitemap",
            "googlenews.tests.test_upgrades",
            "googlenews.tests.test_views",
            "googlenews.upgrades",
            "googlenews.upgrades.v1001",
            "googlenews.upgrades.v1002",
            "googlenews.upgrades.v1003",
            "googlenews.utils"
        ],
        "version": "2.0b3"
    },
    "collective.googlesharing": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.googlesharing",
            "collective.googlesharing.browser",
            "collective.googlesharing.browser.GDataSharing",
            "collective.googlesharing.browser.googlesharing",
            "collective.googlesharing.tests"
        ],
        "version": "1.0.0"
    },
    "collective.googlesystemstorage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.googlesystemstorage",
            "collective.googlesystemstorage.GData",
            "collective.googlesystemstorage.GoogleSystemStorage",
            "collective.googlesystemstorage.interfaces",
            "collective.googlesystemstorage.zcml"
        ],
        "version": "1.0.0"
    },
    "collective.googlevisualization": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.googlevisualization",
            "collective.googlevisualization.browser",
            "collective.googlevisualization.browser.chart",
            "collective.googlevisualization.portlet",
            "collective.googlevisualization.tests"
        ],
        "version": "0.1.2"
    },
    "collective.greybox": {
        "cmdline": [],
        "modules": [],
        "version": "0.4"
    },
    "collective.grok": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.grok",
            "collective.grok.gs",
            "collective.grok.gs.export",
            "collective.grok.gs.import_",
            "collective.grok.gs.profile",
            "collective.grok.gs.upgrade",
            "collective.grok.i18n",
            "collective.grok.i18n.translations",
            "collective.grok.meta",
            "collective.grok.testing",
            "collective.grok.tests",
            "collective.grok.tests.gs",
            "collective.grok.tests.gs.export",
            "collective.grok.tests.gs.import_",
            "collective.grok.tests.gs.profile",
            "collective.grok.tests.gs.profile_no_kw",
            "collective.grok.tests.gs.upgrade",
            "collective.grok.tests.i18n",
            "collective.grok.tests.i18n.translations",
            "collective.grok.tests.test_gs",
            "collective.grok.tests.test_i18n"
        ],
        "version": "1.0a2"
    },
    "collective.groupdashboard": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.groupdashboard",
            "collective.groupdashboard.browser",
            "collective.groupdashboard.interfaces",
            "collective.groupdashboard.storage",
            "collective.groupdashboard.tests"
        ],
        "version": "1.0b2"
    },
    "collective.groupdelegation": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.groupdelegation",
            "collective.groupdelegation.setuphandlers",
            "collective.groupdelegation.tests"
        ],
        "version": "0.4"
    },
    "collective.groupmail": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.groupmail",
            "collective.groupmail.browser",
            "collective.groupmail.browser.groupview",
            "collective.groupmail.testing",
            "collective.groupmail.tests",
            "collective.groupmail.tests.test_permissions"
        ],
        "version": "1.1"
    },
    "collective.groupspace.content": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.groupspace",
            "collective.groupspace.content",
            "collective.groupspace.content.browser",
            "collective.groupspace.content.config",
            "collective.groupspace.content.content",
            "collective.groupspace.content.content.groupspace",
            "collective.groupspace.content.interfaces",
            "collective.groupspace.content.interfaces.groupspace",
            "collective.groupspace.content.permissions",
            "collective.groupspace.content.tests",
            "collective.groupspace.content.tests.base",
            "collective.groupspace.content.tests.test___init__",
            "collective.groupspace.content.tests.test_doctest",
            "collective.groupspace.content.tests.test_install"
        ],
        "version": "1.0.2"
    },
    "collective.groupspace.mail": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.groupspace",
            "collective.groupspace.mail",
            "collective.groupspace.mail.browser",
            "collective.groupspace.mail.browser.mailview",
            "collective.groupspace.mail.config",
            "collective.groupspace.mail.portlets",
            "collective.groupspace.mail.portlets.groupmailportlet",
            "collective.groupspace.mail.roles",
            "collective.groupspace.mail.tests",
            "collective.groupspace.mail.tests.base_groupmailportlet",
            "collective.groupspace.mail.tests.test_groupmailportlet"
        ],
        "version": "1.0.1"
    },
    "collective.groupspace.roles": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.groupspace",
            "collective.groupspace.roles",
            "collective.groupspace.roles.browser",
            "collective.groupspace.roles.browser.kss_roles",
            "collective.groupspace.roles.browser.roles",
            "collective.groupspace.roles.config",
            "collective.groupspace.roles.interfaces",
            "collective.groupspace.roles.localroles",
            "collective.groupspace.roles.portlets",
            "collective.groupspace.roles.portlets.mygroupsportlet",
            "collective.groupspace.roles.tests",
            "collective.groupspace.roles.tests.base",
            "collective.groupspace.roles.tests.base_mygroupsportlet",
            "collective.groupspace.roles.tests.test_browser_roles",
            "collective.groupspace.roles.tests.test_functional",
            "collective.groupspace.roles.tests.test_localroles",
            "collective.groupspace.roles.tests.test_mygroupsportlet",
            "collective.groupspace.roles.tests.test_roles_view",
            "collective.groupspace.roles.tests.utils"
        ],
        "version": "1.0.3"
    },
    "collective.groupspace.workflow": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.groupspace",
            "collective.groupspace.workflow",
            "collective.groupspace.workflow.config",
            "collective.groupspace.workflow.handlers",
            "collective.groupspace.workflow.interfaces",
            "collective.groupspace.workflow.policy",
            "collective.groupspace.workflow.setuphandlers",
            "collective.groupspace.workflow.tests",
            "collective.groupspace.workflow.tests.base",
            "collective.groupspace.workflow.tests.test_functional",
            "collective.groupspace.workflow.tests.test_handlers",
            "collective.groupspace.workflow.tests.test_policy",
            "collective.groupspace.workflow.tests.test_setuphandlers",
            "collective.groupspace.workflow.tests.utils"
        ],
        "version": "1.0.4"
    },
    "collective.gsa": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.gsa",
            "collective.gsa.Extensions",
            "collective.gsa.Extensions.install",
            "collective.gsa.adapters",
            "collective.gsa.adapters.indexer",
            "collective.gsa.browser",
            "collective.gsa.browser.advanced_search_url",
            "collective.gsa.browser.content_view",
            "collective.gsa.browser.expired_viewlet",
            "collective.gsa.browser.gsa_login",
            "collective.gsa.browser.maintenance",
            "collective.gsa.browser.reindex",
            "collective.gsa.browser.search",
            "collective.gsa.browser.searchbox",
            "collective.gsa.browser.settings",
            "collective.gsa.config",
            "collective.gsa.content_provider",
            "collective.gsa.dispatcher",
            "collective.gsa.exceptions",
            "collective.gsa.flare",
            "collective.gsa.gsa",
            "collective.gsa.gsafeeder",
            "collective.gsa.icon",
            "collective.gsa.interfaces",
            "collective.gsa.local",
            "collective.gsa.manager",
            "collective.gsa.monkey",
            "collective.gsa.parser",
            "collective.gsa.search",
            "collective.gsa.subscribers",
            "collective.gsa.tests",
            "collective.gsa.tests.base",
            "collective.gsa.tests.test_integration",
            "collective.gsa.tests.utils",
            "collective.gsa.utils"
        ],
        "version": "2.0rc9"
    },
    "collective.gsa64": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.gsa64",
            "collective.gsa64.browser",
            "collective.gsa64.browser.robots",
            "collective.gsa64.browser.search",
            "collective.gsa64.controlpanel",
            "collective.gsa64.events",
            "collective.gsa64.interfaces",
            "collective.gsa64.multipart",
            "collective.gsa64.setuphandlers"
        ],
        "version": "1.0-beta4"
    },
    "collective.gsqi": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.gsqi",
            "collective.gsqi.content",
            "collective.gsqi.content.common",
            "collective.gsqi.content.field",
            "collective.gsqi.content.index",
            "collective.gsqi.content.layout",
            "collective.gsqi.content.role",
            "collective.gsqi.content.workflow",
            "collective.gsqi.group",
            "collective.gsqi.group.meta",
            "collective.gsqi.group.tests",
            "collective.gsqi.gs",
            "collective.gsqi.gsml",
            "collective.gsqi.gsml.meta",
            "collective.gsqi.gsml.testing",
            "collective.gsqi.gsml.tests",
            "collective.gsqi.qi",
            "collective.gsqi.refs",
            "collective.gsqi.refs.meta",
            "collective.gsqi.tests",
            "collective.gsqi.workflow",
            "collective.gsqi.workflow.exportimport"
        ],
        "version": "0.3"
    },
    "collective.gtags": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.gtags",
            "collective.gtags.behaviors",
            "collective.gtags.browser",
            "collective.gtags.browser.controlpanel",
            "collective.gtags.browser.widget",
            "collective.gtags.field",
            "collective.gtags.interfaces",
            "collective.gtags.source",
            "collective.gtags.tests",
            "collective.gtags.utils"
        ],
        "version": "1.0b2"
    },
    "collective.habla": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.habla",
            "collective.habla.browser",
            "collective.habla.interfaces",
            "collective.habla.tests",
            "collective.habla.viewlets"
        ],
        "version": "0.3"
    },
    "collective.handlebars": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.handlebars",
            "collective.handlebars.browser",
            "collective.handlebars.browser.views",
            "collective.handlebars.interfaces",
            "collective.handlebars.setuphandlers",
            "collective.handlebars.testing",
            "collective.handlebars.tests",
            "collective.handlebars.tests.test_robot",
            "collective.handlebars.tests.test_setup",
            "collective.handlebars.tests.test_views"
        ],
        "version": "1.2"
    },
    "collective.harlequin": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.harlequin",
            "collective.harlequin.Extensions",
            "collective.harlequin.Extensions.Install",
            "collective.harlequin.browser",
            "collective.harlequin.browser.base",
            "collective.harlequin.example",
            "collective.harlequin.example.browser",
            "collective.harlequin.forms",
            "collective.harlequin.interfaces",
            "collective.harlequin.quickinstaller",
            "collective.harlequin.storage",
            "collective.harlequin.tests",
            "collective.harlequin.tests.base",
            "collective.harlequin.tests.test_browser",
            "collective.harlequin.tests.test_doctest",
            "collective.harlequin.tests.test_example",
            "collective.harlequin.tests.test_storage",
            "collective.harlequin.tests.utils"
        ],
        "version": "1.0b4"
    },
    "collective.hello": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.hello",
            "collective.hello.behaviors",
            "collective.hello.behaviors.hello",
            "collective.hello.browser",
            "collective.hello.browser.viewlets",
            "collective.hello.interfaces",
            "collective.hello.setuphandlers",
            "collective.hello.testing",
            "collective.hello.tests",
            "collective.hello.tests.test_robot",
            "collective.hello.tests.test_setup"
        ],
        "version": "0.3"
    },
    "collective.honeypot": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.honeypot",
            "collective.honeypot.Extensions",
            "collective.honeypot.Extensions.Install",
            "collective.honeypot.browser",
            "collective.honeypot.config",
            "collective.honeypot.discussion",
            "collective.honeypot.discussion.z3cformextender",
            "collective.honeypot.eventsubscribers",
            "collective.honeypot.interfaces",
            "collective.honeypot.oldcomments",
            "collective.honeypot.oldcomments.patches",
            "collective.honeypot.plone3",
            "collective.honeypot.plone3.patches",
            "collective.honeypot.plone4",
            "collective.honeypot.plone4.patches",
            "collective.honeypot.quinta",
            "collective.honeypot.quinta.patches",
            "collective.honeypot.testing",
            "collective.honeypot.tests",
            "collective.honeypot.tests.test_functional",
            "collective.honeypot.tests.test_unit",
            "collective.honeypot.utils",
            "collective.honeypot.z3cform",
            "collective.honeypot.z3cform.widget"
        ],
        "version": "1.0.2"
    },
    "collective.hook": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.hook",
            "collective.hook.decorator",
            "collective.hook.event",
            "collective.hook.tests",
            "collective.hook.tests.test_decorator",
            "collective.hook.tests.test_event",
            "collective.hook.tests.utils"
        ],
        "version": "1.0b1"
    },
    "collective.hootsuite": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.hootsuite",
            "collective.hootsuite.browser",
            "collective.hootsuite.browser.authorize",
            "collective.hootsuite.browser.controlpanel",
            "collective.hootsuite.interfaces",
            "collective.hootsuite.subscriber",
            "collective.hootsuite.testing",
            "collective.hootsuite.tests",
            "collective.hootsuite.tests.test_example",
            "collective.hootsuite.vocabulary"
        ],
        "version": "1.1.2"
    },
    "collective.hostout": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.hostout",
            "collective.hostout.bootstrap",
            "collective.hostout.datafs",
            "collective.hostout.datafs.fabfile",
            "collective.hostout.fabfile",
            "collective.hostout.hostout",
            "collective.hostout.mrdeveloper",
            "collective.hostout.mrdeveloper.fabfile",
            "collective.hostout.tests"
        ],
        "version": "1.0a5"
    },
    "collective.i18nreport": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.i18nreport",
            "collective.i18nreport.coverage",
            "collective.i18nreport.formatters",
            "collective.i18nreport.tests",
            "collective.i18nreport.tests.helpers",
            "collective.i18nreport.tests.test_coverage",
            "collective.i18nreport.tests.test_formatters",
            "collective.i18nreport.tests.test_utils",
            "collective.i18nreport.utils"
        ],
        "version": "1.2.2"
    },
    "collective.icalfeed": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.icalfeed",
            "collective.icalfeed.browser",
            "collective.icalfeed.browser.calendar",
            "collective.icalfeed.tests",
            "collective.icalfeed.tests.layer",
            "collective.icalfeed.tests.test_calendar"
        ],
        "version": "1.0b2"
    },
    "collective.iconifiedcategory": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.iconifiedcategory",
            "collective.iconifiedcategory.adapter",
            "collective.iconifiedcategory.behaviors",
            "collective.iconifiedcategory.behaviors.iconifiedcategorization",
            "collective.iconifiedcategory.browser",
            "collective.iconifiedcategory.browser.actionview",
            "collective.iconifiedcategory.browser.config",
            "collective.iconifiedcategory.browser.contentview",
            "collective.iconifiedcategory.browser.controlpanel",
            "collective.iconifiedcategory.browser.css",
            "collective.iconifiedcategory.browser.subtyper",
            "collective.iconifiedcategory.browser.tabview",
            "collective.iconifiedcategory.browser.viewlets",
            "collective.iconifiedcategory.browser.views",
            "collective.iconifiedcategory.content",
            "collective.iconifiedcategory.content.base",
            "collective.iconifiedcategory.content.category",
            "collective.iconifiedcategory.content.categoryconfiguration",
            "collective.iconifiedcategory.content.categorygroup",
            "collective.iconifiedcategory.content.events",
            "collective.iconifiedcategory.content.subcategory",
            "collective.iconifiedcategory.event",
            "collective.iconifiedcategory.indexes",
            "collective.iconifiedcategory.interfaces",
            "collective.iconifiedcategory.setuphandlers",
            "collective.iconifiedcategory.testing",
            "collective.iconifiedcategory.tests",
            "collective.iconifiedcategory.tests.adapters",
            "collective.iconifiedcategory.tests.base",
            "collective.iconifiedcategory.tests.test_actionview",
            "collective.iconifiedcategory.tests.test_adapter",
            "collective.iconifiedcategory.tests.test_behaviors",
            "collective.iconifiedcategory.tests.test_browser_config",
            "collective.iconifiedcategory.tests.test_browser_subtyper",
            "collective.iconifiedcategory.tests.test_css",
            "collective.iconifiedcategory.tests.test_editview",
            "collective.iconifiedcategory.tests.test_events",
            "collective.iconifiedcategory.tests.test_robot",
            "collective.iconifiedcategory.tests.test_setup",
            "collective.iconifiedcategory.tests.test_tabview",
            "collective.iconifiedcategory.tests.test_utils",
            "collective.iconifiedcategory.tests.test_views",
            "collective.iconifiedcategory.tests.test_vocabularies",
            "collective.iconifiedcategory.utils",
            "collective.iconifiedcategory.vocabularies",
            "collective.iconifiedcategory.widget",
            "collective.iconifiedcategory.widget.widget"
        ],
        "version": "0.17"
    },
    "collective.idashboard": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.idashboard",
            "collective.idashboard.browser",
            "collective.idashboard.browser.dashboard",
            "collective.idashboard.config",
            "collective.idashboard.interfaces",
            "collective.idashboard.migrations",
            "collective.idashboard.setuphandlers",
            "collective.idashboard.tests",
            "collective.idashboard.tests.base",
            "collective.idashboard.tests.test_dashboard"
        ],
        "version": "1.2.6a2"
    },
    "collective.ie8nomore": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ie8nomore"
        ],
        "version": "0.6"
    },
    "collective.imageinbox": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.imageinbox",
            "collective.imageinbox.browser",
            "collective.imageinbox.tests"
        ],
        "version": "1.0.1"
    },
    "collective.imagetags": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.imagetags",
            "collective.imagetags.adapters",
            "collective.imagetags.adapters.forms",
            "collective.imagetags.adapters.interfaces",
            "collective.imagetags.adapters.manager",
            "collective.imagetags.browser",
            "collective.imagetags.browser.controlpanel",
            "collective.imagetags.browser.forms",
            "collective.imagetags.browser.helper",
            "collective.imagetags.browser.image",
            "collective.imagetags.browser.interfaces",
            "collective.imagetags.browser.js_labels",
            "collective.imagetags.browser.manage",
            "collective.imagetags.browser.new_tag_response",
            "collective.imagetags.browser.viewlet",
            "collective.imagetags.interfaces",
            "collective.imagetags.setuphandlers",
            "collective.imagetags.tests",
            "collective.imagetags.tests.base",
            "collective.imagetags.tests.test_doctest",
            "collective.imagetags.upgrades",
            "collective.imagetags.vocabulary"
        ],
        "version": "1.5"
    },
    "collective.impersonate": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.impersonate",
            "collective.impersonate.browser",
            "collective.impersonate.browser.impersonate",
            "collective.impersonate.interfaces",
            "collective.impersonate.setuphandlers",
            "collective.impersonate.testing",
            "collective.impersonate.tests",
            "collective.impersonate.tests.test_setup"
        ],
        "version": "1.0.1"
    },
    "collective.improvedbyline": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.improvedbyline",
            "collective.improvedbyline.interfaces",
            "collective.improvedbyline.tests",
            "collective.improvedbyline.tests.test_byline",
            "collective.improvedbyline.viewlet"
        ],
        "version": "1.1"
    },
    "collective.imstransport": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.imstransport",
            "collective.imstransport.IMS_exceptions",
            "collective.imstransport.browser",
            "collective.imstransport.browser.exportform",
            "collective.imstransport.browser.importform",
            "collective.imstransport.config",
            "collective.imstransport.tests",
            "collective.imstransport.tests.base",
            "collective.imstransport.tests.testBB",
            "collective.imstransport.tests.testCC",
            "collective.imstransport.tests.testCP",
            "collective.imstransport.tests.testMIT",
            "collective.imstransport.tests.testMoodle",
            "collective.imstransport.tests.testVista",
            "collective.imstransport.tests.testWebCT",
            "collective.imstransport.utilities",
            "collective.imstransport.utilities.bb",
            "collective.imstransport.utilities.bb.bbreader",
            "collective.imstransport.utilities.bb.configbb",
            "collective.imstransport.utilities.bb.imsbbreader",
            "collective.imstransport.utilities.imscc",
            "collective.imstransport.utilities.imscc.ccreader",
            "collective.imstransport.utilities.imscc.ccresourcewriter",
            "collective.imstransport.utilities.imscc.ccwriter",
            "collective.imstransport.utilities.imscc.configcc",
            "collective.imstransport.utilities.imscc.imsccreader",
            "collective.imstransport.utilities.imscc.imsccwriter",
            "collective.imstransport.utilities.imscp",
            "collective.imstransport.utilities.imscp.configcp",
            "collective.imstransport.utilities.imscp.cpreader",
            "collective.imstransport.utilities.imscp.cpresourcereader",
            "collective.imstransport.utilities.imscp.cpresourcewriter",
            "collective.imstransport.utilities.imscp.cpwriter",
            "collective.imstransport.utilities.imscp.imscpreader",
            "collective.imstransport.utilities.imscp.imscpwriter",
            "collective.imstransport.utilities.imsinterchange",
            "collective.imstransport.utilities.imsutility",
            "collective.imstransport.utilities.interfaces",
            "collective.imstransport.utilities.mit",
            "collective.imstransport.utilities.mit.configmit",
            "collective.imstransport.utilities.mit.imsmitreader",
            "collective.imstransport.utilities.mit.mitreader",
            "collective.imstransport.utilities.mit.mitresourcereader",
            "collective.imstransport.utilities.moodle",
            "collective.imstransport.utilities.moodle.backupreader",
            "collective.imstransport.utilities.moodle.configmoodle",
            "collective.imstransport.utilities.moodle.imsmoodlewriter",
            "collective.imstransport.utilities.moodle.moodlebackupreader",
            "collective.imstransport.utilities.moodle.moodlewriter",
            "collective.imstransport.utilities.objcreator",
            "collective.imstransport.utilities.packagingio",
            "collective.imstransport.utilities.webct",
            "collective.imstransport.utilities.webct.configwebct",
            "collective.imstransport.utilities.webct.imswebctreader",
            "collective.imstransport.utilities.webct.webctreader",
            "collective.imstransport.utilities.webctvista",
            "collective.imstransport.utilities.webctvista.configwebctvista",
            "collective.imstransport.utilities.webctvista.imswebctvistareader",
            "collective.imstransport.utilities.webctvista.webctvistareader"
        ],
        "version": "3.2.2"
    },
    "collective.indexing": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.indexing",
            "collective.indexing.Extensions",
            "collective.indexing.Extensions.Install",
            "collective.indexing.config",
            "collective.indexing.indexer",
            "collective.indexing.interfaces",
            "collective.indexing.monkey",
            "collective.indexing.queue",
            "collective.indexing.subscribers",
            "collective.indexing.tests",
            "collective.indexing.tests.base",
            "collective.indexing.tests.content",
            "collective.indexing.tests.layer",
            "collective.indexing.tests.test_doctest",
            "collective.indexing.tests.test_integration",
            "collective.indexing.tests.test_lifecycle",
            "collective.indexing.tests.test_queue",
            "collective.indexing.tests.test_subscribers",
            "collective.indexing.tests.test_transactions",
            "collective.indexing.tests.utils",
            "collective.indexing.transactions"
        ],
        "version": "2.0"
    },
    "collective.inplacetopicview": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.inplacetopicview",
            "collective.inplacetopicview.browser",
            "collective.inplacetopicview.browser.acquisition",
            "collective.inplacetopicview.browser.interfaces",
            "collective.inplacetopicview.browser.twin",
            "collective.inplacetopicview.tests",
            "collective.inplacetopicview.tests.base",
            "collective.inplacetopicview.tests.test_acquisition",
            "collective.inplacetopicview.tests.test_functional_doctest",
            "collective.inplacetopicview.tests.test_setup",
            "collective.inplacetopicview.tests.test_twin"
        ],
        "version": "1.0"
    },
    "collective.installedpackages": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.installedpackages",
            "collective.installedpackages.browser",
            "collective.installedpackages.browser.views",
            "collective.installedpackages.config",
            "collective.installedpackages.testing",
            "collective.installedpackages.tests",
            "collective.installedpackages.tests.test_views"
        ],
        "version": "0.1b2"
    },
    "collective.instancebehavior": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.instancebehavior",
            "collective.instancebehavior.interfaces",
            "collective.instancebehavior.tests",
            "collective.instancebehavior.tests.test_instancebehavior"
        ],
        "version": "0.4"
    },
    "collective.interfaces": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.interfaces",
            "collective.interfaces.browser",
            "collective.interfaces.tests"
        ],
        "version": "1.1.2"
    },
    "collective.inventions": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.inventions",
            "collective.inventions.tests"
        ],
        "version": "1.1"
    },
    "collective.inviting": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.inviting",
            "collective.inviting.adapters",
            "collective.inviting.browser",
            "collective.inviting.browser.message",
            "collective.inviting.browser.rsvp",
            "collective.inviting.browser.subscribers",
            "collective.inviting.interfaces",
            "collective.inviting.item",
            "collective.inviting.mail",
            "collective.inviting.setuphandlers",
            "collective.inviting.tests",
            "collective.inviting.tests.layers",
            "collective.inviting.tests.test_adapters",
            "collective.inviting.tests.test_item_uid",
            "collective.inviting.tests.test_profile",
            "collective.inviting.zope2"
        ],
        "version": "0.2"
    },
    "collective.iptvusp": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.iptvusp",
            "collective.iptvusp.Extensions",
            "collective.iptvusp.Extensions.Install",
            "collective.iptvusp.config",
            "collective.iptvusp.content",
            "collective.iptvusp.controlpanel",
            "collective.iptvusp.event",
            "collective.iptvusp.interfaces",
            "collective.iptvusp.testing",
            "collective.iptvusp.tests",
            "collective.iptvusp.tests.test_controlpanel",
            "collective.iptvusp.tests.test_setup",
            "collective.iptvusp.tests.test_uspvideo"
        ],
        "version": "0.1a1"
    },
    "collective.itvalidators": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.itvalidators",
            "collective.itvalidators.config",
            "collective.itvalidators.tests",
            "collective.itvalidators.tests.test_validation",
            "collective.itvalidators.validators",
            "collective.itvalidators.validators.base_validators",
            "collective.itvalidators.validators.dependency_check",
            "collective.itvalidators.validators.min_chars"
        ],
        "version": "1.0.0"
    },
    "collective.ixedit": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ixedit",
            "collective.ixedit.browser",
            "collective.ixedit.config",
            "collective.ixedit.interfaces",
            "collective.ixedit.tests",
            "collective.ixedit.tests.base",
            "collective.ixedit.tests.test_doctest"
        ],
        "version": "1.0"
    },
    "collective.jaop": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.jaop",
            "collective.jaop.browser",
            "collective.jaop.browser.description",
            "collective.jaop.browser.opensearchprefs",
            "collective.jaop.browser.rssview",
            "collective.jaop.browser.suggestion",
            "collective.jaop.browser.viewlet",
            "collective.jaop.tests",
            "collective.jaop.tests.base",
            "collective.jaop.tests.test_case_install"
        ],
        "version": "1.2"
    },
    "collective.javascript.jqueryui": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.javascript",
            "collective.javascript.jqueryui"
        ],
        "version": "1.8.4"
    },
    "collective.jazzport": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.jazzport",
            "collective.jazzport.browser",
            "collective.jazzport.interfaces",
            "collective.jazzport.iterators",
            "collective.jazzport.testing",
            "collective.jazzport.tests",
            "collective.jazzport.tests.test_acceptance",
            "collective.jazzport.utils"
        ],
        "version": "1.0.0"
    },
    "collective.jbot": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.jbot",
            "collective.jbot.interfaces",
            "collective.jbot.manager",
            "collective.jbot.resource",
            "collective.jbot.setuphandlers",
            "collective.jbot.testing",
            "collective.jbot.tests",
            "collective.jbot.tests.test_manager",
            "collective.jbot.tests.test_renders",
            "collective.jbot.views"
        ],
        "version": "1.0a3"
    },
    "collective.jekyll": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.jekyll",
            "collective.jekyll.browser",
            "collective.jekyll.browser.controlpanel",
            "collective.jekyll.browser.diagnosis",
            "collective.jekyll.browser.filter",
            "collective.jekyll.browser.interfaces",
            "collective.jekyll.diagnosis",
            "collective.jekyll.ignored",
            "collective.jekyll.interfaces",
            "collective.jekyll.setuphandlers",
            "collective.jekyll.symptoms",
            "collective.jekyll.testing",
            "collective.jekyll.tests",
            "collective.jekyll.tests.test_diagnosis",
            "collective.jekyll.tests.test_example",
            "collective.jekyll.tests.test_filter",
            "collective.jekyll.tests.test_functional_doctest",
            "collective.jekyll.tests.test_robot",
            "collective.jekyll.tests.test_settings",
            "collective.jekyll.tests.test_symptoms"
        ],
        "version": "0.3"
    },
    "collective.jqcookie": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.jqcookie"
        ],
        "version": "1.1.0"
    },
    "collective.jqganalytics": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.jqganalytics",
            "collective.jqganalytics.browser",
            "collective.jqganalytics.browser.viewlets",
            "collective.jqganalytics.configlet",
            "collective.jqganalytics.exportimport",
            "collective.jqganalytics.form",
            "collective.jqganalytics.form.field",
            "collective.jqganalytics.form.interfaces",
            "collective.jqganalytics.form.widget",
            "collective.jqganalytics.interfaces",
            "collective.jqganalytics.utility",
            "collective.jqganalytics.variable"
        ],
        "version": "1.1.1"
    },
    "collective.jqhistory": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.jqhistory"
        ],
        "version": "1.0.1"
    },
    "collective.jqueryflot": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.jqueryflot",
            "collective.jqueryflot.graphs",
            "collective.jqueryflot.tests"
        ],
        "version": "0.1"
    },
    "collective.jquerytablehover": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "collective.jquerytablesorter": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.jquerytablesorter",
            "collective.jquerytablesorter.tests"
        ],
        "version": "0.1"
    },
    "collective.jqueryui": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.jqueryui",
            "collective.jqueryui.patch",
            "collective.jqueryui.tests"
        ],
        "version": "1.6rc5"
    },
    "collective.jqueryui.autocomplete": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.jqueryui",
            "collective.jqueryui.autocomplete",
            "collective.jqueryui.autocomplete.browser",
            "collective.jqueryui.autocomplete.tests"
        ],
        "version": "0.1.0"
    },
    "collective.jqueryuithememanager": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.jqueryuithememanager",
            "collective.jqueryuithememanager.browser",
            "collective.jqueryuithememanager.browser.controlpanel",
            "collective.jqueryuithememanager.browser.provider",
            "collective.jqueryuithememanager.config",
            "collective.jqueryuithememanager.i18n",
            "collective.jqueryuithememanager.interfaces",
            "collective.jqueryuithememanager.manager",
            "collective.jqueryuithememanager.provider",
            "collective.jqueryuithememanager.registry",
            "collective.jqueryuithememanager.testing",
            "collective.jqueryuithememanager.tests",
            "collective.jqueryuithememanager.tests.base",
            "collective.jqueryuithememanager.tests.test_functional",
            "collective.jqueryuithememanager.tests.test_manager",
            "collective.jqueryuithememanager.tests.test_provider",
            "collective.jqueryuithememanager.tests.test_theme",
            "collective.jqueryuithememanager.tests.utils",
            "collective.jqueryuithememanager.theme",
            "collective.jqueryuithememanager.vocabulary"
        ],
        "version": "1.0"
    },
    "collective.jqueryvisualize": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.jqueryVisualize",
            "collective.jqueryVisualize.resources"
        ],
        "version": "1.0"
    },
    "collective.js.abcjs": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.abcjs",
            "collective.js.abcjs.examples",
            "collective.js.abcjs.examples.abcjs_example",
            "collective.js.abcjs.interfaces",
            "collective.js.abcjs.tests"
        ],
        "version": "1.10"
    },
    "collective.js.angular": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.angular"
        ],
        "version": "1.5.5.0"
    },
    "collective.js.backbone": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.backbone"
        ],
        "version": "1.0.0.2"
    },
    "collective.js.blackbird": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.blackbird",
            "collective.js.blackbird.browser",
            "collective.js.blackbird.browser.viewlets",
            "collective.js.blackbird.interfaces"
        ],
        "version": "1.2.2"
    },
    "collective.js.bootstrap": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.bootstrap"
        ],
        "version": "3.3.6"
    },
    "collective.js.ceebox": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.ceebox",
            "collective.js.ceebox.browser",
            "collective.js.ceebox.interfaces",
            "collective.js.ceebox.tests"
        ],
        "version": "1.0.1"
    },
    "collective.js.charcount": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.charcount",
            "collective.js.charcount.testing",
            "collective.js.charcount.tests",
            "collective.js.charcount.tests.test_setup"
        ],
        "version": "1.1"
    },
    "collective.js.chatbox": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.chatbox"
        ],
        "version": "1.0"
    },
    "collective.js.chosen": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.chosen",
            "collective.js.chosen.Extensions",
            "collective.js.chosen.app_config",
            "collective.js.chosen.browser",
            "collective.js.chosen.browser.view",
            "collective.js.chosen.browser.viewlets",
            "collective.js.chosen.interfaces",
            "collective.js.chosen.migrations",
            "collective.js.chosen.migrations.v11",
            "collective.js.chosen.setuphandlers",
            "collective.js.chosen.testing",
            "collective.js.chosen.tests",
            "collective.js.chosen.tests.base",
            "collective.js.chosen.tests.globals",
            "collective.js.chosen.tests.test_doctests",
            "collective.js.chosen.tests.test_setup"
        ],
        "version": "1.4"
    },
    "collective.js.ckeditor": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.ckeditor",
            "collective.js.ckeditor.interfaces",
            "collective.js.ckeditor.sample",
            "collective.js.ckeditor.sample.sample_view",
            "collective.js.ckeditor.testing",
            "collective.js.ckeditor.tests",
            "collective.js.ckeditor.tests.base",
            "collective.js.ckeditor.tests.test_setup",
            "collective.js.ckeditor.upgrades"
        ],
        "version": "4.0.3"
    },
    "collective.js.colorpicker": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.colorpicker",
            "collective.js.colorpicker.tests"
        ],
        "version": "1.0"
    },
    "collective.js.contentflow": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.contentflow",
            "collective.js.contentflow.tests"
        ],
        "version": "1.0"
    },
    "collective.js.cufon": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.cufon",
            "collective.js.cufon.example"
        ],
        "version": "1.09i.1"
    },
    "collective.js.cycle2": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.cycle2",
            "collective.js.cycle2.interfaces",
            "collective.js.cycle2.testing",
            "collective.js.cycle2.tests",
            "collective.js.cycle2.tests.test_setup",
            "collective.js.cycle2.tests.test_upgrades",
            "collective.js.cycle2.upgrades",
            "collective.js.cycle2.upgrades.v1001"
        ],
        "version": "1.0b2"
    },
    "collective.js.d3": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.d3",
            "collective.js.d3.tests"
        ],
        "version": "3.0.8.1"
    },
    "collective.js.datatables": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.datatables",
            "collective.js.datatables.example",
            "collective.js.datatables.surl",
            "collective.js.datatables.testing",
            "collective.js.datatables.tests",
            "collective.js.datatables.tests.base",
            "collective.js.datatables.tests.test_setup",
            "collective.js.datatables.upgrades"
        ],
        "version": "4.1.2"
    },
    "collective.js.detectmobilebrowsers": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.detectmobilebrowsers",
            "collective.js.detectmobilebrowsers.example",
            "collective.js.detectmobilebrowsers.interfaces",
            "collective.js.detectmobilebrowsers.upgrades"
        ],
        "version": "1.0"
    },
    "collective.js.dygraphs": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.dygraphs"
        ],
        "version": "1.0.1"
    },
    "collective.js.easing": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.easing",
            "collective.js.easing.vocabulary"
        ],
        "version": "1.0"
    },
    "collective.js.enquire": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.enquire",
            "collective.js.enquire.example",
            "collective.js.enquire.interfaces",
            "collective.js.enquire.upgrades"
        ],
        "version": "1.5.6"
    },
    "collective.js.extjs": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.extjs"
        ],
        "version": "1.2"
    },
    "collective.js.fancybox": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.fancybox",
            "collective.js.fancybox.upgrades"
        ],
        "version": "1.3.4.1"
    },
    "collective.js.fancytree": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.fancytree",
            "collective.js.fancytree.upgrades"
        ],
        "version": "2.20.0.0"
    },
    "collective.js.fileupload": {
        "cmdline": [],
        "modules": [
            "fileupload",
            "fileupload.testing"
        ],
        "version": "9.12.3.post2"
    },
    "collective.js.fitvids": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.fitvids",
            "collective.js.fitvids.upgrades",
            "collective.js.fitvids.upgrades.v1x"
        ],
        "version": "1.0.0"
    },
    "collective.js.formalize": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.formalize",
            "collective.js.formalize.interfaces",
            "collective.js.formalize.upgrades"
        ],
        "version": "1.1"
    },
    "collective.js.formvalidation": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.formvalidation",
            "collective.js.formvalidation.browser",
            "collective.js.formvalidation.interfaces",
            "collective.js.formvalidation.tests"
        ],
        "version": "1.0b1"
    },
    "collective.js.foundation": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.foundation"
        ],
        "version": "4.1.6"
    },
    "collective.js.fullcalendar": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.fullcalendar",
            "collective.js.fullcalendar.tests",
            "collective.js.fullcalendar.upgrades"
        ],
        "version": "1.6.4"
    },
    "collective.js.galleria": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.galleria",
            "collective.js.galleria.testing",
            "collective.js.galleria.tests",
            "collective.js.galleria.tests.test_setup",
            "collective.js.galleria.upgrades"
        ],
        "version": "1.2.5"
    },
    "collective.js.galleriffic": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.galleriffic",
            "collective.js.galleriffic.tests",
            "collective.js.galleriffic.tests.base",
            "collective.js.galleriffic.tests.test_setup"
        ],
        "version": "1.1"
    },
    "collective.js.galleryview": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.galleryview"
        ],
        "version": "0.5.1"
    },
    "collective.js.gritter": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.gritter"
        ],
        "version": "1.0.2"
    },
    "collective.js.highslide": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.highslide",
            "collective.js.highslide.interfaces"
        ],
        "version": "1.0"
    },
    "collective.js.iframeresizer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.iframeresizer",
            "collective.js.iframeresizer.browser",
            "collective.js.iframeresizer.interfaces",
            "collective.js.iframeresizer.setuphandlers",
            "collective.js.iframeresizer.testing",
            "collective.js.iframeresizer.tests",
            "collective.js.iframeresizer.tests.test_robot",
            "collective.js.iframeresizer.tests.test_setup"
        ],
        "version": "0.2"
    },
    "collective.js.imagesloaded": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.imagesloaded",
            "collective.js.imagesloaded.upgrades"
        ],
        "version": "2.1"
    },
    "collective.js.innerfade": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.innerfade",
            "collective.js.innerfade.browser",
            "collective.js.innerfade.browser.folder_innerfade_view",
            "collective.js.innerfade.interfaces",
            "collective.js.innerfade.tests"
        ],
        "version": "1.0-final"
    },
    "collective.js.jasmid": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.jasmid",
            "collective.js.jasmid.example",
            "collective.js.jasmid.example.jasmid",
            "collective.js.jasmid.interfaces",
            "collective.js.jasmid.upgrades"
        ],
        "version": "1.1"
    },
    "collective.js.jcarousel": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.jcarousel",
            "collective.js.jcarousel.interfaces"
        ],
        "version": "1.0"
    },
    "collective.js.jqshorten": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.jqshorten"
        ],
        "version": "1.0a2"
    },
    "collective.js.jqsmarttruncation": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.jqsmartTruncation"
        ],
        "version": "1.0"
    },
    "collective.js.jquery": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.jquery"
        ],
        "version": "1.3.2.1"
    },
    "collective.js.jquerygantt": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.jquerygantt",
            "collective.js.jquerygantt.example",
            "collective.monkeypatcher",
            "collective.monkeypatcher.interfaces",
            "collective.monkeypatcher.meta",
            "collective.monkeypatcher.tests",
            "collective.monkeypatcher.tests.common",
            "collective.monkeypatcher.tests.dummypatch",
            "collective.monkeypatcher.tests.test_monkeypatcher",
            "collective.z3cform",
            "collective.z3cform.datetimewidget",
            "collective.z3cform.datetimewidget.converter",
            "collective.z3cform.datetimewidget.i18n",
            "collective.z3cform.datetimewidget.interfaces",
            "collective.z3cform.datetimewidget.setuphandlers",
            "collective.z3cform.datetimewidget.tests",
            "collective.z3cform.datetimewidget.widget",
            "collective.z3cform.datetimewidget.widget_date",
            "collective.z3cform.datetimewidget.widget_datetime",
            "collective.z3cform.datetimewidget.widget_monthyear"
        ],
        "version": "1.0.3"
    },
    "collective.js.jquerymobile": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.jquerymobile",
            "collective.js.jquerymobile.example",
            "collective.js.jquerymobile.example.mobile",
            "collective.js.jquerymobile.interfaces",
            "collective.js.jquerymobile.tests"
        ],
        "version": "1.3.1.1"
    },
    "collective.js.jqueryui": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.jqueryui",
            "collective.js.jqueryui.config",
            "collective.js.jqueryui.controlpanel",
            "collective.js.jqueryui.example",
            "collective.js.jqueryui.example.jqueryui",
            "collective.js.jqueryui.interfaces",
            "collective.js.jqueryui.resources",
            "collective.js.jqueryui.setuphandlers",
            "collective.js.jqueryui.tests",
            "collective.js.jqueryui.upgrades",
            "collective.js.jqueryui.utils",
            "collective.js.jqueryui.viewlet"
        ],
        "version": "2.0.1"
    },
    "collective.js.jwplayer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.jwplayer",
            "collective.js.jwplayer.config",
            "collective.js.jwplayer.interfaces",
            "collective.js.jwplayer.upgrades"
        ],
        "version": "6.4.3359"
    },
    "collective.js.knockout": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.knockout"
        ],
        "version": "3.2.0"
    },
    "collective.js.leaflet": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.leaflet",
            "collective.js.leaflet.app_config",
            "collective.js.leaflet.browser",
            "collective.js.leaflet.browser.view",
            "collective.js.leaflet.interfaces",
            "collective.js.leaflet.testing",
            "collective.js.leaflet.tests",
            "collective.js.leaflet.tests.base",
            "collective.js.leaflet.tests.globals",
            "collective.js.leaflet.tests.test_doctests",
            "collective.js.leaflet.tests.test_setup",
            "collective.js.leaflet.upgrades"
        ],
        "version": "0.7.1"
    },
    "collective.js.masonry": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.masonry",
            "collective.js.masonry.upgrades"
        ],
        "version": "1.0"
    },
    "collective.js.moment": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.moment",
            "collective.js.moment.example",
            "collective.js.moment.upgrades",
            "collective.js.moment.upgrades.v1000_to_1001"
        ],
        "version": "1.0.1"
    },
    "collective.js.mousewheel": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.mousewheel"
        ],
        "version": "1.0"
    },
    "collective.js.multizoom": {
        "cmdline": [],
        "modules": [],
        "version": "2.2"
    },
    "collective.js.nivogallery": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.nivogallery",
            "collective.js.nivogallery.tests",
            "collective.js.nivogallery.tests.base",
            "collective.js.nivogallery.tests.test_setup"
        ],
        "version": "1.0"
    },
    "collective.js.nivoslider": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.nivoslider",
            "collective.js.nivoslider.tests",
            "collective.js.nivoslider.tests.base",
            "collective.js.nivoslider.tests.test_setup",
            "collective.js.nivoslider.upgrades"
        ],
        "version": "3.0.1.1"
    },
    "collective.js.nomensamediaplayer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.nomensamediaplayer",
            "collective.js.nomensamediaplayer.upgrades"
        ],
        "version": "1.0"
    },
    "collective.js.oembed": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.oembed",
            "collective.js.oembed.interfaces"
        ],
        "version": "1.0a"
    },
    "collective.js.pikachoose": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.pikachoose",
            "collective.js.pikachoose.tests",
            "collective.js.pikachoose.tests.base",
            "collective.js.pikachoose.tests.test_setup",
            "collective.js.pikachoose.upgrades"
        ],
        "version": "1.1"
    },
    "collective.js.prefixfree": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.prefixfree",
            "collective.js.prefixfree.interfaces",
            "collective.js.prefixfree.testing",
            "collective.js.prefixfree.tests",
            "collective.js.prefixfree.tests.test_example"
        ],
        "version": "1.0"
    },
    "collective.js.prettify": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.prettify",
            "collective.js.prettify.interfaces",
            "collective.js.prettify.tests"
        ],
        "version": "0.2"
    },
    "collective.js.rgraph": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.rgraph"
        ],
        "version": "1.0.1"
    },
    "collective.js.s3slider": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.s3slider",
            "collective.js.s3slider.tests",
            "collective.js.s3slider.tests.base",
            "collective.js.s3slider.tests.test_setup"
        ],
        "version": "1.1"
    },
    "collective.js.showmore": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.showmore"
        ],
        "version": "1.0a4"
    },
    "collective.js.simplecart": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.simplecart",
            "collective.js.simplecart.upgrades"
        ],
        "version": "1.0"
    },
    "collective.js.slimbox2": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.slimbox2",
            "collective.js.slimbox2.browser",
            "collective.js.slimbox2.browser.common"
        ],
        "version": "1.4"
    },
    "collective.js.speakjs": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.speakjs"
        ],
        "version": "1.0.0"
    },
    "collective.js.supersized": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.supersized",
            "collective.js.supersized.behavior",
            "collective.js.supersized.browser",
            "collective.js.supersized.browser.viewlets",
            "collective.js.supersized.browser.views",
            "collective.js.supersized.interfaces",
            "collective.js.supersized.tests",
            "collective.js.supersized.tests.base",
            "collective.js.supersized.tests.test_setup",
            "collective.js.supersized.upgrades",
            "collective.js.supersized.vocabulary"
        ],
        "version": "0.4.4"
    },
    "collective.js.throttledebounce": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.throttledebounce"
        ],
        "version": "1.1"
    },
    "collective.js.timeago": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.timeago",
            "collective.js.timeago.example",
            "collective.js.timeago.interfaces",
            "collective.js.timeago.upgrades",
            "collective.js.timeago.viewlet"
        ],
        "version": "1.1"
    },
    "collective.js.tooltipster": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.tooltipster",
            "collective.js.tooltipster.browser",
            "collective.js.tooltipster.interfaces",
            "collective.js.tooltipster.setuphandlers",
            "collective.js.tooltipster.testing",
            "collective.js.tooltipster.tests",
            "collective.js.tooltipster.tests.test_robot",
            "collective.js.tooltipster.tests.test_setup"
        ],
        "version": "0.1"
    },
    "collective.js.trunk8": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.trunk8"
        ],
        "version": "1.2.3"
    },
    "collective.js.twittertext": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.twittertext"
        ],
        "version": "1.0"
    },
    "collective.js.ui.multiselect": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.ui",
            "collective.js.ui.multiselect",
            "collective.js.ui.multiselect.upgrades",
            "collective.js.ui.multiselect.upgrades.to1001"
        ],
        "version": "1.0.1"
    },
    "collective.js.uilayout": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "collective.js.underscore": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.underscore",
            "collective.js.underscore.tests"
        ],
        "version": "1.5.2"
    },
    "collective.js.unitegallery": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.unitegallery",
            "collective.js.unitegallery.browser",
            "collective.js.unitegallery.interfaces",
            "collective.js.unitegallery.setuphandlers",
            "collective.js.unitegallery.testing",
            "collective.js.unitegallery.tests",
            "collective.js.unitegallery.tests.test_robot",
            "collective.js.unitegallery.tests.test_setup"
        ],
        "version": "1.0a2"
    },
    "collective.js.unslider": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.js",
            "collective.js.unslider"
        ],
        "version": "1.1.dev0"
    },
    "collective.js.videojs": {
        "cmdline": [],
        "modules": [
            "videojs"
        ],
        "version": "5.8.8"
    },
    "collective.jsconfiguration": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.jsconfiguration",
            "collective.jsconfiguration.browser",
            "collective.jsconfiguration.browser.viewlet",
            "collective.jsconfiguration.interfaces",
            "collective.jsconfiguration.testing",
            "collective.jsconfiguration.tests",
            "collective.jsconfiguration.tests.test_dom",
            "collective.jsconfiguration.tests.test_js_object",
            "collective.jsconfiguration.tests.test_json"
        ],
        "version": "0.1.1"
    },
    "collective.jsonify": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.jsonify",
            "collective.jsonify.browser",
            "collective.jsonify.export",
            "collective.jsonify.methods",
            "collective.jsonify.todo_i18nfolder",
            "collective.jsonify.todo_localfs",
            "collective.jsonify.todo_plone2",
            "collective.jsonify.todo_plonearticle",
            "collective.jsonify.todo_zphoto",
            "collective.jsonify.wrapper"
        ],
        "version": "1.2"
    },
    "collective.jsonmigrator": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.jsonmigrator",
            "collective.jsonmigrator.blueprints",
            "collective.jsonmigrator.blueprints.datafields",
            "collective.jsonmigrator.blueprints.local_roles",
            "collective.jsonmigrator.blueprints.mimetype",
            "collective.jsonmigrator.blueprints.order",
            "collective.jsonmigrator.blueprints.owner",
            "collective.jsonmigrator.blueprints.partialcommit",
            "collective.jsonmigrator.blueprints.permissions",
            "collective.jsonmigrator.blueprints.properties",
            "collective.jsonmigrator.blueprints.skipitems",
            "collective.jsonmigrator.blueprints.source_catalog",
            "collective.jsonmigrator.blueprints.source_json",
            "collective.jsonmigrator.blueprints.source_remote",
            "collective.jsonmigrator.blueprints.statistics",
            "collective.jsonmigrator.blueprints.workflowhistory",
            "collective.jsonmigrator.helper"
        ],
        "version": "0.4"
    },
    "collective.jstree": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.jstree"
        ],
        "version": "0.9.7"
    },
    "collective.keywordcondition": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.keywordcondition",
            "collective.keywordcondition.keyword",
            "collective.keywordcondition.tests"
        ],
        "version": "1.0b1"
    },
    "collective.keywordwidgetreplacer": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "collective.kss.flygui": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0dev"
    },
    "collective.kss.inlinejs": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "collective.kssinline": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.kssinline",
            "collective.kssinline.browser",
            "collective.kssinline.browser.adapters",
            "collective.kssinline.browser.adapters.links",
            "collective.kssinline.browser.interfaces",
            "collective.kssinline.browser.kssview",
            "collective.kssinline.browser.resources",
            "collective.kssinline.browser.utilities",
            "collective.kssinline.browser.utilities.links",
            "collective.kssinline.browser.viewlets",
            "collective.kssinline.browser.viewlets.calendar",
            "collective.kssinline.browser.viewlets.links",
            "collective.kssinline.browser.viewlets.popup",
            "collective.kssinline.browser.views",
            "collective.kssinline.browser.views.foldercontents",
            "collective.kssinline.browser.views.tableview",
            "collective.kssinline.config",
            "collective.kssinline.examples",
            "collective.kssinline.examples.adapters",
            "collective.kssinline.examples.adapters.links",
            "collective.kssinline.examples.utilities",
            "collective.kssinline.examples.utilities.links",
            "collective.kssinline.override",
            "collective.kssinline.setuphandlers",
            "collective.kssinline.tests",
            "collective.kssinline.tools",
            "collective.kssinline.tools.interfaces",
            "collective.kssinline.tools.kssinline"
        ],
        "version": "0.9.4"
    },
    "collective.kssmessages": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.kssmessages",
            "collective.kssmessages.browser",
            "collective.kssmessages.browser.popup"
        ],
        "version": "0.1"
    },
    "collective.kupuemoticons": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.kupuemoticons",
            "collective.kupuemoticons.browser",
            "collective.kupuemoticons.browser.interfaces",
            "collective.kupuemoticons.setuphandlers"
        ],
        "version": "0.0.3"
    },
    "collective.kuputabs": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.kuputabs",
            "collective.kuputabs.browser",
            "collective.kuputabs.browser.views",
            "collective.kuputabs.setuphandlers",
            "collective.kuputabs.tests"
        ],
        "version": "0.1"
    },
    "collective.kwetter": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.kwetter",
            "collective.kwetter.browser",
            "collective.kwetter.browser.avatar",
            "collective.kwetter.browser.helpers",
            "collective.kwetter.browser.interfaces",
            "collective.kwetter.browser.kwetter",
            "collective.kwetter.browser.viewlets",
            "collective.kwetter.interfaces",
            "collective.kwetter.interfaces.nfgkwetterlayer",
            "collective.kwetter.m2client",
            "collective.kwetter.setuphandlers",
            "collective.kwetter.tests"
        ],
        "version": "0.1.1"
    },
    "collective.langdet": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.langdet",
            "collective.langdet.interfaces",
            "collective.langdet.tests",
            "collective.langdet.utils"
        ],
        "version": "0.1"
    },
    "collective.langmailhost": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.langMailHost",
            "collective.langMailHost.Extensions",
            "collective.langMailHost.Extensions.install",
            "collective.langMailHost.adapter",
            "collective.langMailHost.adapter.mail",
            "collective.langMailHost.adapter.send",
            "collective.langMailHost.browser",
            "collective.langMailHost.browser.encoding",
            "collective.langMailHost.interfaces",
            "collective.langMailHost.tests",
            "collective.langMailHost.tests.base",
            "collective.langMailHost.tests.test_functional",
            "collective.langMailHost.tests.test_setup",
            "collective.langMailHost.tool"
        ],
        "version": "0.3.5"
    },
    "collective.languagemovefolders": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.languagemovefolders",
            "collective.languagemovefolders.browser",
            "collective.languagemovefolders.browser.movecontentview",
            "collective.languagemovefolders.setuphandlers",
            "collective.languagemovefolders.testing",
            "collective.languagemovefolders.tests",
            "collective.languagemovefolders.tests.test_move",
            "collective.languagemovefolders.tests.test_setup",
            "collective.languagemovefolders.utils"
        ],
        "version": "1.1"
    },
    "collective.lastlogin": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.lastlogin",
            "collective.lastlogin.view",
            "collective.lastlogin.zope2"
        ],
        "version": "0.1"
    },
    "collective.lastmodified": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.lastmodified",
            "collective.lastmodified.browser",
            "collective.lastmodified.browser.viewlets",
            "collective.lastmodified.extender",
            "collective.lastmodified.i18n",
            "collective.lastmodified.interfaces",
            "collective.lastmodified.testing",
            "collective.lastmodified.tests",
            "collective.lastmodified.tests.test_extender",
            "collective.lastmodified.tests.test_robot"
        ],
        "version": "1.0"
    },
    "collective.lastmodifier": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.lastmodifier",
            "collective.lastmodifier.adapter",
            "collective.lastmodifier.hooks",
            "collective.lastmodifier.indexers",
            "collective.lastmodifier.interfaces",
            "collective.lastmodifier.patches",
            "collective.lastmodifier.schemaextender",
            "collective.lastmodifier.subscribers",
            "collective.lastmodifier.testing",
            "collective.lastmodifier.tests",
            "collective.lastmodifier.tests.builders",
            "collective.lastmodifier.tests.test_archetypes_field",
            "collective.lastmodifier.tests.test_at_adapter",
            "collective.lastmodifier.tests.test_catalog",
            "collective.lastmodifier.tests.test_dx_adapter",
            "collective.lastmodifier.tests.test_uninstall"
        ],
        "version": "1.1.2"
    },
    "collective.lastupdated": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.lastupdated",
            "collective.lastupdated.browser",
            "collective.lastupdated.browser.viewlets",
            "collective.lastupdated.interfaces",
            "collective.lastupdated.tests"
        ],
        "version": "0.1"
    },
    "collective.latin1splitter": {
        "cmdline": [],
        "modules": [],
        "version": "1.1"
    },
    "collective.layout.authpersonalbar": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "collective.lazysizes": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.lazysizes",
            "collective.lazysizes.Extensions",
            "collective.lazysizes.Extensions.Install",
            "collective.lazysizes.config",
            "collective.lazysizes.controlpanel",
            "collective.lazysizes.interfaces",
            "collective.lazysizes.logger",
            "collective.lazysizes.setuphandlers",
            "collective.lazysizes.testing",
            "collective.lazysizes.tests",
            "collective.lazysizes.tests.test_controlpanel",
            "collective.lazysizes.tests.test_lazysizes",
            "collective.lazysizes.tests.test_robot",
            "collective.lazysizes.tests.test_setup",
            "collective.lazysizes.tests.test_transformer",
            "collective.lazysizes.tests.test_upgrades",
            "collective.lazysizes.transform",
            "collective.lazysizes.upgrades",
            "collective.lazysizes.upgrades.v2",
            "collective.lazysizes.upgrades.v3",
            "collective.lazysizes.upgrades.v4",
            "collective.lazysizes.upgrades.v5",
            "collective.lazysizes.upgrades.v6",
            "collective.lazysizes.upgrades.v7",
            "collective.lazysizes.vocabularies"
        ],
        "version": "3.0.0"
    },
    "collective.lcstartp": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.lcstartp",
            "collective.lcstartp.browser",
            "collective.lcstartp.browser.settings",
            "collective.lcstartp.browser.startp",
            "collective.lcstartp.interfaces",
            "collective.lcstartp.tests"
        ],
        "version": "0.1"
    },
    "collective.lead": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.lead",
            "collective.lead.database",
            "collective.lead.interfaces",
            "collective.lead.tests",
            "collective.lead.tx"
        ],
        "version": "1.0"
    },
    "collective.leadmedia": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.leadmedia",
            "collective.leadmedia.adapters",
            "collective.leadmedia.behaviors",
            "collective.leadmedia.behaviors.slideshow",
            "collective.leadmedia.behaviors.viewlets",
            "collective.leadmedia.browser",
            "collective.leadmedia.browser.viewlets",
            "collective.leadmedia.browser.views",
            "collective.leadmedia.events",
            "collective.leadmedia.indexers",
            "collective.leadmedia.interfaces",
            "collective.leadmedia.setuphandlers",
            "collective.leadmedia.tests",
            "collective.leadmedia.utils"
        ],
        "version": "0.1"
    },
    "collective.lesscss": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.lesscss",
            "collective.lesscss.browser",
            "collective.lesscss.browser.compiledcss",
            "collective.lesscss.browser.controlpanel",
            "collective.lesscss.browser.interfaces",
            "collective.lesscss.browser.less",
            "collective.lesscss.exportimport",
            "collective.lesscss.exportimport.lessregistry",
            "collective.lesscss.interface",
            "collective.lesscss.testing",
            "collective.lesscss.tests",
            "collective.lesscss.tests.base",
            "collective.lesscss.tests.testExportImport",
            "collective.lesscss.tests.testLESSRegistry",
            "collective.lesscss.tool"
        ],
        "version": "2.0.1"
    },
    "collective.liches": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.liches",
            "collective.liches.browser",
            "collective.liches.browser.settings",
            "collective.liches.browser.viewlets",
            "collective.liches.browser.views",
            "collective.liches.interfaces",
            "collective.liches.portlets",
            "collective.liches.portlets.lichesportlet",
            "collective.liches.portlets.views",
            "collective.liches.setuphandlers",
            "collective.liches.tests",
            "collective.liches.tests.base_lichesportlet",
            "collective.liches.tests.test_lichesportlet"
        ],
        "version": "0.2"
    },
    "collective.limitfilesizepanel": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.limitfilesizepanel",
            "collective.limitfilesizepanel.browser",
            "collective.limitfilesizepanel.browser.controlpanel",
            "collective.limitfilesizepanel.browser.limitfilesizepanel_view",
            "collective.limitfilesizepanel.dx_validators",
            "collective.limitfilesizepanel.interfaces",
            "collective.limitfilesizepanel.patches",
            "collective.limitfilesizepanel.setuphandlers",
            "collective.limitfilesizepanel.testing",
            "collective.limitfilesizepanel.tests",
            "collective.limitfilesizepanel.tests.base",
            "collective.limitfilesizepanel.tests.base_dx",
            "collective.limitfilesizepanel.tests.test_bypassvalidation",
            "collective.limitfilesizepanel.tests.test_maxsizecalc",
            "collective.limitfilesizepanel.tests.test_maxsizecalc_dx",
            "collective.limitfilesizepanel.tests.test_setup",
            "collective.limitfilesizepanel.tinymce_upload"
        ],
        "version": "2.0.0"
    },
    "collective.lineage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.lineage",
            "collective.lineage.adapters",
            "collective.lineage.browser",
            "collective.lineage.descriptors",
            "collective.lineage.events",
            "collective.lineage.interfaces",
            "collective.lineage.testing",
            "collective.lineage.tests",
            "collective.lineage.tests.test_adapter",
            "collective.lineage.tests.test_setup",
            "collective.lineage.tests.test_utils",
            "collective.lineage.upgrades",
            "collective.lineage.utils"
        ],
        "version": "2.1.1"
    },
    "collective.linguaanalytics": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.linguaanalytics",
            "collective.linguaanalytics.controlpanel",
            "collective.linguaanalytics.interfaces",
            "collective.linguaanalytics.testing",
            "collective.linguaanalytics.tests",
            "collective.linguaanalytics.tests.base",
            "collective.linguaanalytics.tests.test_integration_trackingviewlet",
            "collective.linguaanalytics.tests.test_setup",
            "collective.linguaanalytics.tests.test_unittest__trackingviewlet",
            "collective.linguaanalytics.tests.utils",
            "collective.linguaanalytics.upgrades",
            "collective.linguaanalytics.upgrades.v1000_to_1001",
            "collective.linguaanalytics.viewlets",
            "collective.linguaanalytics.viewlets.analytics"
        ],
        "version": "1.0"
    },
    "collective.linguadomains": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.linguadomains",
            "collective.linguadomains.controller",
            "collective.linguadomains.controlpanel",
            "collective.linguadomains.interfaces",
            "collective.linguadomains.testing",
            "collective.linguadomains.tests",
            "collective.linguadomains.tests.base",
            "collective.linguadomains.tests.test_integration_setup",
            "collective.linguadomains.tests.test_integration_validator",
            "collective.linguadomains.tests.test_unit_controller",
            "collective.linguadomains.tests.test_unit_validator",
            "collective.linguadomains.tests.utils",
            "collective.linguadomains.upgrades",
            "collective.linguadomains.upgrades.v1000_to_1001",
            "collective.linguadomains.validator"
        ],
        "version": "1.1"
    },
    "collective.linguafaq": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.linguafaq",
            "collective.linguafaq.browser",
            "collective.linguafaq.browser.faqview",
            "collective.linguafaq.browser.onefaqview",
            "collective.linguafaq.browser.viewlets",
            "collective.linguafaq.config",
            "collective.linguafaq.content",
            "collective.linguafaq.content.faqfolder",
            "collective.linguafaq.content.faqgroup",
            "collective.linguafaq.content.faqitem",
            "collective.linguafaq.interfaces",
            "collective.linguafaq.interfaces.faqfolder",
            "collective.linguafaq.interfaces.faqgroup",
            "collective.linguafaq.interfaces.faqitem",
            "collective.linguafaq.testing",
            "collective.linguafaq.tests",
            "collective.linguafaq.tests.base",
            "collective.linguafaq.tests.test_doctest",
            "collective.linguafaq.tests.test_faqfolder",
            "collective.linguafaq.tests.test_faqgroup",
            "collective.linguafaq.tests.test_faqitem",
            "collective.linguafaq.tests.test_setup"
        ],
        "version": "0.5"
    },
    "collective.linguasitemap": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.linguasitemap",
            "collective.linguasitemap.browser",
            "collective.linguasitemap.browser.interfaces",
            "collective.linguasitemap.browser.sitemap",
            "collective.linguasitemap.testing",
            "collective.linguasitemap.tests",
            "collective.linguasitemap.tests.base",
            "collective.linguasitemap.tests.test_setup",
            "collective.linguasitemap.tests.test_sitemap",
            "collective.linguasitemap.tests.test_traverser",
            "collective.linguasitemap.tests.utils",
            "collective.linguasitemap.upgrades",
            "collective.linguasitemap.upgrades.v1000_to_1001"
        ],
        "version": "1.0"
    },
    "collective.linguatags": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.linguatags",
            "collective.linguatags.browser",
            "collective.linguatags.browser.controlpanel",
            "collective.linguatags.browser.keywords",
            "collective.linguatags.interfaces",
            "collective.linguatags.setuphandlers",
            "collective.linguatags.storage",
            "collective.linguatags.testing",
            "collective.linguatags.tests",
            "collective.linguatags.tests.test_setup",
            "collective.linguatags.tests.test_translationdomain",
            "collective.linguatags.translationdomain"
        ],
        "version": "1.0"
    },
    "collective.linkcheck": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.linkcheck",
            "collective.linkcheck.browser",
            "collective.linkcheck.controlpanel",
            "collective.linkcheck.events",
            "collective.linkcheck.interfaces",
            "collective.linkcheck.parse",
            "collective.linkcheck.processor",
            "collective.linkcheck.queue",
            "collective.linkcheck.tool",
            "collective.linkcheck.traversal",
            "collective.linkcheck.upgrades"
        ],
        "version": "1.2"
    },
    "collective.linkedin": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.linkedin",
            "collective.linkedin.browser",
            "collective.linkedin.browser.company_info",
            "collective.linkedin.browser.config",
            "collective.linkedin.browser.interfaces",
            "collective.linkedin.browser.portlets",
            "collective.linkedin.browser.profile_info",
            "collective.linkedin.browser.viewlets",
            "collective.linkedin.setuphandlers",
            "collective.linkedin.tests"
        ],
        "version": "0.2.6"
    },
    "collective.listingviews": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.listingviews",
            "collective.listingviews.browser",
            "collective.listingviews.browser.portlets",
            "collective.listingviews.browser.portlets.portlets",
            "collective.listingviews.browser.views",
            "collective.listingviews.browser.views.base",
            "collective.listingviews.browser.views.basic",
            "collective.listingviews.browser.views.collection",
            "collective.listingviews.browser.views.controlpanel",
            "collective.listingviews.browser.views.listing_view",
            "collective.listingviews.interfaces",
            "collective.listingviews.testing",
            "collective.listingviews.tests",
            "collective.listingviews.utils",
            "collective.listingviews.validation",
            "collective.listingviews.vocabularies"
        ],
        "version": "1.0beta3"
    },
    "collective.listjs": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "collective.listusers": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.listusers",
            "collective.listusers.browser",
            "collective.listusers.browser.listusers",
            "collective.listusers.browser.vcard",
            "collective.listusers.config",
            "collective.listusers.controlpanel",
            "collective.listusers.interfaces",
            "collective.listusers.tests",
            "collective.listusers.tests.base",
            "collective.listusers.tests.test_listusers",
            "collective.listusers.tests.test_setup",
            "collective.listusers.tests.test_vocabulary",
            "collective.listusers.vocabularies"
        ],
        "version": "1.3"
    },
    "collective.liveblog": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.liveblog",
            "collective.liveblog.adapters",
            "collective.liveblog.browser",
            "collective.liveblog.browser.base",
            "collective.liveblog.browser.header",
            "collective.liveblog.browser.microupdates",
            "collective.liveblog.browser.recent_updates",
            "collective.liveblog.browser.update",
            "collective.liveblog.browser.view",
            "collective.liveblog.caching",
            "collective.liveblog.caching.purge",
            "collective.liveblog.config",
            "collective.liveblog.content",
            "collective.liveblog.interfaces",
            "collective.liveblog.logger",
            "collective.liveblog.setuphandlers",
            "collective.liveblog.testing",
            "collective.liveblog.tests",
            "collective.liveblog.tests.test_adapters",
            "collective.liveblog.tests.test_liveblog",
            "collective.liveblog.tests.test_microupdates_views",
            "collective.liveblog.tests.test_robot",
            "collective.liveblog.tests.test_setup",
            "collective.liveblog.tests.test_upgrades",
            "collective.liveblog.tests.test_viewlet",
            "collective.liveblog.tests.test_views",
            "collective.liveblog.tests.utils",
            "collective.liveblog.upgrades",
            "collective.liveblog.upgrades.v1001",
            "collective.liveblog.upgrades.v1002"
        ],
        "version": "1.2b1"
    },
    "collective.local.addgroup": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.local",
            "collective.local.addgroup",
            "collective.local.addgroup.addgrouptolist",
            "collective.local.addgroup.event",
            "collective.local.addgroup.extender",
            "collective.local.addgroup.interfaces",
            "collective.local.addgroup.members",
            "collective.local.addgroup.testing",
            "collective.local.addgroup.tests",
            "collective.local.addgroup.tests.test_newgroup",
            "collective.local.addgroup.vocabulary"
        ],
        "version": "1.2.2"
    },
    "collective.local.adduser": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.local",
            "collective.local.adduser",
            "collective.local.adduser.event",
            "collective.local.adduser.extender",
            "collective.local.adduser.interfaces",
            "collective.local.adduser.tests",
            "collective.local.adduser.tests.test_newuser",
            "collective.local.adduser.vocabulary"
        ],
        "version": "1.5"
    },
    "collective.local.contentrules": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.local",
            "collective.local.contentrules",
            "collective.local.contentrules.stringinterp",
            "collective.local.contentrules.testing",
            "collective.local.contentrules.tests",
            "collective.local.contentrules.tests.test_stringinterp"
        ],
        "version": "1.0rc1"
    },
    "collective.local.deploygroup": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.local",
            "collective.local.deploygroup",
            "collective.local.deploygroup.browser",
            "collective.local.deploygroup.browser.sharing"
        ],
        "version": "1.0"
    },
    "collective.local.sendto": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.local",
            "collective.local.sendto",
            "collective.local.sendto.browser",
            "collective.local.sendto.browser.send",
            "collective.local.sendto.browser.view",
            "collective.local.sendto.events",
            "collective.local.sendto.interfaces",
            "collective.local.sendto.testing",
            "collective.local.sendto.tests",
            "collective.local.sendto.tests.test_events",
            "collective.local.sendto.tests.test_setup",
            "collective.local.sendto.upgrades",
            "collective.local.sendto.utils"
        ],
        "version": "1.6.1"
    },
    "collective.local.sentmail": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.local",
            "collective.local.sentmail",
            "collective.local.sentmail.browser",
            "collective.local.sentmail.browser.sent_mail",
            "collective.local.sentmail.content",
            "collective.local.sentmail.content.sent_mail",
            "collective.local.sentmail.interfaces",
            "collective.local.sentmail.schema",
            "collective.local.sentmail.setuphandlers",
            "collective.local.sentmail.subscribers",
            "collective.local.sentmail.testing",
            "collective.local.sentmail.tests",
            "collective.local.sentmail.tests.test_security",
            "collective.local.sentmail.tests.test_setup",
            "collective.local.sentmail.tests.test_subscribers",
            "collective.local.sentmail.tests.test_types"
        ],
        "version": "1.2"
    },
    "collective.local.userlisting": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.local",
            "collective.local.userlisting",
            "collective.local.userlisting.interfaces",
            "collective.local.userlisting.tests",
            "collective.local.userlisting.userlisting"
        ],
        "version": "1.3"
    },
    "collective.local.workspace": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.local",
            "collective.local.workspace",
            "collective.local.workspace.api",
            "collective.local.workspace.content",
            "collective.local.workspace.contentrules",
            "collective.local.workspace.handlers",
            "collective.local.workspace.interfaces",
            "collective.local.workspace.testing",
            "collective.local.workspace.tests",
            "collective.local.workspace.tests.test_robot",
            "collective.local.workspace.tests.test_setup"
        ],
        "version": "1.0rc2"
    },
    "collective.localheaderandfooter": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.localheaderandfooter",
            "collective.localheaderandfooter.behavior",
            "collective.localheaderandfooter.config",
            "collective.localheaderandfooter.interfaces",
            "collective.localheaderandfooter.testing",
            "collective.localheaderandfooter.tests",
            "collective.localheaderandfooter.tests.test_functional",
            "collective.localheaderandfooter.tests.test_robot",
            "collective.localheaderandfooter.tests.test_setup",
            "collective.localheaderandfooter.utils",
            "collective.localheaderandfooter.viewlets",
            "collective.localheaderandfooter.vocabularies"
        ],
        "version": "1.0"
    },
    "collective.localrolesdatatables": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.localrolesdatatables",
            "collective.localrolesdatatables.localroles_view",
            "collective.localrolesdatatables.setuphandlers",
            "collective.localrolesdatatables.testing",
            "collective.localrolesdatatables.tests",
            "collective.localrolesdatatables.tests.base",
            "collective.localrolesdatatables.tests.test_localroles_view",
            "collective.localrolesdatatables.tests.test_setup",
            "collective.localrolesdatatables.upgrades"
        ],
        "version": "1.0.1"
    },
    "collective.localrolespanel": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.localrolespanel",
            "collective.localrolespanel.browser",
            "collective.localrolespanel.browser.localroles_controlpanel",
            "collective.localrolespanel.config",
            "collective.localrolespanel.interfaces",
            "collective.localrolespanel.interfaces.stdlocalroles",
            "collective.localrolespanel.stdlocalroles",
            "collective.localrolespanel.tests",
            "collective.localrolespanel.tests.base",
            "collective.localrolespanel.tests.test_doctest",
            "collective.localrolespanel.tests.test_setup"
        ],
        "version": "0.2"
    },
    "collective.localstyles": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.localstyles",
            "collective.localstyles.interfaces",
            "collective.localstyles.styleincluder_viewlet"
        ],
        "version": "1.1"
    },
    "collective.logbook": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.logbook",
            "collective.logbook.browser",
            "collective.logbook.browser.controlpanel",
            "collective.logbook.browser.errortest",
            "collective.logbook.browser.logbook",
            "collective.logbook.browser.mail",
            "collective.logbook.browser.webhook",
            "collective.logbook.config",
            "collective.logbook.events",
            "collective.logbook.interfaces",
            "collective.logbook.monkey",
            "collective.logbook.storage",
            "collective.logbook.tests",
            "collective.logbook.tests.base",
            "collective.logbook.tests.test_doctests",
            "collective.logbook.tests.test_robot",
            "collective.logbook.tests.test_setup",
            "collective.logbook.tests.test_storage",
            "collective.logbook.tests.test_upgrade",
            "collective.logbook.tests.test_views",
            "collective.logbook.upgradehandlers",
            "collective.logbook.utils"
        ],
        "version": "0.9.0"
    },
    "collective.login-monitor": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.login_monitor",
            "collective.login_monitor.browser",
            "collective.login_monitor.browser.view",
            "collective.login_monitor.event",
            "collective.login_monitor.interfaces",
            "collective.login_monitor.models",
            "collective.login_monitor.prepare_model",
            "collective.login_monitor.upgrades"
        ],
        "version": "0.4"
    },
    "collective.lorem": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.lorem",
            "collective.lorem.archetypes",
            "collective.lorem.browser",
            "collective.lorem.generation",
            "collective.lorem.interfaces",
            "collective.lorem.setuphandlers",
            "collective.lorem.tests"
        ],
        "version": "0.2.3"
    },
    "collective.loremipsum": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.loremipsum",
            "collective.loremipsum.browser",
            "collective.loremipsum.browser.populate",
            "collective.loremipsum.browser.views",
            "collective.loremipsum.config",
            "collective.loremipsum.fakeimagegetter",
            "collective.loremipsum.interfaces",
            "collective.loremipsum.permissions",
            "collective.loremipsum.testing",
            "collective.loremipsum.utils",
            "collective.loremipsum.vocabularies"
        ],
        "version": "0.10"
    },
    "collective.lti": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.lti",
            "collective.lti.browser",
            "collective.lti.browser.lti",
            "collective.lti.browser.ltimanage",
            "collective.lti.config",
            "collective.lti.content",
            "collective.lti.content.launchfolder",
            "collective.lti.content.ltilaunch",
            "collective.lti.interfaces",
            "collective.lti.setuphandlers",
            "collective.lti.tests"
        ],
        "version": "1.0"
    },
    "collective.mailbox": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.mailbox",
            "collective.mailbox.mailboxview",
            "collective.mailbox.mailhost",
            "collective.mailbox.testing",
            "collective.mailbox.tests",
            "collective.mailbox.tests.test_mailhost"
        ],
        "version": "1.1.2"
    },
    "collective.mailchimp": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.mailchimp",
            "collective.mailchimp.browser",
            "collective.mailchimp.browser.controlpanel",
            "collective.mailchimp.browser.extender",
            "collective.mailchimp.browser.newsletter",
            "collective.mailchimp.browser.portlet",
            "collective.mailchimp.browser.z3cformhelpers",
            "collective.mailchimp.exceptions",
            "collective.mailchimp.interfaces",
            "collective.mailchimp.locator",
            "collective.mailchimp.testing",
            "collective.mailchimp.tests",
            "collective.mailchimp.tests.test_controlpanel",
            "collective.mailchimp.tests.test_exceptions",
            "collective.mailchimp.tests.test_locator",
            "collective.mailchimp.tests.test_mock_requests",
            "collective.mailchimp.tests.test_newsletter",
            "collective.mailchimp.tests.test_portlet",
            "collective.mailchimp.tests.test_setup",
            "collective.mailchimp.upgrades",
            "collective.mailchimp.vocabularies"
        ],
        "version": "2.0.2"
    },
    "collective.maildigest": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.maildigest",
            "collective.maildigest.action",
            "collective.maildigest.action.digestemail_byfolder",
            "collective.maildigest.action.log",
            "collective.maildigest.activity",
            "collective.maildigest.activity.add",
            "collective.maildigest.activity.delete",
            "collective.maildigest.activity.modify",
            "collective.maildigest.activity.move",
            "collective.maildigest.activity.publish",
            "collective.maildigest.browser",
            "collective.maildigest.browser.cron",
            "collective.maildigest.browser.interfaces",
            "collective.maildigest.browser.view",
            "collective.maildigest.browser.viewlet",
            "collective.maildigest.digestrules",
            "collective.maildigest.digestrules.rules",
            "collective.maildigest.interfaces",
            "collective.maildigest.storage",
            "collective.maildigest.testing",
            "collective.maildigest.tests",
            "collective.maildigest.tests.base",
            "collective.maildigest.tests.test_actions",
            "collective.maildigest.tests.test_storage",
            "collective.maildigest.tests.test_tool",
            "collective.maildigest.tests.test_views",
            "collective.maildigest.tool",
            "collective.maildigest.upgrades",
            "collective.maildigest.upgrades.v1x"
        ],
        "version": "1.0"
    },
    "collective.maplocbehavior": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.maplocbehavior",
            "collective.maplocbehavior.mappable",
            "collective.maplocbehavior.tests"
        ],
        "version": "1.2"
    },
    "collective.maps.geoxml": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.maps",
            "collective.maps.geoxml",
            "collective.maps.geoxml.browser",
            "collective.maps.geoxml.config",
            "collective.maps.geoxml.content",
            "collective.maps.geoxml.content.geoxml",
            "collective.maps.geoxml.interfaces",
            "collective.maps.geoxml.portlets",
            "collective.maps.geoxml.tests",
            "collective.maps.geoxml.tests.doc_tests"
        ],
        "version": "1.0"
    },
    "collective.markitup": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.markitup",
            "collective.markitup.browser",
            "collective.markitup.browser.finder",
            "collective.markitup.browser.json",
            "collective.markitup.browser.preview",
            "collective.markitup.browser.redirect",
            "collective.markitup.setuphandlers",
            "collective.markitup.tests",
            "collective.markitup.upgrades"
        ],
        "version": "0.2"
    },
    "collective.marshall.workflow": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.marshall",
            "collective.marshall.workflow",
            "collective.marshall.workflow.events",
            "collective.marshall.workflow.handlers",
            "collective.marshall.workflow.interfaces",
            "collective.marshall.workflow.namespaces",
            "collective.marshall.workflow.namespaces.workflow",
            "collective.marshall.workflow.tests"
        ],
        "version": "1.0.4"
    },
    "collective.masonry": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.masonry",
            "collective.masonry.interfaces",
            "collective.masonry.manager",
            "collective.masonry.tests",
            "collective.masonry.upgrades",
            "collective.masonry.viewlets"
        ],
        "version": "1.2.2"
    },
    "collective.mass-subscriptions": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.mass_subscriptions",
            "collective.mass_subscriptions.browser",
            "collective.mass_subscriptions.browser.subscriptions"
        ],
        "version": "0.1.0"
    },
    "collective.mathjax": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.mathjax"
        ],
        "version": "1.1.1"
    },
    "collective.mcp": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.mcp",
            "collective.mcp.browser",
            "collective.mcp.browser.control_panel",
            "collective.mcp.browser.control_panel_page",
            "collective.mcp.category",
            "collective.mcp.samples",
            "collective.mcp.samples.defect",
            "collective.mcp.samples.home_message",
            "collective.mcp.samples.notes",
            "collective.mcp.samples.notes_api",
            "collective.mcp.samples.restricted",
            "collective.mcp.sorted_list",
            "collective.mcp.tests",
            "collective.mcp.tests.test_docs",
            "collective.mcp.tests.test_unit",
            "collective.mcp.tests.utils"
        ],
        "version": "0.5"
    },
    "collective.media": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.media",
            "collective.media.adapters",
            "collective.media.browser",
            "collective.media.events",
            "collective.media.indexers",
            "collective.media.interfaces",
            "collective.media.setuphandlers",
            "collective.media.tests"
        ],
        "version": "0.21"
    },
    "collective.mediaalbum": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.mediaAlbum",
            "collective.mediaAlbum.browser",
            "collective.mediaAlbum.browser.albumview",
            "collective.mediaAlbum.interfaces",
            "collective.mediaAlbum.tests"
        ],
        "version": "0.3"
    },
    "collective.mediaelementjs": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.mediaelementjs",
            "collective.mediaelementjs.behaviors",
            "collective.mediaelementjs.browser",
            "collective.mediaelementjs.browser.view",
            "collective.mediaelementjs.dexterity",
            "collective.mediaelementjs.events",
            "collective.mediaelementjs.interfaces",
            "collective.mediaelementjs.media",
            "collective.mediaelementjs.metadata_extraction",
            "collective.mediaelementjs.tests",
            "collective.mediaelementjs.tests.tests"
        ],
        "version": "0.4.3"
    },
    "collective.mediashow": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.mediaShow",
            "collective.mediaShow.browser",
            "collective.mediaShow.browser.interfaces",
            "collective.mediaShow.browser.mediaShow",
            "collective.mediaShow.browser.views",
            "collective.mediaShow.setuphandlers",
            "collective.mediaShow.tests"
        ],
        "version": "1.36"
    },
    "collective.megaphone": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.megaphone",
            "collective.megaphone.browser",
            "collective.megaphone.browser.controlpanel",
            "collective.megaphone.browser.fields_step",
            "collective.megaphone.browser.general_step",
            "collective.megaphone.browser.megaphone",
            "collective.megaphone.browser.recipient_multiplexer",
            "collective.megaphone.browser.recipients_step",
            "collective.megaphone.browser.salesforce_step",
            "collective.megaphone.browser.signers_listing",
            "collective.megaphone.browser.signers_step",
            "collective.megaphone.browser.summary",
            "collective.megaphone.browser.template_step",
            "collective.megaphone.browser.thankyou_step",
            "collective.megaphone.browser.utils",
            "collective.megaphone.config",
            "collective.megaphone.constraints",
            "collective.megaphone.content",
            "collective.megaphone.content.letterrecipientmaileradapter",
            "collective.megaphone.initialize",
            "collective.megaphone.interfaces",
            "collective.megaphone.portlets",
            "collective.megaphone.portlets.calltoaction",
            "collective.megaphone.recipient_multiplexer",
            "collective.megaphone.recipients",
            "collective.megaphone.recipients.standard",
            "collective.megaphone.recipients.test",
            "collective.megaphone.renderer",
            "collective.megaphone.setuphandlers",
            "collective.megaphone.tests",
            "collective.megaphone.tests.base",
            "collective.megaphone.tests.layer",
            "collective.megaphone.tests.test_functional",
            "collective.megaphone.tests.test_installation",
            "collective.megaphone.tests.test_petition",
            "collective.megaphone.tests.test_signers_step",
            "collective.megaphone.upgrades",
            "collective.megaphone.utils"
        ],
        "version": "2.1.5"
    },
    "collective.megaphonecicerolookup": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.megaphonecicerolookup",
            "collective.megaphonecicerolookup.address_lookup",
            "collective.megaphonecicerolookup.events",
            "collective.megaphonecicerolookup.interfaces",
            "collective.megaphonecicerolookup.tests",
            "collective.megaphonecicerolookup.tests.base",
            "collective.megaphonecicerolookup.tests.layer",
            "collective.megaphonecicerolookup.tests.test_lookup"
        ],
        "version": "1.0.1"
    },
    "collective.megaphonesql": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.megaphonesql",
            "collective.megaphonesql.tests"
        ],
        "version": "1.0"
    },
    "collective.memberapproval": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.memberapproval",
            "collective.memberapproval.browser",
            "collective.memberapproval.browser.approval",
            "collective.memberapproval.browser.interfaces",
            "collective.memberapproval.browser.usergroups",
            "collective.memberapproval.setuphandlers",
            "collective.memberapproval.tests",
            "collective.memberapproval.tests.layer",
            "collective.memberapproval.tests.test_approval"
        ],
        "version": "1.0"
    },
    "collective.membercriterion": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.membercriterion",
            "collective.membercriterion.config",
            "collective.membercriterion.memberdata",
            "collective.membercriterion.tests",
            "collective.membercriterion.vocabulary"
        ],
        "version": "1.0b3"
    },
    "collective.memberemails": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.memberemails",
            "collective.memberemails.controlpanel",
            "collective.memberemails.handlers",
            "collective.memberemails.interfaces",
            "collective.memberemails.testing",
            "collective.memberemails.tests",
            "collective.memberemails.tests.test_approval",
            "collective.memberemails.tests.test_installed"
        ],
        "version": "1.0a2"
    },
    "collective.messagesviewlet": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.messagesviewlet",
            "collective.messagesviewlet.browser",
            "collective.messagesviewlet.browser.messagesviewlet",
            "collective.messagesviewlet.interfaces",
            "collective.messagesviewlet.message",
            "collective.messagesviewlet.messagesconfig",
            "collective.messagesviewlet.setuphandlers",
            "collective.messagesviewlet.subscribers",
            "collective.messagesviewlet.testing",
            "collective.messagesviewlet.tests",
            "collective.messagesviewlet.tests.test_message",
            "collective.messagesviewlet.tests.test_robot",
            "collective.messagesviewlet.tests.test_setup",
            "collective.messagesviewlet.utils"
        ],
        "version": "0.11"
    },
    "collective.metarobots": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.metarobots",
            "collective.metarobots.layer",
            "collective.metarobots.tag",
            "collective.metarobots.testing",
            "collective.metarobots.tests",
            "collective.metarobots.tests.base",
            "collective.metarobots.tests.test_setup",
            "collective.metarobots.upgrades"
        ],
        "version": "1.1.1"
    },
    "collective.microdata.contentlisting": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.microdata",
            "collective.microdata.contentlisting",
            "collective.microdata.contentlisting.browser",
            "collective.microdata.contentlisting.browser.view",
            "collective.microdata.contentlisting.interfaces",
            "collective.microdata.contentlisting.testing",
            "collective.microdata.contentlisting.tests",
            "collective.microdata.contentlisting.tests.base",
            "collective.microdata.contentlisting.tests.test_microdata_contents"
        ],
        "version": "0.1"
    },
    "collective.microdata.core": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.microdata",
            "collective.microdata.core",
            "collective.microdata.core.adapter",
            "collective.microdata.core.browser",
            "collective.microdata.core.indexer",
            "collective.microdata.core.interfaces",
            "collective.microdata.core.testing",
            "collective.microdata.core.tests",
            "collective.microdata.core.tests.base",
            "collective.microdata.core.tests.test_microdata_support"
        ],
        "version": "0.1"
    },
    "collective.microdata.event": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.microdata",
            "collective.microdata.event",
            "collective.microdata.event.adapter",
            "collective.microdata.event.browser",
            "collective.microdata.event.browser.view",
            "collective.microdata.event.indexer",
            "collective.microdata.event.interfaces"
        ],
        "version": "0.2"
    },
    "collective.migrator": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.migrator",
            "collective.migrator.migrator",
            "collective.migrator.recipes",
            "collective.migrator.recipes.migrator",
            "collective.migrator.recipes.utils",
            "collective.migrator.scripts",
            "collective.migrator.scripts.actions",
            "collective.migrator.scripts.content",
            "collective.migrator.scripts.memberdata",
            "collective.migrator.scripts.mod_time",
            "collective.migrator.scripts.props",
            "collective.migrator.scripts.related_items",
            "collective.migrator.scripts.site_config",
            "collective.migrator.scripts.sitemap",
            "collective.migrator.templates",
            "collective.migrator.tests",
            "collective.migrator.tests.testUtils",
            "collective.migrator.tests.testUtils2"
        ],
        "version": "1.8"
    },
    "collective.miscbehaviors": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.miscbehaviors",
            "collective.miscbehaviors.behavior",
            "collective.miscbehaviors.behavior.bodytext",
            "collective.miscbehaviors.behavior.contactinfo",
            "collective.miscbehaviors.behavior.fileattachment",
            "collective.miscbehaviors.behavior.leadimage",
            "collective.miscbehaviors.behavior.paypal",
            "collective.miscbehaviors.behavior.remoteurl",
            "collective.miscbehaviors.behavior.startenddate",
            "collective.miscbehaviors.behavior.utils",
            "collective.miscbehaviors.browser",
            "collective.miscbehaviors.browser.leadimage",
            "collective.miscbehaviors.content",
            "collective.miscbehaviors.indexer",
            "collective.miscbehaviors.portlets",
            "collective.miscbehaviors.portlets.imageportlet",
            "collective.miscbehaviors.portlets.paypal",
            "collective.miscbehaviors.tests"
        ],
        "version": "0.2.2"
    },
    "collective.mockmailhost": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.MockMailHost",
            "collective.MockMailHost.MockMailHost",
            "collective.MockMailHost.browser",
            "collective.MockMailHost.browser.views",
            "collective.MockMailHost.config",
            "collective.MockMailHost.setuphandlers",
            "collective.MockMailHost.tests",
            "collective.MockMailHost.tests.MockMailHostTC",
            "collective.MockMailHost.tests.testFunctional"
        ],
        "version": "1.0"
    },
    "collective.mollie": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.mollie",
            "collective.mollie.adapter",
            "collective.mollie.browser",
            "collective.mollie.browser.report",
            "collective.mollie.config",
            "collective.mollie.events",
            "collective.mollie.ideal",
            "collective.mollie.interfaces",
            "collective.mollie.testing",
            "collective.mollie.tests",
            "collective.mollie.tests.test_integration",
            "collective.mollie.tests.test_unit",
            "collective.mollie.xml_parser"
        ],
        "version": "0.3"
    },
    "collective.monitor": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.monitor",
            "collective.monitor.monitor",
            "collective.monitor.threads"
        ],
        "version": "0.2.5"
    },
    "collective.monkeypatcher": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.monkeypatcher",
            "collective.monkeypatcher.interfaces",
            "collective.monkeypatcher.meta",
            "collective.monkeypatcher.tests",
            "collective.monkeypatcher.tests.common",
            "collective.monkeypatcher.tests.dummypatch",
            "collective.monkeypatcher.tests.test_monkeypatcher"
        ],
        "version": "1.1.2"
    },
    "collective.monkeypatcherpanel": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.monkeypatcherpanel",
            "collective.monkeypatcherpanel.config",
            "collective.monkeypatcherpanel.controlpanel",
            "collective.monkeypatcherpanel.tests",
            "collective.monkeypatcherpanel.utils"
        ],
        "version": "1.0.4"
    },
    "collective.mrwiggin": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.mrwiggin",
            "collective.mrwiggin.editmanager",
            "collective.mrwiggin.interfaces",
            "collective.mrwiggin.kss",
            "collective.mrwiggin.main_layout",
            "collective.mrwiggin.tests",
            "collective.mrwiggin.traversable"
        ],
        "version": "0.1a2"
    },
    "collective.mtrsetup": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.mtrsetup",
            "collective.mtrsetup.handler",
            "collective.mtrsetup.tests",
            "collective.mtrsetup.tests.base",
            "collective.mtrsetup.tests.test_doctest"
        ],
        "version": "1.5.3"
    },
    "collective.multifilesextender": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.multifilesextender",
            "collective.multifilesextender.extender",
            "collective.multifilesextender.interfaces",
            "collective.multifilesextender.tests",
            "collective.multifilesextender.viewlet"
        ],
        "version": "1.1"
    },
    "collective.multilanguagefields": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.multilanguagefields",
            "collective.multilanguagefields.behaviors",
            "collective.multilanguagefields.fields",
            "collective.multilanguagefields.interfaces",
            "collective.multilanguagefields.tests",
            "collective.multilanguagefields.utils",
            "collective.multilanguagefields.views"
        ],
        "version": "0.7"
    },
    "collective.multilingual": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.multilingual",
            "collective.multilingual.browser",
            "collective.multilingual.browser.controlpanel",
            "collective.multilingual.browser.form",
            "collective.multilingual.browser.languages",
            "collective.multilingual.browser.menu",
            "collective.multilingual.browser.notices",
            "collective.multilingual.browser.setup",
            "collective.multilingual.catalog",
            "collective.multilingual.events",
            "collective.multilingual.graph",
            "collective.multilingual.i18n",
            "collective.multilingual.interfaces",
            "collective.multilingual.patches",
            "collective.multilingual.testing",
            "collective.multilingual.tests",
            "collective.multilingual.tests.test_browser",
            "collective.multilingual.tests.test_events",
            "collective.multilingual.tests.test_menu",
            "collective.multilingual.tests.test_patches",
            "collective.multilingual.utils",
            "collective.multilingual.vocabularies"
        ],
        "version": "1.0.1"
    },
    "collective.multilingualtools": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.multilingualtools",
            "collective.multilingualtools.browser",
            "collective.multilingualtools.browser.forms",
            "collective.multilingualtools.browser.interfaces",
            "collective.multilingualtools.browser.layout",
            "collective.multilingualtools.browser.multilingualtools",
            "collective.multilingualtools.interfaces",
            "collective.multilingualtools.testing",
            "collective.multilingualtools.tests",
            "collective.multilingualtools.tests.test_functional",
            "collective.multilingualtools.utils",
            "collective.multilingualtools.vocabularies"
        ],
        "version": "0.1.2"
    },
    "collective.multilogo": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.multilogo",
            "collective.multilogo.browser",
            "collective.multilogo.browser.controlpanel",
            "collective.multilogo.browser.viewlets",
            "collective.multilogo.interfaces",
            "collective.multilogo.setuphandlers",
            "collective.multilogo.tests"
        ],
        "version": "0.2.1"
    },
    "collective.multimail": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.multimail",
            "collective.multimail.MultiMailHost",
            "collective.multimail.ScriptableMailHost",
            "collective.multimail.interfaces",
            "collective.multimail.patch",
            "collective.multimail.testing",
            "collective.multimail.tests",
            "collective.multimail.tests.test_easynewsletter",
            "collective.multimail.tests.test_multimail"
        ],
        "version": "1.0a6"
    },
    "collective.multimodeview": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.multimodeview",
            "collective.multimodeview.browser",
            "collective.multimodeview.browser.ajax",
            "collective.multimodeview.browser.base",
            "collective.multimodeview.browser.view",
            "collective.multimodeview.browser.viewlet",
            "collective.multimodeview.samples",
            "collective.multimodeview.samples.notes_view",
            "collective.multimodeview.samples.views"
        ],
        "version": "0.3"
    },
    "collective.multisearch": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.multisearch",
            "collective.multisearch.browser",
            "collective.multisearch.browser.interfaces",
            "collective.multisearch.browser.manager",
            "collective.multisearch.browser.portlet_local_search",
            "collective.multisearch.browser.portlet_remote_search",
            "collective.multisearch.browser.search",
            "collective.multisearch.browser.search_portlet",
            "collective.multisearch.browser.search_viewlet",
            "collective.multisearch.config",
            "collective.multisearch.events",
            "collective.multisearch.interfaces",
            "collective.multisearch.migrations",
            "collective.multisearch.tests",
            "collective.multisearch.utils"
        ],
        "version": "1.2"
    },
    "collective.multisitepanel": {
        "cmdline": [],
        "modules": [],
        "version": "0.3"
    },
    "collective.multitemplate": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.multitemplate",
            "collective.multitemplate.portlet"
        ],
        "version": "1.0b1"
    },
    "collective.mustread": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.mustread",
            "collective.mustread.behaviors",
            "collective.mustread.behaviors.maybe",
            "collective.mustread.behaviors.track",
            "collective.mustread.browser",
            "collective.mustread.browser.init_db",
            "collective.mustread.browser.views",
            "collective.mustread.db",
            "collective.mustread.interfaces",
            "collective.mustread.models",
            "collective.mustread.setuphandlers",
            "collective.mustread.td",
            "collective.mustread.testing",
            "collective.mustread.tests",
            "collective.mustread.tests.test_behaviors",
            "collective.mustread.tests.test_hit",
            "collective.mustread.tests.test_robot",
            "collective.mustread.tests.test_setup",
            "collective.mustread.tests.test_tracker",
            "collective.mustread.tracker",
            "collective.mustread.upgrades",
            "collective.mustread.upgrades.to1001",
            "collective.mustread.utils"
        ],
        "version": "1.1.0"
    },
    "collective.namedblobfile": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.namedblobfile",
            "collective.namedblobfile.blobfile",
            "collective.namedblobfile.blobimage",
            "collective.namedblobfile.field",
            "collective.namedblobfile.interfaces",
            "collective.namedblobfile.widget"
        ],
        "version": "0.3"
    },
    "collective.namedfile": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.namedfile",
            "collective.namedfile.browser",
            "collective.namedfile.field",
            "collective.namedfile.file",
            "collective.namedfile.image",
            "collective.namedfile.interfaces",
            "collective.namedfile.widget"
        ],
        "version": "1.3"
    },
    "collective.navigationtitle": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.navigationtitle",
            "collective.navigationtitle.behavior",
            "collective.navigationtitle.indexer",
            "collective.navigationtitle.interfaces",
            "collective.navigationtitle.navigation",
            "collective.navigationtitle.setuphandlers",
            "collective.navigationtitle.testing",
            "collective.navigationtitle.tests",
            "collective.navigationtitle.tests.test_robot",
            "collective.navigationtitle.tests.test_setup"
        ],
        "version": "0.3"
    },
    "collective.navigationtoggle": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.navigationtoggle",
            "collective.navigationtoggle.browser",
            "collective.navigationtoggle.browser.controlpanel",
            "collective.navigationtoggle.browser.query_subelements",
            "collective.navigationtoggle.browser.registered_filters",
            "collective.navigationtoggle.interfaces",
            "collective.navigationtoggle.setuphandlers",
            "collective.navigationtoggle.testing",
            "collective.navigationtoggle.tests",
            "collective.navigationtoggle.tests.test_configuration_js_view",
            "collective.navigationtoggle.tests.test_query_view"
        ],
        "version": "1.0.2"
    },
    "collective.navrootfield": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.navrootfield",
            "collective.navrootfield.navrootfield"
        ],
        "version": "1.0"
    },
    "collective.navroottabs": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.navroottabs",
            "collective.navroottabs.interfaces",
            "collective.navroottabs.navigation",
            "collective.navroottabs.tests"
        ],
        "version": "0.1.0"
    },
    "collective.newrelic": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.newrelic",
            "collective.newrelic.hooks",
            "collective.newrelic.patches",
            "collective.newrelic.patches.catalog_tool",
            "collective.newrelic.patches.cron4plone",
            "collective.newrelic.patches.newrelic_transaction",
            "collective.newrelic.patches.talinterpreter",
            "collective.newrelic.patches.transformchains",
            "collective.newrelic.patches.zope_event",
            "collective.newrelic.patches.zpublisher_mapply",
            "collective.newrelic.patches.zserverpublisher",
            "collective.newrelic.transforms",
            "collective.newrelic.transforms.outputfilter",
            "collective.newrelic.utils"
        ],
        "version": "1.0.9"
    },
    "collective.newsflash": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.newsflash",
            "collective.newsflash.Extensions",
            "collective.newsflash.Extensions.Install",
            "collective.newsflash.browser",
            "collective.newsflash.browser.newsflash",
            "collective.newsflash.browser.newsflash_viewlet",
            "collective.newsflash.config",
            "collective.newsflash.controlpanel",
            "collective.newsflash.interfaces",
            "collective.newsflash.portlet",
            "collective.newsflash.portlet.newsportlet",
            "collective.newsflash.setuphandlers",
            "collective.newsflash.testing",
            "collective.newsflash.tests",
            "collective.newsflash.tests.base",
            "collective.newsflash.tests.test_browser",
            "collective.newsflash.tests.test_portlet",
            "collective.newsflash.tests.test_registry",
            "collective.newsflash.tests.test_setup"
        ],
        "version": "1.0"
    },
    "collective.newsticker": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.newsticker",
            "collective.newsticker.Extensions",
            "collective.newsticker.Extensions.Install",
            "collective.newsticker.browser",
            "collective.newsticker.config",
            "collective.newsticker.controlpanel",
            "collective.newsticker.interfaces",
            "collective.newsticker.setuphandlers",
            "collective.newsticker.testing",
            "collective.newsticker.tests",
            "collective.newsticker.tests.test_controlpanel",
            "collective.newsticker.tests.test_setup",
            "collective.newsticker.tests.test_upgrades",
            "collective.newsticker.tests.test_viewlet",
            "collective.newsticker.tests.test_vocabularies",
            "collective.newsticker.upgrades",
            "collective.newsticker.upgrades.v2",
            "collective.newsticker.vocabulary"
        ],
        "version": "2.1b1"
    },
    "collective.nextprev": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.nextprev",
            "collective.nextprev.cookie",
            "collective.nextprev.provider",
            "collective.nextprev.results",
            "collective.nextprev.testing",
            "collective.nextprev.tests",
            "collective.nextprev.topic",
            "collective.nextprev.view"
        ],
        "version": "0.2"
    },
    "collective.nitf": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.nitf",
            "collective.nitf.Extensions",
            "collective.nitf.Extensions.Install",
            "collective.nitf.adapters",
            "collective.nitf.behaviors",
            "collective.nitf.behaviors.interfaces",
            "collective.nitf.browser",
            "collective.nitf.browser.newsml",
            "collective.nitf.browser.nitf",
            "collective.nitf.browser.scaling",
            "collective.nitf.config",
            "collective.nitf.content",
            "collective.nitf.controlpanel",
            "collective.nitf.interfaces",
            "collective.nitf.logger",
            "collective.nitf.portlets",
            "collective.nitf.portlets.latest_sectionable_nitf",
            "collective.nitf.setuphandlers",
            "collective.nitf.testing",
            "collective.nitf.tests",
            "collective.nitf.tests.api_hacks",
            "collective.nitf.tests.test_adapters",
            "collective.nitf.tests.test_catalog",
            "collective.nitf.tests.test_collection",
            "collective.nitf.tests.test_content",
            "collective.nitf.tests.test_controlpanel",
            "collective.nitf.tests.test_doctest",
            "collective.nitf.tests.test_nitf_tile",
            "collective.nitf.tests.test_permissions",
            "collective.nitf.tests.test_portlet",
            "collective.nitf.tests.test_robot",
            "collective.nitf.tests.test_setup",
            "collective.nitf.tests.test_upgrades",
            "collective.nitf.tests.test_viewlets",
            "collective.nitf.tests.test_views",
            "collective.nitf.tests.test_vocabularies",
            "collective.nitf.tiles",
            "collective.nitf.tiles.nitf",
            "collective.nitf.upgrades",
            "collective.nitf.upgrades.v1007",
            "collective.nitf.upgrades.v1008",
            "collective.nitf.upgrades.v2000",
            "collective.nitf.upgrades.v2001",
            "collective.nitf.utils",
            "collective.nitf.vocabulary"
        ],
        "version": "2.1b1"
    },
    "collective.nivoslider": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.nivoslider",
            "collective.nivoslider.browser",
            "collective.nivoslider.tests"
        ],
        "version": "1.0a"
    },
    "collective.noindexing": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.noindexing",
            "collective.noindexing.browser",
            "collective.noindexing.patches",
            "collective.noindexing.testing",
            "collective.noindexing.tests",
            "collective.noindexing.tests.test_functional"
        ],
        "version": "1.4"
    },
    "collective.normalize-buildout": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.normalize_buildout",
            "collective.normalize_buildout.cmd",
            "collective.normalize_buildout.testing",
            "collective.normalize_buildout.tests",
            "collective.normalize_buildout.tests.test_script"
        ],
        "version": "0.3.0"
    },
    "collective.noticeboard": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.noticeboard",
            "collective.noticeboard.adapters",
            "collective.noticeboard.browser",
            "collective.noticeboard.browser.noteviews",
            "collective.noticeboard.browser.noticeboardview",
            "collective.noticeboard.browser.settings",
            "collective.noticeboard.events",
            "collective.noticeboard.interfaces",
            "collective.noticeboard.permissions",
            "collective.noticeboard.settings",
            "collective.noticeboard.testing",
            "collective.noticeboard.tests",
            "collective.noticeboard.tests.test_adapters",
            "collective.noticeboard.tests.test_browser",
            "collective.noticeboard.tests.test_setup",
            "collective.noticeboard.tests.utils"
        ],
        "version": "0.7.1"
    },
    "collective.notices": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.notices",
            "collective.notices.browser",
            "collective.notices.browser.traversal",
            "collective.notices.browser.viewlets",
            "collective.notices.browser.views",
            "collective.notices.catalog",
            "collective.notices.converter",
            "collective.notices.interfaces",
            "collective.notices.notice",
            "collective.notices.storage",
            "collective.notices.testing",
            "collective.notices.tests",
            "collective.notices.tests.test_notices"
        ],
        "version": "1.2"
    },
    "collective.novate": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.novate",
            "collective.novate.browser",
            "collective.novate.interfaces"
        ],
        "version": "1.0b4"
    },
    "collective.oaiintercom": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.oaiintercom",
            "collective.oaiintercom.browser",
            "collective.oaiintercom.browser.oai",
            "collective.oaiintercom.browser.oaierror",
            "collective.oaiintercom.interfaces",
            "collective.oaiintercom.tests",
            "collective.oaiintercom.tests.base",
            "collective.oaiintercom.tests.test_case_install",
            "collective.oaiintercom.tests.test_doctests"
        ],
        "version": "2.1.1"
    },
    "collective.object": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.object",
            "collective.object.object",
            "collective.object.tests"
        ],
        "version": "0.6"
    },
    "collective.odoo.pas": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "collective.oembed": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.oembed",
            "collective.oembed.api2embed",
            "collective.oembed.api2embed.structure",
            "collective.oembed.api2embed.twitteruser",
            "collective.oembed.consumer",
            "collective.oembed.embedly",
            "collective.oembed.endpoints",
            "collective.oembed.i18n",
            "collective.oembed.interfaces",
            "collective.oembed.link_view",
            "collective.oembed.provider",
            "collective.oembed.provider_dexterity",
            "collective.oembed.tests",
            "collective.oembed.tests.base",
            "collective.oembed.tests.layer",
            "collective.oembed.tests.test_consumer",
            "collective.oembed.tests.test_endpoints",
            "collective.oembed.tests.test_provider",
            "collective.oembed.tests.test_twitteruser",
            "collective.oembed.tests.test_urlendpoints",
            "collective.oembed.tests.test_viewlet_discovery",
            "collective.oembed.tests.test_viewlet_jquery_oembed",
            "collective.oembed.tests.utils",
            "collective.oembed.tile",
            "collective.oembed.tile.example",
            "collective.oembed.tile.oembedtile",
            "collective.oembed.tinymce",
            "collective.oembed.upgrades",
            "collective.oembed.url2embed",
            "collective.oembed.url2embed.base",
            "collective.oembed.url2embed.gistgithub",
            "collective.oembed.url2embed.googlecalendar",
            "collective.oembed.url2embed.googledocs",
            "collective.oembed.url2embed.googlemaps",
            "collective.oembed.url2embed.issuucom",
            "collective.oembed.url2embed.itunes",
            "collective.oembed.url2embed.kinomap",
            "collective.oembed.url2embed.occipital360",
            "collective.oembed.url2embed.picasaweb",
            "collective.oembed.url2embed.scribd",
            "collective.oembed.url2embed.spotify",
            "collective.oembed.url2embed.structure",
            "collective.oembed.viewlet",
            "collective.oembed.vocabulary"
        ],
        "version": "2.0.1"
    },
    "collective.ogtags": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ogtags",
            "collective.ogtags.adapters",
            "collective.ogtags.browser",
            "collective.ogtags.browser.controlpanel",
            "collective.ogtags.browser.viewlets",
            "collective.ogtags.interfaces"
        ],
        "version": "1.2"
    },
    "collective.onlogin": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.onlogin",
            "collective.onlogin.controlpanel",
            "collective.onlogin.events",
            "collective.onlogin.interfaces",
            "collective.onlogin.testing",
            "collective.onlogin.tests",
            "collective.onlogin.tests.test_events",
            "collective.onlogin.tests.test_install"
        ],
        "version": "1.0"
    },
    "collective.opendata": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.opendata",
            "collective.opendata.browser",
            "collective.opendata.browser.apidata",
            "collective.opendata.browser.opendata",
            "collective.opendata.config",
            "collective.opendata.interfaces",
            "collective.opendata.plugins",
            "collective.opendata.plugins.cms",
            "collective.opendata.plugins.content",
            "collective.opendata.testing",
            "collective.opendata.tests",
            "collective.opendata.tests.test_apidata",
            "collective.opendata.tests.test_plugin_cms",
            "collective.opendata.tests.test_utils",
            "collective.opendata.utils"
        ],
        "version": "1.0a2"
    },
    "collective.opengraph": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.opengraph",
            "collective.opengraph.browser",
            "collective.opengraph.events",
            "collective.opengraph.interfaces",
            "collective.opengraph.tests",
            "collective.opengraph.tests.layer",
            "collective.opengraph.tests.test_setup",
            "collective.opengraph.tests.tests_viewlet",
            "collective.opengraph.utils",
            "collective.opengraph.viewlets",
            "collective.opengraph.vocabularies"
        ],
        "version": "1.0.1"
    },
    "collective.openidselector": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.openidselector"
        ],
        "version": "0.1"
    },
    "collective.opensearch": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.opensearch",
            "collective.opensearch.browser",
            "collective.opensearch.browser.atomview",
            "collective.opensearch.browser.baseview",
            "collective.opensearch.browser.descriptionview",
            "collective.opensearch.browser.htmlview",
            "collective.opensearch.browser.jsonview",
            "collective.opensearch.browser.osfolderview",
            "collective.opensearch.browser.oslinkview",
            "collective.opensearch.browser.rssview",
            "collective.opensearch.browser.search",
            "collective.opensearch.browser.settingsview",
            "collective.opensearch.browser.suggestionview",
            "collective.opensearch.browser.utils",
            "collective.opensearch.browser.viewlets",
            "collective.opensearch.config",
            "collective.opensearch.content",
            "collective.opensearch.interfaces",
            "collective.opensearch.interfaces.settings",
            "collective.opensearch.portlets",
            "collective.opensearch.setuphandlers",
            "collective.opensearch.tests",
            "collective.opensearch.tests.base",
            "collective.opensearch.tests.test_doctest",
            "collective.opensearch.utils",
            "collective.opensearch.vocabularies"
        ],
        "version": "1.5"
    },
    "collective.optimage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.optimage",
            "collective.optimage.adapters",
            "collective.optimage.adapters.core",
            "collective.optimage.adapters.gifsicle",
            "collective.optimage.adapters.jpegoptim",
            "collective.optimage.adapters.jpegtran",
            "collective.optimage.adapters.optipng",
            "collective.optimage.adapters.pngcrush",
            "collective.optimage.adapters.pngout",
            "collective.optimage.events",
            "collective.optimage.interfaces"
        ],
        "version": "0.1.0a"
    },
    "collective.ordereddict": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ordereddict",
            "collective.ordereddict.ordereddict",
            "collective.ordereddict.tests"
        ],
        "version": "0.1"
    },
    "collective.orderedmultiselectwidget": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.orderedmultiselectwidget",
            "collective.orderedmultiselectwidget.browser",
            "collective.orderedmultiselectwidget.browser.itemswidgets",
            "collective.orderedmultiselectwidget.interfaces"
        ],
        "version": "0.1"
    },
    "collective.ots": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ots",
            "collective.ots.browser",
            "collective.ots.browser.summarizeview",
            "collective.ots.config",
            "collective.ots.tests",
            "collective.ots.tests.base",
            "collective.ots.tests.test_doctest",
            "collective.ots.utils"
        ],
        "version": "0.3"
    },
    "collective.outputfilters.enhancelinks": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.outputfilters",
            "collective.outputfilters.enhancelinks",
            "collective.outputfilters.enhancelinks.adapters",
            "collective.outputfilters.enhancelinks.enhance_links",
            "collective.outputfilters.enhancelinks.interfaces",
            "collective.outputfilters.enhancelinks.testing",
            "collective.outputfilters.enhancelinks.tests",
            "collective.outputfilters.enhancelinks.tests.test_adapter",
            "collective.outputfilters.enhancelinks.tests.test_filter"
        ],
        "version": "0.3.0"
    },
    "collective.overridemailrecipients": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.overridemailrecipients",
            "collective.overridemailrecipients.configpanel",
            "collective.overridemailrecipients.interfaces",
            "collective.overridemailrecipients.patches",
            "collective.overridemailrecipients.testing",
            "collective.overridemailrecipients.tests",
            "collective.overridemailrecipients.tests.test_overridemailrecipients"
        ],
        "version": "1.0.2"
    },
    "collective.package": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.package",
            "collective.package.browser",
            "collective.package.install",
            "collective.package.interface",
            "collective.package.plugin",
            "collective.package.tests"
        ],
        "version": "0.3.1"
    },
    "collective.pageheader": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pageheader",
            "collective.pageheader.browser",
            "collective.pageheader.browser.viewlets",
            "collective.pageheader.browser.views",
            "collective.pageheader.extenders",
            "collective.pageheader.interfaces",
            "collective.pageheader.testing",
            "collective.pageheader.tests",
            "collective.pageheader.tests.test_example",
            "collective.pageheader.tests.test_robot",
            "collective.pageheader.utils"
        ],
        "version": "1.0.1"
    },
    "collective.pamfixes": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pamfixes",
            "collective.pamfixes.interfaces",
            "collective.pamfixes.setuphandlers",
            "collective.pamfixes.testing",
            "collective.pamfixes.tests",
            "collective.pamfixes.tests.test_viewlet",
            "collective.pamfixes.viewlets"
        ],
        "version": "1.1"
    },
    "collective.panels": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.panels",
            "collective.panels.browser",
            "collective.panels.content",
            "collective.panels.controlpanel",
            "collective.panels.grid",
            "collective.panels.i18n",
            "collective.panels.interfaces",
            "collective.panels.traversal",
            "collective.panels.upgrades",
            "collective.panels.vocabularies",
            "collective.panels.zcml"
        ],
        "version": "1.9"
    },
    "collective.patchlinguaploneissue273": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.patchlinguaploneissue273",
            "collective.patchlinguaploneissue273.patch",
            "collective.patchlinguaploneissue273.tests"
        ],
        "version": "1.1"
    },
    "collective.pathtouid": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pathtouid",
            "collective.pathtouid.browser",
            "collective.pathtouid.interfaces",
            "collective.pathtouid.tests",
            "collective.pathtouid.utility"
        ],
        "version": "0.1.0a"
    },
    "collective.pdfdocument": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pdfdocument",
            "collective.pdfdocument.browser",
            "collective.pdfdocument.interfaces",
            "collective.pdfdocument.setuphandlers",
            "collective.pdfdocument.testing",
            "collective.pdfdocument.tests",
            "collective.pdfdocument.tests.test_robot",
            "collective.pdfdocument.tests.test_setup",
            "collective.pdfdocument.utilities"
        ],
        "version": "1.0rc2"
    },
    "collective.pdfexport": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pdfexport",
            "collective.pdfexport.adapter",
            "collective.pdfexport.behavior",
            "collective.pdfexport.browser",
            "collective.pdfexport.browser.download_pdf",
            "collective.pdfexport.browser.send_as_pdf",
            "collective.pdfexport.content",
            "collective.pdfexport.emailsource",
            "collective.pdfexport.interfaces",
            "collective.pdfexport.portlet",
            "collective.pdfexport.schemaextender",
            "collective.pdfexport.setuphandlers",
            "collective.pdfexport.upgrades",
            "collective.pdfexport.upgrades.handlers",
            "collective.pdfexport.upgrades.profiles",
            "collective.pdfexport.utility",
            "collective.pdfexport.viewlet",
            "collective.pdfexport.viewlet.pdf_download",
            "collective.pdfexport.vocabulary"
        ],
        "version": "1.0a9"
    },
    "collective.pdfjs": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pdfjs",
            "collective.pdfjs.browser",
            "collective.pdfjs.browser.fileviews",
            "collective.pdfjs.browser.interfaces",
            "collective.pdfjs.testing",
            "collective.pdfjs.tests"
        ],
        "version": "0.4.3"
    },
    "collective.pdfleadimage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pdfLeadImage",
            "collective.pdfLeadImage.async",
            "collective.pdfLeadImage.browser",
            "collective.pdfLeadImage.browser.views",
            "collective.pdfLeadImage.events",
            "collective.pdfLeadImage.tests",
            "collective.pdfLeadImage.utils"
        ],
        "version": "0.2"
    },
    "collective.pdfpeek": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pdfpeek",
            "collective.pdfpeek.async",
            "collective.pdfpeek.at",
            "collective.pdfpeek.at.conversion",
            "collective.pdfpeek.browser",
            "collective.pdfpeek.browser.interfaces",
            "collective.pdfpeek.browser.pdf",
            "collective.pdfpeek.browser.utils",
            "collective.pdfpeek.browser.viewlets",
            "collective.pdfpeek.controlpanel",
            "collective.pdfpeek.conversion",
            "collective.pdfpeek.dx",
            "collective.pdfpeek.dx.behaviors",
            "collective.pdfpeek.dx.conversion",
            "collective.pdfpeek.events",
            "collective.pdfpeek.interfaces",
            "collective.pdfpeek.setuphandlers",
            "collective.pdfpeek.testing",
            "collective.pdfpeek.tests",
            "collective.pdfpeek.tests.test_atfiles",
            "collective.pdfpeek.tests.test_doctests",
            "collective.pdfpeek.tests.test_dxfiles",
            "collective.pdfpeek.traversal",
            "collective.pdfpeek.zamqp",
            "collective.pdfpeek.zamqp.utils"
        ],
        "version": "2.0.0"
    },
    "collective.pdftransform": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pdftransform",
            "collective.pdftransform.Extensions",
            "collective.pdftransform.Extensions.Install",
            "collective.pdftransform.messagefactory",
            "collective.pdftransform.patch",
            "collective.pdftransform.pdf_image",
            "collective.pdftransform.utils",
            "collective.pdftransform.validator"
        ],
        "version": "0.5"
    },
    "collective.pece": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pece",
            "collective.pece.browser",
            "collective.pece.browser.zotero_view",
            "collective.pece.content",
            "collective.pece.content.artifact_view",
            "collective.pece.content.asthma_annotation",
            "collective.pece.content.asthma_question",
            "collective.pece.content.asthma_response",
            "collective.pece.content.audio_artifact",
            "collective.pece.content.document_artifact",
            "collective.pece.content.image_artifact",
            "collective.pece.content.video_artifact",
            "collective.pece.tests"
        ],
        "version": "0.0.8"
    },
    "collective.periodcriterion": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.periodcriterion",
            "collective.periodcriterion.config",
            "collective.periodcriterion.criteria",
            "collective.periodcriterion.interfaces",
            "collective.periodcriterion.queryparser",
            "collective.periodcriterion.tests"
        ],
        "version": "0.2.0"
    },
    "collective.permalink": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.permalink",
            "collective.permalink.adapters",
            "collective.permalink.browser",
            "collective.permalink.browser.permalink_url",
            "collective.permalink.interfaces",
            "collective.permalink.tests"
        ],
        "version": "0.2.1"
    },
    "collective.perseo": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.perseo",
            "collective.perseo.adapter",
            "collective.perseo.browser",
            "collective.perseo.browser.controlpanel",
            "collective.perseo.browser.interfaces",
            "collective.perseo.browser.settings",
            "collective.perseo.browser.settings_at",
            "collective.perseo.browser.settings_image",
            "collective.perseo.browser.settings_leadimage",
            "collective.perseo.browser.settings_plone",
            "collective.perseo.browser.sitemap",
            "collective.perseo.browser.social_like",
            "collective.perseo.browser.viewlets",
            "collective.perseo.events",
            "collective.perseo.interfaces",
            "collective.perseo.interfaces.controlpanel",
            "collective.perseo.interfaces.metaconfig",
            "collective.perseo.interfaces.settings",
            "collective.perseo.patches",
            "collective.perseo.tests",
            "collective.perseo.upgrades",
            "collective.perseo.userdataschema",
            "collective.perseo.utils",
            "collective.perseo.vocabularies"
        ],
        "version": "0.7a"
    },
    "collective.perseoschema": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.perseoschema",
            "collective.perseoschema.browser",
            "collective.perseoschema.browser.interfaces",
            "collective.perseoschema.browser.seo_config",
            "collective.perseoschema.browser.views",
            "collective.perseoschema.tests"
        ],
        "version": "0.1.1"
    },
    "collective.personaltags": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.personaltags",
            "collective.personaltags.behavior",
            "collective.personaltags.browser",
            "collective.personaltags.browser.manage",
            "collective.personaltags.content",
            "collective.personaltags.controlpanel",
            "collective.personaltags.controlpanel.available_managers",
            "collective.personaltags.controlpanel.controlpanel",
            "collective.personaltags.controlpanel.vocabularies",
            "collective.personaltags.demo_manager",
            "collective.personaltags.demo_manager.demo_manager",
            "collective.personaltags.demo_manager.demo_storage",
            "collective.personaltags.demo_manager.demo_view",
            "collective.personaltags.interfaces",
            "collective.personaltags.portlet",
            "collective.personaltags.portlet.mytags",
            "collective.personaltags.tests",
            "collective.personaltags.viewlet",
            "collective.personaltags.viewlet.tagit",
            "collective.personaltags.viewlet.tagit_views"
        ],
        "version": "1.0"
    },
    "collective.pfg.creditcardfields": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pfg",
            "collective.pfg.creditcardfields",
            "collective.pfg.creditcardfields.config",
            "collective.pfg.creditcardfields.fields",
            "collective.pfg.creditcardfields.interfaces"
        ],
        "version": "1.3"
    },
    "collective.pfg.dexterity": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pfg",
            "collective.pfg.dexterity",
            "collective.pfg.dexterity.adapter",
            "collective.pfg.dexterity.config",
            "collective.pfg.dexterity.interfaces",
            "collective.pfg.dexterity.testing",
            "collective.pfg.dexterity.tests",
            "collective.pfg.dexterity.tests.test_boolean",
            "collective.pfg.dexterity.tests.test_date",
            "collective.pfg.dexterity.tests.test_feedback",
            "collective.pfg.dexterity.tests.test_robot"
        ],
        "version": "1.0.0rc1"
    },
    "collective.pfg.norobots": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pfg",
            "collective.pfg.norobots",
            "collective.pfg.norobots.Extensions",
            "collective.pfg.norobots.Extensions.Install",
            "collective.pfg.norobots.config",
            "collective.pfg.norobots.field",
            "collective.pfg.norobots.testing",
            "collective.pfg.norobots.tests",
            "collective.pfg.norobots.tests.test_docs",
            "collective.pfg.norobots.tests.test_field",
            "collective.pfg.norobots.tests.test_install",
            "collective.pfg.norobots.tests.utils",
            "collective.pfg.norobots.upgrades",
            "collective.pfg.norobots.upgrades.upgrades",
            "collective.pfg.norobots.widget"
        ],
        "version": "1.2"
    },
    "collective.pfg.payment": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pfg",
            "collective.pfg.payment",
            "collective.pfg.payment.Extensions",
            "collective.pfg.payment.Extensions.Install",
            "collective.pfg.payment.adapter",
            "collective.pfg.payment.adapter.properties",
            "collective.pfg.payment.browser",
            "collective.pfg.payment.browser.miscellaneous",
            "collective.pfg.payment.browser.payment_interface",
            "collective.pfg.payment.browser.template",
            "collective.pfg.payment.browser.viewlet",
            "collective.pfg.payment.content",
            "collective.pfg.payment.content.number",
            "collective.pfg.payment.error",
            "collective.pfg.payment.interfaces",
            "collective.pfg.payment.interfaces.adapter",
            "collective.pfg.payment.interfaces.content",
            "collective.pfg.payment.interfaces.marker",
            "collective.pfg.payment.interfaces.utility",
            "collective.pfg.payment.interfaces.viewlet_manager",
            "collective.pfg.payment.tests",
            "collective.pfg.payment.tests.base",
            "collective.pfg.payment.tests.test_functional",
            "collective.pfg.payment.tests.test_miscellaneous_view",
            "collective.pfg.payment.tests.test_pfg",
            "collective.pfg.payment.tests.test_setup",
            "collective.pfg.payment.tests.test_unittest",
            "collective.pfg.payment.tests.test_upgrades",
            "collective.pfg.payment.tests.test_verkkomaksut_s1",
            "collective.pfg.payment.tests.test_view",
            "collective.pfg.payment.upgrades",
            "collective.pfg.payment.utility",
            "collective.pfg.payment.utility.miscellaneous"
        ],
        "version": "0.6"
    },
    "collective.pfg.showrequest": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pfg",
            "collective.pfg.showrequest",
            "collective.pfg.showrequest.browser",
            "collective.pfg.showrequest.browser.miscellaneous",
            "collective.pfg.showrequest.browser.viewlet",
            "collective.pfg.showrequest.interfaces",
            "collective.pfg.showrequest.interfaces.marker",
            "collective.pfg.showrequest.interfaces.viewlet_manager",
            "collective.pfg.showrequest.tests",
            "collective.pfg.showrequest.tests.base",
            "collective.pfg.showrequest.tests.test_functional",
            "collective.pfg.showrequest.tests.test_setup",
            "collective.pfg.showrequest.tests.test_unittest"
        ],
        "version": "0.6"
    },
    "collective.pfg.silverpop": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pfg",
            "collective.pfg.silverpop",
            "collective.pfg.silverpop.browser",
            "collective.pfg.silverpop.config",
            "collective.pfg.silverpop.content",
            "collective.pfg.silverpop.content.formsilverpopadapter",
            "collective.pfg.silverpop.interfaces",
            "collective.pfg.silverpop.interfaces.formsilverpopadapter",
            "collective.pfg.silverpop.tests",
            "collective.pfg.silverpop.tests.base",
            "collective.pfg.silverpop.tests.test_doctest",
            "collective.pfg.silverpop.tests.test_mapping",
            "collective.pfg.silverpop.tests.test_silverpop",
            "collective.pfg.silverpop.utilities"
        ],
        "version": "0.9"
    },
    "collective.pfg.soup": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pfg",
            "collective.pfg.soup",
            "collective.pfg.soup.adapter",
            "collective.pfg.soup.browser",
            "collective.pfg.soup.browser.action",
            "collective.pfg.soup.browser.edit",
            "collective.pfg.soup.browser.export",
            "collective.pfg.soup.browser.log",
            "collective.pfg.soup.browser.remove",
            "collective.pfg.soup.browser.table",
            "collective.pfg.soup.browser.utils",
            "collective.pfg.soup.config",
            "collective.pfg.soup.extender",
            "collective.pfg.soup.indexadapters",
            "collective.pfg.soup.interfaces",
            "collective.pfg.soup.storage",
            "collective.pfg.soup.subscribers"
        ],
        "version": "1.6"
    },
    "collective.pfg.sqladapter": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pfg",
            "collective.pfg.sqladapter",
            "collective.pfg.sqladapter.config",
            "collective.pfg.sqladapter.handlers",
            "collective.pfg.sqladapter.interfaces",
            "collective.pfg.sqladapter.sqladapter",
            "collective.pfg.sqladapter.testing",
            "collective.pfg.sqladapter.tests",
            "collective.pfg.sqladapter.tests.test_adapter"
        ],
        "version": "1.0"
    },
    "collective.pfg.sqlformadapter": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pfg",
            "collective.pfg.sqlformadapter",
            "collective.pfg.sqlformadapter.config",
            "collective.pfg.sqlformadapter.content",
            "collective.pfg.sqlformadapter.content.encryptedsqladapter",
            "collective.pfg.sqlformadapter.interfaces",
            "collective.pfg.sqlformadapter.interfaces.encryptedsqladapter",
            "collective.pfg.sqlformadapter.tests",
            "collective.pfg.sqlformadapter.tests.base",
            "collective.pfg.sqlformadapter.tests.test_doctest"
        ],
        "version": "1.0.3"
    },
    "collective.pfg.sslfield": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pfg",
            "collective.pfg.sslfield",
            "collective.pfg.sslfield.Extensions",
            "collective.pfg.sslfield.Extensions.Install",
            "collective.pfg.sslfield.config",
            "collective.pfg.sslfield.content",
            "collective.pfg.sslfield.content.sslfield",
            "collective.pfg.sslfield.tests"
        ],
        "version": "0.5"
    },
    "collective.pfg.starrating": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pfg",
            "collective.pfg.starrating",
            "collective.pfg.starrating.config",
            "collective.pfg.starrating.field"
        ],
        "version": "1.0"
    },
    "collective.pfg.userjoin": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pfg",
            "collective.pfg.userjoin",
            "collective.pfg.userjoin.browser",
            "collective.pfg.userjoin.browser.view",
            "collective.pfg.userjoin.config",
            "collective.pfg.userjoin.content",
            "collective.pfg.userjoin.interfaces",
            "collective.pfg.userjoin.setuphandlers"
        ],
        "version": "0.1.0"
    },
    "collective.pfgpreview": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pfgpreview",
            "collective.pfgpreview.extender",
            "collective.pfgpreview.i18n",
            "collective.pfgpreview.preview",
            "collective.pfgpreview.tests"
        ],
        "version": "1.1"
    },
    "collective.phantasy": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.phantasy",
            "collective.phantasy.atphantasy",
            "collective.phantasy.atphantasy.browser",
            "collective.phantasy.atphantasy.browser.atphantasy_view",
            "collective.phantasy.atphantasy.browser.folderskinview",
            "collective.phantasy.atphantasy.browser.interfaces",
            "collective.phantasy.atphantasy.content",
            "collective.phantasy.atphantasy.content.file",
            "collective.phantasy.atphantasy.content.image",
            "collective.phantasy.atphantasy.content.phantasyschema",
            "collective.phantasy.atphantasy.content.skin",
            "collective.phantasy.atphantasy.content.skinsrepository",
            "collective.phantasy.atphantasy.extendcontents",
            "collective.phantasy.atphantasy.extendcontents.skinextension",
            "collective.phantasy.atphantasy.interfaces",
            "collective.phantasy.atphantasy.interfaces.file",
            "collective.phantasy.atphantasy.interfaces.image",
            "collective.phantasy.atphantasy.interfaces.skin",
            "collective.phantasy.atphantasy.interfaces.skinsrepository",
            "collective.phantasy.atphantasy.permissions",
            "collective.phantasy.browser",
            "collective.phantasy.browser.interfaces",
            "collective.phantasy.browser.phantasy_properties",
            "collective.phantasy.browser.viewlets",
            "collective.phantasy.config",
            "collective.phantasy.interfaces",
            "collective.phantasy.interfaces.skinnableroot",
            "collective.phantasy.interfaces.viewslayer",
            "collective.phantasy.setuphandlers",
            "collective.phantasy.tests",
            "collective.phantasy.tests.testIntegration",
            "collective.phantasy.widget"
        ],
        "version": "2.6"
    },
    "collective.picnik": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.picnik",
            "collective.picnik.config",
            "collective.picnik.controlpanel",
            "collective.picnik.edit",
            "collective.picnik.handle_pull",
            "collective.picnik.interfaces",
            "collective.picnik.tests",
            "collective.picnik.tests.base",
            "collective.picnik.tests.layer",
            "collective.picnik.tests.test_edit",
            "collective.picnik.tests.test_handle_pull",
            "collective.picnik.tests.utils",
            "collective.picnik.upgrades"
        ],
        "version": "1.1"
    },
    "collective.picturefill": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.picturefill",
            "collective.picturefill.brain",
            "collective.picturefill.common",
            "collective.picturefill.interfaces",
            "collective.picturefill.layer",
            "collective.picturefill.tests",
            "collective.picturefill.tests.base",
            "collective.picturefill.tests.fake",
            "collective.picturefill.tests.test_brain",
            "collective.picturefill.tests.test_common",
            "collective.picturefill.tests.test_setup",
            "collective.picturefill.tests.test_tile",
            "collective.picturefill.tests.test_view",
            "collective.picturefill.tile",
            "collective.picturefill.upgrades",
            "collective.picturefill.view"
        ],
        "version": "1.2"
    },
    "collective.pivottable": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "collective.piwik.core": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.piwik",
            "collective.piwik.core",
            "collective.piwik.core.browser",
            "collective.piwik.core.browser.interfaces",
            "collective.piwik.core.controlpanel",
            "collective.piwik.core.interfaces",
            "collective.piwik.core.subscribers",
            "collective.piwik.core.tests"
        ],
        "version": "0.4"
    },
    "collective.piwik.flowplayer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.piwik",
            "collective.piwik.flowplayer",
            "collective.piwik.flowplayer.tests",
            "collective.piwik.flowplayer.view",
            "collective.piwik.flowplayer.viewlets"
        ],
        "version": "0.4"
    },
    "collective.piwik.mediaelement": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.piwik",
            "collective.piwik.mediaelement",
            "collective.piwik.mediaelement.tests",
            "collective.piwik.mediaelement.view",
            "collective.piwik.mediaelement.viewlets"
        ],
        "version": "0.2"
    },
    "collective.piwik.now": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.piwik",
            "collective.piwik.now",
            "collective.piwik.now.onlineusers",
            "collective.piwik.now.tests",
            "collective.piwik.now.tests.base",
            "collective.piwik.now.tests.test_portlet"
        ],
        "version": "0.1"
    },
    "collective.piwik.pageviews": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.piwik",
            "collective.piwik.pageviews",
            "collective.piwik.pageviews.tests",
            "collective.piwik.pageviews.view",
            "collective.piwik.pageviews.viewlets"
        ],
        "version": "0.2"
    },
    "collective.plone.gsxml": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.plone",
            "collective.plone.gsxml",
            "collective.plone.gsxml.browser",
            "collective.plone.gsxml.browser.gsxml",
            "collective.plone.gsxml.browser.importexport",
            "collective.plone.gsxml.collector",
            "collective.plone.gsxml.config",
            "collective.plone.gsxml.content",
            "collective.plone.gsxml.context",
            "collective.plone.gsxml.events",
            "collective.plone.gsxml.interfaces",
            "collective.plone.gsxml.manifest",
            "collective.plone.gsxml.rootmanifest",
            "collective.plone.gsxml.tests",
            "collective.plone.gsxml.tests.base",
            "collective.plone.gsxml.tests.test_doctests",
            "collective.plone.gsxml.tests.test_setup",
            "collective.plone.gsxml.utils"
        ],
        "version": "0.4.7"
    },
    "collective.plone3bugfixes": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.plone3bugfixes",
            "collective.plone3bugfixes.browser",
            "collective.plone3bugfixes.interfaces",
            "collective.plone3bugfixes.tests"
        ],
        "version": "0.9.4"
    },
    "collective.plonebookmarklets": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.plonebookmarklets",
            "collective.plonebookmarklets.browser",
            "collective.plonebookmarklets.browser.controlpanel",
            "collective.plonebookmarklets.browser.viewlets",
            "collective.plonebookmarklets.config",
            "collective.plonebookmarklets.interfaces",
            "collective.plonebookmarklets.setupHandlers",
            "collective.plonebookmarklets.tests",
            "collective.plonebookmarklets.tests.base",
            "collective.plonebookmarklets.tests.testGetBookmarkletsSites",
            "collective.plonebookmarklets.tests.test_doctests",
            "collective.plonebookmarklets.utilities",
            "collective.plonebookmarklets.utilities.interfaces",
            "collective.plonebookmarklets.utilities.utils"
        ],
        "version": "3.2"
    },
    "collective.plonefinder": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.plonefinder",
            "collective.plonefinder.browser",
            "collective.plonefinder.browser.finder",
            "collective.plonefinder.browser.finder_newfolder",
            "collective.plonefinder.browser.interfaces",
            "collective.plonefinder.browser.ticket",
            "collective.plonefinder.browser.typescss",
            "collective.plonefinder.browser.uploadcapable",
            "collective.plonefinder.config",
            "collective.plonefinder.interfaces",
            "collective.plonefinder.interfaces.finder",
            "collective.plonefinder.tests",
            "collective.plonefinder.utils",
            "collective.plonefinder.widgets",
            "collective.plonefinder.widgets.referencewidget"
        ],
        "version": "1.2.3"
    },
    "collective.ploneseltest": {
        "cmdline": [],
        "modules": [],
        "version": "1.0b2"
    },
    "collective.ploneslimbar": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ploneslimbar",
            "collective.ploneslimbar.interfaces",
            "collective.ploneslimbar.viewlet"
        ],
        "version": "1.1"
    },
    "collective.plonetruegallery": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.plonetruegallery",
            "collective.plonetruegallery.browser",
            "collective.plonetruegallery.browser.interfaces",
            "collective.plonetruegallery.browser.util",
            "collective.plonetruegallery.browser.views",
            "collective.plonetruegallery.browser.views.display",
            "collective.plonetruegallery.browser.views.galleryview",
            "collective.plonetruegallery.browser.views.settings",
            "collective.plonetruegallery.config",
            "collective.plonetruegallery.configlet",
            "collective.plonetruegallery.exportimport",
            "collective.plonetruegallery.galleryadapters",
            "collective.plonetruegallery.galleryadapters.base",
            "collective.plonetruegallery.galleryadapters.basic",
            "collective.plonetruegallery.galleryadapters.collection",
            "collective.plonetruegallery.interfaces",
            "collective.plonetruegallery.meta",
            "collective.plonetruegallery.meta.zcml",
            "collective.plonetruegallery.portlets",
            "collective.plonetruegallery.settings",
            "collective.plonetruegallery.testing",
            "collective.plonetruegallery.tests",
            "collective.plonetruegallery.tests.test_adapters",
            "collective.plonetruegallery.tests.test_browser",
            "collective.plonetruegallery.tests.test_cp",
            "collective.plonetruegallery.tests.test_various",
            "collective.plonetruegallery.upgrades",
            "collective.plonetruegallery.utils",
            "collective.plonetruegallery.validators",
            "collective.plonetruegallery.vocabularies"
        ],
        "version": "3.4.8"
    },
    "collective.pluggablelogin": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pluggablelogin",
            "collective.pluggablelogin.interfaces",
            "collective.pluggablelogin.register_portlet",
            "collective.pluggablelogin.renderer",
            "collective.pluggablelogin.testing",
            "collective.pluggablelogin.tests",
            "collective.pluggablelogin.tests.test_login"
        ],
        "version": "1.2.1"
    },
    "collective.polls": {
        "cmdline": [],
        "modules": [
            "polls",
            "polls.Extensions",
            "polls.Extensions.Install",
            "polls.browser",
            "polls.browser.update_poll",
            "polls.config",
            "polls.content",
            "polls.content.poll",
            "polls.logger",
            "polls.polls",
            "polls.portlet",
            "polls.portlet.voteportlet",
            "polls.setuphandlers",
            "polls.subscribers",
            "polls.testing",
            "polls.tests",
            "polls.tests.test_content",
            "polls.tests.test_forms",
            "polls.tests.test_portlet",
            "polls.tests.test_robot",
            "polls.tests.test_setup",
            "polls.tests.test_tile",
            "polls.tests.test_upgrades",
            "polls.tests.test_utility",
            "polls.tests.test_workflow",
            "polls.tiles",
            "polls.tiles.poll",
            "polls.upgrades",
            "polls.upgrades.v2",
            "polls.upgrades.v3",
            "polls.upgrades.v4",
            "polls.upgrades.v5"
        ],
        "version": "1.9b1"
    },
    "collective.portaltabs": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portaltabs",
            "collective.portaltabs.browser",
            "collective.portaltabs.browser.controlpanel",
            "collective.portaltabs.browser.manage_portaltabs_view",
            "collective.portaltabs.config",
            "collective.portaltabs.interfaces",
            "collective.portaltabs.persistent_field",
            "collective.portaltabs.setuphandlers",
            "collective.portaltabs.testing",
            "collective.portaltabs.tests",
            "collective.portaltabs.tests.test_docs"
        ],
        "version": "0.4.0"
    },
    "collective.portlet.accuweather": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.accuweather",
            "collective.portlet.accuweather.accuweather",
            "collective.portlet.accuweather.tests",
            "collective.portlet.accuweather.tests.base",
            "collective.portlet.accuweather.tests.test_portlet"
        ],
        "version": "1.0b2"
    },
    "collective.portlet.actions": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.actions",
            "collective.portlet.actions.actionsportlet",
            "collective.portlet.actions.tests",
            "collective.portlet.actions.tests.base",
            "collective.portlet.actions.tests.test_portlet"
        ],
        "version": "1.2.3.post1"
    },
    "collective.portlet.adsense": {
        "cmdline": [],
        "modules": [],
        "version": "0.5"
    },
    "collective.portlet.amazon": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.amazon",
            "collective.portlet.amazon.amazonportlet",
            "collective.portlet.amazon.tests",
            "collective.portlet.amazon.tests.base",
            "collective.portlet.amazon.tests.test_portlet"
        ],
        "version": "0.2dev-r58081"
    },
    "collective.portlet.banners": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.banners",
            "collective.portlet.banners.bannersportlet",
            "collective.portlet.banners.config",
            "collective.portlet.banners.content",
            "collective.portlet.banners.content.portletbanner",
            "collective.portlet.banners.interfaces",
            "collective.portlet.banners.tests",
            "collective.portlet.banners.tests.base",
            "collective.portlet.banners.tests.test_portlet",
            "collective.portlet.banners.upgrades"
        ],
        "version": "1.1"
    },
    "collective.portlet.bilingualtext": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.bilingualtext",
            "collective.portlet.bilingualtext.bilingualtextportlet",
            "collective.portlet.bilingualtext.tests",
            "collective.portlet.bilingualtext.tests.base",
            "collective.portlet.bilingualtext.tests.test_portlet"
        ],
        "version": "0.3.1"
    },
    "collective.portlet.bookmarks": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.bookmarks",
            "collective.portlet.bookmarks.bookmarks",
            "collective.portlet.bookmarks.bookmarksportlet",
            "collective.portlet.bookmarks.tests",
            "collective.portlet.bookmarks.tests.base",
            "collective.portlet.bookmarks.tests.test_portlet"
        ],
        "version": "0.1"
    },
    "collective.portlet.calendar": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.calendar",
            "collective.portlet.calendar.Extensions",
            "collective.portlet.calendar.Extensions.Install",
            "collective.portlet.calendar.browser",
            "collective.portlet.calendar.browser.interfaces",
            "collective.portlet.calendar.calendar",
            "collective.portlet.calendar.config",
            "collective.portlet.calendar.docs",
            "collective.portlet.calendar.testing",
            "collective.portlet.calendar.tests",
            "collective.portlet.calendar.tests.test_calendarex",
            "collective.portlet.calendar.tests.test_doctest",
            "collective.portlet.calendar.tests.test_setup"
        ],
        "version": "1.0b3"
    },
    "collective.portlet.carousel": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.carousel",
            "collective.portlet.carousel.browser",
            "collective.portlet.carousel.i18n",
            "collective.portlet.carousel.interfaces",
            "collective.portlet.carousel.portlet"
        ],
        "version": "1.0"
    },
    "collective.portlet.categories": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.categories",
            "collective.portlet.categories.categoriesportlet",
            "collective.portlet.categories.interfaces",
            "collective.portlet.categories.tests",
            "collective.portlet.categories.tests.base",
            "collective.portlet.categories.tests.test_portlet",
            "collective.portlet.categories.upgrades"
        ],
        "version": "1.0"
    },
    "collective.portlet.collectionbysubject": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.collectionbysubject",
            "collective.portlet.collectionbysubject.collectionbysubject",
            "collective.portlet.collectionbysubject.config",
            "collective.portlet.collectionbysubject.tests",
            "collective.portlet.collectionbysubject.tests.base",
            "collective.portlet.collectionbysubject.tests.test_portlet"
        ],
        "version": "0.3"
    },
    "collective.portlet.collectionfilter": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.collectionfilter",
            "collective.portlet.collectionfilter.collectionfilter",
            "collective.portlet.collectionfilter.collectionsearch",
            "collective.portlet.collectionfilter.content_filter",
            "collective.portlet.collectionfilter.indexer",
            "collective.portlet.collectionfilter.tests",
            "collective.portlet.collectionfilter.tests.base",
            "collective.portlet.collectionfilter.tests.test_portlet",
            "collective.portlet.collectionfilter.utils",
            "collective.portlet.collectionfilter.vocabularies"
        ],
        "version": "1.4.1"
    },
    "collective.portlet.collectionmultiview": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.collectionmultiview",
            "collective.portlet.collectionmultiview.collectionmultiview",
            "collective.portlet.collectionmultiview.i18n",
            "collective.portlet.collectionmultiview.interfaces",
            "collective.portlet.collectionmultiview.renderers",
            "collective.portlet.collectionmultiview.renderers.base",
            "collective.portlet.collectionmultiview.renderers.blog",
            "collective.portlet.collectionmultiview.renderers.column",
            "collective.portlet.collectionmultiview.renderers.default",
            "collective.portlet.collectionmultiview.renderers.summary",
            "collective.portlet.collectionmultiview.tests",
            "collective.portlet.collectionmultiview.tests.base",
            "collective.portlet.collectionmultiview.tests.test_portlet",
            "collective.portlet.collectionmultiview.vocabulary",
            "collective.portlet.collectionmultiview.widget"
        ],
        "version": "2.2"
    },
    "collective.portlet.colorcollection": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.colorcollection",
            "collective.portlet.colorcollection.colorcollection",
            "collective.portlet.colorcollection.interfaces",
            "collective.portlet.colorcollection.setuphandlers",
            "collective.portlet.colorcollection.tests",
            "collective.portlet.colorcollection.tests.base",
            "collective.portlet.colorcollection.tests.test_portlet"
        ],
        "version": "0.3.0"
    },
    "collective.portlet.contact": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.contact",
            "collective.portlet.contact.addressbook",
            "collective.portlet.contact.browser",
            "collective.portlet.contact.browser.contact_view",
            "collective.portlet.contact.browser.controlpanel",
            "collective.portlet.contact.browser.jpegPhoto",
            "collective.portlet.contact.browser.searcher",
            "collective.portlet.contact.dummy",
            "collective.portlet.contact.dummy.addressbook",
            "collective.portlet.contact.dummy.controlpanel",
            "collective.portlet.contact.i18n",
            "collective.portlet.contact.ldap",
            "collective.portlet.contact.ldap.addressbook",
            "collective.portlet.contact.ldap.controlpanel",
            "collective.portlet.contact.ldap.jpegPhoto",
            "collective.portlet.contact.ldap.utils",
            "collective.portlet.contact.portlet",
            "collective.portlet.contact.portlet.contact",
            "collective.portlet.contact.testing",
            "collective.portlet.contact.tests",
            "collective.portlet.contact.tests.base",
            "collective.portlet.contact.tests.test_addressbook",
            "collective.portlet.contact.tests.test_controlpanel",
            "collective.portlet.contact.tests.test_dummy",
            "collective.portlet.contact.tests.test_jpegphoto",
            "collective.portlet.contact.tests.test_portlet",
            "collective.portlet.contact.tests.test_setup",
            "collective.portlet.contact.tests.utils",
            "collective.portlet.contact.upgrades",
            "collective.portlet.contact.utils"
        ],
        "version": "1.1.2"
    },
    "collective.portlet.content": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.content",
            "collective.portlet.content.contentportlet",
            "collective.portlet.content.tests",
            "collective.portlet.content.tests.base",
            "collective.portlet.content.tests.test_portlet",
            "collective.portlet.content.vocabularies"
        ],
        "version": "1.8.1"
    },
    "collective.portlet.contentleadimage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.contentleadimage",
            "collective.portlet.contentleadimage.contentleadimagecollectionportlet",
            "collective.portlet.contentleadimage.tests",
            "collective.portlet.contentleadimage.tests.base",
            "collective.portlet.contentleadimage.tests.test_portlet"
        ],
        "version": "0.5.1"
    },
    "collective.portlet.contentprovider": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.contentprovider",
            "collective.portlet.contentprovider.contentproviderportlet",
            "collective.portlet.contentprovider.interfaces",
            "collective.portlet.contentprovider.tests",
            "collective.portlet.contentprovider.tests.base",
            "collective.portlet.contentprovider.tests.test_portlet"
        ],
        "version": "1.1"
    },
    "collective.portlet.contentsearch": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.contentsearch",
            "collective.portlet.contentsearch.contentsearchportlet",
            "collective.portlet.contentsearch.tests",
            "collective.portlet.contentsearch.tests.base",
            "collective.portlet.contentsearch.tests.test_functional",
            "collective.portlet.contentsearch.tests.test_setup"
        ],
        "version": "0.2"
    },
    "collective.portlet.contribute": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.contribute",
            "collective.portlet.contribute.browser",
            "collective.portlet.contribute.contributecontent",
            "collective.portlet.contribute.tests",
            "collective.portlet.contribute.tests.base",
            "collective.portlet.contribute.tests.test_portlet"
        ],
        "version": "1.0b1"
    },
    "collective.portlet.customizablerecent": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.customizablerecent",
            "collective.portlet.customizablerecent.customizablerecent",
            "collective.portlet.customizablerecent.tests",
            "collective.portlet.customizablerecent.tests.base",
            "collective.portlet.customizablerecent.tests.test_portlet"
        ],
        "version": "1.1.4"
    },
    "collective.portlet.debuginfo": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.debuginfo",
            "collective.portlet.debuginfo.debuginfoportlet",
            "collective.portlet.debuginfo.permissions",
            "collective.portlet.debuginfo.tests",
            "collective.portlet.debuginfo.tests.base",
            "collective.portlet.debuginfo.tests.test_portlet"
        ],
        "version": "1.0"
    },
    "collective.portlet.discussion": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.discussion",
            "collective.portlet.discussion.browser",
            "collective.portlet.discussion.browser.discussion_list_search",
            "collective.portlet.discussion.discussionportlet",
            "collective.portlet.discussion.tests",
            "collective.portlet.discussion.tests.base",
            "collective.portlet.discussion.tests.test_portlet",
            "collective.portlet.discussion.upgrades",
            "collective.portlet.discussion.utility",
            "collective.portlet.discussion.utility.interfaces",
            "collective.portlet.discussion.utility.utility",
            "collective.portlet.discussion.utility.vocab"
        ],
        "version": "1.2.5"
    },
    "collective.portlet.dropdownbox": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.dropdownbox",
            "collective.portlet.dropdownbox.dropdownbox",
            "collective.portlet.dropdownbox.helper",
            "collective.portlet.dropdownbox.interfaces",
            "collective.portlet.dropdownbox.tests",
            "collective.portlet.dropdownbox.tests.base",
            "collective.portlet.dropdownbox.tests.test_functional_doctest",
            "collective.portlet.dropdownbox.tests.test_portlet_dropdownbox"
        ],
        "version": "0.1.1"
    },
    "collective.portlet.embed": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.embed",
            "collective.portlet.embed.portlet",
            "collective.portlet.embed.testing",
            "collective.portlet.embed.tests",
            "collective.portlet.embed.tests.base",
            "collective.portlet.embed.tests.test_portlet",
            "collective.portlet.embed.tests.test_robot"
        ],
        "version": "1.2"
    },
    "collective.portlet.explore": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.explore",
            "collective.portlet.explore.browser",
            "collective.portlet.explore.browser.expand",
            "collective.portlet.explore.explorerportlet",
            "collective.portlet.explore.tests",
            "collective.portlet.explore.tests.base",
            "collective.portlet.explore.tests.test_expand",
            "collective.portlet.explore.tests.test_portlet"
        ],
        "version": "1.2"
    },
    "collective.portlet.facet": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "collective.portlet.fancyboxgallery": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.fancyboxgallery",
            "collective.portlet.fancyboxgallery.interfaces",
            "collective.portlet.fancyboxgallery.portlet"
        ],
        "version": "1.0"
    },
    "collective.portlet.fblikebox": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.fblikebox",
            "collective.portlet.fblikebox.likeboxportlet",
            "collective.portlet.fblikebox.tests",
            "collective.portlet.fblikebox.tests.base",
            "collective.portlet.fblikebox.tests.test_portlet"
        ],
        "version": "1.0"
    },
    "collective.portlet.feedmixer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.feedmixer",
            "collective.portlet.feedmixer.full",
            "collective.portlet.feedmixer.interfaces",
            "collective.portlet.feedmixer.portlet",
            "collective.portlet.feedmixer.tests",
            "collective.portlet.feedmixer.tests.base",
            "collective.portlet.feedmixer.tests.test_feed",
            "collective.portlet.feedmixer.tests.test_portlet",
            "collective.portlet.feedmixer.tests.test_utils",
            "collective.portlet.feedmixer.vocabulary"
        ],
        "version": "1.6"
    },
    "collective.portlet.filtersearch": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.filtersearch",
            "collective.portlet.filtersearch.portlets",
            "collective.portlet.filtersearch.portlets.filtersearch",
            "collective.portlet.filtersearch.tests"
        ],
        "version": "0.3"
    },
    "collective.portlet.foldercontents": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.foldercontents",
            "collective.portlet.foldercontents.foldercontents",
            "collective.portlet.foldercontents.scales",
            "collective.portlet.foldercontents.tests",
            "collective.portlet.foldercontents.tests.base",
            "collective.portlet.foldercontents.tests.test_foldercontentsportlet",
            "collective.portlet.foldercontents.widget"
        ],
        "version": "1.0"
    },
    "collective.portlet.fullview": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.fullview",
            "collective.portlet.fullview.fullview",
            "collective.portlet.fullview.interfaces"
        ],
        "version": "2.0"
    },
    "collective.portlet.geo": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.geo",
            "collective.portlet.geo.controlpanel",
            "collective.portlet.geo.database",
            "collective.portlet.geo.i18n",
            "collective.portlet.geo.interfaces",
            "collective.portlet.geo.portlets",
            "collective.portlet.geo.security",
            "collective.portlet.geo.setuphandlers",
            "collective.portlet.geo.utils",
            "collective.portlet.geo.vocabularies"
        ],
        "version": "1.0.2"
    },
    "collective.portlet.globalnav": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.globalnav",
            "collective.portlet.globalnav.globalnavigationportlet",
            "collective.portlet.globalnav.tests",
            "collective.portlet.globalnav.tests.base",
            "collective.portlet.globalnav.tests.test_portlet"
        ],
        "version": "1.0"
    },
    "collective.portlet.googleapps": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.googleapps",
            "collective.portlet.googleapps.browser",
            "collective.portlet.googleapps.browser.interfaces",
            "collective.portlet.googleapps.config",
            "collective.portlet.googleapps.content",
            "collective.portlet.googleapps.interfaces",
            "collective.portlet.googleapps.portlets",
            "collective.portlet.googleapps.portlets.googlecalendarportlet",
            "collective.portlet.googleapps.portlets.googledocsportlet",
            "collective.portlet.googleapps.portlets.googlemailportlet",
            "collective.portlet.googleapps.portlets.googletalkportlet",
            "collective.portlet.googleapps.portlets.googletasksportlet",
            "collective.portlet.googleapps.tests",
            "collective.portlet.googleapps.tests.base_googledocsportlet",
            "collective.portlet.googleapps.tests.doc_tests",
            "collective.portlet.googleapps.tests.test_googledocsportlet"
        ],
        "version": "0.1"
    },
    "collective.portlet.group": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.group",
            "collective.portlet.group.groupportlet",
            "collective.portlet.group.tests",
            "collective.portlet.group.tests.base",
            "collective.portlet.group.tests.test_portlet"
        ],
        "version": "2.0"
    },
    "collective.portlet.image": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.image",
            "collective.portlet.image.imageportlet",
            "collective.portlet.image.tests",
            "collective.portlet.image.tests.base",
            "collective.portlet.image.tests.test_portlet"
        ],
        "version": "0.1"
    },
    "collective.portlet.itemview": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.itemview",
            "collective.portlet.itemview.i18n",
            "collective.portlet.itemview.itemview_portlet",
            "collective.portlet.itemview.portlet",
            "collective.portlet.itemview.tests",
            "collective.portlet.itemview.vocabulary"
        ],
        "version": "1.4"
    },
    "collective.portlet.jqueryuicalendar": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.jqueryuicalendar",
            "collective.portlet.jqueryuicalendar.jqueryuicalendarportlet",
            "collective.portlet.jqueryuicalendar.tests",
            "collective.portlet.jqueryuicalendar.tests.base",
            "collective.portlet.jqueryuicalendar.tests.test_portlet",
            "collective.portlet.jqueryuicalendar.upgrades"
        ],
        "version": "0.1"
    },
    "collective.portlet.keywordmatches": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.keywordmatches",
            "collective.portlet.keywordmatches.keywordmatches",
            "collective.portlet.keywordmatches.tests",
            "collective.portlet.keywordmatches.tests.base",
            "collective.portlet.keywordmatches.tests.test_portlet"
        ],
        "version": "1.2"
    },
    "collective.portlet.keywords": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.keywords",
            "collective.portlet.keywords.interfaces",
            "collective.portlet.keywords.keywords",
            "collective.portlet.keywords.upgrades"
        ],
        "version": "1.0.1"
    },
    "collective.portlet.lingualinks": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.lingualinks",
            "collective.portlet.lingualinks.controlpanel",
            "collective.portlet.lingualinks.interfaces",
            "collective.portlet.lingualinks.msgids",
            "collective.portlet.lingualinks.portlet",
            "collective.portlet.lingualinks.testing",
            "collective.portlet.lingualinks.tests",
            "collective.portlet.lingualinks.tests.base",
            "collective.portlet.lingualinks.tests.test_portlet",
            "collective.portlet.lingualinks.tests.test_setup",
            "collective.portlet.lingualinks.tests.utils",
            "collective.portlet.lingualinks.upgrades",
            "collective.portlet.lingualinks.upgrades.v1000_to_1001"
        ],
        "version": "1.1"
    },
    "collective.portlet.links": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.links",
            "collective.portlet.links.browser",
            "collective.portlet.links.linkportlet",
            "collective.portlet.links.tests",
            "collective.portlet.links.tests.base",
            "collective.portlet.links.tests.test_portlet"
        ],
        "version": "0.2"
    },
    "collective.portlet.localcontents": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.localcontents",
            "collective.portlet.localcontents.localcontents",
            "collective.portlet.localcontents.tests",
            "collective.portlet.localcontents.tests.base",
            "collective.portlet.localcontents.tests.test_portlet"
        ],
        "version": "0.3.0"
    },
    "collective.portlet.localcumulus": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.localcumulus",
            "collective.portlet.localcumulus.Extensions",
            "collective.portlet.localcumulus.Extensions.Install",
            "collective.portlet.localcumulus.app_config",
            "collective.portlet.localcumulus.catalog",
            "collective.portlet.localcumulus.interfaces",
            "collective.portlet.localcumulus.localcumulus",
            "collective.portlet.localcumulus.portlet",
            "collective.portlet.localcumulus.setuphandlers",
            "collective.portlet.localcumulus.tests",
            "collective.portlet.localcumulus.tests.base",
            "collective.portlet.localcumulus.tests.globals",
            "collective.portlet.localcumulus.tests.suite",
            "collective.portlet.localcumulus.tests.test_customportlet",
            "collective.portlet.localcumulus.tests.test_doctests",
            "collective.portlet.localcumulus.tests.test_portlet",
            "collective.portlet.localcumulus.tests.user_globals"
        ],
        "version": "1.8"
    },
    "collective.portlet.localevents": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.localevents",
            "collective.portlet.localevents.events",
            "collective.portlet.localevents.interfaces",
            "collective.portlet.localevents.setuphandlers",
            "collective.portlet.localevents.testing",
            "collective.portlet.localevents.tests",
            "collective.portlet.localevents.tests.test_robot",
            "collective.portlet.localevents.tests.test_setup"
        ],
        "version": "0.1"
    },
    "collective.portlet.manualrelated": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.manualRelated",
            "collective.portlet.manualRelated.manualrelatedportlet",
            "collective.portlet.manualRelated.tests",
            "collective.portlet.manualRelated.tests.base",
            "collective.portlet.manualRelated.tests.test_portlet"
        ],
        "version": "0.3"
    },
    "collective.portlet.map": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.map",
            "collective.portlet.map.mapportlet",
            "collective.portlet.map.maps_override",
            "collective.portlet.map.tests",
            "collective.portlet.map.tests.base",
            "collective.portlet.map.tests.test_portlet"
        ],
        "version": "1.0dev-r75856"
    },
    "collective.portlet.mybookmarks": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.mybookmarks",
            "collective.portlet.mybookmarks.browser",
            "collective.portlet.mybookmarks.browser.manage_bookmarks",
            "collective.portlet.mybookmarks.config",
            "collective.portlet.mybookmarks.exportimport",
            "collective.portlet.mybookmarks.mybookmarksportlet",
            "collective.portlet.mybookmarks.tests",
            "collective.portlet.mybookmarks.tests.base",
            "collective.portlet.mybookmarks.tests.test_portlet",
            "collective.portlet.mybookmarks.upgrades"
        ],
        "version": "1.3.4"
    },
    "collective.portlet.ngcollection": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.ngcollection",
            "collective.portlet.ngcollection.interfaces",
            "collective.portlet.ngcollection.manager",
            "collective.portlet.ngcollection.metaconfigure",
            "collective.portlet.ngcollection.metadirectives",
            "collective.portlet.ngcollection.migration",
            "collective.portlet.ngcollection.ngcollection",
            "collective.portlet.ngcollection.tests",
            "collective.portlet.ngcollection.tests.base",
            "collective.portlet.ngcollection.tests.test_portlet",
            "collective.portlet.ngcollection.vocabularies"
        ],
        "version": "1.5"
    },
    "collective.portlet.nivoslider": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.nivoslider",
            "collective.portlet.nivoslider.portlet",
            "collective.portlet.nivoslider.upgrades"
        ],
        "version": "1.0"
    },
    "collective.portlet.oembed": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.oembed",
            "collective.portlet.oembed.portlet",
            "collective.portlet.oembed.upgrades"
        ],
        "version": "1.2.1"
    },
    "collective.portlet.organization": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.organization",
            "collective.portlet.organization.organizationportlet",
            "collective.portlet.organization.tests",
            "collective.portlet.organization.tests.base",
            "collective.portlet.organization.tests.test_portlet"
        ],
        "version": "1.0"
    },
    "collective.portlet.paypal": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.paypal",
            "collective.portlet.paypal.paypalportlet",
            "collective.portlet.paypal.tests",
            "collective.portlet.paypal.tests.base",
            "collective.portlet.paypal.tests.test_portlet"
        ],
        "version": "0.2dev-r57320"
    },
    "collective.portlet.personaltools": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.personaltools",
            "collective.portlet.personaltools.personaltools",
            "collective.portlet.personaltools.tests",
            "collective.portlet.personaltools.tests.base",
            "collective.portlet.personaltools.tests.test_portlet"
        ],
        "version": "1.0"
    },
    "collective.portlet.postit": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.postit",
            "collective.portlet.postit.fetcher",
            "collective.portlet.postit.interfaces",
            "collective.portlet.postit.portlet",
            "collective.portlet.postit.postit"
        ],
        "version": "1.0-beta1"
    },
    "collective.portlet.pythonscript": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.pythonscript",
            "collective.portlet.pythonscript.browser",
            "collective.portlet.pythonscript.browser.checksyntax_pythonscript",
            "collective.portlet.pythonscript.browser.controlpanel",
            "collective.portlet.pythonscript.browser.edit_pythonscript",
            "collective.portlet.pythonscript.browser.portlet",
            "collective.portlet.pythonscript.browser.renderer",
            "collective.portlet.pythonscript.browser.rescan_pythonscript",
            "collective.portlet.pythonscript.browser.vocab",
            "collective.portlet.pythonscript.content",
            "collective.portlet.pythonscript.content.event",
            "collective.portlet.pythonscript.content.interface",
            "collective.portlet.pythonscript.content.scriptmanager",
            "collective.portlet.pythonscript.content.vocab",
            "collective.portlet.pythonscript.testing",
            "collective.portlet.pythonscript.tests",
            "collective.portlet.pythonscript.tests.base",
            "collective.portlet.pythonscript.tests.test_portlet",
            "collective.portlet.pythonscript.tests.test_scriptmanager",
            "collective.portlet.pythonscript.tests.test_setup",
            "collective.portlet.pythonscript.tests.test_vocab"
        ],
        "version": "1.2.1"
    },
    "collective.portlet.quote": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.quote",
            "collective.portlet.quote.config",
            "collective.portlet.quote.content",
            "collective.portlet.quote.content.quote",
            "collective.portlet.quote.interfaces",
            "collective.portlet.quote.interfaces.quote",
            "collective.portlet.quote.randomquote",
            "collective.portlet.quote.tests",
            "collective.portlet.quote.tests.base",
            "collective.portlet.quote.tests.test_portlet"
        ],
        "version": "1.0.1"
    },
    "collective.portlet.recentactivity": {
        "cmdline": [],
        "modules": [],
        "version": "1.0b6"
    },
    "collective.portlet.recentcomments": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.recentcomments",
            "collective.portlet.recentcomments.recentcommentsportlet",
            "collective.portlet.recentcomments.tests",
            "collective.portlet.recentcomments.tests.base",
            "collective.portlet.recentcomments.tests.test_portlet"
        ],
        "version": "1.1"
    },
    "collective.portlet.references": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.references",
            "collective.portlet.references.referencesportlet",
            "collective.portlet.references.tests",
            "collective.portlet.references.tests.base",
            "collective.portlet.references.tests.test_portlet"
        ],
        "version": "1.0"
    },
    "collective.portlet.relateditems": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.relateditems",
            "collective.portlet.relateditems.relateditems",
            "collective.portlet.relateditems.tests",
            "collective.portlet.relateditems.tests.base",
            "collective.portlet.relateditems.tests.test_portlet"
        ],
        "version": "0.3.11"
    },
    "collective.portlet.rich": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.rich",
            "collective.portlet.rich.richportlet",
            "collective.portlet.rich.tests",
            "collective.portlet.rich.tests.base",
            "collective.portlet.rich.tests.test_functional_doctest",
            "collective.portlet.rich.tests.test_portlet",
            "collective.portlet.rich.vocabularies"
        ],
        "version": "0.5"
    },
    "collective.portlet.rssjs": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.rssjs",
            "collective.portlet.rssjs.browser",
            "collective.portlet.rssjs.rssjsportlet",
            "collective.portlet.rssjs.tests",
            "collective.portlet.rssjs.tests.base",
            "collective.portlet.rssjs.tests.test_portlet"
        ],
        "version": "0.2"
    },
    "collective.portlet.shelf": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.shelf",
            "collective.portlet.shelf.browser",
            "collective.portlet.shelf.portletshelf",
            "collective.portlet.shelf.tests",
            "collective.portlet.shelf.tests.base",
            "collective.portlet.shelf.tests.test_portlet"
        ],
        "version": "1.3"
    },
    "collective.portlet.similarcontent": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.similarcontent",
            "collective.portlet.similarcontent.similarcontentportlet",
            "collective.portlet.similarcontent.tests",
            "collective.portlet.similarcontent.tests.base",
            "collective.portlet.similarcontent.tests.test_portlet"
        ],
        "version": "1.5"
    },
    "collective.portlet.sitemap": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.5"
    },
    "collective.portlet.skype": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.skype",
            "collective.portlet.skype.fetcher",
            "collective.portlet.skype.interfaces",
            "collective.portlet.skype.portlet"
        ],
        "version": "1.0-beta1"
    },
    "collective.portlet.slideshow": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.slideshow",
            "collective.portlet.slideshow.slideshow",
            "collective.portlet.slideshow.tests"
        ],
        "version": "0.0.1"
    },
    "collective.portlet.socialnetworks": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.socialnetworks",
            "collective.portlet.socialnetworks.socialnetworks",
            "collective.portlet.socialnetworks.testing",
            "collective.portlet.socialnetworks.tests",
            "collective.portlet.socialnetworks.tests.base",
            "collective.portlet.socialnetworks.tests.test_portlet",
            "collective.portlet.socialnetworks.upgrades"
        ],
        "version": "1.2"
    },
    "collective.portlet.tal": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.tal",
            "collective.portlet.tal.talportlet",
            "collective.portlet.tal.tests",
            "collective.portlet.tal.tests.base",
            "collective.portlet.tal.tests.test_portlet"
        ],
        "version": "1.2.0"
    },
    "collective.portlet.toc": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "collective.portlet.truereview": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.truereview",
            "collective.portlet.truereview.indexer",
            "collective.portlet.truereview.reviewlist",
            "collective.portlet.truereview.tests",
            "collective.portlet.truereview.tests.base",
            "collective.portlet.truereview.tests.test_indexer",
            "collective.portlet.truereview.tests.test_portlet",
            "collective.portlet.truereview.truereview"
        ],
        "version": "1.0b1"
    },
    "collective.portlet.twitter": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.twitter",
            "collective.portlet.twitter.config",
            "collective.portlet.twitter.interfaces",
            "collective.portlet.twitter.new",
            "collective.portlet.twitter.setuphandlers",
            "collective.portlet.twitter.testing",
            "collective.portlet.twitter.tests",
            "collective.portlet.twitter.tests.test_setup",
            "collective.portlet.twitter.tests.test_widget_new"
        ],
        "version": "1.0rc1"
    },
    "collective.portlet.twittermultistream": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.twittermultistream",
            "collective.portlet.twittermultistream.tests",
            "collective.portlet.twittermultistream.tests.base",
            "collective.portlet.twittermultistream.tests.test_portlet",
            "collective.portlet.twittermultistream.twittermultistream",
            "collective.portlet.twittermultistream.upgrades"
        ],
        "version": "1.2"
    },
    "collective.portlet.twittertrackback": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.twittertrackback",
            "collective.portlet.twittertrackback.tests",
            "collective.portlet.twittertrackback.tests.base",
            "collective.portlet.twittertrackback.tests.test_portlet",
            "collective.portlet.twittertrackback.twittertrackback"
        ],
        "version": "1.0"
    },
    "collective.portlet.useractionsportlet": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.userActionsPortlet",
            "collective.portlet.userActionsPortlet.tests",
            "collective.portlet.userActionsPortlet.tests.base",
            "collective.portlet.userActionsPortlet.tests.test_portlet",
            "collective.portlet.userActionsPortlet.useractionsportlet"
        ],
        "version": "0.4"
    },
    "collective.portlet.usertrack": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.usertrack",
            "collective.portlet.usertrack.events",
            "collective.portlet.usertrack.interfaces",
            "collective.portlet.usertrack.storage",
            "collective.portlet.usertrack.tests",
            "collective.portlet.usertrack.tests.base",
            "collective.portlet.usertrack.tests.test_portlet",
            "collective.portlet.usertrack.tests.test_storage",
            "collective.portlet.usertrack.usertrack"
        ],
        "version": "1.1.1"
    },
    "collective.portlet.videoanysurfer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.videoanysurfer",
            "collective.portlet.videoanysurfer.tests",
            "collective.portlet.videoanysurfer.tests.base",
            "collective.portlet.videoanysurfer.tests.test_portlet",
            "collective.portlet.videoanysurfer.videoportlet"
        ],
        "version": "1.0.3"
    },
    "collective.portlet.wordpress": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.wordpress",
            "collective.portlet.wordpress.tests",
            "collective.portlet.wordpress.tests.base",
            "collective.portlet.wordpress.tests.dummy_server",
            "collective.portlet.wordpress.tests.test_wordpressblogportlet",
            "collective.portlet.wordpress.wordpress"
        ],
        "version": "1.0"
    },
    "collective.portlet.workflowsteps": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlet",
            "collective.portlet.workflowsteps",
            "collective.portlet.workflowsteps.tests",
            "collective.portlet.workflowsteps.tests.base",
            "collective.portlet.workflowsteps.tests.test_portlet",
            "collective.portlet.workflowsteps.workflowsteps"
        ],
        "version": "1.0b3"
    },
    "collective.portletalias": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portletalias",
            "collective.portletalias.portlets",
            "collective.portletalias.portlets.aliasportlet",
            "collective.portletalias.tests",
            "collective.portletalias.tests.base_aliasportlet",
            "collective.portletalias.tests.test_aliasportlet",
            "collective.portletalias.utils",
            "collective.portletalias.views"
        ],
        "version": "1.1"
    },
    "collective.portletclass": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portletclass",
            "collective.portletclass.interfaces",
            "collective.portletclass.patch"
        ],
        "version": "1.0"
    },
    "collective.portletmetadata": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portletmetadata",
            "collective.portletmetadata.controlpanel",
            "collective.portletmetadata.interfaces",
            "collective.portletmetadata.manager",
            "collective.portletmetadata.metadata",
            "collective.portletmetadata.patches",
            "collective.portletmetadata.vocabularies"
        ],
        "version": "1.2"
    },
    "collective.portletpage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portletpage",
            "collective.portletpage.browser",
            "collective.portletpage.browser.column",
            "collective.portletpage.browser.interfaces",
            "collective.portletpage.browser.portletpage",
            "collective.portletpage.config",
            "collective.portletpage.content",
            "collective.portletpage.interfaces",
            "collective.portletpage.portlets",
            "collective.portletpage.tests",
            "collective.portletpage.tests.base",
            "collective.portletpage.tests.test_doctests"
        ],
        "version": "1.3.0"
    },
    "collective.portlets.lineage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlets",
            "collective.portlets.lineage",
            "collective.portlets.lineage.LineageEventsPortlet",
            "collective.portlets.lineage.LineageNewsPortlet",
            "collective.portlets.lineage.LineagePortletsCommon",
            "collective.portlets.lineage.LineageRecentPortlet",
            "collective.portlets.lineage.LineageReviewPortlet",
            "collective.portlets.lineage.LineageSearchPortlet",
            "collective.portlets.lineage.tests",
            "collective.portlets.lineage.tests.base",
            "collective.portlets.lineage.tests.test_portlet"
        ],
        "version": "1.3.0"
    },
    "collective.portlets.reverseordering": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlets",
            "collective.portlets.reverseordering",
            "collective.portlets.reverseordering.retriever"
        ],
        "version": "0.1"
    },
    "collective.portlettabber": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.portlettabber",
            "collective.portlettabber.browser",
            "collective.portlettabber.tests"
        ],
        "version": "0.2.0"
    },
    "collective.powertoken.core": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.powertoken",
            "collective.powertoken.core",
            "collective.powertoken.core.browser",
            "collective.powertoken.core.browser.consume_token",
            "collective.powertoken.core.config",
            "collective.powertoken.core.exceptions",
            "collective.powertoken.core.interfaces",
            "collective.powertoken.core.tests",
            "collective.powertoken.core.tests.base",
            "collective.powertoken.core.tests.test_utility",
            "collective.powertoken.core.tests.test_view",
            "collective.powertoken.core.tokenaction",
            "collective.powertoken.core.utility"
        ],
        "version": "0.3.0"
    },
    "collective.powertoken.view": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.powertoken",
            "collective.powertoken.view",
            "collective.powertoken.view.action",
            "collective.powertoken.view.tests",
            "collective.powertoken.view.tests.base",
            "collective.powertoken.view.tests.test_action"
        ],
        "version": "0.1.0"
    },
    "collective.powertoken.workflow": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.powertoken",
            "collective.powertoken.workflow",
            "collective.powertoken.workflow.action",
            "collective.powertoken.workflow.tests",
            "collective.powertoken.workflow.tests.base",
            "collective.powertoken.workflow.tests.test_action"
        ],
        "version": "0.2.0"
    },
    "collective.prettyalbum": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.prettyalbum",
            "collective.prettyalbum.browser",
            "collective.prettyalbum.browser.views"
        ],
        "version": "0.5"
    },
    "collective.prettydate": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.prettydate",
            "collective.prettydate.config",
            "collective.prettydate.interfaces",
            "collective.prettydate.testing",
            "collective.prettydate.tests",
            "collective.prettydate.tests.test_utility",
            "collective.prettydate.utility"
        ],
        "version": "1.2.2"
    },
    "collective.prettyphoto": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.prettyphoto",
            "collective.prettyphoto.Extensions",
            "collective.prettyphoto.Extensions.Install",
            "collective.prettyphoto.browser",
            "collective.prettyphoto.browser.view",
            "collective.prettyphoto.exportimport",
            "collective.prettyphoto.interfaces",
            "collective.prettyphoto.migration",
            "collective.prettyphoto.setuphandlers",
            "collective.prettyphoto.testing",
            "collective.prettyphoto.tests",
            "collective.prettyphoto.tests.test_install",
            "collective.prettyphoto.tests.test_robot",
            "collective.prettyphoto.tests.variables"
        ],
        "version": "0.6"
    },
    "collective.prettysociable": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.1"
    },
    "collective.preventactions": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.preventactions",
            "collective.preventactions.browser",
            "collective.preventactions.browser.preventactions",
            "collective.preventactions.browser.views",
            "collective.preventactions.interfaces",
            "collective.preventactions.prevent",
            "collective.preventactions.setuphandlers",
            "collective.preventactions.testing",
            "collective.preventactions.tests",
            "collective.preventactions.tests.test_actions",
            "collective.preventactions.tests.test_form",
            "collective.preventactions.tests.test_install",
            "collective.preventactions.tests.test_robot",
            "collective.preventactions.tests.test_views"
        ],
        "version": "0.1"
    },
    "collective.printview": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.printview",
            "collective.printview.controlpanel",
            "collective.printview.interfaces",
            "collective.printview.printview",
            "collective.printview.tests",
            "collective.printview.tests.base",
            "collective.printview.tests.testing",
            "collective.printview.vocabularies"
        ],
        "version": "1.0.1"
    },
    "collective.privateurl": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "collective.prodb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "collective.profiler": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.profiler",
            "collective.profiler.meta",
            "collective.profiler.tests",
            "collective.profiler.zope2"
        ],
        "version": "0.3"
    },
    "collective.progressbar": {
        "cmdline": [],
        "modules": [],
        "version": "0.5"
    },
    "collective.project": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.project",
            "collective.project.browser",
            "collective.project.browser.create_iteration",
            "collective.project.browser.projects_view",
            "collective.project.client",
            "collective.project.common",
            "collective.project.config",
            "collective.project.iteration",
            "collective.project.project",
            "collective.project.task",
            "collective.project.tests",
            "collective.project.tests.testSkeleton"
        ],
        "version": "2.0.0"
    },
    "collective.projekktor": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.projekktor",
            "collective.projekktor.browser",
            "collective.projekktor.browser.controls",
            "collective.projekktor.browser.controls.projekktor_controls",
            "collective.projekktor.browser.interfaces",
            "collective.projekktor.browser.portlets",
            "collective.projekktor.browser.portlets.projekktor_portlet",
            "collective.projekktor.browser.viewlets",
            "collective.projekktor.browser.viewlets.projekktor_viewlet",
            "collective.projekktor.browser.views",
            "collective.projekktor.browser.views.projekktor_view",
            "collective.projekktor.exportimport",
            "collective.projekktor.interfaces",
            "collective.projekktor.profiles",
            "collective.projekktor.projekktor",
            "collective.projekktor.provider",
            "collective.projekktor.tests",
            "collective.projekktor.utility"
        ],
        "version": "0.2b1"
    },
    "collective.properties": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.properties",
            "collective.properties.browser",
            "collective.properties.config",
            "collective.properties.converter",
            "collective.properties.field",
            "collective.properties.interfaces",
            "collective.properties.propertytypes",
            "collective.properties.vocabulary",
            "collective.properties.widget"
        ],
        "version": "1.0a2"
    },
    "collective.proxyproperties": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.proxyproperties",
            "collective.proxyproperties.adapters",
            "collective.proxyproperties.browser",
            "collective.proxyproperties.browser.proxypropsedit",
            "collective.proxyproperties.interfaces",
            "collective.proxyproperties.permissions",
            "collective.proxyproperties.utility"
        ],
        "version": "0.3"
    },
    "collective.psc.blobstorage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.psc",
            "collective.psc.blobstorage",
            "collective.psc.blobstorage.adapters",
            "collective.psc.blobstorage.tests",
            "collective.psc.blobstorage.tests.test_basic",
            "collective.psc.blobstorage.tests.test_blobstorage",
            "collective.psc.blobstorage.tests.test_content"
        ],
        "version": "0.1.1"
    },
    "collective.psc.externalstorage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.psc",
            "collective.psc.externalstorage",
            "collective.psc.externalstorage.browser",
            "collective.psc.externalstorage.browser.config",
            "collective.psc.externalstorage.config",
            "collective.psc.externalstorage.interfaces",
            "collective.psc.externalstorage.tests",
            "collective.psc.externalstorage.tests.test_config",
            "collective.psc.externalstorage.tests.test_lock"
        ],
        "version": "0.1.3"
    },
    "collective.psc.mirroring": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.psc",
            "collective.psc.mirroring",
            "collective.psc.mirroring.browser",
            "collective.psc.mirroring.browser.config",
            "collective.psc.mirroring.config",
            "collective.psc.mirroring.interfaces",
            "collective.psc.mirroring.locker",
            "collective.psc.mirroring.subscribers",
            "collective.psc.mirroring.subscribers.modified",
            "collective.psc.mirroring.tests",
            "collective.psc.mirroring.tests.test_config",
            "collective.psc.mirroring.tests.test_event",
            "collective.psc.mirroring.tests.test_lock"
        ],
        "version": "0.1.4"
    },
    "collective.ptg.allnewest": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.8"
    },
    "collective.ptg.bootstrapcarousel": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.bootstrapcarousel"
        ],
        "version": "1.0.1"
    },
    "collective.ptg.carousel": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.carousel"
        ],
        "version": "0.2.2"
    },
    "collective.ptg.contactsheet": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.contactsheet"
        ],
        "version": "1.1.2"
    },
    "collective.ptg.contentflow": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.contentflow"
        ],
        "version": "1.0.3"
    },
    "collective.ptg.contentleadimage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.contentleadimage",
            "collective.ptg.contentleadimage.adapters",
            "collective.ptg.contentleadimage.interfaces",
            "collective.ptg.contentleadimage.tests",
            "collective.ptg.contentleadimage.tests.test_adapter"
        ],
        "version": "1.0"
    },
    "collective.ptg.easyslider": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.easyslider"
        ],
        "version": "0.5.1"
    },
    "collective.ptg.fancybox": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.fancybox"
        ],
        "version": "1.2"
    },
    "collective.ptg.flickr": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.flickr"
        ],
        "version": "0.1.1"
    },
    "collective.ptg.galleria": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.galleria"
        ],
        "version": "1.3.0"
    },
    "collective.ptg.galleriffic": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.galleriffic"
        ],
        "version": "1.1.2.1"
    },
    "collective.ptg.galleryfolder": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.galleryfolder",
            "collective.ptg.galleryfolder.browser",
            "collective.ptg.galleryfolder.browser.galleryexport",
            "collective.ptg.galleryfolder.browser.viewlets",
            "collective.ptg.galleryfolder.config",
            "collective.ptg.galleryfolder.content",
            "collective.ptg.galleryfolder.content.galleryfolder",
            "collective.ptg.galleryfolder.interfaces",
            "collective.ptg.galleryfolder.interfaces.galleryfolder"
        ],
        "version": "0.3"
    },
    "collective.ptg.galleryimage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.galleryimage",
            "collective.ptg.galleryimage.extender",
            "collective.ptg.galleryimage.tests"
        ],
        "version": "1.0"
    },
    "collective.ptg.garagedoor": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.garagedoor"
        ],
        "version": "0.1"
    },
    "collective.ptg.highslide": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.highslide"
        ],
        "version": "1.1.1"
    },
    "collective.ptg.nivogallery": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.nivogallery"
        ],
        "version": "1.1"
    },
    "collective.ptg.nivoslider": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.nivoslider"
        ],
        "version": "1.0.6"
    },
    "collective.ptg.picasa": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.picasa"
        ],
        "version": "0.1.1"
    },
    "collective.ptg.pikachoose": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.pikachoose"
        ],
        "version": "1.0.4"
    },
    "collective.ptg.presentation": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.presentation"
        ],
        "version": "1.1"
    },
    "collective.ptg.quicksand": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.quicksand"
        ],
        "version": "0.3"
    },
    "collective.ptg.s3slider": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.s3slider"
        ],
        "version": "1.1"
    },
    "collective.ptg.scrollable": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.scrollable"
        ],
        "version": "0.3"
    },
    "collective.ptg.sheetgallery": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.sheetgallery"
        ],
        "version": "1.2"
    },
    "collective.ptg.shufflegallery": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.shufflegallery"
        ],
        "version": "0.2"
    },
    "collective.ptg.simplegallery": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.simplegallery"
        ],
        "version": "0.5.4"
    },
    "collective.ptg.supersized": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.supersized"
        ],
        "version": "1.2"
    },
    "collective.ptg.thumbnailzoom": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.thumbnailzoom"
        ],
        "version": "1.0.5.1"
    },
    "collective.ptg.tile": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.tile",
            "collective.ptg.tile.ptg_tile",
            "collective.ptg.tile.vocabularies"
        ],
        "version": "0.1b1"
    },
    "collective.ptg.uigallery": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.uigallery"
        ],
        "version": "0.1.1"
    },
    "collective.ptg.unitegallery": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ptg",
            "collective.ptg.unitegallery",
            "collective.ptg.unitegallery.carousel",
            "collective.ptg.unitegallery.compact",
            "collective.ptg.unitegallery.default",
            "collective.ptg.unitegallery.grid",
            "collective.ptg.unitegallery.interfaces",
            "collective.ptg.unitegallery.setuphandlers",
            "collective.ptg.unitegallery.slider",
            "collective.ptg.unitegallery.tiles",
            "collective.ptg.unitegallery.tilesgrid",
            "collective.ptg.unitegallery.video"
        ],
        "version": "1.0b1"
    },
    "collective.publications": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.publications",
            "collective.publications.browser",
            "collective.publications.browser.conversation",
            "collective.publications.content",
            "collective.publications.content.catalog",
            "collective.publications.content.publication",
            "collective.publications.setuphandlers",
            "collective.publications.tests",
            "collective.publications.upgrades",
            "collective.publications.upgrades.upgrades"
        ],
        "version": "0.2"
    },
    "collective.purge-behaviors": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.purge_behaviors",
            "collective.purge_behaviors.interfaces",
            "collective.purge_behaviors.purge",
            "collective.purge_behaviors.tests",
            "collective.purge_behaviors.tests.test_behaviors"
        ],
        "version": "0.1.1"
    },
    "collective.purgebyid": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.purgebyid",
            "collective.purgebyid.api",
            "collective.purgebyid.events",
            "collective.purgebyid.purge",
            "collective.purgebyid.testing",
            "collective.purgebyid.tests",
            "collective.purgebyid.tests.test_example"
        ],
        "version": "1.0.0"
    },
    "collective.pwexpiry": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pwexpiry",
            "collective.pwexpiry.actions",
            "collective.pwexpiry.actions.actions",
            "collective.pwexpiry.browser",
            "collective.pwexpiry.browser.emails",
            "collective.pwexpiry.browser.emails.emails",
            "collective.pwexpiry.browser.preferences",
            "collective.pwexpiry.browser.preferences.pwexpirycontrolpanel",
            "collective.pwexpiry.config",
            "collective.pwexpiry.events",
            "collective.pwexpiry.example_validator",
            "collective.pwexpiry.interfaces",
            "collective.pwexpiry.password_history_validator",
            "collective.pwexpiry.patches",
            "collective.pwexpiry.pwdisable_plugin",
            "collective.pwexpiry.pwexpiry_plugin",
            "collective.pwexpiry.setuphandlers",
            "collective.pwexpiry.subscriber",
            "collective.pwexpiry.tests",
            "collective.pwexpiry.tests.base",
            "collective.pwexpiry.tests.test_doctests",
            "collective.pwexpiry.upgrades",
            "collective.pwexpiry.utils"
        ],
        "version": "0.10"
    },
    "collective.pygal.core": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pygal",
            "collective.pygal.core",
            "collective.pygal.core.browser",
            "collective.pygal.core.interfaces",
            "collective.pygal.core.tests"
        ],
        "version": "0.1"
    },
    "collective.pygal.plonestats": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.pygal",
            "collective.pygal.plonestats",
            "collective.pygal.plonestats.browser",
            "collective.pygal.plonestats.browser.views",
            "collective.pygal.plonestats.tests"
        ],
        "version": "0.1"
    },
    "collective.qabank": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.qabank",
            "collective.qabank.behavior",
            "collective.qabank.browser",
            "collective.qabank.browser.answer_view",
            "collective.qabank.browser.qa_bank_view",
            "collective.qabank.browser.question_view",
            "collective.qabank.content",
            "collective.qabank.content.answer",
            "collective.qabank.content.qa_bank",
            "collective.qabank.content.question",
            "collective.qabank.interfaces",
            "collective.qabank.portlet",
            "collective.qabank.schemaextender",
            "collective.qabank.setuphandlers",
            "collective.qabank.upgrades",
            "collective.qabank.upgrades.handlers",
            "collective.qabank.upgrades.profiles",
            "collective.qabank.viewlet",
            "collective.qabank.vocabulary"
        ],
        "version": "1.0a1"
    },
    "collective.qextendedmenu": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.qextendedmenu",
            "collective.qextendedmenu.browser",
            "collective.qextendedmenu.browser.forms",
            "collective.qextendedmenu.browser.utils",
            "collective.qextendedmenu.interfaces",
            "collective.qextendedmenu.settings",
            "collective.qextendedmenu.tests"
        ],
        "version": "1.0a4"
    },
    "collective.querynextprev": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.querynextprev",
            "collective.querynextprev.browser",
            "collective.querynextprev.browser.viewlets",
            "collective.querynextprev.browser.views",
            "collective.querynextprev.interfaces",
            "collective.querynextprev.setuphandlers",
            "collective.querynextprev.subscribers",
            "collective.querynextprev.testing",
            "collective.querynextprev.tests",
            "collective.querynextprev.tests.test_setup",
            "collective.querynextprev.tests.test_subscribers",
            "collective.querynextprev.tests.test_utils",
            "collective.querynextprev.tests.test_viewlets",
            "collective.querynextprev.tests.test_views",
            "collective.querynextprev.upgrades",
            "collective.querynextprev.utils"
        ],
        "version": "0.4"
    },
    "collective.quickupload": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.quickupload",
            "collective.quickupload.archetypes",
            "collective.quickupload.browser",
            "collective.quickupload.browser.interfaces",
            "collective.quickupload.browser.quick_upload",
            "collective.quickupload.browser.quickupload_settings",
            "collective.quickupload.browser.ticket",
            "collective.quickupload.browser.uploadcapable",
            "collective.quickupload.browser.utils",
            "collective.quickupload.browser.viewlets",
            "collective.quickupload.config",
            "collective.quickupload.dexterity",
            "collective.quickupload.interfaces",
            "collective.quickupload.portlet",
            "collective.quickupload.portlet.quickuploadportlet",
            "collective.quickupload.portlet.vocabularies",
            "collective.quickupload.testing",
            "collective.quickupload.tests",
            "collective.quickupload.tests.test_controlpanel",
            "collective.quickupload.tests.test_dexterity_setter",
            "collective.quickupload.tests.test_doctest",
            "collective.quickupload.tests.test_get_id_from_filename",
            "collective.quickupload.tests.test_mimetypes",
            "collective.quickupload.tests.test_view",
            "collective.quickupload.upgrades",
            "collective.quickupload.upgrades.upgrades"
        ],
        "version": "1.11.0"
    },
    "collective.randomcontent": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.randomcontent",
            "collective.randomcontent.browser",
            "collective.randomcontent.interfaces",
            "collective.randomcontent.settings",
            "collective.randomcontent.testing",
            "collective.randomcontent.tests",
            "collective.randomcontent.tests.test_functional"
        ],
        "version": "1.0"
    },
    "collective.randomheaderimage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.randomheaderimage",
            "collective.randomheaderimage.browser",
            "collective.randomheaderimage.browser.interfaces",
            "collective.randomheaderimage.browser.random_image"
        ],
        "version": "0.1.0"
    },
    "collective.rdfadcviewlet": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.rdfadcviewlet",
            "collective.rdfadcviewlet.interfaces",
            "collective.rdfadcviewlet.tests",
            "collective.rdfadcviewlet.viewlet"
        ],
        "version": "1.0"
    },
    "collective.readitlater": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.readitlater",
            "collective.readitlater.browser",
            "collective.readitlater.browser.add_url",
            "collective.readitlater.browser.external",
            "collective.readitlater.browser.view",
            "collective.readitlater.i18n",
            "collective.readitlater.layer",
            "collective.readitlater.registry",
            "collective.readitlater.testing",
            "collective.readitlater.tests",
            "collective.readitlater.tests.base",
            "collective.readitlater.tests.test_setup",
            "collective.readitlater.upgrades",
            "collective.readitlater.vocabulary"
        ],
        "version": "1.1.0"
    },
    "collective.readunread": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.readunread",
            "collective.readunread.adapters",
            "collective.readunread.browser",
            "collective.readunread.browser.views",
            "collective.readunread.catalog",
            "collective.readunread.extender",
            "collective.readunread.interfaces",
            "collective.readunread.myutils",
            "collective.readunread.subscribers",
            "collective.readunread.tests",
            "collective.readunread.tests.base",
            "collective.readunread.tests.test_doctest",
            "collective.readunread.tests.tests"
        ],
        "version": "1.0b6"
    },
    "collective.realestatebroker": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.realestatebroker",
            "collective.realestatebroker.adapters",
            "collective.realestatebroker.adapters.floor",
            "collective.realestatebroker.adapters.interfaces",
            "collective.realestatebroker.adapters.map",
            "collective.realestatebroker.browser",
            "collective.realestatebroker.browser.album",
            "collective.realestatebroker.browser.base",
            "collective.realestatebroker.browser.commercial",
            "collective.realestatebroker.browser.controlpanel",
            "collective.realestatebroker.browser.floor",
            "collective.realestatebroker.browser.interfaces",
            "collective.realestatebroker.browser.map",
            "collective.realestatebroker.browser.residential",
            "collective.realestatebroker.browser.viewlets",
            "collective.realestatebroker.config",
            "collective.realestatebroker.content",
            "collective.realestatebroker.content.commercial",
            "collective.realestatebroker.content.residential",
            "collective.realestatebroker.content.schemata",
            "collective.realestatebroker.content.vocabularies",
            "collective.realestatebroker.interfaces",
            "collective.realestatebroker.migration",
            "collective.realestatebroker.pdf",
            "collective.realestatebroker.pdf.browser",
            "collective.realestatebroker.pdf.common",
            "collective.realestatebroker.pdf.interfaces",
            "collective.realestatebroker.pdf.realestate",
            "collective.realestatebroker.setuphandlers",
            "collective.realestatebroker.tests",
            "collective.realestatebroker.tests.test_integration",
            "collective.realestatebroker.tests.test_unit",
            "collective.realestatebroker.utils"
        ],
        "version": "2.3"
    },
    "collective.recaptcha": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recaptcha",
            "collective.recaptcha.bbb",
            "collective.recaptcha.settings",
            "collective.recaptcha.testing",
            "collective.recaptcha.tests",
            "collective.recaptcha.tests.test_settings",
            "collective.recaptcha.view"
        ],
        "version": "2.0.0"
    },
    "collective.recaptchacontactform": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recaptchacontactform",
            "collective.recaptchacontactform.contactformextender",
            "collective.recaptchacontactform.interfaces",
            "collective.recaptchacontactform.setuphandlers",
            "collective.recaptchacontactform.testing",
            "collective.recaptchacontactform.tests",
            "collective.recaptchacontactform.tests.test_robot",
            "collective.recaptchacontactform.tests.test_setup"
        ],
        "version": "1.0a2"
    },
    "collective.recaptchawidget": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recaptchawidget",
            "collective.recaptchawidget.browser",
            "collective.recaptchawidget.config",
            "collective.recaptchawidget.content",
            "collective.recaptchawidget.content.recaptchaedcontent",
            "collective.recaptchawidget.field",
            "collective.recaptchawidget.interfaces",
            "collective.recaptchawidget.interfaces.recaptchaedcontent",
            "collective.recaptchawidget.tests",
            "collective.recaptchawidget.tests.base",
            "collective.recaptchawidget.tests.test_doctest",
            "collective.recaptchawidget.validators",
            "collective.recaptchawidget.widget"
        ],
        "version": "0.5.1"
    },
    "collective.recipe.ant": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.ant",
            "collective.recipe.ant.tests",
            "collective.recipe.ant.tests.test_docs"
        ],
        "version": "1.0"
    },
    "collective.recipe.backup": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.backup",
            "collective.recipe.backup.copyblobs",
            "collective.recipe.backup.main",
            "collective.recipe.backup.repozorunner",
            "collective.recipe.backup.tests",
            "collective.recipe.backup.tests.test_docs",
            "collective.recipe.backup.tests.test_unit",
            "collective.recipe.backup.utils"
        ],
        "version": "3.1"
    },
    "collective.recipe.bluebream": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.bluebream",
            "collective.recipe.bluebream.welcome",
            "collective.recipe.bluebream.welcome.app",
            "collective.recipe.bluebream.welcome.interfaces",
            "collective.recipe.bluebream.welcome.views"
        ],
        "version": "0.4.0"
    },
    "collective.recipe.bootstrap": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.bootstrap",
            "collective.recipe.bootstrap.tests",
            "collective.recipe.bootstrap.tests.test_docs"
        ],
        "version": "1.0"
    },
    "collective.recipe.buildoutcache": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.buildoutcache",
            "collective.recipe.buildoutcache.package_list",
            "collective.recipe.buildoutcache.run",
            "collective.recipe.buildoutcache.testing",
            "collective.recipe.buildoutcache.tests",
            "collective.recipe.buildoutcache.tests.test_run",
            "collective.recipe.buildoutcache.tests.test_setup",
            "collective.recipe.buildoutcache.update_packages"
        ],
        "version": "1.0.3"
    },
    "collective.recipe.celery": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.celery",
            "collective.recipe.celery.options",
            "collective.recipe.celery.tests"
        ],
        "version": "1.0"
    },
    "collective.recipe.cmd": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.cmd",
            "collective.recipe.cmd.compat",
            "collective.recipe.cmd.tests",
            "collective.recipe.cmd.tests.test_docs"
        ],
        "version": "0.11"
    },
    "collective.recipe.cmmi": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.cmmi"
        ],
        "version": "0.5"
    },
    "collective.recipe.database-url": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.database_url",
            "collective.recipe.database_url.tests"
        ],
        "version": "0.0.2"
    },
    "collective.recipe.distutils": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.distutils"
        ],
        "version": "0.1"
    },
    "collective.recipe.environment": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.environment",
            "collective.recipe.environment.tests",
            "collective.recipe.environment.tests.test_docs"
        ],
        "version": "0.2.0"
    },
    "collective.recipe.filestorage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.filestorage",
            "collective.recipe.filestorage.tests",
            "collective.recipe.filestorage.tests.test_docs"
        ],
        "version": "0.6"
    },
    "collective.recipe.funkload": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.funkload",
            "collective.recipe.funkload.dispatcher",
            "collective.recipe.funkload.tests",
            "collective.recipe.funkload.tests.test_Plone",
            "collective.recipe.funkload.tests.test_Simple",
            "collective.recipe.funkload.tests.test_docs"
        ],
        "version": "0.3.1"
    },
    "collective.recipe.genshi": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "collective.recipe.grp": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.grp",
            "collective.recipe.grp.tests",
            "collective.recipe.grp.tests.test_docs"
        ],
        "version": "1.1.0"
    },
    "collective.recipe.htpasswd": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.htpasswd",
            "collective.recipe.htpasswd.tests",
            "collective.recipe.htpasswd.tests.test_docs"
        ],
        "version": "0.1a3"
    },
    "collective.recipe.hudson": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.hudson"
        ],
        "version": "1.0"
    },
    "collective.recipe.hudsonjob": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.hudsonjob",
            "collective.recipe.hudsonjob.tests",
            "collective.recipe.hudsonjob.tests.test_recipe"
        ],
        "version": "0.1"
    },
    "collective.recipe.i18noverrides": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.i18noverrides",
            "collective.recipe.i18noverrides.tests",
            "collective.recipe.i18noverrides.tests.test_docs"
        ],
        "version": "1.2"
    },
    "collective.recipe.isapiwsgi": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.isapiwsgi"
        ],
        "version": "1.0b1"
    },
    "collective.recipe.jenkinsjob": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.jenkinsjob",
            "collective.recipe.jenkinsjob.tests",
            "collective.recipe.jenkinsjob.tests.test_docs"
        ],
        "version": "1.0-alpha1"
    },
    "collective.recipe.lasso": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.lasso"
        ],
        "version": "0.1"
    },
    "collective.recipe.libsvm": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.libsvm",
            "collective.recipe.libsvm.recipe",
            "collective.recipe.libsvm.tests",
            "collective.recipe.libsvm.tests.test_docs"
        ],
        "version": "0.3"
    },
    "collective.recipe.linktally": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0-3"
    },
    "collective.recipe.logger": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.logger",
            "collective.recipe.logger.config",
            "collective.recipe.logger.daemon",
            "collective.recipe.logger.logger",
            "collective.recipe.logger.main",
            "collective.recipe.logger.storage",
            "collective.recipe.logger.tests",
            "collective.recipe.logger.tests.test_docs",
            "collective.recipe.logger.utils"
        ],
        "version": "0.1.0b1"
    },
    "collective.recipe.maildump": {
        "cmdline": [],
        "modules": [
            "maildump"
        ],
        "version": "0.2.2"
    },
    "collective.recipe.minify": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.minify",
            "collective.recipe.minify.runner",
            "collective.recipe.minify.tests",
            "collective.recipe.minify.tests.test_docs",
            "collective.recipe.minify.tests.test_runner"
        ],
        "version": "1.0"
    },
    "collective.recipe.mockedeggs": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.mockedeggs",
            "collective.recipe.mockedeggs.tests",
            "collective.recipe.mockedeggs.tests.test_docs"
        ],
        "version": "1.0rc1"
    },
    "collective.recipe.modwsgi": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.modwsgi"
        ],
        "version": "2.1"
    },
    "collective.recipe.moin": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.moin",
            "collective.recipe.moin.tests",
            "collective.recipe.moin.tests.test_docs"
        ],
        "version": "0.7"
    },
    "collective.recipe.mxbase": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.mxbase"
        ],
        "version": "0.1"
    },
    "collective.recipe.mxodbc": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.mxodbc"
        ],
        "version": "0.4"
    },
    "collective.recipe.mxzopeda": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.mxzopeda"
        ],
        "version": "0.1"
    },
    "collective.recipe.nix": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.nix",
            "collective.recipe.nix.cache"
        ],
        "version": "1.0.3"
    },
    "collective.recipe.omelette": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.omelette",
            "collective.recipe.omelette.tests",
            "collective.recipe.omelette.tests.package",
            "collective.recipe.omelette.tests.package.Products",
            "collective.recipe.omelette.tests.package.Products.Product1",
            "collective.recipe.omelette.tests.package.Products.Product2",
            "collective.recipe.omelette.tests.package.subpackage",
            "collective.recipe.omelette.tests.test_docs",
            "collective.recipe.omelette.utils"
        ],
        "version": "0.16"
    },
    "collective.recipe.patch": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.patch",
            "collective.recipe.patch.patch",
            "collective.recipe.patch.tests",
            "collective.recipe.patch.tests.test_docs"
        ],
        "version": "0.2.2"
    },
    "collective.recipe.pip": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.pip",
            "collective.recipe.pip.testing",
            "collective.recipe.pip.testing.test_docs"
        ],
        "version": "0.3.4"
    },
    "collective.recipe.platform": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.platform",
            "collective.recipe.platform.tests",
            "collective.recipe.platform.tests.test_docs"
        ],
        "version": "0.1"
    },
    "collective.recipe.plonesite": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.plonesite",
            "collective.recipe.plonesite.plonesite"
        ],
        "version": "1.9.5"
    },
    "collective.recipe.pydevproject": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.pydevproject",
            "collective.recipe.pydevproject.tests",
            "collective.recipe.pydevproject.tests.test_docs"
        ],
        "version": "0.1"
    },
    "collective.recipe.realpath": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.realpath",
            "collective.recipe.realpath.tests",
            "collective.recipe.realpath.tests.test_docs"
        ],
        "version": "0.1"
    },
    "collective.recipe.rebar": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.rebar",
            "collective.recipe.rebar.tests",
            "collective.recipe.rebar.tests.test_docs"
        ],
        "version": "1.0.1"
    },
    "collective.recipe.ropeproject": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.ropeproject",
            "collective.recipe.ropeproject.tests",
            "collective.recipe.ropeproject.tests.test_docs"
        ],
        "version": "1.0b3"
    },
    "collective.recipe.rsync": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.rsync",
            "collective.recipe.rsync.tests"
        ],
        "version": "2.2.2"
    },
    "collective.recipe.scriptgen": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.scriptgen",
            "collective.recipe.scriptgen.ctl"
        ],
        "version": "0.2"
    },
    "collective.recipe.seleniumrc": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.seleniumrc"
        ],
        "version": "0.6.1.1"
    },
    "collective.recipe.shelloutput": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.shelloutput",
            "collective.recipe.shelloutput.tests",
            "collective.recipe.shelloutput.tests.test_docs"
        ],
        "version": "0.1"
    },
    "collective.recipe.solrinstance": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.solrinstance",
            "collective.recipe.solrinstance.tests",
            "collective.recipe.solrinstance.tests.base",
            "collective.recipe.solrinstance.tests.test_doctests",
            "collective.recipe.solrinstance.tests.test_smoke",
            "collective.recipe.solrinstance.tests.test_solr_3",
            "collective.recipe.solrinstance.tests.test_solr_4",
            "collective.recipe.solrinstance.tests.test_solr_5"
        ],
        "version": "6.0.0b3"
    },
    "collective.recipe.sphinxbuilder": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.sphinxbuilder",
            "collective.recipe.sphinxbuilder.tests",
            "collective.recipe.sphinxbuilder.tests.test_docs",
            "collective.recipe.sphinxbuilder.utils"
        ],
        "version": "1.0"
    },
    "collective.recipe.supervisor": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.supervisor",
            "collective.recipe.supervisor.templates",
            "collective.recipe.supervisor.tests",
            "collective.recipe.supervisor.tests.test_docs"
        ],
        "version": "0.20"
    },
    "collective.recipe.supervisorprograms": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.supervisorprograms",
            "collective.recipe.supervisorprograms.tests",
            "collective.recipe.supervisorprograms.tests.test_docs"
        ],
        "version": "0.0.1"
    },
    "collective.recipe.symlink": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.symlink"
        ],
        "version": "0.1"
    },
    "collective.recipe.template": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.template",
            "collective.recipe.template.genshitemplate",
            "collective.recipe.template.tests"
        ],
        "version": "2.0"
    },
    "collective.recipe.updateplone": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.updateplone",
            "collective.recipe.updateplone.ploneupdater",
            "collective.recipe.updateplone.tests",
            "collective.recipe.updateplone.tests.test_docs"
        ],
        "version": "0.3"
    },
    "collective.recipe.vimproject": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.vimproject"
        ],
        "version": "0.3.2"
    },
    "collective.recipe.z2testrunner": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.1"
    },
    "collective.recipe.zcml": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.zcml",
            "collective.recipe.zcml.tests",
            "collective.recipe.zcml.tests.test_docs"
        ],
        "version": "0.1"
    },
    "collective.recipe.zmysqlda": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.zmysqlda"
        ],
        "version": "2.0.9"
    },
    "collective.recipe.zope2cluster": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.zope2cluster",
            "collective.recipe.zope2cluster.tests",
            "collective.recipe.zope2cluster.tests.test_docs"
        ],
        "version": "1.1"
    },
    "collective.recipe.zope2wsgi": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.recipe",
            "collective.recipe.zope2wsgi",
            "collective.recipe.zope2wsgi.scripts",
            "collective.recipe.zope2wsgi.tests",
            "collective.recipe.zope2wsgi.tests.test_docs"
        ],
        "version": "0.1"
    },
    "collective.redirect": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.redirect",
            "collective.redirect.browser",
            "collective.redirect.content",
            "collective.redirect.testing",
            "collective.redirect.tests"
        ],
        "version": "0.5"
    },
    "collective.redirector": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.redirector",
            "collective.redirector.browser",
            "collective.redirector.browser.viewlets",
            "collective.redirector.browser.views",
            "collective.redirector.interfaces",
            "collective.redirector.setuphandlers",
            "collective.redirector.testing",
            "collective.redirector.tests",
            "collective.redirector.tests.test_redirectpage",
            "collective.redirector.tests.test_robot",
            "collective.redirector.tests.test_setup"
        ],
        "version": "1.1.0"
    },
    "collective.referencedatagridfield": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.referencedatagridfield",
            "collective.referencedatagridfield._field",
            "collective.referencedatagridfield.browser",
            "collective.referencedatagridfield.browser.view",
            "collective.referencedatagridfield.columns",
            "collective.referencedatagridfield.examples",
            "collective.referencedatagridfield.examples.ReferenceDataGridDemoType",
            "collective.referencedatagridfield.tests",
            "collective.referencedatagridfield.tests.base",
            "collective.referencedatagridfield.tests.testField",
            "collective.referencedatagridfield.tests.testInstallation",
            "collective.referencedatagridfield.tests.testPopup",
            "collective.referencedatagridfield.tests.testWidget"
        ],
        "version": "0.5.3"
    },
    "collective.regexredirector": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.regexredirector",
            "collective.regexredirector.browser",
            "collective.regexredirector.browser.browser",
            "collective.regexredirector.browser.controlpanel",
            "collective.regexredirector.browser.interfaces",
            "collective.regexredirector.interfaces",
            "collective.regexredirector.regexstorage",
            "collective.regexredirector.testing",
            "collective.regexredirector.tests",
            "collective.regexredirector.tests.base",
            "collective.regexredirector.tests.layer",
            "collective.regexredirector.tests.test_doctest",
            "collective.regexredirector.tests.test_regexredirectors",
            "collective.regexredirector.tests.test_setup",
            "collective.regexredirector.upgrades",
            "collective.regexredirector.upgrades.v1x"
        ],
        "version": "0.2.3"
    },
    "collective.registrationcaptcha": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.registrationcaptcha",
            "collective.registrationcaptcha.interfaces",
            "collective.registrationcaptcha.registrationform"
        ],
        "version": "1.1"
    },
    "collective.registry": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.registry",
            "collective.registry.contextual_registry",
            "collective.registry.tests"
        ],
        "version": "1.0"
    },
    "collective.regjsonify": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.regjsonify",
            "collective.regjsonify.fields",
            "collective.regjsonify.interfaces",
            "collective.regjsonify.jsonify",
            "collective.regjsonify.testing",
            "collective.regjsonify.tests"
        ],
        "version": "0.2.0"
    },
    "collective.relateditems": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.relateditems",
            "collective.relateditems.interfaces",
            "collective.relateditems.relateditems",
            "collective.relateditems.tests"
        ],
        "version": "0.1.0"
    },
    "collective.relatedof": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.relatedof",
            "collective.relatedof.viewlets",
            "collective.relatedof.viewlets.related_of"
        ],
        "version": "1.1"
    },
    "collective.relatedslideshow": {
        "cmdline": [],
        "modules": [],
        "version": "2.8"
    },
    "collective.relationfieldwidget": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.relationfieldwidget",
            "collective.relationfieldwidget.browser",
            "collective.relationfieldwidget.browser.widget",
            "collective.relationfieldwidget.interfaces",
            "collective.relationfieldwidget.setuphandlers",
            "collective.relationfieldwidget.testing",
            "collective.relationfieldwidget.tests",
            "collective.relationfieldwidget.tests.test_robot",
            "collective.relationfieldwidget.tests.test_setup"
        ],
        "version": "1.0a1"
    },
    "collective.releaser": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.releaser",
            "collective.releaser.base",
            "collective.releaser.bootstrap",
            "collective.releaser.commands",
            "collective.releaser.commands.build_mo",
            "collective.releaser.commands.extendable",
            "collective.releaser.commands.release",
            "collective.releaser.config",
            "collective.releaser.hook",
            "collective.releaser.msgfmt",
            "collective.releaser.packet",
            "collective.releaser.project",
            "collective.releaser.tarfile",
            "collective.releaser.templates",
            "collective.releaser.testing",
            "collective.releaser.tests",
            "collective.releaser.tests.data",
            "collective.releaser.tests.data.buildout",
            "collective.releaser.tests.data.buildout.bootstrap",
            "collective.releaser.tests.test_base",
            "collective.releaser.tests.test_extendable",
            "collective.releaser.tests.test_project",
            "collective.releaser.tests.test_releaserdocs",
            "collective.releaser.tests.test_releaserdocstrings",
            "collective.releaser.tests.test_templates"
        ],
        "version": "0.7.1"
    },
    "collective.remove.kss": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.remove",
            "collective.remove.kss",
            "collective.remove.kss.tests"
        ],
        "version": "1.0"
    },
    "collective.remove.kupu": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.remove",
            "collective.remove.kupu"
        ],
        "version": "0.1"
    },
    "collective.remove.rules": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.remove",
            "collective.remove.rules"
        ],
        "version": "0.1"
    },
    "collective.request.player": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.request",
            "collective.request.player",
            "collective.request.player.browser",
            "collective.request.player.browser.views",
            "collective.request.player.config",
            "collective.request.player.interfaces",
            "collective.request.player.testing",
            "collective.request.player.tests",
            "collective.request.player.tests.test_setup",
            "collective.request.player.tests.test_views",
            "collective.request.player.utils"
        ],
        "version": "0.1.0b1"
    },
    "collective.responsivetheme": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.responsivetheme",
            "collective.responsivetheme.browser",
            "collective.responsivetheme.browser.interfaces",
            "collective.responsivetheme.setuphandlers",
            "collective.responsivetheme.tests",
            "collective.responsivetheme.upgrades"
        ],
        "version": "1.5.2"
    },
    "collective.revisionmanager": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.revisionmanager",
            "collective.revisionmanager.browser",
            "collective.revisionmanager.browser.views",
            "collective.revisionmanager.config",
            "collective.revisionmanager.interfaces",
            "collective.revisionmanager.setuphandlers",
            "collective.revisionmanager.statscache",
            "collective.revisionmanager.testing",
            "collective.revisionmanager.tests",
            "collective.revisionmanager.tests.test_controlpanel",
            "collective.revisionmanager.tests.test_revmgmt",
            "collective.revisionmanager.tests.test_robot",
            "collective.revisionmanager.tests.test_setup",
            "collective.revisionmanager.tests.test_upgrades",
            "collective.revisionmanager.upgrades"
        ],
        "version": "0.7"
    },
    "collective.richdescription": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.richdescription",
            "collective.richdescription.at",
            "collective.richdescription.at.extender",
            "collective.richdescription.dx",
            "collective.richdescription.dx.behaviors",
            "collective.richdescription.dx.migration",
            "collective.richdescription.tests"
        ],
        "version": "2.0"
    },
    "collective.rip": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.rip",
            "collective.rip.browser",
            "collective.rip.browser.rip"
        ],
        "version": "1.3.0"
    },
    "collective.rolereport": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.rolereport",
            "collective.rolereport.rolereport"
        ],
        "version": "1.1"
    },
    "collective.rooter": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.rooter",
            "collective.rooter.catalog",
            "collective.rooter.navroot",
            "collective.rooter.subscribers",
            "collective.rooter.tests"
        ],
        "version": "1.0"
    },
    "collective.roster": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.roster",
            "collective.roster.behaviors",
            "collective.roster.behaviors.auto_roles",
            "collective.roster.behaviors.contact_info",
            "collective.roster.behaviors.groups",
            "collective.roster.behaviors.groups_as_subjects",
            "collective.roster.behaviors.interfaces",
            "collective.roster.behaviors.office_info",
            "collective.roster.behaviors.related_persons",
            "collective.roster.behaviors.subject_info",
            "collective.roster.browser",
            "collective.roster.browser.interfaces",
            "collective.roster.browser.person",
            "collective.roster.browser.roster",
            "collective.roster.interfaces",
            "collective.roster.person",
            "collective.roster.roster",
            "collective.roster.testing",
            "collective.roster.tests",
            "collective.roster.tests.test_acceptance",
            "collective.roster.tests.test_activated",
            "collective.roster.tests.test_roster",
            "collective.roster.tests.test_setup",
            "collective.roster.upgrades",
            "collective.roster.utils"
        ],
        "version": "2.2.0"
    },
    "collective.roundabout": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.roundabout",
            "collective.roundabout.browser",
            "collective.roundabout.browser.browser",
            "collective.roundabout.config",
            "collective.roundabout.content",
            "collective.roundabout.content.roundaboutimage",
            "collective.roundabout.content.roundaboutimagehotspot",
            "collective.roundabout.content.roundaboutmap",
            "collective.roundabout.content.roundaboutmaphotspot",
            "collective.roundabout.content.roundabouttour",
            "collective.roundabout.exportimport",
            "collective.roundabout.interfaces",
            "collective.roundabout.tests"
        ],
        "version": "0.3.1"
    },
    "collective.routes": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.routes",
            "collective.routes.content",
            "collective.routes.controlpanel",
            "collective.routes.finders",
            "collective.routes.interfaces",
            "collective.routes.testing",
            "collective.routes.tests",
            "collective.routes.tests.test_registry",
            "collective.routes.tests.test_routes",
            "collective.routes.traverser",
            "collective.routes.upgrades",
            "collective.routes.utils",
            "collective.routes.views"
        ],
        "version": "1.1a2"
    },
    "collective.rtvideo.mediacore": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.rtvideo",
            "collective.rtvideo.mediacore",
            "collective.rtvideo.mediacore.config",
            "collective.rtvideo.mediacore.interfaces",
            "collective.rtvideo.mediacore.tests",
            "collective.rtvideo.mediacore.tests.base",
            "collective.rtvideo.mediacore.tests.test_videoembedcode",
            "collective.rtvideo.mediacore.videoembedcode"
        ],
        "version": "2.0.1"
    },
    "collective.rtvideo.metacafe": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.rtvideo",
            "collective.rtvideo.metacafe",
            "collective.rtvideo.metacafe.browser",
            "collective.rtvideo.metacafe.browser.videoembedcode",
            "collective.rtvideo.metacafe.tests",
            "collective.rtvideo.metacafe.tests.base",
            "collective.rtvideo.metacafe.tests.test_videoembedcode"
        ],
        "version": "0.1.0"
    },
    "collective.rtvideo.vimeo": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.rtvideo",
            "collective.rtvideo.vimeo",
            "collective.rtvideo.vimeo.browser",
            "collective.rtvideo.vimeo.browser.videoembedcode",
            "collective.rtvideo.vimeo.tests",
            "collective.rtvideo.vimeo.tests.base",
            "collective.rtvideo.vimeo.tests.test_videoembedcode"
        ],
        "version": "0.2.0"
    },
    "collective.rtvideo.youtube": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.rtvideo",
            "collective.rtvideo.youtube",
            "collective.rtvideo.youtube.browser",
            "collective.rtvideo.youtube.browser.videoembedcode",
            "collective.rtvideo.youtube.tests",
            "collective.rtvideo.youtube.tests.base",
            "collective.rtvideo.youtube.tests.test_get_thumb",
            "collective.rtvideo.youtube.tests.test_videoembedcode"
        ],
        "version": "0.3.1"
    },
    "collective.ruleactions.pythonscript": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ruleactions",
            "collective.ruleactions.pythonscript",
            "collective.ruleactions.pythonscript.pythonscript",
            "collective.ruleactions.pythonscript.tests"
        ],
        "version": "0.1"
    },
    "collective.runhook": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.runhook"
        ],
        "version": "0.9.5"
    },
    "collective.saconnect": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.saconnect",
            "collective.saconnect.browser",
            "collective.saconnect.browser.panel",
            "collective.saconnect.genericsetup",
            "collective.saconnect.interfaces",
            "collective.saconnect.saconfig",
            "collective.saconnect.storage",
            "collective.saconnect.testing",
            "collective.saconnect.tests",
            "collective.saconnect.tests.test_gs",
            "collective.saconnect.tests.test_setup"
        ],
        "version": "2.0.1"
    },
    "collective.salesforce.authplugin": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.salesforce",
            "collective.salesforce.authplugin",
            "collective.salesforce.authplugin.Extensions",
            "collective.salesforce.authplugin.Extensions.install",
            "collective.salesforce.authplugin.config",
            "collective.salesforce.authplugin.encrypt",
            "collective.salesforce.authplugin.interfaces",
            "collective.salesforce.authplugin.mixins",
            "collective.salesforce.authplugin.mixins.authmixin",
            "collective.salesforce.authplugin.mixins.propertymgmtmixin",
            "collective.salesforce.authplugin.mixins.useraddermixin",
            "collective.salesforce.authplugin.mixins.userenumerationmixin",
            "collective.salesforce.authplugin.mixins.usermgmtmixin",
            "collective.salesforce.authplugin.plugins",
            "collective.salesforce.authplugin.plugins.base",
            "collective.salesforce.authplugin.plugins.sfausermanager",
            "collective.salesforce.authplugin.tests",
            "collective.salesforce.authplugin.tests.base",
            "collective.salesforce.authplugin.tests.test_authentication",
            "collective.salesforce.authplugin.tests.test_caching",
            "collective.salesforce.authplugin.tests.test_configuration",
            "collective.salesforce.authplugin.tests.test_encrypt",
            "collective.salesforce.authplugin.tests.test_functional",
            "collective.salesforce.authplugin.tests.test_installation",
            "collective.salesforce.authplugin.tests.test_interfaces",
            "collective.salesforce.authplugin.tests.test_propertymanagement",
            "collective.salesforce.authplugin.tests.test_reinstallation",
            "collective.salesforce.authplugin.tests.test_uninstallation",
            "collective.salesforce.authplugin.tests.test_useradder",
            "collective.salesforce.authplugin.tests.test_userenumeration",
            "collective.salesforce.authplugin.tests.test_usermanagement"
        ],
        "version": "1.5.2"
    },
    "collective.salesforce.content": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.salesforce",
            "collective.salesforce.content",
            "collective.salesforce.content.behaviors",
            "collective.salesforce.content.controlpanel",
            "collective.salesforce.content.converters",
            "collective.salesforce.content.events",
            "collective.salesforce.content.fields",
            "collective.salesforce.content.interfaces",
            "collective.salesforce.content.schema",
            "collective.salesforce.content.setuphandlers",
            "collective.salesforce.content.subscribers",
            "collective.salesforce.content.sync",
            "collective.salesforce.content.tests",
            "collective.salesforce.content.tests.test_behaviors",
            "collective.salesforce.content.tests.test_converters",
            "collective.salesforce.content.tests.test_schema",
            "collective.salesforce.content.tests.test_utils",
            "collective.salesforce.content.upgrade",
            "collective.salesforce.content.utils",
            "collective.salesforce.content.vocabularies"
        ],
        "version": "1.1"
    },
    "collective.salesforce.query": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.salesforce",
            "collective.salesforce.query",
            "collective.salesforce.query.browser",
            "collective.salesforce.query.browser.salesforcequeryview",
            "collective.salesforce.query.config",
            "collective.salesforce.query.content",
            "collective.salesforce.query.content.salesforcegenericobject",
            "collective.salesforce.query.content.salesforcequery",
            "collective.salesforce.query.interfaces",
            "collective.salesforce.query.interfaces.salesforcegenericobject",
            "collective.salesforce.query.interfaces.salesforcequery",
            "collective.salesforce.query.portlets",
            "collective.salesforce.query.setuphandlers",
            "collective.salesforce.query.sfq_catalog_tool",
            "collective.salesforce.query.tests",
            "collective.salesforce.query.tests.base",
            "collective.salesforce.query.tests.test_doctest",
            "collective.salesforce.query.tests.test_salesforcequery",
            "collective.salesforce.query.vocabularies",
            "collective.salesforce.query.widgets"
        ],
        "version": "2.0.4"
    },
    "collective.salesforce.rsvp": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.salesforce",
            "collective.salesforce.rsvp",
            "collective.salesforce.rsvp.browser",
            "collective.salesforce.rsvp.browser.configuration",
            "collective.salesforce.rsvp.browser.forms",
            "collective.salesforce.rsvp.browser.registration",
            "collective.salesforce.rsvp.config",
            "collective.salesforce.rsvp.fields",
            "collective.salesforce.rsvp.helpers",
            "collective.salesforce.rsvp.interfaces",
            "collective.salesforce.rsvp.rsvpable",
            "collective.salesforce.rsvp.tests",
            "collective.salesforce.rsvp.tests.base",
            "collective.salesforce.rsvp.tests.test_interfaces",
            "collective.salesforce.rsvp.tests.test_registration",
            "collective.salesforce.rsvp.tests.test_rsvp_configuration",
            "collective.salesforce.rsvp.tests.test_schema",
            "collective.salesforce.rsvp.tests.test_setup",
            "collective.salesforce.rsvp.tests.test_uninstall",
            "collective.salesforce.rsvp.validators"
        ],
        "version": "1.3"
    },
    "collective.saoraclefixes": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.saoraclefixes"
        ],
        "version": "1.2"
    },
    "collective.schedule": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.schedule",
            "collective.schedule.browser",
            "collective.schedule.browser.views",
            "collective.schedule.interfaces",
            "collective.schedule.meta",
            "collective.schedule.testing",
            "collective.schedule.tests",
            "collective.schedule.tests.test_example",
            "collective.schedule.tests.test_zcml"
        ],
        "version": "0.2"
    },
    "collective.scriptedredirect": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.scriptedredirect",
            "collective.scriptedredirect.redirect",
            "collective.scriptedredirect.setuphandlers",
            "collective.scriptedredirect.testing",
            "collective.scriptedredirect.tests",
            "collective.scriptedredirect.tests.test_installation",
            "collective.scriptedredirect.tests.test_redirect",
            "collective.scriptedredirect.tests.test_view"
        ],
        "version": "1.1.1"
    },
    "collective.scss": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.scss",
            "collective.scss.stylesheet",
            "collective.scss.tests",
            "collective.scss.tests.base",
            "collective.scss.tests.example",
            "collective.scss.tests.layer",
            "collective.scss.tests.test_stylesheet",
            "collective.scss.tests.utils"
        ],
        "version": "1.0b1"
    },
    "collective.searchandreplace": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.searchandreplace",
            "collective.searchandreplace.browser",
            "collective.searchandreplace.browser.controlpanel",
            "collective.searchandreplace.browser.customwidgets",
            "collective.searchandreplace.browser.searchreplaceform",
            "collective.searchandreplace.browser.searchreplacetable",
            "collective.searchandreplace.interfaces",
            "collective.searchandreplace.searchreplaceutility",
            "collective.searchandreplace.testing",
            "collective.searchandreplace.tests",
            "collective.searchandreplace.tests.archetypes",
            "collective.searchandreplace.tests.test_doctests",
            "collective.searchandreplace.tests.test_helpers",
            "collective.searchandreplace.tests.test_matchcase",
            "collective.searchandreplace.tests.test_replacewhere",
            "collective.searchandreplace.upgrade"
        ],
        "version": "7.1.3"
    },
    "collective.searchevent": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.searchevent",
            "collective.searchevent.Extensions",
            "collective.searchevent.Extensions.Install",
            "collective.searchevent.adapter",
            "collective.searchevent.adapter.interface",
            "collective.searchevent.adapter.listing",
            "collective.searchevent.browser",
            "collective.searchevent.browser.interfaces",
            "collective.searchevent.browser.template",
            "collective.searchevent.browser.viewlet",
            "collective.searchevent.collection",
            "collective.searchevent.interfaces",
            "collective.searchevent.portlets",
            "collective.searchevent.portlets.search",
            "collective.searchevent.schema",
            "collective.searchevent.tests",
            "collective.searchevent.tests.base",
            "collective.searchevent.tests.test_Collection",
            "collective.searchevent.tests.test_ICollection",
            "collective.searchevent.tests.test_SearchEventResults",
            "collective.searchevent.tests.test_SearchEventResultsView",
            "collective.searchevent.tests.test_functional",
            "collective.searchevent.tests.test_registry",
            "collective.searchevent.tests.test_setup",
            "collective.searchevent.tests.test_upgrades",
            "collective.searchevent.upgrades",
            "collective.searchevent.utility",
            "collective.searchevent.vocabulary"
        ],
        "version": "0.6.1"
    },
    "collective.searchform": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.searchform",
            "collective.searchform.search",
            "collective.searchform.tests"
        ],
        "version": "1.0"
    },
    "collective.searchtool": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.searchtool",
            "collective.searchtool.interfaces",
            "collective.searchtool.namespace",
            "collective.searchtool.result",
            "collective.searchtool.simple",
            "collective.searchtool.tests"
        ],
        "version": "0.1.5"
    },
    "collective.searchweightings": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.searchweightings",
            "collective.searchweightings.adapters",
            "collective.searchweightings.interfaces",
            "collective.searchweightings.patches",
            "collective.searchweightings.tests"
        ],
        "version": "1.1"
    },
    "collective.sectionsubskin": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.sectionsubskin",
            "collective.sectionsubskin.apply",
            "collective.sectionsubskin.browser",
            "collective.sectionsubskin.browser.subskin",
            "collective.sectionsubskin.definition",
            "collective.sectionsubskin.interfaces",
            "collective.sectionsubskin.test_support",
            "collective.sectionsubskin.tests",
            "collective.sectionsubskin.traverser"
        ],
        "version": "0.2"
    },
    "collective.securitycleanup": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.securitycleanup",
            "collective.securitycleanup.handler",
            "collective.securitycleanup.testing",
            "collective.securitycleanup.tests"
        ],
        "version": "0.3"
    },
    "collective.seeder": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.seeder",
            "collective.seeder.controlpanel",
            "collective.seeder.interfaces",
            "collective.seeder.subscribers",
            "collective.seeder.tests"
        ],
        "version": "1.1"
    },
    "collective.select2": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.select2",
            "collective.select2.browser",
            "collective.select2.converter",
            "collective.select2.demo",
            "collective.select2.field",
            "collective.select2.interfaces",
            "collective.select2.widget"
        ],
        "version": "1.1"
    },
    "collective.sendaspdf": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.sendaspdf",
            "collective.sendaspdf.browser",
            "collective.sendaspdf.browser.ajax",
            "collective.sendaspdf.browser.base",
            "collective.sendaspdf.browser.download",
            "collective.sendaspdf.browser.realurl",
            "collective.sendaspdf.browser.send",
            "collective.sendaspdf.config",
            "collective.sendaspdf.emailer",
            "collective.sendaspdf.exportimport",
            "collective.sendaspdf.exportimport.setuphandler",
            "collective.sendaspdf.interfaces",
            "collective.sendaspdf.tests",
            "collective.sendaspdf.tests.base",
            "collective.sendaspdf.tests.folder_adapter",
            "collective.sendaspdf.tests.pdf2txt",
            "collective.sendaspdf.tests.sendaspdf_parser",
            "collective.sendaspdf.tests.test_func",
            "collective.sendaspdf.tests.test_unit",
            "collective.sendaspdf.tests.utils",
            "collective.sendaspdf.tool",
            "collective.sendaspdf.transforms",
            "collective.sendaspdf.transforms.pisa",
            "collective.sendaspdf.transforms.wk",
            "collective.sendaspdf.upgrades",
            "collective.sendaspdf.utils"
        ],
        "version": "3.0"
    },
    "collective.sendinblue": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.sendinblue",
            "collective.sendinblue.browser",
            "collective.sendinblue.browser.controlpanel",
            "collective.sendinblue.browser.portlet",
            "collective.sendinblue.exceptions",
            "collective.sendinblue.interfaces",
            "collective.sendinblue.sendinblue",
            "collective.sendinblue.testing",
            "collective.sendinblue.tests",
            "collective.sendinblue.tests.test_setup",
            "collective.sendinblue.vocabularies"
        ],
        "version": "1.0.1"
    },
    "collective.seo": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.seo",
            "collective.seo.browser",
            "collective.seo.browser.keywords",
            "collective.seo.browser.settings",
            "collective.seo.browser.title",
            "collective.seo.interfaces",
            "collective.seo.storage",
            "collective.seo.tests"
        ],
        "version": "1.1"
    },
    "collective.seobatching": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.seobatching",
            "collective.seobatching.browser",
            "collective.seobatching.browser.batching",
            "collective.seobatching.config",
            "collective.seobatching.interfaces",
            "collective.seobatching.tests",
            "collective.seobatching.tests.base",
            "collective.seobatching.tests.test_seobatching_view",
            "collective.seobatching.tests.test_setup",
            "collective.seobatching.tests.test_traversal",
            "collective.seobatching.traversal"
        ],
        "version": "1.0"
    },
    "collective.setdefaulteditor": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.setdefaulteditor",
            "collective.setdefaulteditor.browser",
            "collective.setdefaulteditor.utils"
        ],
        "version": "1.5"
    },
    "collective.setuphandlertools": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.setuphandlertools",
            "collective.setuphandlertools.setuphandlertools"
        ],
        "version": "1.0b4"
    },
    "collective.setuphelpers": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.setuphelpers",
            "collective.setuphelpers.structure",
            "collective.setuphelpers.tests",
            "collective.setuphelpers.usersandgroups",
            "collective.setuphelpers.utils",
            "collective.setuphelpers.various"
        ],
        "version": "0.6.5"
    },
    "collective.sgvizler": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.sgvizler",
            "collective.sgvizler.browser",
            "collective.sgvizler.interfaces",
            "collective.sgvizler.setuphandlers",
            "collective.sgvizler.sparql_viz",
            "collective.sgvizler.testing",
            "collective.sgvizler.tests",
            "collective.sgvizler.tests.test_robot",
            "collective.sgvizler.tests.test_setup",
            "collective.sgvizler.tests.test_sgvizlerview",
            "collective.sgvizler.vocabularies"
        ],
        "version": "1.0.1"
    },
    "collective.sharerizer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.sharerizer",
            "collective.sharerizer.Extensions",
            "collective.sharerizer.Extensions.Install",
            "collective.sharerizer.browser",
            "collective.sharerizer.browser.configlet",
            "collective.sharerizer.browser.documentactions",
            "collective.sharerizer.interfaces",
            "collective.sharerizer.tests",
            "collective.sharerizer.tests.base",
            "collective.sharerizer.tests.test_doctests",
            "collective.sharerizer.tests.test_unittests",
            "collective.sharerizer.upgrades"
        ],
        "version": "1.4"
    },
    "collective.shariff": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.shariff",
            "collective.shariff.browser",
            "collective.shariff.interfaces",
            "collective.shariff.tests"
        ],
        "version": "1.0b1"
    },
    "collective.sharingroles": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.sharingroles",
            "collective.sharingroles.exportimport",
            "collective.sharingroles.role",
            "collective.sharingroles.tests"
        ],
        "version": "1.0b4"
    },
    "collective.shibboleth": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.shibboleth",
            "collective.shibboleth.auth",
            "collective.shibboleth.browser",
            "collective.shibboleth.portlets",
            "collective.shibboleth.portlets.shibbolethloginportlet",
            "collective.shibboleth.setuphandlers",
            "collective.shibboleth.testing",
            "collective.shibboleth.tests",
            "collective.shibboleth.tests.base_shibbolethloginportlet",
            "collective.shibboleth.tests.test_example",
            "collective.shibboleth.tests.test_robot",
            "collective.shibboleth.tests.test_shibbolethloginportlet",
            "collective.shibboleth.upgrades",
            "collective.shibboleth.utils"
        ],
        "version": "1.2"
    },
    "collective.shinythings": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.shinythings",
            "collective.shinythings.configlet",
            "collective.shinythings.interfaces",
            "collective.shinythings.setuphandlers",
            "collective.shinythings.tests"
        ],
        "version": "0.6dev-r117588"
    },
    "collective.signableevent": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.signableevent",
            "collective.signableevent.browser",
            "collective.signableevent.config",
            "collective.signableevent.content",
            "collective.signableevent.content.eventsignup",
            "collective.signableevent.content.signableevent",
            "collective.signableevent.csvsigners",
            "collective.signableevent.events",
            "collective.signableevent.interfaces",
            "collective.signableevent.interfaces.eventsignup",
            "collective.signableevent.interfaces.signableevent",
            "collective.signableevent.monkey",
            "collective.signableevent.portlets",
            "collective.signableevent.tests",
            "collective.signableevent.tests.base",
            "collective.signableevent.tests.test_doctest",
            "collective.signableevent.tools",
            "collective.signableevent.tools.signableeventtool",
            "collective.signableevent.utils",
            "collective.signableevent.workflowgraph"
        ],
        "version": "0.8.0"
    },
    "collective.signupsheet": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.signupsheet",
            "collective.signupsheet.adapters",
            "collective.signupsheet.adapters.initialize_signup_sheet_form",
            "collective.signupsheet.browsers",
            "collective.signupsheet.browsers.pfg_field_messages",
            "collective.signupsheet.browsers.pfg_utilities",
            "collective.signupsheet.browsers.registrants_data",
            "collective.signupsheet.browsers.registrants_notification",
            "collective.signupsheet.browsers.signupsheet_baseview",
            "collective.signupsheet.config",
            "collective.signupsheet.contents",
            "collective.signupsheet.contents.signupsheet",
            "collective.signupsheet.events",
            "collective.signupsheet.events.finalize_registrant",
            "collective.signupsheet.events.signupsheet_events",
            "collective.signupsheet.interfaces",
            "collective.signupsheet.setuphandlers",
            "collective.signupsheet.tests",
            "collective.signupsheet.tests.base",
            "collective.signupsheet.tests.test_browserview",
            "collective.signupsheet.tests.test_events",
            "collective.signupsheet.tests.test_form",
            "collective.signupsheet.tests.test_setup",
            "collective.signupsheet.tests.test_utilities",
            "collective.signupsheet.tests.test_views",
            "collective.signupsheet.tests.test_workflow",
            "collective.signupsheet.utilities",
            "collective.signupsheet.utilities.utilities"
        ],
        "version": "0.3.1"
    },
    "collective.simpleeditbutton": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.simpleeditbutton",
            "collective.simpleeditbutton.interfaces",
            "collective.simpleeditbutton.tests",
            "collective.simpleeditbutton.tests.base",
            "collective.simpleeditbutton.tests.test_doctest",
            "collective.simpleeditbutton.viewlets"
        ],
        "version": "1.0"
    },
    "collective.simpleintranetworkflow": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.simpleintranetworkflow"
        ],
        "version": "1.0.1"
    },
    "collective.simplesocial": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.simplesocial",
            "collective.simplesocial.analytics",
            "collective.simplesocial.analytics.feedform",
            "collective.simplesocial.analytics.like",
            "collective.simplesocial.browser",
            "collective.simplesocial.browser.configlet",
            "collective.simplesocial.browser.fb_init",
            "collective.simplesocial.browser.image",
            "collective.simplesocial.browser.interfaces",
            "collective.simplesocial.browser.thumbnail",
            "collective.simplesocial.fanbox",
            "collective.simplesocial.fanbox.facebookfanbox",
            "collective.simplesocial.fanpage_post",
            "collective.simplesocial.fanpage_post.fanpage_post",
            "collective.simplesocial.feedform",
            "collective.simplesocial.feedform.dataproviders",
            "collective.simplesocial.feedform.facebookfeedform",
            "collective.simplesocial.likebutton",
            "collective.simplesocial.likebutton.interfaces",
            "collective.simplesocial.likebutton.likebutton",
            "collective.simplesocial.likebutton.opengraph",
            "collective.simplesocial.tests",
            "collective.simplesocial.tests.base",
            "collective.simplesocial.tests.test_doctest",
            "collective.simplesocial.upgrades"
        ],
        "version": "1.8"
    },
    "collective.simplewiki": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.simplewiki",
            "collective.simplewiki.filter",
            "collective.simplewiki.interfaces",
            "collective.simplewiki.testing",
            "collective.simplewiki.tests",
            "collective.simplewiki.tests.test_filter",
            "collective.simplewiki.transform"
        ],
        "version": "1.0.1"
    },
    "collective.singing": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.singing",
            "collective.singing.async",
            "collective.singing.browser",
            "collective.singing.browser.collector",
            "collective.singing.browser.converters",
            "collective.singing.browser.datamanager",
            "collective.singing.browser.subscribe",
            "collective.singing.browser.tests",
            "collective.singing.browser.utils",
            "collective.singing.browser.wizard",
            "collective.singing.channel",
            "collective.singing.collector",
            "collective.singing.interfaces",
            "collective.singing.mail",
            "collective.singing.message",
            "collective.singing.patch",
            "collective.singing.patch.BTrees__init__",
            "collective.singing.queue",
            "collective.singing.scheduler",
            "collective.singing.subscribe",
            "collective.singing.tests",
            "collective.singing.vocabularies"
        ],
        "version": "0.7.5"
    },
    "collective.singingnotify": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.singingnotify",
            "collective.singingnotify.handlers",
            "collective.singingnotify.interfaces",
            "collective.singingnotify.mail",
            "collective.singingnotify.tests",
            "collective.singingnotify.tests.testing_confirm_notify",
            "collective.singingnotify.tests.testing_unsubscribe_notify",
            "collective.singingnotify.upgrades"
        ],
        "version": "1.0.3"
    },
    "collective.sitecontacts": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.sitecontacts",
            "collective.sitecontacts.browser",
            "collective.sitecontacts.config",
            "collective.sitecontacts.contact",
            "collective.sitecontacts.folder",
            "collective.sitecontacts.i18n",
            "collective.sitecontacts.interfaces",
            "collective.sitecontacts.setuphandlers",
            "collective.sitecontacts.tests"
        ],
        "version": "1.0"
    },
    "collective.siteisolation": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.siteisolation",
            "collective.siteisolation.interfaces",
            "collective.siteisolation.tests",
            "collective.siteisolation.tests.test_doctest",
            "collective.siteisolation.traverser"
        ],
        "version": "0.2"
    },
    "collective.sitelogo": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.sitelogo",
            "collective.sitelogo.controlpanel",
            "collective.sitelogo.interfaces",
            "collective.sitelogo.sitelogo",
            "collective.sitelogo.utils",
            "collective.sitelogo.viewlet"
        ],
        "version": "1.0.2"
    },
    "collective.siterss": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.siterss",
            "collective.siterss.browser",
            "collective.siterss.browser.catalog_vocabulary",
            "collective.siterss.browser.controlpanel",
            "collective.siterss.browser.viewlets",
            "collective.siterss.interfaces",
            "collective.siterss.setuphandlers",
            "collective.siterss.tests"
        ],
        "version": "0.4"
    },
    "collective.skinny": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.skinny",
            "collective.skinny.base",
            "collective.skinny.content",
            "collective.skinny.debug",
            "collective.skinny.fourohfour",
            "collective.skinny.interfaces",
            "collective.skinny.main",
            "collective.skinny.patch"
        ],
        "version": "0.6"
    },
    "collective.slickslideshow": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.slickslideshow",
            "collective.slickslideshow.adapters",
            "collective.slickslideshow.browser",
            "collective.slickslideshow.browser.views",
            "collective.slickslideshow.events",
            "collective.slickslideshow.indexers",
            "collective.slickslideshow.interfaces",
            "collective.slickslideshow.setuphandlers",
            "collective.slickslideshow.tests"
        ],
        "version": "0.0.6"
    },
    "collective.sliderfields": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.sliderfields",
            "collective.sliderfields.behavior",
            "collective.sliderfields.behavior.sliderimage",
            "collective.sliderfields.browser",
            "collective.sliderfields.content",
            "collective.sliderfields.interfaces",
            "collective.sliderfields.portlet",
            "collective.sliderfields.schemaextender",
            "collective.sliderfields.schemaextender.slider_image",
            "collective.sliderfields.setuphandlers",
            "collective.sliderfields.upgrades",
            "collective.sliderfields.upgrades.handlers",
            "collective.sliderfields.upgrades.profiles",
            "collective.sliderfields.viewlet",
            "collective.sliderfields.vocabulary"
        ],
        "version": "1.1"
    },
    "collective.slideshare": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.slideshare",
            "collective.slideshare.browser",
            "collective.slideshare.browser.controlpanel",
            "collective.slideshare.browser.forms",
            "collective.slideshare.browser.views",
            "collective.slideshare.config",
            "collective.slideshare.handlers",
            "collective.slideshare.interfaces",
            "collective.slideshare.tests",
            "collective.slideshare.tests.base",
            "collective.slideshare.tests.test_doctest",
            "collective.slideshare.utils",
            "collective.slideshare.vocabularies"
        ],
        "version": "0.3"
    },
    "collective.slideshow": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.slideshow",
            "collective.slideshow.adapters",
            "collective.slideshow.browser",
            "collective.slideshow.browser.views",
            "collective.slideshow.events",
            "collective.slideshow.indexers",
            "collective.slideshow.interfaces",
            "collective.slideshow.setuphandlers",
            "collective.slideshow.tests"
        ],
        "version": "0.0.2"
    },
    "collective.slideshowfolder": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.slideshowfolder",
            "collective.slideshowfolder.browser",
            "collective.slideshowfolder.content",
            "collective.slideshowfolder.event",
            "collective.slideshowfolder.field",
            "collective.slideshowfolder.portlets",
            "collective.slideshowfolder.portlets.assignment",
            "collective.slideshowfolder.portlets.browser",
            "collective.slideshowfolder.portlets.renderer",
            "collective.slideshowfolder.testing",
            "collective.slideshowfolder.tests"
        ],
        "version": "0.8"
    },
    "collective.smartappbanner": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.smartappbanner",
            "collective.smartappbanner.browser",
            "collective.smartappbanner.browser.interfaces",
            "collective.smartappbanner.browser.settings",
            "collective.smartappbanner.browser.viewlets",
            "collective.smartappbanner.interfaces",
            "collective.smartappbanner.setuphandlers",
            "collective.smartappbanner.testing",
            "collective.smartappbanner.tests",
            "collective.smartappbanner.tests.test_robot",
            "collective.smartappbanner.tests.test_setup",
            "collective.smartappbanner.tests.test_viewlet"
        ],
        "version": "1.0.1"
    },
    "collective.smartkeywordmanager": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.smartkeywordmanager",
            "collective.smartkeywordmanager.tests",
            "collective.smartkeywordmanager.views"
        ],
        "version": "0.6"
    },
    "collective.smsauthenticator": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.smsauthenticator",
            "collective.smsauthenticator.Extensions",
            "collective.smsauthenticator.Extensions.Install",
            "collective.smsauthenticator.adapter",
            "collective.smsauthenticator.browser",
            "collective.smsauthenticator.browser.controlpanel",
            "collective.smsauthenticator.browser.disable_two_step_verification",
            "collective.smsauthenticator.browser.disable_two_step_verification_for_all_users",
            "collective.smsauthenticator.browser.enable_two_step_verification_for_all_users",
            "collective.smsauthenticator.browser.forms",
            "collective.smsauthenticator.browser.forms.request_mobile_number_reset",
            "collective.smsauthenticator.browser.forms.reset_mobile_number",
            "collective.smsauthenticator.browser.forms.token",
            "collective.smsauthenticator.browser.forms.user_setup_mobile_number",
            "collective.smsauthenticator.browser.forms.user_setup_two_step_verification",
            "collective.smsauthenticator.browser.helpers",
            "collective.smsauthenticator.browser.list_user_ips",
            "collective.smsauthenticator.browser.settings_helper",
            "collective.smsauthenticator.helpers",
            "collective.smsauthenticator.interfaces",
            "collective.smsauthenticator.pas_plugin",
            "collective.smsauthenticator.setuphandlers",
            "collective.smsauthenticator.testing",
            "collective.smsauthenticator.tests",
            "collective.smsauthenticator.tests.base",
            "collective.smsauthenticator.tests.test_generic",
            "collective.smsauthenticator.tests.test_pas_plugin",
            "collective.smsauthenticator.tests.test_robot",
            "collective.smsauthenticator.tests.test_security",
            "collective.smsauthenticator.userdataschema"
        ],
        "version": "0.3.3"
    },
    "collective.socialbar": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.socialbar",
            "collective.socialbar.interfaces"
        ],
        "version": "1.1"
    },
    "collective.socialpublisher": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.socialpublisher",
            "collective.socialpublisher.adapters",
            "collective.socialpublisher.browser",
            "collective.socialpublisher.browser.controlpanel",
            "collective.socialpublisher.browser.viewlets",
            "collective.socialpublisher.browser.views",
            "collective.socialpublisher.config",
            "collective.socialpublisher.interfaces",
            "collective.socialpublisher.testing",
            "collective.socialpublisher.tests",
            "collective.socialpublisher.tests.test_doctest",
            "collective.socialpublisher.tests.test_misc",
            "collective.socialpublisher.tests.utils",
            "collective.socialpublisher.utility",
            "collective.socialpublisher.utils"
        ],
        "version": "1.0a3"
    },
    "collective.solr": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.solr",
            "collective.solr.attributes",
            "collective.solr.browser",
            "collective.solr.browser.controlpanel",
            "collective.solr.browser.errors",
            "collective.solr.browser.facets",
            "collective.solr.browser.interfaces",
            "collective.solr.browser.maintenance",
            "collective.solr.browser.p4_search",
            "collective.solr.browser.suggest",
            "collective.solr.commands",
            "collective.solr.contentlisting",
            "collective.solr.dispatcher",
            "collective.solr.events",
            "collective.solr.exceptions",
            "collective.solr.extender",
            "collective.solr.flare",
            "collective.solr.indexer",
            "collective.solr.interfaces",
            "collective.solr.lingua",
            "collective.solr.local",
            "collective.solr.manager",
            "collective.solr.mangler",
            "collective.solr.monkey",
            "collective.solr.parser",
            "collective.solr.queryparser",
            "collective.solr.search",
            "collective.solr.serializer",
            "collective.solr.setuphandlers",
            "collective.solr.solr",
            "collective.solr.testing",
            "collective.solr.tests",
            "collective.solr.tests.test_browser_suggest",
            "collective.solr.tests.test_conflicts",
            "collective.solr.tests.test_contentlisting",
            "collective.solr.tests.test_doctests",
            "collective.solr.tests.test_facethelpers",
            "collective.solr.tests.test_facets",
            "collective.solr.tests.test_flare",
            "collective.solr.tests.test_indexer",
            "collective.solr.tests.test_integration",
            "collective.solr.tests.test_linguaplone",
            "collective.solr.tests.test_mangler",
            "collective.solr.tests.test_parser",
            "collective.solr.tests.test_query",
            "collective.solr.tests.test_robot",
            "collective.solr.tests.test_server",
            "collective.solr.tests.test_solr",
            "collective.solr.tests.test_utils",
            "collective.solr.tests.utils",
            "collective.solr.utils",
            "collective.solr.vocabularies",
            "collective.solr.zcml"
        ],
        "version": "6.0a1"
    },
    "collective.sortmyfolder": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.sortmyfolder",
            "collective.sortmyfolder.browser",
            "collective.sortmyfolder.browser.sort_contents",
            "collective.sortmyfolder.migration",
            "collective.sortmyfolder.tests"
        ],
        "version": "1.0.7"
    },
    "collective.soupstrainer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.soupstrainer",
            "collective.soupstrainer.tests"
        ],
        "version": "1.0"
    },
    "collective.spaces": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.spaces",
            "collective.spaces.browser",
            "collective.spaces.browser.createform",
            "collective.spaces.browser.viewlets",
            "collective.spaces.interfaces",
            "collective.spaces.space",
            "collective.spaces.testing",
            "collective.spaces.tests",
            "collective.spaces.tests.test_create_space_form",
            "collective.spaces.tests.test_install",
            "collective.spaces.tests.test_space",
            "collective.spaces.tests.test_utils",
            "collective.spaces.tests.test_viewlets",
            "collective.spaces.tests.test_vocabulary",
            "collective.spaces.upgrades",
            "collective.spaces.utils",
            "collective.spaces.vocabulary"
        ],
        "version": "1.1"
    },
    "collective.sphinx.autoatschema": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.sphinx",
            "collective.sphinx.autoatschema"
        ],
        "version": "0.1"
    },
    "collective.sphinx.includechangelog": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.sphinx",
            "collective.sphinx.includechangelog"
        ],
        "version": "0.1.1"
    },
    "collective.sphinx.includedoc": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.sphinx",
            "collective.sphinx.includedoc"
        ],
        "version": "0.2"
    },
    "collective.splashdancing": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.splashdancing",
            "collective.splashdancing.browser",
            "collective.splashdancing.browser.composer",
            "collective.splashdancing.browser.preview",
            "collective.splashdancing.config",
            "collective.splashdancing.content",
            "collective.splashdancing.controlpanel",
            "collective.splashdancing.event",
            "collective.splashdancing.interfaces",
            "collective.splashdancing.mycomposer",
            "collective.splashdancing.newscomposer",
            "collective.splashdancing.newsitem",
            "collective.splashdancing.portlets",
            "collective.splashdancing.settings",
            "collective.splashdancing.tests",
            "collective.splashdancing.tests.doc_tests"
        ],
        "version": "1.1a"
    },
    "collective.stats": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.stats",
            "collective.stats.export",
            "collective.stats.pubtime",
            "collective.stats.transchain",
            "collective.stats.zodbstats"
        ],
        "version": "1.0.2"
    },
    "collective.steps": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.steps",
            "collective.steps.common",
            "collective.steps.config",
            "collective.steps.members",
            "collective.steps.profile",
            "collective.steps.tests"
        ],
        "version": "0.3"
    },
    "collective.stickyitem": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.stickyitem",
            "collective.stickyitem.schemaextender",
            "collective.stickyitem.setuphandlers",
            "collective.stickyitem.tests"
        ],
        "version": "1.0.4"
    },
    "collective.stomach": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.stomach",
            "collective.stomach.browser",
            "collective.stomach.browser.stomachview",
            "collective.stomach.interfaces",
            "collective.stomach.interfaces.stomachlayer",
            "collective.stomach.testing",
            "collective.stomach.tests",
            "collective.stomach.tests.test_view"
        ],
        "version": "0.2"
    },
    "collective.stringinterp.smartlink": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.stringinterp",
            "collective.stringinterp.smartlink",
            "collective.stringinterp.smartlink.adapters"
        ],
        "version": "0.3"
    },
    "collective.stringinterp.text": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.stringinterp",
            "collective.stringinterp.text",
            "collective.stringinterp.text.adapters",
            "collective.stringinterp.text.interfaces",
            "collective.stringinterp.text.testing",
            "collective.stringinterp.text.tests",
            "collective.stringinterp.text.tests.test_stringinterp",
            "collective.stringinterp.text.tests.test_subs_adapters"
        ],
        "version": "0.2"
    },
    "collective.stripe": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.stripe",
            "collective.stripe.controlpanel",
            "collective.stripe.interfaces",
            "collective.stripe.testing",
            "collective.stripe.tests",
            "collective.stripe.tests.dummy_stripe",
            "collective.stripe.tests.test_controlpanel",
            "collective.stripe.tests.test_utils",
            "collective.stripe.utils",
            "collective.stripe.viewlets",
            "collective.stripe.vocabularies",
            "collective.stripe.webhooks",
            "collective.stripe.widgets"
        ],
        "version": "0.3.2"
    },
    "collective.subrip2html": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.subrip2html",
            "collective.subrip2html.browser",
            "collective.subrip2html.browser.view",
            "collective.subrip2html.mimetype",
            "collective.subrip2html.setuphandlers",
            "collective.subrip2html.tests",
            "collective.subrip2html.tests.test_setup",
            "collective.subrip2html.transform"
        ],
        "version": "0.2.0"
    },
    "collective.subscribablesections": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.subscribablesections",
            "collective.subscribablesections.browser",
            "collective.subscribablesections.browser.views",
            "collective.subscribablesections.browser.views.manage",
            "collective.subscribablesections.browser.views.request",
            "collective.subscribablesections.browser.views.sections",
            "collective.subscribablesections.browser.views.subscriptions",
            "collective.subscribablesections.config",
            "collective.subscribablesections.interfaces",
            "collective.subscribablesections.manager",
            "collective.subscribablesections.portlets",
            "collective.subscribablesections.portlets.requests",
            "collective.subscribablesections.portlets.sections",
            "collective.subscribablesections.subtypes",
            "collective.subscribablesections.tests"
        ],
        "version": "0.1"
    },
    "collective.subscribe": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.subscribe",
            "collective.subscribe.catalog",
            "collective.subscribe.index",
            "collective.subscribe.interfaces",
            "collective.subscribe.keys",
            "collective.subscribe.subscriber",
            "collective.subscribe.tests",
            "collective.subscribe.tests.common",
            "collective.subscribe.tests.test_catalog",
            "collective.subscribe.tests.test_index",
            "collective.subscribe.tests.test_keys",
            "collective.subscribe.tests.test_readme",
            "collective.subscribe.tests.test_subscriber",
            "collective.subscribe.utils"
        ],
        "version": "0.1"
    },
    "collective.subscribemember": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.subscribemember",
            "collective.subscribemember.adapters",
            "collective.subscribemember.browser",
            "collective.subscribemember.browser.memberexpiry",
            "collective.subscribemember.browser.memberexport",
            "collective.subscribemember.browser.memberimport",
            "collective.subscribemember.browser.renew",
            "collective.subscribemember.config",
            "collective.subscribemember.content",
            "collective.subscribemember.content.subscribemember",
            "collective.subscribemember.events",
            "collective.subscribemember.exporter",
            "collective.subscribemember.interfaces",
            "collective.subscribemember.setuphandlers",
            "collective.subscribemember.subscribers",
            "collective.subscribemember.tests",
            "collective.subscribemember.tests.base",
            "collective.subscribemember.tests.test_docs",
            "collective.subscribemember.utils",
            "collective.subscribemember.vocabulary"
        ],
        "version": "1.11"
    },
    "collective.subsitebehaviors": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.subsitebehaviors",
            "collective.subsitebehaviors.behaviors",
            "collective.subsitebehaviors.browser",
            "collective.subsitebehaviors.browser.cssviewlet",
            "collective.subsitebehaviors.browser.subsitelogoviewlet",
            "collective.subsitebehaviors.interfaces",
            "collective.subsitebehaviors.testing",
            "collective.subsitebehaviors.tests",
            "collective.subsitebehaviors.tests.test_robot",
            "collective.subsitebehaviors.tests.test_setup",
            "collective.subsitebehaviors.utils"
        ],
        "version": "0.4"
    },
    "collective.subtractiveworkflow": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.subtractiveworkflow",
            "collective.subtractiveworkflow.browser",
            "collective.subtractiveworkflow.exportimport",
            "collective.subtractiveworkflow.interfaces",
            "collective.subtractiveworkflow.react",
            "collective.subtractiveworkflow.tests",
            "collective.subtractiveworkflow.tests.test_exportimport",
            "collective.subtractiveworkflow.tests.test_permissions",
            "collective.subtractiveworkflow.workflow"
        ],
        "version": "2.0b1"
    },
    "collective.sugarcrm": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.sugarcrm",
            "collective.sugarcrm.controlpanel",
            "collective.sugarcrm.interfaces",
            "collective.sugarcrm.pasplugin",
            "collective.sugarcrm.password",
            "collective.sugarcrm.portlet",
            "collective.sugarcrm.setuphandlers",
            "collective.sugarcrm.source",
            "collective.sugarcrm.testing",
            "collective.sugarcrm.tests",
            "collective.sugarcrm.tests.base",
            "collective.sugarcrm.tests.test_pas_plugins",
            "collective.sugarcrm.tests.test_webservice",
            "collective.sugarcrm.tests.utils",
            "collective.sugarcrm.upgrades",
            "collective.sugarcrm.webservice",
            "collective.sugarcrm.z3c_suds"
        ],
        "version": "1.2.1"
    },
    "collective.suisseid": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.suisseid",
            "collective.suisseid.portlets",
            "collective.suisseid.portlets.login",
            "collective.suisseid.setuphandlers",
            "collective.suisseid.tests",
            "collective.suisseid.tests.test_installation"
        ],
        "version": "0.1b3"
    },
    "collective.superfish": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.superfish",
            "collective.superfish.browser",
            "collective.superfish.browser.interfaces",
            "collective.superfish.browser.sections",
            "collective.superfish.tests",
            "collective.superfish.upgrades"
        ],
        "version": "1.1"
    },
    "collective.swfobject": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.swfobject",
            "collective.swfobject.tests"
        ],
        "version": "1.0"
    },
    "collective.sylvester": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "collective.synchro": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "collective.synchronisedworkflow": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.synchronisedworkflow",
            "collective.synchronisedworkflow.patches",
            "collective.synchronisedworkflow.tests",
            "collective.synchronisedworkflow.tests.base",
            "collective.synchronisedworkflow.tests.test_states_equal",
            "collective.synchronisedworkflow.utils"
        ],
        "version": "1.0"
    },
    "collective.syndication": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.syndication",
            "collective.syndication.adapters",
            "collective.syndication.config",
            "collective.syndication.controlpanel",
            "collective.syndication.events",
            "collective.syndication.interfaces",
            "collective.syndication.layer",
            "collective.syndication.settings",
            "collective.syndication.setuphandlers",
            "collective.syndication.testing",
            "collective.syndication.tests",
            "collective.syndication.tests.test_controlpanel",
            "collective.syndication.tests.test_doctest",
            "collective.syndication.tests.test_setup",
            "collective.syndication.tests.test_syndication",
            "collective.syndication.tests.test_upgrades",
            "collective.syndication.tool",
            "collective.syndication.utils",
            "collective.syndication.views",
            "collective.syndication.vocabularies"
        ],
        "version": "1.0b3"
    },
    "collective.table": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.table",
            "collective.table.browser",
            "collective.table.browser.local",
            "collective.table.browser.source",
            "collective.table.browser.table",
            "collective.table.config",
            "collective.table.field_widget",
            "collective.table.interfaces",
            "collective.table.local",
            "collective.table.source",
            "collective.table.table",
            "collective.table.tests",
            "collective.table.tests._test_selenium",
            "collective.table.tests.base",
            "collective.table.tests.test_local",
            "collective.table.tests.test_setup",
            "collective.table.tests.test_table",
            "collective.table.tests.test_table_widget"
        ],
        "version": "1.1.1"
    },
    "collective.tablepage": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.tablepage",
            "collective.tablepage.browser",
            "collective.tablepage.browser.label",
            "collective.tablepage.browser.multiple_tables",
            "collective.tablepage.browser.table",
            "collective.tablepage.browser.updownload",
            "collective.tablepage.browser.view",
            "collective.tablepage.catalog",
            "collective.tablepage.config",
            "collective.tablepage.content",
            "collective.tablepage.content.tablepage",
            "collective.tablepage.events",
            "collective.tablepage.fields",
            "collective.tablepage.fields.base",
            "collective.tablepage.fields.computed",
            "collective.tablepage.fields.computed.column",
            "collective.tablepage.fields.computed.handlers",
            "collective.tablepage.fields.computed.interfaces",
            "collective.tablepage.fields.date_time",
            "collective.tablepage.fields.email",
            "collective.tablepage.fields.file",
            "collective.tablepage.fields.interfaces",
            "collective.tablepage.fields.link",
            "collective.tablepage.fields.number",
            "collective.tablepage.fields.select",
            "collective.tablepage.fields.text",
            "collective.tablepage.interfaces",
            "collective.tablepage.search",
            "collective.tablepage.search.base",
            "collective.tablepage.search.date_time",
            "collective.tablepage.search.interfaces",
            "collective.tablepage.search.search_table",
            "collective.tablepage.search.select",
            "collective.tablepage.search.text",
            "collective.tablepage.search.view",
            "collective.tablepage.setuphandlers",
            "collective.tablepage.storage",
            "collective.tablepage.storage.contentstorage",
            "collective.tablepage.testing",
            "collective.tablepage.tests",
            "collective.tablepage.tests.test_batching",
            "collective.tablepage.tests.test_caching",
            "collective.tablepage.tests.test_catalog",
            "collective.tablepage.tests.test_computed_field",
            "collective.tablepage.tests.test_csv",
            "collective.tablepage.tests.test_file_field",
            "collective.tablepage.tests.test_label",
            "collective.tablepage.tests.test_link_field",
            "collective.tablepage.tests.test_search",
            "collective.tablepage.tests.test_security",
            "collective.tablepage.tests.test_select_field",
            "collective.tablepage.tests.test_text_field",
            "collective.tablepage.tests.test_validators",
            "collective.tablepage.tests.test_view",
            "collective.tablepage.validators",
            "collective.tablepage.validators.base",
            "collective.tablepage.validators.email",
            "collective.tablepage.validators.file",
            "collective.tablepage.validators.link",
            "collective.tablepage.validators.number",
            "collective.tablepage.vocabularies"
        ],
        "version": "0.10.6"
    },
    "collective.tabr": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.tabr",
            "collective.tabr.browser",
            "collective.tabr.setuphandlers",
            "collective.tabr.tests"
        ],
        "version": "1.2"
    },
    "collective.tagcloud": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.tagcloud",
            "collective.tagcloud.browser",
            "collective.tagcloud.browser.tagcloud",
            "collective.tagcloud.interfaces",
            "collective.tagcloud.portlet",
            "collective.tagcloud.tests",
            "collective.tagcloud.viewlet"
        ],
        "version": "0.1"
    },
    "collective.taghelper": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.taghelper",
            "collective.taghelper.AlchemyAPI",
            "collective.taghelper.amplify",
            "collective.taghelper.browser",
            "collective.taghelper.browser.extractedtermsview",
            "collective.taghelper.browser.filehtmlpreviewview",
            "collective.taghelper.browser.taghelpersettings",
            "collective.taghelper.calais",
            "collective.taghelper.config",
            "collective.taghelper.evri",
            "collective.taghelper.interfaces",
            "collective.taghelper.interfaces.taghelpersettings",
            "collective.taghelper.setuphandlers",
            "collective.taghelper.silcc",
            "collective.taghelper.tagthenet",
            "collective.taghelper.tests",
            "collective.taghelper.tests.base",
            "collective.taghelper.tests.test_doctest",
            "collective.taghelper.utilities",
            "collective.taghelper.vocabularies",
            "collective.taghelper.zemanta"
        ],
        "version": "0.3.1"
    },
    "collective.takeaportrait": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.takeaportrait",
            "collective.takeaportrait.browser",
            "collective.takeaportrait.browser.view",
            "collective.takeaportrait.interfaces",
            "collective.takeaportrait.opencv",
            "collective.takeaportrait.opencv.face_detection"
        ],
        "version": "0.2.0"
    },
    "collective.task": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.task",
            "collective.task.adapters",
            "collective.task.behaviors",
            "collective.task.browser",
            "collective.task.browser.table",
            "collective.task.browser.viewlets",
            "collective.task.browser.views",
            "collective.task.content",
            "collective.task.field",
            "collective.task.interfaces",
            "collective.task.migrations",
            "collective.task.migrations.migrate_to_2_2",
            "collective.task.migrations.migrate_to_2_2_2",
            "collective.task.setuphandlers",
            "collective.task.subscribers",
            "collective.task.testing",
            "collective.task.tests",
            "collective.task.tests.test_adapters",
            "collective.task.tests.test_behaviors",
            "collective.task.tests.test_robot",
            "collective.task.tests.test_setup",
            "collective.task.tests.test_subscribers",
            "collective.task.tests.test_table",
            "collective.task.tests.test_utility",
            "collective.task.tests.test_viewlets",
            "collective.task.utility"
        ],
        "version": "2.5"
    },
    "collective.taskqueue": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.taskqueue",
            "collective.taskqueue.config",
            "collective.taskqueue.datatypes",
            "collective.taskqueue.handlers",
            "collective.taskqueue.interfaces",
            "collective.taskqueue.pasplugin",
            "collective.taskqueue.pasplugin.taskauthplugin",
            "collective.taskqueue.redisqueue",
            "collective.taskqueue.server",
            "collective.taskqueue.taskqueue",
            "collective.taskqueue.testing",
            "collective.taskqueue.tests",
            "collective.taskqueue.tests.test_acceptance",
            "collective.taskqueue.tests.test_redisqueue",
            "collective.taskqueue.tests.test_task_id",
            "collective.taskqueue.tests.test_taskqueue"
        ],
        "version": "0.8.2"
    },
    "collective.taxonomy": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.taxonomy",
            "collective.taxonomy.behavior",
            "collective.taxonomy.browser",
            "collective.taxonomy.controlpanel",
            "collective.taxonomy.exportimport",
            "collective.taxonomy.factory",
            "collective.taxonomy.generated",
            "collective.taxonomy.i18n",
            "collective.taxonomy.indexer",
            "collective.taxonomy.interfaces",
            "collective.taxonomy.jsonimpl",
            "collective.taxonomy.testing",
            "collective.taxonomy.tests",
            "collective.taxonomy.tests.test_controlpanel",
            "collective.taxonomy.tests.test_indexer",
            "collective.taxonomy.tests.test_json",
            "collective.taxonomy.tests.test_robot",
            "collective.taxonomy.upgradesteps",
            "collective.taxonomy.utility",
            "collective.taxonomy.vdex",
            "collective.taxonomy.vocabulary",
            "collective.taxonomy.widget"
        ],
        "version": "1.4.4"
    },
    "collective.taxonomysupport": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.taxonomysupport",
            "collective.taxonomysupport.allareas",
            "collective.taxonomysupport.browser",
            "collective.taxonomysupport.browser.fix_metadata",
            "collective.taxonomysupport.browser.fix_searchabletext",
            "collective.taxonomysupport.browser.taxonomy_utils",
            "collective.taxonomysupport.config",
            "collective.taxonomysupport.content",
            "collective.taxonomysupport.content.folder_taxonomy",
            "collective.taxonomysupport.extender",
            "collective.taxonomysupport.interfaces",
            "collective.taxonomysupport.interfaces.folder_taxonomy",
            "collective.taxonomysupport.interfaces.taxonomy_layer",
            "collective.taxonomysupport.monkey",
            "collective.taxonomysupport.setuphandlers",
            "collective.taxonomysupport.tests",
            "collective.taxonomysupport.tests.base",
            "collective.taxonomysupport.tests.test_doctest",
            "collective.taxonomysupport.upgrades",
            "collective.taxonomysupport.upgrades.upgrades1to1",
            "collective.taxonomysupport.utility",
            "collective.taxonomysupport.utility.vocab"
        ],
        "version": "1.4.1"
    },
    "collective.teamwork": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.teamwork",
            "collective.teamwork.browser",
            "collective.teamwork.browser.helper",
            "collective.teamwork.browser.membercsv",
            "collective.teamwork.browser.membership",
            "collective.teamwork.browser.purgeuser",
            "collective.teamwork.browser.rosterview",
            "collective.teamwork.browser.userdata",
            "collective.teamwork.browser.userinfo",
            "collective.teamwork.content",
            "collective.teamwork.content.interfaces",
            "collective.teamwork.interfaces",
            "collective.teamwork.patch",
            "collective.teamwork.setuphandlers",
            "collective.teamwork.tests",
            "collective.teamwork.tests.fixtures",
            "collective.teamwork.tests.layers",
            "collective.teamwork.tests.test_config",
            "collective.teamwork.tests.test_groups",
            "collective.teamwork.tests.test_handlers",
            "collective.teamwork.tests.test_membership",
            "collective.teamwork.tests.test_profile",
            "collective.teamwork.tests.test_utils",
            "collective.teamwork.tests.test_views",
            "collective.teamwork.user",
            "collective.teamwork.user.config",
            "collective.teamwork.user.groups",
            "collective.teamwork.user.handlers",
            "collective.teamwork.user.interfaces",
            "collective.teamwork.user.localrole",
            "collective.teamwork.user.members",
            "collective.teamwork.user.pas",
            "collective.teamwork.user.utils",
            "collective.teamwork.user.workgroups",
            "collective.teamwork.utils",
            "collective.teamwork.viewlets",
            "collective.teamwork.viewlets.interfaces",
            "collective.teamwork.viewlets.personal_bar",
            "collective.teamwork.viewlets.viewlets",
            "collective.teamwork.zope2"
        ],
        "version": "0.9"
    },
    "collective.teaser": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.teaser",
            "collective.teaser.browser",
            "collective.teaser.browser.common",
            "collective.teaser.browser.manager",
            "collective.teaser.browser.portlet",
            "collective.teaser.browser.viewlets",
            "collective.teaser.browser.z3cformportlet",
            "collective.teaser.config",
            "collective.teaser.content",
            "collective.teaser.content.teaser",
            "collective.teaser.interfaces",
            "collective.teaser.subscribers",
            "collective.teaser.tests",
            "collective.teaser.vocabularies"
        ],
        "version": "2.3"
    },
    "collective.templateengines": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.templateengines",
            "collective.templateengines.backends",
            "collective.templateengines.backends.cheetah",
            "collective.templateengines.backends.djangotemplates",
            "collective.templateengines.backends.jinja",
            "collective.templateengines.context",
            "collective.templateengines.context.jinjazope",
            "collective.templateengines.context.plone",
            "collective.templateengines.context.tags",
            "collective.templateengines.interfaces",
            "collective.templateengines.tests",
            "collective.templateengines.tests.base_test",
            "collective.templateengines.tests.test_cheetah",
            "collective.templateengines.tests.test_django",
            "collective.templateengines.tests.test_jinja",
            "collective.templateengines.utils"
        ],
        "version": "0.3.5"
    },
    "collective.testcaselayer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.testcaselayer",
            "collective.testcaselayer.common",
            "collective.testcaselayer.ctc",
            "collective.testcaselayer.functional",
            "collective.testcaselayer.layer",
            "collective.testcaselayer.mail",
            "collective.testcaselayer.ptc",
            "collective.testcaselayer.sandbox",
            "collective.testcaselayer.testbrowser",
            "collective.testcaselayer.testcase",
            "collective.testcaselayer.testing",
            "collective.testcaselayer.testing.CollectiveTestCaseLayerTesting",
            "collective.testcaselayer.testing.CollectiveTestCaseLayerTesting.Extensions",
            "collective.testcaselayer.testing.CollectiveTestCaseLayerTesting.Extensions.Install",
            "collective.testcaselayer.testing.iterator",
            "collective.testcaselayer.testing.layer",
            "collective.testcaselayer.tests",
            "collective.testcaselayer.ztc"
        ],
        "version": "1.6.1"
    },
    "collective.testing": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.testing",
            "collective.testing.debug",
            "collective.testing.interfaces",
            "collective.testing.layer",
            "collective.testing.profile",
            "collective.testing.subscribers",
            "collective.testing.tests",
            "collective.testing.utils"
        ],
        "version": "0.3"
    },
    "collective.testswarm": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.testswarm",
            "collective.testswarm.interfaces",
            "collective.testswarm.layers",
            "collective.testswarm.tests",
            "collective.testswarm.utils"
        ],
        "version": "0.3"
    },
    "collective.texttospeech": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.texttospeech",
            "collective.texttospeech.Extensions",
            "collective.texttospeech.Extensions.Install",
            "collective.texttospeech.browser",
            "collective.texttospeech.browser.viewlets",
            "collective.texttospeech.config",
            "collective.texttospeech.controlpanel",
            "collective.texttospeech.interfaces",
            "collective.texttospeech.logger",
            "collective.texttospeech.setuphandlers",
            "collective.texttospeech.testing",
            "collective.texttospeech.tests",
            "collective.texttospeech.tests.test_controlpanel",
            "collective.texttospeech.tests.test_robot",
            "collective.texttospeech.tests.test_setup",
            "collective.texttospeech.tests.test_upgrades",
            "collective.texttospeech.upgrades",
            "collective.texttospeech.upgrades.v2",
            "collective.texttospeech.upgrades.v3",
            "collective.texttospeech.upgrades.v4"
        ],
        "version": "1.0rc1"
    },
    "collective.theme.iwaters": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.theme",
            "collective.theme.iwaters",
            "collective.theme.iwaters.browser",
            "collective.theme.iwaters.browser.interfaces",
            "collective.theme.iwaters.browser.viewlets",
            "collective.theme.iwaters.config",
            "collective.theme.iwaters.docs",
            "collective.theme.iwaters.tests"
        ],
        "version": "0.3"
    },
    "collective.themecustomizer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.themecustomizer",
            "collective.themecustomizer.Extensions",
            "collective.themecustomizer.Extensions.Install",
            "collective.themecustomizer.browser",
            "collective.themecustomizer.browser.imagewidget",
            "collective.themecustomizer.browser.viewlets",
            "collective.themecustomizer.config",
            "collective.themecustomizer.controlpanel",
            "collective.themecustomizer.interfaces",
            "collective.themecustomizer.setuphandlers",
            "collective.themecustomizer.testing",
            "collective.themecustomizer.tests",
            "collective.themecustomizer.tests.test_imagewidget",
            "collective.themecustomizer.tests.test_robot",
            "collective.themecustomizer.tests.test_setup"
        ],
        "version": "1.0b1"
    },
    "collective.themefragments": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.themefragments",
            "collective.themefragments.interfaces",
            "collective.themefragments.testing",
            "collective.themefragments.tests",
            "collective.themefragments.tests.test_transform",
            "collective.themefragments.tiles",
            "collective.themefragments.traversal",
            "collective.themefragments.utils"
        ],
        "version": "2.6.1"
    },
    "collective.themesitesetup": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.themesitesetup",
            "collective.themesitesetup.browser",
            "collective.themesitesetup.content",
            "collective.themesitesetup.interfaces",
            "collective.themesitesetup.marshall",
            "collective.themesitesetup.plugin",
            "collective.themesitesetup.testing",
            "collective.themesitesetup.tests",
            "collective.themesitesetup.tests.test_robot",
            "collective.themesitesetup.utils"
        ],
        "version": "1.4.1"
    },
    "collective.themeswitcher": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.themeswitcher",
            "collective.themeswitcher.SkinsTool",
            "collective.themeswitcher.ThemeTransform",
            "collective.themeswitcher.switcher",
            "collective.themeswitcher.testing",
            "collective.themeswitcher.tests",
            "collective.themeswitcher.tests.base",
            "collective.themeswitcher.tests.fake",
            "collective.themeswitcher.tests.test_setup",
            "collective.themeswitcher.tests.test_switcher",
            "collective.themeswitcher.upgrades"
        ],
        "version": "1.0a2"
    },
    "collective.threecolorstheme": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.threecolorstheme",
            "collective.threecolorstheme.browser",
            "collective.threecolorstheme.browser.ddmenuview",
            "collective.threecolorstheme.browser.interfaces",
            "collective.threecolorstheme.browser.phantasy_properties",
            "collective.threecolorstheme.browser.utils",
            "collective.threecolorstheme.browser.viewlets",
            "collective.threecolorstheme.config",
            "collective.threecolorstheme.content",
            "collective.threecolorstheme.content.schema",
            "collective.threecolorstheme.content.skin",
            "collective.threecolorstheme.interfaces",
            "collective.threecolorstheme.permissions",
            "collective.threecolorstheme.phantasyconfig",
            "collective.threecolorstheme.setuphandlers",
            "collective.threecolorstheme.tests"
        ],
        "version": "0.1"
    },
    "collective.tiles.unitegallery": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.tiles",
            "collective.tiles.unitegallery",
            "collective.tiles.unitegallery.browser",
            "collective.tiles.unitegallery.browser.tiles",
            "collective.tiles.unitegallery.interfaces",
            "collective.tiles.unitegallery.setuphandlers",
            "collective.tiles.unitegallery.testing",
            "collective.tiles.unitegallery.tests",
            "collective.tiles.unitegallery.tests.test_robot",
            "collective.tiles.unitegallery.tests.test_setup"
        ],
        "version": "1.0b1"
    },
    "collective.timedevents": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.timedevents",
            "collective.timedevents.events",
            "collective.timedevents.interfaces",
            "collective.timedevents.tests",
            "collective.timedevents.views"
        ],
        "version": "1.0.4"
    },
    "collective.timelines": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.timelines",
            "collective.timelines.at_content",
            "collective.timelines.browser",
            "collective.timelines.browser.configuration",
            "collective.timelines.browser.view",
            "collective.timelines.config",
            "collective.timelines.dexterity_content",
            "collective.timelines.indexer",
            "collective.timelines.interfaces",
            "collective.timelines.map_support",
            "collective.timelines.setuphandlers",
            "collective.timelines.tests"
        ],
        "version": "1.0b1"
    },
    "collective.tinymceplugins.advfilelinks": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.tinymceplugins",
            "collective.tinymceplugins.advfilelinks",
            "collective.tinymceplugins.advfilelinks.adapters",
            "collective.tinymceplugins.advfilelinks.browser",
            "collective.tinymceplugins.advfilelinks.browser.interfaces",
            "collective.tinymceplugins.advfilelinks.browser.view",
            "collective.tinymceplugins.advfilelinks.interfaces",
            "collective.tinymceplugins.advfilelinks.setuphandlers"
        ],
        "version": "1.3.2"
    },
    "collective.tinymceplugins.codemagic": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.tinymceplugins",
            "collective.tinymceplugins.codemagic",
            "collective.tinymceplugins.codemagic.testing",
            "collective.tinymceplugins.codemagic.tests",
            "collective.tinymceplugins.codemagic.tests.test_example"
        ],
        "version": "1.1"
    },
    "collective.tinymceplugins.embedly": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.tinymceplugins",
            "collective.tinymceplugins.embedly",
            "collective.tinymceplugins.embedly.browser",
            "collective.tinymceplugins.embedly.browser.views",
            "collective.tinymceplugins.embedly.config",
            "collective.tinymceplugins.embedly.patches",
            "collective.tinymceplugins.embedly.setuphandlers"
        ],
        "version": "1.0.2"
    },
    "collective.tinymceplugins.imagebrowser": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.tinymceplugins",
            "collective.tinymceplugins.imagebrowser",
            "collective.tinymceplugins.imagebrowser.browser",
            "collective.tinymceplugins.imagebrowser.browser.adapter",
            "collective.tinymceplugins.imagebrowser.browser.controlpanel",
            "collective.tinymceplugins.imagebrowser.browser.imagebrowser_resources",
            "collective.tinymceplugins.imagebrowser.browser.interfaces",
            "collective.tinymceplugins.imagebrowser.interfaces",
            "collective.tinymceplugins.imagebrowser.testing",
            "collective.tinymceplugins.imagebrowser.tests",
            "collective.tinymceplugins.imagebrowser.tests.test_setup",
            "collective.tinymceplugins.imagebrowser.upgrades"
        ],
        "version": "1.0b6"
    },
    "collective.tinymceportlets": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.tinymceportlets",
            "collective.tinymceportlets.interfaces",
            "collective.tinymceportlets.testing",
            "collective.tinymceportlets.tests",
            "collective.tinymceportlets.tests.test_rendering",
            "collective.tinymceportlets.transform",
            "collective.tinymceportlets.utils",
            "collective.tinymceportlets.views",
            "collective.tinymceportlets.vocabularies"
        ],
        "version": "1.0a2"
    },
    "collective.tinymcetemplates": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.tinymcetemplates",
            "collective.tinymcetemplates.browser"
        ],
        "version": "1.0b3"
    },
    "collective.tipsy": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0a"
    },
    "collective.topicitemsevent": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.topicitemsevent",
            "collective.topicitemsevent.browser",
            "collective.topicitemsevent.browser.interfaces",
            "collective.topicitemsevent.browser.views",
            "collective.topicitemsevent.event",
            "collective.topicitemsevent.handlers",
            "collective.topicitemsevent.tests"
        ],
        "version": "1.0"
    },
    "collective.traceview": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.traceview",
            "collective.traceview.interfaces",
            "collective.traceview.patches",
            "collective.traceview.patches.catalog",
            "collective.traceview.patches.chameleonpatch",
            "collective.traceview.patches.httpserver",
            "collective.traceview.patches.memoize",
            "collective.traceview.patches.oboeexception",
            "collective.traceview.patches.publisher",
            "collective.traceview.patches.templates",
            "collective.traceview.patches.transform",
            "collective.traceview.patches.traversepatch",
            "collective.traceview.patches.viewletmanagers",
            "collective.traceview.patches.zodbpatch",
            "collective.traceview.view"
        ],
        "version": "1.4"
    },
    "collective.trajectory": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.trajectory",
            "collective.trajectory.browser",
            "collective.trajectory.components",
            "collective.trajectory.utils"
        ],
        "version": "0.1"
    },
    "collective.transcode.daemon": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.transcode",
            "collective.transcode.daemon",
            "collective.transcode.daemon.config",
            "collective.transcode.daemon.crypto",
            "collective.transcode.daemon.scheduler",
            "collective.transcode.daemon.tests",
            "collective.transcode.daemon.transcodedaemon",
            "collective.transcode.daemon.xmlrpc"
        ],
        "version": "0.12"
    },
    "collective.transcode.recipe": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.transcode",
            "collective.transcode.recipe",
            "collective.transcode.recipe.ctl",
            "collective.transcode.recipe.tests",
            "collective.transcode.recipe.tests.test_docs"
        ],
        "version": "0.2"
    },
    "collective.transcode.star": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.transcode",
            "collective.transcode.star",
            "collective.transcode.star.browser",
            "collective.transcode.star.browser.controlpanel",
            "collective.transcode.star.browser.viewlets",
            "collective.transcode.star.browser.views",
            "collective.transcode.star.crypto",
            "collective.transcode.star.interfaces",
            "collective.transcode.star.subscribers",
            "collective.transcode.star.tests",
            "collective.transcode.star.utility"
        ],
        "version": "0.21"
    },
    "collective.transform.creole": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.transform",
            "collective.transform.creole",
            "collective.transform.creole.creole_to_html",
            "collective.transform.creole.setuphandlers",
            "collective.transform.creole.tests"
        ],
        "version": "1.1"
    },
    "collective.transform.docbook": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.transform",
            "collective.transform.docbook",
            "collective.transform.docbook.html_to_docbook",
            "collective.transform.docbook.mimetype",
            "collective.transform.docbook.setuphandlers",
            "collective.transform.docbook.tests"
        ],
        "version": "0.1"
    },
    "collective.transform.kml": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.transform",
            "collective.transform.kml",
            "collective.transform.kml.kml_to_html",
            "collective.transform.kml.setuphandlers",
            "collective.transform.kml.tests"
        ],
        "version": "0.1"
    },
    "collective.transform.multimarkdown": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.transform",
            "collective.transform.multimarkdown",
            "collective.transform.multimarkdown.multimarkdown_to_html",
            "collective.transform.multimarkdown.setuphandlers"
        ],
        "version": "0.2"
    },
    "collective.transform.ppt-xl": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.transform",
            "collective.transform.ppt_xl",
            "collective.transform.ppt_xl.excel_to_html",
            "collective.transform.ppt_xl.ppt_to_html",
            "collective.transform.ppt_xl.setuphandlers",
            "collective.transform.ppt_xl.tests"
        ],
        "version": "0.1"
    },
    "collective.transform.txt2tags": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.transform",
            "collective.transform.txt2tags",
            "collective.transform.txt2tags.setuphandlers",
            "collective.transform.txt2tags.tests",
            "collective.transform.txt2tags.txt2tags",
            "collective.transform.txt2tags.txt2tags_to_html"
        ],
        "version": "1.1"
    },
    "collective.transmogrifier": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.transmogrifier",
            "collective.transmogrifier.genericsetup",
            "collective.transmogrifier.interfaces",
            "collective.transmogrifier.meta",
            "collective.transmogrifier.sections",
            "collective.transmogrifier.sections.breakpoint",
            "collective.transmogrifier.sections.codec",
            "collective.transmogrifier.sections.condition",
            "collective.transmogrifier.sections.constructor",
            "collective.transmogrifier.sections.csvsource",
            "collective.transmogrifier.sections.dirwalker",
            "collective.transmogrifier.sections.folders",
            "collective.transmogrifier.sections.inserter",
            "collective.transmogrifier.sections.listsource",
            "collective.transmogrifier.sections.logger",
            "collective.transmogrifier.sections.manipulator",
            "collective.transmogrifier.sections.pathresolver",
            "collective.transmogrifier.sections.savepoint",
            "collective.transmogrifier.sections.splitter",
            "collective.transmogrifier.sections.tests",
            "collective.transmogrifier.sections.urlopener",
            "collective.transmogrifier.sections.xmlwalker",
            "collective.transmogrifier.tests",
            "collective.transmogrifier.tests.test_transmogrifier",
            "collective.transmogrifier.transmogrifier",
            "collective.transmogrifier.utils"
        ],
        "version": "1.5.1"
    },
    "collective.traverse": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.traverse",
            "collective.traverse.interfaces",
            "collective.traverse.root",
            "collective.traverse.tests"
        ],
        "version": "1.1"
    },
    "collective.twitter.accounts": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.twitter",
            "collective.twitter.accounts",
            "collective.twitter.accounts.Extensions",
            "collective.twitter.accounts.Extensions.Install",
            "collective.twitter.accounts.browser",
            "collective.twitter.accounts.browser.controlpanel",
            "collective.twitter.accounts.browser.interfaces",
            "collective.twitter.accounts.browser.token",
            "collective.twitter.accounts.config",
            "collective.twitter.accounts.testing",
            "collective.twitter.accounts.tests",
            "collective.twitter.accounts.tests.test_controlpanel",
            "collective.twitter.accounts.tests.test_setup"
        ],
        "version": "1.0.3"
    },
    "collective.twitter.action": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.twitter",
            "collective.twitter.action",
            "collective.twitter.action.twitter_action"
        ],
        "version": "1.0.1"
    },
    "collective.twitter.portlets": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.twitter",
            "collective.twitter.portlets",
            "collective.twitter.portlets.Extensions",
            "collective.twitter.portlets.Extensions.Install",
            "collective.twitter.portlets.config",
            "collective.twitter.portlets.interfaces",
            "collective.twitter.portlets.setuphandlers",
            "collective.twitter.portlets.testing",
            "collective.twitter.portlets.tests",
            "collective.twitter.portlets.tests.base",
            "collective.twitter.portlets.tests.test_profile_portlet",
            "collective.twitter.portlets.tests.test_search_portlet",
            "collective.twitter.portlets.tests.test_setup",
            "collective.twitter.portlets.twprofile",
            "collective.twitter.portlets.twsearch"
        ],
        "version": "1.0b5"
    },
    "collective.twitter.tweet": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "collective.twitter.widget.portlets": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "collective.twittercards": {
        "cmdline": [],
        "modules": [
            "twittercards",
            "twittercards.Extensions",
            "twittercards.Extensions.Install",
            "twittercards.browser",
            "twittercards.browser.settings",
            "twittercards.browser.viewlets",
            "twittercards.browser.views",
            "twittercards.config",
            "twittercards.interfaces",
            "twittercards.settings",
            "twittercards.setuphandlers",
            "twittercards.testing",
            "twittercards.tests",
            "twittercards.tests.test_controlpanel",
            "twittercards.vocabulary"
        ],
        "version": "0.1.3"
    },
    "collective.twitterportlet": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.twitterportlet",
            "collective.twitterportlet.portlet",
            "collective.twitterportlet.tests"
        ],
        "version": "0.10"
    },
    "collective.typecriterion": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.typecriterion",
            "collective.typecriterion.browser",
            "collective.typecriterion.browser.controlpanel",
            "collective.typecriterion.index_modifier",
            "collective.typecriterion.interfaces",
            "collective.typecriterion.persistent",
            "collective.typecriterion.testing",
            "collective.typecriterion.tests",
            "collective.typecriterion.tests.test_query",
            "collective.typecriterion.vocabularies"
        ],
        "version": "0.1.0"
    },
    "collective.types.citation": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.types",
            "collective.types.citation",
            "collective.types.citation.browser",
            "collective.types.citation.browser.citation",
            "collective.types.citation.browser.collage",
            "collective.types.citation.browser.page_wrapper",
            "collective.types.citation.browser.util",
            "collective.types.citation.config",
            "collective.types.citation.content",
            "collective.types.citation.setuphandlers",
            "collective.types.citation.tests",
            "collective.types.citation.tests.base",
            "collective.types.citation.tests.test_citation",
            "collective.types.citation.tests.test_doctests",
            "collective.types.citation.tests.test_setup"
        ],
        "version": "9.06.01"
    },
    "collective.types.externalsearch": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.types",
            "collective.types.externalsearch",
            "collective.types.externalsearch.Extensions",
            "collective.types.externalsearch.Extensions.Install",
            "collective.types.externalsearch.browser",
            "collective.types.externalsearch.browser.collage",
            "collective.types.externalsearch.browser.external_search",
            "collective.types.externalsearch.browser.page_wrapper",
            "collective.types.externalsearch.browser.util",
            "collective.types.externalsearch.config",
            "collective.types.externalsearch.content",
            "collective.types.externalsearch.content.externalsearch",
            "collective.types.externalsearch.interfaces",
            "collective.types.externalsearch.setuphandlers",
            "collective.types.externalsearch.tests",
            "collective.types.externalsearch.tests.base",
            "collective.types.externalsearch.tests.test_collage",
            "collective.types.externalsearch.tests.test_doctests",
            "collective.types.externalsearch.tests.test_externalsearch",
            "collective.types.externalsearch.tests.test_setup"
        ],
        "version": "11.04"
    },
    "collective.types.topicgroup": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.types",
            "collective.types.topicgroup",
            "collective.types.topicgroup.browser",
            "collective.types.topicgroup.browser.collage",
            "collective.types.topicgroup.browser.folder",
            "collective.types.topicgroup.browser.page_wrapper",
            "collective.types.topicgroup.browser.util",
            "collective.types.topicgroup.config",
            "collective.types.topicgroup.content",
            "collective.types.topicgroup.setuphandlers",
            "collective.types.topicgroup.tests",
            "collective.types.topicgroup.tests.base",
            "collective.types.topicgroup.tests.test_doctests",
            "collective.types.topicgroup.tests.test_setup",
            "collective.types.topicgroup.tests.test_topicgroup"
        ],
        "version": "9.06.02"
    },
    "collective.ui.ie6nomore": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.ui",
            "collective.ui.ie6nomore",
            "collective.ui.ie6nomore.browser",
            "collective.ui.ie6nomore.browser.interfaces",
            "collective.ui.ie6nomore.doc",
            "collective.ui.ie6nomore.setuphandlers",
            "collective.ui.ie6nomore.tests"
        ],
        "version": "1.0"
    },
    "collective.unresettableuser": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.unresettableuser",
            "collective.unresettableuser.browser",
            "collective.unresettableuser.browser.password_form",
            "collective.unresettableuser.tests"
        ],
        "version": "0.2.0"
    },
    "collective.unslider": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.unslider",
            "collective.unslider.behavior",
            "collective.unslider.browser",
            "collective.unslider.content",
            "collective.unslider.interfaces",
            "collective.unslider.portlet",
            "collective.unslider.portlet.unsliderportlet",
            "collective.unslider.schemaextender",
            "collective.unslider.setuphandlers",
            "collective.unslider.upgrades",
            "collective.unslider.upgrades.handlers",
            "collective.unslider.upgrades.profiles",
            "collective.unslider.viewlet",
            "collective.unslider.vocabulary"
        ],
        "version": "1.4"
    },
    "collective.updatelinksoncopy": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.updatelinksoncopy",
            "collective.updatelinksoncopy.handlers",
            "collective.updatelinksoncopy.tests"
        ],
        "version": "1.0"
    },
    "collective.updatemimetype": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.updatemimetype",
            "collective.updatemimetype.browser",
            "collective.updatemimetype.browser.migrate",
            "collective.updatemimetype.interfaces",
            "collective.updatemimetype.migration",
            "collective.updatemimetype.setuphandlers",
            "collective.updatemimetype.testing",
            "collective.updatemimetype.tests",
            "collective.updatemimetype.tests.test_setup"
        ],
        "version": "0.1.2"
    },
    "collective.upgrade": {
        "cmdline": [
            "run-portal-upgrades"
        ],
        "modules": [
            "collective",
            "collective.upgrade",
            "collective.upgrade.broken",
            "collective.upgrade.interfaces",
            "collective.upgrade.pas",
            "collective.upgrade.ploneupgrader",
            "collective.upgrade.portals",
            "collective.upgrade.run",
            "collective.upgrade.steps",
            "collective.upgrade.testing",
            "collective.upgrade.tests",
            "collective.upgrade.upgrader",
            "collective.upgrade.utils"
        ],
        "version": "1.2"
    },
    "collective.upload": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.upload",
            "collective.upload.Extensions",
            "collective.upload.Extensions.Install",
            "collective.upload.behaviors",
            "collective.upload.browser",
            "collective.upload.browser.menu",
            "collective.upload.browser.viewlets",
            "collective.upload.browser.views",
            "collective.upload.config",
            "collective.upload.controlpanel",
            "collective.upload.interfaces",
            "collective.upload.logger",
            "collective.upload.setuphandlers",
            "collective.upload.testing",
            "collective.upload.tests",
            "collective.upload.tests.test_controlpanel",
            "collective.upload.tests.test_menu",
            "collective.upload.tests.test_robot",
            "collective.upload.tests.test_setup",
            "collective.upload.tests.test_upgrades",
            "collective.upload.tests.test_viewlets",
            "collective.upload.tests.test_views",
            "collective.upload.upgrades",
            "collective.upload.upgrades.v2",
            "collective.upload.upgrades.v3",
            "collective.upload.upgrades.v4",
            "collective.upload.upgrades.v5",
            "collective.upload.upgrades.v6"
        ],
        "version": "9.18.0rc2"
    },
    "collective.uploadify": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.uploadify",
            "collective.uploadify.browser",
            "collective.uploadify.browser.adapters",
            "collective.uploadify.browser.atct",
            "collective.uploadify.browser.dexterity",
            "collective.uploadify.browser.interfaces",
            "collective.uploadify.browser.upload",
            "collective.uploadify.browser.utility",
            "collective.uploadify.tests",
            "collective.uploadify.tests.base",
            "collective.uploadify.tests.test_setup",
            "collective.uploadify.tests.test_views"
        ],
        "version": "1.2"
    },
    "collective.usernamelogger": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.usernamelogger",
            "collective.usernamelogger.tests"
        ],
        "version": "1.4"
    },
    "collective.uuid": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.uuid",
            "collective.uuid.interfaces",
            "collective.uuid.tests"
        ],
        "version": "1.0rc1"
    },
    "collective.validationoverride": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.validationoverride",
            "collective.validationoverride.field",
            "collective.validationoverride.tests"
        ],
        "version": "0.1"
    },
    "collective.validator.base": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.validator",
            "collective.validator.base",
            "collective.validator.base.browser",
            "collective.validator.base.browser.adapter",
            "collective.validator.base.browser.folder_report",
            "collective.validator.base.browser.remote_validation",
            "collective.validator.base.browser.validate_xhtml_form",
            "collective.validator.base.browser.validationtool",
            "collective.validator.base.browser.vt_view",
            "collective.validator.base.config",
            "collective.validator.base.content",
            "collective.validator.base.content.ATFileReport",
            "collective.validator.base.content.ATReport",
            "collective.validator.base.content.ValidationTool",
            "collective.validator.base.content.basecontentvalidable",
            "collective.validator.base.content.sendattachment",
            "collective.validator.base.interfaces",
            "collective.validator.base.interfaces.interfaces",
            "collective.validator.base.interfaces.vocabolario",
            "collective.validator.base.permissions",
            "collective.validator.base.setuphandlers",
            "collective.validator.base.utility"
        ],
        "version": "2.2.1"
    },
    "collective.validator.css": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.validator",
            "collective.validator.css",
            "collective.validator.css.adapter",
            "collective.validator.css.config",
            "collective.validator.css.interfaces",
            "collective.validator.css.interfaces.interfaces",
            "collective.validator.css.tests",
            "collective.validator.css.tests.test_plone_validation"
        ],
        "version": "1.0.2beta"
    },
    "collective.validator.xhtmlstrict": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.validator",
            "collective.validator.xhtmlStrict",
            "collective.validator.xhtmlStrict.adapter",
            "collective.validator.xhtmlStrict.config",
            "collective.validator.xhtmlStrict.interfaces",
            "collective.validator.xhtmlStrict.interfaces.interfaces",
            "collective.validator.xhtmlStrict.tests",
            "collective.validator.xhtmlStrict.tests.test_plone_validation"
        ],
        "version": "1.2.0"
    },
    "collective.validator.xhtmltransitional": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.validator",
            "collective.validator.xhtmlTransitional",
            "collective.validator.xhtmlTransitional.adapter",
            "collective.validator.xhtmlTransitional.config",
            "collective.validator.xhtmlTransitional.interfaces",
            "collective.validator.xhtmlTransitional.interfaces.interfaces",
            "collective.validator.xhtmlTransitional.tests",
            "collective.validator.xhtmlTransitional.tests.test_plone_validation"
        ],
        "version": "1.0.2beta"
    },
    "collective.vaporisation": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.vaporisation",
            "collective.vaporisation.adapter",
            "collective.vaporisation.browser",
            "collective.vaporisation.browser.old_search",
            "collective.vaporisation.browser.search",
            "collective.vaporisation.config",
            "collective.vaporisation.events",
            "collective.vaporisation.interfaces",
            "collective.vaporisation.portlets",
            "collective.vaporisation.portlets.customizabletagcloudportlet",
            "collective.vaporisation.tests",
            "collective.vaporisation.tests.base",
            "collective.vaporisation.tests.base_customizabletagcloudportlet",
            "collective.vaporisation.tests.test_customizabletagcloudportlet",
            "collective.vaporisation.tests.test_doctest",
            "collective.vaporisation.vocabularies"
        ],
        "version": "1.3.7"
    },
    "collective.vdexvocabulary": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.vdexvocabulary",
            "collective.vdexvocabulary.meta",
            "collective.vdexvocabulary.term",
            "collective.vdexvocabulary.tests",
            "collective.vdexvocabulary.treevocabulary",
            "collective.vdexvocabulary.vocabulary"
        ],
        "version": "0.2.2"
    },
    "collective.venue": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.venue",
            "collective.venue.behaviors",
            "collective.venue.browser",
            "collective.venue.browser.controlpanel",
            "collective.venue.browser.locationsearch",
            "collective.venue.browser.venue",
            "collective.venue.browser.venuetile",
            "collective.venue.eventaccessor",
            "collective.venue.indexer",
            "collective.venue.interfaces",
            "collective.venue.setuphandlers",
            "collective.venue.upgrades",
            "collective.venue.utils",
            "collective.venue.vocabularies"
        ],
        "version": "3.1.1"
    },
    "collective.videoanysurfer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.videoanysurfer",
            "collective.videoanysurfer.browser",
            "collective.videoanysurfer.browser.interfaces",
            "collective.videoanysurfer.browser.jwplayer",
            "collective.videoanysurfer.browser.link_view",
            "collective.videoanysurfer.browser.nomensa",
            "collective.videoanysurfer.browser.vocabulary",
            "collective.videoanysurfer.i18n",
            "collective.videoanysurfer.testing",
            "collective.videoanysurfer.tests",
            "collective.videoanysurfer.tests.base",
            "collective.videoanysurfer.tests.test_setup",
            "collective.videoanysurfer.upgrades",
            "collective.videoanysurfer.video"
        ],
        "version": "1.0.8"
    },
    "collective.videolink": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.videolink",
            "collective.videolink.browser",
            "collective.videolink.browser.link",
            "collective.videolink.indexers",
            "collective.videolink.setuphandlers",
            "collective.videolink.testifaces",
            "collective.videolink.tests",
            "collective.videolink.upgrades",
            "collective.videolink.utility",
            "collective.videolink.videoembedproviders",
            "collective.videolink.videoembedproviders.bliptv",
            "collective.videolink.videoembedproviders.viddler",
            "collective.videolink.videoembedproviders.youtube"
        ],
        "version": "3.0a5"
    },
    "collective.viewlet.banner": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.viewlet",
            "collective.viewlet.banner",
            "collective.viewlet.banner.banner_tool",
            "collective.viewlet.banner.tests"
        ],
        "version": "0.1a"
    },
    "collective.viewlet.links": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.viewlet",
            "collective.viewlet.links",
            "collective.viewlet.links.Extensions",
            "collective.viewlet.links.Extensions.Install",
            "collective.viewlet.links.annotations",
            "collective.viewlet.links.browser",
            "collective.viewlet.links.browser.edit",
            "collective.viewlet.links.browser.interfaces",
            "collective.viewlet.links.browser.viewlets",
            "collective.viewlet.links.config",
            "collective.viewlet.links.interfaces",
            "collective.viewlet.links.setuphandlers",
            "collective.viewlet.links.tests",
            "collective.viewlet.links.tests.base",
            "collective.viewlet.links.tests.test_doctests"
        ],
        "version": "0.2rc1"
    },
    "collective.viewlet.navbar": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.viewlet",
            "collective.viewlet.navbar",
            "collective.viewlet.navbar.navbar",
            "collective.viewlet.navbar.tests"
        ],
        "version": "0.1"
    },
    "collective.viewlet.pythonscript": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.viewlet",
            "collective.viewlet.pythonscript",
            "collective.viewlet.pythonscript.browser",
            "collective.viewlet.pythonscript.browser.default_listing",
            "collective.viewlet.pythonscript.browser.edit",
            "collective.viewlet.pythonscript.browser.viewlet",
            "collective.viewlet.pythonscript.interfaces",
            "collective.viewlet.pythonscript.schema",
            "collective.viewlet.pythonscript.schema.schema",
            "collective.viewlet.pythonscript.schema.vocabulary",
            "collective.viewlet.pythonscript.testing",
            "collective.viewlet.pythonscript.tests",
            "collective.viewlet.pythonscript.tests.base",
            "collective.viewlet.pythonscript.tests.test_setup",
            "collective.viewlet.pythonscript.tests.test_viewlet"
        ],
        "version": "0.1"
    },
    "collective.viewlet.references": {
        "cmdline": [],
        "modules": [],
        "version": "0.8"
    },
    "collective.viewportletmanager": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.viewportletmanager",
            "collective.viewportletmanager.browser",
            "collective.viewportletmanager.browser.editmanager",
            "collective.viewportletmanager.browser.interfaces",
            "collective.viewportletmanager.browser.manage",
            "collective.viewportletmanager.browser.traversal",
            "collective.viewportletmanager.config",
            "collective.viewportletmanager.interfaces",
            "collective.viewportletmanager.manager",
            "collective.viewportletmanager.portletcontext",
            "collective.viewportletmanager.retriever",
            "collective.viewportletmanager.setuphandlers",
            "collective.viewportletmanager.testing",
            "collective.viewportletmanager.tests",
            "collective.viewportletmanager.tests.common",
            "collective.viewportletmanager.tests.test_browser",
            "collective.viewportletmanager.tests.test_portletcontext",
            "collective.viewportletmanager.tests.test_portletretriever",
            "collective.viewportletmanager.tests.test_traversal",
            "collective.viewportletmanager.tests.test_viewportletsmanagerrenderer"
        ],
        "version": "1.0"
    },
    "collective.virtualtreecategories": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.virtualtreecategories",
            "collective.virtualtreecategories.browser",
            "collective.virtualtreecategories.browser.controlpanel",
            "collective.virtualtreecategories.browser.interfaces",
            "collective.virtualtreecategories.config",
            "collective.virtualtreecategories.dexterity",
            "collective.virtualtreecategories.dexterity.interfaces",
            "collective.virtualtreecategories.dexterity.widget",
            "collective.virtualtreecategories.extender",
            "collective.virtualtreecategories.interfaces",
            "collective.virtualtreecategories.migration",
            "collective.virtualtreecategories.setuphandlers",
            "collective.virtualtreecategories.storage",
            "collective.virtualtreecategories.testing",
            "collective.virtualtreecategories.tests",
            "collective.virtualtreecategories.tests.tests",
            "collective.virtualtreecategories.widget"
        ],
        "version": "0.3.3"
    },
    "collective.volunteer": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.volunteer",
            "collective.volunteer.browser",
            "collective.volunteer.browser.export",
            "collective.volunteer.browser.volunteerday",
            "collective.volunteer.config",
            "collective.volunteer.content",
            "collective.volunteer.content.interfaces",
            "collective.volunteer.content.volunteerday",
            "collective.volunteer.tests",
            "collective.volunteer.validators"
        ],
        "version": "1.03"
    },
    "collective.warmup": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.warmup",
            "collective.warmup.browser",
            "collective.warmup.checker",
            "collective.warmup.commands",
            "collective.warmup.config",
            "collective.warmup.event"
        ],
        "version": "1.2"
    },
    "collective.wasthisuseful": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.wasthisuseful",
            "collective.wasthisuseful.adapters",
            "collective.wasthisuseful.browser",
            "collective.wasthisuseful.browser.controlpanel",
            "collective.wasthisuseful.browser.viewlets",
            "collective.wasthisuseful.browser.views",
            "collective.wasthisuseful.browser.views.formparser",
            "collective.wasthisuseful.browser.views.settings",
            "collective.wasthisuseful.config",
            "collective.wasthisuseful.event",
            "collective.wasthisuseful.handlers",
            "collective.wasthisuseful.interfaces",
            "collective.wasthisuseful.tests"
        ],
        "version": "1.0"
    },
    "collective.watcherlist": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.watcherlist",
            "collective.watcherlist.actions",
            "collective.watcherlist.actions.vocabularies",
            "collective.watcherlist.actions.watching",
            "collective.watcherlist.browser",
            "collective.watcherlist.event",
            "collective.watcherlist.i18n",
            "collective.watcherlist.interfaces",
            "collective.watcherlist.mailer",
            "collective.watcherlist.sample",
            "collective.watcherlist.sample.browser",
            "collective.watcherlist.sample.eventhandlers",
            "collective.watcherlist.tests",
            "collective.watcherlist.tests.test_integration",
            "collective.watcherlist.tests.test_unit",
            "collective.watcherlist.triggers_handlers",
            "collective.watcherlist.utils",
            "collective.watcherlist.watchers"
        ],
        "version": "3.0"
    },
    "collective.weather": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.weather",
            "collective.weather.Extensions",
            "collective.weather.Extensions.Install",
            "collective.weather.browser",
            "collective.weather.browser.current_weather",
            "collective.weather.config",
            "collective.weather.controlpanel",
            "collective.weather.interfaces",
            "collective.weather.portlets",
            "collective.weather.portlets.weather",
            "collective.weather.testing",
            "collective.weather.tests",
            "collective.weather.tests.named_utility",
            "collective.weather.tests.test_controlpanel",
            "collective.weather.tests.test_doctest",
            "collective.weather.tests.test_setup",
            "collective.weather.tests.test_vocabularies",
            "collective.weather.tests.test_weather_portlet",
            "collective.weather.tests.test_weather_utility",
            "collective.weather.utilities",
            "collective.weather.utilities.forecastio",
            "collective.weather.utilities.wunderground",
            "collective.weather.utilities.yahoo",
            "collective.weather.viewlet",
            "collective.weather.vocabularies",
            "collective.weather.weather_utility"
        ],
        "version": "1.0a4"
    },
    "collective.webrichtlijnen": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.webrichtlijnen",
            "collective.webrichtlijnen.browser",
            "collective.webrichtlijnen.browser.interfaces",
            "collective.webrichtlijnen.browser.viewlets",
            "collective.webrichtlijnen.setuphandlers",
            "collective.webrichtlijnen.tests",
            "collective.webrichtlijnen.tests.tests"
        ],
        "version": "1.1.2"
    },
    "collective.weightedportlets": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.weightedportlets",
            "collective.weightedportlets.browser",
            "collective.weightedportlets.editmanager",
            "collective.weightedportlets.exportimport",
            "collective.weightedportlets.interfaces",
            "collective.weightedportlets.retriever",
            "collective.weightedportlets.testing",
            "collective.weightedportlets.tests",
            "collective.weightedportlets.tests.test_doctest",
            "collective.weightedportlets.utils"
        ],
        "version": "1.1"
    },
    "collective.wfautodoc": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.wfautodoc",
            "collective.wfautodoc.generator",
            "collective.wfautodoc.views"
        ],
        "version": "1.1"
    },
    "collective.wfcomment": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.wfcomment",
            "collective.wfcomment.controlpanel",
            "collective.wfcomment.interfaces",
            "collective.wfcomment.testing",
            "collective.wfcomment.tests",
            "collective.wfcomment.tests.test_robot",
            "collective.wfcomment.upgrades",
            "collective.wfcomment.wfcomment"
        ],
        "version": "2.1.5"
    },
    "collective.wfeffectiverange": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.wfeffectiverange",
            "collective.wfeffectiverange.behaviors",
            "collective.wfeffectiverange.browser",
            "collective.wfeffectiverange.browser.views",
            "collective.wfeffectiverange.indexers",
            "collective.wfeffectiverange.setuphandlers",
            "collective.wfeffectiverange.subscribers",
            "collective.wfeffectiverange.upgrades",
            "collective.wfeffectiverange.vocabulary"
        ],
        "version": "2.0.0"
    },
    "collective.wfform": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.wfform",
            "collective.wfform.browser",
            "collective.wfform.browser.form",
            "collective.wfform.browser.interfaces",
            "collective.wfform.config",
            "collective.wfform.interfaces",
            "collective.wfform.tests",
            "collective.wfform.tests.base",
            "collective.wfform.tests.testMethods",
            "collective.wfform.tests.testSetup",
            "collective.wfform.tests.utils",
            "collective.wfform.tests.utils.dummy_class",
            "collective.wfform.tests.utils.dummy_schema"
        ],
        "version": "1.0-a1"
    },
    "collective.whoiswho": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.whoiswho",
            "collective.whoiswho.browser",
            "collective.whoiswho.browser.interfaces",
            "collective.whoiswho.browser.views"
        ],
        "version": "1.0"
    },
    "collective.workflowed": {
        "cmdline": [],
        "modules": [],
        "version": "1.1"
    },
    "collective.workspace": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.workspace",
            "collective.workspace.browser",
            "collective.workspace.catalog",
            "collective.workspace.events",
            "collective.workspace.interfaces",
            "collective.workspace.membership",
            "collective.workspace.pas",
            "collective.workspace.setuphandlers",
            "collective.workspace.testing",
            "collective.workspace.tests",
            "collective.workspace.tests.test_example",
            "collective.workspace.tests.test_robot",
            "collective.workspace.tests.test_workspace",
            "collective.workspace.vocabs",
            "collective.workspace.workspace"
        ],
        "version": "1.3"
    },
    "collective.wowcharacter": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.wowcharacter",
            "collective.wowcharacter.browser",
            "collective.wowcharacter.browser.activity_api",
            "collective.wowcharacter.browser.armory_api",
            "collective.wowcharacter.browser.wowcharacter",
            "collective.wowcharacter.config",
            "collective.wowcharacter.content",
            "collective.wowcharacter.content.wowcharacter",
            "collective.wowcharacter.interfaces",
            "collective.wowcharacter.interfaces.wowcharacter",
            "collective.wowcharacter.portlets",
            "collective.wowcharacter.portlets.realmstatus_api",
            "collective.wowcharacter.portlets.wowrealmstatus",
            "collective.wowcharacter.tests",
            "collective.wowcharacter.tests.base",
            "collective.wowcharacter.tests.test_activity",
            "collective.wowcharacter.tests.test_armory",
            "collective.wowcharacter.tests.test_realmstatus",
            "collective.wowcharacter.tests.test_wowcharacter"
        ],
        "version": "0.5"
    },
    "collective.wowlichking": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.wowlichking",
            "collective.wowlichking.browser",
            "collective.wowlichking.browser.interfaces",
            "collective.wowlichking.browser.viewlets",
            "collective.wowlichking.setuphandlers",
            "collective.wowlichking.tests",
            "collective.wowlichking.tests.base",
            "collective.wowlichking.tests.test_armory"
        ],
        "version": "0.5"
    },
    "collective.wpadmin": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.wpadmin",
            "collective.wpadmin.i18n",
            "collective.wpadmin.pages",
            "collective.wpadmin.pages.dashboard",
            "collective.wpadmin.pages.edit",
            "collective.wpadmin.pages.editcomments",
            "collective.wpadmin.pages.edittags",
            "collective.wpadmin.pages.page",
            "collective.wpadmin.pages.redirect",
            "collective.wpadmin.pages.upload",
            "collective.wpadmin.settings",
            "collective.wpadmin.testing",
            "collective.wpadmin.tests",
            "collective.wpadmin.tests.base",
            "collective.wpadmin.tests.test_pages_page",
            "collective.wpadmin.tests.test_utils",
            "collective.wpadmin.tests.utils",
            "collective.wpadmin.utils",
            "collective.wpadmin.widgets",
            "collective.wpadmin.widgets.addbox",
            "collective.wpadmin.widgets.draft",
            "collective.wpadmin.widgets.quickpress",
            "collective.wpadmin.widgets.recentcomments",
            "collective.wpadmin.widgets.summary",
            "collective.wpadmin.widgets.widget"
        ],
        "version": "1.0a3"
    },
    "collective.wtf": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.wtf",
            "collective.wtf.browser",
            "collective.wtf.browser.roleinfo",
            "collective.wtf.browser.sanitycheck",
            "collective.wtf.browser.tocsv",
            "collective.wtf.config",
            "collective.wtf.deserializer",
            "collective.wtf.exportimport",
            "collective.wtf.interfaces",
            "collective.wtf.serializer",
            "collective.wtf.tests",
            "collective.wtf.tests.test_exportimport",
            "collective.wtf.tests.test_parsing",
            "collective.wtf.utils",
            "collective.wtf.verify"
        ],
        "version": "1.0b9"
    },
    "collective.wtforms": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.wtforms",
            "collective.wtforms.testing",
            "collective.wtforms.tests",
            "collective.wtforms.tests.test_form",
            "collective.wtforms.views"
        ],
        "version": "1.0a6"
    },
    "collective.wysiwyg-biografy": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.wysiwyg_biografy",
            "collective.wysiwyg_biografy.browser",
            "collective.wysiwyg_biografy.browser.personal_information",
            "collective.wysiwyg_biografy.interfaces"
        ],
        "version": "0.2.1"
    },
    "collective.xdv": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.xdv",
            "collective.xdv.browser",
            "collective.xdv.header",
            "collective.xdv.interfaces",
            "collective.xdv.tests",
            "collective.xdv.tests.test_transform",
            "collective.xdv.transform",
            "collective.xdv.utils"
        ],
        "version": "1.0rc11"
    },
    "collective.xmltestreport": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.xmltestreport",
            "collective.xmltestreport.formatter",
            "collective.xmltestreport.recipe",
            "collective.xmltestreport.runner",
            "collective.xmltestreport.utils"
        ],
        "version": "1.3.4"
    },
    "collective.xmpp.chat": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.xmpp",
            "collective.xmpp.chat",
            "collective.xmpp.chat.browser",
            "collective.xmpp.chat.browser.interfaces",
            "collective.xmpp.chat.browser.userinfo",
            "collective.xmpp.chat.browser.viewlet",
            "collective.xmpp.chat.testing",
            "collective.xmpp.chat.tests",
            "collective.xmpp.chat.tests.test_robot",
            "collective.xmpp.chat.upgrade",
            "collective.xmpp.chat.upgrade.v2",
            "collective.xmpp.chat.upgrade.v3",
            "collective.xmpp.chat.upgrade.v4",
            "collective.xmpp.chat.upgrade.v5",
            "collective.xmpp.chat.upgrade.v6"
        ],
        "version": "0.3.1"
    },
    "collective.xmpp.core": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.xmpp",
            "collective.xmpp.core",
            "collective.xmpp.core.browser",
            "collective.xmpp.core.browser.controlpanel",
            "collective.xmpp.core.browser.loader",
            "collective.xmpp.core.browser.transforms",
            "collective.xmpp.core.browser.userinfo",
            "collective.xmpp.core.client",
            "collective.xmpp.core.component",
            "collective.xmpp.core.dbconfig",
            "collective.xmpp.core.decorators",
            "collective.xmpp.core.exceptions",
            "collective.xmpp.core.httpb",
            "collective.xmpp.core.interfaces",
            "collective.xmpp.core.protocols",
            "collective.xmpp.core.reactor",
            "collective.xmpp.core.settings",
            "collective.xmpp.core.storage",
            "collective.xmpp.core.subscribers",
            "collective.xmpp.core.subscribers.startup",
            "collective.xmpp.core.subscribers.user_management",
            "collective.xmpp.core.testing",
            "collective.xmpp.core.tests",
            "collective.xmpp.core.tests.test_admin",
            "collective.xmpp.core.tests.test_bosh",
            "collective.xmpp.core.tests.test_chat",
            "collective.xmpp.core.tests.test_clients",
            "collective.xmpp.core.tests.test_component",
            "collective.xmpp.core.tests.test_pubsub",
            "collective.xmpp.core.tests.test_setup",
            "collective.xmpp.core.tests.test_user_management",
            "collective.xmpp.core.tests.test_vcard",
            "collective.xmpp.core.upgrades",
            "collective.xmpp.core.upgrades.v2",
            "collective.xmpp.core.utils",
            "collective.xmpp.core.utils.setup",
            "collective.xmpp.core.utils.users"
        ],
        "version": "0.3"
    },
    "collective.youtube-rst": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "collective.z3cform.addablechoice": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cform",
            "collective.z3cform.addablechoice",
            "collective.z3cform.addablechoice.interfaces",
            "collective.z3cform.addablechoice.tests",
            "collective.z3cform.addablechoice.widget"
        ],
        "version": "0.6"
    },
    "collective.z3cform.chosen": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cform",
            "collective.z3cform.chosen",
            "collective.z3cform.chosen.app_config",
            "collective.z3cform.chosen.browser",
            "collective.z3cform.chosen.browser.demo",
            "collective.z3cform.chosen.browser.demo.demo",
            "collective.z3cform.chosen.interfaces",
            "collective.z3cform.chosen.migrations",
            "collective.z3cform.chosen.migrations.v11",
            "collective.z3cform.chosen.setuphandlers",
            "collective.z3cform.chosen.testing",
            "collective.z3cform.chosen.tests",
            "collective.z3cform.chosen.tests.base",
            "collective.z3cform.chosen.tests.globals",
            "collective.z3cform.chosen.tests.test_doctests",
            "collective.z3cform.chosen.tests.test_setup",
            "collective.z3cform.chosen.widget"
        ],
        "version": "1.2.1"
    },
    "collective.z3cform.colorpicker": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cform",
            "collective.z3cform.colorpicker",
            "collective.z3cform.colorpicker.colorpicker",
            "collective.z3cform.colorpicker.colorpickeralpha",
            "collective.z3cform.colorpicker.demo",
            "collective.z3cform.colorpicker.demo.browser"
        ],
        "version": "1.4"
    },
    "collective.z3cform.datagridfield": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cform",
            "collective.z3cform.datagridfield",
            "collective.z3cform.datagridfield.autoform",
            "collective.z3cform.datagridfield.blockdatagridfield",
            "collective.z3cform.datagridfield.converters",
            "collective.z3cform.datagridfield.datagridfield",
            "collective.z3cform.datagridfield.interfaces",
            "collective.z3cform.datagridfield.registry",
            "collective.z3cform.datagridfield.row",
            "collective.z3cform.datagridfield.supermodel",
            "collective.z3cform.datagridfield.testing",
            "collective.z3cform.datagridfield.tests"
        ],
        "version": "1.2"
    },
    "collective.z3cform.datagridfield-demo": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cform",
            "collective.z3cform.datagridfield_demo",
            "collective.z3cform.datagridfield_demo.browser",
            "collective.z3cform.datagridfield_demo.browser.menu",
            "collective.z3cform.datagridfield_demo.browser.simple",
            "collective.z3cform.datagridfield_demo.browser.simple_object"
        ],
        "version": "0.6"
    },
    "collective.z3cform.datepicker": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cform",
            "collective.z3cform.datepicker",
            "collective.z3cform.datepicker.interfaces",
            "collective.z3cform.datepicker.tests",
            "collective.z3cform.datepicker.widget"
        ],
        "version": "0.1rc7"
    },
    "collective.z3cform.datetimewidget": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cform",
            "collective.z3cform.datetimewidget",
            "collective.z3cform.datetimewidget.converter",
            "collective.z3cform.datetimewidget.i18n",
            "collective.z3cform.datetimewidget.interfaces",
            "collective.z3cform.datetimewidget.setuphandlers",
            "collective.z3cform.datetimewidget.tests",
            "collective.z3cform.datetimewidget.widget",
            "collective.z3cform.datetimewidget.widget_date",
            "collective.z3cform.datetimewidget.widget_datetime",
            "collective.z3cform.datetimewidget.widget_monthyear"
        ],
        "version": "1.2.7"
    },
    "collective.z3cform.filewidget": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cform",
            "collective.z3cform.filewidget",
            "collective.z3cform.filewidget.converter",
            "collective.z3cform.filewidget.file",
            "collective.z3cform.filewidget.interfaces",
            "collective.z3cform.filewidget.tests"
        ],
        "version": "0.1"
    },
    "collective.z3cform.grok": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cform",
            "collective.z3cform.grok",
            "collective.z3cform.grok.grok",
            "collective.z3cform.grok.tests",
            "collective.z3cform.grok.tests.base",
            "collective.z3cform.grok.tests.globals",
            "collective.z3cform.grok.tests.test_doctests",
            "collective.z3cform.grok.tests.user_testcase",
            "collective.z3cform.grok.tests.utils"
        ],
        "version": "1.15"
    },
    "collective.z3cform.html5widgets": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cform",
            "collective.z3cform.html5widgets",
            "collective.z3cform.html5widgets.base",
            "collective.z3cform.html5widgets.example",
            "collective.z3cform.html5widgets.example.html5widgets",
            "collective.z3cform.html5widgets.layer",
            "collective.z3cform.html5widgets.upgrades",
            "collective.z3cform.html5widgets.widget_color",
            "collective.z3cform.html5widgets.widget_contenteditable",
            "collective.z3cform.html5widgets.widget_datalist",
            "collective.z3cform.html5widgets.widget_date",
            "collective.z3cform.html5widgets.widget_datetime",
            "collective.z3cform.html5widgets.widget_datetimelocal",
            "collective.z3cform.html5widgets.widget_email",
            "collective.z3cform.html5widgets.widget_month",
            "collective.z3cform.html5widgets.widget_number",
            "collective.z3cform.html5widgets.widget_password",
            "collective.z3cform.html5widgets.widget_range",
            "collective.z3cform.html5widgets.widget_search",
            "collective.z3cform.html5widgets.widget_tel",
            "collective.z3cform.html5widgets.widget_time",
            "collective.z3cform.html5widgets.widget_url",
            "collective.z3cform.html5widgets.widget_week"
        ],
        "version": "0.1"
    },
    "collective.z3cform.keywordwidget": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cform",
            "collective.z3cform.keywordwidget",
            "collective.z3cform.keywordwidget.field",
            "collective.z3cform.keywordwidget.handler",
            "collective.z3cform.keywordwidget.interfaces",
            "collective.z3cform.keywordwidget.testing",
            "collective.z3cform.keywordwidget.tests",
            "collective.z3cform.keywordwidget.widget"
        ],
        "version": "1.3"
    },
    "collective.z3cform.kss": {
        "cmdline": [],
        "modules": [],
        "version": "0.1b1dev"
    },
    "collective.z3cform.mapwidget": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cform",
            "collective.z3cform.mapwidget",
            "collective.z3cform.mapwidget.demo",
            "collective.z3cform.mapwidget.demo.browser",
            "collective.z3cform.mapwidget.widget"
        ],
        "version": "2.1"
    },
    "collective.z3cform.norobots": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cform",
            "collective.z3cform.norobots",
            "collective.z3cform.norobots.browser",
            "collective.z3cform.norobots.browser.controlpanel",
            "collective.z3cform.norobots.browser.interfaces",
            "collective.z3cform.norobots.browser.norobots",
            "collective.z3cform.norobots.i18n",
            "collective.z3cform.norobots.plone_forms",
            "collective.z3cform.norobots.plone_forms.constraints",
            "collective.z3cform.norobots.plone_forms.contact_info",
            "collective.z3cform.norobots.testing",
            "collective.z3cform.norobots.tests",
            "collective.z3cform.norobots.tests.test_docs",
            "collective.z3cform.norobots.tests.test_install",
            "collective.z3cform.norobots.tests.utils",
            "collective.z3cform.norobots.upgrades",
            "collective.z3cform.norobots.upgrades.upgrades",
            "collective.z3cform.norobots.validator",
            "collective.z3cform.norobots.widget"
        ],
        "version": "1.4.4"
    },
    "collective.z3cform.phonewidget": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cform",
            "collective.z3cform.phonewidget",
            "collective.z3cform.phonewidget.browser",
            "collective.z3cform.phonewidget.browser.widget",
            "collective.z3cform.phonewidget.interfaces"
        ],
        "version": "1.0"
    },
    "collective.z3cform.quantitywidget": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cform",
            "collective.z3cform.quantitywidget",
            "collective.z3cform.quantitywidget.browser",
            "collective.z3cform.quantitywidget.browser.widget",
            "collective.z3cform.quantitywidget.interfaces"
        ],
        "version": "1.0"
    },
    "collective.z3cform.rolefield": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cform",
            "collective.z3cform.rolefield",
            "collective.z3cform.rolefield.field",
            "collective.z3cform.rolefield.interfaces",
            "collective.z3cform.rolefield.localrolefield",
            "collective.z3cform.rolefield.statefulllocalrolesfield",
            "collective.z3cform.rolefield.statemapping",
            "collective.z3cform.rolefield.testing",
            "collective.z3cform.rolefield.tests",
            "collective.z3cform.rolefield.tests.container",
            "collective.z3cform.rolefield.tests.test_localrolefield",
            "collective.z3cform.rolefield.tests.test_statefulllocalrolesfield",
            "collective.z3cform.rolefield.tests.test_utils",
            "collective.z3cform.rolefield.utils"
        ],
        "version": "0.4"
    },
    "collective.z3cform.select2": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cform",
            "collective.z3cform.select2",
            "collective.z3cform.select2.browser",
            "collective.z3cform.select2.browser.select2widget",
            "collective.z3cform.select2.interfaces",
            "collective.z3cform.select2.testing",
            "collective.z3cform.select2.tests",
            "collective.z3cform.select2.tests.test_robot",
            "collective.z3cform.select2.tests.test_setup",
            "collective.z3cform.select2.widget",
            "collective.z3cform.select2.widget.widget"
        ],
        "version": "1.3.4"
    },
    "collective.z3cform.widgets": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cform",
            "collective.z3cform.widgets",
            "collective.z3cform.widgets.enhancedtextlines",
            "collective.z3cform.widgets.interfaces",
            "collective.z3cform.widgets.multicontent_search_widget",
            "collective.z3cform.widgets.simple_rich_text",
            "collective.z3cform.widgets.testing",
            "collective.z3cform.widgets.tests",
            "collective.z3cform.widgets.tests.demo",
            "collective.z3cform.widgets.tests.test_enhancedtextlines",
            "collective.z3cform.widgets.tests.test_multicontentsearchwidget",
            "collective.z3cform.widgets.tests.test_robot",
            "collective.z3cform.widgets.tests.test_setup",
            "collective.z3cform.widgets.tests.test_simple_rich_text",
            "collective.z3cform.widgets.tests.test_token_input_widget",
            "collective.z3cform.widgets.tests.test_upgrades",
            "collective.z3cform.widgets.token_input_widget",
            "collective.z3cform.widgets.upgrades"
        ],
        "version": "1.0rc1"
    },
    "collective.z3cform.wizard": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cform",
            "collective.z3cform.wizard",
            "collective.z3cform.wizard.autowizard",
            "collective.z3cform.wizard.i18n",
            "collective.z3cform.wizard.interfaces",
            "collective.z3cform.wizard.tests",
            "collective.z3cform.wizard.utils",
            "collective.z3cform.wizard.wizard"
        ],
        "version": "1.4.8"
    },
    "collective.z3cinspector": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.z3cinspector",
            "collective.z3cinspector.config",
            "collective.z3cinspector.interfaces",
            "collective.z3cinspector.registry",
            "collective.z3cinspector.table",
            "collective.z3cinspector.utils",
            "collective.z3cinspector.views"
        ],
        "version": "1.1"
    },
    "collective.zamqp": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.zamqp",
            "collective.zamqp.cli",
            "collective.zamqp.connection",
            "collective.zamqp.consumer",
            "collective.zamqp.datatypes",
            "collective.zamqp.handlers",
            "collective.zamqp.interfaces",
            "collective.zamqp.keepalive",
            "collective.zamqp.message",
            "collective.zamqp.producer",
            "collective.zamqp.publisher",
            "collective.zamqp.reload",
            "collective.zamqp.serializers",
            "collective.zamqp.server",
            "collective.zamqp.testing",
            "collective.zamqp.testing_utilities",
            "collective.zamqp.tests",
            "collective.zamqp.tests.test_layer",
            "collective.zamqp.tests.test_pickle_serializer",
            "collective.zamqp.tests.test_plone_transaction",
            "collective.zamqp.transactionmanager",
            "collective.zamqp.utils"
        ],
        "version": "0.16.0"
    },
    "collective.zestreleaser.aftercheckoutaction": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.zestreleaser",
            "collective.zestreleaser.aftercheckoutaction"
        ],
        "version": "0.1.0"
    },
    "collective.zfile": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "collective.zipfiletransport": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.zipfiletransport",
            "collective.zipfiletransport.Extensions",
            "collective.zipfiletransport.browser",
            "collective.zipfiletransport.browser.interfaces",
            "collective.zipfiletransport.browser.widgets",
            "collective.zipfiletransport.browser.zipexport",
            "collective.zipfiletransport.browser.zipfiletransportprefs",
            "collective.zipfiletransport.browser.zipimport",
            "collective.zipfiletransport.config",
            "collective.zipfiletransport.interfaces",
            "collective.zipfiletransport.schemas",
            "collective.zipfiletransport.tests",
            "collective.zipfiletransport.tests.base",
            "collective.zipfiletransport.tests.test_utility",
            "collective.zipfiletransport.utilities",
            "collective.zipfiletransport.utilities.interfaces",
            "collective.zipfiletransport.utilities.utils"
        ],
        "version": "3.2.3"
    },
    "collective.zodbbrowser": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "collective.zombiedoctesting": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.zombiedoctesting",
            "collective.zombiedoctesting.tests"
        ],
        "version": "1.1.0"
    },
    "collective.zoomit": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.zoomit",
            "collective.zoomit.behavior",
            "collective.zoomit.config",
            "collective.zoomit.interfaces",
            "collective.zoomit.tests",
            "collective.zoomit.viewlet"
        ],
        "version": "0.7"
    },
    "collective.zopeedit": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.zopeedit",
            "collective.zopeedit.Plugins",
            "collective.zopeedit.Plugins.homesite",
            "collective.zopeedit.Plugins.homesite5",
            "collective.zopeedit.zopeedit"
        ],
        "version": "1.0.0"
    },
    "collective.zrtresource": {
        "cmdline": [],
        "modules": [
            "collective",
            "collective.zrtresource",
            "collective.zrtresource.tests",
            "collective.zrtresource.zrtresource"
        ],
        "version": "0.1"
    },
    "collector": {
        "cmdline": [],
        "modules": [
            "bs4",
            "bs4.builder",
            "bs4.builder._html5lib",
            "bs4.builder._htmlparser",
            "bs4.builder._lxml",
            "bs4.dammit",
            "bs4.element",
            "bs4.testing",
            "bs4.tests",
            "bs4.tests.test_builder_registry",
            "bs4.tests.test_docs",
            "bs4.tests.test_html5lib",
            "bs4.tests.test_htmlparser",
            "bs4.tests.test_lxml",
            "bs4.tests.test_soup",
            "bs4.tests.test_tree",
            "collector",
            "collector.core",
            "collector.core.collection",
            "collector.core.config",
            "collector.core.controller",
            "collector.core.fields",
            "collector.core.file",
            "collector.core.filter",
            "collector.core.persistence",
            "collector.core.persistence_sql",
            "collector.core.plugin",
            "collector.core.provider",
            "collector.core.schema",
            "collector.core.storage",
            "collector.main",
            "collector.plugins",
            "collector.plugins.boardgamegeek",
            "collector.plugins.csvimport",
            "collector.plugins.trictrac",
            "collector.ui",
            "collector.ui.application",
            "collector.ui.gen",
            "collector.ui.gen.advanced_search",
            "collector.ui.gen.collection_items",
            "collector.ui.gen.dashboard",
            "collector.ui.gen.field_details",
            "collector.ui.gen.file_data",
            "collector.ui.gen.file_selector",
            "collector.ui.gen.fitxa",
            "collector.ui.gen.fitxa_edit",
            "collector.ui.gen.im_export",
            "collector.ui.gen.img_rc",
            "collector.ui.gen.lang_rc",
            "collector.ui.gen.mainWindow",
            "collector.ui.gen.preferences",
            "collector.ui.gen.properties",
            "collector.ui.gen.search_quick",
            "collector.ui.gen.search_results",
            "collector.ui.gen.splash_rc",
            "collector.ui.gen.toolbar",
            "collector.ui.gen.topbar",
            "collector.ui.gen.widget_filter",
            "collector.ui.gen.widget_multivalue",
            "collector.ui.gen.widget_ref",
            "collector.ui.helpers",
            "collector.ui.helpers.customtoolbar",
            "collector.ui.helpers.fields",
            "collector.ui.helpers.filedata",
            "collector.ui.helpers.items",
            "collector.ui.mainwindow",
            "collector.ui.splashscreen",
            "collector.ui.views",
            "collector.ui.views.advanced_search",
            "collector.ui.views.alternatives",
            "collector.ui.views.collection",
            "collector.ui.views.dashboard",
            "collector.ui.views.fitxa",
            "collector.ui.views.fitxa_edit",
            "collector.ui.views.fitxa_new",
            "collector.ui.views.im_export",
            "collector.ui.views.plugincollector_fitxa",
            "collector.ui.views.preferences",
            "collector.ui.views.properties",
            "collector.ui.views.search",
            "collector.ui.workers",
            "collector.ui.workers.search"
        ],
        "version": "0.3"
    },
    "collectors": {
        "cmdline": [],
        "modules": [
            "collectors",
            "collectors.core",
            "collectors.shortcuts",
            "collectors.storage",
            "collectors.storage.excel",
            "collectors.storage.pytables",
            "collectors.test",
            "collectors.test.test_core",
            "collectors.test.test_shortcuts",
            "collectors.test.test_storage_excel",
            "collectors.test.test_storage_pytables"
        ],
        "version": "1.0"
    },
    "collectr": {
        "cmdline": [
            "collect_static"
        ],
        "modules": [
            "collectr",
            "collectr.api",
            "collectr.exceptions",
            "collectr.models",
            "collectr.utils"
        ],
        "version": "0.0.5"
    },
    "collectstupid": {
        "cmdline": [],
        "modules": [
            "collectstupid",
            "collectstupid.management",
            "collectstupid.management.commands",
            "collectstupid.management.commands.collectstupid",
            "collectstupid.storage"
        ],
        "version": "15.11.7"
    },
    "collins-client": {
        "cmdline": [],
        "modules": [
            "collins_client",
            "collins_client.client"
        ],
        "version": "0.1.1"
    },
    "collist": {
        "cmdline": [],
        "modules": [],
        "version": "0.5"
    },
    "collux": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "colly": {
        "cmdline": [],
        "modules": [
            "colly",
            "colly.commands",
            "colly.commands.diff",
            "colly.commands.dummy",
            "colly.commands.format",
            "colly.commands.help",
            "colly.commands.mod",
            "colly.core",
            "colly.exceptions",
            "colly.optbase",
            "colly.test"
        ],
        "version": "0.2.1"
    },
    "colmet": {
        "cmdline": [],
        "modules": [
            "colmet",
            "colmet.collector",
            "colmet.collector.hdf5",
            "colmet.collector.main",
            "colmet.common",
            "colmet.common.backends",
            "colmet.common.backends.base",
            "colmet.common.backends.zeromq",
            "colmet.common.exceptions",
            "colmet.common.job",
            "colmet.common.metrics",
            "colmet.common.metrics.base",
            "colmet.common.metrics.procstats",
            "colmet.common.metrics.taskstats",
            "colmet.common.utils",
            "colmet.node",
            "colmet.node.backends",
            "colmet.node.backends.genetlink",
            "colmet.node.backends.genetlink.genetlink",
            "colmet.node.backends.genetlink.netlink",
            "colmet.node.backends.procstats",
            "colmet.node.backends.taskstats",
            "colmet.node.main",
            "tests",
            "tests.test_metrics_base",
            "tests.test_metrics_procstats",
            "tests.test_metrics_taskstats"
        ],
        "version": "0.5.3"
    },
    "colony": {
        "cmdline": [],
        "modules": [
            "colony",
            "colony.base",
            "colony.base.config",
            "colony.base.decorators",
            "colony.base.exceptions",
            "colony.base.information",
            "colony.base.legacy",
            "colony.base.loggers",
            "colony.base.system",
            "colony.base.test",
            "colony.base.util",
            "colony.config",
            "colony.config.base",
            "colony.libs",
            "colony.libs.aes_util",
            "colony.libs.bank_util",
            "colony.libs.barcode_util",
            "colony.libs.cache_util",
            "colony.libs.call_util",
            "colony.libs.control_util",
            "colony.libs.country_util",
            "colony.libs.crypt_util",
            "colony.libs.encode_util",
            "colony.libs.file_util",
            "colony.libs.gtin_util",
            "colony.libs.host_util",
            "colony.libs.import_util",
            "colony.libs.lazy_util",
            "colony.libs.list_util",
            "colony.libs.logging_util",
            "colony.libs.map_util",
            "colony.libs.math_util",
            "colony.libs.number_util",
            "colony.libs.object_util",
            "colony.libs.observer_util",
            "colony.libs.os_util",
            "colony.libs.path_util",
            "colony.libs.protection_util",
            "colony.libs.quote_util",
            "colony.libs.round_util",
            "colony.libs.scheduling_util",
            "colony.libs.size_util",
            "colony.libs.stack_util",
            "colony.libs.string_buffer_util",
            "colony.libs.string_util",
            "colony.libs.structures_util",
            "colony.libs.test_util",
            "colony.libs.time_util",
            "colony.libs.update_thread_util",
            "colony.libs.version_util",
            "colony.libs.visitor_util",
            "colony.test",
            "colony.test.base",
            "colony.test.base.util_test",
            "colony.test.libs",
            "colony.test.libs.barcode_util_test",
            "colony.test.libs.country_util_test",
            "colony.test.libs.gtin_util_test",
            "colony.test.libs.lazy_util_test",
            "colony.test.libs.map_util_test",
            "colony.test.libs.number_util_test",
            "colony.test.libs.protection_util",
            "colony.test.libs.quote_util_test",
            "colony.test.libs.round_util_test",
            "colony.test.libs.structures_util_test",
            "colony.test.libs.version_util_test"
        ],
        "version": "1.3.26"
    },
    "colony-print": {
        "cmdline": [],
        "modules": [
            "colony_print",
            "colony_print.controllers",
            "colony_print.controllers.base",
            "colony_print.controllers.document",
            "colony_print.controllers.node",
            "colony_print.controllers.printer",
            "colony_print.main",
            "colony_print.node",
            "colony_print.printing",
            "colony_print.printing.binie",
            "colony_print.printing.binie.exceptions",
            "colony_print.printing.binie.system",
            "colony_print.printing.binie.visitor",
            "colony_print.printing.common",
            "colony_print.printing.common.base",
            "colony_print.printing.manager",
            "colony_print.printing.manager.ast",
            "colony_print.printing.manager.exceptions",
            "colony_print.printing.manager.parser",
            "colony_print.printing.manager.system",
            "colony_print.printing.manager.visitor",
            "colony_print.printing.pdf",
            "colony_print.printing.pdf.exceptions",
            "colony_print.printing.pdf.system",
            "colony_print.printing.pdf.visitor"
        ],
        "version": "0.1.4"
    },
    "colonyzer2": {
        "cmdline": [],
        "modules": [
            "colonyzer2",
            "colonyzer2.detectlid",
            "colonyzer2.functions",
            "colonyzer2.parsecolonyzer",
            "colonyzer2.version",
            "scripts",
            "scripts.findAndMerge",
            "scripts.parameteryzer_script",
            "scripts.parametryzer",
            "scripts.parseAndRun",
            "scripts.parseAndRun2",
            "scripts.parseAndRun3"
        ],
        "version": "1.1.20"
    },
    "color": {
        "cmdline": [],
        "modules": [
            "color",
            "color.cli",
            "color.color"
        ],
        "version": "0.1"
    },
    "color-balance": {
        "cmdline": [],
        "modules": [
            "color_balance",
            "color_balance.colorimage",
            "color_balance.histogram_distance",
            "color_balance.histogram_match",
            "color_balance.image_io",
            "color_balance.mask"
        ],
        "version": "0.1.112"
    },
    "color-detection": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "color-helpers": {
        "cmdline": [],
        "modules": [
            "color_helpers",
            "color_helpers.colormap"
        ],
        "version": "0.1"
    },
    "color-me": {
        "cmdline": [],
        "modules": [
            "color_me"
        ],
        "version": "0.0.0"
    },
    "color-ssh": {
        "cmdline": [],
        "modules": [
            "color_ssh",
            "color_ssh.color_cat",
            "color_ssh.color_ssh",
            "color_ssh.setting",
            "color_ssh.setting.color",
            "color_ssh.util",
            "color_ssh.util.util"
        ],
        "version": "0.1.6"
    },
    "color-tol": {
        "cmdline": [],
        "modules": [
            "color_tol",
            "color_tol.funcs"
        ],
        "version": "0.1.1"
    },
    "color-transfer": {
        "cmdline": [],
        "modules": [
            "color_transfer"
        ],
        "version": "0.1"
    },
    "colorama": {
        "cmdline": [],
        "modules": [
            "colorama",
            "colorama.ansi",
            "colorama.ansitowin32",
            "colorama.initialise",
            "colorama.win32",
            "colorama.winterm"
        ],
        "version": "0.3.9"
    },
    "colorbrewer": {
        "cmdline": [],
        "modules": [
            "colorbrewer",
            "colorbrewer.data"
        ],
        "version": "0.1.1"
    },
    "colorcells": {
        "cmdline": [],
        "modules": [
            "colorcells"
        ],
        "version": "0.1.1"
    },
    "colorcet": {
        "cmdline": [],
        "modules": [
            "colorcet"
        ],
        "version": "0.9.1"
    },
    "colorclass": {
        "cmdline": [],
        "modules": [
            "colorclass",
            "colorclass.codes",
            "colorclass.color",
            "colorclass.core",
            "colorclass.parse",
            "colorclass.search",
            "colorclass.toggles",
            "colorclass.windows"
        ],
        "version": "2.2.0"
    },
    "colorclassifier": {
        "cmdline": [],
        "modules": [
            "colorclassifier"
        ],
        "version": "2.0.0"
    },
    "colorconsole": {
        "cmdline": [],
        "modules": [
            "colorconsole",
            "colorconsole.ansi",
            "colorconsole.conemu",
            "colorconsole.terminal",
            "colorconsole.win"
        ],
        "version": "0.7.2"
    },
    "colorcorrect": {
        "cmdline": [],
        "modules": [
            "colorcorrect",
            "colorcorrect.algorithm",
            "colorcorrect.util"
        ],
        "version": "0.6.1"
    },
    "colordesk": {
        "cmdline": [],
        "modules": [
            "colordesk",
            "colordesk.cli",
            "colordesk.core",
            "colordesk.errors",
            "colordesk.server"
        ],
        "version": "0.1.0"
    },
    "colordiffs": {
        "cmdline": [
            "colordiffs"
        ],
        "modules": [
            "colordiffs",
            "colordiffs.ansiformat",
            "colordiffs.cmdline",
            "colordiffs.colordiffs",
            "colordiffs.diff",
            "colordiffs.formats",
            "colordiffs.output",
            "colordiffs.utils"
        ],
        "version": "0.1.8"
    },
    "colorecho": {
        "cmdline": [
            "colorecho"
        ],
        "modules": [
            "colorecho",
            "colorecho.colorecho"
        ],
        "version": "0.1"
    },
    "colored": {
        "cmdline": [],
        "modules": [
            "colored",
            "colored.back",
            "colored.colored",
            "colored.colors",
            "colored.fore",
            "colored.hex",
            "colored.style"
        ],
        "version": "1.3.5"
    },
    "colored-slack-log-handler": {
        "cmdline": [],
        "modules": [
            "colored_slack_log_handler",
            "tests",
            "tests.test_colored_slack_log_handler"
        ],
        "version": "0.0.2"
    },
    "colored-traceback": {
        "cmdline": [],
        "modules": [
            "colored_traceback",
            "colored_traceback.always",
            "colored_traceback.auto",
            "colored_traceback.colored_traceback"
        ],
        "version": "0.3.0"
    },
    "coloredlogger": {
        "cmdline": [],
        "modules": [
            "coloredlogger"
        ],
        "version": "1.3.5"
    },
    "coloredlogs": {
        "cmdline": [],
        "modules": [
            "coloredlogs",
            "coloredlogs.cli",
            "coloredlogs.converter",
            "coloredlogs.demo",
            "coloredlogs.syslog",
            "coloredlogs.tests"
        ],
        "version": "7.0"
    },
    "coloredstring": {
        "cmdline": [],
        "modules": [
            "coloredstring",
            "coloredstring.ColoredString",
            "coloredstring.util",
            "coloredstring.util.Attribute",
            "coloredstring.util.BackgroundColor",
            "coloredstring.util.ForegroundColor",
            "coloredstring.util._protected",
            "coloredstring.util._protected.Color",
            "coloredstring.util._protected.ColorMap"
        ],
        "version": "1.0.0"
    },
    "colorex": {
        "cmdline": [
            "colorex"
        ],
        "modules": [],
        "version": "2.0"
    },
    "colorful": {
        "cmdline": [],
        "modules": [
            "colorful",
            "colorful.ansi",
            "colorful.core",
            "colorful.rgb",
            "colorful.styles",
            "colorful.terminal",
            "colorful.utils"
        ],
        "version": "0.4.0"
    },
    "colorful-hieroglyph-theme": {
        "cmdline": [],
        "modules": [
            "colorful_hieroglyph_theme"
        ],
        "version": "0.1"
    },
    "colorfulprinter": {
        "cmdline": [],
        "modules": [
            "colorfulprinter",
            "colorfulprinter.compat",
            "colorfulprinter.npprint",
            "colorfulprinter.termcolor",
            "tests",
            "tests.test"
        ],
        "version": "0.8.4"
    },
    "colorgram.py": {
        "cmdline": [],
        "modules": [
            "colorgram",
            "colorgram.colorgram"
        ],
        "version": "1.1.0"
    },
    "colorhash": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "colorific": {
        "cmdline": [],
        "modules": [
            "colorific",
            "colorific.config",
            "colorific.palette",
            "colorific.script"
        ],
        "version": "0.3"
    },
    "colorinche": {
        "cmdline": [],
        "modules": [
            "colorinche",
            "colorinche.extensions"
        ],
        "version": "0.0.3"
    },
    "colorise": {
        "cmdline": [],
        "modules": [
            "colorise",
            "colorise.BaseColorManager",
            "colorise.ColorFormatParser",
            "colorise.compat",
            "colorise.decorators",
            "colorise.nix",
            "colorise.nix.ColorManager",
            "colorise.win",
            "colorise.win.ColorManager"
        ],
        "version": "0.1.4"
    },
    "colorit": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "colorize": {
        "cmdline": [],
        "modules": [
            "colorize",
            "colorize.colorize",
            "integration",
            "unit",
            "unit.testColor",
            "unit.testPrinter"
        ],
        "version": "1.0.4"
    },
    "colorize-pinyin": {
        "cmdline": [],
        "modules": [
            "colorize_pinyin"
        ],
        "version": "2.1.1"
    },
    "colorizedlog": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "colorizer": {
        "cmdline": [],
        "modules": [
            "colorizer"
        ],
        "version": "0.1.7"
    },
    "colorizer-py": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "colorlab": {
        "cmdline": [],
        "modules": [
            "colorlab"
        ],
        "version": "0.1"
    },
    "colorlog": {
        "cmdline": [],
        "modules": [
            "colorlog",
            "colorlog.colorlog",
            "colorlog.escape_codes",
            "colorlog.logging"
        ],
        "version": "2.10.0"
    },
    "colorlover": {
        "cmdline": [],
        "modules": [
            "colorlover"
        ],
        "version": "0.2.1"
    },
    "colormap": {
        "cmdline": [],
        "modules": [
            "colormap",
            "colormap.colors",
            "colormap.get_cmap",
            "colormap.xfree86"
        ],
        "version": "1.0.1"
    },
    "colormath": {
        "cmdline": [],
        "modules": [
            "colormath",
            "colormath.chromatic_adaptation",
            "colormath.color_appearance_models",
            "colormath.color_constants",
            "colormath.color_conversions",
            "colormath.color_diff",
            "colormath.color_diff_matrix",
            "colormath.color_exceptions",
            "colormath.color_objects",
            "colormath.density",
            "colormath.density_standards",
            "colormath.spectral_constants"
        ],
        "version": "2.1.1"
    },
    "colorname": {
        "cmdline": [
            "colorname.py"
        ],
        "modules": [],
        "version": "0.4"
    },
    "colorobject": {
        "cmdline": [],
        "modules": [
            "colorobject",
            "colorobject.base_objects",
            "colorobject.colormaps",
            "colorobject.colorobject",
            "colorobject.data",
            "colorobject.discretecolors"
        ],
        "version": "0.8.1"
    },
    "colorops": {
        "cmdline": [],
        "modules": [
            "colorops"
        ],
        "version": "0.1"
    },
    "colorpennester": {
        "cmdline": [],
        "modules": [
            "colorpennester"
        ],
        "version": "1.5.0"
    },
    "colorpicker": {
        "cmdline": [],
        "modules": [
            "colorpicker",
            "colorpicker.QColorBarWidget",
            "colorpicker.QColorPaletteWidget",
            "colorpicker.QColorSetWidget",
            "colorpicker.QHueCircleWidget"
        ],
        "version": "1.1"
    },
    "colorprint": {
        "cmdline": [],
        "modules": [
            "colorprint"
        ],
        "version": "0.1"
    },
    "colorpro": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "colorpy": {
        "cmdline": [],
        "modules": [
            "colorpy",
            "colorpy.blackbody",
            "colorpy.ciexyz",
            "colorpy.colormodels",
            "colorpy.figures",
            "colorpy.illuminants",
            "colorpy.misc",
            "colorpy.plots",
            "colorpy.rayleigh",
            "colorpy.test",
            "colorpy.test_blackbody",
            "colorpy.test_ciexyz",
            "colorpy.test_colormodels",
            "colorpy.test_illuminants",
            "colorpy.test_rayleigh",
            "colorpy.test_thinfilm",
            "colorpy.thinfilm"
        ],
        "version": "0.1.1"
    },
    "colors": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "colors.py": {
        "cmdline": [],
        "modules": [
            "colors",
            "colors.base",
            "colors.primary",
            "colors.rainbow",
            "colors.w3c"
        ],
        "version": "0.2.2"
    },
    "colorscheme": {
        "cmdline": [
            "colorscheme"
        ],
        "modules": [
            "colorscheme",
            "colorscheme.colorscheme"
        ],
        "version": "0.2"
    },
    "colorspacious": {
        "cmdline": [],
        "modules": [
            "colorspacious",
            "colorspacious.basics",
            "colorspacious.ciecam02",
            "colorspacious.comparison",
            "colorspacious.conversion",
            "colorspacious.cvd",
            "colorspacious.gold_values",
            "colorspacious.illuminants",
            "colorspacious.luoetal2006",
            "colorspacious.testing",
            "colorspacious.transform_graph",
            "colorspacious.util",
            "colorspacious.version"
        ],
        "version": "1.1.0"
    },
    "colortable": {
        "cmdline": [],
        "modules": [
            "colortable"
        ],
        "version": "0.3"
    },
    "colortater": {
        "cmdline": [],
        "modules": [
            "colortater",
            "colortater.compat",
            "colortater.gui",
            "colortater.main",
            "colortater.rotator"
        ],
        "version": "0.6.3"
    },
    "colorterm": {
        "cmdline": [],
        "modules": [
            "colorterm",
            "colorterm.colorterm",
            "colorterm.table"
        ],
        "version": "0.3"
    },
    "colorthief": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.1"
    },
    "colortips": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "colortools": {
        "cmdline": [],
        "modules": [
            "colortools",
            "colortools.__meta__",
            "colortools.base"
        ],
        "version": "0.1.2"
    },
    "colortuple": {
        "cmdline": [],
        "modules": [
            "colortuple",
            "colortuple.colortuple"
        ],
        "version": "1.0.2"
    },
    "colorutils": {
        "cmdline": [],
        "modules": [
            "colorutils",
            "colorutils.colorutils",
            "colorutils.convert",
            "colorutils.equality",
            "colorutils.exceptions",
            "colorutils.static"
        ],
        "version": "0.2.1"
    },
    "colorview2d": {
        "cmdline": [],
        "modules": [
            "colorview2d",
            "colorview2d.data",
            "colorview2d.fileloaders",
            "colorview2d.imod",
            "colorview2d.mods",
            "colorview2d.mods.Absolute",
            "colorview2d.mods.Adaptive_Threshold",
            "colorview2d.mods.Crop",
            "colorview2d.mods.Derive",
            "colorview2d.mods.Flip",
            "colorview2d.mods.Log",
            "colorview2d.mods.Median",
            "colorview2d.mods.Rotate",
            "colorview2d.mods.Scale",
            "colorview2d.mods.Smooth",
            "colorview2d.utils",
            "colorview2d.view",
            "test",
            "test.data_test",
            "test.mods_test",
            "test.test_tutorial",
            "test.view_test"
        ],
        "version": "0.6.5"
    },
    "colorweave": {
        "cmdline": [
            "colorweave.py"
        ],
        "modules": [
            "colorweave"
        ],
        "version": "0.3.2"
    },
    "colorworld": {
        "cmdline": [],
        "modules": [
            "colorworld",
            "colorworld.colorworld",
            "colorworld.country"
        ],
        "version": "0.3"
    },
    "colorwrap": {
        "cmdline": [
            "colorwrap.bat"
        ],
        "modules": [
            "colorwrap"
        ],
        "version": "0.1.5"
    },
    "colorz": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "colosseum": {
        "cmdline": [],
        "modules": [
            "colosseum",
            "colosseum.constants",
            "colosseum.declaration",
            "colosseum.engine",
            "colosseum.utils",
            "utils",
            "utils.w3c_update",
            "w3c",
            "w3c.css-flexbox-1",
            "w3c.css-flexbox-1.flex-lines",
            "w3c.css-flexbox-1.flex-lines.test_w3c",
            "w3c.css-flexbox-1.order",
            "w3c.css-flexbox-1.order.test_w3c",
            "w3c.css-flexbox-1.reference",
            "w3c.css-flexbox-1.reference.test_w3c",
            "w3c.css-flexbox-1.test_w3c"
        ],
        "version": "0.1.6"
    },
    "colossus": {
        "cmdline": [],
        "modules": [
            "colossus.test",
            "colossus.test.test_joiner"
        ],
        "version": "0.0.1"
    },
    "colour": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.4"
    },
    "colour-demosaicing": {
        "cmdline": [],
        "modules": [
            "colour_demosaicing",
            "colour_demosaicing.bayer",
            "colour_demosaicing.bayer.demosaicing",
            "colour_demosaicing.bayer.demosaicing.bilinear",
            "colour_demosaicing.bayer.demosaicing.malvar2004",
            "colour_demosaicing.bayer.demosaicing.menon2007",
            "colour_demosaicing.bayer.masks",
            "colour_demosaicing.bayer.mosaicing",
            "colour_demosaicing.bayer.tests",
            "colour_demosaicing.bayer.tests.tests_demosaicing",
            "colour_demosaicing.bayer.tests.tests_demosaicing.tests_bilinear",
            "colour_demosaicing.bayer.tests.tests_demosaicing.tests_malvar2004",
            "colour_demosaicing.bayer.tests.tests_demosaicing.tests_menon2007",
            "colour_demosaicing.bayer.tests.tests_masks",
            "colour_demosaicing.bayer.tests.tests_mosaicing"
        ],
        "version": "0.1.2"
    },
    "colour-hdri": {
        "cmdline": [],
        "modules": [
            "colour_hdri",
            "colour_hdri.calibration",
            "colour_hdri.calibration.absolute_luminance",
            "colour_hdri.calibration.debevec1997",
            "colour_hdri.calibration.tests",
            "colour_hdri.calibration.tests.tests_absolute_luminance",
            "colour_hdri.calibration.tests.tests_debevec1997",
            "colour_hdri.generation",
            "colour_hdri.generation.radiance",
            "colour_hdri.generation.tests",
            "colour_hdri.generation.tests.tests_radiance",
            "colour_hdri.generation.tests.tests_weighting_functions",
            "colour_hdri.generation.weighting_functions",
            "colour_hdri.models",
            "colour_hdri.models.dataset",
            "colour_hdri.models.dataset.dng",
            "colour_hdri.models.dng",
            "colour_hdri.models.rgb",
            "colour_hdri.models.tests",
            "colour_hdri.models.tests.tests_adobe_dng",
            "colour_hdri.models.tests.tests_rgb",
            "colour_hdri.plotting",
            "colour_hdri.plotting.radiance",
            "colour_hdri.plotting.tonemapping",
            "colour_hdri.process",
            "colour_hdri.process.dng",
            "colour_hdri.process.tests",
            "colour_hdri.process.tests.tests_dng",
            "colour_hdri.recovery",
            "colour_hdri.recovery.highlights",
            "colour_hdri.recovery.tests",
            "colour_hdri.recovery.tests.tests_recovery",
            "colour_hdri.sampling",
            "colour_hdri.sampling.grossberg2003",
            "colour_hdri.sampling.tests",
            "colour_hdri.sampling.tests.tests_grossberg2003",
            "colour_hdri.sampling.tests.tests_variance_minimization",
            "colour_hdri.sampling.variance_minimization",
            "colour_hdri.tonemapping",
            "colour_hdri.tonemapping.global_operators",
            "colour_hdri.tonemapping.global_operators.operators",
            "colour_hdri.tonemapping.global_operators.tests",
            "colour_hdri.tonemapping.global_operators.tests.tests_operators",
            "colour_hdri.utilities",
            "colour_hdri.utilities.common",
            "colour_hdri.utilities.exif",
            "colour_hdri.utilities.exposure",
            "colour_hdri.utilities.image",
            "colour_hdri.utilities.tests",
            "colour_hdri.utilities.tests.tests_common",
            "colour_hdri.utilities.tests.tests_exif",
            "colour_hdri.utilities.tests.tests_exposure",
            "colour_hdri.utilities.tests.tests_image"
        ],
        "version": "0.1.2"
    },
    "colour-runner": {
        "cmdline": [],
        "modules": [
            "colour_runner",
            "colour_runner.django_runner",
            "colour_runner.result",
            "colour_runner.runner"
        ],
        "version": "0.0.5"
    },
    "colour-science": {
        "cmdline": [],
        "modules": [
            "colour",
            "colour.adaptation",
            "colour.adaptation.cie1994",
            "colour.adaptation.cmccat2000",
            "colour.adaptation.dataset",
            "colour.adaptation.dataset.cat",
            "colour.adaptation.fairchild1990",
            "colour.adaptation.tests",
            "colour.adaptation.tests.tests_cie1994",
            "colour.adaptation.tests.tests_cmccat2000",
            "colour.adaptation.tests.tests_fairchild1990",
            "colour.adaptation.tests.tests_vonkries",
            "colour.adaptation.vonkries",
            "colour.algebra",
            "colour.algebra.coordinates",
            "colour.algebra.coordinates.transformations",
            "colour.algebra.extrapolation",
            "colour.algebra.geometry",
            "colour.algebra.interpolation",
            "colour.algebra.matrix",
            "colour.algebra.random",
            "colour.algebra.tests",
            "colour.algebra.tests.tests_coordinates",
            "colour.algebra.tests.tests_coordinates.tests_transformations",
            "colour.algebra.tests.tests_extrapolation",
            "colour.algebra.tests.tests_geometry",
            "colour.algebra.tests.tests_interpolation",
            "colour.algebra.tests.tests_matrix",
            "colour.algebra.tests.tests_random",
            "colour.appearance",
            "colour.appearance.atd95",
            "colour.appearance.ciecam02",
            "colour.appearance.hunt",
            "colour.appearance.llab",
            "colour.appearance.nayatani95",
            "colour.appearance.rlab",
            "colour.appearance.tests",
            "colour.appearance.tests.common",
            "colour.appearance.tests.tests_atd95",
            "colour.appearance.tests.tests_ciecam02",
            "colour.appearance.tests.tests_hunt",
            "colour.appearance.tests.tests_llab",
            "colour.appearance.tests.tests_nayatani95",
            "colour.appearance.tests.tests_rlab",
            "colour.characterisation",
            "colour.characterisation.cameras",
            "colour.characterisation.dataset",
            "colour.characterisation.dataset.cameras",
            "colour.characterisation.dataset.cameras.dslr",
            "colour.characterisation.dataset.cameras.dslr.spectral_sensitivities",
            "colour.characterisation.dataset.colour_checkers",
            "colour.characterisation.dataset.colour_checkers.chromaticity_coordinates",
            "colour.characterisation.dataset.colour_checkers.spds",
            "colour.characterisation.dataset.displays",
            "colour.characterisation.dataset.displays.crt",
            "colour.characterisation.dataset.displays.crt.rgb_primaries",
            "colour.characterisation.dataset.displays.lcd",
            "colour.characterisation.dataset.displays.lcd.rgb_primaries",
            "colour.characterisation.displays",
            "colour.characterisation.fitting",
            "colour.characterisation.tests",
            "colour.characterisation.tests.tests_cameras",
            "colour.characterisation.tests.tests_displays",
            "colour.characterisation.tests.tests_fitting",
            "colour.colorimetry",
            "colour.colorimetry.blackbody",
            "colour.colorimetry.cmfs",
            "colour.colorimetry.correction",
            "colour.colorimetry.dataset",
            "colour.colorimetry.dataset.cmfs",
            "colour.colorimetry.dataset.illuminants",
            "colour.colorimetry.dataset.illuminants.chromaticity_coordinates",
            "colour.colorimetry.dataset.illuminants.d_illuminants_s_spds",
            "colour.colorimetry.dataset.illuminants.hunterlab",
            "colour.colorimetry.dataset.illuminants.spds",
            "colour.colorimetry.dataset.lefs",
            "colour.colorimetry.dataset.light_sources",
            "colour.colorimetry.dataset.light_sources.chromaticity_coordinates",
            "colour.colorimetry.dataset.light_sources.spds",
            "colour.colorimetry.dominant",
            "colour.colorimetry.illuminants",
            "colour.colorimetry.lefs",
            "colour.colorimetry.lightness",
            "colour.colorimetry.luminance",
            "colour.colorimetry.photometry",
            "colour.colorimetry.spectrum",
            "colour.colorimetry.tests",
            "colour.colorimetry.tests.tests_blackbody",
            "colour.colorimetry.tests.tests_cmfs",
            "colour.colorimetry.tests.tests_correction",
            "colour.colorimetry.tests.tests_dominant",
            "colour.colorimetry.tests.tests_illuminants",
            "colour.colorimetry.tests.tests_lefs",
            "colour.colorimetry.tests.tests_lightness",
            "colour.colorimetry.tests.tests_luminance",
            "colour.colorimetry.tests.tests_photometry",
            "colour.colorimetry.tests.tests_spectrum",
            "colour.colorimetry.tests.tests_transformations",
            "colour.colorimetry.tests.tests_tristimulus",
            "colour.colorimetry.tests.tests_whiteness",
            "colour.colorimetry.transformations",
            "colour.colorimetry.tristimulus",
            "colour.colorimetry.whiteness",
            "colour.constants",
            "colour.constants.cie",
            "colour.constants.codata",
            "colour.constants.common",
            "colour.corresponding",
            "colour.corresponding.dataset",
            "colour.corresponding.dataset.corresponding_chromaticities",
            "colour.corresponding.prediction",
            "colour.corresponding.tests",
            "colour.corresponding.tests.tests_prediction",
            "colour.difference",
            "colour.difference.delta_e",
            "colour.difference.delta_e_luo2006",
            "colour.difference.tests",
            "colour.difference.tests.tests_delta_e",
            "colour.difference.tests.tests_delta_e_luo2006",
            "colour.io",
            "colour.io.common",
            "colour.io.ies_tm2714",
            "colour.io.image",
            "colour.io.tabular",
            "colour.io.tests",
            "colour.io.tests.tests_ies_tm2714",
            "colour.io.tests.tests_tabular",
            "colour.io.tests.tests_xrite",
            "colour.io.xrite",
            "colour.models",
            "colour.models.cie_lab",
            "colour.models.cie_luv",
            "colour.models.cie_ucs",
            "colour.models.cie_uvw",
            "colour.models.cie_xyy",
            "colour.models.common",
            "colour.models.dataset",
            "colour.models.dataset.pointer_gamut",
            "colour.models.hunter_lab",
            "colour.models.hunter_rdab",
            "colour.models.ipt",
            "colour.models.rgb",
            "colour.models.rgb.aces_it",
            "colour.models.rgb.common",
            "colour.models.rgb.dataset",
            "colour.models.rgb.dataset.aces",
            "colour.models.rgb.dataset.aces_it",
            "colour.models.rgb.dataset.adobe_rgb_1998",
            "colour.models.rgb.dataset.adobe_wide_gamut_rgb",
            "colour.models.rgb.dataset.alexa_wide_gamut_rgb",
            "colour.models.rgb.dataset.apple_rgb",
            "colour.models.rgb.dataset.best_rgb",
            "colour.models.rgb.dataset.beta_rgb",
            "colour.models.rgb.dataset.cie_rgb",
            "colour.models.rgb.dataset.cinema_gamut",
            "colour.models.rgb.dataset.color_match_rgb",
            "colour.models.rgb.dataset.dci_p3",
            "colour.models.rgb.dataset.don_rgb_4",
            "colour.models.rgb.dataset.eci_rgb_v2",
            "colour.models.rgb.dataset.ekta_space_ps5",
            "colour.models.rgb.dataset.max_rgb",
            "colour.models.rgb.dataset.ntsc_rgb",
            "colour.models.rgb.dataset.pal_secam_rgb",
            "colour.models.rgb.dataset.rec_2020",
            "colour.models.rgb.dataset.rec_709",
            "colour.models.rgb.dataset.red",
            "colour.models.rgb.dataset.rimm_romm_rgb",
            "colour.models.rgb.dataset.russell_rgb",
            "colour.models.rgb.dataset.smptec_rgb",
            "colour.models.rgb.dataset.sony",
            "colour.models.rgb.dataset.srgb",
            "colour.models.rgb.dataset.v_gamut",
            "colour.models.rgb.dataset.xtreme_rgb",
            "colour.models.rgb.deprecated",
            "colour.models.rgb.derivation",
            "colour.models.rgb.ictcp",
            "colour.models.rgb.rgb_colourspace",
            "colour.models.rgb.tests",
            "colour.models.rgb.tests.tests_aces_it",
            "colour.models.rgb.tests.tests_common",
            "colour.models.rgb.tests.tests_deprecated",
            "colour.models.rgb.tests.tests_derivation",
            "colour.models.rgb.tests.tests_ictcp",
            "colour.models.rgb.tests.tests_rgb_colourspace",
            "colour.models.rgb.tests.tests_ycbcr",
            "colour.models.rgb.transfer_functions",
            "colour.models.rgb.transfer_functions.aces",
            "colour.models.rgb.transfer_functions.alexa_log_c",
            "colour.models.rgb.transfer_functions.bt_1886",
            "colour.models.rgb.transfer_functions.bt_2020",
            "colour.models.rgb.transfer_functions.bt_709",
            "colour.models.rgb.transfer_functions.canon_log",
            "colour.models.rgb.transfer_functions.cineon",
            "colour.models.rgb.transfer_functions.dci_p3",
            "colour.models.rgb.transfer_functions.gamma",
            "colour.models.rgb.transfer_functions.linear",
            "colour.models.rgb.transfer_functions.panalog",
            "colour.models.rgb.transfer_functions.panasonic_vlog",
            "colour.models.rgb.transfer_functions.pivoted_log",
            "colour.models.rgb.transfer_functions.red_log",
            "colour.models.rgb.transfer_functions.rimm_romm_rgb",
            "colour.models.rgb.transfer_functions.sony_slog",
            "colour.models.rgb.transfer_functions.srgb",
            "colour.models.rgb.transfer_functions.st_2084",
            "colour.models.rgb.transfer_functions.tests",
            "colour.models.rgb.transfer_functions.tests.tests_aces",
            "colour.models.rgb.transfer_functions.tests.tests_alexa_log_c",
            "colour.models.rgb.transfer_functions.tests.tests_bt_1886",
            "colour.models.rgb.transfer_functions.tests.tests_bt_2020",
            "colour.models.rgb.transfer_functions.tests.tests_bt_709",
            "colour.models.rgb.transfer_functions.tests.tests_canon_log",
            "colour.models.rgb.transfer_functions.tests.tests_cineon",
            "colour.models.rgb.transfer_functions.tests.tests_dci_p3",
            "colour.models.rgb.transfer_functions.tests.tests_gamma",
            "colour.models.rgb.transfer_functions.tests.tests_linear",
            "colour.models.rgb.transfer_functions.tests.tests_panalog",
            "colour.models.rgb.transfer_functions.tests.tests_panasonic_vlog",
            "colour.models.rgb.transfer_functions.tests.tests_pivoted_log",
            "colour.models.rgb.transfer_functions.tests.tests_red_log",
            "colour.models.rgb.transfer_functions.tests.tests_rimm_romm_rgb",
            "colour.models.rgb.transfer_functions.tests.tests_sony_slog",
            "colour.models.rgb.transfer_functions.tests.tests_srgb",
            "colour.models.rgb.transfer_functions.tests.tests_st_2084",
            "colour.models.rgb.transfer_functions.tests.tests_viper_log",
            "colour.models.rgb.transfer_functions.viper_log",
            "colour.models.rgb.ycbcr",
            "colour.models.tests",
            "colour.models.tests.tests_cie_lab",
            "colour.models.tests.tests_cie_luv",
            "colour.models.tests.tests_cie_ucs",
            "colour.models.tests.tests_cie_uvw",
            "colour.models.tests.tests_cie_xyy",
            "colour.models.tests.tests_hunter_lab",
            "colour.models.tests.tests_hunter_rdab",
            "colour.models.tests.tests_ipt",
            "colour.models.tests.tests_ucs_luo2006",
            "colour.models.ucs_luo2006",
            "colour.notation",
            "colour.notation.dataset",
            "colour.notation.dataset.munsell",
            "colour.notation.dataset.munsell.all",
            "colour.notation.dataset.munsell.experimental",
            "colour.notation.dataset.munsell.real",
            "colour.notation.munsell",
            "colour.notation.tests",
            "colour.notation.tests.tests_munsell",
            "colour.notation.tests.tests_triplet",
            "colour.notation.triplet",
            "colour.phenomenons",
            "colour.phenomenons.rayleigh",
            "colour.phenomenons.tests",
            "colour.phenomenons.tests.tests_rayleigh",
            "colour.plotting",
            "colour.plotting.characterisation",
            "colour.plotting.colorimetry",
            "colour.plotting.common",
            "colour.plotting.corresponding",
            "colour.plotting.dataset",
            "colour.plotting.dataset.astm_g_173",
            "colour.plotting.diagrams",
            "colour.plotting.geometry",
            "colour.plotting.models",
            "colour.plotting.notation",
            "colour.plotting.phenomenon",
            "colour.plotting.quality",
            "colour.plotting.temperature",
            "colour.plotting.tests",
            "colour.plotting.tests.tests_geometry",
            "colour.plotting.volume",
            "colour.quality",
            "colour.quality.cqs",
            "colour.quality.cri",
            "colour.quality.dataset",
            "colour.quality.dataset.tcs",
            "colour.quality.dataset.vs",
            "colour.quality.tests",
            "colour.quality.tests.tests_cqs",
            "colour.quality.tests.tests_cri",
            "colour.recovery",
            "colour.recovery.dataset",
            "colour.recovery.dataset.smits1999",
            "colour.recovery.smits1999",
            "colour.recovery.tests",
            "colour.recovery.tests.tests_smits1999",
            "colour.temperature",
            "colour.temperature.cct",
            "colour.temperature.tests",
            "colour.temperature.tests.tests_cct",
            "colour.utilities",
            "colour.utilities.array",
            "colour.utilities.common",
            "colour.utilities.data_structures",
            "colour.utilities.tests",
            "colour.utilities.tests.tests_array",
            "colour.utilities.tests.tests_common",
            "colour.utilities.tests.tests_data_structures",
            "colour.utilities.verbose",
            "colour.volume",
            "colour.volume.dataset",
            "colour.volume.dataset.optimal_colour_stimuli",
            "colour.volume.macadam_limits",
            "colour.volume.mesh",
            "colour.volume.pointer_gamut",
            "colour.volume.rgb",
            "colour.volume.spectrum",
            "colour.volume.tests",
            "colour.volume.tests.tests_macadam_limits",
            "colour.volume.tests.tests_mesh",
            "colour.volume.tests.tests_pointer_gamut",
            "colour.volume.tests.tests_rgb",
            "colour.volume.tests.tests_spectrum"
        ],
        "version": "0.3.9"
    },
    "colour-valgrind": {
        "cmdline": [],
        "modules": [
            "colourvalgrind",
            "colourvalgrind.colourvalgrind",
            "colourvalgrind.command_line"
        ],
        "version": "0.3.5"
    },
    "colourdistance": {
        "cmdline": [],
        "modules": [
            "colourdistance"
        ],
        "version": "1.2"
    },
    "coloured-text": {
        "cmdline": [],
        "modules": [
            "coloured_text"
        ],
        "version": "2.0"
    },
    "colourettu": {
        "cmdline": [],
        "modules": [
            "colourettu",
            "colourettu._colour",
            "colourettu._palette",
            "colourettu.test",
            "colourettu.test.test_colour",
            "colourettu.test.test_palette",
            "colourettu.test.test_setup"
        ],
        "version": "2.0.0"
    },
    "colourless": {
        "cmdline": [],
        "modules": [
            "colourless",
            "colourless.script"
        ],
        "version": "0.0.1"
    },
    "colours": {
        "cmdline": [],
        "modules": [
            "colours"
        ],
        "version": "0.3"
    },
    "colout": {
        "cmdline": [
            "colout"
        ],
        "modules": [
            "colout",
            "colout.colout",
            "colout.colout_clang",
            "colout.colout_cmake",
            "colout.colout_configure",
            "colout.colout_ctest",
            "colout.colout_g++",
            "colout.colout_javac",
            "colout.colout_json",
            "colout.colout_latex",
            "colout.colout_ninja",
            "colout.colout_perm",
            "colout.colout_python",
            "colout.colout_valgrind"
        ],
        "version": "0.5"
    },
    "colout2": {
        "cmdline": [],
        "modules": [
            "colout2",
            "colout2.colout",
            "colout2.colout_autogen",
            "colout2.colout_clang",
            "colout2.colout_cmake",
            "colout2.colout_configure",
            "colout2.colout_ctest",
            "colout2.colout_g++",
            "colout2.colout_javac",
            "colout2.colout_json",
            "colout2.colout_latex",
            "colout2.colout_ninja",
            "colout2.colout_perm",
            "colout2.colout_python",
            "colout2.colout_valgrind"
        ],
        "version": "1.0.3"
    },
    "colpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "colr": {
        "cmdline": [],
        "modules": [
            "colr",
            "colr.base",
            "colr.colr",
            "colr.colr_docopt",
            "colr.control_codes",
            "colr.controls",
            "colr.name_data",
            "colr.progress",
            "colr.progress_frames",
            "colr.trans"
        ],
        "version": "0.8.1"
    },
    "coltpython": {
        "cmdline": [],
        "modules": [
            "coltpython"
        ],
        "version": "0.0.1"
    },
    "coltron": {
        "cmdline": [],
        "modules": [
            "coltron",
            "coltron.crc",
            "coltron.utils"
        ],
        "version": "1.0.2"
    },
    "colubrid": {
        "cmdline": [],
        "modules": [
            "colubrid",
            "colubrid.application",
            "colubrid.const",
            "colubrid.debug",
            "colubrid.exceptions",
            "colubrid.reloader",
            "colubrid.request",
            "colubrid.response",
            "colubrid.server",
            "colubrid.utils"
        ],
        "version": "0.10"
    },
    "columnar-records": {
        "cmdline": [],
        "modules": [
            "columnar_records",
            "columnar_records._version",
            "columnar_records.columnar_records",
            "columnar_records.utils"
        ],
        "version": "0.1.1.0"
    },
    "columnize": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.9"
    },
    "colvars": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "com": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "com.study1": {
        "cmdline": [],
        "modules": [
            "readfile",
            "study1",
            "study_test"
        ],
        "version": "1.9.0"
    },
    "com.tr.nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.6.0"
    },
    "comake": {
        "cmdline": [],
        "modules": [
            "comake",
            "comake.Comake",
            "comake.ComakeException",
            "comake.CompileDep",
            "comake.GenComake",
            "comake.GenMakefile",
            "comake.GetDep",
            "comake.LocalBuild",
            "comake.ParseComake",
            "comake.utils"
        ],
        "version": "v0.1.6"
    },
    "comanage-nacha": {
        "cmdline": [],
        "modules": [
            "comanage_nacha",
            "comanage_nacha.addenda",
            "comanage_nacha.batch",
            "comanage_nacha.entries",
            "comanage_nacha.entries.blocking_file_control",
            "comanage_nacha.entries.company_batch_control",
            "comanage_nacha.entries.company_batch_header",
            "comanage_nacha.entries.entry_addenda",
            "comanage_nacha.entries.entry_detail",
            "comanage_nacha.entries.entrybase",
            "comanage_nacha.entries.file_control",
            "comanage_nacha.entries.file_header",
            "comanage_nacha.entry",
            "comanage_nacha.enums",
            "comanage_nacha.error_codes",
            "comanage_nacha.exceptions",
            "comanage_nacha.message_codes",
            "comanage_nacha.nacha_file",
            "comanage_nacha.parser",
            "comanage_nacha.return_codes",
            "comanage_nacha.utils",
            "comanage_nacha.utils.check_digit",
            "comanage_nacha.utils.confirmation_file",
            "comanage_nacha.utils.entry_formatter",
            "comanage_nacha.utils.rejection"
        ],
        "version": "0.2.7"
    },
    "comb": {
        "cmdline": [],
        "modules": [
            "comb",
            "comb.combd",
            "comb.demo",
            "comb.demo.garbage",
            "comb.demo.list",
            "comb.demo.mongo",
            "comb.demo.redis",
            "comb.main",
            "comb.mq",
            "comb.mq.mongo",
            "comb.mq.mysql",
            "comb.mq.redis",
            "comb.slot"
        ],
        "version": "0.9.10"
    },
    "combalg-py": {
        "cmdline": [],
        "modules": [
            "combalg",
            "combalg.combalg",
            "combalg.rooted_tree",
            "combalg.subset",
            "combalg.utility"
        ],
        "version": "0.0.2"
    },
    "combatwiz": {
        "cmdline": [
            "combatwiz_runner.py"
        ],
        "modules": [
            "combatwiz",
            "combatwiz.randomizer"
        ],
        "version": "0.12"
    },
    "combi": {
        "cmdline": [],
        "modules": [
            "combi",
            "combi._python_toolbox",
            "combi._python_toolbox._bootstrap",
            "combi._python_toolbox._bootstrap.bootstrap",
            "combi._python_toolbox.binary_search",
            "combi._python_toolbox.binary_search.binary_search_profile",
            "combi._python_toolbox.binary_search.functions",
            "combi._python_toolbox.binary_search.roundings",
            "combi._python_toolbox.caching",
            "combi._python_toolbox.caching.cached_property",
            "combi._python_toolbox.caching.cached_type",
            "combi._python_toolbox.caching.decorators",
            "combi._python_toolbox.cheat_hashing",
            "combi._python_toolbox.cheat_hashing.cheat_hash",
            "combi._python_toolbox.cheat_hashing.cheat_hash_functions",
            "combi._python_toolbox.comparison_tools",
            "combi._python_toolbox.context_management",
            "combi._python_toolbox.context_management.abstract_context_manager",
            "combi._python_toolbox.context_management.blank_context_manager",
            "combi._python_toolbox.context_management.context_manager",
            "combi._python_toolbox.context_management.context_manager_type",
            "combi._python_toolbox.context_management.context_manager_type_type",
            "combi._python_toolbox.context_management.delegating_context_manager",
            "combi._python_toolbox.context_management.functions",
            "combi._python_toolbox.context_management.mixins",
            "combi._python_toolbox.context_management.mixins.decorating_context_manager_mixin",
            "combi._python_toolbox.context_management.modifiers",
            "combi._python_toolbox.context_management.self_hook",
            "combi._python_toolbox.cute_enum",
            "combi._python_toolbox.cute_inspect",
            "combi._python_toolbox.cute_iter_tools",
            "combi._python_toolbox.cute_testing",
            "combi._python_toolbox.decorator_tools",
            "combi._python_toolbox.dict_tools",
            "combi._python_toolbox.exceptions",
            "combi._python_toolbox.freezing",
            "combi._python_toolbox.freezing.delegatee_context_manager",
            "combi._python_toolbox.freezing.freezer",
            "combi._python_toolbox.freezing.freezer_property",
            "combi._python_toolbox.freezing.freezer_property_freezer",
            "combi._python_toolbox.future_tools",
            "combi._python_toolbox.introspection_tools",
            "combi._python_toolbox.logic_tools",
            "combi._python_toolbox.math_tools",
            "combi._python_toolbox.math_tools.factorials",
            "combi._python_toolbox.math_tools.misc",
            "combi._python_toolbox.math_tools.sequences",
            "combi._python_toolbox.math_tools.statistics",
            "combi._python_toolbox.math_tools.types",
            "combi._python_toolbox.misc_tools",
            "combi._python_toolbox.misc_tools.misc_tools",
            "combi._python_toolbox.misc_tools.name_mangling",
            "combi._python_toolbox.misc_tools.overridable_property",
            "combi._python_toolbox.misc_tools.proxy_property",
            "combi._python_toolbox.monkeypatch_envelopes",
            "combi._python_toolbox.monkeypatching_tools",
            "combi._python_toolbox.nifty_collections",
            "combi._python_toolbox.nifty_collections.abstract",
            "combi._python_toolbox.nifty_collections.bagging",
            "combi._python_toolbox.nifty_collections.emitting_weak_key_default_dict",
            "combi._python_toolbox.nifty_collections.frozen_bag_bag",
            "combi._python_toolbox.nifty_collections.lazy_tuple",
            "combi._python_toolbox.nifty_collections.ordered_dict",
            "combi._python_toolbox.nifty_collections.various_frozen_dicts",
            "combi._python_toolbox.nifty_collections.various_ordered_sets",
            "combi._python_toolbox.nifty_collections.weak_key_default_dict",
            "combi._python_toolbox.nifty_collections.weak_key_identity_dict",
            "combi._python_toolbox.number_encoding",
            "combi._python_toolbox.package_finder",
            "combi._python_toolbox.sequence_tools",
            "combi._python_toolbox.sequence_tools.canonical_slice",
            "combi._python_toolbox.sequence_tools.cute_range",
            "combi._python_toolbox.sequence_tools.misc",
            "combi._python_toolbox.sleek_reffing",
            "combi._python_toolbox.sleek_reffing.cute_sleek_value_dict",
            "combi._python_toolbox.sleek_reffing.exceptions",
            "combi._python_toolbox.sleek_reffing.sleek_call_args",
            "combi._python_toolbox.sleek_reffing.sleek_ref",
            "combi._python_toolbox.string_tools",
            "combi._python_toolbox.string_tools.case_conversions",
            "combi._python_toolbox.string_tools.string_tools",
            "combi._python_toolbox.sys_tools",
            "combi._python_toolbox.third_party",
            "combi._python_toolbox.third_party.collections",
            "combi._python_toolbox.third_party.decorator",
            "combi._python_toolbox.third_party.enum",
            "combi._python_toolbox.third_party.enum.enum",
            "combi._python_toolbox.third_party.envelopes",
            "combi._python_toolbox.third_party.envelopes.compat",
            "combi._python_toolbox.third_party.envelopes.conn",
            "combi._python_toolbox.third_party.envelopes.connstack",
            "combi._python_toolbox.third_party.envelopes.envelope",
            "combi._python_toolbox.third_party.envelopes.local",
            "combi._python_toolbox.third_party.funcsigs",
            "combi._python_toolbox.third_party.funcsigs.version",
            "combi._python_toolbox.third_party.functools",
            "combi._python_toolbox.third_party.linecache2",
            "combi._python_toolbox.third_party.pathlib",
            "combi._python_toolbox.third_party.six",
            "combi._python_toolbox.third_party.sortedcontainers",
            "combi._python_toolbox.third_party.sortedcontainers.sorteddict",
            "combi._python_toolbox.third_party.sortedcontainers.sortedlist",
            "combi._python_toolbox.third_party.sortedcontainers.sortedset",
            "combi._python_toolbox.third_party.traceback2",
            "combi._python_toolbox.third_party.unittest2",
            "combi._python_toolbox.third_party.unittest2.case",
            "combi._python_toolbox.third_party.unittest2.collector",
            "combi._python_toolbox.third_party.unittest2.compatibility",
            "combi._python_toolbox.third_party.unittest2.loader",
            "combi._python_toolbox.third_party.unittest2.main",
            "combi._python_toolbox.third_party.unittest2.result",
            "combi._python_toolbox.third_party.unittest2.runner",
            "combi._python_toolbox.third_party.unittest2.signals",
            "combi._python_toolbox.third_party.unittest2.suite",
            "combi._python_toolbox.third_party.unittest2.util",
            "combi._python_toolbox.version_info",
            "combi.chain_space",
            "combi.map_space",
            "combi.misc",
            "combi.perming",
            "combi.perming._fixed_map_managing_mixin",
            "combi.perming._variation_adding_mixin",
            "combi.perming._variation_removing_mixin",
            "combi.perming.calculating_length",
            "combi.perming.comb",
            "combi.perming.comb_space",
            "combi.perming.perm",
            "combi.perming.perm_space",
            "combi.perming.variations",
            "combi.product_space",
            "combi.selection_space",
            "test_combi",
            "test_combi.scripts",
            "test_combi.scripts._test_combi",
            "test_combi.test_calculating_length",
            "test_combi.test_chain_space",
            "test_combi.test_comb_space",
            "test_combi.test_extensive",
            "test_combi.test_misc",
            "test_combi.test_perm_space",
            "test_combi.test_product_space",
            "test_combi.test_selection_space",
            "test_combi.test_variations_meta"
        ],
        "version": "1.1.2"
    },
    "combination": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "combination-all": {
        "cmdline": [],
        "modules": [
            "combination_all"
        ],
        "version": "1.0.5"
    },
    "combinatorics": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "combinatorix": {
        "cmdline": [],
        "modules": [
            "combinatorix"
        ],
        "version": "0.1"
    },
    "combinators": {
        "cmdline": [],
        "modules": [
            "combinators"
        ],
        "version": "0.0.2"
    },
    "combine-tex": {
        "cmdline": [],
        "modules": [
            "combine_tex",
            "combine_tex.command_line"
        ],
        "version": "0.1.0"
    },
    "combine2xlsx": {
        "cmdline": [],
        "modules": [
            "combine2xlsx"
        ],
        "version": "0.1.9"
    },
    "combino": {
        "cmdline": [],
        "modules": [
            "combino",
            "combino.combino"
        ],
        "version": "0.1.0"
    },
    "combivep": {
        "cmdline": [
            "CombiVEP_predictor",
            "CombiVEP_reference_updater",
            "CombiVEP_trainer"
        ],
        "modules": [
            "combivep",
            "combivep.app",
            "combivep.cfg",
            "combivep.engine",
            "combivep.engine.dataset",
            "combivep.engine.mlp",
            "combivep.engine.wrapper",
            "combivep.preproc",
            "combivep.preproc.dataset",
            "combivep.preproc.reader",
            "combivep.preproc.referer",
            "combivep.refdb",
            "combivep.refdb.control",
            "combivep.refdb.updater",
            "combivep.settings",
            "combivep.template"
        ],
        "version": "0.1.2"
    },
    "combocrypt": {
        "cmdline": [],
        "modules": [],
        "version": "2.0.0"
    },
    "comboloader": {
        "cmdline": [],
        "modules": [
            "comboloader",
            "comboloader.app",
            "comboloader.utils",
            "comboloader.utils.request"
        ],
        "version": "0.1.1"
    },
    "combomethod": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.9"
    },
    "combox": {
        "cmdline": [],
        "modules": [
            "combox",
            "combox._version",
            "combox.cbox",
            "combox.config",
            "combox.crypto",
            "combox.events",
            "combox.file",
            "combox.gui",
            "combox.log",
            "combox.silo"
        ],
        "version": "0.2.3"
    },
    "comdet": {
        "cmdline": [],
        "modules": [
            "comdet",
            "comdet.comdet",
            "comdet.community",
            "comdet.wrapper"
        ],
        "version": "0.4"
    },
    "comedy": {
        "cmdline": [],
        "modules": [
            "comedy"
        ],
        "version": "0.1.0"
    },
    "comet": {
        "cmdline": [
            "comet-sendvo"
        ],
        "modules": [
            "comet",
            "comet.handler",
            "comet.handler.relay",
            "comet.handler.spawn",
            "comet.handler.test",
            "comet.handler.test.test_relay",
            "comet.handler.test.test_spawn",
            "comet.icomet",
            "comet.log",
            "comet.log.test",
            "comet.log.test.test_log",
            "comet.plugins",
            "comet.plugins.eventprinter",
            "comet.plugins.eventwriter",
            "comet.plugins.test",
            "comet.plugins.test.test_eventprinter",
            "comet.plugins.test.test_eventwriter",
            "comet.protocol",
            "comet.protocol.base",
            "comet.protocol.broadcaster",
            "comet.protocol.messages",
            "comet.protocol.receiver",
            "comet.protocol.sender",
            "comet.protocol.subscriber",
            "comet.protocol.test",
            "comet.protocol.test.test_base",
            "comet.protocol.test.test_messages",
            "comet.protocol.test.test_voeventbroadcaster",
            "comet.protocol.test.test_voeventreceiver",
            "comet.protocol.test.test_voeventsender",
            "comet.protocol.test.test_voeventsubscriber",
            "comet.service",
            "comet.service.broker",
            "comet.service.test",
            "comet.service.test.test_broker",
            "comet.testutils",
            "comet.utility",
            "comet.utility.event_db",
            "comet.utility.options",
            "comet.utility.test",
            "comet.utility.test.test_event_db",
            "comet.utility.test.test_voevent",
            "comet.utility.test.test_whitelist",
            "comet.utility.test.test_xml",
            "comet.utility.voevent",
            "comet.utility.whitelist",
            "comet.utility.xml",
            "comet.validator",
            "comet.validator.ivorn",
            "comet.validator.previously_seen",
            "comet.validator.schema",
            "comet.validator.test",
            "comet.validator.test.test_ivorn",
            "comet.validator.test.test_previously_seen",
            "comet.validator.test.test_schema"
        ],
        "version": "2.0.1"
    },
    "comet-sensor": {
        "cmdline": [],
        "modules": [
            "comet",
            "comet.config",
            "comet.csvio",
            "comet.data",
            "comet.main",
            "comet.plot",
            "comet.time"
        ],
        "version": "0.7.2.2"
    },
    "cometblue": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "comex": {
        "cmdline": [],
        "modules": [
            "comex",
            "comex.api",
            "comex.api.bbgapi",
            "comex.function",
            "comex.function.assets",
            "comex.function.expiries",
            "comex.function.tickers",
            "comex.run",
            "comex.static",
            "comex.tool",
            "comex.tool.jsonscript",
            "comex.tool.settle",
            "comex.utility",
            "comex.utility.config",
            "comex.utility.error"
        ],
        "version": "1.4"
    },
    "comfy": {
        "cmdline": [],
        "modules": [
            "comfy",
            "comfy.fields"
        ],
        "version": "0.0.1"
    },
    "comic-dl": {
        "cmdline": [],
        "modules": [
            "comic_dl",
            "comic_dl.comic_dl",
            "comic_dl.downloader",
            "comic_dl.downloader.cookies_required",
            "comic_dl.downloader.universal",
            "comic_dl.honcho",
            "comic_dl.sites",
            "comic_dl.sites.batoto",
            "comic_dl.sites.comic_naver",
            "comic_dl.sites.gomanga",
            "comic_dl.sites.kisscomicus",
            "comic_dl.sites.kissmanga",
            "comic_dl.sites.mangafox",
            "comic_dl.sites.readcomic",
            "comic_dl.sites.yomanga",
            "comic_dl.version"
        ],
        "version": "2017.1.22"
    },
    "comic-scraper": {
        "cmdline": [],
        "modules": [
            "comic_scraper",
            "comic_scraper.comic_scraper"
        ],
        "version": "0.5.2"
    },
    "comiccrawler": {
        "cmdline": [],
        "modules": [
            "comiccrawler",
            "comiccrawler.channel",
            "comiccrawler.config",
            "comiccrawler.core",
            "comiccrawler.core.grabber",
            "comiccrawler.download_manager",
            "comiccrawler.error",
            "comiccrawler.gui",
            "comiccrawler.gui.core",
            "comiccrawler.gui.dialog",
            "comiccrawler.gui.main_window",
            "comiccrawler.gui.table",
            "comiccrawler.io",
            "comiccrawler.mission_manager",
            "comiccrawler.mods",
            "comiccrawler.mods._99",
            "comiccrawler.mods.aacomic",
            "comiccrawler.mods.acgn",
            "comiccrawler.mods.buka",
            "comiccrawler.mods.cartoonmad",
            "comiccrawler.mods.chuixue",
            "comiccrawler.mods.ck101",
            "comiccrawler.mods.danbooru",
            "comiccrawler.mods.deviantart",
            "comiccrawler.mods.dm5",
            "comiccrawler.mods.dmzj",
            "comiccrawler.mods.dmzj_m",
            "comiccrawler.mods.dmzj_www",
            "comiccrawler.mods.eight",
            "comiccrawler.mods.exh",
            "comiccrawler.mods.facebook",
            "comiccrawler.mods.flickr",
            "comiccrawler.mods.hhxiee",
            "comiccrawler.mods.iibq",
            "comiccrawler.mods.imgbox",
            "comiccrawler.mods.konachan",
            "comiccrawler.mods.nico",
            "comiccrawler.mods.pixiv",
            "comiccrawler.mods.sankaku",
            "comiccrawler.mods.seemh",
            "comiccrawler.mods.senmanga",
            "comiccrawler.mods.sfacg",
            "comiccrawler.mods.tsundora",
            "comiccrawler.mods.tuchong",
            "comiccrawler.mods.tumblr",
            "comiccrawler.mods.weibo",
            "comiccrawler.mods.wix",
            "comiccrawler.mods.yandere",
            "comiccrawler.mods.yoedge",
            "comiccrawler.profile",
            "comiccrawler.safeprint",
            "comiccrawler.url"
        ],
        "version": "2017.5.5"
    },
    "comicfetcher": {
        "cmdline": [],
        "modules": [
            "comicfetcher.command_line"
        ],
        "version": "0.3"
    },
    "comicgen": {
        "cmdline": [],
        "modules": [
            "comicgen"
        ],
        "version": "0.3"
    },
    "comicnamer": {
        "cmdline": [],
        "modules": [
            "comicnamer",
            "comicnamer.cliarg_parser",
            "comicnamer.comicnamer_exceptions",
            "comicnamer.config",
            "comicnamer.config_defaults",
            "comicnamer.main",
            "comicnamer.unicode_helper",
            "comicnamer.utils"
        ],
        "version": "1.0"
    },
    "comicslicer": {
        "cmdline": [],
        "modules": [
            "comicslicer",
            "comicslicer.comicslicer"
        ],
        "version": "0.0.1"
    },
    "comicsreader": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "comictagger": {
        "cmdline": [
            "comictagger.py"
        ],
        "modules": [
            "comictaggerlib",
            "comictaggerlib.autotagmatchwindow",
            "comictaggerlib.autotagprogresswindow",
            "comictaggerlib.autotagstartwindow",
            "comictaggerlib.cbltransformer",
            "comictaggerlib.cli",
            "comictaggerlib.comet",
            "comictaggerlib.comicarchive",
            "comictaggerlib.comicbookinfo",
            "comictaggerlib.comicinfoxml",
            "comictaggerlib.comicvinecacher",
            "comictaggerlib.comicvinetalker",
            "comictaggerlib.coverimagewidget",
            "comictaggerlib.crediteditorwindow",
            "comictaggerlib.ctversion",
            "comictaggerlib.exportwindow",
            "comictaggerlib.filenameparser",
            "comictaggerlib.filerenamer",
            "comictaggerlib.fileselectionlist",
            "comictaggerlib.genericmetadata",
            "comictaggerlib.imagefetcher",
            "comictaggerlib.imagehasher",
            "comictaggerlib.imagepopup",
            "comictaggerlib.issueidentifier",
            "comictaggerlib.issueselectionwindow",
            "comictaggerlib.issuestring",
            "comictaggerlib.logwindow",
            "comictaggerlib.main",
            "comictaggerlib.matchselectionwindow",
            "comictaggerlib.optionalmsgdialog",
            "comictaggerlib.options",
            "comictaggerlib.pagebrowser",
            "comictaggerlib.pagelisteditor",
            "comictaggerlib.pageloader",
            "comictaggerlib.progresswindow",
            "comictaggerlib.renamewindow",
            "comictaggerlib.settings",
            "comictaggerlib.settingswindow",
            "comictaggerlib.taggerwindow",
            "comictaggerlib.utils",
            "comictaggerlib.versionchecker",
            "comictaggerlib.volumeselectionwindow",
            "comictaggerlib/UnRAR2",
            "comictaggerlib/UnRAR2.rar_exceptions",
            "comictaggerlib/UnRAR2.test_UnRAR2",
            "comictaggerlib/UnRAR2.unix",
            "comictaggerlib/UnRAR2.windows"
        ],
        "version": "1.1.15-beta"
    },
    "comicthief": {
        "cmdline": [],
        "modules": [
            "ComicThief",
            "ComicThief.cache",
            "ComicThief.config",
            "ComicThief.creator",
            "ComicThief.ct",
            "ComicThief.extractor",
            "ComicThief.fetcher",
            "ComicThief.main",
            "ComicThief.test"
        ],
        "version": "0.2.1"
    },
    "comicvine-api": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "comimoc": {
        "cmdline": [],
        "modules": [
            "comimoc",
            "comimoc.admin",
            "comimoc.admin.models",
            "comimoc.admin.views",
            "comimoc.helpers",
            "comimoc.models",
            "comimoc.settings",
            "comimoc.views"
        ],
        "version": "1.0.0"
    },
    "comix": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "comm-libs": {
        "cmdline": [],
        "modules": [
            "comm_libs",
            "comm_libs.codec_utils",
            "comm_libs.comm_utils",
            "comm_libs.contract",
            "comm_libs.db_utils",
            "comm_libs.django_wrap",
            "comm_libs.exception",
            "comm_libs.file_utils",
            "comm_libs.log_tool",
            "comm_libs.price_utils",
            "comm_libs.regular_utils",
            "comm_libs.rsa_utils",
            "comm_libs.security",
            "comm_libs.sendmail",
            "comm_libs.session",
            "comm_libs.string_utils",
            "comm_libs.subrent_pay_date_amend",
            "comm_libs.template_msg",
            "comm_libs.time_utils"
        ],
        "version": "1.1.3"
    },
    "comma": {
        "cmdline": [],
        "modules": [
            "comma",
            "comma.comma"
        ],
        "version": "0.1"
    },
    "commah": {
        "cmdline": [],
        "modules": [
            "commah",
            "commah.commah",
            "commah.cosmology_list",
            "commah.examples"
        ],
        "version": "0.2.1"
    },
    "command": {
        "cmdline": [],
        "modules": [
            "command",
            "command.core"
        ],
        "version": "0.1.0"
    },
    "command-history-wordcloud": {
        "cmdline": [],
        "modules": [
            "command_history_wordcloud",
            "command_history_wordcloud.command_history_wordcloud"
        ],
        "version": "1.1.1"
    },
    "command-line-blog": {
        "cmdline": [],
        "modules": [
            "command_line_blog"
        ],
        "version": "0.1.6"
    },
    "command-line-input": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "command-line-parser": {
        "cmdline": [],
        "modules": [
            "command_line_parser",
            "command_line_parser.option_parser",
            "command_line_parser.options"
        ],
        "version": "0.0.6"
    },
    "command-notifier": {
        "cmdline": [
            "cn-publish",
            "cn-subscribe"
        ],
        "modules": [
            "command_notifier"
        ],
        "version": "0.0.3"
    },
    "commandant": {
        "cmdline": [
            "commandant"
        ],
        "modules": [
            "commandant",
            "commandant.builtins",
            "commandant.commands",
            "commandant.controller",
            "commandant.entry_point",
            "commandant.errors",
            "commandant.formatting",
            "commandant.help_topics",
            "commandant.testing",
            "commandant.testing.basic",
            "commandant.testing.mocker",
            "commandant.testing.resources"
        ],
        "version": "0.5.0"
    },
    "commandante": {
        "cmdline": [],
        "modules": [
            "commandante",
            "commandante.main"
        ],
        "version": "0.2.6"
    },
    "commandeer": {
        "cmdline": [],
        "modules": [
            "commandeer",
            "tests",
            "tests.commandeer3_tests",
            "tests.commandeer_common"
        ],
        "version": "0.2.3"
    },
    "commander": {
        "cmdline": [
            "commander",
            "issue-multi-command"
        ],
        "modules": [
            "commander",
            "commander.colorprint",
            "commander.commands",
            "commander.deploy",
            "commander.hosts",
            "commander.main",
            "commander.settings",
            "commander.ssh",
            "commander.utils"
        ],
        "version": "0.2.3"
    },
    "commanderline": {
        "cmdline": [],
        "modules": [
            "commanderline",
            "commanderline.commander_line"
        ],
        "version": "0.2"
    },
    "commandeur": {
        "cmdline": [],
        "modules": [
            "commandeur",
            "commandeur.cmdtools",
            "commandeur.commandeur",
            "commandeur.commandline_tool"
        ],
        "version": "0.1"
    },
    "commandify": {
        "cmdline": [],
        "modules": [
            "commandify",
            "commandify.commandify",
            "commandify.commandify_examples",
            "commandify.version"
        ],
        "version": "0.0.4.10"
    },
    "commandlib": {
        "cmdline": [],
        "modules": [
            "commandlib",
            "commandlib.command",
            "commandlib.command_path",
            "commandlib.deprecated",
            "commandlib.exceptions",
            "commandlib.utils"
        ],
        "version": "0.2.7"
    },
    "commandline": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.4dev"
    },
    "commandlineapp": {
        "cmdline": [],
        "modules": [],
        "version": "3.0.7"
    },
    "commandlineplot": {
        "cmdline": [],
        "modules": [
            "clplot",
            "clplot.clplot",
            "clplot.data_handler",
            "clplot.globe",
            "clplot.helpers",
            "clplot.plot",
            "clplot.structure"
        ],
        "version": "1.1"
    },
    "commandlineprogram": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "commandlines": {
        "cmdline": [],
        "modules": [
            "commandlines",
            "commandlines.exceptions",
            "commandlines.library",
            "commandlines.settings"
        ],
        "version": "0.4.1"
    },
    "commandmodule": {
        "cmdline": [],
        "modules": [
            "CommandPattern",
            "Commands",
            "Const",
            "main"
        ],
        "version": "1.0"
    },
    "commando": {
        "cmdline": [],
        "modules": [
            "commando",
            "commando._compat",
            "commando.application",
            "commando.conf",
            "commando.util"
        ],
        "version": "1.0.0"
    },
    "commandor": {
        "cmdline": [],
        "modules": [
            "commandor",
            "commandor.base",
            "commandor.colors",
            "commandor.compat",
            "commandor.exceptions",
            "commandor.utils"
        ],
        "version": "0.1.6"
    },
    "commandos": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "commandparser": {
        "cmdline": [],
        "modules": [
            "commandparser",
            "commandparser.command"
        ],
        "version": "0.3"
    },
    "commandr": {
        "cmdline": [],
        "modules": [
            "commandr",
            "commandr.commandr",
            "commandr.functools_util"
        ],
        "version": "1.3.2"
    },
    "commandrunner": {
        "cmdline": [],
        "modules": [
            "commandRunner",
            "commandRunner.commandRunner",
            "commandRunner.geRunner",
            "commandRunner.localRunner",
            "commandRunner.pythonRunner",
            "commandRunner.rRunner"
        ],
        "version": "0.8.4"
    },
    "commands": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "commandsession": {
        "cmdline": [],
        "modules": [
            "commandsession",
            "commandsession.commandsession"
        ],
        "version": "0.3"
    },
    "commandtool": {
        "cmdline": [],
        "modules": [
            "commandtool",
            "commandtool.recipes_267662"
        ],
        "version": "0.5.3"
    },
    "commandwrapper": {
        "cmdline": [],
        "modules": [
            "commandwrapper"
        ],
        "version": "0.7"
    },
    "commasearch": {
        "cmdline": [
            ","
        ],
        "modules": [
            "commasearch",
            "commasearch.db",
            "commasearch.dsv",
            "commasearch.indexer",
            "commasearch.main",
            "commasearch.rdbms",
            "commasearch.searcher",
            "commasearch.util"
        ],
        "version": "0.0.3"
    },
    "commcare-export": {
        "cmdline": [],
        "modules": [
            "commcare_export",
            "commcare_export.cli",
            "commcare_export.commcare_hq_client",
            "commcare_export.commcare_minilinq",
            "commcare_export.env",
            "commcare_export.excel_query",
            "commcare_export.map_format",
            "commcare_export.minilinq",
            "commcare_export.misc",
            "commcare_export.repeatable_iterator",
            "commcare_export.version",
            "commcare_export.writers"
        ],
        "version": "0.12.7"
    },
    "comment": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.23"
    },
    "comment-builder": {
        "cmdline": [
            "comment"
        ],
        "modules": [
            "comment"
        ],
        "version": "0.1"
    },
    "comment-parser": {
        "cmdline": [],
        "modules": [
            "comment_parser",
            "comment_parser.comment_parser",
            "comment_parser.parsers",
            "comment_parser.parsers.c_parser",
            "comment_parser.parsers.common",
            "comment_parser.parsers.go_parser",
            "comment_parser.parsers.js_parser",
            "comment_parser.parsers.shell_parser"
        ],
        "version": "1.0.3"
    },
    "commentator": {
        "cmdline": [],
        "modules": [
            "commentator",
            "commentator.example",
            "commentator.handlers",
            "commentator.middleware",
            "commentator.model"
        ],
        "version": "0.1"
    },
    "commentjson": {
        "cmdline": [],
        "modules": [
            "commentjson",
            "commentjson.commentjson",
            "commentjson.tests",
            "commentjson.tests.test_commentjson"
        ],
        "version": "0.6"
    },
    "commerce": {
        "cmdline": [],
        "modules": [
            "commerce",
            "commerce.basket"
        ],
        "version": "0.1dev"
    },
    "commis": {
        "cmdline": [],
        "modules": [
            "commis",
            "commis.color",
            "commis.command",
            "commis.exceptions",
            "commis.labeled",
            "commis.program",
            "commis.version"
        ],
        "version": "0.3"
    },
    "commit-coverage": {
        "cmdline": [],
        "modules": [
            "commit_coverage"
        ],
        "version": "0.7"
    },
    "commit-entropy": {
        "cmdline": [],
        "modules": [
            "commit_entropy",
            "commit_entropy.app",
            "commit_entropy.commands",
            "commit_entropy.commands.csv_printer",
            "commit_entropy.parser",
            "commit_entropy.parser.git_log_parser",
            "commit_entropy.settings"
        ],
        "version": "0.2.0"
    },
    "commit-message-validator": {
        "cmdline": [],
        "modules": [
            "commit_message_validator"
        ],
        "version": "0.4.1"
    },
    "committee": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "committer": {
        "cmdline": [
            "ci",
            "st",
            "up"
        ],
        "modules": [
            "committer",
            "committer.actions",
            "committer.errors",
            "committer.execution",
            "committer.vcsclients",
            "committer.vcsclients.detection",
            "committer.vcsclients.git",
            "committer.vcsclients.mercurial",
            "committer.vcsclients.subversion"
        ],
        "version": "0.2.7"
    },
    "commlib": {
        "cmdline": [],
        "modules": [
            "commlib",
            "commlib.baseutils",
            "commlib.baseutils.dateutils",
            "commlib.baseutils.httputils",
            "commlib.baseutils.logutils",
            "commlib.config",
            "commlib.dbtool",
            "commlib.encrypt",
            "commlib.fabricdeploy",
            "commlib.fabricdeploy.deploy",
            "commlib.fabricdeploy.fs",
            "commlib.fabricdeploy.git",
            "commlib.fabricdeploy.helper",
            "commlib.fabricdeploy.html",
            "commlib.fabricdeploy.nginx",
            "commlib.fabricdeploy.package",
            "commlib.fabricdeploy.supervisor",
            "commlib.fabricdeploy.virtualenv",
            "commlib.initconfig",
            "commlib.storage",
            "commlib.storage.memcache",
            "commlib.storage.memcache.mcPool",
            "commlib.storage.mongodb",
            "commlib.storage.mysql",
            "commlib.storage.mysql.connPool",
            "commlib.storage.redis",
            "commlib.storage.redis.redisClient",
            "commlib.storage.redis.redisPool",
            "commlib.tools",
            "commlib.tools.smartsql",
            "commlib.uplusua",
            "commlib.util"
        ],
        "version": "1.0.11"
    },
    "commodity": {
        "cmdline": [],
        "modules": [
            "commodity",
            "commodity.args",
            "commodity.deco",
            "commodity.excepts",
            "commodity.fs",
            "commodity.log",
            "commodity.mail",
            "commodity.net",
            "commodity.os_",
            "commodity.path",
            "commodity.pattern",
            "commodity.sequences",
            "commodity.str_",
            "commodity.term",
            "commodity.testing",
            "commodity.thread_",
            "commodity.type_",
            "commodity.version"
        ],
        "version": "0.20161112"
    },
    "commodore": {
        "cmdline": [],
        "modules": [
            "commodore",
            "commodore.cli",
            "commodore.config",
            "commodore.installer",
            "commodore.util"
        ],
        "version": "0.1.4"
    },
    "common": {
        "cmdline": [],
        "modules": [
            "common",
            "common.term",
            "common.term.progress"
        ],
        "version": "0.1.2"
    },
    "common-dibbs": {
        "cmdline": [],
        "modules": [
            "common_dibbs",
            "common_dibbs.auth",
            "common_dibbs.auth.auth",
            "common_dibbs.clients",
            "common_dibbs.clients.ar_client",
            "common_dibbs.clients.ar_client.api_client",
            "common_dibbs.clients.ar_client.apis",
            "common_dibbs.clients.ar_client.apis.actions_api",
            "common_dibbs.clients.ar_client.apis.appliance_implementations_api",
            "common_dibbs.clients.ar_client.apis.appliances_api",
            "common_dibbs.clients.ar_client.apis.scripts_api",
            "common_dibbs.clients.ar_client.apis.sites_api",
            "common_dibbs.clients.ar_client.apis.users_api",
            "common_dibbs.clients.ar_client.configuration",
            "common_dibbs.clients.ar_client.configure",
            "common_dibbs.clients.ar_client.models",
            "common_dibbs.clients.ar_client.models.action",
            "common_dibbs.clients.ar_client.models.action_patch",
            "common_dibbs.clients.ar_client.models.action_post",
            "common_dibbs.clients.ar_client.models.appliance",
            "common_dibbs.clients.ar_client.models.appliance_implementation",
            "common_dibbs.clients.ar_client.models.appliance_implementation_patch",
            "common_dibbs.clients.ar_client.models.appliance_implementation_post",
            "common_dibbs.clients.ar_client.models.appliance_patch",
            "common_dibbs.clients.ar_client.models.appliance_post",
            "common_dibbs.clients.ar_client.models.credentials",
            "common_dibbs.clients.ar_client.models.error",
            "common_dibbs.clients.ar_client.models.script",
            "common_dibbs.clients.ar_client.models.script_patch",
            "common_dibbs.clients.ar_client.models.script_post",
            "common_dibbs.clients.ar_client.models.site",
            "common_dibbs.clients.ar_client.models.site_patch",
            "common_dibbs.clients.ar_client.models.site_post",
            "common_dibbs.clients.ar_client.models.token_resp",
            "common_dibbs.clients.ar_client.models.user",
            "common_dibbs.clients.ar_client.rest",
            "common_dibbs.clients.cas_client",
            "common_dibbs.clients.cas_client.api_client",
            "common_dibbs.clients.cas_client.apis",
            "common_dibbs.clients.cas_client.apis.authentication_api",
            "common_dibbs.clients.cas_client.apis.users_api",
            "common_dibbs.clients.cas_client.configuration",
            "common_dibbs.clients.cas_client.models",
            "common_dibbs.clients.cas_client.models.authentication_resp",
            "common_dibbs.clients.cas_client.models.credentials",
            "common_dibbs.clients.cas_client.models.error",
            "common_dibbs.clients.cas_client.models.token_resp",
            "common_dibbs.clients.cas_client.models.user",
            "common_dibbs.clients.cas_client.models.user_patch",
            "common_dibbs.clients.cas_client.models.user_post",
            "common_dibbs.clients.cas_client.rest",
            "common_dibbs.clients.om_client",
            "common_dibbs.clients.om_client.api_client",
            "common_dibbs.clients.om_client.apis",
            "common_dibbs.clients.om_client.apis.executions_api",
            "common_dibbs.clients.om_client.apis.instances_api",
            "common_dibbs.clients.om_client.apis.users_api",
            "common_dibbs.clients.om_client.configuration",
            "common_dibbs.clients.om_client.models",
            "common_dibbs.clients.om_client.models.credentials",
            "common_dibbs.clients.om_client.models.error",
            "common_dibbs.clients.om_client.models.execution",
            "common_dibbs.clients.om_client.models.execution_patch",
            "common_dibbs.clients.om_client.models.execution_post",
            "common_dibbs.clients.om_client.models.instance",
            "common_dibbs.clients.om_client.models.instance_patch",
            "common_dibbs.clients.om_client.models.instance_post",
            "common_dibbs.clients.om_client.models.status",
            "common_dibbs.clients.om_client.models.token_resp",
            "common_dibbs.clients.om_client.models.user",
            "common_dibbs.clients.om_client.rest",
            "common_dibbs.clients.oma_client",
            "common_dibbs.clients.oma_client.api_client",
            "common_dibbs.clients.oma_client.apis",
            "common_dibbs.clients.oma_client.apis.ops_api",
            "common_dibbs.clients.oma_client.apis.users_api",
            "common_dibbs.clients.oma_client.configuration",
            "common_dibbs.clients.oma_client.configure",
            "common_dibbs.clients.oma_client.models",
            "common_dibbs.clients.oma_client.models.credentials",
            "common_dibbs.clients.oma_client.models.error",
            "common_dibbs.clients.oma_client.models.execution",
            "common_dibbs.clients.oma_client.models.op",
            "common_dibbs.clients.oma_client.models.op_patch",
            "common_dibbs.clients.oma_client.models.op_post",
            "common_dibbs.clients.oma_client.models.token_resp",
            "common_dibbs.clients.oma_client.models.user",
            "common_dibbs.clients.oma_client.models.user_patch",
            "common_dibbs.clients.oma_client.models.user_post",
            "common_dibbs.clients.oma_client.rest",
            "common_dibbs.clients.or_client",
            "common_dibbs.clients.or_client.api_client",
            "common_dibbs.clients.or_client.apis",
            "common_dibbs.clients.or_client.apis.operation_versions_api",
            "common_dibbs.clients.or_client.apis.operations_api",
            "common_dibbs.clients.or_client.apis.users_api",
            "common_dibbs.clients.or_client.configuration",
            "common_dibbs.clients.or_client.models",
            "common_dibbs.clients.or_client.models.credentials",
            "common_dibbs.clients.or_client.models.error",
            "common_dibbs.clients.or_client.models.operation_version",
            "common_dibbs.clients.or_client.models.operation_version_patch",
            "common_dibbs.clients.or_client.models.operation_version_post",
            "common_dibbs.clients.or_client.models.operations",
            "common_dibbs.clients.or_client.models.operations_patch",
            "common_dibbs.clients.or_client.models.operations_post",
            "common_dibbs.clients.or_client.models.token_resp",
            "common_dibbs.clients.or_client.models.user",
            "common_dibbs.clients.or_client.rest",
            "common_dibbs.clients.rm_client",
            "common_dibbs.clients.rm_client.api_client",
            "common_dibbs.clients.rm_client.apis",
            "common_dibbs.clients.rm_client.apis.cluster_definitions_api",
            "common_dibbs.clients.rm_client.apis.credentials_api",
            "common_dibbs.clients.rm_client.apis.host_definitions_api",
            "common_dibbs.clients.rm_client.apis.users_api",
            "common_dibbs.clients.rm_client.configuration",
            "common_dibbs.clients.rm_client.models",
            "common_dibbs.clients.rm_client.models.cluster",
            "common_dibbs.clients.rm_client.models.cluster_post",
            "common_dibbs.clients.rm_client.models.credential",
            "common_dibbs.clients.rm_client.models.credential_patch",
            "common_dibbs.clients.rm_client.models.credential_post",
            "common_dibbs.clients.rm_client.models.credentials",
            "common_dibbs.clients.rm_client.models.error",
            "common_dibbs.clients.rm_client.models.hosts",
            "common_dibbs.clients.rm_client.models.hosts_post",
            "common_dibbs.clients.rm_client.models.public_key",
            "common_dibbs.clients.rm_client.models.temporary_account_credential",
            "common_dibbs.clients.rm_client.models.token_resp",
            "common_dibbs.clients.rm_client.models.user",
            "common_dibbs.clients.rm_client.models.user_patch",
            "common_dibbs.clients.rm_client.models.user_post",
            "common_dibbs.clients.rm_client.rest",
            "common_dibbs.clients.rma_client",
            "common_dibbs.clients.rma_client.api_client",
            "common_dibbs.clients.rma_client.apis",
            "common_dibbs.clients.rma_client.apis.actions_api",
            "common_dibbs.clients.rma_client.apis.users_api",
            "common_dibbs.clients.rma_client.configuration",
            "common_dibbs.clients.rma_client.models",
            "common_dibbs.clients.rma_client.models.credentials",
            "common_dibbs.clients.rma_client.models.error",
            "common_dibbs.clients.rma_client.models.token_resp",
            "common_dibbs.clients.rma_client.models.user",
            "common_dibbs.clients.rma_client.models.user_patch",
            "common_dibbs.clients.rma_client.models.user_post",
            "common_dibbs.clients.rma_client.rest",
            "common_dibbs.clients.rpa_client",
            "common_dibbs.clients.rpa_client.api_client",
            "common_dibbs.clients.rpa_client.apis",
            "common_dibbs.clients.rpa_client.apis.actions_api",
            "common_dibbs.clients.rpa_client.apis.users_api",
            "common_dibbs.clients.rpa_client.configuration",
            "common_dibbs.clients.rpa_client.configure",
            "common_dibbs.clients.rpa_client.models",
            "common_dibbs.clients.rpa_client.models.credentials",
            "common_dibbs.clients.rpa_client.models.error",
            "common_dibbs.clients.rpa_client.models.token_resp",
            "common_dibbs.clients.rpa_client.models.user",
            "common_dibbs.clients.rpa_client.models.user_patch",
            "common_dibbs.clients.rpa_client.models.user_post",
            "common_dibbs.clients.rpa_client.rest",
            "common_dibbs.clients.rpa_client.swagger_client",
            "common_dibbs.clients.rpa_client.swagger_client.api_client",
            "common_dibbs.clients.rpa_client.swagger_client.apis",
            "common_dibbs.clients.rpa_client.swagger_client.apis.actions_api",
            "common_dibbs.clients.rpa_client.swagger_client.apis.users_api",
            "common_dibbs.clients.rpa_client.swagger_client.configuration",
            "common_dibbs.clients.rpa_client.swagger_client.models",
            "common_dibbs.clients.rpa_client.swagger_client.models.credentials",
            "common_dibbs.clients.rpa_client.swagger_client.models.error",
            "common_dibbs.clients.rpa_client.swagger_client.models.token_resp",
            "common_dibbs.clients.rpa_client.swagger_client.models.user",
            "common_dibbs.clients.rpa_client.swagger_client.models.user_patch",
            "common_dibbs.clients.rpa_client.swagger_client.models.user_post",
            "common_dibbs.clients.rpa_client.swagger_client.rest",
            "common_dibbs.config",
            "common_dibbs.config.configuration",
            "common_dibbs.misc"
        ],
        "version": "0.1.9.3.7"
    },
    "common-hanzi": {
        "cmdline": [],
        "modules": [
            "common_hanzi"
        ],
        "version": "0.1"
    },
    "common-mimetypes": {
        "cmdline": [],
        "modules": [
            "common_mimetypes"
        ],
        "version": "0.1rc1"
    },
    "common-ml": {
        "cmdline": [],
        "modules": [
            "commonml",
            "commonml.elasticsearch",
            "commonml.elasticsearch.es_analyzer",
            "commonml.elasticsearch.es_reader",
            "commonml.elasticsearch.reindex",
            "commonml.runner",
            "commonml.runner.runner",
            "commonml.skchainer",
            "commonml.skchainer.classifier",
            "commonml.skchainer.estimator",
            "commonml.skchainer.regressor",
            "commonml.skchainer.xy_dataset",
            "commonml.sklearn",
            "commonml.sklearn.auto_encoder",
            "commonml.sklearn.classifier",
            "commonml.sklearn.estimator",
            "commonml.sklearn.regressor",
            "commonml.sklearn.rnn_estimator",
            "commonml.text",
            "commonml.text.custom_dict_vectorizer",
            "commonml.text.text_to_image",
            "commonml.text.vocabulary_transformer",
            "commonml.utils",
            "commonml.version"
        ],
        "version": "0.0.11"
    },
    "common-python-difio": {
        "cmdline": [],
        "modules": [
            "common_difio"
        ],
        "version": "1.3.1"
    },
    "common-tags": {
        "cmdline": [],
        "modules": [
            "common",
            "common.templatetags",
            "common.templatetags.common_tags"
        ],
        "version": "1.0.1"
    },
    "common-utils": {
        "cmdline": [],
        "modules": [
            "utils",
            "utils.ascheduler",
            "utils.calendar",
            "utils.cmd",
            "utils.errors",
            "utils.rsync"
        ],
        "version": "1.1.2.dev1"
    },
    "commonbwc": {
        "cmdline": [],
        "modules": [
            "commonbwc",
            "commonbwc.config",
            "commonbwc.config.settings",
            "commonbwc.lib",
            "commonbwc.lib.forms",
            "commonbwc.lib.testing",
            "commonbwc.lib.views",
            "commonbwc.views"
        ],
        "version": "0.2.1"
    },
    "commonclient": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "commonconf": {
        "cmdline": [],
        "modules": [
            "commonconf",
            "commonconf.backends",
            "commonconf.exceptions",
            "commonconf.proxy",
            "commonconf.util"
        ],
        "version": "0.6"
    },
    "commoncrawlindex": {
        "cmdline": [],
        "modules": [
            "commoncrawlindex",
            "commoncrawlindex.adaptor",
            "commoncrawlindex.cli",
            "commoncrawlindex.cli.cci_fetch",
            "commoncrawlindex.cli.cci_lookup",
            "commoncrawlindex.index",
            "commoncrawlindex.pbtree",
            "commoncrawlindex.prefix",
            "commoncrawlindex.s3",
            "commoncrawlindex.test",
            "commoncrawlindex.test_map",
            "commoncrawlindex.test_pbtree"
        ],
        "version": "0.0.8"
    },
    "commoncrawljob": {
        "cmdline": [],
        "modules": [
            "aws",
            "aws.aws",
            "aws.redshift",
            "ccjob",
            "ccjob.commoncrawl",
            "ccjob.config",
            "ccjob.gzipstream",
            "ccjob.structures"
        ],
        "version": "0.1.0"
    },
    "commoncrawllib": {
        "cmdline": [],
        "modules": [
            "cclib",
            "cclib.commoncrawl",
            "cclib.utils"
        ],
        "version": "0.7"
    },
    "commoncryptolite": {
        "cmdline": [],
        "modules": [],
        "version": "0.1a6"
    },
    "commondata": {
        "cmdline": [],
        "modules": [
            "commondata",
            "commondata.utils"
        ],
        "version": "0.0.2"
    },
    "commondata.be": {
        "cmdline": [],
        "modules": [
            "commondata.be",
            "commondata.be.antwerpen",
            "commondata.be.brabantwallon",
            "commondata.be.brussels",
            "commondata.be.hainaut",
            "commondata.be.liege",
            "commondata.be.limburg",
            "commondata.be.luxembourg",
            "commondata.be.namur",
            "commondata.be.oostvlaanderen",
            "commondata.be.places",
            "commondata.be.vlaamsbrabant",
            "commondata.be.westvlaanderen"
        ],
        "version": "0.0.2"
    },
    "commondata.ee": {
        "cmdline": [],
        "modules": [
            "commondata.ee",
            "commondata.ee.harju",
            "commondata.ee.hiiu",
            "commondata.ee.idaviru",
            "commondata.ee.j6geva",
            "commondata.ee.jarva",
            "commondata.ee.laane",
            "commondata.ee.laaneviru",
            "commondata.ee.p6lva",
            "commondata.ee.parnu",
            "commondata.ee.places",
            "commondata.ee.rapla",
            "commondata.ee.saare",
            "commondata.ee.tartu",
            "commondata.ee.v6ru",
            "commondata.ee.valga",
            "commondata.ee.viljandi"
        ],
        "version": "0.0.1"
    },
    "commonfate": {
        "cmdline": [],
        "modules": [
            "commonfate",
            "commonfate.decompose",
            "commonfate.model",
            "commonfate.transform"
        ],
        "version": "0.1.3"
    },
    "commonfileapiforpython": {
        "cmdline": [],
        "modules": [
            "CommonFileAPI",
            "CommonFileAPI.CommonAPI",
            "CommonFileAPI.SQLiteAPI"
        ],
        "version": "0.0.1"
    },
    "commongroups": {
        "cmdline": [],
        "modules": [
            "commongroups",
            "commongroups._about",
            "commongroups.cmgroup",
            "commongroups.env",
            "commongroups.errors",
            "commongroups.googlesheet",
            "commongroups.hypertext",
            "commongroups.logconf",
            "commongroups.ops",
            "commongroups.query",
            "commongroups.run",
            "commongroups.tests",
            "commongroups.tests.test_commongroups"
        ],
        "version": "2017.4.4"
    },
    "commonlib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "commonmark": {
        "cmdline": [],
        "modules": [
            "CommonMark",
            "CommonMark.blocks",
            "CommonMark.cmark",
            "CommonMark.common",
            "CommonMark.dump",
            "CommonMark.entitytrans",
            "CommonMark.inlines",
            "CommonMark.main",
            "CommonMark.node",
            "CommonMark.render",
            "CommonMark.render.html",
            "CommonMark.render.renderer",
            "CommonMark.tests",
            "CommonMark.tests.run_spec_tests",
            "CommonMark.tests.unit_tests",
            "CommonMark.utils"
        ],
        "version": "0.7.3"
    },
    "commonmark-to-text": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "commonmodules": {
        "cmdline": [],
        "modules": [
            "CommonModules",
            "CommonModules.DataStructure",
            "CommonModules.DataStructureOperations",
            "CommonModules.IO",
            "CommonModules.Log",
            "CommonModules.Utilities"
        ],
        "version": "0.1.12"
    },
    "commonpath": {
        "cmdline": [],
        "modules": [
            "commonpath",
            "commonpath._version"
        ],
        "version": "0.2.1"
    },
    "commonregex": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "commons": {
        "cmdline": [],
        "modules": [
            "commons",
            "commons.all",
            "commons.async",
            "commons.clients",
            "commons.control",
            "commons.decs",
            "commons.environ",
            "commons.exceps",
            "commons.files",
            "commons.interp",
            "commons.log",
            "commons.misc",
            "commons.networking",
            "commons.path",
            "commons.progress",
            "commons.seqs",
            "commons.servers",
            "commons.setup",
            "commons.sqlhash",
            "commons.startup",
            "commons.strs",
            "commons.structs",
            "commons.threads",
            "commons.trace"
        ],
        "version": "0.7"
    },
    "commons-py": {
        "cmdline": [],
        "modules": [
            "commons",
            "commons.base",
            "commons.dict",
            "commons.round",
            "commons.structures"
        ],
        "version": "0.2.1"
    },
    "commonsdownloader": {
        "cmdline": [],
        "modules": [
            "commonsdownloader",
            "commonsdownloader.commonsdownloader",
            "commonsdownloader.thumbnaildownload"
        ],
        "version": "0.5.3"
    },
    "commonslibs": {
        "cmdline": [],
        "modules": [
            "commonslib",
            "commonslib.biz_model",
            "commonslib.database",
            "commonslib.database_factory",
            "commonslib.database_mixin",
            "commonslib.dateutil",
            "commonslib.decoraters_tornado",
            "commonslib.fileutil",
            "commonslib.imageprocessor",
            "commonslib.jsonutil",
            "commonslib.megaboat",
            "commonslib.memcache_factory",
            "commonslib.network",
            "commonslib.oss_factory",
            "commonslib.stringutil",
            "commonslib.thrift_factory",
            "commonslib.validators",
            "commonslib.view_model"
        ],
        "version": "0.0.1"
    },
    "commonspictureoftheday": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "commontools": {
        "cmdline": [],
        "modules": [
            "commontools",
            "commontools.commontools"
        ],
        "version": "0.1.1"
    },
    "commonuisimple": {
        "cmdline": [],
        "modules": [
            "CommonUiSimple"
        ],
        "version": "1.0.3"
    },
    "commonutil": {
        "cmdline": [],
        "modules": [
            "commonutil",
            "commonutil.container",
            "commonutil.convert",
            "commonutil.formula",
            "commonutil.sanitize",
            "commonutil.template"
        ],
        "version": "0.1.1-dev"
    },
    "commonware": {
        "cmdline": [],
        "modules": [
            "commonware",
            "commonware.decorators",
            "commonware.exceptions",
            "commonware.exceptions.middleware",
            "commonware.exceptions.tests",
            "commonware.log",
            "commonware.log.middleware",
            "commonware.log.tests",
            "commonware.middleware",
            "commonware.request",
            "commonware.request.middleware",
            "commonware.request.tests",
            "commonware.response",
            "commonware.response.cookies",
            "commonware.response.cookies.models",
            "commonware.response.cookies.monkeypatch",
            "commonware.response.cookies.tests",
            "commonware.response.decorators",
            "commonware.response.middleware",
            "commonware.response.tests",
            "commonware.session",
            "commonware.session.middleware"
        ],
        "version": "0.4.3"
    },
    "commonwealth": {
        "cmdline": [],
        "modules": [
            "commonwealth",
            "commonwealth.urls",
            "tests"
        ],
        "version": "0.0.0"
    },
    "communico": {
        "cmdline": [],
        "modules": [
            "communico",
            "communico.admin",
            "communico.apps",
            "communico.forms",
            "communico.models",
            "communico.tests",
            "communico.urls",
            "communico.views"
        ],
        "version": "0.1"
    },
    "communitweet": {
        "cmdline": [],
        "modules": [
            "communitweet",
            "communitweet.Demographics",
            "communitweet.ForceAtlas2",
            "communitweet.GraphFactory",
            "communitweet.Hydration",
            "communitweet.Processing",
            "communitweet.Slicing",
            "communitweet.Summarize",
            "communitweet.Unshortening",
            "communitweet.fa2util"
        ],
        "version": "1.3.4"
    },
    "community": {
        "cmdline": [],
        "modules": [
            "community",
            "community.app"
        ],
        "version": "1.0.0b1"
    },
    "community-codeswarm": {
        "cmdline": [
            "community_codeswarm.py"
        ],
        "modules": [],
        "version": "0.2.1"
    },
    "community-detect": {
        "cmdline": [],
        "modules": [
            "community_detect",
            "community_detect.community_detect"
        ],
        "version": "1.0.0"
    },
    "community-mailbot": {
        "cmdline": [],
        "modules": [
            "community_mailbot",
            "community_mailbot.contentpipe",
            "community_mailbot.discourse",
            "community_mailbot.scripts",
            "community_mailbot.scripts.discourse_categories",
            "community_mailbot.scripts.forward_discourse"
        ],
        "version": "0.1.1"
    },
    "communitysift": {
        "cmdline": [],
        "modules": [
            "community_sift",
            "community_sift.communitysift",
            "python",
            "utils",
            "utils.constants"
        ],
        "version": "0.0.0"
    },
    "communitysiftpython": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "commute": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "commutils": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3.dev4"
    },
    "como": {
        "cmdline": [],
        "modules": [
            "como",
            "como.battery",
            "como.cli",
            "como.core",
            "como.settings"
        ],
        "version": "0.6.0"
    },
    "comonad": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "comp-exp": {
        "cmdline": [],
        "modules": [
            "comp_exp",
            "comp_exp.experimenters",
            "comp_exp.experimenters.base",
            "comp_exp.experimenters.common",
            "comp_exp.experimenters.pure",
            "comp_exp.experimenters.with_hdf5",
            "comp_exp.experimenters.with_pandas",
            "comp_exp.experiments_data",
            "comp_exp.experiments_data.experiment_data",
            "comp_exp.experiments_data.experiment_step_data",
            "comp_exp.experiments_data.experiments_data",
            "comp_exp.experiments_data.experiments_sql",
            "comp_exp.experiments_data.numpy_field_data",
            "comp_exp.experiments_data.utils"
        ],
        "version": "2.3.1"
    },
    "comp-lib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "comp-sci-quiz": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "compactor": {
        "cmdline": [],
        "modules": [
            "compactor",
            "compactor.context",
            "compactor.httpd",
            "compactor.pid",
            "compactor.process",
            "compactor.request",
            "compactor.testing"
        ],
        "version": "0.3.0"
    },
    "compactpath": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.0"
    },
    "compactxml": {
        "cmdline": [],
        "modules": [
            "compactxml",
            "compactxml.compact",
            "compactxml.error",
            "compactxml.expand",
            "compactxml.expression",
            "compactxml.grammar",
            "compactxml.grammar-with-debug",
            "compactxml.macro",
            "compactxml.namespace",
            "compactxml.parser",
            "compactxml.pyparsingaddons",
            "compactxml.resolve",
            "compactxml.variable"
        ],
        "version": "2.1.0"
    },
    "compago": {
        "cmdline": [],
        "modules": [
            "compago",
            "compago.application",
            "compago.command",
            "compago.compago_config",
            "compago.compago_logging",
            "compago.option",
            "compago.plugin",
            "compago.tests",
            "compago.tests.integration",
            "compago.tests.unit",
            "compago.tests.unit.test_application",
            "compago.tests.unit.test_command",
            "compago.tests.unit.test_option"
        ],
        "version": "1.4"
    },
    "companies": {
        "cmdline": [],
        "modules": [
            "companies"
        ],
        "version": "1.0.0"
    },
    "company": {
        "cmdline": [],
        "modules": [
            "company"
        ],
        "version": "0.0.4"
    },
    "companyparser": {
        "cmdline": [],
        "modules": [
            "companyparser"
        ],
        "version": "0.4"
    },
    "compapp": {
        "cmdline": [],
        "modules": [
            "compapp",
            "compapp.apps",
            "compapp.base",
            "compapp.cli",
            "compapp.conftest",
            "compapp.core",
            "compapp.descriptors",
            "compapp.descriptors.dynamic_class",
            "compapp.descriptors.links",
            "compapp.descriptors.misc",
            "compapp.descriptors.tests",
            "compapp.descriptors.tests.test_complex",
            "compapp.descriptors.tests.test_dynamic_class",
            "compapp.descriptors.tests.test_or",
            "compapp.descriptors.tests.test_params",
            "compapp.descriptors.traits",
            "compapp.executables",
            "compapp.interactive",
            "compapp.interface",
            "compapp.loader",
            "compapp.parser",
            "compapp.plugins",
            "compapp.plugins.datastores",
            "compapp.plugins.metastore",
            "compapp.plugins.misc",
            "compapp.plugins.programinfo",
            "compapp.plugins.recorders",
            "compapp.plugins.sysinfo",
            "compapp.plugins.tests",
            "compapp.plugins.tests.test_autoupstreams",
            "compapp.plugins.tests.test_datastores",
            "compapp.plugins.tests.test_logger",
            "compapp.plugins.timing",
            "compapp.plugins.vcs",
            "compapp.samples",
            "compapp.samples.named_figure",
            "compapp.samples.pluggable_plotter_exec",
            "compapp.samples.pluggable_plotter_link",
            "compapp.samples.simple_plots",
            "compapp.strict",
            "compapp.tests",
            "compapp.tests.test_apps",
            "compapp.tests.test_base",
            "compapp.tests.test_core",
            "compapp.tests.test_executable",
            "compapp.tests.test_parametric",
            "compapp.tests.test_parser",
            "compapp.tests.test_samples",
            "compapp.tests.test_strict",
            "compapp.tests.test_variator",
            "compapp.utils",
            "compapp.utils.files",
            "compapp.utils.importer",
            "compapp.variator"
        ],
        "version": "0.1.0.dev1"
    },
    "comparable": {
        "cmdline": [],
        "modules": [
            "comparable",
            "comparable.base",
            "comparable.compound",
            "comparable.simple",
            "comparable.test",
            "comparable.test.settings",
            "comparable.test.test_base",
            "comparable.test.test_compound",
            "comparable.test.test_simple",
            "comparable.test.test_tools",
            "comparable.tools"
        ],
        "version": "1.0"
    },
    "compare": {
        "cmdline": [],
        "modules": [
            "compare"
        ],
        "version": "0.2b"
    },
    "compare-images": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.17"
    },
    "compare-locales": {
        "cmdline": [],
        "modules": [
            "compare_locales",
            "compare_locales.checks",
            "compare_locales.commands",
            "compare_locales.compare",
            "compare_locales.parser",
            "compare_locales.paths",
            "compare_locales.tests",
            "compare_locales.tests.test_checks",
            "compare_locales.tests.test_compare",
            "compare_locales.tests.test_defines",
            "compare_locales.tests.test_dtd",
            "compare_locales.tests.test_ini",
            "compare_locales.tests.test_merge",
            "compare_locales.tests.test_parser",
            "compare_locales.tests.test_properties",
            "compare_locales.tests.test_util",
            "compare_locales.tests.test_webapps",
            "compare_locales.util",
            "compare_locales.webapps"
        ],
        "version": "1.2.3"
    },
    "compare-man-pages-from-two-folders": {
        "cmdline": [
            "CompareManPagesScript.py"
        ],
        "modules": [
            "bin",
            "bin.CompareManPagesScript",
            "compare_man_pages_from_two_folders",
            "compare_man_pages_from_two_folders.CompareManPages",
            "compare_man_pages_from_two_folders.ConfigurationByUser",
            "compare_man_pages_from_two_folders.man_page_PyXB",
            "compare_man_pages_from_two_folders.man_page_PyXB._base",
            "compare_man_pages_from_two_folders.man_page_PyXB.alarm_description",
            "compare_man_pages_from_two_folders.man_page_PyXB.com",
            "compare_man_pages_from_two_folders.man_page_PyXB.com.nokia",
            "compare_man_pages_from_two_folders.man_page_PyXB.com.nokia.oss",
            "compare_man_pages_from_two_folders.man_page_PyXB.com.nokia.oss.fm",
            "compare_man_pages_from_two_folders.man_page_PyXB.com.nokia.oss.fm._types"
        ],
        "version": "1.0.0.dev1"
    },
    "compare-requirements": {
        "cmdline": [
            "cmpreqs"
        ],
        "modules": [
            "cmpreqs",
            "cmpreqs.compare_requirements"
        ],
        "version": "0.2.1"
    },
    "compare-versions": {
        "cmdline": [
            "compare_versions"
        ],
        "modules": [
            "compare_versions",
            "compare_versions.core",
            "compare_versions.schemes",
            "compare_versions.schemes._string",
            "compare_versions.schemes.base",
            "compare_versions.schemes.semver",
            "compare_versions.version"
        ],
        "version": "0.2.0"
    },
    "compare-with-remote": {
        "cmdline": [],
        "modules": [
            "compare_with_remote",
            "compare_with_remote.compare_with_remote"
        ],
        "version": "0.12.0"
    },
    "compare-word": {
        "cmdline": [],
        "modules": [
            "compare_word",
            "compare_word.compare_word"
        ],
        "version": "0.0.1"
    },
    "comparem": {
        "cmdline": [
            "comparem"
        ],
        "modules": [
            "comparem",
            "comparem.PCoA",
            "comparem.aai_calculator",
            "comparem.amino_acid_usage",
            "comparem.classify",
            "comparem.codon_usage",
            "comparem.hierarchical_clustering",
            "comparem.kmer_usage",
            "comparem.lgt_codon",
            "comparem.lgt_dinucleotide",
            "comparem.main",
            "comparem.plots",
            "comparem.plots.heatmap",
            "comparem.plots.mpld3_plugins",
            "comparem.similarity_search"
        ],
        "version": "0.0.21"
    },
    "compareme": {
        "cmdline": [
            "compareMe"
        ],
        "modules": [
            "compareMe",
            "compareMe.codechef",
            "compareMe.spoj"
        ],
        "version": "1.0"
    },
    "comparer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "compares": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "compaslib": {
        "cmdline": [
            "compas2csv"
        ],
        "modules": [
            "compaslib"
        ],
        "version": "2017.4.27"
    },
    "compass": {
        "cmdline": [],
        "modules": [
            "compass",
            "compass.model",
            "compass.ops",
            "compass.services",
            "compass.services.bing",
            "compass.services.google",
            "compass.services.openstreetmap",
            "compass.tests",
            "compass.tests.test_queries"
        ],
        "version": "0.1.4"
    },
    "compass-stylesheets": {
        "cmdline": [],
        "modules": [
            "compass_stylesheets"
        ],
        "version": "1.1.0a3"
    },
    "compat23": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "compbio": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "compdb": {
        "cmdline": [],
        "modules": [
            "compdb",
            "compdb.cli",
            "compdb.complementer",
            "compdb.complementer.headerdb",
            "compdb.config",
            "compdb.core",
            "compdb.db",
            "compdb.db.json",
            "compdb.db.memory",
            "compdb.filelist",
            "compdb.models",
            "compdb.utils"
        ],
        "version": "0.1.1"
    },
    "competeapi": {
        "cmdline": [],
        "modules": [
            "competeapi",
            "competeapi.compete"
        ],
        "version": "0.1"
    },
    "competitions-cup": {
        "cmdline": [],
        "modules": [
            "cup",
            "cup.default",
            "cup.default.PowerOfTwoDoubleEliminationCup",
            "cup.default.PowerOfTwoLosersBracket",
            "cup.default.PowerOfTwoSingleEliminationCup",
            "cup.default.StandardSingleEliminationCup",
            "cup.default.StepladderCup",
            "cup.default.poweroftwo_double",
            "cup.default.single_elimination",
            "cup.default.stepladder"
        ],
        "version": "0.5.1"
    },
    "competitions-match": {
        "cmdline": [],
        "modules": [
            "match",
            "match.default",
            "match.default.SimpleMatch",
            "match.default.TestMatch"
        ],
        "version": "0.3"
    },
    "competitions-scheduler": {
        "cmdline": [],
        "modules": [
            "scheduler",
            "scheduler.roundrobin",
            "scheduler.scheduler"
        ],
        "version": "0.2.5.post2"
    },
    "competitive-dl": {
        "cmdline": [],
        "modules": [
            "competitiveDl",
            "competitiveDl.main",
            "competitiveDl.util"
        ],
        "version": "1.0.0"
    },
    "compiletools": {
        "cmdline": [
            "ct-build",
            "ct-build-dynamic-library",
            "ct-build-static-library",
            "ct-cache",
            "ct-cache-clean",
            "ct-cake",
            "ct-cmakelists",
            "ct-config",
            "ct-cppdeps",
            "ct-create-cmakelists",
            "ct-create-makefile",
            "ct-filelist",
            "ct-findtargets",
            "ct-gitroot",
            "ct-headertree",
            "ct-jobs",
            "ct-list-variants",
            "ct-magicflags"
        ],
        "modules": [
            "ct",
            "ct.apptools",
            "ct.cake",
            "ct.configutils",
            "ct.cppdeps",
            "ct.dirnamer",
            "ct.diskcache",
            "ct.filelist",
            "ct.findtargets",
            "ct.git_utils",
            "ct.headerdeps",
            "ct.hunter",
            "ct.jobs",
            "ct.listvariants",
            "ct.magicflags",
            "ct.makefile",
            "ct.memoize",
            "ct.namer",
            "ct.preprocessor",
            "ct.test_apptools",
            "ct.test_cake",
            "ct.test_cap",
            "ct.test_configutils",
            "ct.test_cppdeps",
            "ct.test_findtargets",
            "ct.test_headerdeps",
            "ct.test_hunter",
            "ct.test_listvariants",
            "ct.test_magicflags",
            "ct.test_makefile",
            "ct.test_memoize",
            "ct.test_movingheaders",
            "ct.test_namer",
            "ct.test_utils",
            "ct.tree",
            "ct.unittesthelper",
            "ct.utils",
            "ct.version",
            "ct.wrappedos"
        ],
        "version": "4.1.38"
    },
    "complaince": {
        "cmdline": [],
        "modules": [
            "complaince",
            "complaince.complaince"
        ],
        "version": "1.0.2.0b0.dev2"
    },
    "compleat": {
        "cmdline": [],
        "modules": [
            "compleat",
            "compleat.cli",
            "compleat.output",
            "compleat.query"
        ],
        "version": "0.0.2"
    },
    "completegenomicstools": {
        "cmdline": [
            "cgent"
        ],
        "modules": [
            "completegenomicstools",
            "completegenomicstools.cg_somaticcalls2annovar",
            "completegenomicstools.command",
            "completegenomicstools.commands",
            "completegenomicstools.formats",
            "completegenomicstools.main"
        ],
        "version": "0.1.2dev"
    },
    "completeit": {
        "cmdline": [],
        "modules": [
            "completeit",
            "completeit.forms",
            "completeit.models",
            "completeit.serializer",
            "completeit.tests",
            "completeit.urls",
            "completeit.views"
        ],
        "version": "0.0.1"
    },
    "completeme": {
        "cmdline": [
            "setup_completeme_key_binding.sh"
        ],
        "modules": [
            "completeme",
            "completeme.collection",
            "completeme.completeme",
            "completeme.search",
            "completeme.utils"
        ],
        "version": "0.5.14"
    },
    "completethat": {
        "cmdline": [],
        "modules": [
            "completethat",
            "completethat.matrix_completion"
        ],
        "version": "0.1dev"
    },
    "completion": {
        "cmdline": [],
        "modules": [
            "completion"
        ],
        "version": "0.1.2"
    },
    "complexdecimal": {
        "cmdline": [],
        "modules": [
            "complexdecimal",
            "complexdecimal.constants",
            "complexdecimal.errors"
        ],
        "version": "1.0.3"
    },
    "complexhttpserver": {
        "cmdline": [],
        "modules": [
            "ComplexHTTPServer"
        ],
        "version": "0.1"
    },
    "complexity": {
        "cmdline": [],
        "modules": [
            "complexity",
            "complexity.conf",
            "complexity.exceptions",
            "complexity.generate",
            "complexity.main",
            "complexity.prep",
            "complexity.serve",
            "complexity.utils"
        ],
        "version": "0.9.1"
    },
    "complexity-estimate": {
        "cmdline": [],
        "modules": [
            "complexity_estimate",
            "complexity_estimate.Algorythms",
            "complexity_estimate.ComplexCalc",
            "complexity_estimate.Timeout",
            "complexity_estimate.UsageException",
            "complexity_estimate.main"
        ],
        "version": "1.0"
    },
    "complexityresolver": {
        "cmdline": [],
        "modules": [
            "ComplexityResolver.algorithm",
            "ComplexityResolver.argumentsprovider",
            "ComplexityResolver.consts",
            "ComplexityResolver.exceptions",
            "ComplexityResolver.main",
            "ComplexityResolver.resolver",
            "ComplexityResolver.samplingProvider"
        ],
        "version": "1.02"
    },
    "complexnetworksim": {
        "cmdline": [],
        "modules": [
            "ComplexNetworkSim",
            "ComplexNetworkSim.agents",
            "ComplexNetworkSim.animation",
            "ComplexNetworkSim.customexceptions",
            "ComplexNetworkSim.logging",
            "ComplexNetworkSim.plotting",
            "ComplexNetworkSim.simulation",
            "ComplexNetworkSim.statistics",
            "ComplexNetworkSim.unittests",
            "ComplexNetworkSim.unittests.utilsTests",
            "ComplexNetworkSim.utils"
        ],
        "version": "0.1.2"
    },
    "complexsystems": {
        "cmdline": [],
        "modules": [
            "complex_systems",
            "complex_systems.diffusion",
            "complex_systems.dygraph",
            "complex_systems.mobility",
            "complex_systems.mobility.distance",
            "complex_systems.mobility.levy_walk",
            "complex_systems.mobility.stabrnd",
            "complex_systems.pgg",
            "complex_systems.pgg_diffusion",
            "complex_systems.quasi_unit_disk_graph",
            "complex_systems.spatial",
            "complex_systems.spatial.kernel_density_geo"
        ],
        "version": "0.3.2"
    },
    "compliance-checker": {
        "cmdline": [
            "cchecker.py"
        ],
        "modules": [
            "compliance_checker",
            "compliance_checker.acdd",
            "compliance_checker.base",
            "compliance_checker.cf",
            "compliance_checker.cf.appendix_d",
            "compliance_checker.cf.appendix_f",
            "compliance_checker.cf.cf",
            "compliance_checker.cf.util",
            "compliance_checker.cfutil",
            "compliance_checker.ioos",
            "compliance_checker.protocols",
            "compliance_checker.protocols.cdl",
            "compliance_checker.protocols.netcdf",
            "compliance_checker.protocols.opendap",
            "compliance_checker.runner",
            "compliance_checker.suite",
            "compliance_checker.tests",
            "compliance_checker.tests.resources",
            "compliance_checker.tests.test_acdd",
            "compliance_checker.tests.test_base",
            "compliance_checker.tests.test_cf",
            "compliance_checker.tests.test_cf_integration",
            "compliance_checker.tests.test_cli",
            "compliance_checker.tests.test_feature_detection",
            "compliance_checker.tests.test_ioos",
            "compliance_checker.tests.test_protocols",
            "compliance_checker.tests.test_suite",
            "compliance_checker.tests.test_util",
            "compliance_checker.util"
        ],
        "version": "3.0.3"
    },
    "compliancelib": {
        "cmdline": [],
        "modules": [
            "compliancelib",
            "compliancelib.assessor",
            "compliancelib.nist800_53",
            "compliancelib.nist800_53viz",
            "compliancelib.opencontrolfiles",
            "compliancelib.systemcompliance"
        ],
        "version": "1.1.2"
    },
    "compliment": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "complimentr": {
        "cmdline": [],
        "modules": [
            "complimentr",
            "complimentr.ask_user_for_info",
            "complimentr.common",
            "complimentr.compliments",
            "complimentr.messageSender",
            "complimentr.run_website",
            "complimentr.settings",
            "complimentr.tasks"
        ],
        "version": "0.0.9"
    },
    "complyadvantage": {
        "cmdline": [],
        "modules": [
            "complyadvantage"
        ],
        "version": "0.3"
    },
    "compmake": {
        "cmdline": [],
        "modules": [
            "compmake",
            "compmake.config",
            "compmake.config.config_html",
            "compmake.config.config_list",
            "compmake.config.config_optparse",
            "compmake.config.structure",
            "compmake.constants",
            "compmake.context",
            "compmake.events",
            "compmake.events.registered_events",
            "compmake.events.registrar",
            "compmake.events.structures",
            "compmake.exceptions",
            "compmake.jobs",
            "compmake.jobs.actions",
            "compmake.jobs.actions_newprocess",
            "compmake.jobs.dependencies",
            "compmake.jobs.job_execution",
            "compmake.jobs.manager",
            "compmake.jobs.priority",
            "compmake.jobs.progress_imp2",
            "compmake.jobs.queries",
            "compmake.jobs.result_dict",
            "compmake.jobs.storage",
            "compmake.jobs.syntax",
            "compmake.jobs.syntax.parsing",
            "compmake.jobs.uptodate",
            "compmake.plugins",
            "compmake.plugins.backend_local",
            "compmake.plugins.backend_local.commands",
            "compmake.plugins.backend_local.manager_local",
            "compmake.plugins.backend_multyvac",
            "compmake.plugins.backend_multyvac.commands",
            "compmake.plugins.backend_multyvac.logging_imp",
            "compmake.plugins.backend_multyvac.mvac_job_imp",
            "compmake.plugins.backend_multyvac.mvac_job_rdb_imp",
            "compmake.plugins.backend_multyvac.mvac_manager",
            "compmake.plugins.backend_multyvac.sync",
            "compmake.plugins.backend_multyvac.sync_db",
            "compmake.plugins.backend_pmake",
            "compmake.plugins.backend_pmake.commands",
            "compmake.plugins.backend_pmake.parmake_job2_imp",
            "compmake.plugins.backend_pmake.pmake_manager",
            "compmake.plugins.backend_pmake.pmakesub",
            "compmake.plugins.backend_sge",
            "compmake.plugins.backend_sge.commands",
            "compmake.plugins.backend_sge.qacct",
            "compmake.plugins.backend_sge.sge_manager",
            "compmake.plugins.backend_sge.sge_misc",
            "compmake.plugins.backend_sge.sge_sub",
            "compmake.plugins.backend_ssh_cluster",
            "compmake.plugins.backend_ssh_cluster.cluster_conf",
            "compmake.plugins.backend_ssh_cluster.commands",
            "compmake.plugins.backend_ssh_cluster.manager_ssh_cluster",
            "compmake.plugins.clear_imp",
            "compmake.plugins.commands_status",
            "compmake.plugins.console_banners",
            "compmake.plugins.console_output",
            "compmake.plugins.console_status",
            "compmake.plugins.credits",
            "compmake.plugins.debug_priority",
            "compmake.plugins.details",
            "compmake.plugins.details_why",
            "compmake.plugins.dump",
            "compmake.plugins.event_debugger",
            "compmake.plugins.execution_stats",
            "compmake.plugins.execution_stats.ex_stats",
            "compmake.plugins.graph",
            "compmake.plugins.graph_animation_imp",
            "compmake.plugins.job_definition_status",
            "compmake.plugins.list_jobs_imp",
            "compmake.plugins.old_backend_multiprocessing",
            "compmake.plugins.old_backend_multiprocessing.commands",
            "compmake.plugins.old_backend_multiprocessing.manager_multiprocessing",
            "compmake.plugins.old_backend_multiprocessing.shared",
            "compmake.plugins.reload_module",
            "compmake.plugins.sanity_check",
            "compmake.plugins.stats",
            "compmake.plugins.tracker",
            "compmake.scripts",
            "compmake.scripts.master",
            "compmake.scripts.scripts_utils",
            "compmake.scripts.scripts_utils.script_utils",
            "compmake.state",
            "compmake.storage",
            "compmake.storage.filesystem",
            "compmake.storage.memorycache",
            "compmake.storage.redisdb",
            "compmake.structures",
            "compmake.ui",
            "compmake.ui.coloredlog",
            "compmake.ui.commands",
            "compmake.ui.commands_html",
            "compmake.ui.config_ui",
            "compmake.ui.console",
            "compmake.ui.helpers",
            "compmake.ui.ui",
            "compmake.ui.visualization",
            "compmake.unittests",
            "compmake.unittests.compmake_test",
            "compmake.unittests.expected_fail",
            "compmake.unittests.mockup",
            "compmake.unittests.mockup_dynamic_4",
            "compmake.unittests.test_assertions",
            "compmake.unittests.test_blocked",
            "compmake.unittests.test_delegation",
            "compmake.unittests.test_delegation_2",
            "compmake.unittests.test_delegation_3",
            "compmake.unittests.test_delegation_4",
            "compmake.unittests.test_delegation_5",
            "compmake.unittests.test_dynamic_1",
            "compmake.unittests.test_dynamic_2",
            "compmake.unittests.test_dynamic_2rec",
            "compmake.unittests.test_dynamic_2rec_par",
            "compmake.unittests.test_dynamic_3",
            "compmake.unittests.test_dynamic_4",
            "compmake.unittests.test_dynamic_5",
            "compmake.unittests.test_dynamic_6",
            "compmake.unittests.test_dynamic_7",
            "compmake.unittests.test_dynamic_8",
            "compmake.unittests.test_dynamic_9",
            "compmake.unittests.test_dynamic_9_redefinition",
            "compmake.unittests.test_dynamic_failure",
            "compmake.unittests.test_dynamic_new_process",
            "compmake.unittests.test_dynamic_re",
            "compmake.unittests.test_examples",
            "compmake.unittests.test_invalid_functions",
            "compmake.unittests.test_more",
            "compmake.unittests.test_old_jobs",
            "compmake.unittests.test_plugins",
            "compmake.unittests.test_priorities",
            "compmake.unittests.test_progress",
            "compmake.unittests.test_stats",
            "compmake.unittests.test_storage",
            "compmake.unittests.test_syntax",
            "compmake.unittests.test_unpickable_result",
            "compmake.utils",
            "compmake.utils.capture",
            "compmake.utils.colored",
            "compmake.utils.coloredterm",
            "compmake.utils.debug_pickler",
            "compmake.utils.docstring",
            "compmake.utils.duration_hum",
            "compmake.utils.filesystem_utils",
            "compmake.utils.format_exceptions",
            "compmake.utils.friendly_path_imp",
            "compmake.utils.frozen",
            "compmake.utils.instantiate_utils",
            "compmake.utils.memoize_imp",
            "compmake.utils.pickle_frustration",
            "compmake.utils.pickling_utils",
            "compmake.utils.proctitle",
            "compmake.utils.safe_pickle",
            "compmake.utils.safe_write",
            "compmake.utils.strings_with_escapes",
            "compmake.utils.system_stats",
            "compmake.utils.table_formatter",
            "compmake.utils.terminal_size",
            "compmake.utils.time_track",
            "compmake.utils.timedate",
            "compmake.utils.values_interpretation",
            "compmake.utils.values_interpretation_test",
            "compmake.utils.which_imp",
            "compmake.utils.wildcards"
        ],
        "version": "3.5.6"
    },
    "compmech": {
        "cmdline": [],
        "modules": [
            "compmech",
            "compmech.analysis",
            "compmech.analysis.analysis",
            "compmech.analysis.arc_length",
            "compmech.analysis.freq",
            "compmech.analysis.linear_buckling",
            "compmech.analysis.newton_raphson",
            "compmech.analysis.static",
            "compmech.composite",
            "compmech.composite.lamina",
            "compmech.composite.laminate",
            "compmech.composite.matlamina",
            "compmech.conecyl",
            "compmech.conecyl.clpt",
            "compmech.conecyl.clpt.setup",
            "compmech.conecyl.conecyl",
            "compmech.conecyl.conecylDB",
            "compmech.conecyl.dev_utils",
            "compmech.conecyl.fsdt",
            "compmech.conecyl.fsdt.setup",
            "compmech.conecyl.imperfections",
            "compmech.conecyl.imperfections.imperfections",
            "compmech.conecyl.imperfections.setup",
            "compmech.conecyl.modelDB",
            "compmech.conecyl.plotutils",
            "compmech.conecyl.setup",
            "compmech.conecyl.studies",
            "compmech.conecyl.sympytools",
            "compmech.conecyl.sympytools.matrixtools",
            "compmech.conecyl.test",
            "compmech.constants",
            "compmech.integrate",
            "compmech.integrate.setup",
            "compmech.interpolate",
            "compmech.logger",
            "compmech.matplotlib_utils",
            "compmech.matplotlib_utils._big",
            "compmech.matplotlib_utils._small",
            "compmech.matplotlib_utils.input_from_txt",
            "compmech.matplotlib_utils.plot_defaults",
            "compmech.panel",
            "compmech.panel.assembly",
            "compmech.panel.assembly.assembly",
            "compmech.panel.assembly.cylinder",
            "compmech.panel.assembly.cylinder_blade_stiffened",
            "compmech.panel.assembly.tstiff2d_1stiff_compression",
            "compmech.panel.assembly.tstiff2d_1stiff_flutter",
            "compmech.panel.assembly.tstiff2d_1stiff_freq",
            "compmech.panel.connections",
            "compmech.panel.connections.penalty_constants",
            "compmech.panel.connections.setup",
            "compmech.panel.modelDB",
            "compmech.panel.models",
            "compmech.panel.models.setup",
            "compmech.panel.panel",
            "compmech.panel.setup",
            "compmech.setup",
            "compmech.setup_patch",
            "compmech.sparse",
            "compmech.stiffener",
            "compmech.stiffener.bladestiff1d",
            "compmech.stiffener.bladestiff2d",
            "compmech.stiffener.modelDB",
            "compmech.stiffener.models",
            "compmech.stiffener.models.setup",
            "compmech.stiffener.setup",
            "compmech.stiffener.tstiff2d",
            "compmech.stiffpanelbay",
            "compmech.stiffpanelbay.stiffpanelbay",
            "compmech.symbolic",
            "compmech.symbolic.doperator",
            "compmech.symbolic.mathematica_printer",
            "compmech.version"
        ],
        "version": "0.7.2"
    },
    "component": {
        "cmdline": [],
        "modules": [
            "component"
        ],
        "version": "0.0.1"
    },
    "component-builder": {
        "cmdline": [],
        "modules": [
            "component_builder",
            "component_builder.build",
            "component_builder.component",
            "component_builder.config",
            "component_builder.discover",
            "component_builder.envs",
            "component_builder.exceptions",
            "component_builder.github",
            "component_builder.release",
            "component_builder.utils"
        ],
        "version": "1.1.1.232"
    },
    "component-deployer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "componentpermissionsplugin": {
        "cmdline": [],
        "modules": [
            "componentpermissions",
            "componentpermissions.api"
        ],
        "version": "0.1.7"
    },
    "componere": {
        "cmdline": [],
        "modules": [
            "componere",
            "tests",
            "tests.test_generate"
        ],
        "version": "0.1.3"
    },
    "compony": {
        "cmdline": [],
        "modules": [
            "compony",
            "compony.core",
            "compony.elements",
            "compony.util"
        ],
        "version": "0.0.5"
    },
    "composable-paxos": {
        "cmdline": [],
        "modules": [
            "composable_paxos"
        ],
        "version": "1.0.0"
    },
    "compose": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "compose-addons": {
        "cmdline": [],
        "modules": [
            "compose_addons",
            "compose_addons.config_utils",
            "compose_addons.includes",
            "compose_addons.merge",
            "compose_addons.namespace"
        ],
        "version": "0.2.1"
    },
    "compose-deploy": {
        "cmdline": [
            "compose-deploy"
        ],
        "modules": [
            "compose_deploy",
            "compose_deploy._main",
            "compose_deploy.remote"
        ],
        "version": "0.1.5"
    },
    "compose-diff": {
        "cmdline": [
            "compose_diff"
        ],
        "modules": [
            "compose_diff"
        ],
        "version": "0.4.0"
    },
    "compose-dump": {
        "cmdline": [],
        "modules": [
            "compose_dump",
            "compose_dump.backup",
            "compose_dump.main",
            "compose_dump.storage",
            "compose_dump.utils"
        ],
        "version": "0.1b3"
    },
    "compose-format": {
        "cmdline": [
            "compose_format"
        ],
        "modules": [
            "compose_format"
        ],
        "version": "1.0.0"
    },
    "compose-func": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "compose-mode": {
        "cmdline": [
            "compose-mode"
        ],
        "modules": [
            "compose_mode",
            "compose_mode._main",
            "compose_mode.exceptions",
            "compose_mode.generate",
            "compose_mode.io",
            "compose_mode.status"
        ],
        "version": "0.5.3"
    },
    "compose-monitor": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.3"
    },
    "compose-monkey": {
        "cmdline": [],
        "modules": [
            "compose",
            "compose.cli",
            "compose.cli.colors",
            "compose.cli.command",
            "compose.cli.docker_client",
            "compose.cli.docopt_command",
            "compose.cli.errors",
            "compose.cli.formatter",
            "compose.cli.log_printer",
            "compose.cli.main",
            "compose.cli.multiplexer",
            "compose.cli.utils",
            "compose.cli.verbose_proxy",
            "compose.config",
            "compose.const",
            "compose.container",
            "compose.legacy",
            "compose.progress_stream",
            "compose.project",
            "compose.proxy",
            "compose.service",
            "compose.state",
            "compose.utils"
        ],
        "version": "0.1.2"
    },
    "compose-plantuml": {
        "cmdline": [
            "compose_plantuml"
        ],
        "modules": [
            "compose_plantuml"
        ],
        "version": "0.1.2"
    },
    "compose-to-rancher": {
        "cmdline": [],
        "modules": [
            "compose_to_rancher"
        ],
        "version": "0.1.0a4"
    },
    "composed": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "composer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "composite": {
        "cmdline": [],
        "modules": [
            "composite.composite",
            "composite.test_composite"
        ],
        "version": "0.03.000"
    },
    "compositeslib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "compositor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "compost": {
        "cmdline": [],
        "modules": [
            "compost",
            "compost.dataset",
            "compost.model",
            "compost.saving_calculation"
        ],
        "version": "0.2.7"
    },
    "compot": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "compound": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "compound-word-splitter": {
        "cmdline": [],
        "modules": [
            "splitter",
            "splitter.compound_word_splitter"
        ],
        "version": "0.3"
    },
    "compoundfiles": {
        "cmdline": [],
        "modules": [
            "compoundfiles",
            "compoundfiles.const",
            "compoundfiles.entities",
            "compoundfiles.errors",
            "compoundfiles.mmap",
            "compoundfiles.reader",
            "compoundfiles.streams"
        ],
        "version": "0.3"
    },
    "compoundpi": {
        "cmdline": [],
        "modules": [
            "compoundpi",
            "compoundpi.cli",
            "compoundpi.client",
            "compoundpi.cmdline",
            "compoundpi.common",
            "compoundpi.configparser",
            "compoundpi.exc",
            "compoundpi.gui",
            "compoundpi.ipaddress",
            "compoundpi.protocol",
            "compoundpi.qt",
            "compoundpi.qt.binding_helper",
            "compoundpi.server",
            "compoundpi.terminal",
            "compoundpi.windows",
            "compoundpi.windows.add_dialog",
            "compoundpi.windows.capture_dialog",
            "compoundpi.windows.configure_dialog",
            "compoundpi.windows.exception_dialog",
            "compoundpi.windows.find_dialog",
            "compoundpi.windows.main_window",
            "compoundpi.windows.progress_dialog"
        ],
        "version": "0.4"
    },
    "compoundpye": {
        "cmdline": [
            "cp_GUI.py",
            "cp_analyze_set_of_simulations.py",
            "cp_analyze_single_simulation.py",
            "cp_get_circuit_info.py",
            "cp_non_GUI_wrapper.py",
            "cp_replace_T4_T5_inhibitory_with_LPis.py"
        ],
        "modules": [
            "CompoundPye",
            "CompoundPye._set_path",
            "CompoundPye.executables.cp_GUI",
            "CompoundPye.executables.cp_analyze_set_of_simulations",
            "CompoundPye.executables.cp_analyze_single_simulation",
            "CompoundPye.executables.cp_get_circuit_info",
            "CompoundPye.executables.cp_non_GUI_wrapper",
            "CompoundPye.executables.cp_replace_T4_T5_inhibitory_with_LPis",
            "CompoundPye.settings",
            "CompoundPye.src",
            "CompoundPye.src.Analyzer",
            "CompoundPye.src.Analyzer.analyze_compare",
            "CompoundPye.src.Analyzer.analyzer",
            "CompoundPye.src.Circuits",
            "CompoundPye.src.Circuits.circuit",
            "CompoundPye.src.Circuits.circuit_array",
            "CompoundPye.src.Components",
            "CompoundPye.src.Components.Connections",
            "CompoundPye.src.Components.Connections.connection",
            "CompoundPye.src.Components.component",
            "CompoundPye.src.Components.highpass_filter",
            "CompoundPye.src.Components.linear_input_filter",
            "CompoundPye.src.Components.lowpass_filter",
            "CompoundPye.src.Components.transfer_functions",
            "CompoundPye.src.ErrorHandling",
            "CompoundPye.src.ErrorHandling.normal_print",
            "CompoundPye.src.GUI",
            "CompoundPye.src.GUI.circuit_editor",
            "CompoundPye.src.GUI.main_gui",
            "CompoundPye.src.GUI.sensor_editor",
            "CompoundPye.src.GUI.stimuli_editor",
            "CompoundPye.src.GUI.ui_tabs",
            "CompoundPye.src.Graph",
            "CompoundPye.src.Graph.sensors",
            "CompoundPye.src.Graph.sensors_old",
            "CompoundPye.src.OmmatidialMap",
            "CompoundPye.src.OmmatidialMap.read_droso",
            "CompoundPye.src.OmmatidialMap.read_droso_mat",
            "CompoundPye.src.Parser",
            "CompoundPye.src.Parser.circuit_parser",
            "CompoundPye.src.Parser.creator",
            "CompoundPye.src.Parser.paths_to",
            "CompoundPye.src.Parser.sensor_parser",
            "CompoundPye.src.Parser.stimuli_creator",
            "CompoundPye.src.Sensors",
            "CompoundPye.src.Sensors.create_array",
            "CompoundPye.src.Sensors.dummy_sensor",
            "CompoundPye.src.Sensors.filter_funcs",
            "CompoundPye.src.Sensors.photoreceptor",
            "CompoundPye.src.Sensors.sensor",
            "CompoundPye.src.Surroundings",
            "CompoundPye.src.Surroundings.Stimuli",
            "CompoundPye.src.Surroundings.Stimuli.one_dim_box",
            "CompoundPye.src.Surroundings.Stimuli.one_dim_sine",
            "CompoundPye.src.Surroundings.Stimuli.stimulus",
            "CompoundPye.src.Surroundings.Stimuli.two_dim_box",
            "CompoundPye.src.Surroundings.Stimuli.two_dim_sine",
            "CompoundPye.src.Surroundings.one_dim",
            "CompoundPye.src.Surroundings.surroundings",
            "CompoundPye.src.Surroundings.video",
            "CompoundPye.src.settings",
            "CompoundPye.src.system"
        ],
        "version": "0.93.9"
    },
    "compoze": {
        "cmdline": [],
        "modules": [
            "compoze",
            "compoze._compat",
            "compoze.compozer",
            "compoze.fetcher",
            "compoze.index",
            "compoze.indexer",
            "compoze.informer",
            "compoze.pooler",
            "compoze.tests",
            "compoze.tests.test_compozer",
            "compoze.tests.test_fetcher",
            "compoze.tests.test_index",
            "compoze.tests.test_indexer",
            "compoze.tests.test_informer",
            "compoze.tests.test_pooler"
        ],
        "version": "1.0"
    },
    "compreffor": {
        "cmdline": [],
        "modules": [
            "compreffor",
            "compreffor.cxxCompressor",
            "compreffor.pyCompressor",
            "compreffor.test",
            "compreffor.test.dummy",
            "compreffor.test.pyCompressor_test",
            "compreffor.test.util"
        ],
        "version": "0.4.4"
    },
    "compress-pyscripts": {
        "cmdline": [
            "compile_single_file.py",
            "setup.py",
            "yui_compress_files.py"
        ],
        "modules": [],
        "version": "0.0.1"
    },
    "compressed-deque": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "compressibleinterflux": {
        "cmdline": [],
        "modules": [
            "compressibleInterFlux",
            "compressibleInterFlux.r1_7_1",
            "compressibleInterFlux.r2_0_0",
            "compressibleInterFlux.r2_1_0"
        ],
        "version": "2.1"
    },
    "compressinja": {
        "cmdline": [],
        "modules": [
            "compressinja",
            "compressinja.html"
        ],
        "version": "0.0.2"
    },
    "compressor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "compressor-requirejs": {
        "cmdline": [],
        "modules": [
            "compressor_requirejs",
            "compressor_requirejs.compiler",
            "compressor_requirejs.compressor",
            "compressor_requirejs.compressor.r_precompiler",
            "compressor_requirejs.config",
            "compressor_requirejs.models",
            "compressor_requirejs.tests"
        ],
        "version": "1.5"
    },
    "compropago": {
        "cmdline": [],
        "modules": [
            "compropago",
            "compropago.client",
            "compropago.config",
            "compropago.service",
            "compropago/factory",
            "compropago/factory.factory",
            "compropago/factory.serialize",
            "compropago/factory/models",
            "compropago/factory/models.cporderinfo",
            "compropago/factory/models.customer",
            "compropago/factory/models.evalauthinfo",
            "compropago/factory/models.feedetails",
            "compropago/factory/models.instructiondetails",
            "compropago/factory/models.instructions",
            "compropago/factory/models.neworderinfo",
            "compropago/factory/models.orderinfo",
            "compropago/factory/models.placeorderinfo",
            "compropago/factory/models.provider",
            "compropago/factory/models.smsdata",
            "compropago/factory/models.smsinfo",
            "compropago/factory/models.smsobject",
            "compropago/factory/models.webhook",
            "compropago/tools",
            "compropago/tools.http",
            "compropago/tools.request",
            "compropago/tools.validations"
        ],
        "version": "1.0.2"
    },
    "compropago-python": {
        "cmdline": [],
        "modules": [
            "compropago",
            "compropago.exceptions",
            "compropago.tests"
        ],
        "version": "0.3"
    },
    "compset": {
        "cmdline": [],
        "modules": [
            "compset",
            "compset.compset",
            "compset.test"
        ],
        "version": "0.2"
    },
    "compsim": {
        "cmdline": [],
        "modules": [
            "compsim",
            "compsim.company_name_similarity",
            "compsim.company_score_tfidf"
        ],
        "version": "0.0.3"
    },
    "comptests": {
        "cmdline": [],
        "modules": [
            "comptests",
            "comptests.comptests",
            "comptests.find_modules_imp",
            "comptests.nose",
            "comptests.registrar",
            "comptests.reports",
            "comptests.results",
            "comptests.unittests",
            "comptests.unittests.test_example_package",
            "comptests_ex",
            "comptests_ex.test_yield",
            "example_package",
            "example_package.configuration",
            "example_package.interfaces",
            "example_package.unittests",
            "example_package.unittests.all_tests",
            "example_package.unittests.generation"
        ],
        "version": "1.3.7"
    },
    "compute-hyperv": {
        "cmdline": [],
        "modules": [
            "hyperv",
            "hyperv.hacking",
            "hyperv.hacking.checks",
            "hyperv.i18n",
            "hyperv.nova",
            "hyperv.nova.basevolumeutils",
            "hyperv.nova.block_device_manager",
            "hyperv.nova.constants",
            "hyperv.nova.driver",
            "hyperv.nova.eventhandler",
            "hyperv.nova.hostops",
            "hyperv.nova.hostutils",
            "hyperv.nova.hostutilsv2",
            "hyperv.nova.imagecache",
            "hyperv.nova.ioutils",
            "hyperv.nova.livemigrationops",
            "hyperv.nova.livemigrationutils",
            "hyperv.nova.migrationops",
            "hyperv.nova.namedpipe",
            "hyperv.nova.networkutils",
            "hyperv.nova.networkutilsv2",
            "hyperv.nova.ovsutils",
            "hyperv.nova.pathutils",
            "hyperv.nova.rdpconsoleops",
            "hyperv.nova.rdpconsoleutils",
            "hyperv.nova.rdpconsoleutilsv2",
            "hyperv.nova.serialconsolehandler",
            "hyperv.nova.serialconsoleops",
            "hyperv.nova.serialproxy",
            "hyperv.nova.snapshotops",
            "hyperv.nova.utilsfactory",
            "hyperv.nova.vhdutils",
            "hyperv.nova.vhdutilsv2",
            "hyperv.nova.vif",
            "hyperv.nova.vmops",
            "hyperv.nova.vmutils",
            "hyperv.nova.vmutils10",
            "hyperv.nova.vmutilsv2",
            "hyperv.nova.volumeops",
            "hyperv.nova.volumeutils",
            "hyperv.nova.volumeutilsv2",
            "hyperv.tests",
            "hyperv.tests.fake_instance",
            "hyperv.tests.test",
            "hyperv.tests.unit",
            "hyperv.tests.unit.test_base",
            "hyperv.tests.unit.test_basevolumeutils",
            "hyperv.tests.unit.test_blockdevicemanager",
            "hyperv.tests.unit.test_driver",
            "hyperv.tests.unit.test_eventhandler",
            "hyperv.tests.unit.test_hostops",
            "hyperv.tests.unit.test_hostutils",
            "hyperv.tests.unit.test_hostutilsv2",
            "hyperv.tests.unit.test_imagecache",
            "hyperv.tests.unit.test_ioutils",
            "hyperv.tests.unit.test_livemigrationops",
            "hyperv.tests.unit.test_livemigrationutils",
            "hyperv.tests.unit.test_migrationops",
            "hyperv.tests.unit.test_namedpipe",
            "hyperv.tests.unit.test_networkutils",
            "hyperv.tests.unit.test_networkutilsv2",
            "hyperv.tests.unit.test_pathutils",
            "hyperv.tests.unit.test_rdpconsoleops",
            "hyperv.tests.unit.test_rdpconsoleutils",
            "hyperv.tests.unit.test_rdpconsoleutilsv2",
            "hyperv.tests.unit.test_serialconsolehandler",
            "hyperv.tests.unit.test_serialconsoleops",
            "hyperv.tests.unit.test_serialproxy",
            "hyperv.tests.unit.test_snapshotops",
            "hyperv.tests.unit.test_utilsfactory",
            "hyperv.tests.unit.test_vhdutils",
            "hyperv.tests.unit.test_vhdutilsv2",
            "hyperv.tests.unit.test_vif",
            "hyperv.tests.unit.test_vmops",
            "hyperv.tests.unit.test_vmutils",
            "hyperv.tests.unit.test_vmutils10",
            "hyperv.tests.unit.test_vmutilsv2",
            "hyperv.tests.unit.test_volumeops",
            "hyperv.tests.unit.test_volumeutils",
            "hyperv.tests.unit.test_volumeutilsv2"
        ],
        "version": "1.0.0"
    },
    "computer": {
        "cmdline": [],
        "modules": [
            "computer",
            "computer.evaluate",
            "computer.exceptions",
            "computer.operations"
        ],
        "version": "1.0.0"
    },
    "computer-usage-statistics": {
        "cmdline": [],
        "modules": [
            "computer_usage_statistics.installation",
            "computer_usage_statistics.prepare_deploy",
            "computer_usage_statistics.print_to_terminal",
            "computer_usage_statistics.python_script"
        ],
        "version": "0.1"
    },
    "computercraft": {
        "cmdline": [],
        "modules": [
            "computercraft",
            "computercraft.errors",
            "computercraft.server",
            "computercraft.subapis",
            "computercraft.subapis.base",
            "computercraft.subapis.colors",
            "computercraft.subapis.commands",
            "computercraft.subapis.disk",
            "computercraft.subapis.fs",
            "computercraft.subapis.gps",
            "computercraft.subapis.help",
            "computercraft.subapis.keys",
            "computercraft.subapis.mixins",
            "computercraft.subapis.multishell",
            "computercraft.subapis.os",
            "computercraft.subapis.peripheral",
            "computercraft.subapis.rednet",
            "computercraft.subapis.redstone",
            "computercraft.subapis.root",
            "computercraft.subapis.settings",
            "computercraft.subapis.shell",
            "computercraft.subapis.term",
            "computercraft.subapis.textutils",
            "computercraft.subapis.turtle",
            "computercraft.subapis.window"
        ],
        "version": "0.1.1"
    },
    "computerwords": {
        "cmdline": [],
        "modules": [
            "computerwords",
            "computerwords._css",
            "computerwords._html",
            "computerwords.cmd",
            "computerwords.config",
            "computerwords.cwdom",
            "computerwords.cwdom.CWTree",
            "computerwords.cwdom.nodes",
            "computerwords.cwdom.traversal",
            "computerwords.htmlwriter",
            "computerwords.htmlwriter.util",
            "computerwords.htmlwriter.visitors",
            "computerwords.library",
            "computerwords.markdown_parser",
            "computerwords.markdown_parser.ast",
            "computerwords.markdown_parser.cfm_to_cwdom",
            "computerwords.markdown_parser.exceptions",
            "computerwords.markdown_parser.html_lexer",
            "computerwords.markdown_parser.html_parser",
            "computerwords.markdown_parser.parse_tree_to_cwdom",
            "computerwords.markdown_parser.parse_tree_to_cwdom_util",
            "computerwords.markdown_parser.parser_support",
            "computerwords.markdown_parser.src_loc",
            "computerwords.markdown_parser.tokens",
            "computerwords.plugin",
            "computerwords.plugins",
            "computerwords.plugins.callouts",
            "computerwords.plugins.graphviz",
            "computerwords.plugins.heading_aliases",
            "computerwords.plugins.htmlwriter",
            "computerwords.plugins.pygments",
            "computerwords.plugins.python35",
            "computerwords.read_doc_tree",
            "computerwords.source_parsers",
            "computerwords.source_parsers.python35",
            "computerwords.stdlib",
            "computerwords.stdlib.basics",
            "computerwords.stdlib.html",
            "computerwords.stdlib.links",
            "computerwords.stdlib.table_of_contents",
            "computerwords.symbol_tree",
            "tests",
            "tests.CWTestCase",
            "tests.test_htmlwriter",
            "tests.test_read_doc_tree"
        ],
        "version": "1.0b3"
    },
    "computeshader": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "computil": {
        "cmdline": [],
        "modules": [
            "computil"
        ],
        "version": "0.01"
    },
    "compy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "compyledfunc": {
        "cmdline": [],
        "modules": [
            "CompyledFunc"
        ],
        "version": "0.1.8"
    },
    "compyler": {
        "cmdline": [],
        "modules": [],
        "version": "0.0"
    },
    "compysition": {
        "cmdline": [],
        "modules": [
            "compysition",
            "compysition.actor",
            "compysition.actors",
            "compysition.actors.basicauth",
            "compysition.actors.cookie",
            "compysition.actors.dicttoxml",
            "compysition.actors.eventattributemodifier",
            "compysition.actors.eventdataaggregator",
            "compysition.actors.eventgenerator",
            "compysition.actors.eventjoin",
            "compysition.actors.eventlogger",
            "compysition.actors.eventrouter",
            "compysition.actors.filelogger",
            "compysition.actors.flowcontroller",
            "compysition.actors.httpserver",
            "compysition.actors.jsonvalidator",
            "compysition.actors.mdpactors",
            "compysition.actors.mdpbroker",
            "compysition.actors.mdpregistrar",
            "compysition.actors.null",
            "compysition.actors.redactedfilelogger",
            "compysition.actors.rest",
            "compysition.actors.smtp",
            "compysition.actors.stdout",
            "compysition.actors.tcp",
            "compysition.actors.util",
            "compysition.actors.util.mdpdefinition",
            "compysition.actors.util.mdpregistrar",
            "compysition.actors.util.udplib",
            "compysition.actors.util.xpath",
            "compysition.actors.xmltodict",
            "compysition.actors.xsd",
            "compysition.actors.xslt",
            "compysition.actors.zeromq",
            "compysition.director",
            "compysition.errors",
            "compysition.event",
            "compysition.logger",
            "compysition.queue",
            "compysition.testutils",
            "compysition.testutils.test_actor",
            "tests",
            "tests.actors",
            "tests.actors.test_dicttoxml",
            "tests.actors.test_eventgenerator",
            "tests.actors.test_eventjoin",
            "tests.actors.test_eventrouter",
            "tests.actors.test_rest",
            "tests.actors.test_xmltodict",
            "tests.actors.test_xsd",
            "tests.actors.test_xslt",
            "tests.actors.test_zeromq",
            "tests.test_event"
        ],
        "version": "1.2.54"
    },
    "compyte": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "comrunner": {
        "cmdline": [],
        "modules": [
            "comrunner"
        ],
        "version": "0.1b"
    },
    "comt": {
        "cmdline": [],
        "modules": [
            "cm",
            "cm.activity",
            "cm.admin",
            "cm.api",
            "cm.api.handlers",
            "cm.api.urls",
            "cm.client",
            "cm.cm_settings",
            "cm.context_processors",
            "cm.converters",
            "cm.converters.abi_converters",
            "cm.converters.abi_error",
            "cm.converters.old_converters",
            "cm.converters.oo_converters",
            "cm.converters.pandoc_converters",
            "cm.denorm_engine",
            "cm.exception",
            "cm.ext",
            "cm.ext.diff_match_patch",
            "cm.ext.html2text",
            "cm.main",
            "cm.management",
            "cm.management.commands",
            "cm.management.commands.create_manager",
            "cm.management.commands.set_workspacename",
            "cm.message",
            "cm.middleware",
            "cm.migrations",
            "cm.migrations.0001_initial",
            "cm.migrations.0002_add_keys_to_textversion",
            "cm.migrations.0003_update_keys_to_textversion",
            "cm.migrations.0004_uniqueness_to_keys_in_textversion",
            "cm.migrations.0005_add_tags_to_userprofile",
            "cm.migrations.0006_add_id_key_to_comments",
            "cm.migrations.0007_populate_id_key_in_comments",
            "cm.migrations.0008_nullable_text_version_in_attachements",
            "cm.migrations.0009_auto__chg_field_attachment_text_version",
            "cm.migrations.0010_auto__add_field_textversion_category_1__add_field_textversion_category",
            "cm.migrations.0011_auto__add_field_comment_category",
            "cm.models",
            "cm.models_base",
            "cm.models_utils",
            "cm.monkey_patches",
            "cm.notifications",
            "cm.role_models",
            "cm.security",
            "cm.settings",
            "cm.static_i18n",
            "cm.templatetags",
            "cm.templatetags.activity",
            "cm.templatetags.com",
            "cm.templatetags.local_perms",
            "cm.tests",
            "cm.tests.test_activity",
            "cm.tests.test_api",
            "cm.tests.test_comment_positioning",
            "cm.tests.test_converters",
            "cm.tests.test_history",
            "cm.tests.test_notifications",
            "cm.tests.test_registration",
            "cm.tests.test_security",
            "cm.tests.test_spannifier",
            "cm.tests.test_structure",
            "cm.urls",
            "cm.utils",
            "cm.utils.cache",
            "cm.utils.comment_positioning",
            "cm.utils.date",
            "cm.utils.diff",
            "cm.utils.dj",
            "cm.utils.embed",
            "cm.utils.files",
            "cm.utils.html",
            "cm.utils.i18n",
            "cm.utils.log",
            "cm.utils.mail",
            "cm.utils.misc",
            "cm.utils.spannifier",
            "cm.utils.string_utils",
            "cm.utils.system",
            "cm.utils.thread",
            "cm.utils.timezone",
            "cm.views",
            "cm.views.create",
            "cm.views.export",
            "cm.views.feeds",
            "cm.views.followup",
            "cm.views.i18n",
            "cm.views.site",
            "cm.views.texts",
            "cm.views.timezone",
            "cm.views.user",
            "cm.wsgi"
        ],
        "version": "2.6.4"
    },
    "comtypes": {
        "cmdline": [
            "clear_comtypes_cache.py"
        ],
        "modules": [
            "comtypes",
            "comtypes.GUID",
            "comtypes._comobject",
            "comtypes._meta",
            "comtypes._safearray",
            "comtypes.automation",
            "comtypes.client",
            "comtypes.client._code_cache",
            "comtypes.client._events",
            "comtypes.client._generate",
            "comtypes.client.dynamic",
            "comtypes.client.lazybind",
            "comtypes.connectionpoints",
            "comtypes.errorinfo",
            "comtypes.git",
            "comtypes.hresult",
            "comtypes.logutil",
            "comtypes.messageloop",
            "comtypes.npsupport",
            "comtypes.patcher",
            "comtypes.persist",
            "comtypes.safearray",
            "comtypes.server",
            "comtypes.server.automation",
            "comtypes.server.connectionpoints",
            "comtypes.server.inprocserver",
            "comtypes.server.localserver",
            "comtypes.server.register",
            "comtypes.server.w_getopt",
            "comtypes.shelllink",
            "comtypes.test",
            "comtypes.test.TestComServer",
            "comtypes.test.TestDispServer",
            "comtypes.test.find_memleak",
            "comtypes.test.runtests",
            "comtypes.test.setup",
            "comtypes.test.test_BSTR",
            "comtypes.test.test_DISPPARAMS",
            "comtypes.test.test_GUID",
            "comtypes.test.test_QueryService",
            "comtypes.test.test_agilent",
            "comtypes.test.test_avmc",
            "comtypes.test.test_basic",
            "comtypes.test.test_casesensitivity",
            "comtypes.test.test_client",
            "comtypes.test.test_collections",
            "comtypes.test.test_comserver",
            "comtypes.test.test_createwrappers",
            "comtypes.test.test_dict",
            "comtypes.test.test_dispinterface",
            "comtypes.test.test_dyndispatch",
            "comtypes.test.test_excel",
            "comtypes.test.test_findgendir",
            "comtypes.test.test_getactiveobj",
            "comtypes.test.test_ie",
            "comtypes.test.test_msscript",
            "comtypes.test.test_outparam",
            "comtypes.test.test_propputref",
            "comtypes.test.test_pump_events",
            "comtypes.test.test_safearray",
            "comtypes.test.test_sapi",
            "comtypes.test.test_server",
            "comtypes.test.test_showevents",
            "comtypes.test.test_subinterface",
            "comtypes.test.test_typeinfo",
            "comtypes.test.test_urlhistory",
            "comtypes.test.test_variant",
            "comtypes.test.test_win32com_interop",
            "comtypes.test.test_wmi",
            "comtypes.test.test_word",
            "comtypes.tools",
            "comtypes.tools.codegenerator",
            "comtypes.tools.tlbparser",
            "comtypes.tools.typedesc",
            "comtypes.tools.typedesc_base",
            "comtypes.typeinfo",
            "comtypes.util",
            "comtypes.viewobject"
        ],
        "version": "1.1.3"
    },
    "comuneimola.compensi": {
        "cmdline": [],
        "modules": [
            "comuneimola",
            "comuneimola.compensi",
            "comuneimola.compensi.browser",
            "comuneimola.compensi.browser.csv_export",
            "comuneimola.compensi.browser.csv_export.export_documents",
            "comuneimola.compensi.browser.translation",
            "comuneimola.compensi.browser.vistaareacompensiview",
            "comuneimola.compensi.browser.vistacompensoview",
            "comuneimola.compensi.config",
            "comuneimola.compensi.content",
            "comuneimola.compensi.content.atareacompensi",
            "comuneimola.compensi.content.atcompenso",
            "comuneimola.compensi.content.atlinkcompenso",
            "comuneimola.compensi.interfaces",
            "comuneimola.compensi.interfaces.atareacompensi",
            "comuneimola.compensi.interfaces.atcompenso",
            "comuneimola.compensi.interfaces.atlinkcompenso",
            "comuneimola.compensi.utilities",
            "comuneimola.compensi.validators",
            "comuneimola.compensi.viewlets",
            "comuneimola.compensi.viewlets.check_link"
        ],
        "version": "1.3"
    },
    "comunio": {
        "cmdline": [],
        "modules": [
            "comunio",
            "comunio.calc",
            "comunio.calc.StatisticsCalculator",
            "comunio.credentials",
            "comunio.credentials.CredentialsManager",
            "comunio.database",
            "comunio.database.DatabaseManager",
            "comunio.database.SqlQueries",
            "comunio.main",
            "comunio.metadata",
            "comunio.scraper",
            "comunio.scraper.ComunioFetcher",
            "comunio.scraper.ComunioSession",
            "comunio.ui",
            "comunio.ui.LoginScreen",
            "comunio.ui.StatisticsViewer",
            "comunio.ui.dialogs",
            "comunio.ui.dialogs.login",
            "comunio.ui.windows",
            "comunio.ui.windows.stats"
        ],
        "version": "0.5.1"
    },
    "comuniopy": {
        "cmdline": [],
        "modules": [
            "ComunioPy",
            "ComunioPy.test"
        ],
        "version": "1.2"
    },
    "con": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "con-fu": {
        "cmdline": [
            "confu"
        ],
        "modules": [
            "confu",
            "confu.ansible",
            "confu.aws",
            "confu.cfn",
            "confu.cli",
            "confu.pkg",
            "confu.settings",
            "confu.shell"
        ],
        "version": "0.1.7"
    },
    "conan": {
        "cmdline": [],
        "modules": [
            "conans",
            "conans.build_info",
            "conans.build_info.command",
            "conans.build_info.conan_build_info",
            "conans.build_info.model",
            "conans.client",
            "conans.client.build_requires",
            "conans.client.client_cache",
            "conans.client.cmake",
            "conans.client.command",
            "conans.client.command_profile_args",
            "conans.client.conf",
            "conans.client.configure_build_environment",
            "conans.client.configure_environment",
            "conans.client.deps_builder",
            "conans.client.detect",
            "conans.client.export",
            "conans.client.file_copier",
            "conans.client.gcc",
            "conans.client.generators",
            "conans.client.generators.cmake",
            "conans.client.generators.cmake_common",
            "conans.client.generators.cmake_multi",
            "conans.client.generators.env",
            "conans.client.generators.gcc",
            "conans.client.generators.qbs",
            "conans.client.generators.qmake",
            "conans.client.generators.scons",
            "conans.client.generators.text",
            "conans.client.generators.virtualbuildenv",
            "conans.client.generators.virtualenv",
            "conans.client.generators.virtualrunenv",
            "conans.client.generators.visualstudio",
            "conans.client.generators.xcode",
            "conans.client.generators.ycm",
            "conans.client.grapher",
            "conans.client.importer",
            "conans.client.installer",
            "conans.client.linter",
            "conans.client.loader",
            "conans.client.loader_parse",
            "conans.client.manager",
            "conans.client.manifest_manager",
            "conans.client.migrations",
            "conans.client.new",
            "conans.client.output",
            "conans.client.package_copier",
            "conans.client.packager",
            "conans.client.printer",
            "conans.client.proxy",
            "conans.client.remote_manager",
            "conans.client.remote_registry",
            "conans.client.remover",
            "conans.client.require_resolver",
            "conans.client.rest",
            "conans.client.rest.auth_manager",
            "conans.client.rest.cacert",
            "conans.client.rest.differ",
            "conans.client.rest.multipart_decode",
            "conans.client.rest.rest_client",
            "conans.client.rest.uploader_downloader",
            "conans.client.rest.version_checker",
            "conans.client.run_environment",
            "conans.client.runner",
            "conans.client.source",
            "conans.client.store",
            "conans.client.store.localdb",
            "conans.client.store.sqlite",
            "conans.client.uploader",
            "conans.client.userio",
            "conans.conan",
            "conans.conan_server",
            "conans.errors",
            "conans.migrations",
            "conans.model",
            "conans.model.build_info",
            "conans.model.conan_file",
            "conans.model.conan_generator",
            "conans.model.env_info",
            "conans.model.info",
            "conans.model.manifest",
            "conans.model.options",
            "conans.model.profile",
            "conans.model.ref",
            "conans.model.requires",
            "conans.model.scope",
            "conans.model.settings",
            "conans.model.username",
            "conans.model.values",
            "conans.model.version",
            "conans.paths",
            "conans.search",
            "conans.search.query_parse",
            "conans.search.search",
            "conans.server",
            "conans.server.conf",
            "conans.server.conf.default_server_conf",
            "conans.server.crypto",
            "conans.server.crypto.jwt",
            "conans.server.crypto.jwt.jwt_credentials_manager",
            "conans.server.crypto.jwt.jwt_manager",
            "conans.server.crypto.jwt.jwt_updown_manager",
            "conans.server.migrate",
            "conans.server.migrations",
            "conans.server.rest",
            "conans.server.rest.api_v1",
            "conans.server.rest.bottle_plugins",
            "conans.server.rest.bottle_plugins.authorization_header",
            "conans.server.rest.bottle_plugins.http_basic_authentication",
            "conans.server.rest.bottle_plugins.jwt_authentication",
            "conans.server.rest.bottle_plugins.return_handler",
            "conans.server.rest.bottle_plugins.version_checker",
            "conans.server.rest.controllers",
            "conans.server.rest.controllers.conan_controller",
            "conans.server.rest.controllers.controller",
            "conans.server.rest.controllers.file_upload_download_controller",
            "conans.server.rest.controllers.users_controller",
            "conans.server.rest.multipart_encoder",
            "conans.server.rest.server",
            "conans.server.server_launcher",
            "conans.server.service",
            "conans.server.service.authorize",
            "conans.server.service.service",
            "conans.server.service.user_service",
            "conans.server.store",
            "conans.server.store.disk_adapter",
            "conans.server.store.file_manager",
            "conans.test",
            "conans.test.command",
            "conans.test.command.build_test",
            "conans.test.command.config_test",
            "conans.test.command.copy_packages_test",
            "conans.test.command.export_dirty_test",
            "conans.test.command.export_linter_test",
            "conans.test.command.export_path_test",
            "conans.test.command.export_test",
            "conans.test.command.help_test",
            "conans.test.command.imports_test",
            "conans.test.command.info_command_test",
            "conans.test.command.info_folders_test",
            "conans.test.command.info_options_test",
            "conans.test.command.info_test",
            "conans.test.command.install_subfolder_test",
            "conans.test.command.install_test",
            "conans.test.command.new_test",
            "conans.test.command.package_files_test",
            "conans.test.command.package_test",
            "conans.test.command.profile_test",
            "conans.test.command.remote_test",
            "conans.test.command.remove_empty_dirs_test",
            "conans.test.command.remove_test",
            "conans.test.command.search_test",
            "conans.test.command.source_test",
            "conans.test.command.upload_complete_test",
            "conans.test.command.upload_test",
            "conans.test.command.user_test",
            "conans.test.conanfile_extend_test",
            "conans.test.download_test",
            "conans.test.functional",
            "conans.test.functional.autotools_configure_test",
            "conans.test.functional.cmake_test",
            "conans.test.functional.compile_helpers_test",
            "conans.test.functional.conan_trace_file_test",
            "conans.test.functional.conanfile_helpers_test",
            "conans.test.functional.conanfile_loader_test",
            "conans.test.functional.cpu_count_test",
            "conans.test.functional.create_package_test",
            "conans.test.functional.deps_graph_test",
            "conans.test.functional.disk_search_test",
            "conans.test.functional.file_copier_test",
            "conans.test.functional.loop_detection_test",
            "conans.test.functional.package_copier_test",
            "conans.test.functional.path_limit_test",
            "conans.test.functional.paths_test",
            "conans.test.functional.registry_test",
            "conans.test.functional.remote_manager_test",
            "conans.test.functional.run_environment_test",
            "conans.test.functional.runner_test",
            "conans.test.functional.search_query_parse_test",
            "conans.test.functional.tgz_md5_test",
            "conans.test.functional.verify_ssl_test",
            "conans.test.generators",
            "conans.test.generators.cmake_test",
            "conans.test.generators.generators_test",
            "conans.test.generators.scons_test",
            "conans.test.generators.visual_studio_test",
            "conans.test.integration",
            "conans.test.integration.basic_build_test",
            "conans.test.integration.build_environment_test",
            "conans.test.integration.build_id_test",
            "conans.test.integration.case_sensitive_test",
            "conans.test.integration.cmake_configs_test",
            "conans.test.integration.cmake_flags_test",
            "conans.test.integration.cmake_multi_test",
            "conans.test.integration.cmake_targets_test",
            "conans.test.integration.complete_test",
            "conans.test.integration.conan_env_test",
            "conans.test.integration.conan_scopes_test",
            "conans.test.integration.conan_test_test",
            "conans.test.integration.conanfile_errors_test",
            "conans.test.integration.conanfile_exception_test",
            "conans.test.integration.conf_default_settings_test",
            "conans.test.integration.conflict_diamond_test",
            "conans.test.integration.custom_generator_test",
            "conans.test.integration.diamond_test",
            "conans.test.integration.export_sources_test",
            "conans.test.integration.flat_requirements_test",
            "conans.test.integration.go_complete_test",
            "conans.test.integration.go_diamond_test",
            "conans.test.integration.half_diamond_test",
            "conans.test.integration.install_outdated_test",
            "conans.test.integration.install_selected_packages_test",
            "conans.test.integration.install_update_test",
            "conans.test.integration.manifest_validation_test",
            "conans.test.integration.multi_build_test",
            "conans.test.integration.multi_remote_test",
            "conans.test.integration.multi_remotes_test",
            "conans.test.integration.only_source_test",
            "conans.test.integration.options_caching_test",
            "conans.test.integration.order_libs_test",
            "conans.test.integration.package_id_test",
            "conans.test.integration.private_deps_test",
            "conans.test.integration.profile_build_requires_test",
            "conans.test.integration.profile_build_requires_testing_test",
            "conans.test.integration.profile_requires_test",
            "conans.test.integration.profile_test",
            "conans.test.integration.python_build_test",
            "conans.test.integration.python_diamond_test",
            "conans.test.integration.run_envronment_test",
            "conans.test.integration.same_userchannel_test",
            "conans.test.integration.settings_override_test",
            "conans.test.integration.shared_chain_test",
            "conans.test.integration.symlinks_test",
            "conans.test.integration.syncronize_test",
            "conans.test.integration.system_reqs_test",
            "conans.test.integration.test_build_info_extraction",
            "conans.test.integration.update_settings_yml_test",
            "conans.test.integration.upload_test",
            "conans.test.integration.version_check_test",
            "conans.test.integration.version_ranges_conflict_test",
            "conans.test.integration.version_ranges_diamond_test",
            "conans.test.libcxx_setting_test",
            "conans.test.model",
            "conans.test.model.build_info_test",
            "conans.test.model.env_test",
            "conans.test.model.info_test",
            "conans.test.model.manifest_test",
            "conans.test.model.options_test",
            "conans.test.model.other_settings_test",
            "conans.test.model.profile_test",
            "conans.test.model.ref_test",
            "conans.test.model.scope_test",
            "conans.test.model.settings_test",
            "conans.test.model.transitive_reqs_test",
            "conans.test.model.username_test",
            "conans.test.model.values_test",
            "conans.test.model.version_ranges_test",
            "conans.test.model.version_test",
            "conans.test.options_in_requirements_test",
            "conans.test.path_exists_test",
            "conans.test.performance",
            "conans.test.performance.large_project",
            "conans.test.remote",
            "conans.test.remote.auth_bearer_test",
            "conans.test.remote.auth_test",
            "conans.test.remote.broken_download_test",
            "conans.test.remote.put_properties_test",
            "conans.test.remote.rest_api_test",
            "conans.test.server",
            "conans.test.server.authenticator_plugin_test",
            "conans.test.server.conan_server_config_parser_test",
            "conans.test.server.conf_test",
            "conans.test.server.crypto",
            "conans.test.server.crypto.jwt_test",
            "conans.test.server.service",
            "conans.test.server.service.authorizer_test",
            "conans.test.server.service.service_test",
            "conans.test.server.utils",
            "conans.test.server.utils.server_launcher",
            "conans.test.util",
            "conans.test.util.client_conf_test",
            "conans.test.util.conanfile_tools_test",
            "conans.test.util.detect_test",
            "conans.test.util.file_hashes_test",
            "conans.test.util.local_db_test",
            "conans.test.util.output_test",
            "conans.test.util.tools_test",
            "conans.test.util.vcvars_env_test",
            "conans.test.util.zip_permissions_test",
            "conans.test.utils",
            "conans.test.utils.conanfile",
            "conans.test.utils.context_manager",
            "conans.test.utils.cpp_test_files",
            "conans.test.utils.go_test_files",
            "conans.test.utils.multi_config",
            "conans.test.utils.profiles",
            "conans.test.utils.python_test_files",
            "conans.test.utils.runner",
            "conans.test.utils.test_files",
            "conans.test.utils.tools",
            "conans.test.utils.visual_project_files",
            "conans.tools",
            "conans.util",
            "conans.util.config_parser",
            "conans.util.env_reader",
            "conans.util.files",
            "conans.util.log",
            "conans.util.sha",
            "conans.util.tracer"
        ],
        "version": "0.22.3"
    },
    "conan-ldap-authentication": {
        "cmdline": [],
        "modules": [
            "conan",
            "conan.ldap_authentication",
            "conan.test",
            "conan.test.test_authentication"
        ],
        "version": "0.1.3"
    },
    "conan-package-tools": {
        "cmdline": [],
        "modules": [
            "conan",
            "conan.builds_generator",
            "conan.log",
            "conan.packager",
            "conan.run_in_docker",
            "conan.test",
            "conan.test.generators_test",
            "conan.test.packager_test",
            "conan.test_package_runner"
        ],
        "version": "0.3.4"
    },
    "concat": {
        "cmdline": [],
        "modules": [
            "concat",
            "concat.lex",
            "concat.libconcat",
            "concat.parse",
            "concat.parsetab",
            "concat.stdoverrides",
            "concat.stdoverrides.builtintypes",
            "concat.stdoverrides.random_",
            "concat.tests",
            "concat.tests.test_example_programs"
        ],
        "version": "0.1.0.dev1"
    },
    "concatenate-files": {
        "cmdline": [],
        "modules": [
            "concatenate_files"
        ],
        "version": "1.2"
    },
    "concatpdf": {
        "cmdline": [],
        "modules": [
            "concatPDF",
            "concatPDF.builder",
            "concatPDF.make",
            "concatPDF.quickstart"
        ],
        "version": "0.1.2"
    },
    "concentration": {
        "cmdline": [],
        "modules": [
            "concentration",
            "concentration.run",
            "concentration.settings"
        ],
        "version": "1.1.1"
    },
    "concept-formation": {
        "cmdline": [],
        "modules": [
            "concept_formation",
            "concept_formation.cluster",
            "concept_formation.cobweb",
            "concept_formation.cobweb3",
            "concept_formation.continuous_value",
            "concept_formation.datasets",
            "concept_formation.dummy",
            "concept_formation.evaluation",
            "concept_formation.examples",
            "concept_formation.examples.acs_simulation",
            "concept_formation.examples.cobweb3_cluster_iris",
            "concept_formation.examples.cobweb3_cluster_simulated",
            "concept_formation.examples.cobweb3_predict_iris",
            "concept_formation.examples.cobweb3_regression_example",
            "concept_formation.examples.cobweb_cluster_mushroom",
            "concept_formation.examples.cobweb_predict_mushroom",
            "concept_formation.examples.compare_mse_acc",
            "concept_formation.examples.examples_utils",
            "concept_formation.examples.li_biswas_experiment",
            "concept_formation.examples.regression",
            "concept_formation.examples.trestle_cluster_rumbleblocks",
            "concept_formation.examples.trestle_predict_rumbleblocks",
            "concept_formation.preprocessor",
            "concept_formation.structure_mapper",
            "concept_formation.trestle",
            "concept_formation.utils"
        ],
        "version": "0.3.0"
    },
    "concept-py": {
        "cmdline": [],
        "modules": [
            "concept",
            "concept.graph.gnuplot",
            "concept.graph.gnuplot.multiplot",
            "concept.graph.gnuplot.plot",
            "concept.graph.gnuplot.script",
            "concept.math",
            "concept.math.digits",
            "concept.math.factorization",
            "concept.math.functions",
            "concept.math.matrix",
            "concept.math.number",
            "concept.performance",
            "concept.performance.measurement",
            "concept.primes",
            "concept.primes.is_prime",
            "concept.primes.segmented_sieve",
            "concept.primes.sieve_of_eratosthenes",
            "concept.primes.sieve_of_eratosthenes_optimized",
            "concept.query",
            "concept.query.select",
            "concept.tools",
            "concept.tools.convert",
            "concept.tools.decorator",
            "concept.tools.lambda_tools",
            "concept.tools.router",
            "concept.tools.validator"
        ],
        "version": "0.31.0"
    },
    "conceptnet": {
        "cmdline": [],
        "modules": [
            "conceptnet5",
            "conceptnet5.builders",
            "conceptnet5.builders.combine_assertions",
            "conceptnet5.builders.distribute_edges",
            "conceptnet5.builders.json_to_msgpack",
            "conceptnet5.builders.msgpack_to_json",
            "conceptnet5.builders.reduce_assoc",
            "conceptnet5.db",
            "conceptnet5.db.cli",
            "conceptnet5.db.config",
            "conceptnet5.db.connection",
            "conceptnet5.db.prepare_data",
            "conceptnet5.db.query",
            "conceptnet5.db.schema",
            "conceptnet5.edges",
            "conceptnet5.formats",
            "conceptnet5.formats.convert",
            "conceptnet5.formats.json_stream",
            "conceptnet5.formats.msgpack_stream",
            "conceptnet5.formats.semantic_web",
            "conceptnet5.language",
            "conceptnet5.language.english",
            "conceptnet5.language.lemmatize",
            "conceptnet5.language.token_utils",
            "conceptnet5.languages",
            "conceptnet5.nodes",
            "conceptnet5.readers",
            "conceptnet5.readers.cli",
            "conceptnet5.readers.conceptnet4",
            "conceptnet5.readers.dbpedia",
            "conceptnet5.readers.jmdict",
            "conceptnet5.readers.nadya",
            "conceptnet5.readers.opencyc",
            "conceptnet5.readers.ptt_petgame",
            "conceptnet5.readers.verbosity",
            "conceptnet5.readers.wiktionary",
            "conceptnet5.readers.wordnet",
            "conceptnet5.relations",
            "conceptnet5.uri",
            "conceptnet5.util",
            "conceptnet5.util.sounds_like",
            "conceptnet5.util.whereami",
            "conceptnet5.vectors",
            "conceptnet5.vectors.cli",
            "conceptnet5.vectors.evaluation",
            "conceptnet5.vectors.evaluation.analogy",
            "conceptnet5.vectors.evaluation.compare",
            "conceptnet5.vectors.evaluation.story",
            "conceptnet5.vectors.evaluation.wordsim",
            "conceptnet5.vectors.formats",
            "conceptnet5.vectors.merge",
            "conceptnet5.vectors.ppmi",
            "conceptnet5.vectors.query",
            "conceptnet5.vectors.retrofit",
            "conceptnet5.vectors.sparse_matrix_builder",
            "conceptnet5.vectors.transforms"
        ],
        "version": "5.5.4"
    },
    "conceptnet-a-practical-commonsense-reasoning-toolkit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "conceptpower-api": {
        "cmdline": [],
        "modules": [
            "conceptpower",
            "conceptpower.classes"
        ],
        "version": "1.9"
    },
    "concepts": {
        "cmdline": [],
        "modules": [
            "concepts",
            "concepts._compat",
            "concepts.contexts",
            "concepts.definitions",
            "concepts.formats",
            "concepts.junctors",
            "concepts.lattices",
            "concepts.matrices",
            "concepts.tools",
            "concepts.unicodecsv",
            "concepts.visualize"
        ],
        "version": "0.7.11"
    },
    "concert": {
        "cmdline": [
            "concert",
            "concert-connect",
            "concert-server"
        ],
        "modules": [
            "concert",
            "concert.async",
            "concert.base",
            "concert.config",
            "concert.coroutines",
            "concert.coroutines.base",
            "concert.coroutines.filters",
            "concert.coroutines.sinks",
            "concert.devices",
            "concert.devices.base",
            "concert.devices.cameras",
            "concert.devices.cameras.base",
            "concert.devices.cameras.dummy",
            "concert.devices.cameras.pco",
            "concert.devices.cameras.uca",
            "concert.devices.detectors",
            "concert.devices.detectors.base",
            "concert.devices.detectors.dummy",
            "concert.devices.dummy",
            "concert.devices.grippers",
            "concert.devices.grippers.base",
            "concert.devices.grippers.dummy",
            "concert.devices.io",
            "concert.devices.io.aerotech",
            "concert.devices.io.base",
            "concert.devices.io.dummy",
            "concert.devices.io.wago",
            "concert.devices.lightsources",
            "concert.devices.lightsources.base",
            "concert.devices.lightsources.dummy",
            "concert.devices.lightsources.fiberlite",
            "concert.devices.lightsources.led",
            "concert.devices.monochromators",
            "concert.devices.monochromators.base",
            "concert.devices.monochromators.dummy",
            "concert.devices.monochromators.newport",
            "concert.devices.motors",
            "concert.devices.motors.aerotech",
            "concert.devices.motors.base",
            "concert.devices.motors.crio",
            "concert.devices.motors.dummy",
            "concert.devices.photodiodes",
            "concert.devices.photodiodes.base",
            "concert.devices.photodiodes.dummy",
            "concert.devices.photodiodes.edmundoptics",
            "concert.devices.positioners",
            "concert.devices.positioners.base",
            "concert.devices.positioners.dummy",
            "concert.devices.positioners.imaging",
            "concert.devices.pumps",
            "concert.devices.pumps.base",
            "concert.devices.pumps.dummy",
            "concert.devices.samplechangers",
            "concert.devices.samplechangers.base",
            "concert.devices.samplechangers.dummy",
            "concert.devices.scales",
            "concert.devices.scales.adventurer",
            "concert.devices.scales.base",
            "concert.devices.scales.dummy",
            "concert.devices.shutters",
            "concert.devices.shutters.base",
            "concert.devices.shutters.dummy",
            "concert.devices.storagerings",
            "concert.devices.storagerings.base",
            "concert.devices.storagerings.dummy",
            "concert.devices.xraytubes",
            "concert.devices.xraytubes.base",
            "concert.devices.xraytubes.dummy",
            "concert.experiments",
            "concert.experiments.addons",
            "concert.experiments.base",
            "concert.experiments.control",
            "concert.experiments.imaging",
            "concert.ext",
            "concert.ext.cmd",
            "concert.ext.cmd.spyder",
            "concert.ext.gevent",
            "concert.ext.nexus",
            "concert.ext.noseplugin",
            "concert.ext.qt",
            "concert.ext.tifffile",
            "concert.ext.tk",
            "concert.ext.ufo",
            "concert.ext.viewers",
            "concert.helpers",
            "concert.imageprocessing",
            "concert.measures",
            "concert.networking",
            "concert.networking.aerotech",
            "concert.networking.base",
            "concert.networking.wago",
            "concert.optimization",
            "concert.processes",
            "concert.processes.beamline",
            "concert.processes.common",
            "concert.quantities",
            "concert.session",
            "concert.session.management",
            "concert.session.utils",
            "concert.storage"
        ],
        "version": "0.10.0"
    },
    "conch": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "conchoctopus": {
        "cmdline": [
            "copus.py"
        ],
        "modules": [
            "conchoctopus",
            "conchoctopus.connect",
            "conchoctopus.copus",
            "conchoctopus.fabricapi",
            "conchoctopus.test",
            "conchoctopus.test.external_config",
            "conchoctopus.test.external_test",
            "conchoctopus.test.fabfile",
            "conchoctopus.test.fabfile_mhosts",
            "conchoctopus.test.fabfile_mtask",
            "conchoctopus.test.keys",
            "conchoctopus.test.testModule",
            "conchoctopus.test.testServer",
            "conchoctopus.test.test_connect",
            "conchoctopus.test.test_copus",
            "conchoctopus.test.test_fabricapi"
        ],
        "version": "0.1a1"
    },
    "concierge": {
        "cmdline": [],
        "modules": [
            "concierge",
            "concierge.core",
            "concierge.core.exceptions",
            "concierge.core.lexer",
            "concierge.core.parser",
            "concierge.core.processor",
            "concierge.endpoints",
            "concierge.endpoints.check",
            "concierge.endpoints.cli",
            "concierge.endpoints.common",
            "concierge.endpoints.daemon",
            "concierge.endpoints.templates",
            "concierge.notifications",
            "concierge.templater",
            "concierge.utils"
        ],
        "version": "0.2.2"
    },
    "concierge-jinja": {
        "cmdline": [],
        "modules": [
            "concierge_jinja",
            "concierge_jinja.templater"
        ],
        "version": "0.2.0"
    },
    "concierge-mako": {
        "cmdline": [],
        "modules": [
            "concierge_mako",
            "concierge_mako.templater"
        ],
        "version": "0.2.0"
    },
    "concise": {
        "cmdline": [],
        "modules": [
            "concise",
            "concise.activations",
            "concise.analyze",
            "concise.args_sampler",
            "concise.concise",
            "concise.concise_keras",
            "concise.get_data",
            "concise.helper",
            "concise.initializers",
            "concise.kmer",
            "concise.layers",
            "concise.math_helper",
            "concise.metrics",
            "concise.models",
            "concise.preprocessing",
            "concise.preprocessing.dna",
            "concise.preprocessing.motifs",
            "concise.preprocessing.smooth",
            "concise.regularizers",
            "concise.splines",
            "concise.tf_helper",
            "concise.utils",
            "tests",
            "tests.devel_concise_quasi_X",
            "tests.setup_concise_load_data",
            "tests.test_Concise",
            "tests.test_ConciseCV",
            "tests.test_Concise_load_save",
            "tests.test_Concise_precision",
            "tests.test_GAMSmooth",
            "tests.test_concise_keras",
            "tests.test_conv1d",
            "tests.test_layers",
            "tests.test_na_y",
            "tests.test_utils"
        ],
        "version": "0.5.0"
    },
    "conclas": {
        "cmdline": [],
        "modules": [
            "conclas",
            "conclas.api",
            "conclas.core",
            "conclas.core.conclas_response",
            "conclas.core.request",
            "conclas.exceptions",
            "conclas.exceptions.api_custom_exceptions",
            "conclas.exceptions.client_exceptions",
            "conclas.utils",
            "conclas.utils.json_maker"
        ],
        "version": "0.1.2"
    },
    "concoct": {
        "cmdline": [
            "concoct"
        ],
        "modules": [
            "concoct",
            "concoct.cluster",
            "concoct.input",
            "concoct.output",
            "concoct.parser",
            "concoct.transform"
        ],
        "version": "0.4.0"
    },
    "concon": {
        "cmdline": [],
        "modules": [],
        "version": "2.0.1"
    },
    "concoord": {
        "cmdline": [],
        "modules": [
            "concoord",
            "concoord.asyncclientproxy",
            "concoord.batchclientproxy",
            "concoord.blockingclientproxy",
            "concoord.clientproxy",
            "concoord.codegen",
            "concoord.connection",
            "concoord.enums",
            "concoord.exception",
            "concoord.logdaemon",
            "concoord.main",
            "concoord.message",
            "concoord.nameserver",
            "concoord.node",
            "concoord.object",
            "concoord.object.bank",
            "concoord.object.barrier",
            "concoord.object.binarytree",
            "concoord.object.boundedsemaphore",
            "concoord.object.condition",
            "concoord.object.counter",
            "concoord.object.jobmanager",
            "concoord.object.lock",
            "concoord.object.log",
            "concoord.object.membership",
            "concoord.object.meshmembership",
            "concoord.object.nameservercoord",
            "concoord.object.pinger",
            "concoord.object.queue",
            "concoord.object.rlock",
            "concoord.object.semaphore",
            "concoord.object.stack",
            "concoord.openreplica",
            "concoord.openreplica.main",
            "concoord.openreplica.nodemanager",
            "concoord.openreplica.openreplicanameserver",
            "concoord.pack",
            "concoord.proxy",
            "concoord.proxy.bank",
            "concoord.proxy.barrier",
            "concoord.proxy.binarytree",
            "concoord.proxy.boundedsemaphore",
            "concoord.proxy.condition",
            "concoord.proxy.counter",
            "concoord.proxy.jobmanager",
            "concoord.proxy.lock",
            "concoord.proxy.log",
            "concoord.proxy.membership",
            "concoord.proxy.meshmembership",
            "concoord.proxy.nameservercoord",
            "concoord.proxy.queue",
            "concoord.proxy.rlock",
            "concoord.proxy.semaphore",
            "concoord.proxy.stack",
            "concoord.proxy.test",
            "concoord.proxygenerator",
            "concoord.pvalue",
            "concoord.replica",
            "concoord.responsecollector",
            "concoord.route53",
            "concoord.safetychecker",
            "concoord.test",
            "concoord.test.test_partition",
            "concoord.test.test_replicacomeback",
            "concoord.test.test_replicacrashfailure",
            "concoord.test.test_timeout",
            "concoord.threadingobject",
            "concoord.threadingobject.dboundedsemaphore",
            "concoord.threadingobject.dcondition",
            "concoord.threadingobject.dlock",
            "concoord.threadingobject.drlock",
            "concoord.threadingobject.dsemaphore",
            "concoord.utils"
        ],
        "version": "1.1.0"
    },
    "concord": {
        "cmdline": [],
        "modules": [
            "concord",
            "concord.concord_entry",
            "concord.config",
            "concord.constants",
            "concord.dcos_utils",
            "concord.deploy",
            "concord.functional_utils",
            "concord.internal",
            "concord.internal.thrift",
            "concord.internal.thrift.BoltManagerService",
            "concord.internal.thrift.BoltMetricsService",
            "concord.internal.thrift.BoltPipeService",
            "concord.internal.thrift.BoltProxyService",
            "concord.internal.thrift.BoltSchedulerService",
            "concord.internal.thrift.ComputationService",
            "concord.internal.thrift.MutableEphemeralStateService",
            "concord.internal.thrift.constants",
            "concord.internal.thrift.ttypes",
            "concord.kill_task",
            "concord.marathon",
            "concord.print_graph",
            "concord.runway",
            "concord.thrift_utils",
            "concord.utils"
        ],
        "version": "0.2.9"
    },
    "concord-py": {
        "cmdline": [],
        "modules": [
            "concord",
            "concord.computation",
            "concord.internal",
            "concord.internal.thrift",
            "concord.internal.thrift.BoltManagerService",
            "concord.internal.thrift.BoltMetricsService",
            "concord.internal.thrift.BoltPipeService",
            "concord.internal.thrift.BoltProxyService",
            "concord.internal.thrift.BoltSchedulerService",
            "concord.internal.thrift.ComputationService",
            "concord.internal.thrift.MutableEphemeralStateService",
            "concord.internal.thrift.constants",
            "concord.internal.thrift.ttypes"
        ],
        "version": "0.3.6"
    },
    "concord-python-dsl": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "concord232": {
        "cmdline": [],
        "modules": [
            "concord232",
            "concord232.api",
            "concord232.client",
            "concord232.concord",
            "concord232.concord_alarm_codes",
            "concord232.concord_commands",
            "concord232.concord_helpers",
            "concord232.concord_tokens",
            "concord232.mail",
            "concord232.main",
            "concord232.model"
        ],
        "version": "0.14"
    },
    "concordance": {
        "cmdline": [],
        "modules": [
            "concordance",
            "concordance.drivers",
            "concordance.drivers.runner",
            "concordance.simple_concordance_module"
        ],
        "version": "0.0.1"
    },
    "concordancecrawler": {
        "cmdline": [],
        "modules": [
            "ConcordanceCrawler",
            "ConcordanceCrawler.app",
            "ConcordanceCrawler.app.app",
            "ConcordanceCrawler.app.load_from_corpus",
            "ConcordanceCrawler.app.output_formatter",
            "ConcordanceCrawler.core",
            "ConcordanceCrawler.core.bazwords",
            "ConcordanceCrawler.core.concordance_crawler",
            "ConcordanceCrawler.core.encoding",
            "ConcordanceCrawler.core.eng_detect",
            "ConcordanceCrawler.core.eng_detect.eng_detect",
            "ConcordanceCrawler.core.eng_detect.english_samples",
            "ConcordanceCrawler.core.eng_detect.freq",
            "ConcordanceCrawler.core.eng_detect.frequencies",
            "ConcordanceCrawler.core.eng_detect.manual_tests",
            "ConcordanceCrawler.core.eng_detect.ngrams_extractor",
            "ConcordanceCrawler.core.eng_detect.nonenglish_samples",
            "ConcordanceCrawler.core.eng_detect.plots",
            "ConcordanceCrawler.core.eng_detect.prepare_thresholds",
            "ConcordanceCrawler.core.eng_detect.thresholds",
            "ConcordanceCrawler.core.lemmatizer_concordance_filter",
            "ConcordanceCrawler.core.limited_buffer",
            "ConcordanceCrawler.core.links",
            "ConcordanceCrawler.core.logging_crawler",
            "ConcordanceCrawler.core.parsing",
            "ConcordanceCrawler.core.segmenter",
            "ConcordanceCrawler.core.simple_concordance_filter",
            "ConcordanceCrawler.core.urlrequest",
            "ConcordanceCrawler.core.user_agents",
            "ConcordanceCrawler.core.visible_text",
            "ConcordanceCrawler.core.visitor",
            "ConcordanceCrawler.core.words_lower",
            "ConcordanceCrawler.tests",
            "ConcordanceCrawler.tests.crawler_tests",
            "ConcordanceCrawler.tests.eng_detect_tests",
            "ConcordanceCrawler.tests.formatter_tests",
            "ConcordanceCrawler.tests.links_tests",
            "ConcordanceCrawler.tests.visitor_tests"
        ],
        "version": "1.0.2"
    },
    "concorde": {
        "cmdline": [],
        "modules": [
            "concorde",
            "concorde.command_line"
        ],
        "version": "0.1.1"
    },
    "concordia-class-search": {
        "cmdline": [],
        "modules": [
            "concordia_class_search",
            "concordia_class_search.api",
            "concordia_class_search.exceptions",
            "concordia_class_search.scraping",
            "concordia_class_search.utils"
        ],
        "version": "0.1.0"
    },
    "concourse": {
        "cmdline": [],
        "modules": [
            "concourse"
        ],
        "version": "0.0.0"
    },
    "concourse-driver-python": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "concrete": {
        "cmdline": [
            "Service-remote",
            "access-http-server.py",
            "annotate-communication-client.py",
            "compress-uuids.py",
            "concrete-diff.py",
            "concrete-inspect.py",
            "concrete2json.py",
            "concrete_diff.py",
            "concrete_inspect.py",
            "convert-protocols.py",
            "create-comm-tarball.py",
            "create-comm.py",
            "fetch-client.py",
            "fetch-server.py",
            "inspect-dependency-parses.py",
            "inspect_dependency_parses.py",
            "search-client.py",
            "tweets2concrete-redis.py",
            "tweets2concrete.py",
            "validate-communication.py",
            "validate_communication.py"
        ],
        "modules": [
            "concrete",
            "concrete.access",
            "concrete.access.FetchCommunicationService",
            "concrete.access.StoreCommunicationService",
            "concrete.access.constants",
            "concrete.access.ttypes",
            "concrete.annotate",
            "concrete.annotate.AnnotateCommunicationService",
            "concrete.annotate.constants",
            "concrete.annotate.ttypes",
            "concrete.audio",
            "concrete.audio.constants",
            "concrete.audio.ttypes",
            "concrete.clustering",
            "concrete.clustering.constants",
            "concrete.clustering.ttypes",
            "concrete.communication",
            "concrete.communication.constants",
            "concrete.communication.ttypes",
            "concrete.email",
            "concrete.email.constants",
            "concrete.email.ttypes",
            "concrete.entities",
            "concrete.entities.constants",
            "concrete.entities.ttypes",
            "concrete.exceptions",
            "concrete.exceptions.constants",
            "concrete.exceptions.ttypes",
            "concrete.inspect",
            "concrete.language",
            "concrete.language.constants",
            "concrete.language.ttypes",
            "concrete.learn",
            "concrete.learn.ActiveLearnerClientService",
            "concrete.learn.ActiveLearnerServerService",
            "concrete.learn.constants",
            "concrete.learn.ttypes",
            "concrete.linking",
            "concrete.linking.constants",
            "concrete.linking.ttypes",
            "concrete.metadata",
            "concrete.metadata.constants",
            "concrete.metadata.ttypes",
            "concrete.nitf",
            "concrete.nitf.constants",
            "concrete.nitf.ttypes",
            "concrete.search",
            "concrete.search.FeedbackService",
            "concrete.search.SearchProxyService",
            "concrete.search.SearchService",
            "concrete.search.constants",
            "concrete.search.ttypes",
            "concrete.services",
            "concrete.services.Service",
            "concrete.services.constants",
            "concrete.services.results",
            "concrete.services.results.ResultsServerService",
            "concrete.services.results.constants",
            "concrete.services.results.ttypes",
            "concrete.services.ttypes",
            "concrete.situations",
            "concrete.situations.constants",
            "concrete.situations.ttypes",
            "concrete.spans",
            "concrete.spans.constants",
            "concrete.spans.ttypes",
            "concrete.structure",
            "concrete.structure.constants",
            "concrete.structure.ttypes",
            "concrete.twitter",
            "concrete.twitter.constants",
            "concrete.twitter.ttypes",
            "concrete.util",
            "concrete.util.access",
            "concrete.util.access_wrapper",
            "concrete.util.annotate_wrapper",
            "concrete.util.comm_container",
            "concrete.util.concrete_uuid",
            "concrete.util.file_io",
            "concrete.util.json_fu",
            "concrete.util.learn_wrapper",
            "concrete.util.locale",
            "concrete.util.mem_io",
            "concrete.util.metadata",
            "concrete.util.net",
            "concrete.util.redis_io",
            "concrete.util.references",
            "concrete.util.results_wrapper",
            "concrete.util.search_wrapper",
            "concrete.util.service_wrapper",
            "concrete.util.simple_comm",
            "concrete.util.thrift_factory",
            "concrete.util.tokenization",
            "concrete.util.twitter",
            "concrete.util.unnone",
            "concrete.uuid",
            "concrete.uuid.constants",
            "concrete.uuid.ttypes",
            "concrete.validate",
            "concrete.version"
        ],
        "version": "4.12.9"
    },
    "concretepy": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "concur": {
        "cmdline": [],
        "modules": [
            "concur",
            "concur.abstract",
            "concur.bin",
            "concur.documentation",
            "concur.lib",
            "concur.libcontain",
            "concur.libcontext",
            "concur.libevent",
            "concur.libprocess",
            "concur.libthread",
            "concur.project",
            "concur.release",
            "concur.release.pypi",
            "concur.release.xdistutils",
            "concur.test",
            "concur.test.test_libcontain",
            "concur.test.test_libcontext",
            "concur.test.test_libevent",
            "concur.test.test_libprocess",
            "concur.test.test_libthread"
        ],
        "version": "0.4.0"
    },
    "concurapi": {
        "cmdline": [],
        "modules": [
            "concurapi",
            "concurapi.client",
            "concurapi.models",
            "concurapi.models.objects",
            "concurapi.models.resource",
            "concurapi.models.test_users",
            "concurapi.models.users",
            "concurapi.test_client"
        ],
        "version": "0.0.2"
    },
    "concurrence": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "concurrencytest": {
        "cmdline": [],
        "modules": [
            "concurrencytest"
        ],
        "version": "0.1.2"
    },
    "concurrent-ap": {
        "cmdline": [],
        "modules": [
            "Concurrent_AP"
        ],
        "version": "1.4"
    },
    "concurrent-iterator": {
        "cmdline": [],
        "modules": [
            "concurrent_iterator",
            "concurrent_iterator.dummy",
            "concurrent_iterator.process",
            "concurrent_iterator.thread",
            "concurrent_iterator.utils"
        ],
        "version": "0.2.6"
    },
    "concurrent-tree-crawler": {
        "cmdline": [],
        "modules": [],
        "version": "0.8.8"
    },
    "concurrentfloodscraper": {
        "cmdline": [],
        "modules": [
            "concurrentfloodscraper",
            "concurrentfloodscraper.base_controller",
            "concurrentfloodscraper.base_worker",
            "concurrentfloodscraper.concurrent_flood_scraper",
            "concurrentfloodscraper.exceptions",
            "concurrentfloodscraper.pubsub",
            "concurrentfloodscraper.router",
            "concurrentfloodscraper.scraper",
            "concurrentfloodscraper.ticker",
            "concurrentfloodscraper.url_builder",
            "concurrentfloodscraper.wikipedia_demo"
        ],
        "version": "1.0.1"
    },
    "concurrentloghandler": {
        "cmdline": [],
        "modules": [
            "cloghandler",
            "portalocker"
        ],
        "version": "0.9.1"
    },
    "concurrently": {
        "cmdline": [],
        "modules": [],
        "version": "0.10.0"
    },
    "concurrentpandas": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "concuss": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "conda": {
        "cmdline": [],
        "modules": [
            "conda",
            "conda._vendor",
            "conda._vendor.appdirs",
            "conda._vendor.auxlib",
            "conda._vendor.auxlib._vendor",
            "conda._vendor.auxlib._vendor.boltons",
            "conda._vendor.auxlib._vendor.boltons.timeutils",
            "conda._vendor.auxlib._vendor.five",
            "conda._vendor.auxlib._vendor.six",
            "conda._vendor.auxlib.collection",
            "conda._vendor.auxlib.compat",
            "conda._vendor.auxlib.configuration",
            "conda._vendor.auxlib.crypt",
            "conda._vendor.auxlib.decorators",
            "conda._vendor.auxlib.deprecation",
            "conda._vendor.auxlib.entity",
            "conda._vendor.auxlib.exceptions",
            "conda._vendor.auxlib.factory",
            "conda._vendor.auxlib.ish",
            "conda._vendor.auxlib.logz",
            "conda._vendor.auxlib.packaging",
            "conda._vendor.auxlib.path",
            "conda._vendor.auxlib.type_coercion",
            "conda._vendor.boltons",
            "conda._vendor.boltons.setutils",
            "conda._vendor.progressbar",
            "conda._vendor.progressbar.compat",
            "conda._vendor.progressbar.widgets",
            "conda._vendor.toolz",
            "conda._vendor.toolz._signatures",
            "conda._vendor.toolz.compatibility",
            "conda._vendor.toolz.dicttoolz",
            "conda._vendor.toolz.functoolz",
            "conda._vendor.toolz.itertoolz",
            "conda._vendor.toolz.recipes",
            "conda._vendor.toolz.utils",
            "conda._vendor.urllib3",
            "conda._vendor.urllib3.exceptions",
            "conda._vendor.urllib3.util",
            "conda._vendor.urllib3.util.url",
            "conda.api",
            "conda.base",
            "conda.base.constants",
            "conda.base.context",
            "conda.base.exceptions",
            "conda.cli",
            "conda.cli.activate",
            "conda.cli.common",
            "conda.cli.conda_argparse",
            "conda.cli.find_commands",
            "conda.cli.help",
            "conda.cli.install",
            "conda.cli.main",
            "conda.cli.main_clean",
            "conda.cli.main_config",
            "conda.cli.main_create",
            "conda.cli.main_help",
            "conda.cli.main_info",
            "conda.cli.main_install",
            "conda.cli.main_list",
            "conda.cli.main_package",
            "conda.cli.main_remove",
            "conda.cli.main_search",
            "conda.cli.main_update",
            "conda.cli.pip_warning",
            "conda.cli.python_api",
            "conda.common",
            "conda.common.compat",
            "conda.common.configuration",
            "conda.common.constants",
            "conda.common.disk",
            "conda.common.io",
            "conda.common.path",
            "conda.common.signals",
            "conda.common.url",
            "conda.common.yaml",
            "conda.compat",
            "conda.config",
            "conda.connection",
            "conda.console",
            "conda.core",
            "conda.core.index",
            "conda.core.link",
            "conda.core.linked_data",
            "conda.core.package_cache",
            "conda.core.path_actions",
            "conda.core.portability",
            "conda.core.repodata",
            "conda.egg_info",
            "conda.exceptions",
            "conda.exports",
            "conda.fetch",
            "conda.gateways",
            "conda.gateways.adapters",
            "conda.gateways.adapters.ftp",
            "conda.gateways.adapters.localfs",
            "conda.gateways.adapters.s3",
            "conda.gateways.anaconda_client",
            "conda.gateways.disk",
            "conda.gateways.disk.create",
            "conda.gateways.disk.delete",
            "conda.gateways.disk.link",
            "conda.gateways.disk.permissions",
            "conda.gateways.disk.read",
            "conda.gateways.disk.test",
            "conda.gateways.disk.update",
            "conda.gateways.download",
            "conda.gateways.logging",
            "conda.gateways.subprocess",
            "conda.history",
            "conda.install",
            "conda.instructions",
            "conda.lock",
            "conda.logic",
            "conda.misc",
            "conda.models",
            "conda.models.channel",
            "conda.models.dist",
            "conda.models.enums",
            "conda.models.index_record",
            "conda.models.package_info",
            "conda.plan",
            "conda.resolve",
            "conda.signature",
            "conda.toposort",
            "conda.utils",
            "conda.version",
            "conda_env",
            "conda_env.cli",
            "conda_env.cli.common",
            "conda_env.cli.main",
            "conda_env.cli.main_attach",
            "conda_env.cli.main_create",
            "conda_env.cli.main_export",
            "conda_env.cli.main_list",
            "conda_env.cli.main_remove",
            "conda_env.cli.main_update",
            "conda_env.cli.main_upload",
            "conda_env.compat",
            "conda_env.env",
            "conda_env.exceptions",
            "conda_env.installers",
            "conda_env.installers.base",
            "conda_env.installers.conda",
            "conda_env.installers.pip",
            "conda_env.pip_util",
            "conda_env.specs",
            "conda_env.specs.binstar",
            "conda_env.specs.notebook",
            "conda_env.specs.requirements",
            "conda_env.specs.yaml_file",
            "conda_env.utils",
            "conda_env.utils.notebooks",
            "conda_env.utils.uploader",
            "conda_env.yaml"
        ],
        "version": "4.3.16"
    },
    "conda-autoenv": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "conda-build": {
        "cmdline": [],
        "modules": [
            "conda_build",
            "conda_build._link",
            "conda_build._version",
            "conda_build.api",
            "conda_build.build",
            "conda_build.cli",
            "conda_build.cli.main_build",
            "conda_build.cli.main_convert",
            "conda_build.cli.main_develop",
            "conda_build.cli.main_index",
            "conda_build.cli.main_inspect",
            "conda_build.cli.main_metapackage",
            "conda_build.cli.main_render",
            "conda_build.cli.main_sign",
            "conda_build.cli.main_skeleton",
            "conda_build.completers",
            "conda_build.conda_interface",
            "conda_build.config",
            "conda_build.convert",
            "conda_build.create_test",
            "conda_build.develop",
            "conda_build.environ",
            "conda_build.exceptions",
            "conda_build.features",
            "conda_build.index",
            "conda_build.inspect",
            "conda_build.jinja_context",
            "conda_build.license_family",
            "conda_build.metadata",
            "conda_build.metapackage",
            "conda_build.noarch_python",
            "conda_build.os_utils",
            "conda_build.os_utils.elf",
            "conda_build.os_utils.external",
            "conda_build.os_utils.ldd",
            "conda_build.os_utils.macho",
            "conda_build.post",
            "conda_build.render",
            "conda_build.sign",
            "conda_build.skeletons",
            "conda_build.skeletons._example_skeleton",
            "conda_build.skeletons.cpan",
            "conda_build.skeletons.cran",
            "conda_build.skeletons.luarocks",
            "conda_build.skeletons.pypi",
            "conda_build.source",
            "conda_build.tarcheck",
            "conda_build.utils",
            "conda_build.windows"
        ],
        "version": "2.1.5"
    },
    "conda-env": {
        "cmdline": [
            "activate",
            "conda-env",
            "deactivate"
        ],
        "modules": [
            "conda_env",
            "conda_env.cli",
            "conda_env.cli.main",
            "conda_env.cli.main_attach",
            "conda_env.cli.main_create",
            "conda_env.cli.main_export",
            "conda_env.cli.main_list",
            "conda_env.cli.main_remove",
            "conda_env.cli.main_update",
            "conda_env.cli.main_upload",
            "conda_env.compat",
            "conda_env.env",
            "conda_env.exceptions",
            "conda_env.installers",
            "conda_env.installers.base",
            "conda_env.installers.conda",
            "conda_env.installers.pip",
            "conda_env.specs",
            "conda_env.specs.binstar",
            "conda_env.specs.notebook",
            "conda_env.specs.yaml_file",
            "conda_env.utils",
            "conda_env.utils.notebooks",
            "conda_env.utils.uploader",
            "conda_env.yaml"
        ],
        "version": "2.4.2"
    },
    "conda-kapsel": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "conda-manager": {
        "cmdline": [],
        "modules": [
            "conda_manager",
            "conda_manager._version",
            "conda_manager.api",
            "conda_manager.api.client_api",
            "conda_manager.api.conda_api",
            "conda_manager.api.download_api",
            "conda_manager.api.manager_api",
            "conda_manager.app",
            "conda_manager.app.main",
            "conda_manager.data",
            "conda_manager.data.images",
            "conda_manager.data.repodata",
            "conda_manager.models",
            "conda_manager.models.dependencies",
            "conda_manager.models.filter",
            "conda_manager.models.packages",
            "conda_manager.utils",
            "conda_manager.utils.constants",
            "conda_manager.utils.encoding",
            "conda_manager.utils.findpip",
            "conda_manager.utils.logs",
            "conda_manager.utils.misc",
            "conda_manager.utils.py3compat",
            "conda_manager.utils.qthelpers",
            "conda_manager.widgets",
            "conda_manager.widgets.dialogs",
            "conda_manager.widgets.dialogs.actions",
            "conda_manager.widgets.dialogs.channels",
            "conda_manager.widgets.dialogs.close",
            "conda_manager.widgets.helperwidgets",
            "conda_manager.widgets.main_window",
            "conda_manager.widgets.packages",
            "conda_manager.widgets.search",
            "conda_manager.widgets.table",
            "ui",
            "ui.conda_manager",
            "ui.conda_manager.condapackages"
        ],
        "version": "0.4.0"
    },
    "conda-mirror": {
        "cmdline": [],
        "modules": [
            "conda_mirror",
            "conda_mirror._version",
            "conda_mirror.conda_mirror"
        ],
        "version": "0.7.1"
    },
    "conda-tools": {
        "cmdline": [],
        "modules": [
            "conda_tools",
            "conda_tools.cache",
            "conda_tools.cache_utils",
            "conda_tools.common",
            "conda_tools.config",
            "conda_tools.environment",
            "conda_tools.environment_utils",
            "conda_tools.history",
            "conda_tools.lru_cache",
            "conda_tools.package",
            "conda_tools.utils"
        ],
        "version": "0.1"
    },
    "conda-version-test": {
        "cmdline": [],
        "modules": [
            "conda_version_test",
            "conda_version_test.conda_version_test"
        ],
        "version": "0.1.0-1"
    },
    "conda-workon": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.0"
    },
    "conda2wheel": {
        "cmdline": [],
        "modules": [
            "conda2wheel"
        ],
        "version": "0.1"
    },
    "condamagic": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.1"
    },
    "condconf": {
        "cmdline": [],
        "modules": [
            "condconf",
            "condconf.cond",
            "condconf.cond_function",
            "condconf.cond_generator"
        ],
        "version": "0.1.1"
    },
    "condconfigparser": {
        "cmdline": [],
        "modules": [
            "condconfigparser",
            "condconfigparser.condconfig",
            "condconfigparser.exceptions",
            "condconfigparser.lexer",
            "condconfigparser.parser",
            "condconfigparser.tests",
            "condconfigparser.tests.data",
            "condconfigparser.tests.data.config1",
            "condconfigparser.tests.data.config2",
            "condconfigparser.tests.data.config3",
            "condconfigparser.tests.test_condconfig",
            "condconfigparser.tests.test_parser",
            "condconfigparser.version"
        ],
        "version": "1.0.3"
    },
    "condent": {
        "cmdline": [
            "condent"
        ],
        "modules": [
            "condent"
        ],
        "version": "0.3"
    },
    "condiment": {
        "cmdline": [
            "condiment"
        ],
        "modules": [
            "condiment"
        ],
        "version": "0.6"
    },
    "conditional": {
        "cmdline": [],
        "modules": [
            "conditional",
            "conditional.conditional",
            "conditional.tests",
            "conditional.tests.test_conditional"
        ],
        "version": "1.2"
    },
    "conditions": {
        "cmdline": [],
        "modules": [
            "conditions",
            "conditions.exceptions",
            "conditions.handlers",
            "conditions.restarts",
            "conditions.signals"
        ],
        "version": "0.2.0"
    },
    "condoor": {
        "cmdline": [],
        "modules": [
            "condoor",
            "condoor.actions",
            "condoor.chain",
            "condoor.config",
            "condoor.connection",
            "condoor.controller",
            "condoor.device",
            "condoor.drivers",
            "condoor.drivers.Calvados",
            "condoor.drivers.IOS",
            "condoor.drivers.NX-OS",
            "condoor.drivers.QNX",
            "condoor.drivers.Windriver",
            "condoor.drivers.XE",
            "condoor.drivers.XR",
            "condoor.drivers.XRv",
            "condoor.drivers.eXR",
            "condoor.drivers.generic",
            "condoor.drivers.jumphost",
            "condoor.exceptions",
            "condoor.fsm",
            "condoor.hopinfo",
            "condoor.patterns",
            "condoor.protocols",
            "condoor.protocols.base",
            "condoor.protocols.console",
            "condoor.protocols.ssh",
            "condoor.protocols.telnet",
            "condoor.utils",
            "condoor.version"
        ],
        "version": "1.0.0"
    },
    "condor": {
        "cmdline": [],
        "modules": [
            "condor",
            "condor.condor_config",
            "condor.condorscript",
            "condor.task",
            "condor.utilities",
            "condor.utilities.condor_logger",
            "condor.watcher"
        ],
        "version": "0.1.3.1"
    },
    "condor-csv": {
        "cmdline": [],
        "modules": [
            "condor_csv",
            "condor_csv._metadata",
            "condor_csv.csv_to_submit"
        ],
        "version": "0.1.1"
    },
    "condor-ir": {
        "cmdline": [],
        "modules": [
            "condor",
            "condor.config",
            "condor.dbutil",
            "condor.models",
            "condor.models.base",
            "condor.models.bibliography",
            "condor.models.document",
            "condor.models.query",
            "condor.models.ranking_matrix",
            "condor.models.term_document_matrix",
            "condor.normalize",
            "condor.record",
            "condor.record.base",
            "condor.record.bib",
            "condor.record.froac",
            "condor.record.isi",
            "condor.schemas",
            "condor.scripts",
            "condor.scripts.bibliography",
            "condor.scripts.cli",
            "condor.scripts.contributor",
            "condor.scripts.evaluate",
            "condor.scripts.matrix",
            "condor.scripts.model",
            "condor.scripts.query",
            "condor.scripts.ranking",
            "condor.scripts.utils",
            "condor.util"
        ],
        "version": "1.1.0"
    },
    "condor-kmeans": {
        "cmdline": [],
        "modules": [
            "condor_kmeans",
            "condor_kmeans.condor",
            "condor_kmeans.kmeans",
            "condor_kmeans.utils",
            "condor_kmeans.vector"
        ],
        "version": "0.9"
    },
    "condorpy": {
        "cmdline": [],
        "modules": [
            "condorpy",
            "condorpy.exceptions",
            "condorpy.htcondor_object_base",
            "condorpy.job",
            "condorpy.logger",
            "condorpy.node",
            "condorpy.static",
            "condorpy.templates",
            "condorpy.workflow",
            "tests",
            "tests.test_job",
            "tests.test_node",
            "tests.test_templates",
            "tests.test_workflow"
        ],
        "version": "0.2.1"
    },
    "conductance": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "conductor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "conductr-cli": {
        "cmdline": [],
        "modules": [
            "conductr_cli",
            "conductr_cli.ansi_colors",
            "conductr_cli.bndl",
            "conductr_cli.bndl_create",
            "conductr_cli.bndl_docker",
            "conductr_cli.bndl_main",
            "conductr_cli.bndl_oci",
            "conductr_cli.bndl_utils",
            "conductr_cli.bundle_deploy",
            "conductr_cli.bundle_installation",
            "conductr_cli.bundle_scale",
            "conductr_cli.bundle_shorthand",
            "conductr_cli.bundle_utils",
            "conductr_cli.conduct",
            "conductr_cli.conduct_acls",
            "conductr_cli.conduct_agents",
            "conductr_cli.conduct_dcos",
            "conductr_cli.conduct_deploy",
            "conductr_cli.conduct_events",
            "conductr_cli.conduct_info",
            "conductr_cli.conduct_info_common",
            "conductr_cli.conduct_info_inspect",
            "conductr_cli.conduct_info_list",
            "conductr_cli.conduct_load",
            "conductr_cli.conduct_load_license",
            "conductr_cli.conduct_logs",
            "conductr_cli.conduct_main",
            "conductr_cli.conduct_members",
            "conductr_cli.conduct_request",
            "conductr_cli.conduct_run",
            "conductr_cli.conduct_service_names",
            "conductr_cli.conduct_stop",
            "conductr_cli.conduct_unload",
            "conductr_cli.conduct_url",
            "conductr_cli.constants",
            "conductr_cli.custom_settings",
            "conductr_cli.docker",
            "conductr_cli.endpoint",
            "conductr_cli.exceptions",
            "conductr_cli.host",
            "conductr_cli.http",
            "conductr_cli.license",
            "conductr_cli.license_auth",
            "conductr_cli.license_validation",
            "conductr_cli.logging_setup",
            "conductr_cli.main_handler",
            "conductr_cli.pyinstaller_info",
            "conductr_cli.resolver",
            "conductr_cli.resolvers",
            "conductr_cli.resolvers.bintray_resolver",
            "conductr_cli.resolvers.docker_offline_resolver",
            "conductr_cli.resolvers.docker_resolver",
            "conductr_cli.resolvers.offline_resolver",
            "conductr_cli.resolvers.resolvers_util",
            "conductr_cli.resolvers.stdin_resolver",
            "conductr_cli.resolvers.test",
            "conductr_cli.resolvers.test.test_bintray_resolver",
            "conductr_cli.resolvers.test.test_offline_resolver",
            "conductr_cli.resolvers.test.test_resolvers_util",
            "conductr_cli.resolvers.test.test_uri_resolver",
            "conductr_cli.resolvers.uri_resolver",
            "conductr_cli.sandbox",
            "conductr_cli.sandbox_common",
            "conductr_cli.sandbox_features",
            "conductr_cli.sandbox_logs",
            "conductr_cli.sandbox_main",
            "conductr_cli.sandbox_proxy",
            "conductr_cli.sandbox_ps",
            "conductr_cli.sandbox_restart",
            "conductr_cli.sandbox_run",
            "conductr_cli.sandbox_run_docker",
            "conductr_cli.sandbox_run_jvm",
            "conductr_cli.sandbox_stop",
            "conductr_cli.sandbox_stop_docker",
            "conductr_cli.sandbox_stop_jvm",
            "conductr_cli.sandbox_version",
            "conductr_cli.screen_utils",
            "conductr_cli.shazar",
            "conductr_cli.shazar_main",
            "conductr_cli.sse_client",
            "conductr_cli.terminal",
            "conductr_cli.test",
            "conductr_cli.test.cli_test_case",
            "conductr_cli.test.conduct_load_test_base",
            "conductr_cli.test.conduct_run_test_base",
            "conductr_cli.test.test_bndl_create",
            "conductr_cli.test.test_bndl_docker",
            "conductr_cli.test.test_bndl_main",
            "conductr_cli.test.test_bndl_oci",
            "conductr_cli.test.test_bndl_utils",
            "conductr_cli.test.test_bundle_deploy",
            "conductr_cli.test.test_bundle_installation",
            "conductr_cli.test.test_bundle_scale",
            "conductr_cli.test.test_bundle_shorthand",
            "conductr_cli.test.test_bundle_utils",
            "conductr_cli.test.test_conduct_acls",
            "conductr_cli.test.test_conduct_agents",
            "conductr_cli.test.test_conduct_dcos",
            "conductr_cli.test.test_conduct_deploy",
            "conductr_cli.test.test_conduct_events",
            "conductr_cli.test.test_conduct_info",
            "conductr_cli.test.test_conduct_load_functions",
            "conductr_cli.test.test_conduct_load_license",
            "conductr_cli.test.test_conduct_load_v1",
            "conductr_cli.test.test_conduct_load_v2",
            "conductr_cli.test.test_conduct_logging",
            "conductr_cli.test.test_conduct_logs",
            "conductr_cli.test.test_conduct_main",
            "conductr_cli.test.test_conduct_members",
            "conductr_cli.test.test_conduct_request",
            "conductr_cli.test.test_conduct_run_v1",
            "conductr_cli.test.test_conduct_run_v2",
            "conductr_cli.test.test_conduct_service_names",
            "conductr_cli.test.test_conduct_stop",
            "conductr_cli.test.test_conduct_unload",
            "conductr_cli.test.test_conduct_url",
            "conductr_cli.test.test_custom_settings",
            "conductr_cli.test.test_docker",
            "conductr_cli.test.test_host",
            "conductr_cli.test.test_license",
            "conductr_cli.test.test_license_auth",
            "conductr_cli.test.test_license_validation",
            "conductr_cli.test.test_logging_setup",
            "conductr_cli.test.test_main_handler",
            "conductr_cli.test.test_pyinstaller_info",
            "conductr_cli.test.test_resolver",
            "conductr_cli.test.test_sandbox_common",
            "conductr_cli.test.test_sandbox_features",
            "conductr_cli.test.test_sandbox_logs",
            "conductr_cli.test.test_sandbox_main",
            "conductr_cli.test.test_sandbox_proxy",
            "conductr_cli.test.test_sandbox_ps",
            "conductr_cli.test.test_sandbox_restart",
            "conductr_cli.test.test_sandbox_run",
            "conductr_cli.test.test_sandbox_run_docker",
            "conductr_cli.test.test_sandbox_run_jvm",
            "conductr_cli.test.test_sandbox_stop",
            "conductr_cli.test.test_sandbox_stop_docker",
            "conductr_cli.test.test_sandbox_stop_jvm",
            "conductr_cli.test.test_screen_utils",
            "conductr_cli.test.test_shazar_main",
            "conductr_cli.test.test_sse_client",
            "conductr_cli.test.test_terminal",
            "conductr_cli.test.test_validation",
            "conductr_cli.test.test_version",
            "conductr_cli.validation",
            "conductr_cli.version",
            "dcos",
            "dcos.auth",
            "dcos.cmds",
            "dcos.config",
            "dcos.constants",
            "dcos.cosmos",
            "dcos.emitting",
            "dcos.errors",
            "dcos.http",
            "dcos.jsonitem",
            "dcos.marathon",
            "dcos.mesos",
            "dcos.metronome",
            "dcos.options",
            "dcos.package",
            "dcos.packagemanager",
            "dcos.recordio",
            "dcos.rpcclient",
            "dcos.servicemanager",
            "dcos.sse",
            "dcos.subcommand",
            "dcos.subprocess",
            "dcos.util"
        ],
        "version": "1.2.11"
    },
    "conduit": {
        "cmdline": [],
        "modules": [
            "conduit",
            "conduit.core",
            "conduit.test",
            "conduit.test.graph_control_flow_test",
            "conduit.test.syntax_helpers_test",
            "conduit.util",
            "conduit.util.comparable_interface"
        ],
        "version": "0.0.8"
    },
    "cone.app": {
        "cmdline": [],
        "modules": [
            "cone",
            "cone.app",
            "cone.app.browser",
            "cone.app.browser.actions",
            "cone.app.browser.ajax",
            "cone.app.browser.authoring",
            "cone.app.browser.batch",
            "cone.app.browser.contents",
            "cone.app.browser.contextmenu",
            "cone.app.browser.copysupport",
            "cone.app.browser.exception",
            "cone.app.browser.form",
            "cone.app.browser.layout",
            "cone.app.browser.login",
            "cone.app.browser.referencebrowser",
            "cone.app.browser.resources",
            "cone.app.browser.settings",
            "cone.app.browser.sharing",
            "cone.app.browser.table",
            "cone.app.browser.utils",
            "cone.app.browser.workflow",
            "cone.app.interfaces",
            "cone.app.model",
            "cone.app.security",
            "cone.app.testing",
            "cone.app.testing.mock",
            "cone.app.tests",
            "cone.app.utils",
            "cone.app.workflow"
        ],
        "version": "1.0a5"
    },
    "cone.sql": {
        "cmdline": [],
        "modules": [
            "cone",
            "cone.sql",
            "cone.sql.model",
            "cone.sql.testing",
            "cone.sql.tests"
        ],
        "version": "0.1"
    },
    "cone.tile": {
        "cmdline": [],
        "modules": [
            "cone",
            "cone.tile",
            "cone.tile._api",
            "cone.tile.tests"
        ],
        "version": "0.9.5"
    },
    "cone.ugm": {
        "cmdline": [],
        "modules": [
            "cone",
            "cone.ugm",
            "cone.ugm.browser",
            "cone.ugm.browser.actions",
            "cone.ugm.browser.authoring",
            "cone.ugm.browser.autoincrement",
            "cone.ugm.browser.batch",
            "cone.ugm.browser.columns",
            "cone.ugm.browser.expires",
            "cone.ugm.browser.group",
            "cone.ugm.browser.groups",
            "cone.ugm.browser.listing",
            "cone.ugm.browser.portrait",
            "cone.ugm.browser.principal",
            "cone.ugm.browser.remote",
            "cone.ugm.browser.roles",
            "cone.ugm.browser.root",
            "cone.ugm.browser.settings",
            "cone.ugm.browser.user",
            "cone.ugm.browser.users",
            "cone.ugm.browser.utils",
            "cone.ugm.model",
            "cone.ugm.model.group",
            "cone.ugm.model.groups",
            "cone.ugm.model.localmanager",
            "cone.ugm.model.settings",
            "cone.ugm.model.user",
            "cone.ugm.model.users",
            "cone.ugm.model.utils",
            "cone.ugm.tests",
            "cone.ugm.tests.test_ugm"
        ],
        "version": "0.9.7"
    },
    "conekta": {
        "cmdline": [],
        "modules": [
            "conekta",
            "tests",
            "tests.test_customer",
            "tests.test_events",
            "tests.test_logs",
            "tests.test_orders",
            "tests.test_pagination",
            "tests.test_webhooks"
        ],
        "version": "2.3.4"
    },
    "coneyeye": {
        "cmdline": [],
        "modules": [
            "coneyeye",
            "coneyeye._version",
            "coneyeye.flattendict",
            "coneyeye.main",
            "coneyeye.mqreport"
        ],
        "version": "0.1.post21"
    },
    "conf": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.23"
    },
    "conf-d": {
        "cmdline": [],
        "modules": [
            "conf_d"
        ],
        "version": "0.0.4"
    },
    "confab": {
        "cmdline": [],
        "modules": [
            "confab",
            "confab.api",
            "confab.autotasks",
            "confab.conffiles",
            "confab.data",
            "confab.definitions",
            "confab.diagnostics",
            "confab.diff",
            "confab.files",
            "confab.generate",
            "confab.iter",
            "confab.loaders",
            "confab.main",
            "confab.merge",
            "confab.options",
            "confab.pull",
            "confab.push",
            "confab.validate"
        ],
        "version": "1.4"
    },
    "confargparse": {
        "cmdline": [],
        "modules": [
            "confargparse"
        ],
        "version": "1.1.20"
    },
    "confcollect": {
        "cmdline": [],
        "modules": [
            "confcollect"
        ],
        "version": "0.2.5"
    },
    "confdir": {
        "cmdline": [],
        "modules": [
            "confdir"
        ],
        "version": "0.1.0"
    },
    "confduino": {
        "cmdline": [],
        "modules": [
            "confduino",
            "confduino.about",
            "confduino.boardinstall",
            "confduino.boardlist",
            "confduino.boardremove",
            "confduino.exampallcreate",
            "confduino.exampallremove",
            "confduino.examples",
            "confduino.examples.alt",
            "confduino.examples.atmega88",
            "confduino.examples.board",
            "confduino.examples.custom_boards",
            "confduino.examples.dapa",
            "confduino.examples.metaboard",
            "confduino.examples.ps2",
            "confduino.examples.remove_boards",
            "confduino.examples.remove_libraries",
            "confduino.examples.sanguino",
            "confduino.examples.stk200",
            "confduino.examples.upgrademany",
            "confduino.examplist",
            "confduino.hwpackinstall",
            "confduino.hwpacklist",
            "confduino.hwpackremove",
            "confduino.libinstall",
            "confduino.liblist",
            "confduino.libremove",
            "confduino.mculist",
            "confduino.prettyprint",
            "confduino.proginstall",
            "confduino.proglist",
            "confduino.progremove",
            "confduino.util",
            "confduino.version"
        ],
        "version": "0.2.3"
    },
    "confeitaria": {
        "cmdline": [],
        "modules": [
            "confeitaria",
            "confeitaria.interfaces",
            "confeitaria.request",
            "confeitaria.responses",
            "confeitaria.runner",
            "confeitaria.server",
            "confeitaria.server.environment",
            "confeitaria.server.requestparser",
            "confeitaria.server.server",
            "confeitaria.server.session",
            "confeitaria_tests",
            "confeitaria_tests.interfaces",
            "confeitaria_tests.reference",
            "confeitaria_tests.responses",
            "confeitaria_tests.server",
            "confeitaria_tests.server.environment",
            "confeitaria_tests.server.requestparser",
            "confeitaria_tests.server.server",
            "confeitaria_tests.server.session"
        ],
        "version": "0.1a3"
    },
    "conference": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "conference-scheduler": {
        "cmdline": [],
        "modules": [
            "conference_scheduler",
            "conference_scheduler.lp_problem",
            "conference_scheduler.lp_problem.constraints",
            "conference_scheduler.lp_problem.objective_functions",
            "conference_scheduler.lp_problem.utils",
            "conference_scheduler.resources",
            "conference_scheduler.scheduler",
            "conference_scheduler.validator"
        ],
        "version": "2.0.0"
    },
    "confetti": {
        "cmdline": [],
        "modules": [
            "confetti",
            "confetti.__version__",
            "confetti.config",
            "confetti.exceptions",
            "confetti.metadata",
            "confetti.python3_compat",
            "confetti.ref",
            "confetti.utils"
        ],
        "version": "2.5.0"
    },
    "confgen": {
        "cmdline": [],
        "modules": [
            "confgen",
            "confgen.app",
            "tests",
            "tests.test_confgen"
        ],
        "version": "0.1.4"
    },
    "confidant": {
        "cmdline": [],
        "modules": [
            "confidant",
            "confidant.app",
            "confidant.authnz",
            "confidant.authnz.errors",
            "confidant.authnz.userauth",
            "confidant.ciphermanager",
            "confidant.graphite",
            "confidant.keymanager",
            "confidant.lib",
            "confidant.lib.cryptolib",
            "confidant.models",
            "confidant.models.blind_credential",
            "confidant.models.connection_cls",
            "confidant.models.credential",
            "confidant.models.service",
            "confidant.models.session_cls",
            "confidant.routes",
            "confidant.routes.saml",
            "confidant.routes.static_files",
            "confidant.routes.v1",
            "confidant.scripts",
            "confidant.scripts.bootstrap",
            "confidant.scripts.manage",
            "confidant.scripts.utils",
            "confidant.services",
            "confidant.settings",
            "confidant.utils",
            "confidant.utils.dynamodb",
            "confidant.utils.misc",
            "confidant.webhook",
            "confidant.wsgi"
        ],
        "version": "1.9.0"
    },
    "confidant-client": {
        "cmdline": [],
        "modules": [
            "confidant_client",
            "confidant_client.cli",
            "confidant_client.formatter",
            "confidant_client.lib",
            "confidant_client.lib.cryptolib",
            "confidant_client.services",
            "confidant_client.workarounds"
        ],
        "version": "1.3.0"
    },
    "config": {
        "cmdline": [],
        "modules": [
            "config"
        ],
        "version": "0.3.9"
    },
    "config-edit": {
        "cmdline": [],
        "modules": [
            "config_edit",
            "config_edit.ssh"
        ],
        "version": "0.0.1"
    },
    "config-enhance": {
        "cmdline": [],
        "modules": [
            "config_enhance"
        ],
        "version": "1.2.2"
    },
    "config-finder": {
        "cmdline": [],
        "modules": [
            "config-finder"
        ],
        "version": "0.1.1"
    },
    "config-gen": {
        "cmdline": [],
        "modules": [
            "config_gen",
            "config_gen.commands",
            "config_gen.commands.quickstart",
            "config_gen.commands.render",
            "config_gen.commands.render_file",
            "config_gen.exceptions",
            "config_gen.readers",
            "config_gen.readers.read_csv",
            "config_gen.readers.read_ini",
            "config_gen.readers.read_json",
            "config_gen.readers.read_py",
            "config_gen.readers.read_txt",
            "config_gen.utils"
        ],
        "version": "1.0-alpha6"
    },
    "config-handle": {
        "cmdline": [],
        "modules": [
            "config_handler"
        ],
        "version": "0.3.0"
    },
    "config-loader": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "config-logger": {
        "cmdline": [],
        "modules": [
            "config_logger",
            "config_logger.filters",
            "config_logger.logger",
            "tests",
            "tests.filters_test",
            "tests.logger_test"
        ],
        "version": "1.0.1"
    },
    "config-manager": {
        "cmdline": [],
        "modules": [
            "config_manager",
            "config_manager.config_manager",
            "config_manager.config_ruleset",
            "config_manager.test",
            "config_manager.test.test_config_manager",
            "config_manager.test.test_config_ruleset"
        ],
        "version": "1.0.1"
    },
    "config-probe": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.5"
    },
    "config-provider": {
        "cmdline": [],
        "modules": [
            "config_provider",
            "config_provider.config_provider",
            "tests",
            "tests.config_provider_tests"
        ],
        "version": "1.0.0"
    },
    "config-reader": {
        "cmdline": [],
        "modules": [
            "config_reader",
            "config_reader.exceptions",
            "config_reader.reader"
        ],
        "version": "0.8"
    },
    "config-resolver": {
        "cmdline": [],
        "modules": [
            "config_resolver"
        ],
        "version": "4.2.2"
    },
    "config-runner": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "config-sci": {
        "cmdline": [],
        "modules": [
            "config_sci",
            "config_sci.config_sci"
        ],
        "version": "0.1.2"
    },
    "config-sesame": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "config-tempest": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1.dev8"
    },
    "config-tool": {
        "cmdline": [],
        "modules": [
            "app",
            "app.config_tool"
        ],
        "version": "0.0.13"
    },
    "config-utils": {
        "cmdline": [],
        "modules": [
            "config-utils.config-utils"
        ],
        "version": "0.3"
    },
    "configable": {
        "cmdline": [],
        "modules": [
            "configable"
        ],
        "version": "0.1.10"
    },
    "configadministrator": {
        "cmdline": [],
        "modules": [
            "config_admin",
            "config_admin.controllers",
            "config_admin.model",
            "config_admin.release",
            "config_admin.templates",
            "config_admin.widgets"
        ],
        "version": "0.1a1.dev-r2011"
    },
    "configargparse": {
        "cmdline": [],
        "modules": [
            "configargparse"
        ],
        "version": "0.12.0"
    },
    "configargparser": {
        "cmdline": [],
        "modules": [
            "configargparser"
        ],
        "version": "0.0.2"
    },
    "configbuilder": {
        "cmdline": [],
        "modules": [
            "configbuilder",
            "configbuilder.parser",
            "configbuilder.validator"
        ],
        "version": "0.2.2"
    },
    "configcascade": {
        "cmdline": [],
        "modules": [
            "configcascade"
        ],
        "version": "1.0.0"
    },
    "configchecker": {
        "cmdline": [],
        "modules": [
            "configchecker"
        ],
        "version": "0.95"
    },
    "configclass": {
        "cmdline": [],
        "modules": [
            "configclass"
        ],
        "version": "0.1.0"
    },
    "configcollector": {
        "cmdline": [],
        "modules": [
            "configcollector",
            "configcollector.configcollector",
            "configcollector.router"
        ],
        "version": "0.1.1"
    },
    "configcontextualchecker": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "configconvert": {
        "cmdline": [],
        "modules": [
            "configconvert",
            "configconvert.internal",
            "configconvert.service"
        ],
        "version": "0.2.2"
    },
    "configdb": {
        "cmdline": [],
        "modules": [
            "configdb",
            "configdb.consolemsg",
            "configdb.namespace"
        ],
        "version": "0.1"
    },
    "configdeck": {
        "cmdline": [],
        "modules": [
            "configdeck",
            "configdeck._compat",
            "configdeck._metadata",
            "configdeck.app",
            "configdeck.app.base",
            "configdeck.app.plugin",
            "configdeck.contrib",
            "configdeck.contrib.schema",
            "configdeck.contrib.schema.devserver",
            "configdeck.contrib.schema.django_jenkins",
            "configdeck.contrib.schema.django_openid_auth",
            "configdeck.contrib.schema.nexus",
            "configdeck.contrib.schema.preflight",
            "configdeck.contrib.schema.pystatsd",
            "configdeck.contrib.schema.raven",
            "configdeck.contrib.schema.saml2idp",
            "configdeck.deck",
            "configdeck.inischema",
            "configdeck.inischema.attributed",
            "configdeck.inischema.deck",
            "configdeck.inischema.parsers",
            "configdeck.inischema.typed",
            "configdeck.parser",
            "configdeck.schema",
            "configdeck.tests",
            "configdeck.tests.app",
            "configdeck.tests.app.test_base",
            "configdeck.tests.app.test_plugin",
            "configdeck.tests.inischema",
            "configdeck.tests.inischema.test_attributed",
            "configdeck.tests.inischema.test_deck",
            "configdeck.tests.inischema.test_deck2deck",
            "configdeck.tests.inischema.test_parsers",
            "configdeck.tests.inischema.test_typed",
            "configdeck.tests.test_contrib_schema",
            "configdeck.tests.test_metadata",
            "configdeck.tests.test_parser",
            "configdeck.tests.test_schema",
            "configdeck.tests.test_schemaconfig"
        ],
        "version": "1.2.1"
    },
    "configen": {
        "cmdline": [
            "configen.py"
        ],
        "modules": [
            "configen"
        ],
        "version": "0.0.1"
    },
    "configgen": {
        "cmdline": [],
        "modules": [
            "configgen",
            "configgen.config",
            "configgen.main",
            "configgen.version"
        ],
        "version": "1.0.0"
    },
    "configglue": {
        "cmdline": [],
        "modules": [
            "configglue",
            "configglue._compat",
            "configglue.app",
            "configglue.app.base",
            "configglue.app.plugin",
            "configglue.contrib",
            "configglue.contrib.schema",
            "configglue.contrib.schema.devserver",
            "configglue.contrib.schema.django_jenkins",
            "configglue.contrib.schema.django_openid_auth",
            "configglue.contrib.schema.nexus",
            "configglue.contrib.schema.preflight",
            "configglue.contrib.schema.pystatsd",
            "configglue.contrib.schema.raven",
            "configglue.contrib.schema.saml2idp",
            "configglue.glue",
            "configglue.inischema",
            "configglue.inischema.attributed",
            "configglue.inischema.glue",
            "configglue.inischema.parsers",
            "configglue.inischema.typed",
            "configglue.parser",
            "configglue.schema",
            "configglue.tests",
            "configglue.tests.app",
            "configglue.tests.app.test_base",
            "configglue.tests.app.test_plugin",
            "configglue.tests.inischema",
            "configglue.tests.inischema.test_attributed",
            "configglue.tests.inischema.test_glue",
            "configglue.tests.inischema.test_glue2glue",
            "configglue.tests.inischema.test_parsers",
            "configglue.tests.inischema.test_typed",
            "configglue.tests.test_contrib_schema",
            "configglue.tests.test_parser",
            "configglue.tests.test_schema",
            "configglue.tests.test_schemaconfig"
        ],
        "version": "1.1.3.post0"
    },
    "configi": {
        "cmdline": [],
        "modules": [
            "configi"
        ],
        "version": "0.1.3"
    },
    "configify": {
        "cmdline": [
            "configify"
        ],
        "modules": [
            "configify"
        ],
        "version": "0.0.3"
    },
    "configit": {
        "cmdline": [],
        "modules": [
            "configit"
        ],
        "version": "1.1"
    },
    "configless": {
        "cmdline": [],
        "modules": [
            "configless",
            "configless.interfaces",
            "configless.langhelper",
            "configless.tests",
            "configless.tests.test_configurator"
        ],
        "version": "0.1"
    },
    "configlib": {
        "cmdline": [],
        "modules": [
            "configlib"
        ],
        "version": "1.0.0"
    },
    "configloader": {
        "cmdline": [],
        "modules": [
            "configloader"
        ],
        "version": "1.0.1"
    },
    "configman": {
        "cmdline": [],
        "modules": [
            "configman",
            "configman.commandline",
            "configman.config_exceptions",
            "configman.config_file_future_proxy",
            "configman.config_manager",
            "configman.converters",
            "configman.datetime_util",
            "configman.def_sources",
            "configman.def_sources.for_argparse",
            "configman.def_sources.for_json",
            "configman.def_sources.for_mappings",
            "configman.def_sources.for_modules",
            "configman.dotdict",
            "configman.environment",
            "configman.memoize",
            "configman.namespace",
            "configman.option",
            "configman.orderedset",
            "configman.required_config",
            "configman.tests",
            "configman.tests.test_config_files",
            "configman.tests.test_config_manager",
            "configman.tests.test_converters",
            "configman.tests.test_datetime_util",
            "configman.tests.test_def_for_argparse",
            "configman.tests.test_def_for_mappings",
            "configman.tests.test_def_sources",
            "configman.tests.test_dotdict",
            "configman.tests.test_memoize",
            "configman.tests.test_namespace",
            "configman.tests.test_option",
            "configman.tests.test_val_for_argparse",
            "configman.tests.test_val_for_conf",
            "configman.tests.test_val_for_configobj",
            "configman.tests.test_val_for_getopt",
            "configman.tests.test_val_for_json",
            "configman.tests.test_val_for_mapping",
            "configman.tests.test_val_for_modules",
            "configman.tests.values_for_module_tests_1",
            "configman.tests.values_for_module_tests_2",
            "configman.tests.values_for_module_tests_3",
            "configman.tests.values_for_module_tests_4",
            "configman.value_sources",
            "configman.value_sources.for_argparse",
            "configman.value_sources.for_conf",
            "configman.value_sources.for_configobj",
            "configman.value_sources.for_getopt",
            "configman.value_sources.for_json",
            "configman.value_sources.for_mapping",
            "configman.value_sources.for_modules",
            "configman.value_sources.for_xml",
            "configman.value_sources.source_exceptions"
        ],
        "version": "1.3.0"
    },
    "configmanager": {
        "cmdline": [],
        "modules": [
            "configmanager",
            "configmanager.base",
            "configmanager.exceptions",
            "configmanager.items",
            "configmanager.managers",
            "configmanager.parsers",
            "configmanager.persistence",
            "configmanager.utils",
            "tests",
            "tests.conftest",
            "tests.test_config",
            "tests.test_config_declaration_parser",
            "tests.test_extending_library",
            "tests.test_item",
            "tests.test_item_awareness",
            "tests.test_item_get_set",
            "tests.test_persistence",
            "tests.test_v1"
        ],
        "version": "1.1.14"
    },
    "configmaster": {
        "cmdline": [],
        "modules": [
            "configmaster",
            "configmaster.ConfigFile",
            "configmaster.ConfigGenerator",
            "configmaster.ConfigKey",
            "configmaster.INIConfigFile",
            "configmaster.JSONConfigFile",
            "configmaster.SPyCfg",
            "configmaster.YAMLConfigFile",
            "configmaster.exc"
        ],
        "version": "2.3.6"
    },
    "configme": {
        "cmdline": [],
        "modules": [
            "configme",
            "configme.configme",
            "configme.filters"
        ],
        "version": "0.0.4"
    },
    "configmgr": {
        "cmdline": [],
        "modules": [
            "configmgr"
        ],
        "version": "0.0"
    },
    "configo": {
        "cmdline": [],
        "modules": [
            "configo",
            "configo.configo"
        ],
        "version": "1.4"
    },
    "configobj": {
        "cmdline": [],
        "modules": [
            "_version",
            "configobj",
            "validate"
        ],
        "version": "5.0.6"
    },
    "configobj-gui": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "configobj-qt": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "configobject": {
        "cmdline": [],
        "modules": [
            "ConfigObject",
            "ConfigObject.tests",
            "ConfigObject.tests.config",
            "ConfigObject.tests.tests"
        ],
        "version": "1.2.2"
    },
    "configopt": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "configoptionparser": {
        "cmdline": [],
        "modules": [
            "configoptionparser"
        ],
        "version": "0.1"
    },
    "configoverloader": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "configparse": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "configparser": {
        "cmdline": [],
        "modules": [
            "backports",
            "backports.configparser",
            "backports.configparser.helpers"
        ],
        "version": "3.5.0"
    },
    "configparser2": {
        "cmdline": [],
        "modules": [
            "backports",
            "backports.configparser2",
            "backports.configparser2.helpers"
        ],
        "version": "4.0.0"
    },
    "configparserplus": {
        "cmdline": [],
        "modules": [
            "configparserplus",
            "configparserplus.compat",
            "configparserplus.main"
        ],
        "version": "0.0.5"
    },
    "configproxy": {
        "cmdline": [],
        "modules": [
            "configproxy"
        ],
        "version": "0.0.3"
    },
    "configpy": {
        "cmdline": [],
        "modules": [
            "configpy"
        ],
        "version": "0.5"
    },
    "configr": {
        "cmdline": [],
        "modules": [
            "configr"
        ],
        "version": "2017.1515.2733"
    },
    "configreader": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.6"
    },
    "configreset": {
        "cmdline": [],
        "modules": [
            "configreset",
            "configreset.parameter"
        ],
        "version": "0.9"
    },
    "configs": {
        "cmdline": [],
        "modules": [
            "configs",
            "configs.api",
            "configs.config",
            "configs.section"
        ],
        "version": "3.0.3"
    },
    "configsaver": {
        "cmdline": [
            "configsaver.py"
        ],
        "modules": [
            "configsaver",
            "configsaver.path"
        ],
        "version": "0.2"
    },
    "configsmash": {
        "cmdline": [],
        "modules": [
            "csmash"
        ],
        "version": "0.0.2"
    },
    "configsmasher": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "configspace": {
        "cmdline": [],
        "modules": [
            "ConfigSpace",
            "ConfigSpace.__version__",
            "ConfigSpace.conditions",
            "ConfigSpace.configuration_space",
            "ConfigSpace.convert",
            "ConfigSpace.exceptions",
            "ConfigSpace.forbidden",
            "ConfigSpace.hyperparameters",
            "ConfigSpace.io",
            "ConfigSpace.io.irace",
            "ConfigSpace.io.pbs",
            "ConfigSpace.io.pcs",
            "ConfigSpace.io.pcs_new",
            "ConfigSpace.io.pyll",
            "ConfigSpace.io.spearmint_april2013_mod_spearmint_pb2",
            "ConfigSpace.nx",
            "ConfigSpace.nx.algorithms",
            "ConfigSpace.nx.algorithms.components",
            "ConfigSpace.nx.algorithms.components.strongly_connected",
            "ConfigSpace.nx.algorithms.cycles",
            "ConfigSpace.nx.algorithms.dag",
            "ConfigSpace.nx.classes",
            "ConfigSpace.nx.classes.digraph",
            "ConfigSpace.nx.classes.graph",
            "ConfigSpace.nx.exception",
            "ConfigSpace.nx.release",
            "ConfigSpace.util",
            "test",
            "test.converters_and_test_searchspaces",
            "test.converters_and_test_searchspaces.test_sample_configuration_spaces",
            "test.io",
            "test.io.test_irace_writer",
            "test.io.test_pb_converter",
            "test.io.test_pcs_converter",
            "test.io.test_pyll_util",
            "test.test_conditions",
            "test.test_configuration_space",
            "test.test_forbidden",
            "test.test_hyperparameters",
            "test.test_searchspaces",
            "test.test_util"
        ],
        "version": "0.3.6"
    },
    "configstr": {
        "cmdline": [],
        "modules": [
            "configstr",
            "configstr.example",
            "configstr.exceptions",
            "configstr.load"
        ],
        "version": "0.1.0"
    },
    "configstruct": {
        "cmdline": [],
        "modules": [
            "configstruct",
            "configstruct.config_struct",
            "configstruct.open_struct",
            "configstruct.section_struct"
        ],
        "version": "0.3.1"
    },
    "configtool": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "configtools": {
        "cmdline": [
            "getconf.py",
            "gethosts.py"
        ],
        "modules": [
            "configtools"
        ],
        "version": "0.4.0"
    },
    "configtree": {
        "cmdline": [],
        "modules": [
            "configtree",
            "configtree.compat",
            "configtree.conv",
            "configtree.formatter",
            "configtree.loader",
            "configtree.script",
            "configtree.source",
            "configtree.tree"
        ],
        "version": "0.5.3"
    },
    "configtreeview": {
        "cmdline": [],
        "modules": [
            "configtreeview",
            "configtreeview.configtreeview",
            "configtreeview.tools",
            "configtreeview.tools.dataformatter"
        ],
        "version": "0.1.32"
    },
    "configupdate": {
        "cmdline": [
            "configupdate"
        ],
        "modules": [],
        "version": "0.2.1"
    },
    "configurable": {
        "cmdline": [],
        "modules": [
            "configurable"
        ],
        "version": "0.1dev"
    },
    "configurate": {
        "cmdline": [],
        "modules": [
            "configurate",
            "configurate._version",
            "configurate.version"
        ],
        "version": "0.4.1"
    },
    "configurati": {
        "cmdline": [],
        "modules": [
            "configurati",
            "configurati.attrs",
            "configurati.commands",
            "configurati.configure",
            "configurati.exceptions",
            "configurati.globals",
            "configurati.interpolate",
            "configurati.loaders",
            "configurati.loaders.commandline",
            "configurati.loaders.json",
            "configurati.loaders.python",
            "configurati.loaders.tests",
            "configurati.loaders.tests.test_commandline",
            "configurati.loaders.tests.test_json",
            "configurati.loaders.tests.test_python",
            "configurati.loaders.tests.test_utils",
            "configurati.loaders.tests.test_yaml",
            "configurati.loaders.utils",
            "configurati.loaders.yaml",
            "configurati.utils",
            "configurati.validation"
        ],
        "version": "0.2.3"
    },
    "configuration": {
        "cmdline": [],
        "modules": [
            "configuration",
            "configuration.configuration"
        ],
        "version": "0.4.2"
    },
    "configuration-panda": {
        "cmdline": [],
        "modules": [
            "configuration_panda",
            "configuration_panda.configuration_panda",
            "configuration_panda.exceptions",
            "configuration_panda.test",
            "configuration_panda.test.test_configuration_panda"
        ],
        "version": "0.12"
    },
    "configuration-project": {
        "cmdline": [],
        "modules": [
            "configuration-project.n-queens"
        ],
        "version": "1.0"
    },
    "configuration-python": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "configuration-registry": {
        "cmdline": [],
        "modules": [
            "registry"
        ],
        "version": "0.5.0"
    },
    "configuration.py": {
        "cmdline": [],
        "modules": [
            "configuration_py",
            "configuration_py.configuration_load",
            "configuration_py.parser_lookup",
            "configuration_py.parsers",
            "configuration_py.parsers.base_parser",
            "configuration_py.parsers.json_parser",
            "configuration_py.parsers.string_template_processor",
            "configuration_py.parsers.yaml_parser"
        ],
        "version": "0.8.3"
    },
    "configurations": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "configurationutil": {
        "cmdline": [],
        "modules": [
            "configurationutil",
            "configurationutil._metadata",
            "configurationutil.cfg_objects",
            "configurationutil.cfg_objects.cfg_item",
            "configurationutil.cfg_objects.cfg_items",
            "configurationutil.cfg_objects.configuration_object",
            "configurationutil.cfg_objects.json_config",
            "configurationutil.cfg_objects.sqlite3_config",
            "configurationutil.cfg_objects.yaml_config",
            "configurationutil.cfg_providers",
            "configurationutil.cfg_providers.base_provider",
            "configurationutil.cfg_providers.json_provider",
            "configurationutil.cfg_providers.yaml_provider",
            "configurationutil.configuration",
            "configurationutil.configuration_object",
            "configurationutil.json_config",
            "configurationutil.unittests",
            "configurationutil.unittests.test_configuration",
            "configurationutil.unittests.test_configuration_object",
            "configurationutil.unittests.test_json_config",
            "configurationutil.unittests.test_sqlite3_config",
            "configurationutil.unittests.test_yaml_config"
        ],
        "version": "1.5.1"
    },
    "configurator": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "configurator-utility": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "configure": {
        "cmdline": [],
        "modules": [
            "configure"
        ],
        "version": "0.5"
    },
    "configure.py": {
        "cmdline": [
            "configure"
        ],
        "modules": [
            "configure",
            "configure.build",
            "configure.command",
            "configure.compiler",
            "configure.dependency",
            "configure.dependency.autotools",
            "configure.dependency.cmake",
            "configure.env",
            "configure.filesystem",
            "configure.generator",
            "configure.generators",
            "configure.generators.find_dependencies",
            "configure.generators.makefile",
            "configure.generators.tup",
            "configure.lang",
            "configure.lang.c",
            "configure.lang.c.clang",
            "configure.lang.c.compiler",
            "configure.lang.c.gcc",
            "configure.lang.c.libraries",
            "configure.lang.c.libraries.curl",
            "configure.lang.c.libraries.freetype",
            "configure.lang.c.libraries.opengl",
            "configure.lang.c.libraries.python",
            "configure.lang.c.libraries.sdl",
            "configure.lang.c.library",
            "configure.lang.c.msvc",
            "configure.lang.cxx",
            "configure.lang.cxx.clang",
            "configure.lang.cxx.compiler",
            "configure.lang.cxx.gcc",
            "configure.lang.cxx.libraries",
            "configure.lang.cxx.libraries.boost",
            "configure.lang.cxx.library",
            "configure.lang.cxx.msvc",
            "configure.node",
            "configure.path",
            "configure.platform",
            "configure.project",
            "configure.source",
            "configure.target",
            "configure.templates",
            "configure.templates.project",
            "configure.tools"
        ],
        "version": "1.1"
    },
    "configus": {
        "cmdline": [],
        "modules": [
            "configus",
            "configus.configus",
            "configus.configus.configus",
            "configus.configus.test_main",
            "configus.configus.tests",
            "configus.tests"
        ],
        "version": "0.1.1"
    },
    "configutil": {
        "cmdline": [],
        "modules": [
            "configutil",
            "configutil.configutil"
        ],
        "version": "0.0.1.dev4"
    },
    "configvalidator": {
        "cmdline": [],
        "modules": [
            "configvalidator",
            "configvalidator.features",
            "configvalidator.features.options",
            "configvalidator.features.sections",
            "configvalidator.tools",
            "configvalidator.tools.basics",
            "configvalidator.tools.configValidator",
            "configvalidator.tools.exceptions",
            "configvalidator.tools.parser",
            "configvalidator.tools.result",
            "configvalidator.tools.timezone",
            "configvalidator.validators"
        ],
        "version": "0.2.0"
    },
    "configview": {
        "cmdline": [
            "confview"
        ],
        "modules": [
            "configview",
            "configview.configs",
            "configview.pfileparser"
        ],
        "version": "0.1.0"
    },
    "configviper": {
        "cmdline": [],
        "modules": [
            "configviper",
            "configviper.configviper",
            "configviper.converters",
            "configviper.lockfile",
            "configviper.lockfile.ctypeslocker",
            "configviper.lockfile.posixlocker",
            "configviper.tests"
        ],
        "version": "0.5"
    },
    "configwrapper": {
        "cmdline": [],
        "modules": [
            "configwrapper",
            "configwrapper.options",
            "configwrapper.options._option",
            "configwrapper.options._options",
            "configwrapper.options.collections",
            "configwrapper.options.enums",
            "configwrapper.options.numeric",
            "configwrapper.options.relations",
            "configwrapper.options.strings",
            "configwrapper.schema",
            "configwrapper.section"
        ],
        "version": "0.4.5"
    },
    "configy": {
        "cmdline": [],
        "modules": [
            "configy",
            "configy.config_container",
            "configy.helpers",
            "configy.test_suite",
            "configy.testconfig"
        ],
        "version": "0.1.1"
    },
    "configyaml": {
        "cmdline": [],
        "modules": [
            "configyaml",
            "configyaml.cli",
            "configyaml.config",
            "configyaml.config.base",
            "configyaml.config.choice",
            "configyaml.config.dict",
            "configyaml.config.list",
            "configyaml.config.nodes",
            "configyaml.configyaml",
            "configyaml.errors",
            "configyaml.loader",
            "configyaml.validator"
        ],
        "version": "0.2.0"
    },
    "confiky": {
        "cmdline": [],
        "modules": [
            "confiky"
        ],
        "version": "0.1.10"
    },
    "confine-controller": {
        "cmdline": [
            "controller-admin.sh"
        ],
        "modules": [
            "controller",
            "controller.admin",
            "controller.admin.decorators",
            "controller.admin.filters",
            "controller.admin.helpers",
            "controller.admin.options",
            "controller.admin.tests",
            "controller.admin.utils",
            "controller.admin.widgets",
            "controller.api",
            "controller.apps",
            "controller.apps.api",
            "controller.apps.api.exceptions",
            "controller.apps.api.filters",
            "controller.apps.api.generics",
            "controller.apps.api.helpers",
            "controller.apps.api.negotiation",
            "controller.apps.api.options",
            "controller.apps.api.renderers",
            "controller.apps.api.serializers",
            "controller.apps.api.tests",
            "controller.apps.api.utils",
            "controller.apps.api.utils.profiles",
            "controller.apps.communitynetworks",
            "controller.apps.communitynetworks.actions",
            "controller.apps.communitynetworks.admin",
            "controller.apps.communitynetworks.api",
            "controller.apps.communitynetworks.migrations",
            "controller.apps.communitynetworks.migrations.0001_initial",
            "controller.apps.communitynetworks.migrations.0002_auto__chg_field_cnhost_object_id",
            "controller.apps.communitynetworks.migrations.0003_auto__add_unique_cnhost_cndb_uri",
            "controller.apps.communitynetworks.migrations.0004_auto__chg_field_cnhost_cndb_uri",
            "controller.apps.communitynetworks.migrations.0005_auto__chg_field_cnhost_cndb_uri",
            "controller.apps.communitynetworks.models",
            "controller.apps.communitynetworks.permissions",
            "controller.apps.communitynetworks.serializers",
            "controller.apps.communitynetworks.settings",
            "controller.apps.communitynetworks.tests",
            "controller.apps.firmware",
            "controller.apps.firmware.actions",
            "controller.apps.firmware.admin",
            "controller.apps.firmware.api",
            "controller.apps.firmware.context",
            "controller.apps.firmware.debug",
            "controller.apps.firmware.exceptions",
            "controller.apps.firmware.forms",
            "controller.apps.firmware.helpers",
            "controller.apps.firmware.image",
            "controller.apps.firmware.management",
            "controller.apps.firmware.management.commands",
            "controller.apps.firmware.management.commands.setupfirmware",
            "controller.apps.firmware.management.commands.syncfirmwareplugins",
            "controller.apps.firmware.migrations",
            "controller.apps.firmware.migrations.0001_initial",
            "controller.apps.firmware.migrations.0002_auto__chg_field_build_task_id",
            "controller.apps.firmware.migrations.0003_auto__chg_field_builduci_value",
            "controller.apps.firmware.migrations.0004_auto__add_configfile__add_unique_configfile_config_path__add_buildfile",
            "controller.apps.firmware.migrations.0005_auto__chg_field_configfile_value",
            "controller.apps.firmware.migrations.0006_auto__add_field_configfile_priority",
            "controller.apps.firmware.migrations.0007_auto__chg_field_configfile_value",
            "controller.apps.firmware.migrations.0008_auto__add_field_configfile_chmod",
            "controller.apps.firmware.migrations.0009_auto__del_field_configfile_chmod__add_field_configfile_mode",
            "controller.apps.firmware.migrations.0010_auto__del_builduci__del_unique_builduci_build_section_option__del_buil",
            "controller.apps.firmware.migrations.0011_auto__del_field_configfile_optional__add_field_configfile_is_optional_",
            "controller.apps.firmware.migrations.0012_auto__del_confighelptext__add_configfilehelptext",
            "controller.apps.firmware.migrations.0013_auto__chg_field_configfilehelptext_file__add_unique_configfilehelptext",
            "controller.apps.firmware.migrations.0014_auto__del_field_configfile_value__add_field_configfile_content",
            "controller.apps.firmware.migrations.0015_auto__add_buildfile",
            "controller.apps.firmware.migrations.0016_auto__add_field_buildfile_parent",
            "controller.apps.firmware.migrations.0017_auto__chg_field_buildfile_parent__del_unique_buildfile_parent__add_uni",
            "controller.apps.firmware.migrations.0018_auto__del_field_buildfile_parent__add_field_buildfile_config__del_uniq",
            "controller.apps.firmware.migrations.0019_auto__del_unique_buildfile_config_build__add_unique_buildfile_path_bui",
            "controller.apps.firmware.migrations.0020_auto__del_unique_buildfile_path_build",
            "controller.apps.firmware.migrations.0021_auto__add_unique_buildfile_path_build",
            "controller.apps.firmware.migrations.0022_auto__add_field_config_image_name",
            "controller.apps.firmware.migrations.0023_auto__add_field_build_base_image",
            "controller.apps.firmware.migrations.0024_auto__chg_field_configfile_content__chg_field_configuci_value",
            "controller.apps.firmware.migrations.0025_auto__chg_field_build_image",
            "controller.apps.firmware.migrations.0026_auto__chg_field_build_base_image",
            "controller.apps.firmware.migrations.0027_auto__add_field_baseimage_name__chg_field_build_node__del_unique_build",
            "controller.apps.firmware.migrations.0028_auto__add_configplugin__del_field_build_id__chg_field_build_node__add_",
            "controller.apps.firmware.migrations.0029_auto__add_field_build_kwargs",
            "controller.apps.firmware.migrations.0030_auto__add_field_baseimage_default",
            "controller.apps.firmware.migrations.0031_auto__add_nodekeys",
            "controller.apps.firmware.migrations.0032_datamigration__create_nodekeys",
            "controller.apps.firmware.migrations.0033_auto__add_field_nodekeys_allow_node_admins__sync_node_admins",
            "controller.apps.firmware.migrations.0034_datamigration__add__configuci_sync_node_admins",
            "controller.apps.firmware.migrations.0035_datamigration__add_registry_uci",
            "controller.apps.firmware.migrations.0036_datamigration__add_uci_tinc_gateway",
            "controller.apps.firmware.migrations.0037_datamigration__fix_tinc_gateway",
            "controller.apps.firmware.migrations.0039_datamigration__b571_clean_carriage_return",
            "controller.apps.firmware.migrations.0040_datamigration__b620_drop_legacy_fw_config",
            "controller.apps.firmware.models",
            "controller.apps.firmware.permissions",
            "controller.apps.firmware.plugins",
            "controller.apps.firmware.plugins.authkeys",
            "controller.apps.firmware.plugins.password",
            "controller.apps.firmware.plugins.usbimage",
            "controller.apps.firmware.renderers",
            "controller.apps.firmware.serializers",
            "controller.apps.firmware.settings",
            "controller.apps.firmware.tasks",
            "controller.apps.firmware.tests",
            "controller.apps.firmware.validators",
            "controller.apps.firmware.views",
            "controller.apps.gis",
            "controller.apps.gis.admin",
            "controller.apps.gis.api",
            "controller.apps.gis.migrations",
            "controller.apps.gis.migrations.0001_initial",
            "controller.apps.gis.migrations.0002_auto__chg_field_nodegeolocation_node",
            "controller.apps.gis.migrations.0003_node_not_null",
            "controller.apps.gis.migrations.0004_auto__chg_field_nodegeolocation_node",
            "controller.apps.gis.migrations.0005_auto__use_nodegeolocation_node_as_pk",
            "controller.apps.gis.models",
            "controller.apps.gis.permissions",
            "controller.apps.gis.serializers",
            "controller.apps.gis.settings",
            "controller.apps.gis.urls",
            "controller.apps.gis.views",
            "controller.apps.gis.widgets",
            "controller.apps.issues",
            "controller.apps.issues.actions",
            "controller.apps.issues.admin",
            "controller.apps.issues.filters",
            "controller.apps.issues.forms",
            "controller.apps.issues.helpers",
            "controller.apps.issues.migrations",
            "controller.apps.issues.migrations.0001_initial",
            "controller.apps.issues.migrations.0002_auto__del_field_message_visibility__add_field_ticket_visibility",
            "controller.apps.issues.migrations.0003_auto__add_field_ticket_description",
            "controller.apps.issues.migrations.0004_auto__add_tracker__add_unique_tracker_ticket_user",
            "controller.apps.issues.migrations.0005_auto__del_tracker__del_unique_tracker_ticket_user__add_tickettracker__",
            "controller.apps.issues.migrations.0006_auto__add_field_queue_notify_admins__add_field_queue_notify_technician",
            "controller.apps.issues.migrations.0007_auto__chg_field_ticket_queue",
            "controller.apps.issues.migrations.0008_rename_group_roles",
            "controller.apps.issues.migrations.0009_auto__add_field_to_store_author_name__bug289",
            "controller.apps.issues.migrations.0010_datamigration__author_name_bug289",
            "controller.apps.issues.migrations.0011_datamigration__initial_queues",
            "controller.apps.issues.models",
            "controller.apps.issues.permissions",
            "controller.apps.issues.settings",
            "controller.apps.issues.tests",
            "controller.apps.journal",
            "controller.apps.journal.actions",
            "controller.apps.journal.admin",
            "controller.apps.journal.helpers",
            "controller.apps.journal.migrations",
            "controller.apps.journal.migrations.0001_initial",
            "controller.apps.journal.migrations.0002_datamigration__create_logs_existing_slivers",
            "controller.apps.journal.models",
            "controller.apps.journal.urls",
            "controller.apps.journal.views",
            "controller.apps.maintenance",
            "controller.apps.maintenance.actions",
            "controller.apps.maintenance.admin",
            "controller.apps.maintenance.exceptions",
            "controller.apps.maintenance.forms",
            "controller.apps.maintenance.management",
            "controller.apps.maintenance.management.commands",
            "controller.apps.maintenance.management.commands.createmaintenancekey",
            "controller.apps.maintenance.migrations",
            "controller.apps.maintenance.migrations.0001_initial",
            "controller.apps.maintenance.migrations.0002_auto__add_field_instance_task_id",
            "controller.apps.maintenance.migrations.0003_auto__add_field_execution_retry_if_offline",
            "controller.apps.maintenance.models",
            "controller.apps.maintenance.permissions",
            "controller.apps.maintenance.settings",
            "controller.apps.maintenance.tasks",
            "controller.apps.maintenance.templatetags",
            "controller.apps.maintenance.templatetags.list_nodes",
            "controller.apps.mgmtnetworks",
            "controller.apps.mgmtnetworks.admin",
            "controller.apps.mgmtnetworks.api",
            "controller.apps.mgmtnetworks.ifaces",
            "controller.apps.mgmtnetworks.migrations",
            "controller.apps.mgmtnetworks.migrations.0001_initial",
            "controller.apps.mgmtnetworks.migrations.0002_datamigration_create_mgmt_net_for_existing_objects",
            "controller.apps.mgmtnetworks.models",
            "controller.apps.mgmtnetworks.permissions",
            "controller.apps.mgmtnetworks.serializers",
            "controller.apps.mgmtnetworks.utils",
            "controller.apps.mgmtnetworks.validators",
            "controller.apps.monitor",
            "controller.apps.monitor.admin",
            "controller.apps.monitor.management",
            "controller.apps.monitor.management.commands",
            "controller.apps.monitor.management.commands.monitorlocalsystem",
            "controller.apps.monitor.management.commands.setuplocalmonitor",
            "controller.apps.monitor.migrations",
            "controller.apps.monitor.migrations.0001_initial",
            "controller.apps.monitor.models",
            "controller.apps.monitor.monitors",
            "controller.apps.monitor.settings",
            "controller.apps.monitor.utils",
            "controller.apps.nodes",
            "controller.apps.nodes.actions",
            "controller.apps.nodes.admin",
            "controller.apps.nodes.api",
            "controller.apps.nodes.filters",
            "controller.apps.nodes.forms",
            "controller.apps.nodes.helpers",
            "controller.apps.nodes.migrations",
            "controller.apps.nodes.migrations.0001_initial",
            "controller.apps.nodes.migrations.0002_auto__chg_field_node_sliver_mac_prefix",
            "controller.apps.nodes.migrations.0003_auto__del_field_node_pubkey__del_field_node_uuid",
            "controller.apps.nodes.migrations.0004_auto__chg_field_node_sliver_mac_prefix__chg_field_node_cert__chg_field",
            "controller.apps.nodes.migrations.0005_auto__chg_field_node_priv_ipv4_prefix",
            "controller.apps.nodes.migrations.0006_auto__add_field_node_island",
            "controller.apps.nodes.migrations.0007_auto__add_island",
            "controller.apps.nodes.migrations.0008_copy__tinc_island__to__nodes_island",
            "controller.apps.nodes.migrations.0009_auto__chg_field_node_island",
            "controller.apps.nodes.migrations.0010_auto__add_server_properties",
            "controller.apps.nodes.migrations.0011_auto__chg_field_node_island__on_delete",
            "controller.apps.nodes.migrations.0011_node__sliver__pub_ipv4__auto__range",
            "controller.apps.nodes.migrations.0012_auto__add_serverapi__add_nodeapi",
            "controller.apps.nodes.migrations.0013_datamigration__move__node_cert__nodeapi_cert",
            "controller.apps.nodes.migrations.0014_auto__chg_field__serverapi_island__on_delete",
            "controller.apps.nodes.migrations.0015_auto__del_field_node_cert",
            "controller.apps.nodes.migrations.0016_datamigration_main_server",
            "controller.apps.nodes.migrations.0017_auto__add_field_server_name",
            "controller.apps.nodes.migrations.0018_auto__chg_field_serverapi_base_uri__chg_field_nodeapi_base_uri",
            "controller.apps.nodes.migrations.0019_auto__chg_field_api_cert__del_unique",
            "controller.apps.nodes.models",
            "controller.apps.nodes.permissions",
            "controller.apps.nodes.renderers",
            "controller.apps.nodes.serializers",
            "controller.apps.nodes.settings",
            "controller.apps.nodes.tests",
            "controller.apps.nodes.validators",
            "controller.apps.notifications",
            "controller.apps.notifications.actions",
            "controller.apps.notifications.admin",
            "controller.apps.notifications.management",
            "controller.apps.notifications.management.commands",
            "controller.apps.notifications.management.commands.syncnotifications",
            "controller.apps.notifications.migrations",
            "controller.apps.notifications.migrations.0001_initial",
            "controller.apps.notifications.migrations.0002_auto__del_field_notification_message__add_field_notification_subject__",
            "controller.apps.notifications.migrations.0003_auto__del_field_notification_content__add_field_notification_message",
            "controller.apps.notifications.models",
            "controller.apps.notifications.options",
            "controller.apps.notifications.tasks",
            "controller.apps.permissions",
            "controller.apps.permissions.admin",
            "controller.apps.permissions.api",
            "controller.apps.permissions.auth",
            "controller.apps.permissions.options",
            "controller.apps.permissions.templatetags",
            "controller.apps.permissions.templatetags.permissions",
            "controller.apps.permissions.tests",
            "controller.apps.pings",
            "controller.apps.pings.admin",
            "controller.apps.pings.migrations",
            "controller.apps.pings.migrations.0001_initial",
            "controller.apps.pings.migrations.0002_auto__add_index_ping_date",
            "controller.apps.pings.migrations.0003_auto__del_index_ping_date__add_index_ping_date_content_type_object_id",
            "controller.apps.pings.migrations.0004_auto__add_field_ping_samples",
            "controller.apps.pings.migrations.0005_auto__chg_field_ping_date",
            "controller.apps.pings.models",
            "controller.apps.pings.permissions",
            "controller.apps.pings.settings",
            "controller.apps.pings.tasks",
            "controller.apps.pings.templatetags",
            "controller.apps.pings.templatetags.address_colored",
            "controller.apps.pings.tests",
            "controller.apps.pki",
            "controller.apps.pki.management",
            "controller.apps.pki.management.commands",
            "controller.apps.pki.management.commands.setuppki",
            "controller.apps.pki.options",
            "controller.apps.pki.settings",
            "controller.apps.privatefiles",
            "controller.apps.privatefiles.models",
            "controller.apps.privatefiles.models.fields",
            "controller.apps.privatefiles.signals",
            "controller.apps.privatefiles.urls",
            "controller.apps.privatefiles.views",
            "controller.apps.resources",
            "controller.apps.resources.admin",
            "controller.apps.resources.forms",
            "controller.apps.resources.management",
            "controller.apps.resources.management.commands",
            "controller.apps.resources.management.commands.syncresources",
            "controller.apps.resources.migrations",
            "controller.apps.resources.migrations.0001_initial",
            "controller.apps.resources.models",
            "controller.apps.resources.permissions",
            "controller.apps.resources.resources",
            "controller.apps.resources.serializers",
            "controller.apps.resources.settings",
            "controller.apps.sfa",
            "controller.apps.sfa.admin",
            "controller.apps.sfa.models",
            "controller.apps.sfa.permissions",
            "controller.apps.sfa.serializers",
            "controller.apps.sfa.tests",
            "controller.apps.slices",
            "controller.apps.slices.actions",
            "controller.apps.slices.admin",
            "controller.apps.slices.api",
            "controller.apps.slices.exceptions",
            "controller.apps.slices.filters",
            "controller.apps.slices.forms",
            "controller.apps.slices.helpers",
            "controller.apps.slices.ifaces",
            "controller.apps.slices.migrations",
            "controller.apps.slices.migrations.0001_initial",
            "controller.apps.slices.migrations.0002_auto__del_privateiface__chg_field_isolatediface_name__add_unique_isola",
            "controller.apps.slices.migrations.0003_auto__add_privateiface__add_unique_privateiface_sliver_name",
            "controller.apps.slices.migrations.0004_auto__chg_field_slice_uuid",
            "controller.apps.slices.migrations.0005_auto__del_field_template_arch__add_field_template_node_archs__chg_fiel",
            "controller.apps.slices.migrations.0006_auto__del_field_slice_uuid__del_field_slice_pubkey",
            "controller.apps.slices.migrations.0007_auto__add_sliveriface2__add_unique_sliveriface2_sliver_name",
            "controller.apps.slices.migrations.0008_auto__del_isolatediface__del_unique_isolatediface_sliver_name__del_sli",
            "controller.apps.slices.migrations.0009_auto__chg_field_sliver_description",
            "controller.apps.slices.migrations.0010_auto__add_field_sliver_exp_data_uri__add_field_slice_exp_data_uri__add",
            "controller.apps.slices.migrations.0011_auto__add_field_sliver_exp_data_sha256",
            "controller.apps.slices.migrations.0012_auto__add_field_sliver_set_state",
            "controller.apps.slices.migrations.0013_auto__chg_field_sliver_exp_data__chg_field_slice_exp_data",
            "controller.apps.slices.migrations.0014_auto__chg_field_template_node_archs",
            "controller.apps.slices.migrations.0015_auto__chg_field_sliver_set_state",
            "controller.apps.slices.migrations.0016_auto__add_field_sliver_overlay_uri__add_field_sliver_overlay_sha256__a",
            "controller.apps.slices.migrations.0017_auto__add_field_sliver_overlay__add_field_slice_overlay",
            "controller.apps.slices.migrations.0018_auto__add_field_template_image_uri__add_field_template_image_sha256",
            "controller.apps.slices.migrations.0019_auto__add_sliverdefaults",
            "controller.apps.slices.migrations.0020_factor_sliver_defaults_out_of_slice",
            "controller.apps.slices.migrations.0021_auto__del_field_slice_exp_data_uri__del_field_slice_overlay__del_field",
            "controller.apps.slices.migrations.0022_renaming_column_sliver_exp_data",
            "controller.apps.slices.migrations.0023_auto__add_field_slice_allow_isolated__rename_vlan_nr",
            "controller.apps.slices.migrations.0024_datamigration__f200_merge_sliver_data_and_overlay",
            "controller.apps.slices.migrations.0025_auto__feature200_del_field_sliver_overlay",
            "controller.apps.slices.migrations.0026_auto__b623_data_fields_empty_to_null",
            "controller.apps.slices.migrations.0027_datamigration_b623_data_fields_empty_to_null",
            "controller.apps.slices.migrations.0028_auto__b623_data_fields_store_empty_as_null",
            "controller.apps.slices.migrations.0030_auto__chg_field_slice_name_max_length_128",
            "controller.apps.slices.migrations.0031_auto__add__unique_and_index_sliveriface_sliver_nr",
            "controller.apps.slices.models",
            "controller.apps.slices.notifications",
            "controller.apps.slices.permissions",
            "controller.apps.slices.renderers",
            "controller.apps.slices.serializers",
            "controller.apps.slices.settings",
            "controller.apps.slices.tasks",
            "controller.apps.slices.templatetags",
            "controller.apps.slices.templatetags.slices_modify",
            "controller.apps.slices.tests",
            "controller.apps.slices.validators",
            "controller.apps.slices.widgets",
            "controller.apps.state",
            "controller.apps.state.actions",
            "controller.apps.state.admin",
            "controller.apps.state.api",
            "controller.apps.state.filters",
            "controller.apps.state.helpers",
            "controller.apps.state.middlewares",
            "controller.apps.state.migrations",
            "controller.apps.state.migrations.0001_initial",
            "controller.apps.state.migrations.0002_auto__del_field_nodestate_last_succes_on__add_field_nodestate_last_suc",
            "controller.apps.state.migrations.0003_auto__add_sliverstate__del_field_nodestate_last_retry_on__del_field_no",
            "controller.apps.state.migrations.0004_auto__chg_field_nodestate_metadata__chg_field_sliverstate_metadata",
            "controller.apps.state.migrations.0005_auto__add_field_nodestate_last_contact__chg_field_nodestate_last_try_o",
            "controller.apps.state.migrations.0006_auto__del_field_nodestate_last_contact",
            "controller.apps.state.migrations.0007_auto__add_field_nodestate_last_contact_on",
            "controller.apps.state.migrations.0008_auto__add_field_nodestate_version",
            "controller.apps.state.migrations.0009_auto__del_field_nodestate_version__add_field_nodestate_soft_version",
            "controller.apps.state.migrations.0010_auto__del_field_nodestate_id__add_field_nodestate_last_change_on__chg_",
            "controller.apps.state.migrations.0011_auto__add_field_nodestate_add_date__add_field_sliverstate_add_date",
            "controller.apps.state.migrations.0012_auto__del_nodestate__del_sliverstate__add_statehistory__add_state__add",
            "controller.apps.state.migrations.0013_auto__del_field_statehistory_date__add_field_statehistory_start__add_f",
            "controller.apps.state.migrations.0014_auto__chg_field_statehistory_start__chg_field_statehistory_end",
            "controller.apps.state.migrations.0015_auto__add_nodesoftwareversion",
            "controller.apps.state.migrations.0016_auto__add_field_statehistory_data__add_field_statehistory_metadata",
            "controller.apps.state.migrations.0017_auto__add_index_statehistory_start",
            "controller.apps.state.migrations.0018_auto__add_report",
            "controller.apps.state.migrations.0019_auto__del_report",
            "controller.apps.state.migrations.0020_rename__fail_alloc__fail_allocate",
            "controller.apps.state.migrations.0021_auto__add_field_state_ssl_verified",
            "controller.apps.state.models",
            "controller.apps.state.notifications",
            "controller.apps.state.permissions",
            "controller.apps.state.serializers",
            "controller.apps.state.settings",
            "controller.apps.state.tasks",
            "controller.apps.state.tests",
            "controller.apps.state.views",
            "controller.apps.tinc",
            "controller.apps.tinc.admin",
            "controller.apps.tinc.api",
            "controller.apps.tinc.filters",
            "controller.apps.tinc.forms",
            "controller.apps.tinc.helpers",
            "controller.apps.tinc.management",
            "controller.apps.tinc.management.commands",
            "controller.apps.tinc.management.commands.setuptincd",
            "controller.apps.tinc.management.commands.updatetincd",
            "controller.apps.tinc.migrations",
            "controller.apps.tinc.migrations.0001_initial",
            "controller.apps.tinc.migrations.0002_auto__chg_field_tincclient_object_id__chg_field_tincserver_object_id",
            "controller.apps.tinc.migrations.0003_auto__chg_field_tincclient_pubkey__chg_field_tincserver_pubkey",
            "controller.apps.tinc.migrations.0004_auto__del_field_host_admin__add_field_host_owner",
            "controller.apps.tinc.migrations.0005_auto__del_field_tincaddress_ip_addr__add_field_tincaddress_addr",
            "controller.apps.tinc.migrations.0006_auto__chg_field_tincclient_island__chg_field_tincaddress_island__add_f",
            "controller.apps.tinc.migrations.0007_auto",
            "controller.apps.tinc.migrations.0008_auto__chg_field_tincclient_pubkey__chg_field_tincserver_pubkey",
            "controller.apps.tinc.migrations.0009_auto__add_field_host_island",
            "controller.apps.tinc.migrations.0010_datamigration_move_island_bug264",
            "controller.apps.tinc.migrations.0011_auto__del_field_tincclient_island",
            "controller.apps.tinc.migrations.0012_auto__chg_field_tincaddress_island__chg_field_host_island",
            "controller.apps.tinc.migrations.0013_auto__del_island",
            "controller.apps.tinc.migrations.0014_auto__del_field_tincserver_is_active",
            "controller.apps.tinc.migrations.0015_auto__add_tinchost__add_unique_tinchost_content_type_object_id__add_fi",
            "controller.apps.tinc.migrations.0016_join__tincclient__tincserver__into__tinchost",
            "controller.apps.tinc.migrations.0017_auto__del_tincclient__del_unique_tincclient_content_type_object_id__de",
            "controller.apps.tinc.migrations.0020_auto__chg_field_host_description",
            "controller.apps.tinc.migrations.0021_datamigration_backwards_generate_tinc_description",
            "controller.apps.tinc.migrations.0022_auto__chg_field_host_island__tincaddress_island__on_delete",
            "controller.apps.tinc.migrations.0023_auto__add_field_tinchost_name",
            "controller.apps.tinc.migrations.0024_datamigration_generate_tinchost_name",
            "controller.apps.tinc.migrations.0025_auto__chg_field_tinchost_name",
            "controller.apps.tinc.migrations.0026_datamigration__dumpdata_gateways",
            "controller.apps.tinc.migrations.0027_auto__del_gateway",
            "controller.apps.tinc.migrations.0028_auto__add_field_host_name",
            "controller.apps.tinc.migrations.0029_datamigration_generate_host_name_f510",
            "controller.apps.tinc.migrations.0030_auto__chg_field_host_name__add_unique_host_name",
            "controller.apps.tinc.migrations.0031_auto__add_field_tinchost_default_connect_to",
            "controller.apps.tinc.migrations.0032_datamigration__tinc_default_gateway",
            "controller.apps.tinc.models",
            "controller.apps.tinc.permissions",
            "controller.apps.tinc.renderers",
            "controller.apps.tinc.serializers",
            "controller.apps.tinc.settings",
            "controller.apps.tinc.tasks",
            "controller.apps.tinc.tests",
            "controller.apps.users",
            "controller.apps.users.actions",
            "controller.apps.users.admin",
            "controller.apps.users.api",
            "controller.apps.users.auth",
            "controller.apps.users.filters",
            "controller.apps.users.forms",
            "controller.apps.users.helpers",
            "controller.apps.users.migrations",
            "controller.apps.users.migrations.0001_initial",
            "controller.apps.users.migrations.0002_auto__add_joinrequest__add_unique_joinrequest_user_group",
            "controller.apps.users.migrations.0003_auto__add_field_group_is_approved",
            "controller.apps.users.migrations.0003_auto__del_field_group_uuid__del_field_group_pubkey__del_field_user_uui",
            "controller.apps.users.migrations.0004_auto__add_resourcerequest__add_field_group_is_approved",
            "controller.apps.users.migrations.0005_auto__del_field_group_is_approved",
            "controller.apps.users.migrations.0006_auto__add_index_user_username",
            "controller.apps.users.migrations.0007_auto__add_field_user_name",
            "controller.apps.users.migrations.0008_join_firstname_lastname_into_name",
            "controller.apps.users.migrations.0009_auto__del_field_user_last_name__del_field_user_first_name__add_unique_",
            "controller.apps.users.migrations.0010_auto__chg_field_user_username__chg_field_user_name",
            "controller.apps.users.migrations.0011_optional_username",
            "controller.apps.users.migrations.0012_rename_group_roles",
            "controller.apps.users.models",
            "controller.apps.users.permissions",
            "controller.apps.users.registration",
            "controller.apps.users.registration.admin",
            "controller.apps.users.registration.forms",
            "controller.apps.users.registration.models",
            "controller.apps.users.registration.urls",
            "controller.apps.users.registration.utils",
            "controller.apps.users.registration.views",
            "controller.apps.users.renderers",
            "controller.apps.users.serializers",
            "controller.apps.users.tasks",
            "controller.apps.users.templatetags",
            "controller.apps.users.templatetags.groups",
            "controller.apps.users.templatetags.users_registration",
            "controller.apps.users.tests",
            "controller.conf",
            "controller.conf.base_settings",
            "controller.conf.devel_settings",
            "controller.conf.production_settings",
            "controller.core",
            "controller.core.context_processors",
            "controller.core.exceptions",
            "controller.core.middlewares",
            "controller.core.serializers",
            "controller.core.storage",
            "controller.core.validators",
            "controller.dashboard",
            "controller.forms",
            "controller.forms.fields",
            "controller.forms.models",
            "controller.forms.options",
            "controller.forms.utils",
            "controller.forms.widgets",
            "controller.management",
            "controller.management.commands",
            "controller.management.commands.controllerversion",
            "controller.management.commands.getuserbysessionid",
            "controller.management.commands.postupgradecontroller",
            "controller.management.commands.restartservices",
            "controller.management.commands.setupapache",
            "controller.management.commands.setupceleryd",
            "controller.management.commands.setupnginx",
            "controller.management.commands.setuppostgres",
            "controller.management.commands.startservices",
            "controller.management.commands.staticcheck",
            "controller.management.commands.stopservices",
            "controller.management.commands.updatesecretkey",
            "controller.management.commands.upgradecontroller",
            "controller.menu",
            "controller.migrations",
            "controller.migrations.0001_initial",
            "controller.migrations.0002_datamigration__initial_data",
            "controller.models",
            "controller.models.fields",
            "controller.models.utils",
            "controller.modules",
            "controller.renderers",
            "controller.serializers",
            "controller.settings",
            "controller.tasks",
            "controller.templatetags",
            "controller.templatetags.absurl",
            "controller.templatetags.code",
            "controller.templatetags.markdown",
            "controller.templatetags.utils",
            "controller.tests",
            "controller.urls",
            "controller.utils",
            "controller.utils.apps",
            "controller.utils.auth",
            "controller.utils.functional",
            "controller.utils.html",
            "controller.utils.ip",
            "controller.utils.options",
            "controller.utils.paths",
            "controller.utils.plugins",
            "controller.utils.plugins.actions",
            "controller.utils.plugins.models",
            "controller.utils.singletons",
            "controller.utils.singletons.admin",
            "controller.utils.singletons.models",
            "controller.utils.ssl",
            "controller.utils.system",
            "controller.utils.time"
        ],
        "version": "1.0.2"
    },
    "confine-orm": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "confined": {
        "cmdline": [],
        "modules": [
            "confined",
            "confined.check_arg",
            "confined.test_check_arg",
            "confined.test_valid"
        ],
        "version": "0.1.10"
    },
    "confing": {
        "cmdline": [],
        "modules": [
            "confing",
            "confing.confing",
            "confing.data"
        ],
        "version": "0.1.4"
    },
    "confipy": {
        "cmdline": [],
        "modules": [
            "confipy",
            "confipy.converter",
            "confipy.notation",
            "confipy.parser",
            "confipy.reader"
        ],
        "version": "0.0.2"
    },
    "confire": {
        "cmdline": [],
        "modules": [
            "confire",
            "confire.config",
            "confire.example",
            "confire.exceptions"
        ],
        "version": "0.2.0"
    },
    "confirm": {
        "cmdline": [],
        "modules": [
            "confirm",
            "confirm.generator",
            "confirm.main",
            "confirm.utils",
            "confirm.validator"
        ],
        "version": "0.1.3"
    },
    "confiskus": {
        "cmdline": [],
        "modules": [
            "confiskus"
        ],
        "version": "1.0.6"
    },
    "confit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "confiture": {
        "cmdline": [],
        "modules": [
            "confiture",
            "confiture.parser",
            "confiture.schema",
            "confiture.schema.containers",
            "confiture.schema.types",
            "confiture.tests",
            "confiture.tests.test_parser",
            "confiture.tree"
        ],
        "version": "2.1"
    },
    "confix": {
        "cmdline": [],
        "modules": [
            "confix"
        ],
        "version": "0.2.1"
    },
    "conflate": {
        "cmdline": [],
        "modules": [
            "conflate"
        ],
        "version": "0.5.2"
    },
    "conflib": {
        "cmdline": [],
        "modules": [
            "conflib",
            "conflib.conflib"
        ],
        "version": "1.0.0"
    },
    "conflictsoptionparser": {
        "cmdline": [],
        "modules": [
            "conflictsparse",
            "conflictsparse.conflictsparse",
            "conflictsparse.tests",
            "conflictsparse.tests.test_conflictsparse"
        ],
        "version": "0.1.1"
    },
    "confloader": {
        "cmdline": [],
        "modules": [
            "confloader"
        ],
        "version": "1.1"
    },
    "confluence": {
        "cmdline": [],
        "modules": [
            "confluence",
            "confluence.confluence",
            "confluence.version"
        ],
        "version": "0.1"
    },
    "confluence-publisher": {
        "cmdline": [],
        "modules": [
            "conf_publisher",
            "conf_publisher.config",
            "conf_publisher.confluence",
            "conf_publisher.confluence_api",
            "conf_publisher.constants",
            "conf_publisher.data_providers",
            "conf_publisher.data_providers.sphinx_base_data_provider",
            "conf_publisher.data_providers.sphinx_fjson_data_provider",
            "conf_publisher.data_providers.sphinx_html_data_provider",
            "conf_publisher.errors",
            "conf_publisher.mutators",
            "conf_publisher.mutators.page_mutator",
            "conf_publisher.page_dumper",
            "conf_publisher.page_maker",
            "conf_publisher.publish",
            "conf_publisher.serializers",
            "conf_publisher.serializers.json_serializer",
            "conf_publisher.serializers.yaml_serializer"
        ],
        "version": "1.2.1"
    },
    "confluence-publisher-ex": {
        "cmdline": [],
        "modules": [
            "conf_publisher",
            "conf_publisher.auth",
            "conf_publisher.config",
            "conf_publisher.confluence",
            "conf_publisher.confluence_api",
            "conf_publisher.constants",
            "conf_publisher.data_providers",
            "conf_publisher.data_providers.sphinx_base_data_provider",
            "conf_publisher.data_providers.sphinx_fjson_data_provider",
            "conf_publisher.data_providers.sphinx_html_data_provider",
            "conf_publisher.errors",
            "conf_publisher.mutators",
            "conf_publisher.mutators.page_mutator",
            "conf_publisher.page_dumper",
            "conf_publisher.page_maker",
            "conf_publisher.publish",
            "conf_publisher.serializers",
            "conf_publisher.serializers.json_serializer",
            "conf_publisher.serializers.yaml_serializer"
        ],
        "version": "1.0.0"
    },
    "confluence-py": {
        "cmdline": [
            "confluence-cli"
        ],
        "modules": [
            "confluence",
            "confluence.api",
            "confluence.auth",
            "confluence.group",
            "confluence.page",
            "confluence.space",
            "confluence.user"
        ],
        "version": "1.0.1"
    },
    "confluence-python-cli": {
        "cmdline": [
            "confluence.py"
        ],
        "modules": [],
        "version": "0.1.0"
    },
    "confluence-rest": {
        "cmdline": [
            "confluence.py"
        ],
        "modules": [],
        "version": "0.1.0"
    },
    "confluencer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "confluent-client": {
        "cmdline": [
            "confetty"
        ],
        "modules": [
            "confluent",
            "confluent.client",
            "confluent.termhandler"
        ],
        "version": "1.0"
    },
    "confluent-common": {
        "cmdline": [],
        "modules": [
            "confluent",
            "confluent.tlv",
            "confluent.tlvdata"
        ],
        "version": "1.0"
    },
    "confluent-kafka": {
        "cmdline": [],
        "modules": [
            "confluent_kafka",
            "confluent_kafka.avro",
            "confluent_kafka.avro.cached_schema_registry_client",
            "confluent_kafka.avro.serializer",
            "confluent_kafka.avro.serializer.message_serializer",
            "confluent_kafka.kafkatest",
            "confluent_kafka.kafkatest.verifiable_client",
            "confluent_kafka.kafkatest.verifiable_consumer",
            "confluent_kafka.kafkatest.verifiable_producer"
        ],
        "version": "0.9.4"
    },
    "confluent-kafka-smyte": {
        "cmdline": [],
        "modules": [
            "confluent_kafka_smyte",
            "confluent_kafka_smyte.kafkatest",
            "confluent_kafka_smyte.kafkatest.verifiable_client",
            "confluent_kafka_smyte.kafkatest.verifiable_consumer",
            "confluent_kafka_smyte.kafkatest.verifiable_producer"
        ],
        "version": "0.9.3"
    },
    "confluent-schema-registry-client": {
        "cmdline": [],
        "modules": [
            "confluent_schema_registry_client"
        ],
        "version": "1.1.0"
    },
    "confluent-server": {
        "cmdline": [
            "confluent"
        ],
        "modules": [
            "confluent",
            "confluent.auth",
            "confluent.consoleserver",
            "confluent.core",
            "confluent.exceptions",
            "confluent.httpapi",
            "confluent.log",
            "confluent.main",
            "confluent.messages",
            "confluent.noderange",
            "confluent.shellmodule",
            "confluent.sockapi",
            "confluent.util",
            "confluent/config",
            "confluent/config.attributes",
            "confluent/config.configmanager",
            "confluent/interface",
            "confluent/interface.console",
            "confluent/plugins/configuration/",
            "confluent/plugins/configuration/.attributes",
            "confluent/plugins/hardwaremanagement/",
            "confluent/plugins/hardwaremanagement/.ipmi"
        ],
        "version": "1.0"
    },
    "confluo": {
        "cmdline": [],
        "modules": [
            "confluo",
            "confluo.core",
            "confluo.errors",
            "confluo.helpers",
            "confluo.models"
        ],
        "version": "0.0.3"
    },
    "confman": {
        "cmdline": [],
        "modules": [
            "confman"
        ],
        "version": "0.2.0"
    },
    "confmanager": {
        "cmdline": [],
        "modules": [
            "confmanager",
            "confmanager.confframe",
            "confmanager.errors",
            "confmanager.parser"
        ],
        "version": "2.9"
    },
    "confmgr": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "confmodel": {
        "cmdline": [],
        "modules": [
            "confmodel",
            "confmodel._version",
            "confmodel.config",
            "confmodel.errors",
            "confmodel.fallbacks",
            "confmodel.fields",
            "confmodel.interfaces",
            "confmodel.tests",
            "confmodel.tests.test_config",
            "confmodel.tests.test_fallbacks",
            "confmodel.tests.test_fields"
        ],
        "version": "0.2.0"
    },
    "confocalpy": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0.5"
    },
    "confopy": {
        "cmdline": [
            "confopy"
        ],
        "modules": [
            "confopy",
            "confopy.analysis",
            "confopy.analysis.analyzer",
            "confopy.analysis.corpus",
            "confopy.analysis.localizable",
            "confopy.analysis.metric",
            "confopy.analysis.report",
            "confopy.analysis.rule",
            "confopy.analysis.spellcheck",
            "confopy.analysis.statistics",
            "confopy.config",
            "confopy.localization",
            "confopy.localization.de",
            "confopy.localization.de.corpus",
            "confopy.localization.de.corpus_de",
            "confopy.localization.de.corpus_de.fillers_de",
            "confopy.localization.de.corpus_de.tiger",
            "confopy.localization.de.corpus_de.tiger_dl_patch",
            "confopy.localization.de.corpus_de.tiger_release_aug07.corrected.16012013_patch",
            "confopy.localization.de.metrics",
            "confopy.localization.de.reports",
            "confopy.localization.de.rules",
            "confopy.model",
            "confopy.model.document",
            "confopy.model.document_converter",
            "confopy.model.lines",
            "confopy.model.validate",
            "confopy.pdfextract",
            "confopy.pdfextract._pdf2txt",
            "confopy.pdfextract.convenience",
            "confopy.pdfextract.heuristics",
            "confopy.pdfextract.pdfminer_wrapper",
            "confopy.pdfextract.pdfminer_xml_bindings",
            "confopy.pdfextract.xml_util"
        ],
        "version": "0.4.11"
    },
    "confopy-webapp": {
        "cmdline": [],
        "modules": [
            "confopyapp",
            "confopyapp.app"
        ],
        "version": "0.1.6.3"
    },
    "conformal": {
        "cmdline": [],
        "modules": [
            "conformal",
            "conformal.measures"
        ],
        "version": "0.1"
    },
    "conformity": {
        "cmdline": [],
        "modules": [
            "conformity",
            "conformity.error",
            "conformity.fields",
            "conformity.fields.basic",
            "conformity.fields.geo",
            "conformity.fields.meta",
            "conformity.fields.net",
            "conformity.fields.structures",
            "conformity.fields.temporal",
            "conformity.tests",
            "conformity.tests.test_fields",
            "conformity.tests.test_fields_geo",
            "conformity.tests.test_fields_meta",
            "conformity.tests.test_fields_net",
            "conformity.tests.test_validator",
            "conformity.utils",
            "conformity.validator"
        ],
        "version": "1.5.0"
    },
    "confparse": {
        "cmdline": [],
        "modules": [
            "confparse"
        ],
        "version": "1.0a1"
    },
    "confpluspy": {
        "cmdline": [],
        "modules": [
            "confpluspy"
        ],
        "version": "1.0"
    },
    "confpy": {
        "cmdline": [],
        "modules": [
            "confpy",
            "confpy.api",
            "confpy.cmd",
            "confpy.core",
            "confpy.core.compat",
            "confpy.core.config",
            "confpy.core.namespace",
            "confpy.core.option",
            "confpy.example",
            "confpy.exc",
            "confpy.loaders",
            "confpy.loaders.base",
            "confpy.loaders.ini",
            "confpy.loaders.json",
            "confpy.loaders.pyfile",
            "confpy.options",
            "confpy.options.boolopt",
            "confpy.options.listopt",
            "confpy.options.numopt",
            "confpy.options.stropt",
            "confpy.parser"
        ],
        "version": "0.10.0"
    },
    "confsave": {
        "cmdline": [],
        "modules": [
            "confsave",
            "confsave.app",
            "confsave.cmd",
            "confsave.commands",
            "confsave.models",
            "confsave.repo",
            "confsave.tests",
            "confsave.tests.test_app",
            "confsave.tests.test_cmd",
            "confsave.tests.test_commands",
            "confsave.tests.test_models",
            "confsave.tests.test_repo"
        ],
        "version": "0.1"
    },
    "confset": {
        "cmdline": [
            "confset"
        ],
        "modules": [
            "confset",
            "confset.confset",
            "confset.debug",
            "confset.metadata"
        ],
        "version": "0.0.58"
    },
    "confspec": {
        "cmdline": [],
        "modules": [
            "confspec",
            "confspec.manager",
            "confspec.options",
            "confspec.providers",
            "confspec.providers.dict",
            "confspec.providers.ini",
            "confspec.providers.json",
            "confspec.utils",
            "confspec.validation"
        ],
        "version": "1.4"
    },
    "confstruct": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.0"
    },
    "conftools": {
        "cmdline": [],
        "modules": [
            "conf_tools",
            "conf_tools.checks",
            "conf_tools.code_desc",
            "conf_tools.code_specs",
            "conf_tools.exceptions",
            "conf_tools.global_config",
            "conf_tools.instantiate_utils",
            "conf_tools.load_entries",
            "conf_tools.master",
            "conf_tools.objspec",
            "conf_tools.patterns",
            "conf_tools.special_subst",
            "conf_tools.unittests",
            "conf_tools.unittests.groups",
            "conf_tools.unittests.groups.groups_test",
            "conf_tools.unittests.instantiate_tests",
            "conf_tools.unittests.instantiate_tests.static_test",
            "conf_tools.unittests.pickling_test",
            "conf_tools.unittests.templating",
            "conf_tools.unittests.templating.other_tests",
            "conf_tools.unittests.templating.simple_use_tests",
            "conf_tools.unittests.utils",
            "conf_tools.unittests.wildcards_test",
            "conf_tools.utils",
            "conf_tools.utils.col_logging",
            "conf_tools.utils.expansion",
            "conf_tools.utils.friendly_paths",
            "conf_tools.utils.indent_string",
            "conf_tools.utils.locate_files_imp",
            "conf_tools.utils.not_found",
            "conf_tools.utils.pickling",
            "conf_tools.utils.resources",
            "conf_tools.utils.term_color",
            "conf_tools.utils.terminal_size",
            "conf_tools.utils.wildcards",
            "conf_tools.valid"
        ],
        "version": "1.9.1"
    },
    "confu": {
        "cmdline": [],
        "modules": [
            "confu"
        ],
        "version": "0.0.3"
    },
    "confumatrix": {
        "cmdline": [
            "binary_classification.py"
        ],
        "modules": [
            "confumatrix",
            "confumatrix.confumatrix"
        ],
        "version": "0.1"
    },
    "confusable-homoglyphs": {
        "cmdline": [],
        "modules": [
            "confusable_homoglyphs",
            "confusable_homoglyphs._version",
            "confusable_homoglyphs.categories",
            "confusable_homoglyphs.confusables",
            "confusable_homoglyphs.utils"
        ],
        "version": "2.0.2"
    },
    "confusables": {
        "cmdline": [],
        "modules": [
            "confusables"
        ],
        "version": "0.5.800"
    },
    "confuse": {
        "cmdline": [],
        "modules": [
            "confuse"
        ],
        "version": "0.4.0"
    },
    "confutil": {
        "cmdline": [],
        "modules": [
            "confutil",
            "confutil.config"
        ],
        "version": "0.1.2"
    },
    "confutils": {
        "cmdline": [],
        "modules": [
            "confutils",
            "confutils.compat",
            "confutils.configfile",
            "confutils.configreader",
            "confutils.helpers",
            "confutils.merged_config"
        ],
        "version": "0.3.7"
    },
    "confuzzle": {
        "cmdline": [],
        "modules": [
            "confuzzle"
        ],
        "version": "0.2.0"
    },
    "confvalidator": {
        "cmdline": [],
        "modules": [
            "ConfValidator"
        ],
        "version": "1.3"
    },
    "confy": {
        "cmdline": [],
        "modules": [
            "confy",
            "confy.api",
            "confy.collection",
            "confy.compat",
            "confy.dictquery",
            "confy.packages",
            "confy.packages.importlib",
            "confy.packages.six",
            "confy.properties",
            "confy.sources",
            "confy.utils"
        ],
        "version": "0.3.8"
    },
    "confyg": {
        "cmdline": [],
        "modules": [
            "confyg",
            "confyg.transformations"
        ],
        "version": "0.2.0.0"
    },
    "confyio": {
        "cmdline": [],
        "modules": [
            "confy",
            "confy.api",
            "confy.api.access",
            "confy.api.config",
            "confy.api.envs",
            "confy.api.members",
            "confy.api.orgs",
            "confy.api.projects",
            "confy.api.teams",
            "confy.api.user",
            "confy.client",
            "confy.error",
            "confy.error.client_error",
            "confy.http_client",
            "confy.http_client.auth_handler",
            "confy.http_client.error_handler",
            "confy.http_client.request_handler",
            "confy.http_client.response",
            "confy.http_client.response_handler"
        ],
        "version": "2.1.0"
    },
    "confypy": {
        "cmdline": [],
        "modules": [
            "confypy",
            "confypy.compat",
            "confypy.confypy",
            "confypy.exceptions",
            "confypy.loaders",
            "confypy.parsers"
        ],
        "version": "0.2.5"
    },
    "congler": {
        "cmdline": [],
        "modules": [
            "congler"
        ],
        "version": "0.5.0"
    },
    "congo": {
        "cmdline": [],
        "modules": [
            "devtest",
            "devtest.application",
            "devtest.application.config",
            "devtest.application.model",
            "devtest.application.test",
            "devtest.application.www",
            "devtest.application.www.views",
            "devtest.manage",
            "devtest.run_boom",
            "devtest.run_hello",
            "devtest.run_toto",
            "devtest.run_www",
            "portfolio",
            "portfolio.app-skel",
            "portfolio.app-skel.admin",
            "portfolio.app-skel.admin.views",
            "portfolio.app-skel.config",
            "portfolio.app-skel.default",
            "portfolio.app-skel.default.views",
            "portfolio.app-skel.init",
            "portfolio.app-skel.manage",
            "portfolio.app-skel.model",
            "portfolio.app-skel.run",
            "portfolio.cmd",
            "portfolio.component",
            "portfolio.component.cms_post",
            "portfolio.component.contact_page",
            "portfolio.component.error_page",
            "portfolio.component.maintenance_page",
            "portfolio.component.user_account",
            "portfolio.component.views",
            "portfolio.component.views.error_page",
            "portfolio.component.views.maintenance_page",
            "portfolio.component.views.post_admin",
            "portfolio.component.views.post_reader",
            "portfolio.ext",
            "portfolio.ext.mailer",
            "portfolio.ext.session",
            "portfolio.pkginfo",
            "portfolio.utils",
            "tests",
            "tests.test_portfolio",
            "tests.test_utils"
        ],
        "version": "0.0.1"
    },
    "congredi": {
        "cmdline": [],
        "modules": [
            "congredi",
            "congredi.algos",
            "congredi.algos.censor",
            "congredi.algos.diff",
            "congredi.algos.router",
            "congredi.algos.test",
            "congredi.algos.test.test_censor",
            "congredi.algos.test.test_diff",
            "congredi.algos.test.test_router",
            "congredi.algos.vote",
            "congredi.algos.vote.stv",
            "congredi.algos.vote.test",
            "congredi.algos.vote.test.test_stv",
            "congredi.algos.vote.vote",
            "congredi.auth",
            "congredi.auth.test",
            "congredi.auth.test.test_token",
            "congredi.auth.token",
            "congredi.command",
            "congredi.crypto",
            "congredi.crypto.AES",
            "congredi.crypto.RSA",
            "congredi.crypto.hash",
            "congredi.crypto.kdf",
            "congredi.crypto.padding",
            "congredi.crypto.rnd",
            "congredi.crypto.test",
            "congredi.crypto.test.test_AES",
            "congredi.crypto.test.test_RSA",
            "congredi.crypto.test.test_hash",
            "congredi.crypto.test.test_kdf",
            "congredi.crypto.test.test_padding",
            "congredi.crypto.test.test_threshold",
            "congredi.crypto.threshold",
            "congredi.extra",
            "congredi.extra.daemon",
            "congredi.extra.test",
            "congredi.extra.test.test_daemon",
            "congredi.extra.test.test_tor",
            "congredi.extra.tor",
            "congredi.factory",
            "congredi.garbageCollect",
            "congredi.peerBeat",
            "congredi.protocol",
            "congredi.storage",
            "congredi.storage.gfm",
            "congredi.storage.interface",
            "congredi.storage.neo4j",
            "congredi.storage.redis",
            "congredi.storage.test",
            "congredi.storage.test.test_gfm",
            "congredi.storage.test.test_neo4j",
            "congredi.storage.test.test_redis",
            "congredi.storage.test.test_zlib",
            "congredi.storage.zlibs",
            "congredi.term",
            "congredi.term.client",
            "congredi.term.coord",
            "congredi.term.http",
            "congredi.term.run",
            "congredi.term.test",
            "congredi.term.test.test_client",
            "congredi.term.test.test_coord",
            "congredi.term.test.test_run",
            "congredi.tests",
            "congredi.tests.random",
            "congredi.tests.sources",
            "congredi.tests.test_command",
            "congredi.tests.test_factory",
            "congredi.tests.test_garbageCollect",
            "congredi.tests.test_general",
            "congredi.tests.test_peerBeat",
            "congredi.tests.test_protocol",
            "congredi.utils",
            "congredi.utils.config",
            "congredi.utils.iter",
            "congredi.utils.logger",
            "congredi.utils.options",
            "congredi.utils.test",
            "congredi.utils.test.test_config",
            "congredi.utils.test.test_logger",
            "congredi.utils.test.test_options",
            "congredi.utils.test.test_whoops",
            "congredi.utils.whoops"
        ],
        "version": "0.0.2b0"
    },
    "congress": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "congresso": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "conguide": {
        "cmdline": [],
        "modules": [
            "conguide",
            "conguide.arisia-csv",
            "conguide.backup",
            "conguide.bios",
            "conguide.changes",
            "conguide.config",
            "conguide.conguide",
            "conguide.count",
            "conguide.dup",
            "conguide.featured",
            "conguide.grid",
            "conguide.guidebook",
            "conguide.openclose",
            "conguide.outoforder",
            "conguide.output",
            "conguide.overnight",
            "conguide.participant",
            "conguide.problems",
            "conguide.room",
            "conguide.sasquan-xml",
            "conguide.schedule",
            "conguide.session",
            "conguide.times",
            "conguide.tracks",
            "conguide.xref"
        ],
        "version": "0.9.6"
    },
    "conifertools": {
        "cmdline": [],
        "modules": [
            "conifertools",
            "conifertools.call.mpi",
            "conifertools.conifertools",
            "conifertools.hcluster",
            "conifertools.mpi_submit",
            "conifertools.mpi_wrapper",
            "conifertools.plotting",
            "conifertools.rpkm"
        ],
        "version": "0.1"
    },
    "conj": {
        "cmdline": [
            "__init__.py"
        ],
        "modules": [
            "conj"
        ],
        "version": "1.4.2"
    },
    "conjur": {
        "cmdline": [],
        "modules": [
            "conjur",
            "conjur.api",
            "conjur.config",
            "conjur.exceptions",
            "conjur.group",
            "conjur.host",
            "conjur.layer",
            "conjur.membership",
            "conjur.resource",
            "conjur.role",
            "conjur.user",
            "conjur.util",
            "conjur.variable",
            "tests",
            "tests.api_test",
            "tests.conftest",
            "tests.conjur_test",
            "tests.group_test",
            "tests.pubkeys_test",
            "tests.resource_test",
            "tests.role_test",
            "tests.user_test",
            "tests.variable_test"
        ],
        "version": "0.4.4"
    },
    "conkit": {
        "cmdline": [
            "conkit-convert",
            "conkit-msatool",
            "conkit-plot",
            "conkit-precision",
            "conkit-predict"
        ],
        "modules": [
            "conkit",
            "conkit._version",
            "conkit/applications",
            "conkit/applications.Bbcontacts",
            "conkit/applications.CCMpred",
            "conkit/applications.Cdhit",
            "conkit/applications.HHblits",
            "conkit/applications.HHfilter",
            "conkit/applications.Jackhmmer",
            "conkit/applications.Psicov",
            "conkit/command_line",
            "conkit/command_line.conkit_convert",
            "conkit/command_line.conkit_msatool",
            "conkit/command_line.conkit_plot",
            "conkit/command_line.conkit_precision",
            "conkit/command_line.conkit_predict",
            "conkit/core",
            "conkit/io",
            "conkit/io.A3mIO",
            "conkit/io.BCLContactIO",
            "conkit/io.BbcontactsIO",
            "conkit/io.CCMpredIO",
            "conkit/io.CaspIO",
            "conkit/io.ComsatIO",
            "conkit/io.EPCMapIO",
            "conkit/io.EVfoldIO",
            "conkit/io.FastaIO",
            "conkit/io.FreeContactIO",
            "conkit/io.GremlinIO",
            "conkit/io.JonesIO",
            "conkit/io.MemBrainIO",
            "conkit/io.PconsIO",
            "conkit/io.PdbIO",
            "conkit/io.PlmDCAIO",
            "conkit/io.PsicovIO",
            "conkit/io.StockholmIO",
            "conkit/io._ParserIO",
            "conkit/io._iotools",
            "conkit/plot",
            "conkit/plot.ContactDensityPlot",
            "conkit/plot.ContactMapChordPlot",
            "conkit/plot.ContactMapPlot",
            "conkit/plot.PrecisionEvaluationPlot",
            "conkit/plot.SequenceCoveragePlot",
            "conkit/plot._Figure",
            "conkit/plot._plottools"
        ],
        "version": "0.7"
    },
    "conkyforecast": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "conkyutil": {
        "cmdline": [],
        "modules": [
            "conkyutil",
            "conkyutil.writer"
        ],
        "version": "0.2.1"
    },
    "conll-df": {
        "cmdline": [],
        "modules": [
            "conll_df",
            "conll_df.conll_df"
        ],
        "version": "0.0.3"
    },
    "conllu": {
        "cmdline": [],
        "modules": [
            "conllu",
            "conllu.parser",
            "conllu.tree_helpers"
        ],
        "version": "0.3"
    },
    "conman": {
        "cmdline": [
            "conman"
        ],
        "modules": [
            "libconman",
            "libconman.configuration",
            "libconman.database",
            "libconman.target",
            "libconman.vault"
        ],
        "version": "1.0.0b1"
    },
    "conmongo": {
        "cmdline": [],
        "modules": [
            "conmongo",
            "conmongo.app",
            "conmongo.json",
            "conmongo.views"
        ],
        "version": "0.0.2"
    },
    "conn-check": {
        "cmdline": [],
        "modules": [
            "conn_check",
            "conn_check.check_impl",
            "conn_check.checks",
            "conn_check.main",
            "conn_check.patterns",
            "conn_check.utils",
            "conn_check.utils.convert_fw_rules",
            "conn_check.utils.firewall_rules"
        ],
        "version": "1.3.1"
    },
    "conn-check-configs": {
        "cmdline": [],
        "modules": [
            "conn_check_configs",
            "conn_check_configs.django"
        ],
        "version": "1.0.11"
    },
    "connect": {
        "cmdline": [],
        "modules": [
            "connect"
        ],
        "version": "0.1"
    },
    "connect-client": {
        "cmdline": [],
        "modules": [
            "connect",
            "connect.api",
            "connect.client",
            "connect.event",
            "connect.exceptions",
            "connect.responses",
            "connect.security"
        ],
        "version": "0.1.1"
    },
    "connect-sdk-python2": {
        "cmdline": [],
        "modules": [
            "ingenico",
            "ingenico.connect",
            "ingenico.connect.sdk",
            "ingenico.connect.sdk.api_exception",
            "ingenico.connect.sdk.api_resource",
            "ingenico.connect.sdk.authenticator",
            "ingenico.connect.sdk.authorization_exception",
            "ingenico.connect.sdk.call_context",
            "ingenico.connect.sdk.client",
            "ingenico.connect.sdk.communication_exception",
            "ingenico.connect.sdk.communicator",
            "ingenico.connect.sdk.communicator_configuration",
            "ingenico.connect.sdk.connection",
            "ingenico.connect.sdk.data_object",
            "ingenico.connect.sdk.declined_payment_exception",
            "ingenico.connect.sdk.declined_payout_exception",
            "ingenico.connect.sdk.declined_refund_exception",
            "ingenico.connect.sdk.declined_transaction_exception",
            "ingenico.connect.sdk.defaultimpl",
            "ingenico.connect.sdk.defaultimpl.authorization_type",
            "ingenico.connect.sdk.defaultimpl.default_authenticator",
            "ingenico.connect.sdk.defaultimpl.default_connection",
            "ingenico.connect.sdk.defaultimpl.default_marshaller",
            "ingenico.connect.sdk.domain",
            "ingenico.connect.sdk.domain.definitions",
            "ingenico.connect.sdk.domain.definitions.abstract_order_status",
            "ingenico.connect.sdk.domain.definitions.abstract_payment_method_specific_input",
            "ingenico.connect.sdk.domain.definitions.additional_order_input_airline_data",
            "ingenico.connect.sdk.domain.definitions.address",
            "ingenico.connect.sdk.domain.definitions.airline_data",
            "ingenico.connect.sdk.domain.definitions.airline_flight_leg",
            "ingenico.connect.sdk.domain.definitions.amount_of_money",
            "ingenico.connect.sdk.domain.definitions.bank_account",
            "ingenico.connect.sdk.domain.definitions.bank_account_bban",
            "ingenico.connect.sdk.domain.definitions.bank_account_iban",
            "ingenico.connect.sdk.domain.definitions.card",
            "ingenico.connect.sdk.domain.definitions.card_essentials",
            "ingenico.connect.sdk.domain.definitions.card_fraud_results",
            "ingenico.connect.sdk.domain.definitions.card_without_cvv",
            "ingenico.connect.sdk.domain.definitions.company_information",
            "ingenico.connect.sdk.domain.definitions.contact_details_base",
            "ingenico.connect.sdk.domain.definitions.customer_base",
            "ingenico.connect.sdk.domain.definitions.fraud_fields",
            "ingenico.connect.sdk.domain.definitions.fraud_results",
            "ingenico.connect.sdk.domain.definitions.fraud_results_retail_decisions",
            "ingenico.connect.sdk.domain.definitions.key_value_pair",
            "ingenico.connect.sdk.domain.definitions.order_status_output",
            "ingenico.connect.sdk.domain.definitions.payment_product_filter",
            "ingenico.connect.sdk.domain.definitions.personal_name_base",
            "ingenico.connect.sdk.domain.definitions.result_do_risk_assessment",
            "ingenico.connect.sdk.domain.definitions.retail_decisions_cc_fraud_check_output",
            "ingenico.connect.sdk.domain.definitions.validation_bank_account_check",
            "ingenico.connect.sdk.domain.definitions.validation_bank_account_output",
            "ingenico.connect.sdk.domain.errors",
            "ingenico.connect.sdk.domain.errors.definitions",
            "ingenico.connect.sdk.domain.errors.definitions.api_error",
            "ingenico.connect.sdk.domain.errors.error_response",
            "ingenico.connect.sdk.domain.hostedcheckout",
            "ingenico.connect.sdk.domain.hostedcheckout.create_hosted_checkout_request",
            "ingenico.connect.sdk.domain.hostedcheckout.create_hosted_checkout_response",
            "ingenico.connect.sdk.domain.hostedcheckout.definitions",
            "ingenico.connect.sdk.domain.hostedcheckout.definitions.created_payment_output",
            "ingenico.connect.sdk.domain.hostedcheckout.definitions.displayed_data",
            "ingenico.connect.sdk.domain.hostedcheckout.definitions.hosted_checkout_specific_input",
            "ingenico.connect.sdk.domain.hostedcheckout.definitions.payment_product_filters_hosted_checkout",
            "ingenico.connect.sdk.domain.hostedcheckout.get_hosted_checkout_response",
            "ingenico.connect.sdk.domain.metadata",
            "ingenico.connect.sdk.domain.metadata.shopping_cart_extension",
            "ingenico.connect.sdk.domain.payment",
            "ingenico.connect.sdk.domain.payment.approve_payment_request",
            "ingenico.connect.sdk.domain.payment.cancel_approval_payment_response",
            "ingenico.connect.sdk.domain.payment.cancel_payment_response",
            "ingenico.connect.sdk.domain.payment.create_payment_request",
            "ingenico.connect.sdk.domain.payment.create_payment_response",
            "ingenico.connect.sdk.domain.payment.definitions",
            "ingenico.connect.sdk.domain.payment.definitions.abstract_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.additional_order_input",
            "ingenico.connect.sdk.domain.payment.definitions.address_personal",
            "ingenico.connect.sdk.domain.payment.definitions.amount_breakdown",
            "ingenico.connect.sdk.domain.payment.definitions.approve_payment_card_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.approve_payment_mobile_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.approve_payment_non_sepa_direct_debit_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.approve_payment_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.approve_payment_sepa_direct_debit_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.bank_transfer_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.bank_transfer_payment_method_specific_input_base",
            "ingenico.connect.sdk.domain.payment.definitions.bank_transfer_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.cancel_payment_card_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.cancel_payment_mobile_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.card_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.card_payment_method_specific_input_base",
            "ingenico.connect.sdk.domain.payment.definitions.card_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.cash_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.cash_payment_method_specific_input_base",
            "ingenico.connect.sdk.domain.payment.definitions.cash_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.cash_payment_product1503_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.cash_payment_product1504_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.contact_details",
            "ingenico.connect.sdk.domain.payment.definitions.create_payment_result",
            "ingenico.connect.sdk.domain.payment.definitions.customer",
            "ingenico.connect.sdk.domain.payment.definitions.decrypted_payment_data",
            "ingenico.connect.sdk.domain.payment.definitions.external_cardholder_authentication_data",
            "ingenico.connect.sdk.domain.payment.definitions.invoice_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.invoice_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.level3_summary_data",
            "ingenico.connect.sdk.domain.payment.definitions.line_item",
            "ingenico.connect.sdk.domain.payment.definitions.line_item_invoice_data",
            "ingenico.connect.sdk.domain.payment.definitions.line_item_level3_interchange_information",
            "ingenico.connect.sdk.domain.payment.definitions.merchant_action",
            "ingenico.connect.sdk.domain.payment.definitions.mobile_payment_data",
            "ingenico.connect.sdk.domain.payment.definitions.mobile_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.mobile_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.mobile_payment_product320_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.non_sepa_direct_debit_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.non_sepa_direct_debit_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.non_sepa_direct_debit_payment_product705_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.order",
            "ingenico.connect.sdk.domain.payment.definitions.order_approve_payment",
            "ingenico.connect.sdk.domain.payment.definitions.order_invoice_data",
            "ingenico.connect.sdk.domain.payment.definitions.order_line_details",
            "ingenico.connect.sdk.domain.payment.definitions.order_output",
            "ingenico.connect.sdk.domain.payment.definitions.order_references",
            "ingenico.connect.sdk.domain.payment.definitions.order_references_approve_payment",
            "ingenico.connect.sdk.domain.payment.definitions.order_type_information",
            "ingenico.connect.sdk.domain.payment.definitions.payment",
            "ingenico.connect.sdk.domain.payment.definitions.payment_creation_output",
            "ingenico.connect.sdk.domain.payment.definitions.payment_creation_references",
            "ingenico.connect.sdk.domain.payment.definitions.payment_output",
            "ingenico.connect.sdk.domain.payment.definitions.payment_product836_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.payment_product840_customer_account",
            "ingenico.connect.sdk.domain.payment.definitions.payment_product840_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.payment_references",
            "ingenico.connect.sdk.domain.payment.definitions.payment_status_output",
            "ingenico.connect.sdk.domain.payment.definitions.personal_information",
            "ingenico.connect.sdk.domain.payment.definitions.personal_name",
            "ingenico.connect.sdk.domain.payment.definitions.redirect_data",
            "ingenico.connect.sdk.domain.payment.definitions.redirect_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.redirect_payment_method_specific_input_base",
            "ingenico.connect.sdk.domain.payment.definitions.redirect_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.redirect_payment_product809_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.redirect_payment_product816_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.redirect_payment_product882_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.refund_bank_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.refund_card_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.refund_e_wallet_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.refund_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.refund_mobile_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.refund_output",
            "ingenico.connect.sdk.domain.payment.definitions.refund_payment_product840_customer_account",
            "ingenico.connect.sdk.domain.payment.definitions.refund_payment_product840_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.sepa_direct_debit_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.sepa_direct_debit_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.shopping_cart",
            "ingenico.connect.sdk.domain.payment.definitions.three_d_secure_results",
            "ingenico.connect.sdk.domain.payment.payment_approval_response",
            "ingenico.connect.sdk.domain.payment.payment_error_response",
            "ingenico.connect.sdk.domain.payment.payment_response",
            "ingenico.connect.sdk.domain.payment.tokenize_payment_request",
            "ingenico.connect.sdk.domain.payout",
            "ingenico.connect.sdk.domain.payout.approve_payout_request",
            "ingenico.connect.sdk.domain.payout.create_payout_request",
            "ingenico.connect.sdk.domain.payout.definitions",
            "ingenico.connect.sdk.domain.payout.definitions.payout_customer",
            "ingenico.connect.sdk.domain.payout.definitions.payout_references",
            "ingenico.connect.sdk.domain.payout.definitions.payout_result",
            "ingenico.connect.sdk.domain.payout.payout_error_response",
            "ingenico.connect.sdk.domain.payout.payout_response",
            "ingenico.connect.sdk.domain.product",
            "ingenico.connect.sdk.domain.product.definitions",
            "ingenico.connect.sdk.domain.product.definitions.account_on_file",
            "ingenico.connect.sdk.domain.product.definitions.account_on_file_attribute",
            "ingenico.connect.sdk.domain.product.definitions.account_on_file_display_hints",
            "ingenico.connect.sdk.domain.product.definitions.boleto_bancario_requiredness_validator",
            "ingenico.connect.sdk.domain.product.definitions.directory_entry",
            "ingenico.connect.sdk.domain.product.definitions.empty_validator",
            "ingenico.connect.sdk.domain.product.definitions.fixed_list_validator",
            "ingenico.connect.sdk.domain.product.definitions.label_template_element",
            "ingenico.connect.sdk.domain.product.definitions.length_validator",
            "ingenico.connect.sdk.domain.product.definitions.payment_product",
            "ingenico.connect.sdk.domain.product.definitions.payment_product_display_hints",
            "ingenico.connect.sdk.domain.product.definitions.payment_product_field",
            "ingenico.connect.sdk.domain.product.definitions.payment_product_field_data_restrictions",
            "ingenico.connect.sdk.domain.product.definitions.payment_product_field_display_hints",
            "ingenico.connect.sdk.domain.product.definitions.payment_product_field_form_element",
            "ingenico.connect.sdk.domain.product.definitions.payment_product_field_tooltip",
            "ingenico.connect.sdk.domain.product.definitions.payment_product_field_validators",
            "ingenico.connect.sdk.domain.product.definitions.payment_product_group",
            "ingenico.connect.sdk.domain.product.definitions.range_validator",
            "ingenico.connect.sdk.domain.product.definitions.regular_expression_validator",
            "ingenico.connect.sdk.domain.product.definitions.value_mapping_element",
            "ingenico.connect.sdk.domain.product.directory",
            "ingenico.connect.sdk.domain.product.payment_product_group_response",
            "ingenico.connect.sdk.domain.product.payment_product_groups",
            "ingenico.connect.sdk.domain.product.payment_product_networks_response",
            "ingenico.connect.sdk.domain.product.payment_product_response",
            "ingenico.connect.sdk.domain.product.payment_products",
            "ingenico.connect.sdk.domain.publickey",
            "ingenico.connect.sdk.domain.publickey.public_key",
            "ingenico.connect.sdk.domain.refund",
            "ingenico.connect.sdk.domain.refund.approve_refund_request",
            "ingenico.connect.sdk.domain.refund.definitions",
            "ingenico.connect.sdk.domain.refund.definitions.bank_account_bban_refund",
            "ingenico.connect.sdk.domain.refund.definitions.bank_refund_method_specific_input",
            "ingenico.connect.sdk.domain.refund.definitions.refund_customer",
            "ingenico.connect.sdk.domain.refund.definitions.refund_references",
            "ingenico.connect.sdk.domain.refund.definitions.refund_result",
            "ingenico.connect.sdk.domain.refund.refund_error_response",
            "ingenico.connect.sdk.domain.refund.refund_request",
            "ingenico.connect.sdk.domain.refund.refund_response",
            "ingenico.connect.sdk.domain.riskassessments",
            "ingenico.connect.sdk.domain.riskassessments.definitions",
            "ingenico.connect.sdk.domain.riskassessments.definitions.customer_risk_assessment",
            "ingenico.connect.sdk.domain.riskassessments.definitions.order_risk_assessment",
            "ingenico.connect.sdk.domain.riskassessments.definitions.personal_information_risk_assessment",
            "ingenico.connect.sdk.domain.riskassessments.definitions.personal_name_risk_assessment",
            "ingenico.connect.sdk.domain.riskassessments.definitions.risk_assessment",
            "ingenico.connect.sdk.domain.riskassessments.risk_assessment_bank_account",
            "ingenico.connect.sdk.domain.riskassessments.risk_assessment_card",
            "ingenico.connect.sdk.domain.riskassessments.risk_assessment_response",
            "ingenico.connect.sdk.domain.services",
            "ingenico.connect.sdk.domain.services.bank_details_request",
            "ingenico.connect.sdk.domain.services.bank_details_response",
            "ingenico.connect.sdk.domain.services.convert_amount",
            "ingenico.connect.sdk.domain.services.definitions",
            "ingenico.connect.sdk.domain.services.definitions.bank_data",
            "ingenico.connect.sdk.domain.services.definitions.bank_details",
            "ingenico.connect.sdk.domain.services.definitions.iin_detail",
            "ingenico.connect.sdk.domain.services.definitions.payment_context",
            "ingenico.connect.sdk.domain.services.definitions.swift",
            "ingenico.connect.sdk.domain.services.get_iin_details_request",
            "ingenico.connect.sdk.domain.services.get_iin_details_response",
            "ingenico.connect.sdk.domain.services.test_connection",
            "ingenico.connect.sdk.domain.sessions",
            "ingenico.connect.sdk.domain.sessions.definitions",
            "ingenico.connect.sdk.domain.sessions.definitions.payment_product_filters_client_session",
            "ingenico.connect.sdk.domain.sessions.session_request",
            "ingenico.connect.sdk.domain.sessions.session_response",
            "ingenico.connect.sdk.domain.token",
            "ingenico.connect.sdk.domain.token.approve_token_request",
            "ingenico.connect.sdk.domain.token.create_token_request",
            "ingenico.connect.sdk.domain.token.create_token_response",
            "ingenico.connect.sdk.domain.token.definitions",
            "ingenico.connect.sdk.domain.token.definitions.abstract_token",
            "ingenico.connect.sdk.domain.token.definitions.contact_details_token",
            "ingenico.connect.sdk.domain.token.definitions.creditor",
            "ingenico.connect.sdk.domain.token.definitions.customer_token",
            "ingenico.connect.sdk.domain.token.definitions.customer_token_with_contact_details",
            "ingenico.connect.sdk.domain.token.definitions.debtor",
            "ingenico.connect.sdk.domain.token.definitions.mandate_approval",
            "ingenico.connect.sdk.domain.token.definitions.mandate_non_sepa_direct_debit",
            "ingenico.connect.sdk.domain.token.definitions.mandate_sepa_direct_debit",
            "ingenico.connect.sdk.domain.token.definitions.mandate_sepa_direct_debit_with_mandate_id",
            "ingenico.connect.sdk.domain.token.definitions.mandate_sepa_direct_debit_without_creditor",
            "ingenico.connect.sdk.domain.token.definitions.personal_information_token",
            "ingenico.connect.sdk.domain.token.definitions.personal_name_token",
            "ingenico.connect.sdk.domain.token.definitions.token_card",
            "ingenico.connect.sdk.domain.token.definitions.token_card_data",
            "ingenico.connect.sdk.domain.token.definitions.token_e_wallet",
            "ingenico.connect.sdk.domain.token.definitions.token_e_wallet_data",
            "ingenico.connect.sdk.domain.token.definitions.token_non_sepa_direct_debit",
            "ingenico.connect.sdk.domain.token.definitions.token_non_sepa_direct_debit_payment_product705_specific_data",
            "ingenico.connect.sdk.domain.token.definitions.token_sepa_direct_debit",
            "ingenico.connect.sdk.domain.token.definitions.token_sepa_direct_debit_without_creditor",
            "ingenico.connect.sdk.domain.token.token_response",
            "ingenico.connect.sdk.domain.token.update_token_request",
            "ingenico.connect.sdk.endpoint_configuration",
            "ingenico.connect.sdk.factory",
            "ingenico.connect.sdk.global_collect_exception",
            "ingenico.connect.sdk.idempotence_exception",
            "ingenico.connect.sdk.log",
            "ingenico.connect.sdk.log.communicator_logger",
            "ingenico.connect.sdk.log.log_message",
            "ingenico.connect.sdk.log.logging_capable",
            "ingenico.connect.sdk.log.logging_util",
            "ingenico.connect.sdk.log.python_communicator_logger",
            "ingenico.connect.sdk.log.request_log_message",
            "ingenico.connect.sdk.log.response_log_message",
            "ingenico.connect.sdk.log.sys_out_communicator_logger",
            "ingenico.connect.sdk.marshaller",
            "ingenico.connect.sdk.marshaller_syntax_exception",
            "ingenico.connect.sdk.merchant",
            "ingenico.connect.sdk.merchant.hostedcheckouts",
            "ingenico.connect.sdk.merchant.hostedcheckouts.hostedcheckouts_client",
            "ingenico.connect.sdk.merchant.merchant_client",
            "ingenico.connect.sdk.merchant.payments",
            "ingenico.connect.sdk.merchant.payments.payments_client",
            "ingenico.connect.sdk.merchant.payouts",
            "ingenico.connect.sdk.merchant.payouts.payouts_client",
            "ingenico.connect.sdk.merchant.productgroups",
            "ingenico.connect.sdk.merchant.productgroups.find_productgroups_params",
            "ingenico.connect.sdk.merchant.productgroups.get_productgroup_params",
            "ingenico.connect.sdk.merchant.productgroups.productgroups_client",
            "ingenico.connect.sdk.merchant.products",
            "ingenico.connect.sdk.merchant.products.directory_params",
            "ingenico.connect.sdk.merchant.products.find_products_params",
            "ingenico.connect.sdk.merchant.products.get_product_params",
            "ingenico.connect.sdk.merchant.products.networks_params",
            "ingenico.connect.sdk.merchant.products.products_client",
            "ingenico.connect.sdk.merchant.refunds",
            "ingenico.connect.sdk.merchant.refunds.refunds_client",
            "ingenico.connect.sdk.merchant.riskassessments",
            "ingenico.connect.sdk.merchant.riskassessments.riskassessments_client",
            "ingenico.connect.sdk.merchant.services",
            "ingenico.connect.sdk.merchant.services.convert_amount_params",
            "ingenico.connect.sdk.merchant.services.services_client",
            "ingenico.connect.sdk.merchant.sessions",
            "ingenico.connect.sdk.merchant.sessions.sessions_client",
            "ingenico.connect.sdk.merchant.tokens",
            "ingenico.connect.sdk.merchant.tokens.delete_token_params",
            "ingenico.connect.sdk.merchant.tokens.tokens_client",
            "ingenico.connect.sdk.meta_data_provider",
            "ingenico.connect.sdk.not_found_exception",
            "ingenico.connect.sdk.param_request",
            "ingenico.connect.sdk.pooled_connection",
            "ingenico.connect.sdk.proxy_configuration",
            "ingenico.connect.sdk.reference_exception",
            "ingenico.connect.sdk.request_header",
            "ingenico.connect.sdk.request_param",
            "ingenico.connect.sdk.response",
            "ingenico.connect.sdk.response_exception",
            "ingenico.connect.sdk.session",
            "ingenico.connect.sdk.validation_exception"
        ],
        "version": "2.5.0"
    },
    "connect-sdk-python3": {
        "cmdline": [],
        "modules": [
            "ingenico",
            "ingenico.connect",
            "ingenico.connect.sdk",
            "ingenico.connect.sdk.api_exception",
            "ingenico.connect.sdk.api_resource",
            "ingenico.connect.sdk.authenticator",
            "ingenico.connect.sdk.authorization_exception",
            "ingenico.connect.sdk.call_context",
            "ingenico.connect.sdk.client",
            "ingenico.connect.sdk.communication_exception",
            "ingenico.connect.sdk.communicator",
            "ingenico.connect.sdk.communicator_configuration",
            "ingenico.connect.sdk.connection",
            "ingenico.connect.sdk.data_object",
            "ingenico.connect.sdk.declined_payment_exception",
            "ingenico.connect.sdk.declined_payout_exception",
            "ingenico.connect.sdk.declined_refund_exception",
            "ingenico.connect.sdk.declined_transaction_exception",
            "ingenico.connect.sdk.defaultimpl",
            "ingenico.connect.sdk.defaultimpl.authorization_type",
            "ingenico.connect.sdk.defaultimpl.default_authenticator",
            "ingenico.connect.sdk.defaultimpl.default_connection",
            "ingenico.connect.sdk.defaultimpl.default_marshaller",
            "ingenico.connect.sdk.domain",
            "ingenico.connect.sdk.domain.definitions",
            "ingenico.connect.sdk.domain.definitions.abstract_order_status",
            "ingenico.connect.sdk.domain.definitions.abstract_payment_method_specific_input",
            "ingenico.connect.sdk.domain.definitions.additional_order_input_airline_data",
            "ingenico.connect.sdk.domain.definitions.address",
            "ingenico.connect.sdk.domain.definitions.airline_data",
            "ingenico.connect.sdk.domain.definitions.airline_flight_leg",
            "ingenico.connect.sdk.domain.definitions.amount_of_money",
            "ingenico.connect.sdk.domain.definitions.bank_account",
            "ingenico.connect.sdk.domain.definitions.bank_account_bban",
            "ingenico.connect.sdk.domain.definitions.bank_account_iban",
            "ingenico.connect.sdk.domain.definitions.card",
            "ingenico.connect.sdk.domain.definitions.card_essentials",
            "ingenico.connect.sdk.domain.definitions.card_fraud_results",
            "ingenico.connect.sdk.domain.definitions.card_without_cvv",
            "ingenico.connect.sdk.domain.definitions.company_information",
            "ingenico.connect.sdk.domain.definitions.contact_details_base",
            "ingenico.connect.sdk.domain.definitions.customer_base",
            "ingenico.connect.sdk.domain.definitions.fraud_fields",
            "ingenico.connect.sdk.domain.definitions.fraud_results",
            "ingenico.connect.sdk.domain.definitions.fraud_results_retail_decisions",
            "ingenico.connect.sdk.domain.definitions.key_value_pair",
            "ingenico.connect.sdk.domain.definitions.order_status_output",
            "ingenico.connect.sdk.domain.definitions.payment_product_filter",
            "ingenico.connect.sdk.domain.definitions.personal_name_base",
            "ingenico.connect.sdk.domain.definitions.result_do_risk_assessment",
            "ingenico.connect.sdk.domain.definitions.retail_decisions_cc_fraud_check_output",
            "ingenico.connect.sdk.domain.definitions.validation_bank_account_check",
            "ingenico.connect.sdk.domain.definitions.validation_bank_account_output",
            "ingenico.connect.sdk.domain.errors",
            "ingenico.connect.sdk.domain.errors.definitions",
            "ingenico.connect.sdk.domain.errors.definitions.api_error",
            "ingenico.connect.sdk.domain.errors.error_response",
            "ingenico.connect.sdk.domain.hostedcheckout",
            "ingenico.connect.sdk.domain.hostedcheckout.create_hosted_checkout_request",
            "ingenico.connect.sdk.domain.hostedcheckout.create_hosted_checkout_response",
            "ingenico.connect.sdk.domain.hostedcheckout.definitions",
            "ingenico.connect.sdk.domain.hostedcheckout.definitions.created_payment_output",
            "ingenico.connect.sdk.domain.hostedcheckout.definitions.displayed_data",
            "ingenico.connect.sdk.domain.hostedcheckout.definitions.hosted_checkout_specific_input",
            "ingenico.connect.sdk.domain.hostedcheckout.definitions.payment_product_filters_hosted_checkout",
            "ingenico.connect.sdk.domain.hostedcheckout.get_hosted_checkout_response",
            "ingenico.connect.sdk.domain.metadata",
            "ingenico.connect.sdk.domain.metadata.shopping_cart_extension",
            "ingenico.connect.sdk.domain.payment",
            "ingenico.connect.sdk.domain.payment.approve_payment_request",
            "ingenico.connect.sdk.domain.payment.cancel_approval_payment_response",
            "ingenico.connect.sdk.domain.payment.cancel_payment_response",
            "ingenico.connect.sdk.domain.payment.create_payment_request",
            "ingenico.connect.sdk.domain.payment.create_payment_response",
            "ingenico.connect.sdk.domain.payment.definitions",
            "ingenico.connect.sdk.domain.payment.definitions.abstract_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.additional_order_input",
            "ingenico.connect.sdk.domain.payment.definitions.address_personal",
            "ingenico.connect.sdk.domain.payment.definitions.amount_breakdown",
            "ingenico.connect.sdk.domain.payment.definitions.approve_payment_card_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.approve_payment_mobile_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.approve_payment_non_sepa_direct_debit_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.approve_payment_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.approve_payment_sepa_direct_debit_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.bank_transfer_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.bank_transfer_payment_method_specific_input_base",
            "ingenico.connect.sdk.domain.payment.definitions.bank_transfer_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.cancel_payment_card_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.cancel_payment_mobile_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.card_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.card_payment_method_specific_input_base",
            "ingenico.connect.sdk.domain.payment.definitions.card_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.cash_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.cash_payment_method_specific_input_base",
            "ingenico.connect.sdk.domain.payment.definitions.cash_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.cash_payment_product1503_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.cash_payment_product1504_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.contact_details",
            "ingenico.connect.sdk.domain.payment.definitions.create_payment_result",
            "ingenico.connect.sdk.domain.payment.definitions.customer",
            "ingenico.connect.sdk.domain.payment.definitions.decrypted_payment_data",
            "ingenico.connect.sdk.domain.payment.definitions.external_cardholder_authentication_data",
            "ingenico.connect.sdk.domain.payment.definitions.invoice_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.invoice_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.level3_summary_data",
            "ingenico.connect.sdk.domain.payment.definitions.line_item",
            "ingenico.connect.sdk.domain.payment.definitions.line_item_invoice_data",
            "ingenico.connect.sdk.domain.payment.definitions.line_item_level3_interchange_information",
            "ingenico.connect.sdk.domain.payment.definitions.merchant_action",
            "ingenico.connect.sdk.domain.payment.definitions.mobile_payment_data",
            "ingenico.connect.sdk.domain.payment.definitions.mobile_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.mobile_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.mobile_payment_product320_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.non_sepa_direct_debit_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.non_sepa_direct_debit_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.non_sepa_direct_debit_payment_product705_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.order",
            "ingenico.connect.sdk.domain.payment.definitions.order_approve_payment",
            "ingenico.connect.sdk.domain.payment.definitions.order_invoice_data",
            "ingenico.connect.sdk.domain.payment.definitions.order_line_details",
            "ingenico.connect.sdk.domain.payment.definitions.order_output",
            "ingenico.connect.sdk.domain.payment.definitions.order_references",
            "ingenico.connect.sdk.domain.payment.definitions.order_references_approve_payment",
            "ingenico.connect.sdk.domain.payment.definitions.order_type_information",
            "ingenico.connect.sdk.domain.payment.definitions.payment",
            "ingenico.connect.sdk.domain.payment.definitions.payment_creation_output",
            "ingenico.connect.sdk.domain.payment.definitions.payment_creation_references",
            "ingenico.connect.sdk.domain.payment.definitions.payment_output",
            "ingenico.connect.sdk.domain.payment.definitions.payment_product836_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.payment_product840_customer_account",
            "ingenico.connect.sdk.domain.payment.definitions.payment_product840_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.payment_references",
            "ingenico.connect.sdk.domain.payment.definitions.payment_status_output",
            "ingenico.connect.sdk.domain.payment.definitions.personal_information",
            "ingenico.connect.sdk.domain.payment.definitions.personal_name",
            "ingenico.connect.sdk.domain.payment.definitions.redirect_data",
            "ingenico.connect.sdk.domain.payment.definitions.redirect_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.redirect_payment_method_specific_input_base",
            "ingenico.connect.sdk.domain.payment.definitions.redirect_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.redirect_payment_product809_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.redirect_payment_product816_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.redirect_payment_product882_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.refund_bank_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.refund_card_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.refund_e_wallet_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.refund_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.refund_mobile_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.refund_output",
            "ingenico.connect.sdk.domain.payment.definitions.refund_payment_product840_customer_account",
            "ingenico.connect.sdk.domain.payment.definitions.refund_payment_product840_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.sepa_direct_debit_payment_method_specific_input",
            "ingenico.connect.sdk.domain.payment.definitions.sepa_direct_debit_payment_method_specific_output",
            "ingenico.connect.sdk.domain.payment.definitions.shopping_cart",
            "ingenico.connect.sdk.domain.payment.definitions.three_d_secure_results",
            "ingenico.connect.sdk.domain.payment.payment_approval_response",
            "ingenico.connect.sdk.domain.payment.payment_error_response",
            "ingenico.connect.sdk.domain.payment.payment_response",
            "ingenico.connect.sdk.domain.payment.tokenize_payment_request",
            "ingenico.connect.sdk.domain.payout",
            "ingenico.connect.sdk.domain.payout.approve_payout_request",
            "ingenico.connect.sdk.domain.payout.create_payout_request",
            "ingenico.connect.sdk.domain.payout.definitions",
            "ingenico.connect.sdk.domain.payout.definitions.payout_customer",
            "ingenico.connect.sdk.domain.payout.definitions.payout_references",
            "ingenico.connect.sdk.domain.payout.definitions.payout_result",
            "ingenico.connect.sdk.domain.payout.payout_error_response",
            "ingenico.connect.sdk.domain.payout.payout_response",
            "ingenico.connect.sdk.domain.product",
            "ingenico.connect.sdk.domain.product.definitions",
            "ingenico.connect.sdk.domain.product.definitions.account_on_file",
            "ingenico.connect.sdk.domain.product.definitions.account_on_file_attribute",
            "ingenico.connect.sdk.domain.product.definitions.account_on_file_display_hints",
            "ingenico.connect.sdk.domain.product.definitions.boleto_bancario_requiredness_validator",
            "ingenico.connect.sdk.domain.product.definitions.directory_entry",
            "ingenico.connect.sdk.domain.product.definitions.empty_validator",
            "ingenico.connect.sdk.domain.product.definitions.fixed_list_validator",
            "ingenico.connect.sdk.domain.product.definitions.label_template_element",
            "ingenico.connect.sdk.domain.product.definitions.length_validator",
            "ingenico.connect.sdk.domain.product.definitions.payment_product",
            "ingenico.connect.sdk.domain.product.definitions.payment_product_display_hints",
            "ingenico.connect.sdk.domain.product.definitions.payment_product_field",
            "ingenico.connect.sdk.domain.product.definitions.payment_product_field_data_restrictions",
            "ingenico.connect.sdk.domain.product.definitions.payment_product_field_display_hints",
            "ingenico.connect.sdk.domain.product.definitions.payment_product_field_form_element",
            "ingenico.connect.sdk.domain.product.definitions.payment_product_field_tooltip",
            "ingenico.connect.sdk.domain.product.definitions.payment_product_field_validators",
            "ingenico.connect.sdk.domain.product.definitions.payment_product_group",
            "ingenico.connect.sdk.domain.product.definitions.range_validator",
            "ingenico.connect.sdk.domain.product.definitions.regular_expression_validator",
            "ingenico.connect.sdk.domain.product.definitions.value_mapping_element",
            "ingenico.connect.sdk.domain.product.directory",
            "ingenico.connect.sdk.domain.product.payment_product_group_response",
            "ingenico.connect.sdk.domain.product.payment_product_groups",
            "ingenico.connect.sdk.domain.product.payment_product_networks_response",
            "ingenico.connect.sdk.domain.product.payment_product_response",
            "ingenico.connect.sdk.domain.product.payment_products",
            "ingenico.connect.sdk.domain.publickey",
            "ingenico.connect.sdk.domain.publickey.public_key",
            "ingenico.connect.sdk.domain.refund",
            "ingenico.connect.sdk.domain.refund.approve_refund_request",
            "ingenico.connect.sdk.domain.refund.definitions",
            "ingenico.connect.sdk.domain.refund.definitions.bank_account_bban_refund",
            "ingenico.connect.sdk.domain.refund.definitions.bank_refund_method_specific_input",
            "ingenico.connect.sdk.domain.refund.definitions.refund_customer",
            "ingenico.connect.sdk.domain.refund.definitions.refund_references",
            "ingenico.connect.sdk.domain.refund.definitions.refund_result",
            "ingenico.connect.sdk.domain.refund.refund_error_response",
            "ingenico.connect.sdk.domain.refund.refund_request",
            "ingenico.connect.sdk.domain.refund.refund_response",
            "ingenico.connect.sdk.domain.riskassessments",
            "ingenico.connect.sdk.domain.riskassessments.definitions",
            "ingenico.connect.sdk.domain.riskassessments.definitions.customer_risk_assessment",
            "ingenico.connect.sdk.domain.riskassessments.definitions.order_risk_assessment",
            "ingenico.connect.sdk.domain.riskassessments.definitions.personal_information_risk_assessment",
            "ingenico.connect.sdk.domain.riskassessments.definitions.personal_name_risk_assessment",
            "ingenico.connect.sdk.domain.riskassessments.definitions.risk_assessment",
            "ingenico.connect.sdk.domain.riskassessments.risk_assessment_bank_account",
            "ingenico.connect.sdk.domain.riskassessments.risk_assessment_card",
            "ingenico.connect.sdk.domain.riskassessments.risk_assessment_response",
            "ingenico.connect.sdk.domain.services",
            "ingenico.connect.sdk.domain.services.bank_details_request",
            "ingenico.connect.sdk.domain.services.bank_details_response",
            "ingenico.connect.sdk.domain.services.convert_amount",
            "ingenico.connect.sdk.domain.services.definitions",
            "ingenico.connect.sdk.domain.services.definitions.bank_data",
            "ingenico.connect.sdk.domain.services.definitions.bank_details",
            "ingenico.connect.sdk.domain.services.definitions.iin_detail",
            "ingenico.connect.sdk.domain.services.definitions.payment_context",
            "ingenico.connect.sdk.domain.services.definitions.swift",
            "ingenico.connect.sdk.domain.services.get_iin_details_request",
            "ingenico.connect.sdk.domain.services.get_iin_details_response",
            "ingenico.connect.sdk.domain.services.test_connection",
            "ingenico.connect.sdk.domain.sessions",
            "ingenico.connect.sdk.domain.sessions.definitions",
            "ingenico.connect.sdk.domain.sessions.definitions.payment_product_filters_client_session",
            "ingenico.connect.sdk.domain.sessions.session_request",
            "ingenico.connect.sdk.domain.sessions.session_response",
            "ingenico.connect.sdk.domain.token",
            "ingenico.connect.sdk.domain.token.approve_token_request",
            "ingenico.connect.sdk.domain.token.create_token_request",
            "ingenico.connect.sdk.domain.token.create_token_response",
            "ingenico.connect.sdk.domain.token.definitions",
            "ingenico.connect.sdk.domain.token.definitions.abstract_token",
            "ingenico.connect.sdk.domain.token.definitions.contact_details_token",
            "ingenico.connect.sdk.domain.token.definitions.creditor",
            "ingenico.connect.sdk.domain.token.definitions.customer_token",
            "ingenico.connect.sdk.domain.token.definitions.customer_token_with_contact_details",
            "ingenico.connect.sdk.domain.token.definitions.debtor",
            "ingenico.connect.sdk.domain.token.definitions.mandate_approval",
            "ingenico.connect.sdk.domain.token.definitions.mandate_non_sepa_direct_debit",
            "ingenico.connect.sdk.domain.token.definitions.mandate_sepa_direct_debit",
            "ingenico.connect.sdk.domain.token.definitions.mandate_sepa_direct_debit_with_mandate_id",
            "ingenico.connect.sdk.domain.token.definitions.mandate_sepa_direct_debit_without_creditor",
            "ingenico.connect.sdk.domain.token.definitions.personal_information_token",
            "ingenico.connect.sdk.domain.token.definitions.personal_name_token",
            "ingenico.connect.sdk.domain.token.definitions.token_card",
            "ingenico.connect.sdk.domain.token.definitions.token_card_data",
            "ingenico.connect.sdk.domain.token.definitions.token_e_wallet",
            "ingenico.connect.sdk.domain.token.definitions.token_e_wallet_data",
            "ingenico.connect.sdk.domain.token.definitions.token_non_sepa_direct_debit",
            "ingenico.connect.sdk.domain.token.definitions.token_non_sepa_direct_debit_payment_product705_specific_data",
            "ingenico.connect.sdk.domain.token.definitions.token_sepa_direct_debit",
            "ingenico.connect.sdk.domain.token.definitions.token_sepa_direct_debit_without_creditor",
            "ingenico.connect.sdk.domain.token.token_response",
            "ingenico.connect.sdk.domain.token.update_token_request",
            "ingenico.connect.sdk.endpoint_configuration",
            "ingenico.connect.sdk.factory",
            "ingenico.connect.sdk.global_collect_exception",
            "ingenico.connect.sdk.idempotence_exception",
            "ingenico.connect.sdk.log",
            "ingenico.connect.sdk.log.communicator_logger",
            "ingenico.connect.sdk.log.log_message",
            "ingenico.connect.sdk.log.logging_capable",
            "ingenico.connect.sdk.log.logging_util",
            "ingenico.connect.sdk.log.python_communicator_logger",
            "ingenico.connect.sdk.log.request_log_message",
            "ingenico.connect.sdk.log.response_log_message",
            "ingenico.connect.sdk.log.sys_out_communicator_logger",
            "ingenico.connect.sdk.marshaller",
            "ingenico.connect.sdk.marshaller_syntax_exception",
            "ingenico.connect.sdk.merchant",
            "ingenico.connect.sdk.merchant.hostedcheckouts",
            "ingenico.connect.sdk.merchant.hostedcheckouts.hostedcheckouts_client",
            "ingenico.connect.sdk.merchant.merchant_client",
            "ingenico.connect.sdk.merchant.payments",
            "ingenico.connect.sdk.merchant.payments.payments_client",
            "ingenico.connect.sdk.merchant.payouts",
            "ingenico.connect.sdk.merchant.payouts.payouts_client",
            "ingenico.connect.sdk.merchant.productgroups",
            "ingenico.connect.sdk.merchant.productgroups.find_productgroups_params",
            "ingenico.connect.sdk.merchant.productgroups.get_productgroup_params",
            "ingenico.connect.sdk.merchant.productgroups.productgroups_client",
            "ingenico.connect.sdk.merchant.products",
            "ingenico.connect.sdk.merchant.products.directory_params",
            "ingenico.connect.sdk.merchant.products.find_products_params",
            "ingenico.connect.sdk.merchant.products.get_product_params",
            "ingenico.connect.sdk.merchant.products.networks_params",
            "ingenico.connect.sdk.merchant.products.products_client",
            "ingenico.connect.sdk.merchant.refunds",
            "ingenico.connect.sdk.merchant.refunds.refunds_client",
            "ingenico.connect.sdk.merchant.riskassessments",
            "ingenico.connect.sdk.merchant.riskassessments.riskassessments_client",
            "ingenico.connect.sdk.merchant.services",
            "ingenico.connect.sdk.merchant.services.convert_amount_params",
            "ingenico.connect.sdk.merchant.services.services_client",
            "ingenico.connect.sdk.merchant.sessions",
            "ingenico.connect.sdk.merchant.sessions.sessions_client",
            "ingenico.connect.sdk.merchant.tokens",
            "ingenico.connect.sdk.merchant.tokens.delete_token_params",
            "ingenico.connect.sdk.merchant.tokens.tokens_client",
            "ingenico.connect.sdk.meta_data_provider",
            "ingenico.connect.sdk.not_found_exception",
            "ingenico.connect.sdk.param_request",
            "ingenico.connect.sdk.pooled_connection",
            "ingenico.connect.sdk.proxy_configuration",
            "ingenico.connect.sdk.reference_exception",
            "ingenico.connect.sdk.request_header",
            "ingenico.connect.sdk.request_param",
            "ingenico.connect.sdk.response",
            "ingenico.connect.sdk.response_exception",
            "ingenico.connect.sdk.session",
            "ingenico.connect.sdk.validation_exception"
        ],
        "version": "2.5.0"
    },
    "connect.py": {
        "cmdline": [],
        "modules": [
            "connect",
            "connect.artist",
            "connect.client",
            "connect.errors",
            "connect.http",
            "connect.playlist",
            "connect.release",
            "connect.track",
            "connect.utils"
        ],
        "version": "0.2.1"
    },
    "connect4": {
        "cmdline": [],
        "modules": [
            "connect4",
            "connect4.gui",
            "connect4.gui.gui",
            "connect4.logic",
            "connect4.logic.AI",
            "connect4.logic.game",
            "connect4.utils",
            "connect4.utils.tree"
        ],
        "version": "0.0.3"
    },
    "connectable": {
        "cmdline": [],
        "modules": [
            "connectable",
            "connectable.base"
        ],
        "version": "1.2.0"
    },
    "connectfelixzhao": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "connections": {
        "cmdline": [],
        "modules": [
            "connections"
        ],
        "version": "0.1.3"
    },
    "connectivipy": {
        "cmdline": [],
        "modules": [
            "connectivipy",
            "connectivipy.conn",
            "connectivipy.data",
            "connectivipy.load",
            "connectivipy.load.loaders",
            "connectivipy.mvar",
            "connectivipy.mvar.comp",
            "connectivipy.mvar.fitting",
            "connectivipy.mvarmodel",
            "connectivipy.plot",
            "connectivipy.sigific",
            "connectivipy.working",
            "connectivipy.wrdata"
        ],
        "version": "0.36"
    },
    "connector-calendars": {
        "cmdline": [],
        "modules": [
            "calendars",
            "calendars.admin",
            "calendars.models",
            "calendars.parsing"
        ],
        "version": "0.1.0"
    },
    "connector-events": {
        "cmdline": [],
        "modules": [
            "events",
            "events.admin",
            "events.feeds",
            "events.forms",
            "events.models",
            "events.urls",
            "events.views"
        ],
        "version": "0.1.0"
    },
    "connectordb": {
        "cmdline": [],
        "modules": [
            "connectordb",
            "connectordb._connection",
            "connectordb._connectordb",
            "connectordb._connectorobject",
            "connectordb._datapointarray",
            "connectordb._device",
            "connectordb._stream",
            "connectordb._user",
            "connectordb._websocket",
            "connectordb.logger",
            "connectordb.query",
            "connectordb.query.dataset",
            "connectordb.query.merge",
            "connectordb.tools"
        ],
        "version": "0.3.5"
    },
    "connectrum": {
        "cmdline": [],
        "modules": [
            "connectrum",
            "connectrum.client",
            "connectrum.constants",
            "connectrum.exc",
            "connectrum.findall",
            "connectrum.protocol",
            "connectrum.svr_info",
            "connectrum.utils"
        ],
        "version": "0.5.0"
    },
    "connexion": {
        "cmdline": [],
        "modules": [
            "connexion",
            "connexion.api",
            "connexion.apis",
            "connexion.apis.abstract",
            "connexion.apis.flask_api",
            "connexion.apis.flask_utils",
            "connexion.app",
            "connexion.apps",
            "connexion.apps.abstract",
            "connexion.apps.flask_app",
            "connexion.cli",
            "connexion.decorators",
            "connexion.decorators.decorator",
            "connexion.decorators.metrics",
            "connexion.decorators.parameter",
            "connexion.decorators.produces",
            "connexion.decorators.response",
            "connexion.decorators.security",
            "connexion.decorators.validation",
            "connexion.exceptions",
            "connexion.handlers",
            "connexion.lifecycle",
            "connexion.mock",
            "connexion.operation",
            "connexion.problem",
            "connexion.resolver",
            "connexion.utils"
        ],
        "version": "1.1.9"
    },
    "connexion-sql-utils": {
        "cmdline": [],
        "modules": [
            "connexion_sql_utils",
            "connexion_sql_utils.base_mixin_abc",
            "connexion_sql_utils.crud",
            "connexion_sql_utils.decorators",
            "connexion_sql_utils.sqlmixins"
        ],
        "version": "0.1.4"
    },
    "connix": {
        "cmdline": [],
        "modules": [
            "connix",
            "connix.connix"
        ],
        "version": "1.10"
    },
    "connman-dispatcher": {
        "cmdline": [
            "connman-dispatcher"
        ],
        "modules": [
            "connman_dispatcher",
            "connman_dispatcher.detect",
            "connman_dispatcher.utils"
        ],
        "version": "0.0.8"
    },
    "connmon": {
        "cmdline": [],
        "modules": [
            "connmon",
            "connmon.client",
            "connmon.display",
            "connmon.dumper",
            "connmon.frontend",
            "connmon.plugin",
            "connmon.server",
            "connmon.stats"
        ],
        "version": "0.3.6"
    },
    "connor": {
        "cmdline": [],
        "modules": [
            "connor",
            "connor.command_validator",
            "connor.connor",
            "connor.familyhandler",
            "connor.samtools",
            "connor.utils"
        ],
        "version": "0.5"
    },
    "conntest": {
        "cmdline": [],
        "modules": [
            "conntest",
            "conntest.conntest"
        ],
        "version": "1.2.1"
    },
    "conntext": {
        "cmdline": [],
        "modules": [
            "conntext",
            "conntext.conntext"
        ],
        "version": "0.1.5"
    },
    "conntrack": {
        "cmdline": [],
        "modules": [
            "Conntrack"
        ],
        "version": "0.5"
    },
    "conny": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "conoha-cli": {
        "cmdline": [],
        "modules": [
            "conoha",
            "conoha.api",
            "conoha.block",
            "conoha.cli",
            "conoha.compute",
            "conoha.config",
            "conoha.image",
            "conoha.network"
        ],
        "version": "0.1.1"
    },
    "conpot": {
        "cmdline": [],
        "modules": [
            "bin",
            "bin.kamstrup_prober",
            "conpot",
            "conpot.core",
            "conpot.core.attack_session",
            "conpot.core.databus",
            "conpot.core.loggers",
            "conpot.core.loggers.hpfriends",
            "conpot.core.loggers.log_worker",
            "conpot.core.loggers.mysql_log",
            "conpot.core.loggers.sqlite_log",
            "conpot.core.loggers.stix_transform",
            "conpot.core.loggers.syslog",
            "conpot.core.loggers.taxii_log",
            "conpot.core.session_manager",
            "conpot.emulators",
            "conpot.emulators.misc",
            "conpot.emulators.misc.uptime",
            "conpot.emulators.proxy",
            "conpot.emulators.sensors",
            "conpot.helpers",
            "conpot.protocols",
            "conpot.protocols.bacnet",
            "conpot.protocols.bacnet.bacnet_app",
            "conpot.protocols.bacnet.bacnet_server",
            "conpot.protocols.guardian_ast",
            "conpot.protocols.guardian_ast.guardian_ast_server",
            "conpot.protocols.http",
            "conpot.protocols.http.command_responder",
            "conpot.protocols.http.web_server",
            "conpot.protocols.ipmi",
            "conpot.protocols.ipmi.fakebmc",
            "conpot.protocols.ipmi.fakesession",
            "conpot.protocols.ipmi.ipmi_server",
            "conpot.protocols.kamstrup",
            "conpot.protocols.kamstrup.management_protocol",
            "conpot.protocols.kamstrup.management_protocol.command_responder",
            "conpot.protocols.kamstrup.management_protocol.commands",
            "conpot.protocols.kamstrup.management_protocol.kamstrup_management_server",
            "conpot.protocols.kamstrup.meter_protocol",
            "conpot.protocols.kamstrup.meter_protocol.command_responder",
            "conpot.protocols.kamstrup.meter_protocol.decoder_382",
            "conpot.protocols.kamstrup.meter_protocol.kamstrup_constants",
            "conpot.protocols.kamstrup.meter_protocol.kamstrup_server",
            "conpot.protocols.kamstrup.meter_protocol.messages",
            "conpot.protocols.kamstrup.meter_protocol.register",
            "conpot.protocols.kamstrup.meter_protocol.request_parser",
            "conpot.protocols.kamstrup.usage_simulator",
            "conpot.protocols.misc",
            "conpot.protocols.misc.ascii_decoder",
            "conpot.protocols.modbus",
            "conpot.protocols.modbus.modbus_block_databus_mediator",
            "conpot.protocols.modbus.modbus_server",
            "conpot.protocols.modbus.slave",
            "conpot.protocols.modbus.slave_db",
            "conpot.protocols.s7comm",
            "conpot.protocols.s7comm.cotp",
            "conpot.protocols.s7comm.exceptions",
            "conpot.protocols.s7comm.s7",
            "conpot.protocols.s7comm.s7_server",
            "conpot.protocols.s7comm.tpkt",
            "conpot.protocols.snmp",
            "conpot.protocols.snmp.build_pysnmp_mib_wrapper",
            "conpot.protocols.snmp.command_responder",
            "conpot.protocols.snmp.conpot_cmdrsp",
            "conpot.protocols.snmp.databus_mediator",
            "conpot.protocols.snmp.snmp_server",
            "conpot.tests",
            "conpot.tests.helpers",
            "conpot.tests.helpers.s7comm_client",
            "conpot.tests.helpers.snmp_client",
            "conpot.tests.test_bacnet_server",
            "conpot.tests.test_base",
            "conpot.tests.test_docs",
            "conpot.tests.test_ext_ip_util",
            "conpot.tests.test_hpfriends",
            "conpot.tests.test_http_server",
            "conpot.tests.test_ipmi_server",
            "conpot.tests.test_kamstrup_decoder",
            "conpot.tests.test_kamstrup_meter_protocol",
            "conpot.tests.test_logger_mysql",
            "conpot.tests.test_mac_addr",
            "conpot.tests.test_modbus_server",
            "conpot.tests.test_proxy",
            "conpot.tests.test_pysnmp_wrapper",
            "conpot.tests.test_s7_server",
            "conpot.tests.test_snmp_server",
            "conpot.tests.test_taxii",
            "conpot.utils",
            "conpot.utils.ext_ip",
            "conpot.utils.mac_addr"
        ],
        "version": "0.5.1"
    },
    "conpy": {
        "cmdline": [],
        "modules": [
            "conpy",
            "conpy.admin",
            "conpy.auth",
            "conpy.cli",
            "conpy.factory",
            "conpy.forms",
            "conpy.languages",
            "conpy.models",
            "conpy.simple-admin-mongo",
            "conpy.tasks",
            "conpy.utils",
            "conpy.views"
        ],
        "version": "0.1.0"
    },
    "conrad": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "consecution": {
        "cmdline": [],
        "modules": [
            "consecution",
            "consecution.nodes",
            "consecution.pipeline",
            "consecution.tests",
            "consecution.tests.nodes_tests",
            "consecution.tests.pipeline_tests",
            "consecution.tests.testing_helpers",
            "consecution.tests.utils_tests",
            "consecution.utils"
        ],
        "version": "0.2.0"
    },
    "consensus": {
        "cmdline": [],
        "modules": [
            "consensus"
        ],
        "version": "0.1.1"
    },
    "consent": {
        "cmdline": [
            "consent-admin",
            "consent-makeconfig",
            "consent-test"
        ],
        "modules": [
            "consent",
            "consent.accesscontrol",
            "consent.application",
            "consent.builder",
            "consent.cli",
            "consent.cli.admin",
            "consent.cli.admintest",
            "consent.cli.data",
            "consent.cli.makeconfig",
            "consent.cli.test",
            "consent.command",
            "consent.command.emailjoinrequest",
            "consent.command.initialise",
            "consent.dictionary",
            "consent.dictionarytest",
            "consent.dictionarywords",
            "consent.django",
            "consent.django.apps",
            "consent.django.apps.kui",
            "consent.django.apps.kui.models",
            "consent.django.apps.kui.models.kui",
            "consent.django.apps.kui.urls",
            "consent.django.apps.kui.urls.kui",
            "consent.django.apps.kui.views",
            "consent.django.apps.kui.views.accesscontrol",
            "consent.django.apps.kui.views.admin",
            "consent.django.apps.kui.views.api",
            "consent.django.apps.kui.views.assembly",
            "consent.django.apps.kui.views.base",
            "consent.django.apps.kui.views.consensus",
            "consent.django.apps.kui.views.kui",
            "consent.django.apps.kui.views.manipulator",
            "consent.django.apps.kui.views.member",
            "consent.django.apps.kui.views.person",
            "consent.django.apps.kui.views.proposal",
            "consent.django.apps.kui.views.site",
            "consent.django.apps.kui.views.test",
            "consent.django.apps.kui.views.test.accesscontrol",
            "consent.django.apps.kui.views.test.api",
            "consent.django.apps.kui.views.test.assembly",
            "consent.django.apps.kui.views.test.base",
            "consent.django.apps.kui.views.test.manipulator",
            "consent.django.apps.kui.views.test.person",
            "consent.django.apps.kui.views.test.proposal",
            "consent.django.apps.kui.views.test.welcome",
            "consent.django.apps.kui.views.testunit",
            "consent.django.settings",
            "consent.django.settings.admin",
            "consent.django.settings.main",
            "consent.django.settings.urls",
            "consent.django.settings.urls.admin",
            "consent.django.settings.urls.kui",
            "consent.django.settings.urls.main",
            "consent.dom",
            "consent.dom.__doc__",
            "consent.dom.assembly",
            "consent.dom.assemblytest",
            "consent.dom.builder",
            "consent.dom.consensus",
            "consent.dom.consensustest",
            "consent.dom.feedentry",
            "consent.dom.feedentrytest",
            "consent.dom.license",
            "consent.dom.member",
            "consent.dom.person",
            "consent.dom.plugin",
            "consent.dom.proposal",
            "consent.dom.proposaltest",
            "consent.dom.service",
            "consent.dom.servicetest",
            "consent.dom.site",
            "consent.dom.testunit",
            "consent.domtest",
            "consent.exceptions",
            "consent.filesystem",
            "consent.filesystemtest",
            "consent.handlers",
            "consent.handlers.apachecodes",
            "consent.handlers.apachecodestest",
            "consent.handlers.base",
            "consent.handlers.kui",
            "consent.handlers.kui.modpython",
            "consent.handlers.kui.wsgi",
            "consent.handlers.modpython",
            "consent.handlers.modpythontest",
            "consent.handlers.modwsgi",
            "consent.handlers.modwsgitest",
            "consent.handlers.projecthost",
            "consent.handlers.projecthosttest",
            "consent.handlers.wsgitest",
            "consent.handlerstest",
            "consent.ioc",
            "consent.kuitest",
            "consent.migrate",
            "consent.migratetest",
            "consent.regexps",
            "consent.registry",
            "consent.soleInstance",
            "consent.test",
            "consent.test.all",
            "consent.test.customer",
            "consent.test.customer.base",
            "consent.test.customer.kui",
            "consent.test.customer.kui.admin",
            "consent.test.customer.kui.admin.domainObject",
            "consent.test.customer.kui.admin.hasMany",
            "consent.test.customer.kui.api",
            "consent.test.customer.kui.base",
            "consent.test.customer.kui.member",
            "consent.test.customer.kui.person",
            "consent.test.customer.kui.project",
            "consent.test.customer.kui.service",
            "consent.test.customer.kui.submitproposal",
            "consent.test.customer.kui.welcome",
            "consent.test.developer",
            "consent.testrunner",
            "consent.testunit",
            "consent.unittesttest",
            "consent.url",
            "consent.urltest",
            "consent.utils",
            "consent.utils.admin",
            "consent.utils.admintest",
            "consent.utils.backup",
            "consent.utils.backup_test",
            "consent.utils.captcha",
            "consent.utils.db",
            "consent.utils.dbtest",
            "consent.utils.mailer",
            "consent.utils.mailertest",
            "consent.utils.password",
            "consent.utils.upgrade",
            "consent.utils.upgradetest",
            "consent.utilstest"
        ],
        "version": "0.6"
    },
    "consider": {
        "cmdline": [],
        "modules": [
            "consider",
            "consider.consider"
        ],
        "version": "0.1.1"
    },
    "consistent-hash": {
        "cmdline": [],
        "modules": [
            "consistent_hash",
            "consistent_hash.consistent_hash"
        ],
        "version": "1.0"
    },
    "consistent-hash-git": {
        "cmdline": [],
        "modules": [
            "consistent_hash",
            "consistent_hash.consistent_hash"
        ],
        "version": "0.3"
    },
    "consistenthashing": {
        "cmdline": [],
        "modules": [
            "consistenthashing"
        ],
        "version": "0.2.2"
    },
    "consolation": {
        "cmdline": [],
        "modules": [
            "consolation",
            "consolation.decorate",
            "consolation.progress_bar"
        ],
        "version": "0.1.1"
    },
    "console": {
        "cmdline": [],
        "modules": [
            "console",
            "console.console"
        ],
        "version": "0.1.1"
    },
    "console-calendar": {
        "cmdline": [
            "concal"
        ],
        "modules": [
            "console_calendar",
            "console_calendar.bin",
            "console_calendar.main",
            "console_calendar.version"
        ],
        "version": "0.2.0"
    },
    "console-colors": {
        "cmdline": [],
        "modules": [
            "console_colors"
        ],
        "version": "0.1"
    },
    "console-script": {
        "cmdline": [],
        "modules": [
            "console_script"
        ],
        "version": "0.1"
    },
    "console-utility": {
        "cmdline": [],
        "modules": [
            "alex75_console",
            "alex75_console.menu",
            "alex75_console.selectors"
        ],
        "version": "0.5"
    },
    "consoleappmath": {
        "cmdline": [],
        "modules": [
            "consoleAppMath.app",
            "consoleAppMath.functions"
        ],
        "version": "1.0"
    },
    "consoleargs": {
        "cmdline": [],
        "modules": [
            "consoleargs"
        ],
        "version": "0.4"
    },
    "consolebitly": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "consolechange": {
        "cmdline": [],
        "modules": [
            "consolechange"
        ],
        "version": "0.0.2"
    },
    "consoleiotools": {
        "cmdline": [],
        "modules": [],
        "version": "2.0.3"
    },
    "consoleitunesplayer": {
        "cmdline": [
            "itunes"
        ],
        "modules": [
            "setup"
        ],
        "version": "0.1.3"
    },
    "consolelog": {
        "cmdline": [],
        "modules": [
            "consoleLog",
            "consoleLog.__version__",
            "consoleLog.consoleLog",
            "consoleLog.io",
            "consoleLog.progressBar",
            "consoleLog.shellColor",
            "consoleLog.slot"
        ],
        "version": "0.2.4"
    },
    "consolemd": {
        "cmdline": [],
        "modules": [
            "consolemd",
            "consolemd.cli",
            "consolemd.colormap",
            "consolemd.escapeseq",
            "consolemd.logger",
            "consolemd.renderer",
            "consolemd.styler"
        ],
        "version": "0.3.1"
    },
    "consolemsg": {
        "cmdline": [],
        "modules": [
            "consolemsg"
        ],
        "version": "0.1"
    },
    "consoleprinter": {
        "cmdline": [],
        "modules": [
            "consoleprinter"
        ],
        "version": "90"
    },
    "consoleserver": {
        "cmdline": [],
        "modules": [
            "consoleserver",
            "consoleserver.config",
            "consoleserver.consolecollection",
            "consoleserver.consolehandler",
            "consoleserver.consoleserver",
            "consoleserver.main",
            "consoleserver.monitoredconsolecollection",
            "consoleserver.ssh",
            "consoleserver.ssh_protocol"
        ],
        "version": "1.0.2"
    },
    "consoletk": {
        "cmdline": [],
        "modules": [
            "consoletk"
        ],
        "version": "1.0"
    },
    "consolor": {
        "cmdline": [],
        "modules": [
            "consolor",
            "consolor.consolor"
        ],
        "version": "0.1.2"
    },
    "consonance": {
        "cmdline": [
            "consonance_fetch.py"
        ],
        "modules": [
            "consonance",
            "consonance.admin",
            "consonance.fetch",
            "consonance.models",
            "consonance.templatetags",
            "consonance.templatetags.consonance_filters",
            "consonance.views"
        ],
        "version": "0.2"
    },
    "conssert": {
        "cmdline": [],
        "modules": [
            "conssert",
            "conssert.navigate"
        ],
        "version": "0.2.11"
    },
    "const": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "constant": {
        "cmdline": [],
        "modules": [
            "constant",
            "constant.base",
            "constant.const",
            "constant.exc",
            "constant.pkg",
            "constant.pkg.class_metadata",
            "constant.pkg.name_convention",
            "constant.pkg.nameddict",
            "constant.pkg.pylru",
            "constant.pkg.sixmini",
            "constant.test",
            "constant.test.creature",
            "constant.test.creature_data",
            "constant.test.dev",
            "constant.test.dev.food_data_example",
            "constant.test.dev.food_example",
            "constant.test.food",
            "constant.test.food_data",
            "constant.test.inventory",
            "constant.test.inventory_data",
            "constant.test.item",
            "constant.test.item_data",
            "constant.test.validate_implementation",
            "constant.tpl",
            "constant.tpl.class_def",
            "constant.tpl.env",
            "constant.zzz_manual_install"
        ],
        "version": "0.0.4"
    },
    "constant-contact-python": {
        "cmdline": [],
        "modules": [
            "constantcontact"
        ],
        "version": "0.1.0"
    },
    "constant-listener": {
        "cmdline": [],
        "modules": [
            "constant_listener",
            "constant_listener.constant_listener",
            "constant_listener.g2p",
            "constant_listener.pyspeech",
            "constant_listener.pyspeechTest",
            "constant_listener.vocabcompiler"
        ],
        "version": "0.0.4"
    },
    "constant-time-compare": {
        "cmdline": [],
        "modules": [],
        "version": "1.3"
    },
    "constantcontact": {
        "cmdline": [],
        "modules": [
            "constantcontact",
            "constantcontact.accountservice",
            "constantcontact.activityservice",
            "constantcontact.baseservice",
            "constantcontact.components",
            "constantcontact.components.account_info",
            "constantcontact.components.activity_report",
            "constantcontact.components.activity_status",
            "constantcontact.components.address",
            "constantcontact.components.attribute",
            "constantcontact.components.billing_plan",
            "constantcontact.components.campaign",
            "constantcontact.components.contact",
            "constantcontact.components.contact_list",
            "constantcontact.components.domain_lambda",
            "constantcontact.components.email_address",
            "constantcontact.components.event",
            "constantcontact.components.fee",
            "constantcontact.components.item",
            "constantcontact.components.multipart_activity",
            "constantcontact.components.multipart_file",
            "constantcontact.components.mylibrary_file",
            "constantcontact.components.mylibrary_folder",
            "constantcontact.components.partner_account",
            "constantcontact.components.promocode",
            "constantcontact.components.registrant",
            "constantcontact.components.result_set",
            "constantcontact.components.schedule",
            "constantcontact.components.tracking_summary",
            "constantcontact.constantcontact",
            "constantcontact.contactservice",
            "constantcontact.emailmarketingservice",
            "constantcontact.eventspotservice",
            "constantcontact.listservice",
            "constantcontact.mylibraryservice",
            "constantcontact.partnerservice"
        ],
        "version": "0.3.3"
    },
    "constantcontact-unofficial": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "constantine": {
        "cmdline": [],
        "modules": [
            "Constantine",
            "Constantine.auto_poster",
            "Constantine.main",
            "Constantine.utils"
        ],
        "version": "1.2.3"
    },
    "constantly": {
        "cmdline": [],
        "modules": [
            "constantly",
            "constantly._constants",
            "constantly._version"
        ],
        "version": "15.1.0"
    },
    "constants": {
        "cmdline": [],
        "modules": [
            "constants"
        ],
        "version": "0.6.0"
    },
    "constants-manager": {
        "cmdline": [],
        "modules": [
            "constants_manager",
            "constants_manager.constants_manager"
        ],
        "version": "1.0.1"
    },
    "constchoices": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "constellation-base": {
        "cmdline": [],
        "modules": [
            "constellation_base",
            "constellation_base.admin",
            "constellation_base.apps",
            "constellation_base.forms",
            "constellation_base.migrations",
            "constellation_base.migrations.0001_initial",
            "constellation_base.migrations.0002_remove_sidebar",
            "constellation_base.migrations.0003_localgroupaclentry",
            "constellation_base.models",
            "constellation_base.signals",
            "constellation_base.tests",
            "constellation_base.urls",
            "constellation_base.views"
        ],
        "version": "0.1.5"
    },
    "constellation-devicemanager": {
        "cmdline": [],
        "modules": [
            "constellation_devicemanager",
            "constellation_devicemanager.admin",
            "constellation_devicemanager.apps",
            "constellation_devicemanager.forms",
            "constellation_devicemanager.migrations",
            "constellation_devicemanager.migrations.0001_initial",
            "constellation_devicemanager.migrations.0002_device_hostname",
            "constellation_devicemanager.models",
            "constellation_devicemanager.urls",
            "constellation_devicemanager.validators",
            "constellation_devicemanager.views"
        ],
        "version": "0.1.3"
    },
    "constellation-forms": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "constellation-orderboard": {
        "cmdline": [],
        "modules": [
            "constellation_orderboard",
            "constellation_orderboard.admin",
            "constellation_orderboard.apps",
            "constellation_orderboard.forms",
            "constellation_orderboard.migrations",
            "constellation_orderboard.migrations.0001_initial",
            "constellation_orderboard.migrations.0002_units",
            "constellation_orderboard.migrations.0003_permissions",
            "constellation_orderboard.models",
            "constellation_orderboard.tests",
            "constellation_orderboard.urls",
            "constellation_orderboard.util",
            "constellation_orderboard.views"
        ],
        "version": "0.2.1"
    },
    "constellation-vote": {
        "cmdline": [],
        "modules": [
            "constellation_vote",
            "constellation_vote.migrations",
            "constellation_vote.migrations.0001_initial",
            "constellation_vote.migrations.0002_pollstart",
            "constellation_vote.models",
            "constellation_vote.templatetags",
            "constellation_vote.templatetags.get_item",
            "constellation_vote.urls",
            "constellation_vote.utils",
            "constellation_vote.views"
        ],
        "version": "0.1.2"
    },
    "constellations": {
        "cmdline": [],
        "modules": [
            "constellations",
            "constellations.config",
            "constellations.discovery",
            "constellations.ducttape",
            "constellations.gossip_node",
            "constellations.key_value",
            "constellations.key_value_client",
            "constellations.message",
            "constellations.node",
            "constellations.peer_node",
            "constellations.socket_transport"
        ],
        "version": "0.0.3"
    },
    "constractor": {
        "cmdline": [
            "constractor_predict.py",
            "constractor_train.py"
        ],
        "modules": [
            "constractor",
            "constractor.common",
            "constractor.features",
            "constractor.parser",
            "constractor.test",
            "constractor.test.test_common",
            "constractor.train"
        ],
        "version": "0.1.0"
    },
    "constrainingorder": {
        "cmdline": [],
        "modules": [
            "constrainingorder",
            "constrainingorder.constraints",
            "constrainingorder.sets",
            "constrainingorder.solver",
            "constrainingorder.variables"
        ],
        "version": "0.1"
    },
    "constraint": {
        "cmdline": [],
        "modules": [
            "logilab.constraint",
            "logilab.constraint.__pkginfo__",
            "logilab.constraint.distributors",
            "logilab.constraint.fd",
            "logilab.constraint.fi",
            "logilab.constraint.interfaces",
            "logilab.constraint.propagation",
            "logilab.constraint.psyco_wrapper",
            "logilab.constraint.test.__profile__",
            "logilab.constraint.test.runtests",
            "logilab.constraint.test.test_constraints",
            "logilab.constraint.test.test_distributors",
            "logilab.constraint.test.test_domains",
            "logilab.constraint.test.test_fi",
            "logilab.constraint.test.test_propagation",
            "logilab.constraint.test.test_validation"
        ],
        "version": "0.4.1"
    },
    "constraints": {
        "cmdline": [],
        "modules": [
            "constraints",
            "constraints.constraints"
        ],
        "version": "0.9.5"
    },
    "constraintslib": {
        "cmdline": [],
        "modules": [
            "constraints",
            "constraints.constraints",
            "constraints.proxy",
            "constraints.util"
        ],
        "version": "0.1"
    },
    "constrict": {
        "cmdline": [],
        "modules": [
            "constrict"
        ],
        "version": "1.0.0"
    },
    "construct": {
        "cmdline": [],
        "modules": [
            "construct",
            "construct.core",
            "construct.debug",
            "construct.examples",
            "construct.examples.formats",
            "construct.examples.formats.data",
            "construct.examples.formats.data.cap",
            "construct.examples.formats.data.snoop",
            "construct.examples.formats.executable",
            "construct.examples.formats.executable.elf32",
            "construct.examples.formats.executable.pe32",
            "construct.examples.formats.filesystem",
            "construct.examples.formats.filesystem.ext2",
            "construct.examples.formats.filesystem.fat16",
            "construct.examples.formats.filesystem.mbr",
            "construct.examples.formats.graphics",
            "construct.examples.formats.graphics.bmp",
            "construct.examples.formats.graphics.emf",
            "construct.examples.formats.graphics.gif",
            "construct.examples.formats.graphics.png",
            "construct.examples.formats.graphics.wmf",
            "construct.examples.protocols",
            "construct.examples.protocols.ipstack",
            "construct.expr",
            "construct.lib",
            "construct.lib.binary",
            "construct.lib.bitstream",
            "construct.lib.container",
            "construct.lib.hex",
            "construct.lib.py3compat",
            "construct.version"
        ],
        "version": "2.8.12"
    },
    "constructible": {
        "cmdline": [],
        "modules": [
            "constructible"
        ],
        "version": "0.4.1"
    },
    "constructive-geometries": {
        "cmdline": [],
        "modules": [
            "constructive_geometries"
        ],
        "version": "0.4.1"
    },
    "constructor": {
        "cmdline": [],
        "modules": [
            "constructor",
            "constructor.AWS",
            "constructor.Infrastructure",
            "constructor.Instance",
            "constructor.LocalMysql",
            "constructor.SecurityGroup",
            "constructor.SymfonyProject",
            "constructor.cli"
        ],
        "version": "0.1.0"
    },
    "constructor-io": {
        "cmdline": [],
        "modules": [
            "constructor_io",
            "constructor_io.constructor_io"
        ],
        "version": "0.0.4"
    },
    "constructs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "construi": {
        "cmdline": [],
        "modules": [
            "construi",
            "construi.__version__",
            "construi.cli",
            "construi.config",
            "construi.console",
            "construi.target"
        ],
        "version": "45"
    },
    "consts": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "consul": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "consul-announcer": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "consul-cleanup": {
        "cmdline": [
            "consul-cleanup"
        ],
        "modules": [],
        "version": "0.0.1"
    },
    "consul-contents": {
        "cmdline": [],
        "modules": [
            "consul_contents",
            "consul_contents.consul"
        ],
        "version": "1.0.0"
    },
    "consul-ha": {
        "cmdline": [],
        "modules": [
            "consul_ha",
            "consul_ha.consul_ha"
        ],
        "version": "0.1.43"
    },
    "consul-kv": {
        "cmdline": [],
        "modules": [
            "consul_kv",
            "consul_kv.api",
            "consul_kv.serializer",
            "consul_kv.settings",
            "consul_kv.utils"
        ],
        "version": "0.4"
    },
    "consul-locator": {
        "cmdline": [],
        "modules": [
            "locator"
        ],
        "version": "0.1.6"
    },
    "consul-lock": {
        "cmdline": [],
        "modules": [
            "consul_lock",
            "consul_lock.defaults",
            "consul_lock.lock_impl"
        ],
        "version": "0.1.6"
    },
    "consul-service-discovery": {
        "cmdline": [],
        "modules": [
            "consul"
        ],
        "version": "0.1.2"
    },
    "consul2nginx": {
        "cmdline": [],
        "modules": [
            "consul2nginx",
            "consul2nginx.cli",
            "consul2nginx.consul",
            "consul2nginx.nginx"
        ],
        "version": "0.0.20"
    },
    "consul2sns": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "consular": {
        "cmdline": [],
        "modules": [
            "consular",
            "consular.cli",
            "consular.clients",
            "consular.main",
            "consular.tests",
            "consular.tests.test_clients",
            "consular.tests.test_main"
        ],
        "version": "1.3.0"
    },
    "consulate": {
        "cmdline": [],
        "modules": [
            "consulate",
            "consulate.adapters",
            "consulate.api",
            "consulate.api.acl",
            "consulate.api.agent",
            "consulate.api.base",
            "consulate.api.catalog",
            "consulate.api.event",
            "consulate.api.health",
            "consulate.api.kv",
            "consulate.api.session",
            "consulate.api.status",
            "consulate.cli",
            "consulate.exceptions",
            "consulate.utils"
        ],
        "version": "0.6.0"
    },
    "consulbacks3": {
        "cmdline": [
            "consulbacks3",
            "consulbacks3-configure",
            "s3upload.py"
        ],
        "modules": [
            "consulbacks3",
            "consulbacks3.s3upload"
        ],
        "version": "0.0.1.5"
    },
    "consulchecknagiosplugin": {
        "cmdline": [],
        "modules": [
            "consulchecknagiosplugin",
            "consulchecknagiosplugin.context",
            "consulchecknagiosplugin.format",
            "consulchecknagiosplugin.main",
            "consulchecknagiosplugin.resources"
        ],
        "version": "1.1.1"
    },
    "consulconf": {
        "cmdline": [],
        "modules": [
            "consulconf",
            "consulconf.main",
            "consulconf.util"
        ],
        "version": "0.0.11"
    },
    "consuler": {
        "cmdline": [],
        "modules": [
            "consuler",
            "consuler.consul"
        ],
        "version": "0.0.1"
    },
    "consume": {
        "cmdline": [],
        "modules": [
            "consume"
        ],
        "version": "0.1.0"
    },
    "consumercheck": {
        "cmdline": [],
        "modules": [
            "ConsumerCheck",
            "ConsumerCheck.about_consumercheck",
            "ConsumerCheck.basic_stat_gui",
            "ConsumerCheck.basic_stat_model",
            "ConsumerCheck.cc_config",
            "ConsumerCheck.cc_start",
            "ConsumerCheck.combination_table",
            "ConsumerCheck.conjoint_base",
            "ConsumerCheck.conjoint_gui",
            "ConsumerCheck.conjoint_machine",
            "ConsumerCheck.conjoint_model",
            "ConsumerCheck.cross_val",
            "ConsumerCheck.dataset",
            "ConsumerCheck.dataset_container",
            "ConsumerCheck.dataset_matrix",
            "ConsumerCheck.dialogs",
            "ConsumerCheck.ds_matrix_view",
            "ConsumerCheck.ds_slicer_view",
            "ConsumerCheck.ds_table_view",
            "ConsumerCheck.ds_ui",
            "ConsumerCheck.exception_handler",
            "ConsumerCheck.importer_file_base",
            "ConsumerCheck.importer_interfaces",
            "ConsumerCheck.importer_main",
            "ConsumerCheck.importer_text_file",
            "ConsumerCheck.importer_xls_file",
            "ConsumerCheck.main_ui",
            "ConsumerCheck.pca",
            "ConsumerCheck.pca_gui",
            "ConsumerCheck.pca_model",
            "ConsumerCheck.pcr",
            "ConsumerCheck.plot_base",
            "ConsumerCheck.plot_conjoint",
            "ConsumerCheck.plot_ev_line",
            "ConsumerCheck.plot_histogram",
            "ConsumerCheck.plot_interface",
            "ConsumerCheck.plot_pc_scatter",
            "ConsumerCheck.plot_sector",
            "ConsumerCheck.plot_windows",
            "ConsumerCheck.plscr_gui",
            "ConsumerCheck.plscr_model",
            "ConsumerCheck.plscr_picker",
            "ConsumerCheck.plsr",
            "ConsumerCheck.plugin_base",
            "ConsumerCheck.plugin_tree_helper",
            "ConsumerCheck.prefmap_gui",
            "ConsumerCheck.prefmap_model",
            "ConsumerCheck.prefmap_picker",
            "ConsumerCheck.splash_screen",
            "ConsumerCheck.statTools",
            "ConsumerCheck.tests",
            "ConsumerCheck.tests.basic_stat_test",
            "ConsumerCheck.tests.cc_config_test",
            "ConsumerCheck.tests.colorpalette_test",
            "ConsumerCheck.tests.conftest",
            "ConsumerCheck.tests.conjoint_test",
            "ConsumerCheck.tests.dataset_test",
            "ConsumerCheck.tests.ds_container_test",
            "ConsumerCheck.tests.ev_line_test",
            "ConsumerCheck.tests.importer_test",
            "ConsumerCheck.tests.matrix_view_test",
            "ConsumerCheck.tests.pc_scatter_test",
            "ConsumerCheck.tests.pca_test",
            "ConsumerCheck.tests.plot_conjoint_test",
            "ConsumerCheck.tests.plot_window_test",
            "ConsumerCheck.tests.prefmap_test",
            "ConsumerCheck.tests.runtime_env_test",
            "ConsumerCheck.ui_results",
            "ConsumerCheck.ui_results_new",
            "ConsumerCheck.ui_tab_container_tree",
            "ConsumerCheck.utilities",
            "ConsumerCheck.window_helper"
        ],
        "version": "1.3.3"
    },
    "consumerism": {
        "cmdline": [],
        "modules": [
            "consumerism",
            "consumerism.consumer",
            "consumerism.dead_letter",
            "consumerism.debug",
            "consumerism.message",
            "consumerism.persist",
            "consumerism.processor",
            "consumerism.resource",
            "consumerism.resource_factory",
            "consumerism.retry",
            "consumerism.utils"
        ],
        "version": "0.3.11"
    },
    "consus": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "contact-form": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "contact-importer": {
        "cmdline": [],
        "modules": [
            "contact_importer",
            "contact_importer.lib",
            "contact_importer.lib.oauth1",
            "contact_importer.providers",
            "contact_importer.providers.base",
            "contact_importer.providers.google",
            "contact_importer.providers.live",
            "contact_importer.providers.yahoo"
        ],
        "version": "0.0.1"
    },
    "contact-widget": {
        "cmdline": [],
        "modules": [
            "contact_widget",
            "contact_widget.admin",
            "contact_widget.forms",
            "contact_widget.models",
            "contact_widget.urls",
            "contact_widget.views"
        ],
        "version": "1.0.0"
    },
    "contactbox": {
        "cmdline": [],
        "modules": [
            "contactbox",
            "contactbox.admin",
            "contactbox.forms",
            "contactbox.management",
            "contactbox.management.commands",
            "contactbox.management.commands.remind_contact",
            "contactbox.migrations",
            "contactbox.migrations.0001_initial",
            "contactbox.models",
            "contactbox.test_project",
            "contactbox.test_project.settings",
            "contactbox.test_project.urls",
            "contactbox.test_runner",
            "contactbox.tests",
            "contactbox.tests.test_main",
            "contactbox.views"
        ],
        "version": "0.1.8"
    },
    "contactbwc": {
        "cmdline": [],
        "modules": [
            "contactbwc",
            "contactbwc.actions",
            "contactbwc.config",
            "contactbwc.config.settings",
            "contactbwc.forms",
            "contactbwc.helpers",
            "contactbwc.model",
            "contactbwc.model.entities",
            "contactbwc.tasks",
            "contactbwc.tasks.init_db",
            "contactbwc.views",
            "contactbwc_ta",
            "contactbwc_ta.application",
            "contactbwc_ta.config",
            "contactbwc_ta.config.settings",
            "contactbwc_ta.config.site_settings",
            "contactbwc_ta.tests",
            "contactbwc_ta.tests.test_functional",
            "contactbwc_ta.tests.test_model"
        ],
        "version": "0.2.0"
    },
    "contactcenter-broadcaster": {
        "cmdline": [],
        "modules": [
            "contactcenter_broadcaster",
            "contactcenter_broadcaster.asterisk",
            "contactcenter_broadcaster.configuration",
            "contactcenter_broadcaster.controller",
            "contactcenter_broadcaster.database",
            "contactcenter_broadcaster.exception",
            "contactcenter_broadcaster.logger",
            "contactcenter_broadcaster.service",
            "contactcenter_broadcaster.tool",
            "contactcenter_broadcaster.websocket",
            "contactcenter_broadcaster.worker"
        ],
        "version": "0.0.1"
    },
    "contactgrabber": {
        "cmdline": [],
        "modules": [
            "contactgrabber",
            "contactgrabber.base",
            "contactgrabber.gmail",
            "contactgrabber.main",
            "contactgrabber.rediff",
            "contactgrabber.yahoo"
        ],
        "version": "0.1"
    },
    "contactpp": {
        "cmdline": [],
        "modules": [
            "contactpp",
            "contactpp.outputs",
            "contactpp.solve",
            "contactpp.swell",
            "contactpp.troullier",
            "contactpp.utp"
        ],
        "version": "1.1"
    },
    "contactstudiolib": {
        "cmdline": [],
        "modules": [
            "contactstudiolib",
            "contactstudiolib.avatar",
            "contactstudiolib.cds"
        ],
        "version": "0.1"
    },
    "contactus": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "contactvis": {
        "cmdline": [
            "plot_contact_map"
        ],
        "modules": [
            "contactvis",
            "contactvis.get_avg_contact_distance",
            "contactvis.get_avg_pconsc_score",
            "contactvis.parsing",
            "contactvis.parsing.parse_contacts",
            "contactvis.parsing.parse_fasta",
            "contactvis.parsing.parse_pdb",
            "contactvis.parsing.parse_psipred",
            "contactvis.plot_contact_map",
            "contactvis.sort_contacts",
            "contactvis.test",
            "contactvis.test.test"
        ],
        "version": "0.1.6"
    },
    "contain": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "containator": {
        "cmdline": [],
        "modules": [
            "containator",
            "containator.containator",
            "containator.defs",
            "containator.utils",
            "containator.volume"
        ],
        "version": "0.0.2"
    },
    "container-decrypter": {
        "cmdline": [],
        "modules": [
            "container_decrypter",
            "container_decrypter.dlc"
        ],
        "version": "1.4"
    },
    "container-transform": {
        "cmdline": [],
        "modules": [
            "container_transform",
            "container_transform.chronos",
            "container_transform.client",
            "container_transform.compose",
            "container_transform.converter",
            "container_transform.ecs",
            "container_transform.kubernetes",
            "container_transform.marathon",
            "container_transform.schema",
            "container_transform.systemd",
            "container_transform.transformer",
            "container_transform.version"
        ],
        "version": "1.1.5"
    },
    "container-whooshalchemyplus": {
        "cmdline": [],
        "modules": [
            "container_whooshalchemyplus"
        ],
        "version": "0.7.5.post3"
    },
    "containerctl": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.2"
    },
    "containerdiff": {
        "cmdline": [],
        "modules": [
            "containerdiff",
            "containerdiff.filter",
            "containerdiff.modules",
            "containerdiff.modules.files",
            "containerdiff.modules.history",
            "containerdiff.modules.metadata",
            "containerdiff.modules.packages",
            "containerdiff.package_managers",
            "containerdiff.run",
            "containerdiff.undocker"
        ],
        "version": "0.4"
    },
    "containerregistry": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "containers": {
        "cmdline": [],
        "modules": [
            "containers"
        ],
        "version": "0.0.3"
    },
    "containeye": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "containmentunit": {
        "cmdline": [],
        "modules": [
            "containmentUnit",
            "containmentUnit.config",
            "containmentUnit.config.environment",
            "containmentUnit.config.middleware",
            "containmentUnit.config.routing",
            "containmentUnit.controllers",
            "containmentUnit.controllers.casperjs",
            "containmentUnit.controllers.chart",
            "containmentUnit.controllers.combine",
            "containmentUnit.controllers.error",
            "containmentUnit.controllers.migration",
            "containmentUnit.controllers.results",
            "containmentUnit.controllers.superposed",
            "containmentUnit.controllers.wraith",
            "containmentUnit.lib",
            "containmentUnit.lib.HAR",
            "containmentUnit.lib.Math",
            "containmentUnit.lib.MongoHandler",
            "containmentUnit.lib.app_globals",
            "containmentUnit.lib.base",
            "containmentUnit.lib.helpers",
            "containmentUnit.lib.proxyPortManager",
            "containmentUnit.tests",
            "containmentUnit.tests.functional",
            "containmentUnit.tests.functional.test_chart",
            "containmentUnit.tests.functional.test_combine",
            "containmentUnit.tests.functional.test_migration",
            "containmentUnit.tests.functional.test_results",
            "containmentUnit.tests.functional.test_superposed",
            "containmentUnit.tests.test_models",
            "containmentUnit.websetup"
        ],
        "version": "1.0.14"
    },
    "contamdetect": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "contemarlo": {
        "cmdline": [],
        "modules": [
            "contemarlo",
            "contemarlo.Distribution",
            "contemarlo.Resolver"
        ],
        "version": "1.0.0"
    },
    "contemplate": {
        "cmdline": [],
        "modules": [
            "contemplate",
            "contemplate.engine",
            "contemplate.engine.format",
            "contemplate.parser",
            "contemplate.parser.env",
            "contemplate.parser.json",
            "contemplate.source",
            "contemplate.source.file"
        ],
        "version": "0.1"
    },
    "contender": {
        "cmdline": [],
        "modules": [
            "contender",
            "contender.backends",
            "contender.backends.github",
            "contender.commands",
            "contender.utils"
        ],
        "version": "0.2.2"
    },
    "content": {
        "cmdline": [],
        "modules": [
            "content"
        ],
        "version": "0.1.0"
    },
    "content-hub-python": {
        "cmdline": [],
        "modules": [
            "content_hub_python",
            "content_hub_python.client",
            "content_hub_python.common",
            "content_hub_python.content_hub"
        ],
        "version": "1.0.0a0"
    },
    "content-io": {
        "cmdline": [],
        "modules": [
            "cio",
            "cio.api",
            "cio.backends",
            "cio.backends.base",
            "cio.backends.exceptions",
            "cio.backends.locmem",
            "cio.backends.locmem.backend",
            "cio.backends.sqlite",
            "cio.backends.sqlite.backend",
            "cio.conf",
            "cio.conf.default_settings",
            "cio.conf.exceptions",
            "cio.environment",
            "cio.node",
            "cio.pipeline",
            "cio.pipeline.buffer",
            "cio.pipeline.handler",
            "cio.pipeline.history",
            "cio.pipeline.pipes",
            "cio.pipeline.pipes.base",
            "cio.pipeline.pipes.cache",
            "cio.pipeline.pipes.meta",
            "cio.pipeline.pipes.plugin",
            "cio.pipeline.pipes.storage",
            "cio.plugins",
            "cio.plugins.base",
            "cio.plugins.exceptions",
            "cio.plugins.md",
            "cio.plugins.txt",
            "cio.utils",
            "cio.utils.formatters",
            "cio.utils.imports",
            "cio.utils.thread",
            "cio.utils.uri",
            "tests",
            "tests.test_api",
            "tests.test_app",
            "tests.test_cache",
            "tests.test_plugins",
            "tests.test_storage",
            "tests.test_utils"
        ],
        "version": "1.2.2"
    },
    "content-links": {
        "cmdline": [],
        "modules": [
            "content_links",
            "content_links.models",
            "content_links.test_settings",
            "content_links.tests",
            "content_links.tests.models",
            "content_links.tests.tests",
            "content_links.views"
        ],
        "version": "0.1.2"
    },
    "contentbus": {
        "cmdline": [],
        "modules": [
            "contentbus",
            "contentbus.exceptions",
            "contentbus.match",
            "contentbus.match.operator",
            "contentbus.version"
        ],
        "version": "0.0.1"
    },
    "contentcollider": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "contentful": {
        "cmdline": [],
        "modules": [
            "contentful",
            "contentful.array",
            "contentful.asset",
            "contentful.client",
            "contentful.content_type",
            "contentful.content_type_cache",
            "contentful.content_type_field",
            "contentful.content_type_field_types",
            "contentful.deleted_asset",
            "contentful.deleted_entry",
            "contentful.entry",
            "contentful.errors",
            "contentful.locale",
            "contentful.resource",
            "contentful.resource_builder",
            "contentful.space",
            "contentful.sync_page",
            "contentful.utils"
        ],
        "version": "1.2.0"
    },
    "contentful-api": {
        "cmdline": [],
        "modules": [
            "contentful",
            "contentful.asset",
            "contentful.base",
            "contentful.content_type",
            "contentful.entry",
            "contentful.space"
        ],
        "version": "0.1.3"
    },
    "contentful-management": {
        "cmdline": [],
        "modules": [
            "contentful_management",
            "contentful_management.api_key",
            "contentful_management.api_keys_proxy",
            "contentful_management.asset",
            "contentful_management.assets_proxy",
            "contentful_management.client",
            "contentful_management.client_proxy",
            "contentful_management.content_type",
            "contentful_management.content_type_editor_interfaces_proxy",
            "contentful_management.content_type_entries_proxy",
            "contentful_management.content_type_field",
            "contentful_management.content_type_field_types",
            "contentful_management.content_type_field_validation",
            "contentful_management.content_type_resource_proxy",
            "contentful_management.content_types_proxy",
            "contentful_management.editor_interface",
            "contentful_management.editor_interfaces_proxy",
            "contentful_management.entries_proxy",
            "contentful_management.entry",
            "contentful_management.entry_resource_proxy",
            "contentful_management.entry_snapshots_proxy",
            "contentful_management.errors",
            "contentful_management.locale",
            "contentful_management.locales_proxy",
            "contentful_management.resource",
            "contentful_management.resource_builder",
            "contentful_management.role",
            "contentful_management.roles_proxy",
            "contentful_management.snapshot",
            "contentful_management.snapshots_proxy",
            "contentful_management.space",
            "contentful_management.space_api_keys_proxy",
            "contentful_management.space_assets_proxy",
            "contentful_management.space_content_types_proxy",
            "contentful_management.space_entries_proxy",
            "contentful_management.space_locales_proxy",
            "contentful_management.space_resource_proxy",
            "contentful_management.space_roles_proxy",
            "contentful_management.space_uploads_proxy",
            "contentful_management.space_webhooks_proxy",
            "contentful_management.spaces_proxy",
            "contentful_management.upload",
            "contentful_management.uploads_proxy",
            "contentful_management.utils",
            "contentful_management.webhook",
            "contentful_management.webhooks_proxy"
        ],
        "version": "1.1.0"
    },
    "contentful.py": {
        "cmdline": [],
        "modules": [
            "contentful",
            "contentful.cda",
            "contentful.cda.client",
            "contentful.cda.const",
            "contentful.cda.errors",
            "contentful.cda.fields",
            "contentful.cda.resources",
            "contentful.cda.serialization",
            "contentful.cda.utils",
            "contentful.cda.version"
        ],
        "version": "0.9.3"
    },
    "contentlet": {
        "cmdline": [],
        "modules": [
            "contentlet",
            "contentlet.configuration",
            "contentlet.expression",
            "contentlet.interfaces",
            "contentlet.provider",
            "contentlet.tests",
            "contentlet.tests.test_configuration",
            "contentlet.tests.test_expression",
            "contentlet.tests.test_provider",
            "contentlet.tests.test_zcml",
            "contentlet.zcml"
        ],
        "version": "0.1.1"
    },
    "contentratings": {
        "cmdline": [],
        "modules": [
            "contentratings",
            "contentratings.bbb",
            "contentratings.browser",
            "contentratings.browser.aggregator",
            "contentratings.browser.base_vocabs",
            "contentratings.browser.basic",
            "contentratings.browser.bbb",
            "contentratings.browser.bbb.interfaces",
            "contentratings.browser.interfaces",
            "contentratings.browser.tests",
            "contentratings.browser.traverser",
            "contentratings.browser.utils",
            "contentratings.category",
            "contentratings.events",
            "contentratings.interfaces",
            "contentratings.metaconfigure",
            "contentratings.metadirectives",
            "contentratings.migrations",
            "contentratings.permissions",
            "contentratings.plone_extras",
            "contentratings.plone_extras.catalog_stuff",
            "contentratings.rating",
            "contentratings.storage",
            "contentratings.tests",
            "contentratings.tests.test_category",
            "contentratings.tests.test_rating"
        ],
        "version": "1.2.1"
    },
    "contents": {
        "cmdline": [],
        "modules": [
            "contents"
        ],
        "version": "0.1.0"
    },
    "contenttransformer": {
        "cmdline": [],
        "modules": [
            "contenttransformer",
            "contenttransformer.app",
            "contenttransformer.factory",
            "contenttransformer.transformers",
            "contenttransformer.utils",
            "contenttransformer.web"
        ],
        "version": "0.3.3"
    },
    "contestms": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "contex": {
        "cmdline": [],
        "modules": [
            "contex",
            "contex.analyze_regex"
        ],
        "version": "3.1.1"
    },
    "context": {
        "cmdline": [],
        "modules": [
            "context"
        ],
        "version": "0.0"
    },
    "context-io-2": {
        "cmdline": [],
        "modules": [
            "contextio",
            "contextio.util"
        ],
        "version": "2.0.1"
    },
    "context-tools": {
        "cmdline": [],
        "modules": [
            "context_tools"
        ],
        "version": "0.2"
    },
    "context.api": {
        "cmdline": [],
        "modules": [
            "context",
            "context.api"
        ],
        "version": "0.0"
    },
    "contextdecorator": {
        "cmdline": [],
        "modules": [
            "contextdecorator"
        ],
        "version": "0.10.0"
    },
    "contexter": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.4"
    },
    "contextily": {
        "cmdline": [],
        "modules": [
            "contextily",
            "contextily.tile_providers"
        ],
        "version": "0.9.2"
    },
    "contextio": {
        "cmdline": [],
        "modules": [
            "contextio",
            "contextio.contextio",
            "contextio.lib",
            "contextio.lib.api",
            "contextio.lib.errors",
            "contextio.lib.helpers",
            "contextio.lib.lite",
            "contextio.lib.resources",
            "contextio.lib.resources.account",
            "contextio.lib.resources.base_resource",
            "contextio.lib.resources.connect_token",
            "contextio.lib.resources.contact",
            "contextio.lib.resources.discovery",
            "contextio.lib.resources.email_account",
            "contextio.lib.resources.email_address",
            "contextio.lib.resources.file",
            "contextio.lib.resources.folder",
            "contextio.lib.resources.message",
            "contextio.lib.resources.oauth_provider",
            "contextio.lib.resources.source",
            "contextio.lib.resources.thread",
            "contextio.lib.resources.user",
            "contextio.lib.resources.webhook",
            "contextio.lib.v2_0",
            "tests",
            "tests.lib",
            "tests.lib.resources",
            "tests.lib.resources.test_account",
            "tests.lib.resources.test_base_resource",
            "tests.lib.resources.test_connect_token",
            "tests.lib.resources.test_contact",
            "tests.lib.resources.test_discovery",
            "tests.lib.resources.test_email_account",
            "tests.lib.resources.test_email_address",
            "tests.lib.resources.test_file",
            "tests.lib.resources.test_folder",
            "tests.lib.resources.test_message",
            "tests.lib.resources.test_oauth_provider",
            "tests.lib.resources.test_source",
            "tests.lib.resources.test_thread",
            "tests.lib.resources.test_user",
            "tests.lib.resources.test_webhook",
            "tests.lib.test_api",
            "tests.lib.test_helpers",
            "tests.lib.test_lite",
            "tests.lib.test_v2_0",
            "tests.test_contextio"
        ],
        "version": "1.12.4"
    },
    "contextional": {
        "cmdline": [],
        "modules": [
            "contextional",
            "contextional.contextional",
            "contextional.test"
        ],
        "version": "0.8.4"
    },
    "contextlib2": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.5"
    },
    "contextlog": {
        "cmdline": [],
        "modules": [
            "contextlog"
        ],
        "version": "0.7"
    },
    "contextminer": {
        "cmdline": [],
        "modules": [
            "contextminer",
            "contextminer.app",
            "contextminer.control",
            "contextminer.db",
            "contextminer.jinja_filters",
            "contextminer.miners",
            "contextminer.runner",
            "contextminer.sources",
            "contextminer.sources.facebook_search",
            "contextminer.sources.youtube_insights",
            "contextminer.sources.youtube_search"
        ],
        "version": "0.1.2"
    },
    "contextmonkey": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "contextpy": {
        "cmdline": [],
        "modules": [
            "contextpy"
        ],
        "version": "1.1"
    },
    "contexts": {
        "cmdline": [],
        "modules": [
            "contexts",
            "contexts.core",
            "contexts.discovery",
            "contexts.errors",
            "contexts.plugin_discovery",
            "contexts.plugin_interface",
            "contexts.plugins",
            "contexts.plugins.argv_forwarder",
            "contexts.plugins.identification",
            "contexts.plugins.identification.decorators",
            "contexts.plugins.identification.filespec",
            "contexts.plugins.importing",
            "contexts.plugins.importing.assertion_rewriting",
            "contexts.plugins.reporting",
            "contexts.plugins.reporting.cli",
            "contexts.plugins.reporting.teamcity",
            "contexts.plugins.reporting.xml",
            "contexts.plugins.shuffling",
            "contexts.plugins.test_target_suppliers",
            "contexts.tools"
        ],
        "version": "0.11.2"
    },
    "contexttimer": {
        "cmdline": [],
        "modules": [
            "contexttimer",
            "contexttimer.timeout"
        ],
        "version": "0.3.3"
    },
    "contextual": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "contextualized": {
        "cmdline": [],
        "modules": [
            "contextualized"
        ],
        "version": "1.3"
    },
    "contexture": {
        "cmdline": [],
        "modules": [
            "contexture",
            "contexture.analytics",
            "contexture.analytics.errorcount",
            "contexture.analytics.es",
            "contexture.backend",
            "contexture.backend.amqp",
            "contexture.backend.amqp_puka",
            "contexture.context",
            "contexture.monitor",
            "contexture.settings",
            "contexture.utils",
            "contexture.utils.db"
        ],
        "version": "1.3.1"
    },
    "contextvars": {
        "cmdline": [],
        "modules": [
            "contextvars"
        ],
        "version": "1.0"
    },
    "continuate": {
        "cmdline": [],
        "modules": [
            "continuate",
            "continuate.krylov",
            "continuate.logger",
            "continuate.newton",
            "continuate.qr",
            "continuate.single_parameter",
            "continuate.test_krylov",
            "continuate.test_newton"
        ],
        "version": "0.2.1"
    },
    "continuation": {
        "cmdline": [],
        "modules": [
            "continuation"
        ],
        "version": "0.1"
    },
    "continued": {
        "cmdline": [],
        "modules": [
            "continued"
        ],
        "version": "1.0"
    },
    "continuity": {
        "cmdline": [],
        "modules": [
            "continuity"
        ],
        "version": "0.10.3"
    },
    "continuous": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "continuous-delivery-with-travis-and-pypi": {
        "cmdline": [],
        "modules": [
            "continuous_delivery_with_travis_and_pypi",
            "continuous_delivery_with_travis_and_pypi._version"
        ],
        "version": "0.8.dev1"
    },
    "continuous-scripts": {
        "cmdline": [],
        "modules": [
            "continuous_scripts"
        ],
        "version": "0.1"
    },
    "continuous-services": {
        "cmdline": [],
        "modules": [
            "continuous_services",
            "continuous_services.service",
            "continuous_services.services",
            "continuous_services.services.email",
            "continuous_services.services.email.form",
            "continuous_services.services.email.service",
            "continuous_services.services.jabber",
            "continuous_services.services.jabber.form",
            "continuous_services.services.jabber.service",
            "continuous_services.services.jabber.utilities",
            "continuous_services.services.skeleton",
            "continuous_services.services.skeleton.form",
            "continuous_services.services.skeleton.service"
        ],
        "version": "0.1.1"
    },
    "continuously": {
        "cmdline": [],
        "modules": [
            "continuous"
        ],
        "version": "0.0.1"
    },
    "continuum": {
        "cmdline": [],
        "modules": [
            "continuum",
            "continuum.continuum",
            "continuum.mail"
        ],
        "version": "0.1.2"
    },
    "contoml": {
        "cmdline": [],
        "modules": [
            "contoml",
            "contoml._version",
            "contoml.elements",
            "contoml.elements.abstracttable",
            "contoml.elements.array",
            "contoml.elements.atomic",
            "contoml.elements.common",
            "contoml.elements.errors",
            "contoml.elements.factory",
            "contoml.elements.inlinetable",
            "contoml.elements.metadata",
            "contoml.elements.table",
            "contoml.elements.tableheader",
            "contoml.elements.test_array",
            "contoml.elements.test_atomic",
            "contoml.elements.test_common",
            "contoml.elements.test_factory",
            "contoml.elements.test_inlinetable",
            "contoml.elements.test_metadata",
            "contoml.elements.test_table",
            "contoml.elements.test_tableheader",
            "contoml.elements.test_traversal",
            "contoml.elements.traversal",
            "contoml.elements.traversal.predicates",
            "contoml.errors",
            "contoml.file",
            "contoml.file.array",
            "contoml.file.cascadedict",
            "contoml.file.file",
            "contoml.file.freshtable",
            "contoml.file.peekableit",
            "contoml.file.raw",
            "contoml.file.structurer",
            "contoml.file.test_cascadedict",
            "contoml.file.test_entries",
            "contoml.file.test_peekableit",
            "contoml.file.test_structurer",
            "contoml.file.toplevels",
            "contoml.lexer",
            "contoml.lexer.test_lexer",
            "contoml.parser",
            "contoml.parser.elementsanitizer",
            "contoml.parser.errors",
            "contoml.parser.parser",
            "contoml.parser.recdesc",
            "contoml.parser.test_parser",
            "contoml.parser.tokenstream",
            "contoml.prettifier",
            "contoml.prettifier.anontableindent",
            "contoml.prettifier.commentspace",
            "contoml.prettifier.linelength",
            "contoml.prettifier.tableassignment",
            "contoml.prettifier.tableindent",
            "contoml.prettifier.tablesep",
            "contoml.prettifier.tablesort",
            "contoml.prettifier.test_anontableindent",
            "contoml.prettifier.test_commentspace",
            "contoml.prettifier.test_linelength",
            "contoml.prettifier.test_tableassignment",
            "contoml.prettifier.test_tableindent",
            "contoml.prettifier.test_tablesep",
            "contoml.prettifier.test_tablesort",
            "contoml.test_prettifier",
            "contoml.test_util",
            "contoml.tokens",
            "contoml.tokens.errors",
            "contoml.tokens.py2toml",
            "contoml.tokens.test_py2toml",
            "contoml.tokens.test_toml2py",
            "contoml.tokens.toml2py",
            "contoml.util"
        ],
        "version": "0.32"
    },
    "contour": {
        "cmdline": [],
        "modules": [
            "contour",
            "contour.contour"
        ],
        "version": "0.2.2"
    },
    "contourviz": {
        "cmdline": [],
        "modules": [
            "contourviz",
            "contourviz.contourviz"
        ],
        "version": "0.2.4"
    },
    "contpl": {
        "cmdline": [
            "contpl"
        ],
        "modules": [],
        "version": "1.0"
    },
    "contra": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "contract": {
        "cmdline": [],
        "modules": [
            "contract"
        ],
        "version": "1.4"
    },
    "contractions": {
        "cmdline": [],
        "modules": [
            "contractions"
        ],
        "version": "0.0.13"
    },
    "contracts": {
        "cmdline": [],
        "modules": [
            "contracts"
        ],
        "version": "0.1.0"
    },
    "contractvm": {
        "cmdline": [],
        "modules": [
            "contractvmd",
            "contractvmd.api",
            "contractvmd.backend",
            "contractvmd.backend.backend",
            "contractvmd.backend.chainsoapi",
            "contractvmd.backend.daemonrpc",
            "contractvmd.backend.node",
            "contractvmd.chain",
            "contractvmd.chain.blockwatch",
            "contractvmd.chain.chain",
            "contractvmd.chain.message",
            "contractvmd.chainstarter",
            "contractvmd.config",
            "contractvmd.contractvmd",
            "contractvmd.dapp",
            "contractvmd.dappman",
            "contractvmd.database",
            "contractvmd.dht",
            "contractvmd.pluginmanager",
            "contractvmd.proto"
        ],
        "version": "0.6.9.16"
    },
    "contrail-api-cli": {
        "cmdline": [],
        "modules": [
            "contrail_api_cli",
            "contrail_api_cli.auth",
            "contrail_api_cli.client",
            "contrail_api_cli.command",
            "contrail_api_cli.commands",
            "contrail_api_cli.commands.cat",
            "contrail_api_cli.commands.du",
            "contrail_api_cli.commands.edit",
            "contrail_api_cli.commands.exec",
            "contrail_api_cli.commands.kv",
            "contrail_api_cli.commands.ln",
            "contrail_api_cli.commands.ls",
            "contrail_api_cli.commands.man",
            "contrail_api_cli.commands.python",
            "contrail_api_cli.commands.relative",
            "contrail_api_cli.commands.rm",
            "contrail_api_cli.commands.schema",
            "contrail_api_cli.commands.shell",
            "contrail_api_cli.commands.tree",
            "contrail_api_cli.completer",
            "contrail_api_cli.context",
            "contrail_api_cli.exceptions",
            "contrail_api_cli.idl_parser",
            "contrail_api_cli.main",
            "contrail_api_cli.manager",
            "contrail_api_cli.parser",
            "contrail_api_cli.resource",
            "contrail_api_cli.schema",
            "contrail_api_cli.style",
            "contrail_api_cli.tests",
            "contrail_api_cli.tests.test_command",
            "contrail_api_cli.tests.test_completer",
            "contrail_api_cli.tests.test_parser",
            "contrail_api_cli.tests.test_path",
            "contrail_api_cli.tests.test_resource",
            "contrail_api_cli.tests.test_schema",
            "contrail_api_cli.tests.test_utils",
            "contrail_api_cli.tests.utils",
            "contrail_api_cli.utils"
        ],
        "version": "0.1.2"
    },
    "contrail-api-cli-extra": {
        "cmdline": [],
        "modules": [
            "contrail_api_cli_extra",
            "contrail_api_cli_extra.clean",
            "contrail_api_cli_extra.clean.orphaned_acl",
            "contrail_api_cli_extra.clean.project",
            "contrail_api_cli_extra.clean.rt",
            "contrail_api_cli_extra.clean.si",
            "contrail_api_cli_extra.fix",
            "contrail_api_cli_extra.fix.fix_fip_locks",
            "contrail_api_cli_extra.fix.fix_sg",
            "contrail_api_cli_extra.fix.fix_subnets",
            "contrail_api_cli_extra.fix.fix_vn_id",
            "contrail_api_cli_extra.fix.fix_zk_ip",
            "contrail_api_cli_extra.migration",
            "contrail_api_cli_extra.migration.host_routes",
            "contrail_api_cli_extra.migration.si",
            "contrail_api_cli_extra.misc",
            "contrail_api_cli_extra.misc.dot",
            "contrail_api_cli_extra.misc.rpf",
            "contrail_api_cli_extra.misc.vm",
            "contrail_api_cli_extra.provision",
            "contrail_api_cli_extra.provision.analytics",
            "contrail_api_cli_extra.provision.bgp_router",
            "contrail_api_cli_extra.provision.config",
            "contrail_api_cli_extra.provision.dns_nameserver",
            "contrail_api_cli_extra.provision.encapsulation",
            "contrail_api_cli_extra.provision.global_asn",
            "contrail_api_cli_extra.provision.linklocal",
            "contrail_api_cli_extra.provision.provision",
            "contrail_api_cli_extra.provision.route_target",
            "contrail_api_cli_extra.provision.service_appliance_set",
            "contrail_api_cli_extra.provision.subnet",
            "contrail_api_cli_extra.provision.vn",
            "contrail_api_cli_extra.provision.vrouter",
            "contrail_api_cli_extra.utils",
            "tests"
        ],
        "version": "0.3"
    },
    "contrail-sansmodels": {
        "cmdline": [],
        "modules": [
            "sans",
            "sans.models",
            "sans.models.AddComponent",
            "sans.models.BCCrystalModel",
            "sans.models.BEPolyelectrolyte",
            "sans.models.BarBellModel",
            "sans.models.BaseComponent",
            "sans.models.BaseModel",
            "sans.models.BinaryHSModel",
            "sans.models.BroadPeakModel",
            "sans.models.CSParallelepipedModel",
            "sans.models.CappedCylinderModel",
            "sans.models.Constant",
            "sans.models.Core2ndMomentModel",
            "sans.models.CoreFourShellModel",
            "sans.models.CoreMultiShellModel",
            "sans.models.CoreShellBicelleModel",
            "sans.models.CoreShellCylinderModel",
            "sans.models.CoreShellEllipsoidModel",
            "sans.models.CoreShellModel",
            "sans.models.CorrLengthModel",
            "sans.models.Cos",
            "sans.models.CylinderModel",
            "sans.models.DABModel",
            "sans.models.DebyeModel",
            "sans.models.DiamCylFunc",
            "sans.models.DiamEllipFunc",
            "sans.models.DisperseModel",
            "sans.models.DivComponent",
            "sans.models.EllipsoidModel",
            "sans.models.EllipticalCylinderModel",
            "sans.models.FCCrystalModel",
            "sans.models.FlexCylEllipXModel",
            "sans.models.FlexibleCylinderModel",
            "sans.models.FractalAbsModel",
            "sans.models.FractalCoreShellModel",
            "sans.models.FractalMode_pymodell",
            "sans.models.FractalModel",
            "sans.models.FuzzySphereModel",
            "sans.models.GaussLorentzGelModel",
            "sans.models.Gaussian",
            "sans.models.GuinierModel",
            "sans.models.GuinierPorodModel",
            "sans.models.HardsphereStructure",
            "sans.models.HayterMSAStructure",
            "sans.models.HollowCylinderModel",
            "sans.models.LamellarFFHGModel",
            "sans.models.LamellarModel",
            "sans.models.LamellarPCrystalModel",
            "sans.models.LamellarPSHGModel",
            "sans.models.LamellarPSModel",
            "sans.models.LineModel",
            "sans.models.LinearPearlsModel",
            "sans.models.LogNormal",
            "sans.models.LorentzModel",
            "sans.models.Lorentzian",
            "sans.models.MassFractalModel",
            "sans.models.MassSurfaceFractal",
            "sans.models.ModelAdaptor",
            "sans.models.MulComponent",
            "sans.models.MultiShellModel",
            "sans.models.MultiplicationModel",
            "sans.models.NewCylinderModel",
            "sans.models.NoStructure",
            "sans.models.NullModel",
            "sans.models.OnionExpShellModel",
            "sans.models.OnionModel",
            "sans.models.ParallelepipedModel",
            "sans.models.PeakGaussModel",
            "sans.models.PeakLorentzModel",
            "sans.models.PearlNecklaceModel",
            "sans.models.Poly_GaussCoil",
            "sans.models.PolymerExclVolume",
            "sans.models.PorodModel",
            "sans.models.PowerLawAbsModel",
            "sans.models.PowerLawModel",
            "sans.models.RPA10Model",
            "sans.models.RPAModel",
            "sans.models.ReflAdvModel",
            "sans.models.ReflModel",
            "sans.models.ReflectivityIIModel",
            "sans.models.ReflectivityModel",
            "sans.models.SCCrystalModel",
            "sans.models.SLDCalFunc",
            "sans.models.Schulz",
            "sans.models.Sin",
            "sans.models.SphereModel",
            "sans.models.SphereSLDModel",
            "sans.models.SphericalSLDModel",
            "sans.models.SquareWellStructure",
            "sans.models.StackedDisksModel",
            "sans.models.StickyHSStructure",
            "sans.models.SubComponent",
            "sans.models.SurfaceFractalModel",
            "sans.models.TeubnerStreyModel",
            "sans.models.TriaxialEllipsoidModel",
            "sans.models.TwoLorentzianModel",
            "sans.models.TwoPowerLawModel",
            "sans.models.UnifiedPowerRgModel",
            "sans.models.VesicleModel",
            "sans.models.dispersion_models",
            "sans.models.pluginmodel",
            "sans.models.qsmearing",
            "sans.models.sans_extension",
            "sans.models.smearing_2d"
        ],
        "version": "2.1.0"
    },
    "contrailca": {
        "cmdline": [],
        "modules": [
            "contrail",
            "contrail.security",
            "contrail.security.ca",
            "contrail.security.ca.base",
            "contrail.security.ca.callout_impl",
            "contrail.security.ca.cert_req",
            "contrail.security.ca.impl",
            "contrail.security.ca.subj_alt_name",
            "contrail.security.ca.test",
            "contrail.security.ca.test.ca_config",
            "contrail.security.ca.test.ca_config.newcerts",
            "contrail.security.ca.test.test_ca_callout_impl",
            "contrail.security.ca.test.test_ca_impl",
            "contrail.security.ca.test.test_cli",
            "contrail.security.ca.utils",
            "contrail.security.ca.utils.cli"
        ],
        "version": "0.4.0"
    },
    "contrailonlinecaclient": {
        "cmdline": [],
        "modules": [
            "contrail",
            "contrail.security",
            "contrail.security.onlineca",
            "contrail.security.onlineca.client",
            "contrail.security.onlineca.client.cli",
            "contrail.security.onlineca.client.openssl_utils",
            "contrail.security.onlineca.client.sh",
            "contrail.security.onlineca.client.test",
            "contrail.security.onlineca.client.test.test_cli",
            "contrail.security.onlineca.client.test.test_client"
        ],
        "version": "0.4.0"
    },
    "contrailonlinecaservice": {
        "cmdline": [],
        "modules": [
            "contrail",
            "contrail.security",
            "contrail.security.onlineca",
            "contrail.security.onlineca.server",
            "contrail.security.onlineca.server.factory",
            "contrail.security.onlineca.server.impl",
            "contrail.security.onlineca.server.interfaces",
            "contrail.security.onlineca.server.openssl_utils",
            "contrail.security.onlineca.server.test",
            "contrail.security.onlineca.server.test.onlineca_server",
            "contrail.security.onlineca.server.test.onlineca_server_with_httpbasicauth",
            "contrail.security.onlineca.server.test.repoze_eg",
            "contrail.security.onlineca.server.test.repoze_eg.onlineca_server_with_httpbasicauth",
            "contrail.security.onlineca.server.test.server_utils",
            "contrail.security.onlineca.server.test.test_client_register",
            "contrail.security.onlineca.server.test.test_httpbasicauth",
            "contrail.security.onlineca.server.wsgi",
            "contrail.security.onlineca.server.wsgi.app",
            "contrail.security.onlineca.server.wsgi.auth_plugins",
            "contrail.security.onlineca.server.wsgi.auth_plugins.simple_auth_middleware",
            "contrail.security.onlineca.server.wsgi.client_register",
            "contrail.security.onlineca.server.wsgi.httpbasicauth",
            "contrail.security.onlineca.server.wsgi.middleware",
            "contrail.security.onlineca.server.wsgi.repoze_app",
            "contrail.security.onlineca.server.wsgi.repoze_middleware"
        ],
        "version": "0.4.0"
    },
    "contrast-security": {
        "cmdline": [],
        "modules": [
            "contrast_security",
            "contrast_security.contrast_sdk",
            "contrast_security/filters",
            "contrast_security/filters.application_filter",
            "contrast_security/filters.application_library_filter",
            "contrast_security/filters.application_trace_filter",
            "contrast_security/filters.library_filter",
            "contrast_security/filters.server_filter",
            "contrast_security/filters.server_library_filter",
            "contrast_security/filters.server_trace_filter",
            "contrast_security/filters.trace_filter",
            "contrast_security/filters.trace_time_to_remediate_filter",
            "contrast_security/filters.trace_trend_filter",
            "contrast_security/types",
            "contrast_security/types.AgentTypes",
            "contrast_security/user_api",
            "contrast_security/user_api.agent_api",
            "contrast_security/user_api.alerts_api",
            "contrast_security/user_api.api_support",
            "contrast_security/user_api.application_api",
            "contrast_security/user_api.events_api",
            "contrast_security/user_api.history_api",
            "contrast_security/user_api.library_api",
            "contrast_security/user_api.modules_api",
            "contrast_security/user_api.organization_api",
            "contrast_security/user_api.policy_api",
            "contrast_security/user_api.profile_api",
            "contrast_security/user_api.response",
            "contrast_security/user_api.role_api",
            "contrast_security/user_api.scores_api",
            "contrast_security/user_api.server_api",
            "contrast_security/user_api.tags_api",
            "contrast_security/user_api.trace_api",
            "contrast_security/user_api.user_api",
            "contrast_security/user_api.util",
            "contrast_security/user_api.version",
            "contrast_security/user_api.webhook_api"
        ],
        "version": "0.13"
    },
    "contributors": {
        "cmdline": [],
        "modules": [
            "contributors",
            "contributors.cli",
            "contributors.contributors"
        ],
        "version": "0.3.0"
    },
    "control": {
        "cmdline": [],
        "modules": [
            "control",
            "control.NO_setup",
            "control._version",
            "control.bdalg",
            "control.canonical",
            "control.config",
            "control.ctrlutil",
            "control.delay",
            "control.dtime",
            "control.exception",
            "control.frdata",
            "control.freqplot",
            "control.lti",
            "control.margins",
            "control.mateqn",
            "control.matlab",
            "control.modelsimp",
            "control.nichols",
            "control.phaseplot",
            "control.pzmap",
            "control.rlocus",
            "control.robust",
            "control.setup",
            "control.statefbk",
            "control.statesp",
            "control.tests",
            "control.tests.NO_run_all",
            "control.tests.bdalg_test",
            "control.tests.convert_test",
            "control.tests.discrete_test",
            "control.tests.frd_test",
            "control.tests.freqresp",
            "control.tests.margin_test",
            "control.tests.mateqn_test",
            "control.tests.matlab_test",
            "control.tests.minreal_test",
            "control.tests.modelsimp_test",
            "control.tests.nichols_test",
            "control.tests.phaseplot_test",
            "control.tests.rlocus_test",
            "control.tests.run_all",
            "control.tests.slycot_convert_test",
            "control.tests.statefbk_test",
            "control.tests.statesp_test",
            "control.tests.test_control_matlab",
            "control.tests.timeresp_test",
            "control.tests.xferfcn_test",
            "control.timeresp",
            "control.version",
            "control.xferfcn"
        ],
        "version": "0.7.0"
    },
    "control-db-date": {
        "cmdline": [],
        "modules": [
            "Control_DB_date",
            "Control_DB_date.Control_DB_date"
        ],
        "version": "3.0.0"
    },
    "controlboardapp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "controlcore": {
        "cmdline": [],
        "modules": [
            "controlcore",
            "controlcore.config",
            "controlcore.consumer",
            "controlcore.publisher"
        ],
        "version": "0.0.3"
    },
    "controlhost": {
        "cmdline": [],
        "modules": [
            "controlhost",
            "controlhost.__version__"
        ],
        "version": "0.5.1"
    },
    "controllerism": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "controllers": {
        "cmdline": [],
        "modules": [
            "Controllers"
        ],
        "version": "0.9.0"
    },
    "controlmypi": {
        "cmdline": [],
        "modules": [
            "controlmypi"
        ],
        "version": "0.1.4"
    },
    "controlpy": {
        "cmdline": [],
        "modules": [
            "controlpy",
            "controlpy.analysis",
            "controlpy.synthesis"
        ],
        "version": "0.1.1"
    },
    "controls": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "controlspeed": {
        "cmdline": [],
        "modules": [
            "controlspeed",
            "controlspeed.local_mutex",
            "controlspeed.utils"
        ],
        "version": "2.3"
    },
    "controlsystems": {
        "cmdline": [],
        "modules": [
            "controlsystems",
            "controlsystems.discretization",
            "controlsystems.error",
            "controlsystems.pid_simulation",
            "controlsystems.types"
        ],
        "version": "1.0rc3"
    },
    "controltools": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "conttest": {
        "cmdline": [],
        "modules": [
            "conttest",
            "conttest.conttest"
        ],
        "version": "0.0.8"
    },
    "conundrum": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "convci": {
        "cmdline": [],
        "modules": [
            "convci.btcore",
            "convci.initbt"
        ],
        "version": "0.1.0"
    },
    "converge": {
        "cmdline": [],
        "modules": [
            "converge",
            "converge.settings"
        ],
        "version": "0.7"
    },
    "convergent": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "conversationalist": {
        "cmdline": [],
        "modules": [
            "conversationalist",
            "conversationalist.adapters",
            "conversationalist.classes",
            "conversationalist.client",
            "conversationalist.conversationalist",
            "conversationalist.core",
            "conversationalist.main",
            "conversationalist.settings",
            "conversationalist.utils"
        ],
        "version": "0.1.1"
    },
    "conversion": {
        "cmdline": [],
        "modules": [
            "conversion",
            "conversion.boolean"
        ],
        "version": "0.0.3"
    },
    "conversionkit": {
        "cmdline": [],
        "modules": [
            "conversionkit",
            "conversionkit.exception",
            "conversionkit.types"
        ],
        "version": "0.3.4"
    },
    "conversionutil": {
        "cmdline": [],
        "modules": [
            "conversionutil",
            "conversionutil.convert",
            "conversionutil.dx",
            "conversionutil.ex",
            "conversionutil.unittests",
            "conversionutil.unittests.test_convert"
        ],
        "version": "1.0.2"
    },
    "convert": {
        "cmdline": [],
        "modules": [
            "convert"
        ],
        "version": "0.1.2"
    },
    "convert-to-pow": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "convert-to-redirects": {
        "cmdline": [],
        "modules": [
            "redirects",
            "redirects.redirects"
        ],
        "version": "0.1.3"
    },
    "convert-videos": {
        "cmdline": [],
        "modules": [
            "convert_videos",
            "tests"
        ],
        "version": "1.1.4"
    },
    "convert2": {
        "cmdline": [],
        "modules": [
            "convert2",
            "convert2.converter",
            "convert2.packages",
            "convert2.packages.chardet",
            "convert2.packages.chardet.big5freq",
            "convert2.packages.chardet.big5prober",
            "convert2.packages.chardet.chardetect",
            "convert2.packages.chardet.chardistribution",
            "convert2.packages.chardet.charsetgroupprober",
            "convert2.packages.chardet.charsetprober",
            "convert2.packages.chardet.codingstatemachine",
            "convert2.packages.chardet.compat",
            "convert2.packages.chardet.constants",
            "convert2.packages.chardet.cp949prober",
            "convert2.packages.chardet.escprober",
            "convert2.packages.chardet.escsm",
            "convert2.packages.chardet.eucjpprober",
            "convert2.packages.chardet.euckrfreq",
            "convert2.packages.chardet.euckrprober",
            "convert2.packages.chardet.euctwfreq",
            "convert2.packages.chardet.euctwprober",
            "convert2.packages.chardet.gb2312freq",
            "convert2.packages.chardet.gb2312prober",
            "convert2.packages.chardet.hebrewprober",
            "convert2.packages.chardet.jisfreq",
            "convert2.packages.chardet.jpcntx",
            "convert2.packages.chardet.langbulgarianmodel",
            "convert2.packages.chardet.langcyrillicmodel",
            "convert2.packages.chardet.langgreekmodel",
            "convert2.packages.chardet.langhebrewmodel",
            "convert2.packages.chardet.langhungarianmodel",
            "convert2.packages.chardet.langthaimodel",
            "convert2.packages.chardet.latin1prober",
            "convert2.packages.chardet.mbcharsetprober",
            "convert2.packages.chardet.mbcsgroupprober",
            "convert2.packages.chardet.mbcssm",
            "convert2.packages.chardet.sbcharsetprober",
            "convert2.packages.chardet.sbcsgroupprober",
            "convert2.packages.chardet.sjisprober",
            "convert2.packages.chardet.universaldetector",
            "convert2.packages.chardet.utf8prober",
            "convert2.packages.rolex",
            "convert2.packages.rolex.six",
            "convert2.packages.rolex.template",
            "convert2.packages.rolex.zzz_manual_install",
            "convert2.packages.six",
            "convert2.util",
            "convert2.zzz_manual_install"
        ],
        "version": "0.0.2"
    },
    "convert2php": {
        "cmdline": [],
        "modules": [
            "src",
            "src.php2python",
            "src.test_scripts",
            "src.test_scripts.ProfileResponse"
        ],
        "version": "0.0.1"
    },
    "convert2qrhead": {
        "cmdline": [
            "convert2QRhead.py"
        ],
        "modules": [],
        "version": "1.1"
    },
    "convert2utf": {
        "cmdline": [],
        "modules": [],
        "version": "0.8"
    },
    "convert2x": {
        "cmdline": [
            "convert2x"
        ],
        "modules": [],
        "version": "0.1"
    },
    "convertbng": {
        "cmdline": [],
        "modules": [
            "convertbng",
            "convertbng.test",
            "convertbng.test.test_convertbng",
            "convertbng.util"
        ],
        "version": "0.5.5"
    },
    "convertdate": {
        "cmdline": [],
        "modules": [
            "convertdate",
            "convertdate.bahai",
            "convertdate.coptic",
            "convertdate.data",
            "convertdate.data.french_republican_days",
            "convertdate.data.positivist",
            "convertdate.daycount",
            "convertdate.dublin",
            "convertdate.french_republican",
            "convertdate.gregorian",
            "convertdate.hebrew",
            "convertdate.holidays",
            "convertdate.indian_civil",
            "convertdate.islamic",
            "convertdate.iso",
            "convertdate.julian",
            "convertdate.julianday",
            "convertdate.mayan",
            "convertdate.ordinal",
            "convertdate.persian",
            "convertdate.positivist",
            "convertdate.utils"
        ],
        "version": "2.1.1"
    },
    "converter": {
        "cmdline": [],
        "modules": [
            "converter"
        ],
        "version": "1.0.0"
    },
    "converter-j7-j8": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "convertextract": {
        "cmdline": [],
        "modules": [
            "convertextract",
            "convertextract.cli",
            "convertextract.colors",
            "convertextract.cors",
            "convertextract.cors.correspondences",
            "convertextract.exceptions",
            "convertextract.parsers",
            "convertextract.parsers.audio",
            "convertextract.parsers.csv_parser",
            "convertextract.parsers.doc_parser",
            "convertextract.parsers.docx_parser",
            "convertextract.parsers.eml_parser",
            "convertextract.parsers.epub_parser",
            "convertextract.parsers.gif_parser",
            "convertextract.parsers.html_parser",
            "convertextract.parsers.image",
            "convertextract.parsers.jpg_parser",
            "convertextract.parsers.json_parser",
            "convertextract.parsers.mp3_parser",
            "convertextract.parsers.msg_parser",
            "convertextract.parsers.odt_parser",
            "convertextract.parsers.ogg_parser",
            "convertextract.parsers.pdf_parser",
            "convertextract.parsers.png_parser",
            "convertextract.parsers.pptx_parser",
            "convertextract.parsers.ps_parser",
            "convertextract.parsers.rtf_parser",
            "convertextract.parsers.tiff_parser",
            "convertextract.parsers.txt_parser",
            "convertextract.parsers.utils",
            "convertextract.parsers.wav_parser",
            "convertextract.parsers.xls_parser",
            "convertextract.parsers.xlsx_parser"
        ],
        "version": "1.1"
    },
    "convertish": {
        "cmdline": [],
        "modules": [
            "convertish",
            "convertish.convert",
            "convertish.tests",
            "convertish.tests.test_basic",
            "convertish.tests.test_json"
        ],
        "version": "0.6dev"
    },
    "convertit": {
        "cmdline": [],
        "modules": [
            "convertit",
            "convertit.converters",
            "convertit.converters.inkscape",
            "convertit.converters.unoconv",
            "convertit.helpers",
            "convertit.tests",
            "convertit.tests.converters",
            "convertit.tests.converters.test_inkscape",
            "convertit.tests.converters.test_unoconv",
            "convertit.tests.test_functional",
            "convertit.tests.test_helpers",
            "convertit.tests.test_views",
            "convertit.tests.unittest",
            "convertit.views"
        ],
        "version": "1.1.5"
    },
    "convertkit": {
        "cmdline": [],
        "modules": [
            "convertkit",
            "convertkit.main"
        ],
        "version": "0.4"
    },
    "convexnester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "convey": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "conveyor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "convict": {
        "cmdline": [],
        "modules": [
            "convict"
        ],
        "version": "0.3"
    },
    "convis": {
        "cmdline": [],
        "modules": [
            "convis",
            "convis.base",
            "convis.debug",
            "convis.error_functions",
            "convis.inputs",
            "convis.kernels",
            "convis.misc_splines",
            "convis.misc_utils",
            "convis.models",
            "convis.numerical_filters",
            "convis.o",
            "convis.png",
            "convis.retina",
            "convis.retina_base",
            "convis.retina_virtualretina",
            "convis.runner",
            "convis.samples",
            "convis.streams",
            "convis.tests",
            "convis.theano_utils",
            "convis.variable_describe",
            "convis.variables"
        ],
        "version": "0.2.1"
    },
    "conviz": {
        "cmdline": [],
        "modules": [
            "conviz",
            "conviz.gradient_ascent_optimizer",
            "conviz.models",
            "conviz.models.cifar10",
            "conviz.tests",
            "conviz.tests.test_gradient_ascent_optimizer",
            "conviz.tests.test_image_util",
            "conviz.tests.test_models",
            "conviz.tests.test_visualizer",
            "conviz.utils",
            "conviz.utils.data_util",
            "conviz.utils.image_util",
            "conviz.visualizer"
        ],
        "version": "0.3"
    },
    "convo": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "convoy": {
        "cmdline": [],
        "modules": [
            "convoy",
            "convoy.combo",
            "convoy.meta"
        ],
        "version": "0.4.4"
    },
    "convutils": {
        "cmdline": [],
        "modules": [
            "convutils",
            "convutils._version",
            "convutils.structs",
            "convutils.tests",
            "convutils.tests.test_structs",
            "convutils.tests.test_utils",
            "convutils.utils"
        ],
        "version": "2.0"
    },
    "conway": {
        "cmdline": [
            "conway.py"
        ],
        "modules": [],
        "version": "1.1"
    },
    "conwaycpu": {
        "cmdline": [
            "ConwayCPU.py"
        ],
        "modules": [],
        "version": "0.5"
    },
    "conx": {
        "cmdline": [],
        "modules": [
            "conx",
            "conx.network",
            "conx.srn"
        ],
        "version": "1.0.3"
    },
    "cony": {
        "cmdline": [
            "cony.py"
        ],
        "modules": [
            "examples",
            "examples.lang",
            "examples.search"
        ],
        "version": "0.2.0"
    },
    "conz": {
        "cmdline": [],
        "modules": [
            "conz",
            "conz.ansi_colors",
            "conz.console",
            "conz.progress",
            "conz.utils"
        ],
        "version": "0.5"
    },
    "coo-utils": {
        "cmdline": [],
        "modules": [
            "coo_utils",
            "coo_utils._version",
            "coo_utils.coo_utils"
        ],
        "version": "0.1.2.1"
    },
    "cook": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cook-jobclient": {
        "cmdline": [],
        "modules": [
            "cook"
        ],
        "version": "0.0.7"
    },
    "cookbook": {
        "cmdline": [],
        "modules": [
            "cookbook",
            "cookbook.bidirectional_map",
            "cookbook.bunch",
            "cookbook.cache_decorator",
            "cookbook.console",
            "cookbook.const",
            "cookbook.decorate",
            "cookbook.dicts",
            "cookbook.enum",
            "cookbook.equivalence",
            "cookbook.function_as_task",
            "cookbook.groupby",
            "cookbook.interval",
            "cookbook.lru_cache",
            "cookbook.named_tuple",
            "cookbook.output_context",
            "cookbook.permutation",
            "cookbook.persisted_cache",
            "cookbook.pre_post_conditions",
            "cookbook.process_priority",
            "cookbook.progress",
            "cookbook.pylab_utils",
            "cookbook.pytables_utils",
            "cookbook.rb_interval_tree",
            "cookbook.rbtree",
            "cookbook.reverse_dict",
            "cookbook.script_basics",
            "cookbook.simple_logging",
            "cookbook.timer",
            "cookbook.venn",
            "cookbook.workflow"
        ],
        "version": "2.2.25"
    },
    "cooker": {
        "cmdline": [
            "cook"
        ],
        "modules": [
            "cooker",
            "cooker.fs",
            "cooker.parser",
            "cooker.settings",
            "cooker.sites",
            "cooker.util"
        ],
        "version": "1.0"
    },
    "cookery": {
        "cmdline": [
            "cookery"
        ],
        "modules": [
            "cookery",
            "cookery.cookery",
            "cookery.cookery_elements",
            "cookery.cookery_lex",
            "cookery.cookery_parse",
            "cookery.empty",
            "cookery.exceptions",
            "cookery.lisp_lex",
            "cookery.lisp_parse",
            "cookery.parsetab",
            "cookery.toolkit",
            "cookerykernel"
        ],
        "version": "0.1"
    },
    "cookie-eater": {
        "cmdline": [],
        "modules": [
            "cookie_eater",
            "cookie_eater.base",
            "cookie_eater.chrome",
            "cookie_eater.firefox",
            "test",
            "test.test_browser"
        ],
        "version": "1.0.0"
    },
    "cookie06": {
        "cmdline": [],
        "modules": [
            "cookie06",
            "cookie06._version",
            "cookie06.run_cookie06"
        ],
        "version": "0.1.1"
    },
    "cookiecutter": {
        "cmdline": [],
        "modules": [
            "cookiecutter",
            "cookiecutter.cli",
            "cookiecutter.config",
            "cookiecutter.environment",
            "cookiecutter.exceptions",
            "cookiecutter.extensions",
            "cookiecutter.find",
            "cookiecutter.generate",
            "cookiecutter.hooks",
            "cookiecutter.log",
            "cookiecutter.main",
            "cookiecutter.prompt",
            "cookiecutter.replay",
            "cookiecutter.repository",
            "cookiecutter.utils",
            "cookiecutter.vcs"
        ],
        "version": "1.5.1"
    },
    "cookiecutter-django": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cookiecutter-leonardo-module": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.4"
    },
    "cookiecutter-pypackage": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cookiecutter-pypackage-minimal": {
        "cmdline": [],
        "modules": [
            "cookiecutter-pypackage-minimal"
        ],
        "version": "0.1.0"
    },
    "cookiecutter-python-library-demo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cookiecutter-webpack": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cookiejar": {
        "cmdline": [
            "cookiejar"
        ],
        "modules": [
            "cookiejar",
            "cookiejar.channel",
            "cookiejar.client",
            "cookiejar.creator",
            "cookiejar.downloader",
            "cookiejar.extractor",
            "cookiejar.jar",
            "cookiejar.loaders",
            "cookiejar.pager",
            "cookiejar.settings",
            "cookiejar.utils"
        ],
        "version": "0.0.1"
    },
    "cookielib3": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cookiepatcher": {
        "cmdline": [],
        "modules": [
            "cookiepatcher",
            "cookiepatcher.cli"
        ],
        "version": "0.3.0"
    },
    "cookies": {
        "cmdline": [],
        "modules": [],
        "version": "2.2.1"
    },
    "cookiestxt": {
        "cmdline": [],
        "modules": [
            "cookiestxt",
            "cookiestxt._MozillaCookieJar"
        ],
        "version": "0.3"
    },
    "cooking.theme": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.9"
    },
    "cookpy": {
        "cmdline": [],
        "modules": [
            "cookpy",
            "cookpy.const",
            "cookpy.cook",
            "cookpy.exceptions",
            "cookpy.parser",
            "cookpy.targets",
            "cookpy.utils"
        ],
        "version": "0.0.1"
    },
    "cool": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cool-ascii-faces": {
        "cmdline": [],
        "modules": [
            "coolasciifaces",
            "coolasciifaces.cli"
        ],
        "version": "0.0.1"
    },
    "cool-logging": {
        "cmdline": [],
        "modules": [
            "cool_logging",
            "cool_logging.formatters"
        ],
        "version": "0.3"
    },
    "cool-math": {
        "cmdline": [
            "cool_math"
        ],
        "modules": [
            "cool_math",
            "cool_math.square"
        ],
        "version": "1.5"
    },
    "cool-math2": {
        "cmdline": [
            "cool_math2"
        ],
        "modules": [
            "cool_math2",
            "cool_math2.square"
        ],
        "version": "1.6"
    },
    "cool-math3": {
        "cmdline": [
            "cool_math3"
        ],
        "modules": [
            "cool_math3",
            "cool_math3.square"
        ],
        "version": "1.1"
    },
    "coolamqp": {
        "cmdline": [],
        "modules": [
            "coolamqp",
            "coolamqp.attaches",
            "coolamqp.attaches.agroup",
            "coolamqp.attaches.channeler",
            "coolamqp.attaches.consumer",
            "coolamqp.attaches.declarer",
            "coolamqp.attaches.publisher",
            "coolamqp.attaches.utils",
            "coolamqp.clustering",
            "coolamqp.clustering.cluster",
            "coolamqp.clustering.events",
            "coolamqp.clustering.single",
            "coolamqp.exceptions",
            "coolamqp.framing",
            "coolamqp.framing.base",
            "coolamqp.framing.compilation",
            "coolamqp.framing.compilation.compile_definitions",
            "coolamqp.framing.compilation.content_property",
            "coolamqp.framing.compilation.textcode_fields",
            "coolamqp.framing.compilation.utilities",
            "coolamqp.framing.definitions",
            "coolamqp.framing.field_table",
            "coolamqp.framing.frames",
            "coolamqp.objects",
            "coolamqp.uplink",
            "coolamqp.uplink.connection",
            "coolamqp.uplink.connection.connection",
            "coolamqp.uplink.connection.recv_framer",
            "coolamqp.uplink.connection.send_framer",
            "coolamqp.uplink.connection.states",
            "coolamqp.uplink.connection.watches",
            "coolamqp.uplink.handshake",
            "coolamqp.uplink.heartbeat",
            "coolamqp.uplink.listener",
            "coolamqp.uplink.listener.epoll_listener",
            "coolamqp.uplink.listener.select_listener",
            "coolamqp.uplink.listener.socket",
            "coolamqp.uplink.listener.thread"
        ],
        "version": "0.91"
    },
    "coolbmpmover": {
        "cmdline": [],
        "modules": [],
        "version": "13.37"
    },
    "cooldict": {
        "cmdline": [],
        "modules": [
            "cooldict"
        ],
        "version": "1.02"
    },
    "cooler": {
        "cmdline": [],
        "modules": [
            "cooler",
            "cooler._binning",
            "cooler._writer",
            "cooler.api",
            "cooler.cli",
            "cooler.cli.aggregate",
            "cooler.cli.balance",
            "cooler.cli.cload",
            "cooler.cli.copy",
            "cooler.cli.csort",
            "cooler.cli.digest",
            "cooler.cli.dump",
            "cooler.cli.expected",
            "cooler.cli.info",
            "cooler.cli.list_",
            "cooler.cli.load",
            "cooler.cli.makebins",
            "cooler.cli.merge",
            "cooler.cli.migrate",
            "cooler.cli.show",
            "cooler.cli.test",
            "cooler.cli.util",
            "cooler.contrib",
            "cooler.contrib.dask",
            "cooler.contrib.higlass",
            "cooler.core",
            "cooler.ice",
            "cooler.io",
            "cooler.tools",
            "cooler.util"
        ],
        "version": "0.7.2"
    },
    "coolfig": {
        "cmdline": [],
        "modules": [
            "coolfig",
            "coolfig.django",
            "coolfig.providers",
            "coolfig.schema",
            "coolfig.test_config",
            "coolfig.test_django",
            "coolfig.types"
        ],
        "version": "1.0.2"
    },
    "coollogger": {
        "cmdline": [],
        "modules": [
            "coollogger",
            "coollogger.TimedCompressedRotatingFileHandler",
            "coollogger.coollogger"
        ],
        "version": "1.0.1"
    },
    "coolmit": {
        "cmdline": [],
        "modules": [
            "coolmit",
            "coolmit.base",
            "coolmit.cpu"
        ],
        "version": "0.1.0"
    },
    "coolname": {
        "cmdline": [],
        "modules": [
            "coolname",
            "coolname.config",
            "coolname.data",
            "coolname.exceptions",
            "coolname.impl",
            "coolname.loader"
        ],
        "version": "0.2.1"
    },
    "coolprop": {
        "cmdline": [],
        "modules": [
            "CoolProp",
            "CoolProp.BibtexParser",
            "CoolProp.GUI",
            "CoolProp.GUI.CoolPropGUI",
            "CoolProp.GUI.PsychScript",
            "CoolProp.HumidAirProp",
            "CoolProp.Plots",
            "CoolProp.Plots.Common",
            "CoolProp.Plots.ConsistencyPlots",
            "CoolProp.Plots.Plots",
            "CoolProp.Plots.PsychChart",
            "CoolProp.Plots.PsychScript",
            "CoolProp.Plots.SimpleCycles",
            "CoolProp.Plots.SimpleCyclesCompression",
            "CoolProp.Plots.SimpleCyclesExpansion",
            "CoolProp.Plots.Tests",
            "CoolProp.Plots.psy",
            "CoolProp.State",
            "CoolProp.constants",
            "CoolProp.tests",
            "CoolProp.tests.runner",
            "CoolProp.tests.test_CoolPropState",
            "CoolProp.tests.test_Props",
            "CoolProp.tests.test_plots"
        ],
        "version": "6.1.0"
    },
    "coolsms": {
        "cmdline": [],
        "modules": [
            "coolsms",
            "coolsms.sender"
        ],
        "version": "0.1"
    },
    "coolsms-python-sdk": {
        "cmdline": [],
        "modules": [
            "sdk",
            "sdk.coolsms",
            "sdk.exceptions",
            "sdk/api",
            "sdk/api.group_message",
            "sdk/api.image",
            "sdk/api.message",
            "sdk/api.sender_id"
        ],
        "version": "2.0.3"
    },
    "cooly": {
        "cmdline": [],
        "modules": [
            "cooly",
            "cooly.cli",
            "cooly.fabfile"
        ],
        "version": "0.1.3"
    },
    "coon": {
        "cmdline": [],
        "modules": [
            "coon",
            "coon.action",
            "coon.action.prebuild",
            "coon.action.prebuild.action",
            "coon.action.prebuild.action_factory",
            "coon.action.prebuild.shell",
            "coon.compiler",
            "coon.compiler.abstract",
            "coon.compiler.bootstrap",
            "coon.compiler.c_compiler",
            "coon.compiler.compiler_factory",
            "coon.compiler.coon",
            "coon.compiler.erlang_mk",
            "coon.compiler.makefile",
            "coon.compiler.rebar",
            "coon.compiler.rebar3",
            "coon.global_properties",
            "coon.pac_cache",
            "coon.pac_cache.artifactory_cache",
            "coon.pac_cache.cache",
            "coon.pac_cache.cache_factory",
            "coon.pac_cache.cache_man",
            "coon.pac_cache.local_cache",
            "coon.pac_cache.s3_cache",
            "coon.packages",
            "coon.packages.config",
            "coon.packages.config.config",
            "coon.packages.config.config_factory",
            "coon.packages.config.coon",
            "coon.packages.config.erlang_mk",
            "coon.packages.config.rebar",
            "coon.packages.config.stub_config",
            "coon.packages.package",
            "coon.packages.package_builder",
            "coon.resources",
            "coon.utils",
            "coon.utils.file_utils",
            "walrus",
            "walrus.action",
            "walrus.action.prebuild",
            "walrus.action.prebuild.action",
            "walrus.action.prebuild.action_factory",
            "walrus.action.prebuild.shell",
            "walrus.compiler",
            "walrus.compiler.abstract",
            "walrus.compiler.c_compiler",
            "walrus.compiler.compiler_factory",
            "walrus.compiler.erlang_mk",
            "walrus.compiler.makefile",
            "walrus.compiler.rebar",
            "walrus.compiler.walrus",
            "walrus.global_properties",
            "walrus.main",
            "walrus.pac_cache",
            "walrus.pac_cache.artifactory_cache",
            "walrus.pac_cache.cache",
            "walrus.pac_cache.cache_factory",
            "walrus.pac_cache.cache_man",
            "walrus.pac_cache.local_cache",
            "walrus.pac_cache.remote_cache",
            "walrus.pac_cache.s3_cache",
            "walrus.packages",
            "walrus.packages.config",
            "walrus.packages.config.config",
            "walrus.packages.config.config_factory",
            "walrus.packages.config.erlang_mk",
            "walrus.packages.config.rebar",
            "walrus.packages.config.stub_config",
            "walrus.packages.config.walrus",
            "walrus.packages.dep",
            "walrus.packages.package",
            "walrus.packages.package_builder",
            "walrus.packages.walrus_dep",
            "walrus.packages.walrus_package",
            "walrus.resources",
            "walrus.utils",
            "walrus.utils.file_utils",
            "walrus.walrus",
            "walrus.walrus.compiler",
            "walrus.walrus.compiler.abstract",
            "walrus.walrus.compiler.compiler_factory",
            "walrus.walrus.compiler.erlang_mk",
            "walrus.walrus.compiler.rebar",
            "walrus.walrus.compiler.walrus",
            "walrus.walrus.pac_cache",
            "walrus.walrus.pac_cache.cache",
            "walrus.walrus.pac_cache.cache_factory",
            "walrus.walrus.pac_cache.local_cache",
            "walrus.walrus.pac_cache.remote_cache",
            "walrus.walrus.package_builder",
            "walrus.walrus.walrus_global_config"
        ],
        "version": "0.8.0"
    },
    "coop": {
        "cmdline": [],
        "modules": [
            "coop",
            "coop._version",
            "coop.jinja2tags",
            "coop.jinja2tags.core",
            "coop.migrations",
            "coop.migrations.0001_remove_site",
            "coop.migrations.0002_analyticssettings",
            "coop.models",
            "coop.page",
            "coop.settings",
            "coop.styleguide",
            "coop.styleguide.urls",
            "coop.styleguide.views",
            "coop.test",
            "coop.urls",
            "coop.utils",
            "coop.utils.migrations",
            "coop.utils.pagination",
            "coop.utils.setup",
            "coop.utils.testdata",
            "coop.utils.views",
            "coop.wagtail_hooks",
            "coop.wsgi"
        ],
        "version": "0.5.3"
    },
    "coop-agenda": {
        "cmdline": [],
        "modules": [
            "coop_agenda",
            "coop_agenda.admin",
            "coop_agenda.conf",
            "coop_agenda.conf.agenda_settings",
            "coop_agenda.context_processors",
            "coop_agenda.forms",
            "coop_agenda.models",
            "coop_agenda.tests",
            "coop_agenda.urls",
            "coop_agenda.utils",
            "coop_agenda.views"
        ],
        "version": "0.1.3"
    },
    "coop-bar": {
        "cmdline": [],
        "modules": [
            "coop_bar",
            "coop_bar.bar",
            "coop_bar.settings",
            "coop_bar.templatetags",
            "coop_bar.templatetags.coop_bar_tags",
            "coop_bar.urls",
            "coop_bar.utils"
        ],
        "version": "0.4.6"
    },
    "coop-cms": {
        "cmdline": [],
        "modules": [
            "coop_cms",
            "coop_cms.admin",
            "coop_cms.apps",
            "coop_cms.apps.basic_cms",
            "coop_cms.apps.basic_cms.migrations",
            "coop_cms.apps.basic_cms.migrations.0001_initial",
            "coop_cms.apps.basic_cms.migrations.0002_article_is_homepage",
            "coop_cms.apps.basic_cms.migrations.0003_htmlfield_removed",
            "coop_cms.apps.basic_cms.migrations.0004_auto__add_navtree__add_field_article_headline__chg_field_article_slug",
            "coop_cms.apps.basic_cms.models",
            "coop_cms.apps.basic_cms.tests",
            "coop_cms.apps.demo_cms",
            "coop_cms.apps.demo_cms.admin",
            "coop_cms.apps.demo_cms.coop_cms_settings",
            "coop_cms.apps.demo_cms.forms",
            "coop_cms.apps.demo_cms.migrations",
            "coop_cms.apps.demo_cms.migrations.0001_initial",
            "coop_cms.apps.demo_cms.migrations.0002_auto__add_field_article_in_newsletter",
            "coop_cms.apps.demo_cms.migrations.0003_article_is_homepage",
            "coop_cms.apps.demo_cms.migrations.0004_htmlfield_removed",
            "coop_cms.apps.demo_cms.migrations.0005_auto__add_field_article_headline",
            "coop_cms.apps.demo_cms.models",
            "coop_cms.apps.demo_cms.my_coop_bar",
            "coop_cms.apps.demo_cms.tests",
            "coop_cms.apps.rss_sync",
            "coop_cms.apps.rss_sync.admin",
            "coop_cms.apps.rss_sync.forms",
            "coop_cms.apps.rss_sync.management",
            "coop_cms.apps.rss_sync.management.commands",
            "coop_cms.apps.rss_sync.management.commands.collect_rss",
            "coop_cms.apps.rss_sync.migrations",
            "coop_cms.apps.rss_sync.migrations.0001_initial",
            "coop_cms.apps.rss_sync.migrations.0002_auto__add_rssitem__add_field_rsssource_title__add_field_rsssource_last",
            "coop_cms.apps.rss_sync.migrations.0003_auto__add_unique_rsssource_url",
            "coop_cms.apps.rss_sync.migrations.0004_auto__add_field_rssitem_processed",
            "coop_cms.apps.rss_sync.models",
            "coop_cms.apps.rss_sync.tests",
            "coop_cms.apps.rss_sync.urls",
            "coop_cms.apps.rss_sync.utils",
            "coop_cms.apps.rss_sync.views",
            "coop_cms.apps.rss_sync.widgets",
            "coop_cms.coop_bar_cfg",
            "coop_cms.forms",
            "coop_cms.html2text",
            "coop_cms.management",
            "coop_cms.management.commands",
            "coop_cms.management.commands.create_newsletter_items",
            "coop_cms.management.commands.migrate_coop_cms_dump",
            "coop_cms.management.commands.send_newsletter",
            "coop_cms.migrations",
            "coop_cms.migrations.0001_initial",
            "coop_cms.migrations.0002_navnode_in_navigation",
            "coop_cms.migrations.0003_document",
            "coop_cms.migrations.0004_publication",
            "coop_cms.migrations.0005_no_duplicate_in_nodes",
            "coop_cms.migrations.0006_auto__chg_field_article_content",
            "coop_cms.migrations.0007_auto__chg_field_article_title",
            "coop_cms.migrations.0008_auto__add_pieceofhtml__add_field_article_template",
            "coop_cms.migrations.0009_auto__add_articlesection__add_field_article_logo__add_field_article_su",
            "coop_cms.migrations.0010_temp_logo",
            "coop_cms.migrations.0011_auto__del_article",
            "coop_cms.migrations.0012_auto__add_field_document_is_private",
            "coop_cms.migrations.0013_newsletter",
            "coop_cms.migrations.0014_newsletteritem_unicity",
            "coop_cms.migrations.0015_auto__add_newslettersending",
            "coop_cms.migrations.0016_auto__add_field_articlesection_ordering",
            "coop_cms.migrations.0017_navtree",
            "coop_cms.migrations.0018_navnode_tree",
            "coop_cms.migrations.0019_assign_navnode_tree",
            "coop_cms.migrations.0020_navnode_tree_notnull",
            "coop_cms.migrations.0021_navnode_unicity",
            "coop_cms.migrations.0022_links",
            "coop_cms.migrations.0023_auto__chg_field_newsletter_content__chg_field_pieceofhtml_content",
            "coop_cms.migrations.0024_rename_article_section",
            "coop_cms.migrations.0025_auto__add_field_articlecategory_slug",
            "coop_cms.migrations.0026_auto__del_navtree__chg_field_navnode_tree",
            "coop_cms.migrations.0027_auto__chg_field_navnode_tree__add_field_articlecategory_logo__add_fiel",
            "coop_cms.migrations.0028_auto__del_newsletter__del_newsletteritem__del_unique_newsletteritem_co",
            "coop_cms.models",
            "coop_cms.perms_backends",
            "coop_cms.settings",
            "coop_cms.templatetags",
            "coop_cms.templatetags.article_tags",
            "coop_cms.templatetags.coop_edition",
            "coop_cms.templatetags.coop_navigation",
            "coop_cms.tests",
            "coop_cms.urls",
            "coop_cms.utils",
            "coop_cms.views",
            "coop_cms.widgets"
        ],
        "version": "0.7.0"
    },
    "coop-colorbox": {
        "cmdline": [],
        "modules": [
            "colorbox",
            "colorbox.decorators"
        ],
        "version": "0.1.3"
    },
    "coop-geo": {
        "cmdline": [],
        "modules": [
            "coop_geo",
            "coop_geo.admin",
            "coop_geo.forms",
            "coop_geo.management",
            "coop_geo.management.commands",
            "coop_geo.management.commands.create_epci",
            "coop_geo.management.commands.geocode",
            "coop_geo.management.commands.importfromgeofla",
            "coop_geo.management.commands.regions",
            "coop_geo.migrations",
            "coop_geo.migrations.0001_initial",
            "coop_geo.migrations.0002_auto__add_areatype__del_field_arearelations_relation_type__add_field_a",
            "coop_geo.migrations.0003_auto__del_field_area_area_type_tmp__chg_field_area_area_type",
            "coop_geo.migrations.0004_auto__chg_field_area_polygon__chg_field_area_area_type",
            "coop_geo.migrations.0005_auto__add_locationcategory__del_field_located_location_type__add_field",
            "coop_geo.migrations.0006_auto__add_field_area_status__add_field_area_uri__add_field_area_uuid__",
            "coop_geo.migrations.0007_auto__add_field_location_geohash",
            "coop_geo.migrations.0008_auto__add_field_area_created__add_field_area_modified",
            "coop_geo.migrations.0009_auto__add_field_location_x_code__add_field_location_country",
            "coop_geo.models",
            "coop_geo.templatetags",
            "coop_geo.templatetags.varformat",
            "coop_geo.tests",
            "coop_geo.urls",
            "coop_geo.views",
            "coop_geo.widgets"
        ],
        "version": "0.2.0"
    },
    "coop-html-editor": {
        "cmdline": [],
        "modules": [
            "coop_html_editor",
            "coop_html_editor.apps",
            "coop_html_editor.forms",
            "coop_html_editor.settings",
            "coop_html_editor.templatetags",
            "coop_html_editor.templatetags.html_editor_utils",
            "coop_html_editor.urls",
            "coop_html_editor.utils",
            "coop_html_editor.views",
            "coop_html_editor.widgets"
        ],
        "version": "1.0.6"
    },
    "coop-tag": {
        "cmdline": [],
        "modules": [
            "coop_tag",
            "coop_tag.admin",
            "coop_tag.forms",
            "coop_tag.managers",
            "coop_tag.migrations",
            "coop_tag.migrations.0001_initial",
            "coop_tag.migrations.0002_auto__add_tagcategory__add_field_ctag_category",
            "coop_tag.migrations.0003_auto__add_field_tagcategory_slug",
            "coop_tag.migrations.0004_auto__add_field_tagcategory_position",
            "coop_tag.migrations.0005_auto__add_field_ctag_concept_uri__chg_field_tagcategory_slug",
            "coop_tag.migrations.0006_auto__add_field_ctag_status__add_field_ctag_uuid__chg_field_ctag_uri",
            "coop_tag.migrations.0007_auto__del_field_ctag_author_uri__add_field_ctag_person_uri",
            "coop_tag.migrations.0008_auto__chg_field_ctag_created__chg_field_ctag_modified",
            "coop_tag.models",
            "coop_tag.settings",
            "coop_tag.templatetags",
            "coop_tag.templatetags.tagger_extras",
            "coop_tag.urls",
            "coop_tag.utils",
            "coop_tag.views",
            "coop_tag.widgets"
        ],
        "version": "0.2.1"
    },
    "cooper": {
        "cmdline": [],
        "modules": [
            "cooper",
            "cooper.cooper"
        ],
        "version": "0.1.3"
    },
    "cooperate": {
        "cmdline": [],
        "modules": [
            "cooperate",
            "cooperate.concurrency",
            "cooperate.executionner",
            "cooperate.modes",
            "cooperate.nodes",
            "cooperate.renderers"
        ],
        "version": "0.3.1"
    },
    "cooperative": {
        "cmdline": [],
        "modules": [
            "cooperative",
            "cooperative._meta",
            "cooperative.tests",
            "cooperative.tests.test_cooperative",
            "cooperative.tests.test_version"
        ],
        "version": "0.1.10"
    },
    "cooperhewitt.api": {
        "cmdline": [],
        "modules": [
            "cooperhewitt",
            "cooperhewitt.api",
            "cooperhewitt.api.client",
            "cooperhewitt.api.request"
        ],
        "version": "0.4.3"
    },
    "coopr": {
        "cmdline": [],
        "modules": [
            "coopr",
            "coopr.pyomo"
        ],
        "version": "4.0.9597"
    },
    "coopr.age": {
        "cmdline": [],
        "modules": [
            "age",
            "age.CooprAge",
            "age.CooprAgeCore",
            "age.Editor",
            "age.PyomoSyntax",
            "age.UIProblem"
        ],
        "version": "1.1.4"
    },
    "coopr.bilevel": {
        "cmdline": [],
        "modules": [
            "bilevel",
            "bilevel.components",
            "bilevel.linear_dual",
            "bilevel.plugins",
            "bilevel.plugins.dual",
            "bilevel.tests",
            "bilevel.tests.test_linear_dual"
        ],
        "version": "1.0"
    },
    "coopr.colin": {
        "cmdline": [],
        "modules": [],
        "version": "2.2.3"
    },
    "coopr.core": {
        "cmdline": [],
        "modules": [
            "core",
            "core._command",
            "core._common",
            "core._config",
            "core._plugin",
            "core._task",
            "core.plugin",
            "core.tests",
            "core.tests.test_task"
        ],
        "version": "2.0.4"
    },
    "coopr.dae": {
        "cmdline": [],
        "modules": [
            "dae",
            "dae.differential",
            "dae.diffset",
            "dae.inputvar",
            "dae.misc",
            "dae.plugins",
            "dae.plugins.colloc",
            "dae.plugins.impliciteuler",
            "dae.tests",
            "dae.tests.test_differential",
            "dae.tests.test_diffset",
            "dae.tests.test_misc",
            "dae.utilities"
        ],
        "version": "1.2"
    },
    "coopr.data.cute": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.1"
    },
    "coopr.data.pyomo": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.1"
    },
    "coopr.doc": {
        "cmdline": [],
        "modules": [
            "coopr"
        ],
        "version": "1.3.2"
    },
    "coopr.environ": {
        "cmdline": [],
        "modules": [
            "environ"
        ],
        "version": "1.0.1"
    },
    "coopr.extras": {
        "cmdline": [],
        "modules": [
            "extras",
            "extras.test_extras"
        ],
        "version": "1.2.2"
    },
    "coopr.gdp": {
        "cmdline": [],
        "modules": [
            "gdp",
            "gdp.bigm",
            "gdp.chull",
            "gdp.disjunct",
            "gdp.plugins",
            "gdp.plugins.bigm",
            "gdp.plugins.bilinear",
            "gdp.plugins.chull",
            "gdp.tests",
            "gdp.tests.test_gdp"
        ],
        "version": "1.2"
    },
    "coopr.misc": {
        "cmdline": [],
        "modules": [
            "misc",
            "misc.coopr_main",
            "misc.coopr_parser",
            "misc.driver",
            "misc.runtests",
            "misc.scripts"
        ],
        "version": "2.8.2"
    },
    "coopr.mpec": {
        "cmdline": [],
        "modules": [
            "mpec",
            "mpec.complementarity",
            "mpec.plugins",
            "mpec.plugins.mpec1",
            "mpec.plugins.mpec2",
            "mpec.plugins.mpec3",
            "mpec.tests",
            "mpec.tests.test_complementarity"
        ],
        "version": "1.0"
    },
    "coopr.neos": {
        "cmdline": [],
        "modules": [
            "neos",
            "neos.kestrel",
            "neos.plugins",
            "neos.plugins.NEOS",
            "neos.plugins.kestrel_plugin"
        ],
        "version": "1.1.2"
    },
    "coopr.openopt": {
        "cmdline": [],
        "modules": [
            "openopt",
            "openopt.FuncDesignerExt",
            "openopt.func_designer",
            "openopt.plugins",
            "openopt.plugins.OPEN_OPT",
            "openopt.test_terms"
        ],
        "version": "1.1.3"
    },
    "coopr.opt": {
        "cmdline": [],
        "modules": [
            "opt",
            "opt.base",
            "opt.base.convert",
            "opt.base.error",
            "opt.base.formats",
            "opt.base.log_config",
            "opt.base.opt_config",
            "opt.base.problem",
            "opt.base.results",
            "opt.base.solvers",
            "opt.blackbox",
            "opt.blackbox.point",
            "opt.blackbox.problem",
            "opt.blackbox.problem_io",
            "opt.blackbox.solver",
            "opt.parallel",
            "opt.parallel.async_solver",
            "opt.parallel.local",
            "opt.parallel.manager",
            "opt.plugins",
            "opt.plugins.colin_xml_io",
            "opt.plugins.dakota_text_io",
            "opt.plugins.res",
            "opt.plugins.sol",
            "opt.problem",
            "opt.problem.ampl",
            "opt.results",
            "opt.results.OSResults",
            "opt.results.container",
            "opt.results.problem",
            "opt.results.results_",
            "opt.results.solution",
            "opt.results.solver",
            "opt.results_schema",
            "opt.scripts",
            "opt.scripts.driver",
            "opt.scripts.pyro_mip_server",
            "opt.solver",
            "opt.solver.ilmcmd",
            "opt.solver.shellcmd",
            "opt.testing",
            "opt.testing.pyunit",
            "opt.tests",
            "opt.tests.base",
            "opt.tests.base.test_ampl",
            "opt.tests.base.test_config",
            "opt.tests.base.test_convert",
            "opt.tests.base.test_factory",
            "opt.tests.base.test_sol",
            "opt.tests.base.test_soln",
            "opt.tests.base.test_solver",
            "opt.tests.blackbox",
            "opt.tests.blackbox.test_parallel",
            "opt.tests.blackbox.test_problem",
            "opt.tests.blackbox.test_ps"
        ],
        "version": "2.12.2"
    },
    "coopr.os": {
        "cmdline": [],
        "modules": [
            "os",
            "os.OSSolverService",
            "os.OSrL",
            "os.plugins",
            "os.plugins.OSiL_writer",
            "os.plugins.OSrL_reader",
            "os.plugins.ossolver",
            "os.tests",
            "os.tests.test_cached",
            "os.tests.test_os"
        ],
        "version": "1.0.4"
    },
    "coopr.plugins": {
        "cmdline": [],
        "modules": [
            "coopr",
            "coopr.plugins",
            "coopr.plugins.converter",
            "coopr.plugins.converter.ampl",
            "coopr.plugins.converter.glpsol",
            "coopr.plugins.converter.pico",
            "coopr.plugins.converter.pyomo",
            "coopr.plugins.smanager",
            "coopr.plugins.smanager.phpyro",
            "coopr.plugins.smanager.pyro",
            "coopr.plugins.solvers",
            "coopr.plugins.solvers.ASL",
            "coopr.plugins.solvers.CBCplugin",
            "coopr.plugins.solvers.CPLEX",
            "coopr.plugins.solvers.CPLEXDirect",
            "coopr.plugins.solvers.GLPK",
            "coopr.plugins.solvers.GLPK_old",
            "coopr.plugins.solvers.GUROBI",
            "coopr.plugins.solvers.GUROBI_RUN",
            "coopr.plugins.solvers.PICO",
            "coopr.plugins.solvers.SCIPAMPL",
            "coopr.plugins.solvers.XPRESS",
            "coopr.plugins.solvers.glpk_direct",
            "coopr.plugins.solvers.gurobi_direct",
            "coopr.plugins.solvers.mockmip",
            "coopr.plugins.solvers.ps",
            "coopr.plugins.solvers.wrappers",
            "coopr.plugins.testdriver",
            "coopr.plugins.testdriver.mip",
            "coopr.plugins.testdriver.pyomo",
            "coopr.plugins.tests",
            "coopr.plugins.tests.mip",
            "coopr.plugins.tests.mip.model",
            "coopr.plugins.tests.mip.test_asl",
            "coopr.plugins.tests.mip.test_convert",
            "coopr.plugins.tests.mip.test_factory",
            "coopr.plugins.tests.mip.test_ipopt",
            "coopr.plugins.tests.mip.test_mip",
            "coopr.plugins.tests.mip.test_solver",
            "coopr.plugins.tests.pickling",
            "coopr.plugins.tests.pickling.test_pickle",
            "coopr.plugins.tests.pickling.trivial_model"
        ],
        "version": "3.1"
    },
    "coopr.plugins.neos": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "coopr.pyomo": {
        "cmdline": [],
        "modules": [
            "pyomo",
            "pyomo.base",
            "pyomo.base.DataPortal",
            "pyomo.base.PyomoModel",
            "pyomo.base.PyomoModelData",
            "pyomo.base.block",
            "pyomo.base.blockutil",
            "pyomo.base.component",
            "pyomo.base.component_order",
            "pyomo.base.connector",
            "pyomo.base.constraint",
            "pyomo.base.expr",
            "pyomo.base.expression",
            "pyomo.base.external",
            "pyomo.base.instance2dat",
            "pyomo.base.intrinsic_functions",
            "pyomo.base.label",
            "pyomo.base.log_config",
            "pyomo.base.misc",
            "pyomo.base.numvalue",
            "pyomo.base.objective",
            "pyomo.base.param",
            "pyomo.base.piecewise",
            "pyomo.base.plugin",
            "pyomo.base.pyomo",
            "pyomo.base.rangeset",
            "pyomo.base.set_types",
            "pyomo.base.sets",
            "pyomo.base.sos",
            "pyomo.base.sparse_indexed_component",
            "pyomo.base.suffix",
            "pyomo.base.symbol_map",
            "pyomo.base.util",
            "pyomo.base.var",
            "pyomo.check",
            "pyomo.check.checker",
            "pyomo.check.driver",
            "pyomo.check.hooks",
            "pyomo.check.runner",
            "pyomo.check.script",
            "pyomo.components",
            "pyomo.components.action",
            "pyomo.components.check",
            "pyomo.data",
            "pyomo.data.TableData",
            "pyomo.data.parse_datacmds",
            "pyomo.data.process_data",
            "pyomo.expr",
            "pyomo.expr.ampl_repn",
            "pyomo.expr.canonical_repn",
            "pyomo.expr.linear_repn",
            "pyomo.plugins",
            "pyomo.plugins.check",
            "pyomo.plugins.check.checker",
            "pyomo.plugins.check.checkers",
            "pyomo.plugins.check.checkers.py3k",
            "pyomo.plugins.check.checkers.py3k.printing",
            "pyomo.plugins.check.checkers.py3k.range",
            "pyomo.plugins.check.checkers.pyomo",
            "pyomo.plugins.check.checkers.pyomo._rulebase",
            "pyomo.plugins.check.checkers.pyomo.assignment",
            "pyomo.plugins.check.checkers.pyomo.conditional",
            "pyomo.plugins.check.checkers.pyomo.imports",
            "pyomo.plugins.check.checkers.pyomo.model",
            "pyomo.plugins.check.checkers.pyomo.rule",
            "pyomo.plugins.check.checkers.sample",
            "pyomo.plugins.check.checkers.sample.printing",
            "pyomo.plugins.check.function",
            "pyomo.plugins.check.model",
            "pyomo.plugins.data",
            "pyomo.plugins.data.ampl",
            "pyomo.plugins.data.csv_table",
            "pyomo.plugins.data.db_table",
            "pyomo.plugins.data.json_dict",
            "pyomo.plugins.data.sheet",
            "pyomo.plugins.data.text",
            "pyomo.plugins.data.xml_table",
            "pyomo.plugins.io",
            "pyomo.plugins.io.ampl",
            "pyomo.plugins.io.ampl.ampl_",
            "pyomo.plugins.io.cpxlp",
            "pyomo.plugins.io.problem_utils",
            "pyomo.plugins.transform",
            "pyomo.plugins.transform.dual_transformation",
            "pyomo.plugins.transform.eliminate_fixed_vars",
            "pyomo.plugins.transform.equality_transform",
            "pyomo.plugins.transform.hierarchy",
            "pyomo.plugins.transform.model",
            "pyomo.plugins.transform.nonnegative_transform",
            "pyomo.plugins.transform.radix_linearization",
            "pyomo.plugins.transform.relax_integrality",
            "pyomo.plugins.transform.standard_form",
            "pyomo.plugins.transform.util",
            "pyomo.preprocess",
            "pyomo.preprocess.compute_ampl_repn",
            "pyomo.preprocess.compute_canonical_repn",
            "pyomo.preprocess.simple_preprocessor",
            "pyomo.scripting",
            "pyomo.scripting.convert",
            "pyomo.scripting.driver",
            "pyomo.scripting.pyomo",
            "pyomo.scripting.util",
            "pyomo.tests",
            "pyomo.tests.ampl",
            "pyomo.tests.ampl.helper",
            "pyomo.tests.ampl.small10_testCase",
            "pyomo.tests.ampl.small11_testCase",
            "pyomo.tests.ampl.small12_testCase",
            "pyomo.tests.ampl.small1_testCase",
            "pyomo.tests.ampl.small2_testCase",
            "pyomo.tests.ampl.small3_testCase",
            "pyomo.tests.ampl.small4_testCase",
            "pyomo.tests.ampl.small5_testCase",
            "pyomo.tests.ampl.small6_testCase",
            "pyomo.tests.ampl.small7_testCase",
            "pyomo.tests.ampl.small8_testCase",
            "pyomo.tests.ampl.small9_testCase",
            "pyomo.tests.ampl.test_ampl_comparison",
            "pyomo.tests.ampl.test_ampl_comparison_no_canonical",
            "pyomo.tests.ampl.test_cAmpl",
            "pyomo.tests.ampl.test_equality",
            "pyomo.tests.ampl.test_suffixes",
            "pyomo.tests.check",
            "pyomo.tests.check.test_examples",
            "pyomo.tests.check.test_runner",
            "pyomo.tests.check.test_script",
            "pyomo.tests.data",
            "pyomo.tests.data.test_odbc_ini",
            "pyomo.tests.diet",
            "pyomo.tests.diet.test_diet",
            "pyomo.tests.examples",
            "pyomo.tests.examples.pmedian",
            "pyomo.tests.examples.pmedian1",
            "pyomo.tests.examples.pmedian2",
            "pyomo.tests.examples.pmedian3",
            "pyomo.tests.examples.pmedian4",
            "pyomo.tests.examples.test_amplbook2",
            "pyomo.tests.examples.test_convert",
            "pyomo.tests.examples.test_pyomo",
            "pyomo.tests.examples.test_tutorials",
            "pyomo.tests.expr",
            "pyomo.tests.expr.test_canonical",
            "pyomo.tests.unit",
            "pyomo.tests.unit.test_action",
            "pyomo.tests.unit.test_benders",
            "pyomo.tests.unit.test_block",
            "pyomo.tests.unit.test_block_model",
            "pyomo.tests.unit.test_bounds",
            "pyomo.tests.unit.test_check",
            "pyomo.tests.unit.test_component",
            "pyomo.tests.unit.test_con",
            "pyomo.tests.unit.test_concrete",
            "pyomo.tests.unit.test_dataportal",
            "pyomo.tests.unit.test_expr",
            "pyomo.tests.unit.test_expression",
            "pyomo.tests.unit.test_misc",
            "pyomo.tests.unit.test_model",
            "pyomo.tests.unit.test_modeldata",
            "pyomo.tests.unit.test_mutable",
            "pyomo.tests.unit.test_numvalue",
            "pyomo.tests.unit.test_obj",
            "pyomo.tests.unit.test_param",
            "pyomo.tests.unit.test_pickle",
            "pyomo.tests.unit.test_piecewise",
            "pyomo.tests.unit.test_preprocess",
            "pyomo.tests.unit.test_set",
            "pyomo.tests.unit.test_suffix",
            "pyomo.tests.unit.test_transform",
            "pyomo.tests.unit.test_util",
            "pyomo.tests.unit.test_var",
            "pyomo.tests.unit.test_var_set_bounds",
            "pyomo.tests.unit.uninstantiated_model_linear",
            "pyomo.tests.unit.uninstantiated_model_quadratic"
        ],
        "version": "3.6.4"
    },
    "coopr.pysos": {
        "cmdline": [],
        "modules": [
            "pysos",
            "pysos.excel",
            "pysos.globals",
            "pysos.model",
            "pysos.opt",
            "pysos.pyomo",
            "pysos.pysos_cmd",
            "pysos.sos"
        ],
        "version": "2.0.9"
    },
    "coopr.pysp": {
        "cmdline": [],
        "modules": [
            "pysp",
            "pysp.computeconf",
            "pysp.convergence",
            "pysp.drive_lagrangian_cc",
            "pysp.dualphmodel",
            "pysp.ef",
            "pysp.ef_vss",
            "pysp.ef_writer_script",
            "pysp.generators",
            "pysp.lagrangeMorePR",
            "pysp.lagrangeParam",
            "pysp.lagrangeutils",
            "pysp.log_config",
            "pysp.ph",
            "pysp.phextension",
            "pysp.phinit",
            "pysp.phobjective",
            "pysp.phsolverserver",
            "pysp.phsolverserverutils",
            "pysp.phutils",
            "pysp.plugins",
            "pysp.plugins.convexhullboundextension",
            "pysp.plugins.csvsolutionwriter",
            "pysp.plugins.examplephextension",
            "pysp.plugins.jsonsolutionwriter",
            "pysp.plugins.phboundextension",
            "pysp.plugins.phhistoryextension",
            "pysp.plugins.schuripwriter",
            "pysp.plugins.sorgw",
            "pysp.plugins.testphextension",
            "pysp.plugins.wwphextension",
            "pysp.scenariotree",
            "pysp.solutionwriter",
            "pysp.tests",
            "pysp.tests.examples",
            "pysp.tests.examples.ef_checker",
            "pysp.tests.examples.ph_checker",
            "pysp.tests.examples.test_ef",
            "pysp.tests.examples.test_ph",
            "pysp.tests.unit",
            "pysp.tests.unit.test_ph",
            "pysp.util",
            "pysp.util.scenariomodels"
        ],
        "version": "3.5.5"
    },
    "coopr.solvers": {
        "cmdline": [],
        "modules": [
            "solvers",
            "solvers.mockmip",
            "solvers.plugins",
            "solvers.plugins.converter",
            "solvers.plugins.converter.ampl",
            "solvers.plugins.converter.glpsol",
            "solvers.plugins.converter.pico",
            "solvers.plugins.converter.pyomo",
            "solvers.plugins.smanager",
            "solvers.plugins.smanager.phpyro",
            "solvers.plugins.smanager.pyro",
            "solvers.plugins.solvers",
            "solvers.plugins.solvers.ASL",
            "solvers.plugins.solvers.CBCplugin",
            "solvers.plugins.solvers.CPLEX",
            "solvers.plugins.solvers.CPLEXDirect",
            "solvers.plugins.solvers.CPLEXPersistent",
            "solvers.plugins.solvers.GLPK",
            "solvers.plugins.solvers.GLPK_old",
            "solvers.plugins.solvers.GUROBI",
            "solvers.plugins.solvers.GUROBI_RUN",
            "solvers.plugins.solvers.PICO",
            "solvers.plugins.solvers.SCIPAMPL",
            "solvers.plugins.solvers.XPRESS",
            "solvers.plugins.solvers.glpk_direct",
            "solvers.plugins.solvers.gurobi_direct",
            "solvers.plugins.solvers.ps",
            "solvers.plugins.solvers.pywrapper",
            "solvers.plugins.testdriver",
            "solvers.plugins.testdriver.mip",
            "solvers.plugins.testdriver.pyomo",
            "solvers.tests",
            "solvers.tests.io",
            "solvers.tests.io.fd",
            "solvers.tests.io.model_types",
            "solvers.tests.io.test_writers",
            "solvers.tests.io.writer_test_cases",
            "solvers.tests.mip",
            "solvers.tests.mip.model",
            "solvers.tests.mip.test_asl",
            "solvers.tests.mip.test_convert",
            "solvers.tests.mip.test_factory",
            "solvers.tests.mip.test_ipopt",
            "solvers.tests.mip.test_mip",
            "solvers.tests.mip.test_solver",
            "solvers.tests.pickling",
            "solvers.tests.pickling.test_pickle",
            "solvers.tests.pickling.trivial_model",
            "solvers.wrappers"
        ],
        "version": "3.2.1"
    },
    "coopr.sucasa": {
        "cmdline": [],
        "modules": [
            "sucasa",
            "sucasa.ampl_info",
            "sucasa.ampl_parser",
            "sucasa.main_script",
            "sucasa.mapfile_parser",
            "sucasa.run_ampl",
            "sucasa.sucasa_PICO",
            "sucasa.symb_info",
            "sucasa.tests",
            "sucasa.tests.models",
            "sucasa.tests.models.test_amplbook2",
            "sucasa.tests.unit",
            "sucasa.tests.unit.test_AmplInfo",
            "sucasa.tests.unit.test_parser",
            "sucasa.tests.unit.test_symb_info"
        ],
        "version": "3.0"
    },
    "coopy": {
        "cmdline": [],
        "modules": [
            "coopy",
            "coopy.base",
            "coopy.decorators",
            "coopy.fileutils",
            "coopy.foundation",
            "coopy.journal",
            "coopy.network",
            "coopy.network.default_select",
            "coopy.network.linux_epoll",
            "coopy.network.network",
            "coopy.network.osx_kqueue",
            "coopy.restore",
            "coopy.snapshot",
            "coopy.utils",
            "tests",
            "tests.domain",
            "tests.functional",
            "tests.functional.test_coopy",
            "tests.unit",
            "tests.unit.test_base",
            "tests.unit.test_fileutils",
            "tests.unit.test_foundation",
            "tests.unit.test_journal",
            "tests.unit.test_network",
            "tests.unit.test_network_select",
            "tests.unit.test_snapshot",
            "tests.unit.test_utils"
        ],
        "version": "0.3.1"
    },
    "coorblimey": {
        "cmdline": [],
        "modules": [
            "coorblimey",
            "coorblimey.geocentrics",
            "coorblimey.script"
        ],
        "version": "0.1.2"
    },
    "coordinate": {
        "cmdline": [],
        "modules": [
            "coordinate",
            "coordinate._queue",
            "coordinate._redis",
            "coordinate._registry",
            "coordinate._task_master",
            "coordinate.config",
            "coordinate.exceptions",
            "coordinate.run",
            "coordinate.run_multi_worker",
            "coordinate.tests",
            "coordinate.tests.fixtures",
            "coordinate.tests.run",
            "coordinate.tests.test_cli",
            "coordinate.tests.test_dependencies",
            "coordinate.tests.test_queue",
            "coordinate.tests.test_registry",
            "coordinate.tests.test_task_master",
            "coordinate.tests.test_workers",
            "coordinate.workers"
        ],
        "version": "0.8.9.dev2"
    },
    "coordinates-extractor": {
        "cmdline": [],
        "modules": [
            "coordinates_extractor"
        ],
        "version": "0.4"
    },
    "coordsys": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "coortransform-girdgeographic": {
        "cmdline": [],
        "modules": [],
        "version": "0.02.0"
    },
    "cop": {
        "cmdline": [],
        "modules": [
            "cop",
            "cop.flow",
            "cop.sinks",
            "cop.sources",
            "cop.steps",
            "cop.utils"
        ],
        "version": "0.2"
    },
    "copads": {
        "cmdline": [],
        "modules": [
            "copads",
            "copads.array",
            "copads.bag",
            "copads.colormap",
            "copads.constants",
            "copads.copadsexceptions",
            "copads.dataframe",
            "copads.dose_entities",
            "copads.dose_executor",
            "copads.dose_parameters",
            "copads.dose_world",
            "copads.genetic",
            "copads.graph",
            "copads.hash",
            "copads.hypothesis",
            "copads.lc_bf",
            "copads.matrix",
            "copads.n_bf",
            "copads.neural",
            "copads.nrpy",
            "copads.objectdistance",
            "copads.operations",
            "copads.prioritydictionary",
            "copads.ragaraja",
            "copads.register_machine",
            "copads.ring",
            "copads.samplestatistics",
            "copads.set",
            "copads.statisticsdistribution",
            "copads.test",
            "copads.test.t_graph",
            "copads.test.t_hypothesis",
            "copads.test.t_matrix",
            "copads.test.t_n_bf",
            "copads.test.t_neural",
            "copads.test.t_nrpy",
            "copads.test.t_objectdistance",
            "copads.test.t_operations",
            "copads.test.t_ragaraja",
            "copads.test.t_rbtree",
            "copads.test.t_samplestatistics",
            "copads.test.t_statisticsdistribution",
            "copads.test.tharness",
            "copads.tree",
            "copads.treenodes"
        ],
        "version": "0.4.1"
    },
    "copernicus": {
        "cmdline": [
            "copernicus.py",
            "imageGwall.py"
        ],
        "modules": [],
        "version": "1.2.7"
    },
    "copilot": {
        "cmdline": [],
        "modules": [
            "copilot",
            "copilot.config",
            "copilot.copy_file",
            "copilot.copy_state",
            "copilot.device_to",
            "copilot.file_server",
            "copilot.frame",
            "copilot.home",
            "copilot.message",
            "copilot.options",
            "copilot.select_device",
            "copilot.usbdevices",
            "copilot.utils"
        ],
        "version": "0.1.9"
    },
    "coping": {
        "cmdline": [
            "coping"
        ],
        "modules": [
            "CoPing",
            "CoPing.ping"
        ],
        "version": "0.1.4"
    },
    "copipes": {
        "cmdline": [],
        "modules": [
            "copipes",
            "copipes.example",
            "copipes.test"
        ],
        "version": "0.1"
    },
    "copoisatools": {
        "cmdline": [],
        "modules": [
            "isatools",
            "isatools.convert",
            "isatools.convert.biocrates2isatab",
            "isatools.convert.common_functions",
            "isatools.convert.isatab2cedar",
            "isatools.convert.isatab2json",
            "isatools.convert.isatab2sra",
            "isatools.convert.json2isatab",
            "isatools.convert.json2sra",
            "isatools.convert.mw2isa",
            "isatools.convert.sra2isatab",
            "isatools.io",
            "isatools.io.isatab_configurator",
            "isatools.io.isatab_parser",
            "isatools.io.mtbls",
            "isatools.io.storage_adapter",
            "isatools.io.utils",
            "isatools.isajson",
            "isatools.isatab",
            "isatools.model",
            "isatools.model.v1",
            "isatools.sampledata",
            "isatools.sampledata.bii_i_1",
            "isatools.sampledata.bii_s_3",
            "isatools.sampledata.bii_s_7",
            "isatools.schemas",
            "isatools.sra",
            "isatools.validate",
            "isatools.validate.validate_json",
            "isatools.validate.validate_schemas"
        ],
        "version": "0.2.6"
    },
    "coppe.govupload": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "copr": {
        "cmdline": [],
        "modules": [
            "copr",
            "copr.client",
            "copr.client.client",
            "copr.client.parsers",
            "copr.client.responses",
            "copr.client_v2",
            "copr.client_v2.client",
            "copr.client_v2.common",
            "copr.client_v2.entities",
            "copr.client_v2.handlers",
            "copr.client_v2.net_client",
            "copr.client_v2.resources",
            "copr.client_v2.schemas",
            "copr.client_v2.tools",
            "copr.exceptions",
            "copr.test",
            "copr.test.test_client",
            "copr.test.test_resources",
            "copr.util"
        ],
        "version": "1.73"
    },
    "copr-cli": {
        "cmdline": [],
        "modules": [
            "copr_cli",
            "copr_cli.main",
            "copr_cli.util"
        ],
        "version": "1.55"
    },
    "copulalib": {
        "cmdline": [],
        "modules": [
            "copulalib",
            "copulalib.copulalib",
            "copulalib.test"
        ],
        "version": "1.1.0"
    },
    "copusher": {
        "cmdline": [
            "copusher"
        ],
        "modules": [
            "copusher",
            "copusher.copusher",
            "copusher.storages",
            "copusher.storages.github_gist"
        ],
        "version": "0.0.1"
    },
    "copy2kindle": {
        "cmdline": [],
        "modules": [
            "copy2kindle",
            "copy2kindle.cli",
            "copy2kindle.common",
            "copy2kindle.copier",
            "copy2kindle.darwin"
        ],
        "version": "0.1"
    },
    "copycat": {
        "cmdline": [],
        "modules": [
            "copycat",
            "copycat.decorators",
            "copycat.fileutils",
            "copycat.logger",
            "copycat.network",
            "copycat.replication",
            "copycat.restore",
            "copycat.snapshot"
        ],
        "version": "0.2a"
    },
    "copycat-clipboard": {
        "cmdline": [
            "copycat"
        ],
        "modules": [
            "copycat"
        ],
        "version": "1.0"
    },
    "copycheck": {
        "cmdline": [],
        "modules": [
            "copycheck"
        ],
        "version": "1.0.3"
    },
    "copydoc": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.5"
    },
    "copydog": {
        "cmdline": [],
        "modules": [
            "copydog",
            "copydog.adapters",
            "copydog.api",
            "copydog.api.base",
            "copydog.api.redmine",
            "copydog.api.trello",
            "copydog.bin",
            "copydog.bin.runner",
            "copydog.convertor",
            "copydog.storage",
            "copydog.storage.backends",
            "copydog.storage.backends.redis_backend",
            "copydog.storage.base",
            "copydog.storage.factory",
            "copydog.utils",
            "copydog.utils.config",
            "copydog.utils.pandoc",
            "copydog.utils.storage_browser",
            "copydog.utils.task",
            "copydog.watcher"
        ],
        "version": "0.1"
    },
    "copyenv": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "copyfile": {
        "cmdline": [],
        "modules": [
            "copyfile",
            "copyfile.copyfile"
        ],
        "version": "0.1.1"
    },
    "copyingmock": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "copyipsum": {
        "cmdline": [
            "copyipsum"
        ],
        "modules": [],
        "version": "0.0.1"
    },
    "copyleaks": {
        "cmdline": [],
        "modules": [
            "copyleaks.commandfailederror",
            "copyleaks.consts",
            "copyleaks.copyleakscloud",
            "copyleaks.copyleaksprocess",
            "copyleaks.eocrlanguage",
            "copyleaks.logintoken",
            "copyleaks.processoptions",
            "copyleaks.product",
            "copyleaks.resultrecord"
        ],
        "version": "2.2"
    },
    "copyleakspythonsdk": {
        "cmdline": [],
        "modules": [
            "copyleaks_sdk",
            "copyleaks_sdk.copyleaks"
        ],
        "version": "0.1"
    },
    "copypaste": {
        "cmdline": [
            "copy",
            "paste"
        ],
        "modules": [
            "copypaste",
            "copypaste.cli",
            "copypaste.unix",
            "copypaste.win"
        ],
        "version": "0.2"
    },
    "copyright": {
        "cmdline": [
            "copyright"
        ],
        "modules": [
            "copyright",
            "copyright.app",
            "copyright.cli",
            "copyright.config",
            "copyright.diff",
            "copyright.io",
            "copyright.lang",
            "copyright.license",
            "copyright.log",
            "copyright.template",
            "copyright.version"
        ],
        "version": "1.0.1.0"
    },
    "copyrightupdate": {
        "cmdline": [
            "copyright-updater"
        ],
        "modules": [
            "copyrightupdate"
        ],
        "version": "1.2"
    },
    "copyrite": {
        "cmdline": [],
        "modules": [
            "copyrite",
            "copyrite.alias",
            "copyrite.cli",
            "copyrite.copyrite",
            "copyrite.vcs",
            "copyrite.vcs.base",
            "copyrite.vcs.git"
        ],
        "version": "0.1.0"
    },
    "copysc": {
        "cmdline": [],
        "modules": [
            "copysc",
            "copysc.copyscreen"
        ],
        "version": "0.3.4"
    },
    "copytext": {
        "cmdline": [],
        "modules": [
            "copytext"
        ],
        "version": "0.1.9"
    },
    "copyusb": {
        "cmdline": [],
        "modules": [
            "copyusb"
        ],
        "version": "1.1.0"
    },
    "coquery": {
        "cmdline": [],
        "modules": [
            "coquery",
            "coquery.bibliography",
            "coquery.coquery",
            "coquery.corpus",
            "coquery.corpusbuilder",
            "coquery.defines",
            "coquery.documents",
            "coquery.errors",
            "coquery.functions",
            "coquery.gui",
            "coquery.gui.about",
            "coquery.gui.app",
            "coquery.gui.classes",
            "coquery.gui.connectionconfiguration",
            "coquery.gui.contextviewer",
            "coquery.gui.corpusbuilder_interface",
            "coquery.gui.corpusmanager",
            "coquery.gui.createuser",
            "coquery.gui.csvoptions",
            "coquery.gui.errorbox",
            "coquery.gui.figureoptions",
            "coquery.gui.filterviewer",
            "coquery.gui.functionapply",
            "coquery.gui.helpviewer",
            "coquery.gui.linkselect",
            "coquery.gui.logfile",
            "coquery.gui.mysql_guide",
            "coquery.gui.nltkdatafiles",
            "coquery.gui.pyqt_compat",
            "coquery.gui.removecorpus",
            "coquery.gui.renamecolumn",
            "coquery.gui.settings",
            "coquery.gui.stopwords",
            "coquery.gui.ui",
            "coquery.gui.ui.aboutUi",
            "coquery.gui.ui.connectionConfigurationUi",
            "coquery.gui.ui.contextViewerUi",
            "coquery.gui.ui.coqueryUi",
            "coquery.gui.ui.corpusInstallerUi",
            "coquery.gui.ui.corpusManagerUi",
            "coquery.gui.ui.createUserUi",
            "coquery.gui.ui.csvOptionsUi",
            "coquery.gui.ui.errorUi",
            "coquery.gui.ui.figureOptionsUi",
            "coquery.gui.ui.functionApplyUi",
            "coquery.gui.ui.helpViewerUi",
            "coquery.gui.ui.linkselectUi",
            "coquery.gui.ui.logfileUi",
            "coquery.gui.ui.mysql_guideUi",
            "coquery.gui.ui.nltkDatafilesUi",
            "coquery.gui.ui.queryfilterUi",
            "coquery.gui.ui.removeCorpusUi",
            "coquery.gui.ui.renameColumnUi",
            "coquery.gui.ui.settingsUi",
            "coquery.gui.ui.stopwordsUi",
            "coquery.gui.ui.uniqueViewerUi",
            "coquery.gui.ui.visualizerUi",
            "coquery.gui.uniqueviewer",
            "coquery.gui.visualization",
            "coquery.installer",
            "coquery.installer.coq_install_bnc",
            "coquery.installer.coq_install_brown",
            "coquery.installer.coq_install_buckeye",
            "coquery.installer.coq_install_celex",
            "coquery.installer.coq_install_cmudict",
            "coquery.installer.coq_install_coca",
            "coquery.installer.coq_install_coha",
            "coquery.installer.coq_install_gabra",
            "coquery.installer.coq_install_generic",
            "coquery.installer.coq_install_ice_ng",
            "coquery.installer.coq_install_switchboard",
            "coquery.installer.install_bursc",
            "coquery.options",
            "coquery.queries",
            "coquery.session",
            "coquery.sqlhelper",
            "coquery.sqlwrap",
            "coquery.textgrids",
            "coquery.tokens",
            "coquery.transpose",
            "coquery.unicode",
            "coquery.visualizer",
            "coquery.visualizer.barcodeplot",
            "coquery.visualizer.barplot",
            "coquery.visualizer.beeswarmplot",
            "coquery.visualizer.bubbleplot",
            "coquery.visualizer.densityplot",
            "coquery.visualizer.heatmap",
            "coquery.visualizer.timeseries",
            "coquery.visualizer.treemap",
            "coquery.visualizer.treemap_old",
            "coquery.visualizer.visualizer"
        ],
        "version": "0.9.2"
    },
    "cor": {
        "cmdline": [],
        "modules": [
            "cor",
            "cor.api",
            "cor.comm",
            "cor.protocol",
            "cor.protocol.lifecycle_pb2",
            "cor.protocol.log_pb2",
            "cor.protocol.message_pb2",
            "cor.utils"
        ],
        "version": "5.0"
    },
    "coral": {
        "cmdline": [],
        "modules": [
            "coral",
            "coral.analysis",
            "coral.analysis._sequence",
            "coral.analysis._sequence.anneal",
            "coral.analysis._sequence.melting_temp",
            "coral.analysis._sequence.repeats",
            "coral.analysis._sequence.tm_params",
            "coral.analysis._sequencing",
            "coral.analysis._sequencing.align",
            "coral.analysis._sequencing.mafft",
            "coral.analysis._sequencing.needle",
            "coral.analysis._sequencing.sanger",
            "coral.analysis._sequencing.substitution_matrices",
            "coral.analysis._structure",
            "coral.analysis._structure.dimers",
            "coral.analysis._structure.nupack",
            "coral.analysis._structure.structure_analyzer",
            "coral.analysis._structure.structure_windows",
            "coral.analysis._structure.viennarna",
            "coral.analysis.utils",
            "coral.constants",
            "coral.constants.genbank",
            "coral.constants.molecular_bio",
            "coral.constants.restriction_sites",
            "coral.database",
            "coral.database._entrez",
            "coral.database._rebase",
            "coral.database._yeast",
            "coral.design",
            "coral.design._gibson",
            "coral.design._oligo_synthesis",
            "coral.design._oligo_synthesis.oligo_assembly",
            "coral.design._primers",
            "coral.design._sequence_generation",
            "coral.design._sequence_generation.random_sequences",
            "coral.reaction",
            "coral.reaction._central_dogma",
            "coral.reaction._gibson",
            "coral.reaction._oligo_assembly",
            "coral.reaction._pcr",
            "coral.reaction._resect",
            "coral.reaction._restriction",
            "coral.reaction.utils",
            "coral.seqio",
            "coral.seqio._dna",
            "coral.sequence",
            "coral.sequence._dna",
            "coral.sequence._nucleicacid",
            "coral.sequence._peptide",
            "coral.sequence._rna",
            "coral.sequence._sequence",
            "coral.utils",
            "coral.utils.tempdirs"
        ],
        "version": "0.5.0"
    },
    "coralchennest": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.1"
    },
    "coralogix": {
        "cmdline": [],
        "modules": [
            "coralogix",
            "coralogix.config",
            "coralogix.config.constraints",
            "coralogix.config.settings",
            "coralogix.coralogix_https_agent",
            "coralogix.coralogix_https_logging",
            "coralogix.coralogix_logging",
            "coralogix.http",
            "coralogix.log_aggregator",
            "coralogix.logger",
            "coralogix.serialization"
        ],
        "version": "0.2.6.6"
    },
    "coralogix-logger": {
        "cmdline": [],
        "modules": [
            "coralogix",
            "coralogix.coralogix_logger",
            "coralogix.debug_logger",
            "coralogix.httpsender",
            "coralogix.manager"
        ],
        "version": "1.0.22"
    },
    "coras": {
        "cmdline": [],
        "modules": [
            "CorasLib",
            "CorasLib.APIException",
            "CorasLib.APIHelper",
            "CorasLib.Configuration",
            "CorasLib.Controllers",
            "CorasLib.Controllers.APIController",
            "CorasLib.Models",
            "CorasLib.Models.AddressSerializer",
            "CorasLib.Models.AllocationItemSerializer",
            "CorasLib.Models.AllocationRequestSerializer",
            "CorasLib.Models.AllocationSerializer",
            "CorasLib.Models.AllocationSnapshotSerializer",
            "CorasLib.Models.CreatePriceChartParamPrices",
            "CorasLib.Models.DeviceSerializer",
            "CorasLib.Models.EventSerializer",
            "CorasLib.Models.NotificationConfigSerializer",
            "CorasLib.Models.PriceChartSerializer",
            "CorasLib.Models.PriceSerializer",
            "CorasLib.Models.SectionSerializer",
            "CorasLib.Models.VenueConfigurationSerializer",
            "CorasLib.Models.VenueSerializer",
            "CorasLib.Models.WriteAddressSerializer",
            "CorasLib.Models.WriteAllocationItemSerializer",
            "CorasLib.Models.WriteAllocationRequestSerializer",
            "CorasLib.Models.WriteAllocationSerializer",
            "CorasLib.Models.WriteAllocationSnapshotSerializer",
            "CorasLib.Models.WriteDeviceSerializer",
            "CorasLib.Models.WriteEventSerializer",
            "CorasLib.Models.WriteNotificationConfigSerializer",
            "CorasLib.Models.WritePriceChartSerializer",
            "CorasLib.Models.WritePriceSerializer",
            "CorasLib.Models.WriteSectionSerializer",
            "CorasLib.Models.WriteVenueConfigurationSerializer",
            "CorasLib.Models.WriteVenueSerializer"
        ],
        "version": "0.0.3"
    },
    "corbeau": {
        "cmdline": [],
        "modules": [
            "corbeau"
        ],
        "version": "0.2"
    },
    "cord": {
        "cmdline": [],
        "modules": [
            "cord",
            "cord.modelrun",
            "cord.ripcas_dflow",
            "cord.scripts",
            "cord.scripts.cord",
            "cord.veg2npol",
            "test",
            "test.test_cord"
        ],
        "version": "0.2.4"
    },
    "corda": {
        "cmdline": [],
        "modules": [
            "corda",
            "corda._version",
            "corda.corda",
            "corda.util"
        ],
        "version": "0.3.3"
    },
    "corduroy": {
        "cmdline": [],
        "modules": [
            "corduroy",
            "corduroy.atoms",
            "corduroy.config",
            "corduroy.couchdb",
            "corduroy.exceptions",
            "corduroy.io",
            "corduroy.tests",
            "corduroy.tests.async",
            "corduroy.tests.blocking",
            "corduroy.tests.package",
            "corduroy.tests.testutil"
        ],
        "version": "0.9.0"
    },
    "cordwainer": {
        "cmdline": [],
        "modules": [
            "cordwainer",
            "cordwainer.csv",
            "cordwainer.dicts",
            "cordwainer.utils",
            "tests",
            "tests.test_basics",
            "tests.test_dicts"
        ],
        "version": "0.0.2"
    },
    "core": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "core-flavor": {
        "cmdline": [],
        "modules": [
            "core_flavor",
            "core_flavor.api",
            "core_flavor.api.exceptions",
            "core_flavor.api.factories",
            "core_flavor.api.fields",
            "core_flavor.api.lookups",
            "core_flavor.api.middleware",
            "core_flavor.api.middleware.versioning",
            "core_flavor.api.pagination",
            "core_flavor.api.serializers",
            "core_flavor.api.test",
            "core_flavor.api.urls",
            "core_flavor.apps",
            "core_flavor.factories",
            "core_flavor.helpers",
            "core_flavor.managers",
            "core_flavor.middleware",
            "core_flavor.middleware.logstash",
            "core_flavor.models",
            "core_flavor.oauth2_validator",
            "core_flavor.settings",
            "core_flavor.shortcuts"
        ],
        "version": "0.0.7"
    },
    "core-tools": {
        "cmdline": [],
        "modules": [
            "core_tools"
        ],
        "version": "1.2.0"
    },
    "coreapi": {
        "cmdline": [],
        "modules": [
            "coreapi",
            "coreapi.auth",
            "coreapi.client",
            "coreapi.compat",
            "coreapi.document",
            "coreapi.exceptions",
            "coreapi.utils",
            "coreapi/codecs",
            "coreapi/codecs.base",
            "coreapi/codecs.corejson",
            "coreapi/codecs.display",
            "coreapi/codecs.download",
            "coreapi/codecs.jsondata",
            "coreapi/codecs.python",
            "coreapi/codecs.text",
            "coreapi/transports",
            "coreapi/transports.base",
            "coreapi/transports.http"
        ],
        "version": "2.3.0"
    },
    "coreapi-cli": {
        "cmdline": [],
        "modules": [
            "coreapi_cli",
            "coreapi_cli.codec_plugins",
            "coreapi_cli.debug",
            "coreapi_cli.display",
            "coreapi_cli.history",
            "coreapi_cli.main"
        ],
        "version": "1.0.6"
    },
    "coreapi-devin": {
        "cmdline": [],
        "modules": [
            "coreapi",
            "coreapi.client",
            "coreapi.compat",
            "coreapi.document",
            "coreapi.exceptions",
            "coreapi.utils",
            "coreapi/codecs",
            "coreapi/codecs.base",
            "coreapi/codecs.corejson",
            "coreapi/codecs.display",
            "coreapi/codecs.download",
            "coreapi/codecs.jsondata",
            "coreapi/codecs.python",
            "coreapi/codecs.text",
            "coreapi/transports",
            "coreapi/transports.base",
            "coreapi/transports.http"
        ],
        "version": "2.0.7"
    },
    "coreapi-docs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "coreapidocs": {
        "cmdline": [],
        "modules": [
            "coreapidocs",
            "coreapidocs.docs",
            "tests",
            "tests.test_basic"
        ],
        "version": "0.0.2"
    },
    "coreclient": {
        "cmdline": [],
        "modules": [
            "core",
            "core.client",
            "core.objects"
        ],
        "version": "0.2.2"
    },
    "corecluster": {
        "cmdline": [],
        "modules": [
            "corecluster",
            "corecluster.agents",
            "corecluster.agents.base_agent",
            "corecluster.agents.console",
            "corecluster.agents.network",
            "corecluster.agents.vm",
            "corecluster.app",
            "corecluster.cache",
            "corecluster.cache.data_chunk",
            "corecluster.cache.drivers",
            "corecluster.cache.drivers.cache_interface",
            "corecluster.cache.drivers.redis_driver",
            "corecluster.cache.model",
            "corecluster.cache.task",
            "corecluster.exceptions",
            "corecluster.exceptions.agent",
            "corecluster.hooks",
            "corecluster.hooks.node_libvirt",
            "corecluster.hooks.vm",
            "corecluster.hooks.vm_cleanup_db",
            "corecluster.hooks.vm_cleanup_image_libvirt",
            "corecluster.hooks.vm_cleanup_task",
            "corecluster.migrations",
            "corecluster.migrations.0001_initial",
            "corecluster.migrations.0020_help_text",
            "corecluster.migrations.0021_task_modification_time",
            "corecluster.migrations.0022_template_hdd",
            "corecluster.migrations.0023_reorder_hardware",
            "corecluster.migrations.0024_agents",
            "corecluster.migrations.0025_task_ordering",
            "corecluster.migrations.0026_null_on_delete",
            "corecluster.migrations.0027_task_owners",
            "corecluster.migrations.0028_task_version",
            "corecluster.migrations.0029_task_version",
            "corecluster.migrations.0030_task_repeat",
            "corecluster.migrations.0031_related_tasks",
            "corecluster.migrations.0032_redirected_set",
            "corecluster.migrations.0033_api_stats",
            "corecluster.migrations.0034_rename_networking",
            "corecluster.migrations.0035_rename_foreign_keys",
            "corecluster.migrations.0036_subnet_v_id",
            "corecluster.migrations.0037_network_quota",
            "corecluster.migrations.0038_delete_task_table",
            "corecluster.migrations.0039_agent_authorized_keys",
            "corecluster.migrations.0040_timedelta",
            "corecluster.migrations.0041_vm_vnc_address",
            "corecluster.migrations.0042_ipv6",
            "corecluster.migrations.0043_ipv6_infra",
            "corecluster.migrations.0044_lease_hostname",
            "corecluster.migrations.0045_websocket_proxy",
            "corecluster.migrations.0046_migrate_hash",
            "corecluster.models",
            "corecluster.models.common_models",
            "corecluster.models.core",
            "corecluster.models.core.agent",
            "corecluster.models.core.device",
            "corecluster.models.core.group",
            "corecluster.models.core.image",
            "corecluster.models.core.lease",
            "corecluster.models.core.network_pool",
            "corecluster.models.core.node",
            "corecluster.models.core.permission",
            "corecluster.models.core.role",
            "corecluster.models.core.storage",
            "corecluster.models.core.subnet",
            "corecluster.models.core.template",
            "corecluster.models.core.token",
            "corecluster.models.core.user",
            "corecluster.models.core.vm",
            "corecluster.settings",
            "corecluster.settings_cluster_interface",
            "corecluster.urls",
            "corecluster.urls_cluster_interface",
            "corecluster.utils",
            "corecluster.utils.context",
            "corecluster.utils.decorators",
            "corecluster.utils.encoders",
            "corecluster.utils.exception",
            "corecluster.utils.validation",
            "corecluster.version",
            "corecluster.views",
            "corecluster.views.admin",
            "corecluster.views.admin.agent",
            "corecluster.views.admin.group",
            "corecluster.views.admin.image",
            "corecluster.views.admin.message",
            "corecluster.views.admin.network_pool",
            "corecluster.views.admin.node",
            "corecluster.views.admin.permission",
            "corecluster.views.admin.role",
            "corecluster.views.admin.storage",
            "corecluster.views.admin.subnet",
            "corecluster.views.admin.task",
            "corecluster.views.admin.template",
            "corecluster.views.admin.user",
            "corecluster.views.admin.vm",
            "corecluster.views.admin_site",
            "corecluster.views.api",
            "corecluster.views.api.api",
            "corecluster.views.api.image",
            "corecluster.views.api.lease",
            "corecluster.views.api.network",
            "corecluster.views.api.redirection",
            "corecluster.views.api.storage",
            "corecluster.views.api.task",
            "corecluster.views.api.template",
            "corecluster.views.api.vm",
            "corecluster.views.ci",
            "corecluster.views.ci.corosync",
            "corecluster.views.ci.network_isolated",
            "corecluster.views.ci.network_routed",
            "corecluster.views.ci.node",
            "corecluster.views.ci.vm",
            "corecluster.views.user",
            "corecluster.views.user.permission",
            "corecluster.views.user.token",
            "corecluster.views.user.user",
            "corecluster.wsgi",
            "corecluster.wsgi_cluster_interface"
        ],
        "version": "17.4.1"
    },
    "cored": {
        "cmdline": [
            "core",
            "core-do",
            "core-docs",
            "core-local",
            "core-sed",
            "core-udp"
        ],
        "modules": [
            "core",
            "core.bots",
            "core.bots.cli",
            "core.bots.irc",
            "core.bots.xmpp",
            "core.cfg",
            "core.clock",
            "core.defines",
            "core.dispatcher",
            "core.errors",
            "core.extra",
            "core.extra.feedparser",
            "core.extra.rijndael",
            "core.kernel",
            "core.log",
            "core.plugs",
            "core.plugs.db",
            "core.plugs.license",
            "core.plugs.misc",
            "core.plugs.search",
            "core.plugs.status",
            "core.plugs.usage",
            "core.plugs.write",
            "core.service",
            "core.service.clock",
            "core.service.rest",
            "core.service.rss",
            "core.service.spider",
            "core.service.udp",
            "core.test",
            "core.thing",
            "core.utils",
            "core.utils.file",
            "core.utils.join",
            "core.utils.lock",
            "core.utils.name",
            "core.utils.opts",
            "core.utils.other",
            "core.utils.parse",
            "core.utils.resolve",
            "core.utils.serialize",
            "core.utils.set",
            "core.utils.signature",
            "core.utils.status",
            "core.utils.string",
            "core.utils.time",
            "core.utils.trace",
            "core.utils.url"
        ],
        "version": "45"
    },
    "coredata": {
        "cmdline": [],
        "modules": [
            "coredata",
            "coredata.coredata"
        ],
        "version": "0.1.5"
    },
    "coredhcp": {
        "cmdline": [],
        "modules": [
            "coredhcp",
            "coredhcp.agents",
            "coredhcp.agents.dhcp",
            "coredhcp.hooks",
            "coredhcp.hooks.network",
            "coredhcp.views",
            "coredhcp.views.api",
            "coredhcp.views.api.dhcp"
        ],
        "version": "16.3.1"
    },
    "coredocs": {
        "cmdline": [],
        "modules": [
            "coredocs",
            "coredocs.highlighting",
            "coredocs.main",
            "coredocs.render_markdown",
            "coredocs.utils"
        ],
        "version": "0.0.6"
    },
    "coreec2": {
        "cmdline": [
            "coreec2"
        ],
        "modules": [
            "lib",
            "lib.cli",
            "lib.cloud_config",
            "lib.cluster",
            "lib.cluster_conf",
            "lib.cluster_launcher",
            "lib.coreos",
            "lib.env",
            "lib.security_group",
            "lib.utils"
        ],
        "version": "0.1.4"
    },
    "corefgraph": {
        "cmdline": [],
        "modules": [
            "corefgraph",
            "corefgraph.constants",
            "corefgraph.graph",
            "corefgraph.graph.builder",
            "corefgraph.graph.nafbuilder",
            "corefgraph.graph.wrapper",
            "corefgraph.multisieve",
            "corefgraph.multisieve.catchers",
            "corefgraph.multisieve.catchers.ConstituentCatcher",
            "corefgraph.multisieve.catchers.EnumerableCatcher",
            "corefgraph.multisieve.catchers.GoldCatcher",
            "corefgraph.multisieve.catchers.NamedEntitiesCatcher",
            "corefgraph.multisieve.catchers.PronounCatcher",
            "corefgraph.multisieve.catchers.TrainCatcher",
            "corefgraph.multisieve.catchers.baseCatcher",
            "corefgraph.multisieve.core",
            "corefgraph.multisieve.extractor",
            "corefgraph.multisieve.features",
            "corefgraph.multisieve.features.NamedEntityTypeannotator",
            "corefgraph.multisieve.features.animacyannotator",
            "corefgraph.multisieve.features.baseannotator",
            "corefgraph.multisieve.features.constants",
            "corefgraph.multisieve.features.constructionannotator",
            "corefgraph.multisieve.features.demonymannotator",
            "corefgraph.multisieve.features.dependencyannotator",
            "corefgraph.multisieve.features.ellipticannotator",
            "corefgraph.multisieve.features.genderannotator",
            "corefgraph.multisieve.features.genericsannotator",
            "corefgraph.multisieve.features.goldannotator",
            "corefgraph.multisieve.features.mentiontypeannotator",
            "corefgraph.multisieve.features.multiwordannotator",
            "corefgraph.multisieve.features.numberannotator",
            "corefgraph.multisieve.features.personannotator",
            "corefgraph.multisieve.features.speakerannotator",
            "corefgraph.multisieve.filters",
            "corefgraph.multisieve.filters.bareNPFilter",
            "corefgraph.multisieve.filters.basefilter",
            "corefgraph.multisieve.filters.demonymFilter",
            "corefgraph.multisieve.filters.interjectionFilter",
            "corefgraph.multisieve.filters.invalidWordFilter",
            "corefgraph.multisieve.filters.nonwordFilter",
            "corefgraph.multisieve.filters.partitiveFilter",
            "corefgraph.multisieve.filters.pleonasticFilter",
            "corefgraph.multisieve.filters.quantifierFilter",
            "corefgraph.multisieve.filters.quantityFilter",
            "corefgraph.multisieve.filters.relativesFilter",
            "corefgraph.multisieve.filters.sameHeadFilter",
            "corefgraph.multisieve.purges",
            "corefgraph.multisieve.purges.appositivePurge",
            "corefgraph.multisieve.purges.basepurge",
            "corefgraph.multisieve.purges.predicativeNominativePurge",
            "corefgraph.multisieve.purges.relativePronounPurge",
            "corefgraph.multisieve.purges.singeltonPurge",
            "corefgraph.multisieve.sieves",
            "corefgraph.multisieve.sieves.base",
            "corefgraph.multisieve.sieves.goldMatch",
            "corefgraph.multisieve.sieves.headMatch",
            "corefgraph.multisieve.sieves.learnMatch",
            "corefgraph.multisieve.sieves.preciseConstruct",
            "corefgraph.multisieve.sieves.pronounMatch",
            "corefgraph.multisieve.sieves.speakerMatch",
            "corefgraph.multisieve.sieves.stringMatch",
            "corefgraph.output",
            "corefgraph.output.arffwriter",
            "corefgraph.output.basewriter",
            "corefgraph.output.conllwriter",
            "corefgraph.output.debugwriter",
            "corefgraph.output.gephiwritter",
            "corefgraph.output.kafwritter",
            "corefgraph.output.meantimewriter",
            "corefgraph.output.nafwritter",
            "corefgraph.output.progressbar",
            "corefgraph.output.semevalwritter",
            "corefgraph.output.statuswritter",
            "corefgraph.output.textwritter",
            "corefgraph.output.trainwriter",
            "corefgraph.output.wikiwritter",
            "corefgraph.process",
            "corefgraph.process.corpus",
            "corefgraph.process.file",
            "corefgraph.properties",
            "corefgraph.properties.properties_en_conll",
            "corefgraph.properties.properties_es",
            "corefgraph.properties.properties_es_semeval",
            "corefgraph.resources",
            "corefgraph.resources.dictionaries",
            "corefgraph.resources.files",
            "corefgraph.resources.files.animate",
            "corefgraph.resources.files.demonym",
            "corefgraph.resources.files.gender",
            "corefgraph.resources.files.number",
            "corefgraph.resources.files.utils",
            "corefgraph.resources.lambdas",
            "corefgraph.resources.languages",
            "corefgraph.resources.languages.en",
            "corefgraph.resources.languages.en.animate",
            "corefgraph.resources.languages.en.demonym",
            "corefgraph.resources.languages.en.determiners",
            "corefgraph.resources.languages.en.gender",
            "corefgraph.resources.languages.en.number",
            "corefgraph.resources.languages.en.pronouns",
            "corefgraph.resources.languages.en.rules",
            "corefgraph.resources.languages.en.stopwords",
            "corefgraph.resources.languages.en.temporals",
            "corefgraph.resources.languages.en.verbs",
            "corefgraph.resources.languages.es",
            "corefgraph.resources.languages.es.animate",
            "corefgraph.resources.languages.es.demonym",
            "corefgraph.resources.languages.es.demonym.demonym_wiki_extractor",
            "corefgraph.resources.languages.es.demonym.demonyn_extractor",
            "corefgraph.resources.languages.es.determiners",
            "corefgraph.resources.languages.es.gender",
            "corefgraph.resources.languages.es.gender.generator",
            "corefgraph.resources.languages.es.number",
            "corefgraph.resources.languages.es.pronouns",
            "corefgraph.resources.languages.es.rules",
            "corefgraph.resources.languages.es.stopwords",
            "corefgraph.resources.languages.es.temporals",
            "corefgraph.resources.languages.es.verbs",
            "corefgraph.resources.rules",
            "corefgraph.resources.tagset",
            "corefgraph.resources.tagsets",
            "corefgraph.resources.tagsets.conll",
            "corefgraph.resources.tagsets.conll.namedentities",
            "corefgraph.resources.tagsets.penntreebank",
            "corefgraph.resources.tagsets.penntreebank.constituent",
            "corefgraph.resources.tagsets.penntreebank.partofspeech",
            "corefgraph.resources.tagsets.semeval_es",
            "corefgraph.resources.tagsets.semeval_es.constituent",
            "corefgraph.resources.tagsets.semeval_es.dependency",
            "corefgraph.resources.tagsets.semeval_es.namedentities",
            "corefgraph.resources.tagsets.semeval_es.partofspeech",
            "corefgraph.resources.tagsets.standford",
            "corefgraph.resources.tagsets.standford.dependency",
            "corefgraph.resources.tree",
            "corefgraph.text_processor"
        ],
        "version": "1.2.3"
    },
    "coreinit": {
        "cmdline": [],
        "modules": [],
        "version": "15.11.18"
    },
    "corejet.core": {
        "cmdline": [],
        "modules": [
            "corejet",
            "corejet.core",
            "corejet.core.decorators",
            "corejet.core.interfaces",
            "corejet.core.model",
            "corejet.core.parser",
            "corejet.core.scripts",
            "corejet.core.scripts.corejet2py",
            "corejet.core.testcase",
            "corejet.core.tests",
            "corejet.core.tests.test_backround",
            "corejet.core.tests.test_but",
            "corejet.core.tests.test_fi",
            "corejet.core.tests.test_outline",
            "corejet.core.tests.test_parse",
            "corejet.core.tests.test_serialize"
        ],
        "version": "1.1.0"
    },
    "corejet.jira": {
        "cmdline": [],
        "modules": [
            "corejet",
            "corejet.jira",
            "corejet.jira.source"
        ],
        "version": "1.0a3"
    },
    "corejet.pivotal": {
        "cmdline": [],
        "modules": [
            "corejet",
            "corejet.pivotal",
            "corejet.pivotal.config",
            "corejet.pivotal.tool"
        ],
        "version": "1.2.0"
    },
    "corejet.recipe.testrunner": {
        "cmdline": [],
        "modules": [
            "corejet",
            "corejet.recipe",
            "corejet.recipe.testrunner"
        ],
        "version": "1.0.0"
    },
    "corejet.robot": {
        "cmdline": [],
        "modules": [
            "corejet",
            "corejet.robot",
            "corejet.robot.scripts",
            "corejet.robot.scripts.corejet2robot"
        ],
        "version": "0.5.0"
    },
    "corejet.testrunner": {
        "cmdline": [],
        "modules": [
            "corejet",
            "corejet.testrunner",
            "corejet.testrunner.filesource",
            "corejet.testrunner.formatter",
            "corejet.testrunner.recipe",
            "corejet.testrunner.runner"
        ],
        "version": "1.0.1"
    },
    "corejet.visualization": {
        "cmdline": [],
        "modules": [
            "corejet",
            "corejet.visualization",
            "corejet.visualization.generator",
            "corejet.visualization.tests"
        ],
        "version": "1.0.0"
    },
    "corellia": {
        "cmdline": [],
        "modules": [
            "Corellia",
            "Corellia.utils.port",
            "Corellia.utils.sockserver"
        ],
        "version": "0.5.1"
    },
    "corenetwork": {
        "cmdline": [],
        "modules": [
            "corenetwork",
            "corenetwork.api_mixin",
            "corenetwork.app",
            "corenetwork.command_line_mixin",
            "corenetwork.corosync_mixin",
            "corenetwork.driver_interface",
            "corenetwork.drivers",
            "corenetwork.drivers.bird",
            "corenetwork.drivers.core_default",
            "corenetwork.drivers.network_quagga",
            "corenetwork.drivers.network_vxlan",
            "corenetwork.drivers.node_default",
            "corenetwork.drivers.node_ssh",
            "corenetwork.drivers.vm_default",
            "corenetwork.exceptions",
            "corenetwork.exceptions.config",
            "corenetwork.hook_interface",
            "corenetwork.hooks",
            "corenetwork.hooks.logs_dump",
            "corenetwork.migrations",
            "corenetwork.migrations.0001_initial",
            "corenetwork.models",
            "corenetwork.models.message",
            "corenetwork.models.tag",
            "corenetwork.network_mixin",
            "corenetwork.os_mixin",
            "corenetwork.storage_mixin",
            "corenetwork.utils",
            "corenetwork.utils.config",
            "corenetwork.utils.db_router",
            "corenetwork.utils.logger",
            "corenetwork.utils.renderer",
            "corenetwork.utils.system",
            "corenetwork.webserver_mixin"
        ],
        "version": "17.4.1"
    },
    "corenlp": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.14"
    },
    "corenlp-protobuf": {
        "cmdline": [],
        "modules": [
            "corenlp_protobuf",
            "corenlp_protobuf.CoreNLP_pb2"
        ],
        "version": "3.7.0"
    },
    "corenlp-python": {
        "cmdline": [],
        "modules": [
            "corenlp",
            "corenlp.client",
            "corenlp.corenlp",
            "corenlp.progressbar"
        ],
        "version": "3.4.1-1"
    },
    "corenlp-pywrap": {
        "cmdline": [],
        "modules": [
            "corenlp_pywrap",
            "corenlp_pywrap.example",
            "corenlp_pywrap.pywrap",
            "corenlp_pywrap.test_using_pytest"
        ],
        "version": "1.0.5"
    },
    "corenlp-xml": {
        "cmdline": [],
        "modules": [
            "corenlp_xml",
            "corenlp_xml.coreference",
            "corenlp_xml.dependencies",
            "corenlp_xml.document"
        ],
        "version": "1.0.4"
    },
    "corenlp-xml-reader": {
        "cmdline": [],
        "modules": [
            "corenlp_xml_reader",
            "corenlp_xml_reader.annotated_text",
            "corenlp_xml_reader.test"
        ],
        "version": "0.1.2"
    },
    "corenlpy": {
        "cmdline": [],
        "modules": [
            "corenlpy",
            "corenlpy.SETTINGS",
            "corenlpy.annotated_text",
            "corenlpy.run_corenlp",
            "corenlpy.test"
        ],
        "version": "0.0.4"
    },
    "corenode": {
        "cmdline": [],
        "modules": [
            "corenode",
            "corenode.app",
            "corenode.hooks",
            "corenode.hooks.network_vxlan",
            "corenode.hooks.vm",
            "corenode.settings",
            "corenode.urls"
        ],
        "version": "17.4.1"
    },
    "corepost": {
        "cmdline": [],
        "modules": [
            "corepost",
            "corepost.convert",
            "corepost.enums",
            "corepost.filters",
            "corepost.routing",
            "corepost.utils",
            "corepost.web"
        ],
        "version": "0.0.16"
    },
    "coreschema": {
        "cmdline": [],
        "modules": [
            "coreschema",
            "coreschema.compat",
            "coreschema.encodings",
            "coreschema.encodings.corejson",
            "coreschema.encodings.html",
            "coreschema.encodings.jsonschema",
            "coreschema.formats",
            "coreschema.schemas",
            "coreschema.utils"
        ],
        "version": "0.0.4"
    },
    "corestack": {
        "cmdline": [],
        "modules": [
            "corestack",
            "corestack.auth",
            "corestack.delete_service_account",
            "corestack.main",
            "corestack.service_accounts",
            "corestack.show_template",
            "corestack.templates",
            "corestack.tenant_users"
        ],
        "version": "1.1"
    },
    "coretalk": {
        "cmdline": [],
        "modules": [
            "coretalk",
            "coretalk.app",
            "coretalk.models",
            "coretalk.models.coretalk",
            "coretalk.models.coretalk.sshkey",
            "coretalk.models.coretalk.userdata",
            "coretalk.settings",
            "coretalk.urls",
            "coretalk.views",
            "coretalk.views.api",
            "coretalk.views.api.sshkey",
            "coretalk.views.api.userdata",
            "coretalk.views.cloudinit",
            "coretalk.views.cloudinit.functions",
            "coretalk.wsgi"
        ],
        "version": "17.4.1"
    },
    "coretemp": {
        "cmdline": [],
        "modules": [
            "coretemp",
            "coretemp.coretemp_alert",
            "coretemp.coretemp_config",
            "coretemp.coretemp_constants",
            "coretemp.coretemp_daemon",
            "coretemp.coretemp_log",
            "coretemp.monitor",
            "coretemp.sensor_reading"
        ],
        "version": "0.1"
    },
    "coretracker": {
        "cmdline": [],
        "modules": [
            "coretracker",
            "coretracker.FisherExact",
            "coretracker.FisherExact.Fisher",
            "coretracker.FisherExact.statlib",
            "coretracker.classifier",
            "coretracker.classifier.classifier",
            "coretracker.classifier.model_old",
            "coretracker.classifier.models",
            "coretracker.classifier.new_classifier",
            "coretracker.coreutils",
            "coretracker.coreutils.AncestralRecon",
            "coretracker.coreutils.Faces",
            "coretracker.coreutils.RNAEditChecker",
            "coretracker.coreutils.corefile",
            "coretracker.coreutils.letterconfig",
            "coretracker.coreutils.mtgenes",
            "coretracker.coreutils.output",
            "coretracker.coreutils.pdfutils",
            "coretracker.coreutils.template",
            "coretracker.coreutils.utils",
            "coretracker.settings",
            "coretracker.settings.parameters",
            "coretracker.settings.settings"
        ],
        "version": "1.1.7"
    },
    "coreuri": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "corevpn": {
        "cmdline": [],
        "modules": [
            "corevpn",
            "corevpn.agents",
            "corevpn.agents.vpn",
            "corevpn.app",
            "corevpn.hooks",
            "corevpn.hooks.vpn",
            "corevpn.models",
            "corevpn.models.vpn",
            "corevpn.models.vpn.vpn",
            "corevpn.views",
            "corevpn.views.api",
            "corevpn.views.api.vpn"
        ],
        "version": "16.6.1"
    },
    "coreweb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "corezoid": {
        "cmdline": [],
        "modules": [
            "corezoid"
        ],
        "version": "0.1.1"
    },
    "corgi": {
        "cmdline": [],
        "modules": [
            "corgi",
            "corgi.coerce",
            "corgi.dictionary",
            "corgi.functional",
            "corgi.iterate",
            "corgi.math",
            "corgi.ml",
            "corgi.numpy_utils",
            "corgi.pandas_utils",
            "corgi.sql",
            "corgi.stats",
            "corgi.visualization"
        ],
        "version": "0.2.2"
    },
    "corkboard": {
        "cmdline": [],
        "modules": [
            "corkboard"
        ],
        "version": "0.1.0"
    },
    "corker": {
        "cmdline": [],
        "modules": [
            "corker",
            "corker.app",
            "corker.controller",
            "corker.tests",
            "corker.tests.test_controller",
            "corker.tests.test_main"
        ],
        "version": "0.6.0"
    },
    "corkscrew": {
        "cmdline": [],
        "modules": [
            "corkscrew",
            "corkscrew.app",
            "corkscrew.blueprint",
            "corkscrew.comet",
            "corkscrew.core",
            "corkscrew.dir_index",
            "corkscrew.exceptions",
            "corkscrew.favicon",
            "corkscrew.plumbing",
            "corkscrew.proxy",
            "corkscrew.reflect",
            "corkscrew.runner",
            "corkscrew.settings",
            "corkscrew.util",
            "corkscrew.version"
        ],
        "version": "0.121"
    },
    "corlorprinter": {
        "cmdline": [],
        "modules": [
            "corlorprinter",
            "corlorprinter.compat",
            "corlorprinter.pprint",
            "corlorprinter.termcorlor",
            "tests",
            "tests.test"
        ],
        "version": "0.2.2"
    },
    "cormoran": {
        "cmdline": [],
        "modules": [
            "cormoran",
            "cormoran.backends",
            "cormoran.backends.sqlite",
            "cormoran.fields",
            "cormoran.persistence",
            "cormoran.persistent",
            "cormoran.resultset",
            "cormoran.sql",
            "cormoran.sql.statements",
            "cormoran.store"
        ],
        "version": "0.1"
    },
    "cornel-movie-dialogs-corpus-storm": {
        "cmdline": [],
        "modules": [
            "mdcorpus",
            "mdcorpus.orm",
            "mdcorpus.parser"
        ],
        "version": "0.1.1"
    },
    "corner": {
        "cmdline": [],
        "modules": [
            "corner",
            "corner.corner"
        ],
        "version": "2.0.1"
    },
    "cornerstone.browser": {
        "cmdline": [],
        "modules": [
            "cornerstone",
            "cornerstone.browser",
            "cornerstone.browser.base",
            "cornerstone.browser.exportimport",
            "cornerstone.browser.form",
            "cornerstone.browser.hotspot",
            "cornerstone.browser.interfaces",
            "cornerstone.browser.menu",
            "cornerstone.browser.metaconfigure",
            "cornerstone.browser.metadirectives",
            "cornerstone.browser.renderer",
            "cornerstone.browser.tests",
            "cornerstone.browser.tests.test_base",
            "cornerstone.browser.tmpl"
        ],
        "version": "1.3.4"
    },
    "cornerstone.cssvar": {
        "cmdline": [],
        "modules": [
            "cornerstone",
            "cornerstone.cssvar",
            "cornerstone.cssvar.browser",
            "cornerstone.cssvar.five",
            "cornerstone.cssvar.interfaces",
            "cornerstone.cssvar.meta",
            "cornerstone.cssvar.resource"
        ],
        "version": "1.0"
    },
    "cornerstone.soup": {
        "cmdline": [],
        "modules": [
            "cornerstone",
            "cornerstone.soup",
            "cornerstone.soup.browser",
            "cornerstone.soup.browser.views",
            "cornerstone.soup.interfaces",
            "cornerstone.soup.interfaces.soup",
            "cornerstone.soup.interfaces.ting",
            "cornerstone.soup.soup",
            "cornerstone.soup.tests",
            "cornerstone.soup.tests.env",
            "cornerstone.soup.tests.test_soup",
            "cornerstone.soup.ting"
        ],
        "version": "2.4.1.1"
    },
    "cornerstone.ui.result": {
        "cmdline": [],
        "modules": [
            "cornerstone",
            "cornerstone.ui",
            "cornerstone.ui.result",
            "cornerstone.ui.result.batch",
            "cornerstone.ui.result.interfaces",
            "cornerstone.ui.result.metaconfigure",
            "cornerstone.ui.result.metadirectives",
            "cornerstone.ui.result.result",
            "cornerstone.ui.result.resultkss",
            "cornerstone.ui.result.resultkss.browser",
            "cornerstone.ui.result.slice",
            "cornerstone.ui.result.tests",
            "cornerstone.ui.result.tests.env",
            "cornerstone.ui.result.tests.run"
        ],
        "version": "1.1.4"
    },
    "cornet": {
        "cmdline": [],
        "modules": [
            "cornet",
            "cornet.connectors",
            "cornet.connectors.base_connector",
            "cornet.connectors.mysql_connector",
            "cornet.connectors.postgresql_connector",
            "cornet.main",
            "cornet.sqoop_cmd",
            "cornet.task_config",
            "cornet.utils"
        ],
        "version": "0.1.3"
    },
    "corneti.recipes.codeintel": {
        "cmdline": [],
        "modules": [
            "corneti",
            "corneti.recipes",
            "corneti.recipes.codeintel",
            "corneti.recipes.codeintel.tests",
            "corneti.recipes.codeintel.tests.test_docs"
        ],
        "version": "0.3"
    },
    "cornfig": {
        "cmdline": [],
        "modules": [
            "cornfig",
            "cornfig.cornfig"
        ],
        "version": "0.3"
    },
    "cornflake": {
        "cmdline": [],
        "modules": [
            "cornflake",
            "cornflake.exceptions",
            "cornflake.fields",
            "cornflake.serializers",
            "cornflake.sqlalchemy_orm",
            "cornflake.utils",
            "cornflake.validators"
        ],
        "version": "0.2.2"
    },
    "cornice": {
        "cmdline": [],
        "modules": [
            "cornice",
            "cornice.cors",
            "cornice.errors",
            "cornice.pyramidhook",
            "cornice.resource",
            "cornice.service",
            "cornice.util",
            "cornice.validators",
            "cornice.validators._colander"
        ],
        "version": "2.4.0"
    },
    "cornice-sphinx": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cornice-swagger": {
        "cmdline": [],
        "modules": [
            "cornice_swagger",
            "cornice_swagger.converters",
            "cornice_swagger.converters.exceptions",
            "cornice_swagger.converters.parameters",
            "cornice_swagger.converters.schema",
            "cornice_swagger.swagger",
            "cornice_swagger.util",
            "tests",
            "tests.converters",
            "tests.converters.test_parameters",
            "tests.converters.test_schema",
            "tests.support",
            "tests.test_app",
            "tests.test_definition_handler",
            "tests.test_parameter_handler",
            "tests.test_response_handler",
            "tests.test_swagger"
        ],
        "version": "0.5.1"
    },
    "coro": {
        "cmdline": [
            "catlog"
        ],
        "modules": [
            "coro",
            "coro.amqp",
            "coro.amqp.amqp",
            "coro.amqp.codegen",
            "coro.amqp.rpc",
            "coro.amqp.spec",
            "coro.amqp.wire",
            "coro.asn1",
            "coro.asn1.data_file",
            "coro.backdoor",
            "coro.clocks",
            "coro.db",
            "coro.db.postgres",
            "coro.db.postgres.postgres",
            "coro.dns",
            "coro.dns.cache",
            "coro.dns.exceptions",
            "coro.dns.reply",
            "coro.dns.stub_resolver",
            "coro.emulation",
            "coro.emulation.socket",
            "coro.emulation.thread",
            "coro.emulation.threading",
            "coro.frontdoor",
            "coro.http",
            "coro.http.client",
            "coro.http.handlers",
            "coro.http.http_date",
            "coro.http.json_rpc",
            "coro.http.protocol",
            "coro.http.server",
            "coro.http.session_handler",
            "coro.http.spdy",
            "coro.http.websocket",
            "coro.log",
            "coro.log.asn1",
            "coro.optional",
            "coro.print_profile",
            "coro.profiler",
            "coro.read_stream",
            "coro.signal_handler",
            "coro.ssh",
            "coro.ssh.auth",
            "coro.ssh.auth.userauth",
            "coro.ssh.cipher",
            "coro.ssh.cipher.blowfish_cbc",
            "coro.ssh.cipher.des3_cbc",
            "coro.ssh.cipher.none",
            "coro.ssh.compression",
            "coro.ssh.compression.none",
            "coro.ssh.connection",
            "coro.ssh.connection.channel",
            "coro.ssh.connection.connect",
            "coro.ssh.connection.constants",
            "coro.ssh.connection.data_buffer",
            "coro.ssh.connection.interactive_session",
            "coro.ssh.connection.tty_modes",
            "coro.ssh.key_exchange",
            "coro.ssh.key_exchange.diffie_hellman",
            "coro.ssh.keys",
            "coro.ssh.keys.dss",
            "coro.ssh.keys.key_storage",
            "coro.ssh.keys.openssh_authorized_keys",
            "coro.ssh.keys.openssh_key_formats",
            "coro.ssh.keys.openssh_key_storage",
            "coro.ssh.keys.openssh_known_hosts",
            "coro.ssh.keys.public_private_key",
            "coro.ssh.keys.rebuild",
            "coro.ssh.keys.remote_host",
            "coro.ssh.keys.rsa",
            "coro.ssh.keys.static_key_storage",
            "coro.ssh.l4_transport",
            "coro.ssh.l4_transport.coro_socket_transport",
            "coro.ssh.mac",
            "coro.ssh.mac.hmac",
            "coro.ssh.mac.hmac_md5",
            "coro.ssh.mac.hmac_sha1",
            "coro.ssh.mac.none",
            "coro.ssh.scp",
            "coro.ssh.scp.cli",
            "coro.ssh.scp.client",
            "coro.ssh.scp.core",
            "coro.ssh.transport",
            "coro.ssh.transport.client",
            "coro.ssh.transport.constants",
            "coro.ssh.transport.server",
            "coro.ssh.transport.transport",
            "coro.ssh.util",
            "coro.ssh.util.debug",
            "coro.ssh.util.mpint",
            "coro.ssh.util.packet",
            "coro.ssh.util.password",
            "coro.ssh.util.random",
            "coro.ssh.wrapper",
            "coro.ssh.wrapper.coro_interactive_ssh_wrapper",
            "coro.ssl",
            "coro.tb",
            "coro.test",
            "coro.test.coro_unittest"
        ],
        "version": "1.0.5"
    },
    "coroner": {
        "cmdline": [],
        "modules": [
            "coroner"
        ],
        "version": "0.2.2"
    },
    "corotwine": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "coroutx": {
        "cmdline": [],
        "modules": [
            "coroutx",
            "coroutx.app",
            "coroutx.async",
            "coroutx.hub",
            "coroutx.reqctx",
            "coroutx.response",
            "coroutx.route"
        ],
        "version": "0.11.dev0"
    },
    "corpcrawl": {
        "cmdline": [],
        "modules": [
            "corpcrawl",
            "corpcrawl.backend",
            "corpcrawl.crawler",
            "corpcrawl.downloader",
            "corpcrawl.models",
            "corpcrawl.models.models",
            "corpcrawl.parser",
            "corpcrawl.util",
            "corpcrawl.util.cleaner",
            "corpcrawl.util.words"
        ],
        "version": "0.0.37"
    },
    "corpfin": {
        "cmdline": [],
        "modules": [
            "CorpFin",
            "CorpFin.Capital",
            "CorpFin.Portfolio",
            "CorpFin.Security",
            "CorpFin.Valuation"
        ],
        "version": "0.0.0"
    },
    "corpint": {
        "cmdline": [],
        "modules": [
            "corpint",
            "corpint.cli",
            "corpint.core",
            "corpint.enrich",
            "corpint.enrich.aleph",
            "corpint.enrich.bvdorbis",
            "corpint.enrich.gmaps",
            "corpint.enrich.opencorporates",
            "corpint.enrich.wikidata",
            "corpint.enrich.wikipedia",
            "corpint.export",
            "corpint.export.graph",
            "corpint.export.table",
            "corpint.extract",
            "corpint.model",
            "corpint.model.address",
            "corpint.model.common",
            "corpint.model.document",
            "corpint.model.emitter",
            "corpint.model.entity",
            "corpint.model.index",
            "corpint.model.link",
            "corpint.model.mapping",
            "corpint.model.project",
            "corpint.model.schema",
            "corpint.util",
            "corpint.webui",
            "corpint.webui.views"
        ],
        "version": "0.1"
    },
    "corpkit": {
        "cmdline": [],
        "modules": [
            "corpkit",
            "corpkit.annotate",
            "corpkit.build",
            "corpkit.completer",
            "corpkit.configparse",
            "corpkit.configurations",
            "corpkit.conll",
            "corpkit.constants",
            "corpkit.corpus",
            "corpkit.cql",
            "corpkit.dictionaries",
            "corpkit.dictionaries.bnc",
            "corpkit.dictionaries.process_types",
            "corpkit.dictionaries.queries",
            "corpkit.dictionaries.roles",
            "corpkit.dictionaries.stopwords",
            "corpkit.dictionaries.verblist",
            "corpkit.dictionaries.word_transforms",
            "corpkit.dictionaries.wordlists",
            "corpkit.download",
            "corpkit.download.corenlp",
            "corpkit.editor",
            "corpkit.env",
            "corpkit.gui",
            "corpkit.inflect",
            "corpkit.interrogation",
            "corpkit.interrogator",
            "corpkit.keys",
            "corpkit.layouts",
            "corpkit.lazyprop",
            "corpkit.make",
            "corpkit.model",
            "corpkit.multiprocess",
            "corpkit.noseinstall",
            "corpkit.nosetests",
            "corpkit.other",
            "corpkit.plotter",
            "corpkit.plugins",
            "corpkit.process",
            "corpkit.stats",
            "corpkit.textprogressbar",
            "corpkit.tokenise"
        ],
        "version": "2.3.8"
    },
    "corpora": {
        "cmdline": [],
        "modules": [
            "corpora",
            "corpora.corpus",
            "test",
            "test.test_corpus"
        ],
        "version": "1.0"
    },
    "corporate-wechat": {
        "cmdline": [],
        "modules": [
            "corporate_wechat",
            "corporate_wechat.config",
            "corporate_wechat.crop_wechat",
            "corporate_wechat.error_code"
        ],
        "version": "1.0.2"
    },
    "corpus-cleaner": {
        "cmdline": [
            "equaliser.py",
            "scrubber.py"
        ],
        "modules": [
            "corpus_cleaner",
            "corpus_cleaner.equaliser",
            "corpus_cleaner.scrubber",
            "corpus_cleaner.shared",
            "corpus_cleaner.tests"
        ],
        "version": "0.1.0"
    },
    "corpus-downloader": {
        "cmdline": [],
        "modules": [
            "corpus",
            "corpus.corpus"
        ],
        "version": "0.1.11"
    },
    "corr": {
        "cmdline": [
            "corr_10gbe_core_details.py",
            "corr_10gbe_deconfig.py",
            "corr_acc_period.py",
            "corr_adc_ampl.py",
            "corr_adc_time.py",
            "corr_arm_feng.py",
            "corr_check_pcnt.py",
            "corr_clocks.py",
            "corr_deprog_all.py",
            "corr_eq_init.py",
            "corr_feng_reset.py",
            "corr_fr_del_set.py",
            "corr_fstatus.py",
            "corr_init.py",
            "corr_katcp_interface.py",
            "corr_nb_build_ct_spectrum.py",
            "corr_nb_chansel.py",
            "corr_nb_plot_passband.py",
            "corr_nb_snap_ct.py",
            "corr_nb_snap_soft_fine_fft.py",
            "corr_quant_hist.py",
            "corr_rst_errors.py",
            "corr_rst_gbe.py",
            "corr_rx.py",
            "corr_snap_10gbe_rx.py",
            "corr_snap_descramble.py",
            "corr_snap_feng_10gbe_tx.py",
            "corr_snap_feng_out_build_spectrum.py",
            "corr_snap_fft_output.py",
            "corr_snap_quant.py",
            "corr_snap_rx.py",
            "corr_snap_xaui_feng.py",
            "corr_snap_xeng.py",
            "corr_snap_xeng_vacc.py",
            "corr_spead_issue.py",
            "corr_tvg_feng_sel.py",
            "corr_tx_spead_inter.py",
            "corr_tx_start_stop.py",
            "corr_xstatus.py"
        ],
        "modules": [
            "corr",
            "corr.bf_functions",
            "corr.cn_conf",
            "corr.corr_ddc",
            "corr.corr_functions",
            "corr.corr_nb",
            "corr.corr_wb",
            "corr.iadc",
            "corr.katadc",
            "corr.katcp_wrapper",
            "corr.log_handlers",
            "corr.oogpio",
            "corr.rx",
            "corr.scroll",
            "corr.sim",
            "corr.snap",
            "corr.support",
            "corr.termcolors",
            "corr.threaded"
        ],
        "version": "0.7.3"
    },
    "corral": {
        "cmdline": [],
        "modules": [
            "corral",
            "corral.app",
            "corral.dev",
            "corral.dl",
            "corral.error",
            "corral.exceptions",
            "corral.util",
            "corral.views",
            "corral.views.private",
            "corral.views.public"
        ],
        "version": "1.3.3"
    },
    "corral-pipeline": {
        "cmdline": [],
        "modules": [
            "corral",
            "corral.cli",
            "corral.cli.base",
            "corral.cli.commands",
            "corral.conf",
            "corral.core",
            "corral.creator",
            "corral.db",
            "corral.db.default_models",
            "corral.docs",
            "corral.exceptions",
            "corral.libs",
            "corral.libs.argparse_ext",
            "corral.libs.django_integration",
            "corral.libs.notebook_extension",
            "corral.libs.sqlalchemy_sql_shell",
            "corral.qa",
            "corral.res",
            "corral.run",
            "corral.run.alert",
            "corral.run.base",
            "corral.run.endpoints",
            "corral.run.loader",
            "corral.run.step",
            "corral.setup",
            "corral.util",
            "ez_setup"
        ],
        "version": "0.2.7"
    },
    "correct-horse": {
        "cmdline": [],
        "modules": [
            "correcthorse",
            "correcthorse.messages"
        ],
        "version": "0.3.0"
    },
    "correct-pycountry": {
        "cmdline": [],
        "modules": [
            "pycountry",
            "pycountry.db",
            "pycountry.tests"
        ],
        "version": "0.12.2"
    },
    "correcthorsebatterystaple": {
        "cmdline": [],
        "modules": [
            "correcthorsebatterystaple",
            "correcthorsebatterystaple.app"
        ],
        "version": "0.1"
    },
    "corrections": {
        "cmdline": [],
        "modules": [
            "corrections"
        ],
        "version": "0.2.3"
    },
    "correctiv-chartbuilder": {
        "cmdline": [],
        "modules": [
            "chartbuilder",
            "chartbuilder.admin",
            "chartbuilder.api_urls",
            "chartbuilder.api_views",
            "chartbuilder.cms_plugins",
            "chartbuilder.migrations",
            "chartbuilder.migrations.0001_initial",
            "chartbuilder.models",
            "chartbuilder.urls"
        ],
        "version": "0.0.5"
    },
    "correctiv-sortabletable": {
        "cmdline": [],
        "modules": [
            "sortable_table",
            "sortable_table.cms_plugins",
            "sortable_table.migrations",
            "sortable_table.migrations.0001_initial",
            "sortable_table.migrations.0002_sortabletableplugin_source",
            "sortable_table.models",
            "sortabletable",
            "sortabletable.cms_plugins",
            "sortabletable.migrations",
            "sortabletable.migrations.0001_initial",
            "sortabletable.migrations.0002_sortabletableplugin_source",
            "sortabletable.models"
        ],
        "version": "0.0.8"
    },
    "corrector": {
        "cmdline": [
            "corrector.py"
        ],
        "modules": [
            "corrector"
        ],
        "version": "0.0.1"
    },
    "corredor": {
        "cmdline": [],
        "modules": [
            "corredor",
            "corredor.devices",
            "corredor.eventloop",
            "corredor.handler",
            "corredor.pattern",
            "corredor.testing",
            "corredor.testing.devices",
            "tests",
            "tests.client",
            "tests.client.agent",
            "tests.client.application",
            "tests.test_devices",
            "tests.test_eventloop",
            "tests.test_handler",
            "tests.test_pattern"
        ],
        "version": "0.1"
    },
    "correios": {
        "cmdline": [],
        "modules": [
            "correios",
            "correios.client",
            "correios.exceptions",
            "correios.models",
            "correios.models.address",
            "correios.models.data",
            "correios.models.posting",
            "correios.models.user",
            "correios.renderers",
            "correios.renderers.pdf",
            "correios.soap",
            "correios.utils",
            "correios.xml_utils",
            "samples",
            "samples.request_tracking_codes",
            "samples.track_package",
            "tests",
            "tests.conftest",
            "tests.test_address_models",
            "tests.test_client",
            "tests.test_pdf_renderer",
            "tests.test_posting_models",
            "tests.test_user_models",
            "tests.test_utils",
            "tests.test_xml_utils",
            "tests.vcr"
        ],
        "version": "2.0.1"
    },
    "correios-api-py": {
        "cmdline": [],
        "modules": [
            "correios",
            "correios.correios",
            "correios.scraping"
        ],
        "version": "0.1.1"
    },
    "correios-frete": {
        "cmdline": [],
        "modules": [
            "correios_frete",
            "correios_frete.client",
            "correios_frete.constants",
            "correios_frete.item",
            "correios_frete.package",
            "correios_frete.service",
            "correios_frete.utils",
            "correios_frete.version"
        ],
        "version": "1.0.0"
    },
    "correios-lib": {
        "cmdline": [],
        "modules": [
            "correios_lib",
            "correios_lib.base",
            "correios_lib.entities",
            "correios_lib.requests",
            "correios_lib.responses",
            "correios_lib.validators",
            "correios_lib.webservices",
            "tests",
            "tests.base",
            "tests.base.webservice_base_test",
            "tests.entities",
            "tests.entities.coleta_simultanea_test",
            "tests.entities.coleta_test",
            "tests.entities.destinatario_test",
            "tests.entities.objeto_test",
            "tests.entities.produto_test",
            "tests.helper",
            "tests.requests",
            "tests.requests.request_solicitar_postagem_reversa_test",
            "tests.validators",
            "tests.validators.CEP_test",
            "tests.validators.CNPJ_test",
            "tests.validators.CPF_test",
            "tests.validators.Date_test",
            "tests.validators.Email_test",
            "tests.validators.Price_test",
            "tests.webservices",
            "tests.webservices.logistica_reversa_test"
        ],
        "version": "0.1.0"
    },
    "correiospy": {
        "cmdline": [],
        "modules": [
            "correiospy",
            "correiospy.calculator",
            "correiospy.config",
            "correiospy.errors",
            "correiospy.format_order_codes",
            "correiospy.search_engine",
            "correiospy.service_codes",
            "correiospy.utils"
        ],
        "version": "1.0"
    },
    "correlation-pearson": {
        "cmdline": [],
        "modules": [
            "correlation_pearson",
            "correlation_pearson.code"
        ],
        "version": "0.0.1"
    },
    "correos": {
        "cmdline": [],
        "modules": [
            "correos",
            "correos.api",
            "correos.picking",
            "correos.utils"
        ],
        "version": "0.0.3"
    },
    "corresp": {
        "cmdline": [],
        "modules": [
            "corresp",
            "corresp.evaluation",
            "corresp.evaluation.calc_pck",
            "corresp.kitti",
            "corresp.kitti.read_disp_kitti",
            "corresp.kitti.read_flow_kitti",
            "corresp.sintel",
            "corresp.sintel.read_flow_sintel",
            "corresp.verts",
            "corresp.verts.find_verts",
            "corresp.verts.flatten_verts",
            "corresp.verts.flow2verts",
            "corresp.verts.mask_verts",
            "corresp.verts.rescale_verts",
            "corresp.verts.verts2flow",
            "corresp.visualizations",
            "corresp.visualizations.viz_dense",
            "corresp.visualizations.viz_flow",
            "corresp.visualizations.viz_verts",
            "tests",
            "tests.test_find_verts",
            "tests.test_utils",
            "tests.test_verts2flow"
        ],
        "version": "0.1.1"
    },
    "corrfitter": {
        "cmdline": [],
        "modules": [
            "corrfitter"
        ],
        "version": "6.0.1"
    },
    "corrfunc": {
        "cmdline": [],
        "modules": [
            "api",
            "api.errors",
            "api.merge",
            "api.pypi",
            "api.stats",
            "api.stdlib",
            "core",
            "core.logger",
            "core.patches",
            "core.utils"
        ],
        "version": "2.0.0"
    },
    "corruption": {
        "cmdline": [],
        "modules": [
            "corruption"
        ],
        "version": "0.0.4"
    },
    "cors-python": {
        "cmdline": [],
        "modules": [
            "cors",
            "cors.constants",
            "cors.cors_application",
            "cors.cors_handler",
            "cors.cors_options",
            "cors.errors",
            "cors.filters",
            "cors.http_response",
            "cors.validators"
        ],
        "version": "0.0.1"
    },
    "corsa": {
        "cmdline": [],
        "modules": [
            "corsa",
            "corsa.app",
            "corsa.proxy"
        ],
        "version": "0.1.2"
    },
    "corset": {
        "cmdline": [],
        "modules": [
            "corset",
            "corset.management",
            "corset.management.commands",
            "corset.management.commands.corset"
        ],
        "version": "0.0.4"
    },
    "corsproxy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cort": {
        "cmdline": [],
        "modules": [
            "cort",
            "cort.analysis",
            "cort.analysis.data_structures",
            "cort.analysis.error_extractors",
            "cort.analysis.plotting",
            "cort.analysis.spanning_tree_algorithms",
            "cort.analysis.visualization",
            "cort.core",
            "cort.core.corpora",
            "cort.core.documents",
            "cort.core.external_data",
            "cort.core.head_finders",
            "cort.core.mention_extractor",
            "cort.core.mention_property_computer",
            "cort.core.mentions",
            "cort.core.mixins",
            "cort.core.singletons",
            "cort.core.spans",
            "cort.core.util",
            "cort.coreference",
            "cort.coreference.approaches",
            "cort.coreference.approaches.antecedent_trees",
            "cort.coreference.approaches.mention_pairs",
            "cort.coreference.approaches.mention_ranking",
            "cort.coreference.clusterer",
            "cort.coreference.cost_functions",
            "cort.coreference.experiments",
            "cort.coreference.features",
            "cort.coreference.instance_extractors",
            "cort.coreference.multigraph",
            "cort.coreference.multigraph.decoders",
            "cort.coreference.multigraph.features",
            "cort.coreference.multigraph.multigraphs",
            "cort.coreference.multigraph.weighting_functions",
            "cort.preprocessing",
            "cort.preprocessing.pipeline",
            "cort.test",
            "cort.test.analysis",
            "cort.test.analysis.test_data_structures",
            "cort.test.analysis.test_error_extractors",
            "cort.test.analysis.test_spanning_tree_algorithms",
            "cort.test.core",
            "cort.test.core.test_corpora",
            "cort.test.core.test_documents",
            "cort.test.core.test_external_data",
            "cort.test.core.test_head_finders",
            "cort.test.core.test_mention_extractor",
            "cort.test.core.test_mention_property_computer",
            "cort.test.core.test_mentions",
            "cort.test.core.test_spans",
            "cort.test.core.test_util",
            "cort.test.multigraph",
            "cort.test.multigraph.test_features",
            "cort.util",
            "cort.util.import_helper",
            "stanford_corenlp_pywrapper",
            "stanford_corenlp_pywrapper.sockwrap"
        ],
        "version": "0.2.4.5"
    },
    "cortana": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cortanaanalytics": {
        "cmdline": [],
        "modules": [
            "cortanaanalytics",
            "cortanaanalytics.anomalydetection",
            "cortanaanalytics.recommendations",
            "cortanaanalytics.textanalytics"
        ],
        "version": "0.0.4"
    },
    "cortex": {
        "cmdline": [],
        "modules": [
            "cortex",
            "cortex.analysis",
            "cortex.analysis.load_mri",
            "cortex.analysis.mri",
            "cortex.analysis.mri.rois",
            "cortex.analysis.read_fmri",
            "cortex.datasets",
            "cortex.datasets.basic",
            "cortex.datasets.basic.caltech",
            "cortex.datasets.basic.cifar",
            "cortex.datasets.basic.euclidean",
            "cortex.datasets.basic.horses",
            "cortex.datasets.basic.mnist",
            "cortex.datasets.basic.uci",
            "cortex.datasets.neuroimaging",
            "cortex.datasets.neuroimaging.fmri",
            "cortex.datasets.neuroimaging.mri",
            "cortex.datasets.neuroimaging.nifti_viewer",
            "cortex.datasets.neuroimaging.simTB",
            "cortex.datasets.neuroimaging.snp",
            "cortex.demos",
            "cortex.demos.demos_basic",
            "cortex.demos.demos_basic.classifier",
            "cortex.demos.demos_basic.eval_rbm",
            "cortex.demos.demos_basic.rbm_mnist",
            "cortex.demos.demos_basic.vae",
            "cortex.demos.demos_neuroimaging",
            "cortex.demos.demos_neuroimaging.rbm_ni",
            "cortex.demos.demos_neuroimaging.vae",
            "cortex.inference",
            "cortex.inference.air",
            "cortex.inference.gdir",
            "cortex.inference.irvi",
            "cortex.inference.rws",
            "cortex.models",
            "cortex.models.darn",
            "cortex.models.deep_helmholtz",
            "cortex.models.distributions",
            "cortex.models.gru",
            "cortex.models.helmholtz",
            "cortex.models.layers",
            "cortex.models.lstm",
            "cortex.models.mlp",
            "cortex.models.rbm",
            "cortex.models.rnn",
            "cortex.models.tests",
            "cortex.models.tests._test_gru",
            "cortex.models.tests.test_darn",
            "cortex.models.tests.test_mlp",
            "cortex.models.tests.test_rbm",
            "cortex.models.tests.test_rnn",
            "cortex.models.tests.test_vae",
            "cortex.utils",
            "cortex.utils.extra",
            "cortex.utils.learning_scheduler",
            "cortex.utils.logger",
            "cortex.utils.monitor",
            "cortex.utils.op",
            "cortex.utils.preprocessor",
            "cortex.utils.tools",
            "cortex.utils.training",
            "cortex.utils.vis_utils"
        ],
        "version": "0.12a0"
    },
    "cortexapi": {
        "cmdline": [],
        "modules": [
            "cortexapi",
            "cortexapi.Memoize",
            "cortexapi.TextAnalytics"
        ],
        "version": "0.4.1"
    },
    "cortext": {
        "cmdline": [],
        "modules": [
            "cortext",
            "cortext.classifier",
            "cortext.text",
            "cortext.visualizer",
            "cortext.word_types"
        ],
        "version": "0.8"
    },
    "cortexutils": {
        "cmdline": [],
        "modules": [
            "cortexutils",
            "cortexutils.analyzer",
            "cortexutils.extractor"
        ],
        "version": "1.1.0"
    },
    "corto": {
        "cmdline": [],
        "modules": [
            "corto",
            "corto.corto"
        ],
        "version": "0.1"
    },
    "corun": {
        "cmdline": [],
        "modules": [
            "corun"
        ],
        "version": "0.1.0"
    },
    "corunner": {
        "cmdline": [],
        "modules": [
            "corunner",
            "corunner.Config",
            "corunner.FileTransporter",
            "corunner.HeartBeatReceiver",
            "corunner.HeartBeatSender",
            "corunner.ProcessNode",
            "corunner.TaskController",
            "corunner.TaskExecutor",
            "corunner.TaskExecutorProxy",
            "corunner.TestTimeout",
            "corunner.common",
            "corunner.common.ArgumentParser",
            "corunner.common.FileDispatcher",
            "corunner.common.FileUtil",
            "corunner.common.NetUtil",
            "corunner.common.ShellUtil",
            "corunner.common.SimpleThreadPool"
        ],
        "version": "1.0.7"
    },
    "cos": {
        "cmdline": [],
        "modules": [
            "COS",
            "COS._convolve",
            "COS.coadd",
            "COS.reduction",
            "COS.spectrum",
            "COS.utils"
        ],
        "version": "0.1.1"
    },
    "cos-dumps-file-list": {
        "cmdline": [],
        "modules": [
            "dump_bucket",
            "dump_bucket.main"
        ],
        "version": "0.0.2"
    },
    "cos-lib3": {
        "cmdline": [],
        "modules": [
            "cos_lib3",
            "cos_lib3.cos"
        ],
        "version": "0.0.9"
    },
    "cos-migrate-tool": {
        "cmdline": [],
        "modules": [
            "migrate_tool",
            "migrate_tool.bloomfilter",
            "migrate_tool.filter",
            "migrate_tool.main",
            "migrate_tool.migrator",
            "migrate_tool.services",
            "migrate_tool.services.LocalFileSystem",
            "migrate_tool.services.coss3",
            "migrate_tool.services.cosv3",
            "migrate_tool.services.cosv4",
            "migrate_tool.services.oss",
            "migrate_tool.services.qiniu",
            "migrate_tool.services.s3",
            "migrate_tool.services.url_list",
            "migrate_tool.storage_service",
            "migrate_tool.task",
            "migrate_tool.worker"
        ],
        "version": "0.1.1"
    },
    "cos-migrate-tool-test": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.12"
    },
    "cos2": {
        "cmdline": [],
        "modules": [
            "cos2",
            "cos2.api",
            "cos2.auth",
            "cos2.compat",
            "cos2.defaults",
            "cos2.exceptions",
            "cos2.http",
            "cos2.iterators",
            "cos2.json_utils",
            "cos2.models",
            "cos2.utils"
        ],
        "version": "0.1.8"
    },
    "cosanostra": {
        "cmdline": [],
        "modules": [
            "cosanostra",
            "cosanostra.actions",
            "cosanostra.ballot",
            "cosanostra.conditions",
            "cosanostra.debug",
            "cosanostra.effects",
            "cosanostra.factions",
            "cosanostra.game",
            "cosanostra.infos",
            "cosanostra.invalidities",
            "cosanostra.plan",
            "cosanostra.player",
            "cosanostra.resolver",
            "cosanostra.roles",
            "cosanostra.selectors"
        ],
        "version": "0.0.0"
    },
    "coscli": {
        "cmdline": [],
        "modules": [
            "coscli",
            "coscli.command",
            "coscli.cos",
            "coscli.main",
            "coscli.tools",
            "coscli.utils"
        ],
        "version": "0.13"
    },
    "coscmd": {
        "cmdline": [],
        "modules": [
            "coscmd",
            "coscmd.auth",
            "coscmd.client",
            "coscmd.main"
        ],
        "version": "0.1.8"
    },
    "cosent.buildtools": {
        "cmdline": [],
        "modules": [
            "cosent",
            "cosent.buildtools",
            "cosent.buildtools.buildtool",
            "cosent.buildtools.bumpversion",
            "cosent.buildtools.tests",
            "cosent.buildtools.tests._dummysetup",
            "cosent.buildtools.tests.test_buildtool",
            "cosent.buildtools.tests.test_bumpversion"
        ],
        "version": "1.2.1"
    },
    "cosent.dummypackage": {
        "cmdline": [],
        "modules": [
            "cosent",
            "cosent.dummypackage"
        ],
        "version": "0.4"
    },
    "cosent.guruscan": {
        "cmdline": [],
        "modules": [
            "cosent",
            "cosent.guruscan",
            "cosent.guruscan.Extensions",
            "cosent.guruscan.Extensions.Install",
            "cosent.guruscan.browser",
            "cosent.guruscan.browser.exportusers",
            "cosent.guruscan.browser.guruscan",
            "cosent.guruscan.config",
            "cosent.guruscan.controlpanel",
            "cosent.guruscan.i18n",
            "cosent.guruscan.interfaces",
            "cosent.guruscan.testing",
            "cosent.guruscan.tests",
            "cosent.guruscan.tests.test_controlpanel",
            "cosent.guruscan.tests.test_setup"
        ],
        "version": "1.0dev"
    },
    "coshsh": {
        "cmdline": [
            "coshsh-cook",
            "coshsh-create-template-tree"
        ],
        "modules": [
            "coshsh",
            "coshsh.application",
            "coshsh.configparser",
            "coshsh.contact",
            "coshsh.contactgroup",
            "coshsh.datarecipient",
            "coshsh.datasource",
            "coshsh.dependency",
            "coshsh.generator",
            "coshsh.host",
            "coshsh.hostgroup",
            "coshsh.item",
            "coshsh.jinja2_extensions",
            "coshsh.monitoringdetail",
            "coshsh.recipe",
            "coshsh.templaterule",
            "coshsh.util"
        ],
        "version": "3.6.1"
    },
    "cosine": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cosine-transform": {
        "cmdline": [],
        "modules": [
            "cosine_transform"
        ],
        "version": "0.0.3"
    },
    "cosm-python": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cosmic": {
        "cmdline": [],
        "modules": [
            "cosmic",
            "cosmic.api",
            "cosmic.client",
            "cosmic.exceptions",
            "cosmic.globals",
            "cosmic.http",
            "cosmic.legacy_teleport",
            "cosmic.models",
            "cosmic.testing",
            "cosmic.tools",
            "cosmic.types"
        ],
        "version": "0.5.6"
    },
    "cosmic-ray": {
        "cmdline": [],
        "modules": [
            "cosmic_ray",
            "cosmic_ray.cli",
            "cosmic_ray.commands",
            "cosmic_ray.commands.execute",
            "cosmic_ray.commands.init",
            "cosmic_ray.commands.report",
            "cosmic_ray.counting",
            "cosmic_ray.importing",
            "cosmic_ray.json_util",
            "cosmic_ray.modules",
            "cosmic_ray.mutating",
            "cosmic_ray.operators",
            "cosmic_ray.operators.binary_operator_replacement",
            "cosmic_ray.operators.boolean_replacer",
            "cosmic_ray.operators.break_continue",
            "cosmic_ray.operators.comparison_operator_replacement",
            "cosmic_ray.operators.number_replacer",
            "cosmic_ray.operators.operator",
            "cosmic_ray.operators.unary_operator_replacement",
            "cosmic_ray.parsing",
            "cosmic_ray.plugins",
            "cosmic_ray.print_visitor",
            "cosmic_ray.tasks",
            "cosmic_ray.tasks.celery",
            "cosmic_ray.tasks.worker",
            "cosmic_ray.testing",
            "cosmic_ray.testing.nose_runner",
            "cosmic_ray.testing.pytest_runner",
            "cosmic_ray.testing.test_runner",
            "cosmic_ray.testing.unittest_runner",
            "cosmic_ray.timing",
            "cosmic_ray.util",
            "cosmic_ray.version",
            "cosmic_ray.work_db",
            "cosmic_ray.worker"
        ],
        "version": "1.1.0a1"
    },
    "cosmicpi-server": {
        "cmdline": [],
        "modules": [
            "cosmicpi_server",
            "cosmicpi_server.cli",
            "cosmicpi_server.cosmicpi_server"
        ],
        "version": "0.1.0"
    },
    "cosmicpi-web": {
        "cmdline": [],
        "modules": [
            "cosmicpi_web",
            "cosmicpi_web.cli",
            "cosmicpi_web.cosmicpi_web"
        ],
        "version": "0.2.1"
    },
    "cosmicpy": {
        "cmdline": [],
        "modules": [
            "cosmicpy",
            "cosmicpy.constants",
            "cosmicpy.cosmology",
            "cosmicpy.fisher",
            "cosmicpy.spectra",
            "cosmicpy.survey",
            "cosmicpy.tests",
            "cosmicpy.tests.icosmo",
            "cosmicpy.tests.theory",
            "cosmicpy.utils"
        ],
        "version": "0.1.2"
    },
    "cosmid": {
        "cmdline": [
            "cosmid"
        ],
        "modules": [
            "cosmid",
            "cosmid.core",
            "cosmid.distribute_setup",
            "cosmid.magicmethods",
            "cosmid.messenger",
            "cosmid.resource",
            "cosmid.resources",
            "cosmid.resources.1000g_omni",
            "cosmid.resources.1000g_snps",
            "cosmid.resources.ccds",
            "cosmid.resources.dbsnp",
            "cosmid.resources.dbsnpex",
            "cosmid.resources.decoy",
            "cosmid.resources.ensembl_assembly",
            "cosmid.resources.example",
            "cosmid.resources.genbank",
            "cosmid.resources.gtf",
            "cosmid.resources.hapmap",
            "cosmid.resources.indels",
            "cosmid.resources.mills",
            "cosmid.resources.ncbi_assembly",
            "cosmid.resources.ucsc_assembly",
            "cosmid.servers",
            "cosmid.servers.ensembl",
            "cosmid.servers.gatk",
            "cosmid.servers.ncbi",
            "cosmid.servers.thousandg",
            "cosmid.servers.ucsc",
            "cosmid.yml"
        ],
        "version": "0.4.9.1"
    },
    "cosmoabc": {
        "cmdline": [
            "continue_ABC.py",
            "continue_ABC_NumCosmo.py",
            "plot_ABC.py",
            "run_ABC.py",
            "run_ABC_NumCosmo.py",
            "test_ABC_algorithm.py",
            "test_ABC_distance.py"
        ],
        "modules": [
            "cosmoabc",
            "cosmoabc.ABC_functions",
            "cosmoabc.ABC_sampler",
            "cosmoabc.distances",
            "cosmoabc.plots",
            "cosmoabc.priors",
            "cosmoabc.sim_NumCosmo_cluster",
            "cosmoabc.weighted_gaussian_kde"
        ],
        "version": "1.0.5"
    },
    "cosmobolognalib": {
        "cmdline": [],
        "modules": [
            "CosmoBolognaLib",
            "CosmoBolognaLib.CosmoBolognaLib"
        ],
        "version": "3.2"
    },
    "cosmocalc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cosmohammer": {
        "cmdline": [],
        "modules": [
            "Tests",
            "Tests.test_ChainContext",
            "Tests.test_CosmoHammerSampler",
            "Tests.test_InMemoryStorageUtil",
            "Tests.test_LikelihoodComputationChain",
            "Tests.test_MpiUtil",
            "Tests.test_Params",
            "Tests.test_ParticleSwarmOptimizer",
            "Tests.test_PositionGenerators",
            "Tests.test_SampleFileUtil",
            "cosmoHammer",
            "cosmoHammer.ChainContext",
            "cosmoHammer.ConcurrentMpiCosmoHammerSampler",
            "cosmoHammer.Constants",
            "cosmoHammer.CosmoHammerSampler",
            "cosmoHammer.LikelihoodComputationChain",
            "cosmoHammer.MpiCosmoHammerSampler",
            "cosmoHammer.exceptions",
            "cosmoHammer.modules",
            "cosmoHammer.modules.MultivarianteGaussianModule",
            "cosmoHammer.modules.PseudoCmbModule",
            "cosmoHammer.modules.RosenbrockModule",
            "cosmoHammer.pso",
            "cosmoHammer.pso.BestFitPositionGenerator",
            "cosmoHammer.pso.CurvatureFitter",
            "cosmoHammer.pso.MpiParticleSwarmOptimizer",
            "cosmoHammer.pso.ParticleSwarmOptimizer",
            "cosmoHammer.util",
            "cosmoHammer.util.FlatPositionGenerator",
            "cosmoHammer.util.IPythonUtil",
            "cosmoHammer.util.InMemoryStorageUtil",
            "cosmoHammer.util.IterationStopCriteriaStrategy",
            "cosmoHammer.util.MpiUtil",
            "cosmoHammer.util.Params",
            "cosmoHammer.util.SampleBallPositionGenerator",
            "cosmoHammer.util.SampleFileUtil",
            "examples",
            "examples.DerivedParamterFileUtil",
            "examples.DummyCoreModule",
            "examples.DummyLikelihoodModule",
            "examples.runCosmoHammer",
            "examples.runCosmoHammerGaussian",
            "examples.runCosmoHammerPseudoCmb",
            "examples.runCosmoHammerRosenbrock",
            "examples.wmap_tester"
        ],
        "version": "0.6.0"
    },
    "cosmolopy": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.104"
    },
    "cosmophotoz": {
        "cmdline": [
            "run_glm.py"
        ],
        "modules": [
            "CosmoPhotoz",
            "CosmoPhotoz.photoz",
            "CosmoPhotoz.run_glm",
            "CosmoPhotoz.test"
        ],
        "version": "0.1"
    },
    "cosmos": {
        "cmdline": [],
        "modules": [
            "cosmos",
            "cosmos.admin",
            "cosmos.admin.commands",
            "cosmos.admin.createproject",
            "cosmos.admin.publish",
            "cosmos.admin.samples",
            "cosmos.admin.samples.adminpaneldef",
            "cosmos.admin.samples.angularbasicdef",
            "cosmos.admin.samples.angulardef",
            "cosmos.admin.samples.barebonedef",
            "cosmos.admin.samples.simpledef",
            "cosmos.auth",
            "cosmos.auth.oauth2",
            "cosmos.bees",
            "cosmos.bees.celery",
            "cosmos.bees.celery.workflow",
            "cosmos.certmgr",
            "cosmos.certmgr.certfactory",
            "cosmos.common",
            "cosmos.common.constants",
            "cosmos.datamonitor",
            "cosmos.datamonitor.monitor",
            "cosmos.dataservice",
            "cosmos.dataservice.objectservice",
            "cosmos.msgq",
            "cosmos.msgq.amazon",
            "cosmos.msgq.azure",
            "cosmos.msgq.rabbitmq",
            "cosmos.processors",
            "cosmos.rbac",
            "cosmos.rbac.cache",
            "cosmos.rbac.object",
            "cosmos.rbac.service",
            "cosmos.schema",
            "cosmos.schema.object",
            "cosmos.service",
            "cosmos.service.appservice",
            "cosmos.service.auth",
            "cosmos.service.certservice",
            "cosmos.service.constants",
            "cosmos.service.formview",
            "cosmos.service.gridfsservice",
            "cosmos.service.importexport",
            "cosmos.service.oauth2service",
            "cosmos.service.requesthandler",
            "cosmos.service.search",
            "cosmos.service.servicehandler",
            "cosmos.service.servicemain",
            "cosmos.service.utils",
            "cosmos.util",
            "test"
        ],
        "version": "0.1.93.3"
    },
    "cosmos-osm": {
        "cmdline": [],
        "modules": [
            "cosmos",
            "cosmos.cli",
            "cosmos.constants",
            "cosmos.data",
            "cosmos.types",
            "cosmos.utils"
        ],
        "version": "0.0.1"
    },
    "cosmos-python": {
        "cmdline": [],
        "modules": [
            "Cosmos",
            "Cosmos.Content",
            "Cosmos.Cosmos",
            "Cosmos.Exceptions",
            "Cosmos.Exceptions.NoApiKeyException",
            "Cosmos.Exceptions.NoPrivateKeyException",
            "Cosmos.Exceptions.NotFoundInApiException",
            "Cosmos.Security",
            "Cosmos.Security.Encryption",
            "Cosmos.Storage",
            "Cosmos.Storage.Cache"
        ],
        "version": "1.1.0"
    },
    "cosmos-wfm": {
        "cmdline": [
            "cosmos"
        ],
        "modules": [
            "cosmos",
            "cosmos.api",
            "cosmos.core",
            "cosmos.core.cmd_fxn",
            "cosmos.core.cmd_fxn.io",
            "cosmos.core.cmd_fxn.signature",
            "cosmos.db",
            "cosmos.graph",
            "cosmos.graph.draw",
            "cosmos.graph.taskgraph",
            "cosmos.job",
            "cosmos.job.JobManager",
            "cosmos.job.drm",
            "cosmos.job.drm.DRM_Base",
            "cosmos.job.drm.drm_drmaa",
            "cosmos.job.drm.drm_ge",
            "cosmos.job.drm.drm_local",
            "cosmos.job.drm.drm_lsf",
            "cosmos.job.drm.util",
            "cosmos.models",
            "cosmos.models.Cosmos",
            "cosmos.models.Stage",
            "cosmos.models.Task",
            "cosmos.models.Workflow",
            "cosmos.util",
            "cosmos.util.args",
            "cosmos.util.growl",
            "cosmos.util.helpers",
            "cosmos.util.iterstuff",
            "cosmos.util.signal_handlers",
            "cosmos.util.sms",
            "cosmos.util.sqla",
            "cosmos.web",
            "cosmos.web.admin",
            "cosmos.web.filters",
            "cosmos.web.gemon",
            "cosmos.web.gemon.ge",
            "cosmos.web.gemon.util",
            "cosmos.web.gemon.views",
            "cosmos.web.gunicorn",
            "cosmos.web.views",
            "docs",
            "docs.source",
            "docs.source._static",
            "docs.source._static.imgs",
            "docs.source._static.imgs.generate_images",
            "docs.source.conf",
            "examples",
            "examples.ex1",
            "examples.ex2",
            "examples.ex_email",
            "examples.tools"
        ],
        "version": "2.3.6"
    },
    "cosmos2": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "costa-ci": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.4"
    },
    "costcla": {
        "cmdline": [],
        "modules": [
            "costcla",
            "costcla.datasets",
            "costcla.datasets.base",
            "costcla.metrics",
            "costcla.metrics.costs",
            "costcla.models",
            "costcla.models.bagging",
            "costcla.models.cost_ensemble",
            "costcla.models.cost_tree",
            "costcla.models.directcost",
            "costcla.models.regression",
            "costcla.probcal",
            "costcla.probcal.probcal",
            "costcla.sampling",
            "costcla.sampling._smote",
            "costcla.sampling.cost_sampling",
            "costcla.sampling.sampling",
            "costcla.utils",
            "costcla.utils.cross_validation"
        ],
        "version": "0.5"
    },
    "costina": {
        "cmdline": [],
        "modules": [
            "costina",
            "costina.base",
            "costina.basemodel",
            "costina.config",
            "costina.grequests"
        ],
        "version": "0.0.3"
    },
    "costools": {
        "cmdline": [],
        "modules": [],
        "version": "1.2"
    },
    "cot": {
        "cmdline": [],
        "modules": [
            "COT",
            "COT._version",
            "COT.add_disk",
            "COT.add_file",
            "COT.cli",
            "COT.commands",
            "COT.commands.add_disk",
            "COT.commands.add_file",
            "COT.commands.command",
            "COT.commands.demo_logging",
            "COT.commands.deploy",
            "COT.commands.deploy_esxi",
            "COT.commands.edit_hardware",
            "COT.commands.edit_product",
            "COT.commands.edit_properties",
            "COT.commands.help",
            "COT.commands.info",
            "COT.commands.inject_config",
            "COT.commands.install_helpers",
            "COT.commands.remove_file",
            "COT.commands.tests",
            "COT.commands.tests.command_testcase",
            "COT.commands.tests.test_add_disk",
            "COT.commands.tests.test_add_file",
            "COT.commands.tests.test_command",
            "COT.commands.tests.test_deploy",
            "COT.commands.tests.test_deploy_esxi",
            "COT.commands.tests.test_doctests",
            "COT.commands.tests.test_edit_hardware",
            "COT.commands.tests.test_edit_product",
            "COT.commands.tests.test_edit_properties",
            "COT.commands.tests.test_info",
            "COT.commands.tests.test_inject_config",
            "COT.commands.tests.test_install_helpers",
            "COT.commands.tests.test_remove_file",
            "COT.data_validation",
            "COT.deploy",
            "COT.deploy_esxi",
            "COT.disks",
            "COT.disks.disk",
            "COT.disks.iso",
            "COT.disks.qcow2",
            "COT.disks.raw",
            "COT.disks.tests",
            "COT.disks.tests.test_api",
            "COT.disks.tests.test_disk_representation",
            "COT.disks.tests.test_iso",
            "COT.disks.tests.test_qcow2",
            "COT.disks.tests.test_raw",
            "COT.disks.tests.test_vmdk",
            "COT.disks.vmdk",
            "COT.edit_hardware",
            "COT.edit_product",
            "COT.edit_properties",
            "COT.file_reference",
            "COT.help",
            "COT.helpers",
            "COT.helpers.api",
            "COT.helpers.apt_get",
            "COT.helpers.brew",
            "COT.helpers.fatdisk",
            "COT.helpers.gcc",
            "COT.helpers.helper",
            "COT.helpers.isoinfo",
            "COT.helpers.make",
            "COT.helpers.mkisofs",
            "COT.helpers.ovftool",
            "COT.helpers.port",
            "COT.helpers.qemu_img",
            "COT.helpers.tests",
            "COT.helpers.tests.test_doctests",
            "COT.helpers.tests.test_fatdisk",
            "COT.helpers.tests.test_genisoimage",
            "COT.helpers.tests.test_helper",
            "COT.helpers.tests.test_isoinfo",
            "COT.helpers.tests.test_mkisofs",
            "COT.helpers.tests.test_ovftool",
            "COT.helpers.tests.test_qemu_img",
            "COT.helpers.tests.test_vmdktool",
            "COT.helpers.tests.test_xorriso",
            "COT.helpers.vmdktool",
            "COT.helpers.yum",
            "COT.info",
            "COT.inject_config",
            "COT.install_helpers",
            "COT.logging_",
            "COT.ovf",
            "COT.ovf.hardware",
            "COT.ovf.item",
            "COT.ovf.name_helper",
            "COT.ovf.ovf",
            "COT.ovf.tests",
            "COT.ovf.tests.test_doctests",
            "COT.ovf.tests.test_hardware",
            "COT.ovf.tests.test_item",
            "COT.ovf.tests.test_ovf",
            "COT.platforms",
            "COT.platforms.cisco_csr1000v",
            "COT.platforms.cisco_iosv",
            "COT.platforms.cisco_iosxrv",
            "COT.platforms.cisco_iosxrv_9000",
            "COT.platforms.cisco_nexus_9000v",
            "COT.platforms.cisco_nxosv",
            "COT.platforms.generic",
            "COT.platforms.platform",
            "COT.platforms.tests",
            "COT.platforms.tests.test_cisco_csr1000v",
            "COT.platforms.tests.test_cisco_iosv",
            "COT.platforms.tests.test_cisco_iosxrv",
            "COT.platforms.tests.test_cisco_iosxrv_9000",
            "COT.platforms.tests.test_cisco_nexus_9000v",
            "COT.platforms.tests.test_cisco_nxosv",
            "COT.platforms.tests.test_generic",
            "COT.platforms.tests.test_platform",
            "COT.remove_file",
            "COT.submodule",
            "COT.tests",
            "COT.tests.cot_testcase",
            "COT.tests.test_add_disk",
            "COT.tests.test_add_file",
            "COT.tests.test_cli",
            "COT.tests.test_data_validation",
            "COT.tests.test_deploy",
            "COT.tests.test_deploy_esxi",
            "COT.tests.test_doctests",
            "COT.tests.test_edit_hardware",
            "COT.tests.test_edit_product",
            "COT.tests.test_edit_properties",
            "COT.tests.test_file_reference",
            "COT.tests.test_info",
            "COT.tests.test_inject_config",
            "COT.tests.test_install_helpers",
            "COT.tests.test_remove_file",
            "COT.tests.test_submodule",
            "COT.tests.test_ui_shared",
            "COT.tests.test_utilities",
            "COT.tests.test_vm_description",
            "COT.tests.test_xml_file",
            "COT.tests.ut",
            "COT.ui",
            "COT.ui.cli",
            "COT.ui.tests",
            "COT.ui.tests.test_cli",
            "COT.ui.tests.test_doctests",
            "COT.ui.tests.test_ui",
            "COT.ui.ui",
            "COT.ui_shared",
            "COT.utilities",
            "COT.vm_context_manager",
            "COT.vm_description",
            "COT.vm_description.ovf",
            "COT.vm_description.ovf.hardware",
            "COT.vm_description.ovf.item",
            "COT.vm_description.ovf.name_helper",
            "COT.vm_description.ovf.ovf",
            "COT.vm_description.ovf.tests",
            "COT.vm_description.ovf.tests.test_doctests",
            "COT.vm_description.ovf.tests.test_hardware",
            "COT.vm_description.ovf.tests.test_item",
            "COT.vm_description.ovf.tests.test_ovf",
            "COT.vm_description.ovf.tests.test_utilities",
            "COT.vm_description.ovf.utilities",
            "COT.vm_description.tests",
            "COT.vm_description.tests.test_vm_description",
            "COT.vm_description.vm_description",
            "COT.vm_factory",
            "COT.xml_file"
        ],
        "version": "2.0.3"
    },
    "cotede": {
        "cmdline": [],
        "modules": [
            "cotede",
            "cotede.anomaly_detection",
            "cotede.anomaly_detection.anomaly_detection",
            "cotede.anomaly_detection.dev_anomaly_detection",
            "cotede.dev",
            "cotede.fuzzy",
            "cotede.fuzzy.defuzz",
            "cotede.fuzzy.fuzzy_core",
            "cotede.fuzzy.fuzzydev",
            "cotede.fuzzy.membership_functions",
            "cotede.humanqc",
            "cotede.humanqc.climatology_inspect",
            "cotede.humanqc.humaneval",
            "cotede.humanqc.main",
            "cotede.libqc",
            "cotede.misc",
            "cotede.qc",
            "cotede.qctests",
            "cotede.qctests.anomaly_detection",
            "cotede.qctests.bin_spike",
            "cotede.qctests.bin_variance",
            "cotede.qctests.cum_rate_of_change",
            "cotede.qctests.density_inversion",
            "cotede.qctests.descentPrate",
            "cotede.qctests.fuzzylogic",
            "cotede.qctests.global_range",
            "cotede.qctests.gradient",
            "cotede.qctests.location_at_sea",
            "cotede.qctests.morello2014",
            "cotede.qctests.offset_dbscan",
            "cotede.qctests.possible_speed",
            "cotede.qctests.profile_envelop",
            "cotede.qctests.qctests",
            "cotede.qctests.rate_of_change",
            "cotede.qctests.spike",
            "cotede.qctests.tukey53H",
            "cotede.qctests.valid_position",
            "cotede.qctests.woa_normbias",
            "cotede.utils",
            "cotede.utils.logger",
            "cotede.utils.profilescollection",
            "cotede.utils.supportdata",
            "cotede.utils.utils"
        ],
        "version": "0.18.0"
    },
    "cotendo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cothread": {
        "cmdline": [],
        "modules": [
            "cothread",
            "cothread.cadef",
            "cothread.catools",
            "cothread.coselect",
            "cothread.coserver",
            "cothread.cosocket",
            "cothread.cothread",
            "cothread.dbr",
            "cothread.input_hook",
            "cothread.libca_path",
            "cothread.load_ca",
            "cothread.poll_win32",
            "cothread.pv",
            "cothread.tools",
            "cothread.tools.pvtree",
            "cothread.version"
        ],
        "version": "2.13.1"
    },
    "cotidia-admin-tools": {
        "cmdline": [],
        "modules": [
            "admin_tools",
            "admin_tools.dashboard",
            "admin_tools.dashboard.dashboards",
            "admin_tools.dashboard.forms",
            "admin_tools.dashboard.management",
            "admin_tools.dashboard.management.commands",
            "admin_tools.dashboard.management.commands.customdashboard",
            "admin_tools.dashboard.models",
            "admin_tools.dashboard.modules",
            "admin_tools.dashboard.registry",
            "admin_tools.dashboard.templatetags",
            "admin_tools.dashboard.templatetags.admin_tools_dashboard_tags",
            "admin_tools.dashboard.tests",
            "admin_tools.dashboard.urls",
            "admin_tools.dashboard.utils",
            "admin_tools.dashboard.views",
            "admin_tools.deprecate_utils",
            "admin_tools.liststyle",
            "admin_tools.liststyle.admin",
            "admin_tools.liststyle.templatetags",
            "admin_tools.liststyle.templatetags.liststyle_tags",
            "admin_tools.menu",
            "admin_tools.menu.forms",
            "admin_tools.menu.items",
            "admin_tools.menu.management",
            "admin_tools.menu.management.commands",
            "admin_tools.menu.management.commands.custommenu",
            "admin_tools.menu.menus",
            "admin_tools.menu.models",
            "admin_tools.menu.templatetags",
            "admin_tools.menu.templatetags.admin_tools_menu_tags",
            "admin_tools.menu.tests",
            "admin_tools.menu.urls",
            "admin_tools.menu.utils",
            "admin_tools.menu.views",
            "admin_tools.urls",
            "admin_tools.utils"
        ],
        "version": "0.4.1"
    },
    "cotidia-import-export": {
        "cmdline": [],
        "modules": [
            "import_export",
            "import_export.admin",
            "import_export.exceptions",
            "import_export.fields",
            "import_export.formats",
            "import_export.formats.base_formats",
            "import_export.forms",
            "import_export.instance_loaders",
            "import_export.models",
            "import_export.resources",
            "import_export.results",
            "import_export.templatetags",
            "import_export.templatetags.import_export_tags",
            "import_export.widgets"
        ],
        "version": "0.1.5"
    },
    "cotoolz": {
        "cmdline": [],
        "modules": [
            "cotoolz",
            "cotoolz.curried"
        ],
        "version": "0.1.6"
    },
    "cotton": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cotton-tools": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cottonmouth": {
        "cmdline": [],
        "modules": [
            "cottonmouth",
            "cottonmouth.constants",
            "cottonmouth.html",
            "cottonmouth.tags"
        ],
        "version": "0.2.2"
    },
    "cottontail": {
        "cmdline": [],
        "modules": [
            "cottontail",
            "cottontail.base",
            "cottontail.errors",
            "cottontail.pubsub",
            "cottontail.queue",
            "cottontail.rpc",
            "cottontail.topic",
            "cottontail.utils"
        ],
        "version": "0.1a"
    },
    "cotyledon": {
        "cmdline": [],
        "modules": [
            "cotyledon",
            "cotyledon._service",
            "cotyledon._service_manager",
            "cotyledon._utils",
            "cotyledon.oslo_config_glue",
            "cotyledon.tests",
            "cotyledon.tests.base",
            "cotyledon.tests.examples",
            "cotyledon.tests.test_functional",
            "cotyledon.tests.test_unit"
        ],
        "version": "1.6.7"
    },
    "couch-named-python": {
        "cmdline": [
            "cnp-upload",
            "couch-named-python"
        ],
        "modules": [
            "couch_named_python",
            "couch_named_python.base_io",
            "couch_named_python.pyviews",
            "couch_named_python.uploader"
        ],
        "version": "0.2.2"
    },
    "couchable": {
        "cmdline": [],
        "modules": [
            "couchable",
            "couchable.core"
        ],
        "version": "0.4.2"
    },
    "couchapp": {
        "cmdline": [],
        "modules": [
            "couchapp",
            "couchapp.autopush",
            "couchapp.autopush.command",
            "couchapp.autopush.handler",
            "couchapp.autopush.watcher",
            "couchapp.autopush.winwatcher",
            "couchapp.client",
            "couchapp.clone_app",
            "couchapp.commands",
            "couchapp.config",
            "couchapp.dispatch",
            "couchapp.errors",
            "couchapp.generator",
            "couchapp.hooks",
            "couchapp.hooks.compress",
            "couchapp.hooks.compress.compress_css",
            "couchapp.hooks.compress.default",
            "couchapp.hooks.compress.jsmin",
            "couchapp.hooks.compress.yuicompressor",
            "couchapp.localdoc",
            "couchapp.macros",
            "couchapp.util",
            "couchapp.vendors",
            "couchapp.vendors.backends",
            "couchapp.vendors.backends.base",
            "couchapp.vendors.backends.couchdb",
            "couchapp.vendors.backends.git",
            "couchapp.vendors.backends.hg",
            "couchapp.vendors.base",
            "tests",
            "tests.test_cli",
            "tests.test_clone_app",
            "tests.test_commands",
            "tests.test_compress",
            "tests.test_config",
            "tests.test_dispatch",
            "tests.test_ignores",
            "tests.test_util",
            "tests.test_utils"
        ],
        "version": "1.0.2"
    },
    "coucharchive": {
        "cmdline": [
            "coucharchive"
        ],
        "modules": [],
        "version": "1.0.2"
    },
    "couchbase": {
        "cmdline": [],
        "modules": [
            "acouchbase",
            "acouchbase.asyncio_iops",
            "acouchbase.bucket",
            "acouchbase.iterator",
            "couchbase",
            "couchbase._bootstrap",
            "couchbase._ixmgmt",
            "couchbase._logutil",
            "couchbase._pyport",
            "couchbase._version",
            "couchbase.admin",
            "couchbase.async",
            "couchbase.async.async_bucket",
            "couchbase.async.bucket",
            "couchbase.async.events",
            "couchbase.async.n1ql",
            "couchbase.async.rowsbase",
            "couchbase.async.view",
            "couchbase.bucket",
            "couchbase.bucketmanager",
            "couchbase.cbas",
            "couchbase.cluster",
            "couchbase.connection",
            "couchbase.connstr",
            "couchbase.exceptions",
            "couchbase.experimental",
            "couchbase.fulltext",
            "couchbase.iops",
            "couchbase.iops.base",
            "couchbase.iops.select",
            "couchbase.items",
            "couchbase.mockserver",
            "couchbase.mutation_state",
            "couchbase.n1ql",
            "couchbase.result",
            "couchbase.subdocument",
            "couchbase.tests",
            "couchbase.tests.base",
            "couchbase.tests.cases",
            "couchbase.tests.cases.admin_t",
            "couchbase.tests.cases.append_t",
            "couchbase.tests.cases.arithmetic_t",
            "couchbase.tests.cases.badargs_t",
            "couchbase.tests.cases.cbftstrings_t",
            "couchbase.tests.cases.cluster_t",
            "couchbase.tests.cases.connection_t",
            "couchbase.tests.cases.datastructures_t",
            "couchbase.tests.cases.delete_t",
            "couchbase.tests.cases.design_t",
            "couchbase.tests.cases.dupkeys_t",
            "couchbase.tests.cases.empty_key_t",
            "couchbase.tests.cases.encodings_t",
            "couchbase.tests.cases.endure_t",
            "couchbase.tests.cases.excextra_t",
            "couchbase.tests.cases.flush_t",
            "couchbase.tests.cases.format_t",
            "couchbase.tests.cases.get_t",
            "couchbase.tests.cases.iops_t",
            "couchbase.tests.cases.itertypes_t",
            "couchbase.tests.cases.itmops_t",
            "couchbase.tests.cases.ixmgmt_t",
            "couchbase.tests.cases.lock_t",
            "couchbase.tests.cases.lockmode_t",
            "couchbase.tests.cases.misc_t",
            "couchbase.tests.cases.mutationtokens_t",
            "couchbase.tests.cases.n1ql_t",
            "couchbase.tests.cases.n1qlstrings_t",
            "couchbase.tests.cases.observe_t",
            "couchbase.tests.cases.pipeline_t",
            "couchbase.tests.cases.results_t",
            "couchbase.tests.cases.rget_t",
            "couchbase.tests.cases.set_converters_t",
            "couchbase.tests.cases.set_t",
            "couchbase.tests.cases.spatial_t",
            "couchbase.tests.cases.stats_t",
            "couchbase.tests.cases.subdoc_t",
            "couchbase.tests.cases.touch_t",
            "couchbase.tests.cases.transcoder_t",
            "couchbase.tests.cases.verinfo_t",
            "couchbase.tests.cases.view_iterator_t",
            "couchbase.tests.cases.view_t",
            "couchbase.tests.cases.viewstrings_t",
            "couchbase.tests.cases.xattr_t",
            "couchbase.tests.importer",
            "couchbase.tests.test_sync",
            "couchbase.transcoder",
            "couchbase.user_constants",
            "couchbase.views",
            "couchbase.views.iterator",
            "couchbase.views.params",
            "gcouchbase",
            "gcouchbase.bucket",
            "gcouchbase.connection",
            "gcouchbase.gevent_bucket",
            "gcouchbase.iops_gevent0x",
            "gcouchbase.iops_gevent10",
            "txcouchbase",
            "txcouchbase.bucket",
            "txcouchbase.connection",
            "txcouchbase.iops",
            "txcouchbase.twisted_bucket"
        ],
        "version": "2.2.4"
    },
    "couchbasekit": {
        "cmdline": [],
        "modules": [
            "couchbasekit",
            "couchbasekit.connection",
            "couchbasekit.document",
            "couchbasekit.errors",
            "couchbasekit.fields",
            "couchbasekit.middlewares",
            "couchbasekit.schema",
            "couchbasekit.viewsync"
        ],
        "version": "0.2.2"
    },
    "couchbot": {
        "cmdline": [],
        "modules": [
            "couchbot"
        ],
        "version": "0.1.0"
    },
    "couchclient": {
        "cmdline": [],
        "modules": [
            "couchclient"
        ],
        "version": "1.1.1"
    },
    "couchdb": {
        "cmdline": [],
        "modules": [
            "couchdb",
            "couchdb.client",
            "couchdb.design",
            "couchdb.http",
            "couchdb.json",
            "couchdb.loader",
            "couchdb.mapping",
            "couchdb.multipart",
            "couchdb.tests",
            "couchdb.tests.client",
            "couchdb.tests.couch_tests",
            "couchdb.tests.couchhttp",
            "couchdb.tests.design",
            "couchdb.tests.loader",
            "couchdb.tests.mapping",
            "couchdb.tests.multipart",
            "couchdb.tests.package",
            "couchdb.tests.testutil",
            "couchdb.tests.tools",
            "couchdb.tests.view",
            "couchdb.tools",
            "couchdb.tools.dump",
            "couchdb.tools.load",
            "couchdb.tools.replicate",
            "couchdb.util",
            "couchdb.util2",
            "couchdb.util3",
            "couchdb.view"
        ],
        "version": "1.1"
    },
    "couchdb-auditor": {
        "cmdline": [],
        "modules": [
            "couchdb_auditor",
            "couchdb_auditor.auditor"
        ],
        "version": "0.2"
    },
    "couchdb-download-token": {
        "cmdline": [],
        "modules": [
            "couchdb_download_token",
            "couchdb_download_token.config",
            "couchdb_download_token.couchdb_download_token",
            "couchdb_download_token.helpers"
        ],
        "version": "0.1.1"
    },
    "couchdb-fuse": {
        "cmdline": [],
        "modules": [
            "couchmount"
        ],
        "version": "0.2dev"
    },
    "couchdb-python-curl": {
        "cmdline": [],
        "modules": [
            "couchdbcurl",
            "couchdbcurl.changes",
            "couchdbcurl.client",
            "couchdbcurl.dbcompact",
            "couchdbcurl.design",
            "couchdbcurl.multipart",
            "couchdbcurl.pinger",
            "couchdbcurl.schema",
            "couchdbcurl.tests",
            "couchdbcurl.tests.client",
            "couchdbcurl.tests.couch_tests",
            "couchdbcurl.tests.design",
            "couchdbcurl.tests.multipart",
            "couchdbcurl.tests.schema",
            "couchdbcurl.tests.view",
            "couchdbcurl.tools",
            "couchdbcurl.tools.dump",
            "couchdbcurl.tools.load",
            "couchdbcurl.tools.replication_helper",
            "couchdbcurl.tools.replication_helper_test",
            "couchdbcurl.view"
        ],
        "version": "1.1.6"
    },
    "couchdb-python-requests": {
        "cmdline": [],
        "modules": [
            "couchdbrq",
            "couchdbrq.client",
            "couchdbrq.pinger",
            "couchdbrq.tests",
            "couchdbrq.tests.client",
            "couchdbrq.view"
        ],
        "version": "0.3"
    },
    "couchdb-schematics": {
        "cmdline": [],
        "modules": [
            "couchdb_schematics",
            "couchdb_schematics.document"
        ],
        "version": "1.1.1"
    },
    "couchdb-session": {
        "cmdline": [],
        "modules": [
            "couchdbsession",
            "couchdbsession.a8n",
            "couchdbsession.session",
            "couchdbsession.tests",
            "couchdbsession.tests.test_a8n",
            "couchdbsession.tests.test_session"
        ],
        "version": "0.1"
    },
    "couchdb-wsgi": {
        "cmdline": [],
        "modules": [
            "couchdb_wsgi",
            "couchdb_wsgi.urlencoding"
        ],
        "version": "0.1"
    },
    "couchdbhelper": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "couchdbkit": {
        "cmdline": [],
        "modules": [
            "couchdbkit",
            "couchdbkit.changes",
            "couchdbkit.client",
            "couchdbkit.consumer",
            "couchdbkit.consumer.base",
            "couchdbkit.consumer.ceventlet",
            "couchdbkit.consumer.cgevent",
            "couchdbkit.consumer.sync",
            "couchdbkit.designer",
            "couchdbkit.designer.fs",
            "couchdbkit.designer.macros",
            "couchdbkit.exceptions",
            "couchdbkit.ext",
            "couchdbkit.ext.django",
            "couchdbkit.ext.django.forms",
            "couchdbkit.ext.django.loading",
            "couchdbkit.ext.django.management",
            "couchdbkit.ext.django.management.commands",
            "couchdbkit.ext.django.management.commands.sync_couchdb",
            "couchdbkit.ext.django.management.commands.sync_finish_couchdb",
            "couchdbkit.ext.django.management.commands.sync_prepare_couchdb",
            "couchdbkit.ext.django.schema",
            "couchdbkit.ext.django.testrunner",
            "couchdbkit.ext.pylons",
            "couchdbkit.ext.pylons.auth",
            "couchdbkit.ext.pylons.auth.adapters",
            "couchdbkit.ext.pylons.auth.basic",
            "couchdbkit.ext.pylons.auth.model",
            "couchdbkit.ext.pylons.commands",
            "couchdbkit.ext.pylons.db",
            "couchdbkit.ext.pylons.test",
            "couchdbkit.external",
            "couchdbkit.loaders",
            "couchdbkit.resource",
            "couchdbkit.schema",
            "couchdbkit.schema.base",
            "couchdbkit.schema.properties",
            "couchdbkit.schema.properties_proxy",
            "couchdbkit.schema.util",
            "couchdbkit.utils",
            "couchdbkit.version",
            "couchdbkit.wsgi",
            "couchdbkit.wsgi.handler",
            "couchdbkit.wsgi.proxy"
        ],
        "version": "0.6.5"
    },
    "couchdblogger": {
        "cmdline": [],
        "modules": [
            "couchdblogger"
        ],
        "version": "0.1.3"
    },
    "couchdiscover": {
        "cmdline": [],
        "modules": [
            "couchdiscover",
            "couchdiscover.config",
            "couchdiscover.couch",
            "couchdiscover.entrypoints",
            "couchdiscover.exceptions",
            "couchdiscover.kube",
            "couchdiscover.manage",
            "couchdiscover.util"
        ],
        "version": "0.2.3"
    },
    "couchexport": {
        "cmdline": [],
        "modules": [
            "couchexport",
            "couchexport.deid",
            "couchexport.exceptions",
            "couchexport.export",
            "couchexport.files",
            "couchexport.groupexports",
            "couchexport.management",
            "couchexport.management.commands",
            "couchexport.management.commands.couchexport_data",
            "couchexport.management.commands.force_update_schemas",
            "couchexport.management.commands.migrate_custom_exports",
            "couchexport.management.commands.migrate_export_types",
            "couchexport.management.commands.update_schema_checkpoints",
            "couchexport.models",
            "couchexport.properties",
            "couchexport.schema",
            "couchexport.shortcuts",
            "couchexport.tasks",
            "couchexport.tests",
            "couchexport.tests.test_cleanup",
            "couchexport.tests.test_raw",
            "couchexport.tests.test_saved",
            "couchexport.tests.test_schema",
            "couchexport.transforms",
            "couchexport.urls",
            "couchexport.util",
            "couchexport.views",
            "couchexport.writers"
        ],
        "version": "0.0.2"
    },
    "couchfdw": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "couchforms": {
        "cmdline": [],
        "modules": [
            "couchforms",
            "couchforms.const",
            "couchforms.exceptions",
            "couchforms.filters",
            "couchforms.getters",
            "couchforms.management",
            "couchforms.management.commands",
            "couchforms.management.commands.post_form",
            "couchforms.management.commands.submit_form",
            "couchforms.management.commands.submit_forms",
            "couchforms.models",
            "couchforms.signals",
            "couchforms.tests",
            "couchforms.tests.test_archive",
            "couchforms.tests.test_auth",
            "couchforms.tests.test_bugs",
            "couchforms.tests.test_duplicates",
            "couchforms.tests.test_edits",
            "couchforms.tests.test_meta",
            "couchforms.tests.test_namespaces",
            "couchforms.tests.test_post",
            "couchforms.tests.test_xml",
            "couchforms.urls",
            "couchforms.util",
            "couchforms.views",
            "couchforms.xml"
        ],
        "version": "3.0.2"
    },
    "couchfti": {
        "cmdline": [],
        "modules": [
            "couchfti",
            "couchfti.index",
            "couchfti.query",
            "couchfti.search"
        ],
        "version": "0.1.2dev"
    },
    "couchhelper": {
        "cmdline": [],
        "modules": [
            "couch5"
        ],
        "version": "2.3.0"
    },
    "couchish": {
        "cmdline": [],
        "modules": [
            "couchish",
            "couchish.config",
            "couchish.couchish_formish_jsonbuilder",
            "couchish.couchish_jsonbuilder",
            "couchish.create_view",
            "couchish.errors",
            "couchish.filehandling",
            "couchish.filestore",
            "couchish.formish_jsonbuilder",
            "couchish.jsonutil",
            "couchish.schemaish_jsonbuilder",
            "couchish.store",
            "couchish.sync_categories",
            "couchish.tests",
            "couchish.tests.test_couchish_formish_jsonbuilder",
            "couchish.tests.test_couchish_jsonbuilder",
            "couchish.tests.test_couchish_store_files",
            "couchish.tests.test_filestore",
            "couchish.tests.test_formish_jsonbuilder",
            "couchish.tests.test_schemaish_jsonbuilder",
            "couchish.tests.test_store",
            "couchish.tests.util"
        ],
        "version": "0.2.2"
    },
    "couchpotato": {
        "cmdline": [],
        "modules": [
            "couchpotato",
            "couchpotato.decorator",
            "couchpotato.very",
            "couchpotato.very.lazy"
        ],
        "version": "0.1.0"
    },
    "couchpy": {
        "cmdline": [],
        "modules": [
            "couchpy",
            "couchpy.client",
            "couchpy.couchcmd",
            "couchpy.database",
            "couchpy.db",
            "couchpy.doc",
            "couchpy.httpc",
            "couchpy.httperror",
            "couchpy.mixins",
            "couchpy.page",
            "couchpy.rest",
            "couchpy.utils",
            "docs",
            "docs.conf"
        ],
        "version": "0.2dev"
    },
    "couchql": {
        "cmdline": [],
        "modules": [
            "couchql",
            "couchql.cursor",
            "couchql.parser",
            "couchql.query"
        ],
        "version": "0.1"
    },
    "couchquery": {
        "cmdline": [],
        "modules": [
            "couchquery",
            "couchquery.asynchttp",
            "couchquery.changes",
            "couchquery.shelve"
        ],
        "version": "0.10.3"
    },
    "couchstore": {
        "cmdline": [],
        "modules": [
            "couchstore"
        ],
        "version": "0.1"
    },
    "couchsurfing": {
        "cmdline": [],
        "modules": [
            "couchsurfing",
            "couchsurfing.api"
        ],
        "version": "1.0.0"
    },
    "couchutil": {
        "cmdline": [],
        "modules": [
            "couchutil",
            "couchutil.changes",
            "couchutil.reservation"
        ],
        "version": "0.1.1dev"
    },
    "coucou-lib": {
        "cmdline": [],
        "modules": [
            "coucou_lib",
            "coucou_lib.coucou_lib"
        ],
        "version": "0.0.8"
    },
    "couleur": {
        "cmdline": [],
        "modules": [
            "couleur"
        ],
        "version": "0.6.2"
    },
    "count-min-sketch": {
        "cmdline": [],
        "modules": [
            "count_min_sketch/",
            "count_min_sketch/.count_min_sketch",
            "count_min_sketch/.speed_test"
        ],
        "version": "3.0.4"
    },
    "countdb": {
        "cmdline": [
            "aggregate",
            "count"
        ],
        "modules": [
            "countdb",
            "countdb.aggregators"
        ],
        "version": "0.5"
    },
    "countdown": {
        "cmdline": [],
        "modules": [
            "countdown"
        ],
        "version": "1.0.0"
    },
    "countdown-slackbot": {
        "cmdline": [],
        "modules": [
            "countdown_slackbot",
            "countdown_slackbot.bot",
            "countdown_slackbot.numbers",
            "countdown_slackbot.tests",
            "countdown_slackbot.tests.test_numbers_game"
        ],
        "version": "0.0.2"
    },
    "countdownapp": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "countenvir": {
        "cmdline": [],
        "modules": [
            "countenvir"
        ],
        "version": "1.0.3"
    },
    "counter": {
        "cmdline": [],
        "modules": [
            "counter"
        ],
        "version": "1.0.0"
    },
    "counter-caller": {
        "cmdline": [],
        "modules": [
            "counter_caller",
            "counter_caller.app",
            "counter_caller.cli",
            "counter_caller.default_settings",
            "counter_caller.finders",
            "counter_caller.triggers"
        ],
        "version": "2.0.3rc6"
    },
    "counterparts": {
        "cmdline": [],
        "modules": [
            "counterparts",
            "tests",
            "tests.test_counterparts"
        ],
        "version": "0.1"
    },
    "counterparty-cli": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "counterparty-lib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "counterpoint": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "countershape": {
        "cmdline": [
            "cshape"
        ],
        "modules": [
            "countershape",
            "countershape.analysis",
            "countershape.blog",
            "countershape.doc",
            "countershape.html",
            "countershape.layout",
            "countershape.markup",
            "countershape.model",
            "countershape.rssgen",
            "countershape.sitemap",
            "countershape.state",
            "countershape.template",
            "countershape.utils",
            "countershape.widgets"
        ],
        "version": "0.1"
    },
    "countmemaybe": {
        "cmdline": [],
        "modules": [
            "countmemaybe",
            "countmemaybe.base_dve",
            "countmemaybe.bloomfilter",
            "countmemaybe.hyperloglog",
            "countmemaybe.kminvalues",
            "countmemaybe.quantile",
            "countmemaybe.test_dve"
        ],
        "version": "0.4.4"
    },
    "countminsketch": {
        "cmdline": [],
        "modules": [
            "countminsketch"
        ],
        "version": "0.2"
    },
    "countop": {
        "cmdline": [],
        "modules": [
            "countop",
            "countop.integer"
        ],
        "version": "0.11"
    },
    "countrecordrefs": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.1"
    },
    "countries": {
        "cmdline": [],
        "modules": [
            "countries",
            "countries.management",
            "countries.management.commands",
            "countries.management.commands.country_export_gettext",
            "countries.migrations",
            "countries.migrations.0001_initial",
            "countries.migrations.0002_cleanup",
            "countries.models"
        ],
        "version": "0.2.0"
    },
    "countries-flavor": {
        "cmdline": [],
        "modules": [
            "countries_flavor",
            "countries_flavor.admin",
            "countries_flavor.apps",
            "countries_flavor.fields",
            "countries_flavor.loaddata",
            "countries_flavor.management",
            "countries_flavor.management.commands",
            "countries_flavor.management.commands._base",
            "countries_flavor.management.commands.collect_countries",
            "countries_flavor.management.commands.dump_countries",
            "countries_flavor.management.commands.load_countries",
            "countries_flavor.managers",
            "countries_flavor.migrations",
            "countries_flavor.migrations.0001_initial",
            "countries_flavor.migrations.0002_auto_20170430_1646",
            "countries_flavor.models",
            "countries_flavor.rest_framework",
            "countries_flavor.rest_framework.filters",
            "countries_flavor.rest_framework.serializers",
            "countries_flavor.rest_framework.urls",
            "countries_flavor.rest_framework.views",
            "countries_flavor.shortcuts"
        ],
        "version": "0.0.2"
    },
    "country": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "country-bounding-boxes": {
        "cmdline": [],
        "modules": [
            "country_bounding_boxes",
            "country_bounding_boxes.generated",
            "country_bounding_boxes.tests"
        ],
        "version": "0.2.3"
    },
    "country-converter": {
        "cmdline": [],
        "modules": [
            "country_converter",
            "country_converter.country_converter",
            "country_converter.version"
        ],
        "version": "0.3.3"
    },
    "country-currencies": {
        "cmdline": [],
        "modules": [
            "country_currencies",
            "country_currencies.data"
        ],
        "version": "0.2"
    },
    "country-via": {
        "cmdline": [],
        "modules": [
            "country_via",
            "country_via.cli",
            "country_via.nirsoft",
            "country_via.renderer"
        ],
        "version": "0.0.3"
    },
    "countrycode": {
        "cmdline": [],
        "modules": [
            "countrycode",
            "countrycode.countrycode",
            "countrycode.test_countrycode"
        ],
        "version": "0.2"
    },
    "countrygooglescraper": {
        "cmdline": [],
        "modules": [
            "GoogleScraper",
            "GoogleScraper.async_mode",
            "GoogleScraper.caching",
            "GoogleScraper.commandline",
            "GoogleScraper.config",
            "GoogleScraper.core",
            "GoogleScraper.database",
            "GoogleScraper.http_mode",
            "GoogleScraper.log",
            "GoogleScraper.output_converter",
            "GoogleScraper.parsing",
            "GoogleScraper.proxies",
            "GoogleScraper.scrape_config",
            "GoogleScraper.scrape_jobs",
            "GoogleScraper.scraping",
            "GoogleScraper.search_engine_parameters",
            "GoogleScraper.selenium_mode",
            "GoogleScraper.socks",
            "GoogleScraper.user_agents",
            "GoogleScraper.utils",
            "GoogleScraper.version"
        ],
        "version": "0.2.10"
    },
    "countrynames": {
        "cmdline": [],
        "modules": [
            "countrynames"
        ],
        "version": "1.3"
    },
    "countrysubdomains": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "counttrie": {
        "cmdline": [],
        "modules": [
            "counttrie"
        ],
        "version": "0.1.0"
    },
    "countvar": {
        "cmdline": [],
        "modules": [
            "countvar",
            "countvar.multicount",
            "countvar.unicount"
        ],
        "version": "0.2.2"
    },
    "coup": {
        "cmdline": [],
        "modules": [
            "coup",
            "coup.objecter_core",
            "coup.objecter_core._Base",
            "coup.objecter_core._InBase",
            "coup.objecter_core._Smart",
            "coup.objecter_core._common_classes",
            "coup.objecter_core._funcs",
            "coup.objecter_core._smart_parsers",
            "coup.swift",
            "coup.swift.all"
        ],
        "version": "0.0.1"
    },
    "coupon-codes": {
        "cmdline": [],
        "modules": [
            "coupon_codes",
            "coupon_codes.coupon_codes"
        ],
        "version": "0.1"
    },
    "courier": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "courier-py": {
        "cmdline": [],
        "modules": [
            "courier"
        ],
        "version": "0.1"
    },
    "courier-pythonfilter": {
        "cmdline": [
            "dropmsg",
            "pythonfilter",
            "pythonfilter-quarantine"
        ],
        "modules": [
            "courier",
            "courier.authdaemon",
            "courier.config",
            "courier.control",
            "courier.quarantine",
            "courier.sendmail",
            "courier.xfilter",
            "pythonfilter",
            "pythonfilter.TtlDb",
            "pythonfilter.add_signature",
            "pythonfilter.attachments",
            "pythonfilter.auto_whitelist",
            "pythonfilter.clamav",
            "pythonfilter.comeagain",
            "pythonfilter.debug",
            "pythonfilter.deliveredto",
            "pythonfilter.dialback",
            "pythonfilter.greylist",
            "pythonfilter.localsenders",
            "pythonfilter.log_aliases",
            "pythonfilter.noduplicates",
            "pythonfilter.noreceivedheaders",
            "pythonfilter.nosuccessdsn",
            "pythonfilter.privateaddr",
            "pythonfilter.quota",
            "pythonfilter.ratelimit",
            "pythonfilter.sentfolder",
            "pythonfilter.spamassassin",
            "pythonfilter.spfcheck",
            "pythonfilter.whitelist_auth",
            "pythonfilter.whitelist_block",
            "pythonfilter.whitelist_dnswl",
            "pythonfilter.whitelist_relayclients",
            "pythonfilter.whitelist_spf"
        ],
        "version": "1.11"
    },
    "courierlib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "course": {
        "cmdline": [],
        "modules": [
            "course"
        ],
        "version": "0.1.0"
    },
    "course-backup": {
        "cmdline": [],
        "modules": [
            "course_backup",
            "course_backup.course_backup"
        ],
        "version": "0.1.4"
    },
    "coursebin": {
        "cmdline": [
            "course-compile",
            "course-complete",
            "new-course",
            "new-notes",
            "new-semester",
            "remove-course",
            "semester-complete"
        ],
        "modules": [
            "coursebin",
            "coursebin.helpers",
            "coursebin.objects"
        ],
        "version": "1.0.4"
    },
    "coursera": {
        "cmdline": [],
        "modules": [
            "coursera",
            "coursera.api",
            "coursera.cookies",
            "coursera.coursera_dl",
            "coursera.credentials",
            "coursera.define",
            "coursera.downloaders",
            "coursera.network",
            "coursera.utils"
        ],
        "version": "0.5.2"
    },
    "coursera-dl": {
        "cmdline": [],
        "modules": [
            "coursera",
            "coursera.api",
            "coursera.commandline",
            "coursera.cookies",
            "coursera.coursera_dl",
            "coursera.credentials",
            "coursera.define",
            "coursera.downloaders",
            "coursera.extractors",
            "coursera.filtering",
            "coursera.formatting",
            "coursera.network",
            "coursera.parallel",
            "coursera.playlist",
            "coursera.py2devtools",
            "coursera.sampler",
            "coursera.utils",
            "coursera.workflow"
        ],
        "version": "0.8.0"
    },
    "coursera-downloader": {
        "cmdline": [
            "coursera-dl.py"
        ],
        "modules": [
            "cdl",
            "cdl.parser",
            "cdl.signin"
        ],
        "version": "0.2"
    },
    "coursera-notes-merge": {
        "cmdline": [],
        "modules": [
            "coursera_notes_merge",
            "coursera_notes_merge.cli"
        ],
        "version": "0.1.0"
    },
    "coursera-offline": {
        "cmdline": [
            "coursera_offline.py"
        ],
        "modules": [],
        "version": "1.1.4"
    },
    "courseraoauth2client": {
        "cmdline": [],
        "modules": [
            "courseraoauth2client",
            "courseraoauth2client.commands",
            "courseraoauth2client.commands.config",
            "courseraoauth2client.commands.version",
            "courseraoauth2client.main",
            "courseraoauth2client.oauth2",
            "courseraoauth2client.utils"
        ],
        "version": "0.0.1"
    },
    "courseraprogramming": {
        "cmdline": [],
        "modules": [
            "courseraprogramming",
            "courseraprogramming.commands",
            "courseraprogramming.commands.cat",
            "courseraprogramming.commands.common",
            "courseraprogramming.commands.config",
            "courseraprogramming.commands.grade",
            "courseraprogramming.commands.inspect",
            "courseraprogramming.commands.ls",
            "courseraprogramming.commands.oauth2",
            "courseraprogramming.commands.publish",
            "courseraprogramming.commands.reregister",
            "courseraprogramming.commands.sanity",
            "courseraprogramming.commands.upload",
            "courseraprogramming.commands.version",
            "courseraprogramming.main",
            "courseraprogramming.utils"
        ],
        "version": "0.18.0"
    },
    "courseraresearchexports": {
        "cmdline": [],
        "modules": [
            "courseraresearchexports",
            "courseraresearchexports.commands",
            "courseraresearchexports.commands.containers",
            "courseraresearchexports.commands.db",
            "courseraresearchexports.commands.jobs",
            "courseraresearchexports.commands.utils",
            "courseraresearchexports.commands.version",
            "courseraresearchexports.constants",
            "courseraresearchexports.constants.api_constants",
            "courseraresearchexports.constants.container_constants",
            "courseraresearchexports.constants.db_constants",
            "courseraresearchexports.containers",
            "courseraresearchexports.containers.client",
            "courseraresearchexports.containers.utils",
            "courseraresearchexports.db",
            "courseraresearchexports.db.db",
            "courseraresearchexports.exports",
            "courseraresearchexports.exports.api",
            "courseraresearchexports.exports.utils",
            "courseraresearchexports.main",
            "courseraresearchexports.models",
            "courseraresearchexports.models.ClickstreamDownloadLinksRequest",
            "courseraresearchexports.models.ContainerInfo",
            "courseraresearchexports.models.ExportDb",
            "courseraresearchexports.models.ExportRequest",
            "courseraresearchexports.models.ExportRequestWithMetadata",
            "courseraresearchexports.models.utils"
        ],
        "version": "0.0.24"
    },
    "courspider": {
        "cmdline": [],
        "modules": [
            "courspider",
            "courspider.course",
            "courspider.department_calendar",
            "courspider.faculty_calendar",
            "courspider.faculty_calendar_resources",
            "courspider.faculty_calendar_resources.department",
            "courspider.faculty_calendar_resources.faculty",
            "courspider.faculty_calendar_resources.faculty_of_arts_and_science_calendar",
            "courspider.faculty_calendar_resources.session",
            "courspider.faculty_calendar_resources.url",
            "courspider.raw_html"
        ],
        "version": "0.8"
    },
    "courtana": {
        "cmdline": [],
        "modules": [
            "courtana",
            "courtana.annotations",
            "courtana.experiment",
            "courtana.jaaba",
            "courtana.tools",
            "courtana.tools.colorline",
            "courtana.tools.oneeurofilter",
            "courtana.tracker",
            "courtana.tracker.doctor",
            "courtana.tracker.flytracker",
            "courtana.tracker.opencsp",
            "courtana.tracker.trackdata",
            "courtana.video"
        ],
        "version": "0.7.0"
    },
    "cov-core": {
        "cmdline": [],
        "modules": [
            "cov_core",
            "cov_core_init"
        ],
        "version": "1.15.0"
    },
    "covador": {
        "cmdline": [],
        "modules": [
            "covador",
            "covador.aiohttp",
            "covador.compat",
            "covador.django",
            "covador.errors",
            "covador.flask",
            "covador.tornado",
            "covador.types",
            "covador.utils"
        ],
        "version": "0.9.2"
    },
    "covar": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "cove": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "coven": {
        "cmdline": [],
        "modules": [
            "coven"
        ],
        "version": "0.0.0"
    },
    "cover": {
        "cmdline": [],
        "modules": [
            "cover"
        ],
        "version": "0.1.0"
    },
    "cover-grabber": {
        "cmdline": [],
        "modules": [
            "cover_grabber",
            "cover_grabber.downloader",
            "cover_grabber.downloader.lastfm_downloader",
            "cover_grabber.flac_handler",
            "cover_grabber.handler",
            "cover_grabber.handler.flac_handler",
            "cover_grabber.handler.handler",
            "cover_grabber.handler.handler_factory",
            "cover_grabber.handler.mp3_handler",
            "cover_grabber.handler.ogg_handler",
            "cover_grabber.lastfm_downloader",
            "cover_grabber.logging",
            "cover_grabber.logging.config",
            "cover_grabber.media_dir_walker",
            "cover_grabber.mp3_handler",
            "cover_grabber.ogg_handler",
            "cover_grabber.os",
            "cover_grabber.os.media_dir_walker"
        ],
        "version": "1.2.1"
    },
    "cover-rage-client": {
        "cmdline": [],
        "modules": [
            "cover_rage_client",
            "cover_rage_client.client",
            "cover_rage_client.cover"
        ],
        "version": "0.0.10"
    },
    "cover-rage-server": {
        "cmdline": [],
        "modules": [
            "cover_rage_server",
            "cover_rage_server.api_validators",
            "cover_rage_server.api_views",
            "cover_rage_server.badge",
            "cover_rage_server.secrets",
            "cover_rage_server.settings",
            "cover_rage_server.storage"
        ],
        "version": "0.0.7"
    },
    "coverage": {
        "cmdline": [],
        "modules": [
            "coverage",
            "coverage.annotate",
            "coverage.backunittest",
            "coverage.backward",
            "coverage.bytecode",
            "coverage.cmdline",
            "coverage.collector",
            "coverage.config",
            "coverage.control",
            "coverage.data",
            "coverage.debug",
            "coverage.env",
            "coverage.execfile",
            "coverage.files",
            "coverage.html",
            "coverage.misc",
            "coverage.multiproc",
            "coverage.parser",
            "coverage.phystokens",
            "coverage.pickle2json",
            "coverage.plugin",
            "coverage.plugin_support",
            "coverage.python",
            "coverage.pytracer",
            "coverage.report",
            "coverage.results",
            "coverage.summary",
            "coverage.templite",
            "coverage.version",
            "coverage.xmlreport"
        ],
        "version": "4.4.1"
    },
    "coverage-badge": {
        "cmdline": [],
        "modules": [
            "coverage_badge"
        ],
        "version": "0.2.0"
    },
    "coverage-enable-subprocess": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "coverage-pth": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "coverage-reporter": {
        "cmdline": [
            "coverage-reporter"
        ],
        "modules": [
            "coverage_reporter",
            "coverage_reporter.collectors",
            "coverage_reporter.collectors.base",
            "coverage_reporter.collectors.coverage_collector",
            "coverage_reporter.collectors.figleaf_collector",
            "coverage_reporter.collectors.util",
            "coverage_reporter.config",
            "coverage_reporter.data",
            "coverage_reporter.errors",
            "coverage_reporter.filters",
            "coverage_reporter.filters.exclude",
            "coverage_reporter.filters.minimum",
            "coverage_reporter.filters.patch",
            "coverage_reporter.plugins",
            "coverage_reporter.reports",
            "coverage_reporter.reports.annotate",
            "coverage_reporter.reports.summarize"
        ],
        "version": "0.01"
    },
    "coverage-tools": {
        "cmdline": [
            "coverage-annotate",
            "coverage-combine",
            "coverage-diff"
        ],
        "modules": [
            "coverage_tools",
            "coverage_tools.utils",
            "tests",
            "tests.test_combine"
        ],
        "version": "0.0.4"
    },
    "coverage.space": {
        "cmdline": [],
        "modules": [
            "coveragespace",
            "coveragespace.base",
            "coveragespace.cache",
            "coveragespace.cli",
            "coveragespace.client",
            "coveragespace.plugins",
            "coveragespace.services",
            "coveragespace.tests",
            "coveragespace.tests.conftest",
            "coveragespace.tests.test_cache",
            "coveragespace.tests.test_cli",
            "coveragespace.tests.test_plugins",
            "coveragespace.tests.test_services",
            "tests",
            "tests.conftest",
            "tests.test_cli"
        ],
        "version": "0.8"
    },
    "coverage2clover": {
        "cmdline": [],
        "modules": [
            "clover",
            "clover.coverage2clover"
        ],
        "version": "1.3.1"
    },
    "coverage2sql": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "coveralls": {
        "cmdline": [],
        "modules": [
            "coveralls",
            "coveralls.api",
            "coveralls.cli",
            "coveralls.reporter"
        ],
        "version": "1.1"
    },
    "coveralls-hg": {
        "cmdline": [],
        "modules": [
            "coveralls_hg",
            "coveralls_hg.api"
        ],
        "version": "2.0.0.2"
    },
    "coveralls-merge": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "coverlovin": {
        "cmdline": [],
        "modules": [],
        "version": "2.0"
    },
    "coverme": {
        "cmdline": [],
        "modules": [],
        "version": "0.6"
    },
    "covermi": {
        "cmdline": [],
        "modules": [
            "covermi",
            "covermi.bgzf",
            "covermi.bringmiup",
            "covermi.clinicalreport",
            "covermi.clinicalreportlatex",
            "covermi.cosmic2variants",
            "covermi.cov",
            "covermi.covermicompare",
            "covermi.covermiconf",
            "covermi.covermiexception",
            "covermi.covermigui",
            "covermi.covermimain",
            "covermi.covermiplot",
            "covermi.covermiverifygui",
            "covermi.covermiwgsgui",
            "covermi.covermiwgsmain",
            "covermi.designreport",
            "covermi.familycheck",
            "covermi.gr",
            "covermi.gr2",
            "covermi.make_canonical",
            "covermi.panel",
            "covermi.reader",
            "covermi.reportfunctions",
            "covermi.technicalreport",
            "covermi.test",
            "covermi.version",
            "covermi.whosthedaddy"
        ],
        "version": "2.1.1"
    },
    "covernant": {
        "cmdline": [
            "covernant"
        ],
        "modules": [
            "covernantlib",
            "covernantlib.bedtowiggle",
            "covernantlib.coveragecalculator",
            "covernantlib.extract",
            "covernantlib.plotmatrix",
            "covernantlib.ratio",
            "covernantlib.rescalewig",
            "covernantlib.wiggle"
        ],
        "version": "0.3.0"
    },
    "coverpy": {
        "cmdline": [],
        "modules": [
            "coverpy",
            "coverpy.coverpy",
            "coverpy.exceptions",
            "test",
            "test.test_coverpy"
        ],
        "version": "0.0.4"
    },
    "coversation-with-your-car": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "covertile.cycle2": {
        "cmdline": [],
        "modules": [
            "covertile",
            "covertile.cycle2",
            "covertile.cycle2.Extensions",
            "covertile.cycle2.Extensions.Install",
            "covertile.cycle2.config",
            "covertile.cycle2.interfaces",
            "covertile.cycle2.testing",
            "covertile.cycle2.tests",
            "covertile.cycle2.tests.test_carousel_tile",
            "covertile.cycle2.tests.test_robot",
            "covertile.cycle2.tests.test_setup",
            "covertile.cycle2.tiles",
            "covertile.cycle2.tiles.carousel",
            "covertile.cycle2.tiles.configuration_widgets",
            "covertile.cycle2.tiles.configuration_widgets.overlaytextarea",
            "covertile.cycle2.tiles.configuration_widgets.pagerstylewidget"
        ],
        "version": "1.0b1"
    },
    "covertutils": {
        "cmdline": [],
        "modules": [
            "covertutils",
            "covertutils.exceptions",
            "covertutils.helpers",
            "covertutils.payloads"
        ],
        "version": "0.1.1"
    },
    "coverxygen": {
        "cmdline": [],
        "modules": [
            "coverxygen"
        ],
        "version": "1.3.0"
    },
    "covest": {
        "cmdline": [
            "fasta_length.py",
            "gsest.py",
            "kmer_hist.py",
            "read_sampler.py",
            "reads_size.py"
        ],
        "modules": [
            "covest",
            "covest.constants",
            "covest.covest",
            "covest.data",
            "covest.grid",
            "covest.histogram",
            "covest.inverse",
            "covest.models",
            "covest.perf",
            "covest.utils"
        ],
        "version": "0.5.6"
    },
    "coviolations-app": {
        "cmdline": [],
        "modules": [
            "coviolations_app",
            "coviolations_app.covio"
        ],
        "version": "0.24"
    },
    "cow": {
        "cmdline": [],
        "modules": [
            "cow",
            "cow.admin",
            "cow.api",
            "cow.apps",
            "cow.forms",
            "cow.migrations",
            "cow.migrations.0001_initial",
            "cow.models",
            "cow.templatetags",
            "cow.templatetags.class_tag",
            "cow.tests",
            "cow.tests.test_cow_models",
            "cow.urls",
            "cow.views"
        ],
        "version": "1.0.7"
    },
    "cow-framework": {
        "cmdline": [],
        "modules": [
            "cow",
            "cow.handlers",
            "cow.handlers.healthcheck",
            "cow.plugins",
            "cow.plugins.es_plugin",
            "cow.plugins.gandalf_plugin",
            "cow.plugins.geopy_google_plugin",
            "cow.plugins.mongoengine_plugin",
            "cow.plugins.motor_plugin",
            "cow.plugins.motorengine_plugin",
            "cow.plugins.pusher_plugin",
            "cow.plugins.redis_plugin",
            "cow.plugins.sqlalchemy_plugin",
            "cow.plugins.sync_redis_plugin",
            "cow.server",
            "cow.testing",
            "tests",
            "tests.sandbox",
            "tests.sandbox.config",
            "tests.sandbox.handlers",
            "tests.sandbox.handlers.test",
            "tests.sandbox.server",
            "tests.test_healthcheck",
            "tests.test_server"
        ],
        "version": "1.0.5"
    },
    "cowboy": {
        "cmdline": [],
        "modules": [
            "cowboy",
            "cowboy.base",
            "cowboy.daterange",
            "cowboy.numberrange"
        ],
        "version": "1.0.1"
    },
    "cowboycushion": {
        "cmdline": [],
        "modules": [
            "cowboycushion",
            "cowboycushion.limiter",
            "cowboycushion.multiprocessing_limiter",
            "cowboycushion.tests",
            "cowboycushion.tests.constants",
            "cowboycushion.tests.test_limiter",
            "cowboycushion.tests.test_multiprocessing_limiter"
        ],
        "version": "0.3"
    },
    "cowbull": {
        "cmdline": [],
        "modules": [
            "cowbull"
        ],
        "version": "1.0.0"
    },
    "cownet": {
        "cmdline": [
            "cownet"
        ],
        "modules": [],
        "version": "0.3.0"
    },
    "coworker": {
        "cmdline": [],
        "modules": [
            "coworker"
        ],
        "version": "1.0.0"
    },
    "cowpy": {
        "cmdline": [
            "cowpy"
        ],
        "modules": [
            "cowpy",
            "cowpy.cow"
        ],
        "version": "1.0.1"
    },
    "cowry": {
        "cmdline": [],
        "modules": [
            "cowry"
        ],
        "version": "1.0"
    },
    "cowsay": {
        "cmdline": [],
        "modules": [
            "cowsay",
            "cowsay.main"
        ],
        "version": "1.0"
    },
    "cowtermcolor": {
        "cmdline": [],
        "modules": [
            "cowtermcolor"
        ],
        "version": "0.2.2"
    },
    "cox-nnet": {
        "cmdline": [],
        "modules": [
            "cox_nnet",
            "cox_nnet.cox_nnet"
        ],
        "version": "0.202"
    },
    "coyote": {
        "cmdline": [],
        "modules": [
            "coyote",
            "coyote.coyote"
        ],
        "version": "0.0.0"
    },
    "coyote-framework": {
        "cmdline": [],
        "modules": [
            "coyote_framework",
            "coyote_framework.config",
            "coyote_framework.config.abstract_config",
            "coyote_framework.config.browser_config",
            "coyote_framework.config.constants_config",
            "coyote_framework.config.database_config",
            "coyote_framework.config.log_config",
            "coyote_framework.config.network_config",
            "coyote_framework.config.testrun_config",
            "coyote_framework.config.timeout_config",
            "coyote_framework.database",
            "coyote_framework.database.coyote_db",
            "coyote_framework.database.coyote_entity_abstract",
            "coyote_framework.drivers",
            "coyote_framework.drivers.coyote_driver",
            "coyote_framework.drivers.coyote_driverfactory",
            "coyote_framework.log",
            "coyote_framework.log.Logger",
            "coyote_framework.mixins",
            "coyote_framework.mixins.URLValidator",
            "coyote_framework.mixins.deprecationwarning",
            "coyote_framework.mixins.filesystem",
            "coyote_framework.mixins.numbers",
            "coyote_framework.mixins.singleton",
            "coyote_framework.mixins.stringconversion",
            "coyote_framework.mixins.timer",
            "coyote_framework.requests",
            "coyote_framework.requests.requestdriver",
            "coyote_framework.testing",
            "coyote_framework.testing.coyote_test",
            "coyote_framework.tests",
            "coyote_framework.tests.apps",
            "coyote_framework.tests.apps.test_run_parallel",
            "coyote_framework.tests.urbuilder",
            "coyote_framework.tests.urbuilder.TestUrlBuilderHostAndPortArguments",
            "coyote_framework.tests.urbuilder.TestUrlBuilderHostArgument",
            "coyote_framework.util",
            "coyote_framework.util.apps",
            "coyote_framework.util.apps.driver_interop",
            "coyote_framework.util.apps.driver_interop.drivercookies",
            "coyote_framework.util.apps.objects",
            "coyote_framework.util.apps.parallel",
            "coyote_framework.util.apps.polling",
            "coyote_framework.util.apps.polling.polling",
            "coyote_framework.util.apps.randomwords",
            "coyote_framework.util.apps.randomwords.words",
            "coyote_framework.util.apps.templating",
            "coyote_framework.util.apps.templating.template",
            "coyote_framework.util.pageobjects",
            "coyote_framework.util.pageobjects.web",
            "coyote_framework.util.pageobjects.web.webobjects",
            "coyote_framework.util.testing",
            "coyote_framework.util.testing.framework",
            "coyote_framework.util.testing.framework.datastore",
            "coyote_framework.util.urls",
            "coyote_framework.util.urls.urlbuilder",
            "coyote_framework.webdriver",
            "coyote_framework.webdriver.helper",
            "coyote_framework.webdriver.helper.Locator",
            "coyote_framework.webdriver.webdriver",
            "coyote_framework.webdriver.webdriver.browsercapabilities",
            "coyote_framework.webdriver.webdriver.driverfactory",
            "coyote_framework.webdriver.webdriverwrapper",
            "coyote_framework.webdriver.webdriverwrapper.WebDriverWrapper",
            "coyote_framework.webdriver.webdriverwrapper.WebElementWrapper",
            "coyote_framework.webdriver.webdriverwrapper.exceptions",
            "coyote_framework.webdriver.webdriverwrapper.exceptions.PageTimeoutException",
            "coyote_framework.webdriver.webdriverwrapper.exceptions.StaleWebElementException",
            "coyote_framework.webdriver.webdriverwrapper.exceptions.WebDriverAssertionException",
            "coyote_framework.webdriver.webdriverwrapper.exceptions.WebDriverJavascriptException",
            "coyote_framework.webdriver.webdriverwrapper.exceptions.WebDriverTimeoutException",
            "coyote_framework.webdriver.webdriverwrapper.exceptions.WebDriverWrapperException",
            "coyote_framework.webdriver.webdriverwrapper.exceptions.WebElementDoesNotExist",
            "coyote_framework.webdriver.webdriverwrapper.exceptions.WebElementNotVisibleException",
            "coyote_framework.webdriver.webdriverwrapper.exceptions.WebElementWrapperException",
            "coyote_framework.webdriver.webdriverwrapper.support",
            "coyote_framework.webdriver.webdriverwrapper.support.JavascriptExecutor",
            "coyote_framework.webdriver.webdriverwrapper.support.LocatorHandler",
            "coyote_framework.webdriver.webdriverwrapper.support.ScreenshotTaker",
            "coyote_framework.webdriver.webdriverwrapper.support.WebDriverWrapperAssertion",
            "coyote_framework.webdriver.webdriverwrapper.support.locator",
            "coyote_framework.webdriver.webdriverwrapper.support.staticreader",
            "example",
            "example.example_app",
            "example.example_app.config",
            "example.example_app.config.example_config",
            "example.example_app.page_objects",
            "example.example_app.page_objects.components",
            "example.example_app.page_objects.components.login_form",
            "example.example_app.page_objects.example_follow_page",
            "example.example_app.page_objects.example_home_page",
            "example.example_app.page_objects.example_page",
            "example.example_app.utility",
            "example.example_app.utility.urlbuilder",
            "example.example_tests",
            "example.example_tests.TestClickButton_ShowText",
            "example.example_tests.TestFollowLink_YouFollowedItGood",
            "example.example_tests.TestGetHeaderText_ConfirmHelloWorld",
            "example.example_tests.TestSubmitForm_ConfirmValues"
        ],
        "version": "0.1.1"
    },
    "cozify": {
        "cmdline": [],
        "modules": [
            "cozify",
            "cozify.Error",
            "cozify.cloud",
            "cozify.config",
            "cozify.hub",
            "cozify.multisensor"
        ],
        "version": "0.2.4"
    },
    "cozmo": {
        "cmdline": [],
        "modules": [
            "cozmo",
            "cozmo._clad",
            "cozmo.action",
            "cozmo.anim",
            "cozmo.annotate",
            "cozmo.base",
            "cozmo.behavior",
            "cozmo.camera",
            "cozmo.clad_protocol",
            "cozmo.conn",
            "cozmo.event",
            "cozmo.exceptions",
            "cozmo.faces",
            "cozmo.lights",
            "cozmo.objects",
            "cozmo.oled_face",
            "cozmo.pets",
            "cozmo.robot",
            "cozmo.run",
            "cozmo.tkview",
            "cozmo.usbmux",
            "cozmo.usbmux.usbmux",
            "cozmo.util",
            "cozmo.version",
            "cozmo.world"
        ],
        "version": "0.13.0"
    },
    "cozmoclad": {
        "cmdline": [],
        "modules": [
            "cozmoclad",
            "cozmoclad.clad",
            "cozmoclad.clad.audio",
            "cozmoclad.clad.audio.audioBusTypes",
            "cozmoclad.clad.audio.audioCallbackMessage",
            "cozmoclad.clad.audio.audioEventTypes",
            "cozmoclad.clad.audio.audioGameObjectTypes",
            "cozmoclad.clad.audio.audioMessage",
            "cozmoclad.clad.audio.audioMessageTypes",
            "cozmoclad.clad.audio.audioParameterTypes",
            "cozmoclad.clad.audio.audioSoundbanks",
            "cozmoclad.clad.audio.audioStateTypes",
            "cozmoclad.clad.audio.audioSwitchTypes",
            "cozmoclad.clad.audio.messageAudioClient",
            "cozmoclad.clad.externalInterface",
            "cozmoclad.clad.externalInterface.messageActions",
            "cozmoclad.clad.externalInterface.messageEngineToGame",
            "cozmoclad.clad.externalInterface.messageEngineToGame_hash",
            "cozmoclad.clad.externalInterface.messageGameToEngine",
            "cozmoclad.clad.externalInterface.messageGameToEngine_hash",
            "cozmoclad.clad.externalInterface.messageShared",
            "cozmoclad.clad.externalInterface.messageToBehaviorManager",
            "cozmoclad.clad.physicsInterface",
            "cozmoclad.clad.physicsInterface.messageSimPhysics",
            "cozmoclad.clad.robotInterface",
            "cozmoclad.clad.robotInterface.bleMessages",
            "cozmoclad.clad.robotInterface.messageFromActiveObject",
            "cozmoclad.clad.robotInterface.messageToActiveObject",
            "cozmoclad.clad.types",
            "cozmoclad.clad.types.actionResults",
            "cozmoclad.clad.types.actionTypes",
            "cozmoclad.clad.types.activeObjectAccel",
            "cozmoclad.clad.types.activeObjectConstants",
            "cozmoclad.clad.types.activeObjectIdentityStates",
            "cozmoclad.clad.types.activeObjectTypes",
            "cozmoclad.clad.types.advertisementTypes",
            "cozmoclad.clad.types.animationEvents",
            "cozmoclad.clad.types.animationTrigger",
            "cozmoclad.clad.types.behaviorChooserType",
            "cozmoclad.clad.types.behaviorGroup",
            "cozmoclad.clad.types.behaviorObjectives",
            "cozmoclad.clad.types.behaviorTypes",
            "cozmoclad.clad.types.birthCertificate",
            "cozmoclad.clad.types.cladPoint",
            "cozmoclad.clad.types.cladRect",
            "cozmoclad.clad.types.controllerChannels",
            "cozmoclad.clad.types.customObjectMarkers",
            "cozmoclad.clad.types.debugConsoleTypes",
            "cozmoclad.clad.types.deviceDataTypes",
            "cozmoclad.clad.types.emotionTypes",
            "cozmoclad.clad.types.engineErrorCodes",
            "cozmoclad.clad.types.engineState",
            "cozmoclad.clad.types.enrolledFaceStorage",
            "cozmoclad.clad.types.faceDetectionMetaData",
            "cozmoclad.clad.types.faceEnrollmentPoses",
            "cozmoclad.clad.types.faceEnrollmentResult",
            "cozmoclad.clad.types.facialExpressions",
            "cozmoclad.clad.types.factoryTestTypes",
            "cozmoclad.clad.types.featureGateTypes",
            "cozmoclad.clad.types.firmwareTypes",
            "cozmoclad.clad.types.gameStatusFlag",
            "cozmoclad.clad.types.globalVizOrigin",
            "cozmoclad.clad.types.imageTypes",
            "cozmoclad.clad.types.imu",
            "cozmoclad.clad.types.keyWords",
            "cozmoclad.clad.types.ledTypes",
            "cozmoclad.clad.types.liveIdleAnimationParameters",
            "cozmoclad.clad.types.loadedKnownFace",
            "cozmoclad.clad.types.logLevels",
            "cozmoclad.clad.types.motorTypes",
            "cozmoclad.clad.types.nvStorageTypes",
            "cozmoclad.clad.types.objectFamilies",
            "cozmoclad.clad.types.objectTypes",
            "cozmoclad.clad.types.offTreadsStates",
            "cozmoclad.clad.types.onboardingData",
            "cozmoclad.clad.types.pathMotionProfile",
            "cozmoclad.clad.types.petTypes",
            "cozmoclad.clad.types.poseStructs",
            "cozmoclad.clad.types.proceduralEyeParameters",
            "cozmoclad.clad.types.proxMessages",
            "cozmoclad.clad.types.robotStatusAndActions",
            "cozmoclad.clad.types.robotTestModes",
            "cozmoclad.clad.types.sayTextStyles",
            "cozmoclad.clad.types.sdkStatusTypes",
            "cozmoclad.clad.types.simpleMoodTypes",
            "cozmoclad.clad.types.toolCodes",
            "cozmoclad.clad.types.uiConnectionTypes",
            "cozmoclad.clad.types.unexpectedMovementTypes",
            "cozmoclad.clad.types.unlockTypes",
            "cozmoclad.clad.types.userFacingResults",
            "cozmoclad.clad.types.visionModes",
            "cozmoclad.clad.types.vizTypes",
            "cozmoclad.clad.vizInterface",
            "cozmoclad.clad.vizInterface.messageViz",
            "cozmoclad.msgbuffers"
        ],
        "version": "1.4.1"
    },
    "cozy-fuse": {
        "cmdline": [],
        "modules": [
            "cozyfuse",
            "cozyfuse.actions",
            "cozyfuse.binary",
            "cozyfuse.compil",
            "cozyfuse.config",
            "cozyfuse.couchmount",
            "cozyfuse.cozy_fuse",
            "cozyfuse.dbutils",
            "cozyfuse.end",
            "cozyfuse.install",
            "cozyfuse.local_config",
            "cozyfuse.remote",
            "cozyfuse.replication"
        ],
        "version": "0.1.2"
    },
    "cozy-indexer": {
        "cmdline": [],
        "modules": [
            "cozyindexer",
            "cozyindexer.app",
            "cozyindexer.handlers",
            "cozyindexer.handlers.base",
            "cozyindexer.handlers.indexer",
            "cozyindexer.lib",
            "cozyindexer.lib.indexer",
            "cozyindexer.lib.stopwords",
            "cozyindexer.lib.version",
            "cozyindexer.server",
            "cozyindexer.settings",
            "cozyindexer.urls"
        ],
        "version": "1.0.6"
    },
    "cozy-management": {
        "cmdline": [
            "acme_tiny.py"
        ],
        "modules": [
            "cozy_management",
            "cozy_management.backup",
            "cozy_management.cli",
            "cozy_management.compare_version",
            "cozy_management.couchdb",
            "cozy_management.diag",
            "cozy_management.helpers",
            "cozy_management.migration",
            "cozy_management.monitor",
            "cozy_management.process",
            "cozy_management.ssl",
            "cozy_management.weboob"
        ],
        "version": "0.0.25"
    },
    "cozydb": {
        "cmdline": [],
        "modules": [
            "cozydb",
            "cozydb.cozydb"
        ],
        "version": "0.1.8"
    },
    "cp": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.22"
    },
    "cp-expand-includes": {
        "cmdline": [],
        "modules": [
            "exinc",
            "exinc.default_config",
            "exinc.preprocessor",
            "exinc.tool"
        ],
        "version": "0.2.3"
    },
    "cp-sqlalchemy": {
        "cmdline": [],
        "modules": [
            "cp_sqlalchemy",
            "cp_sqlalchemy.plugin",
            "cp_sqlalchemy.tool"
        ],
        "version": "0.5.1"
    },
    "cp-sqlalchemy-multidb": {
        "cmdline": [],
        "modules": [
            "cp_sqlalchemy_multidb"
        ],
        "version": "0.2.2"
    },
    "cp-to-anki-colorizer": {
        "cmdline": [
            "cp_to_anki_colorizer"
        ],
        "modules": [
            "cp_to_anki_colorizer",
            "cp_to_anki_colorizer.colorize_lines",
            "cp_to_anki_colorizer.colorizer"
        ],
        "version": "0.7"
    },
    "cp.buildout-postgres": {
        "cmdline": [],
        "modules": [
            "cp",
            "cp.buildout_postgres",
            "cp.buildout_postgres.httpd",
            "cp.buildout_postgres.postgres",
            "cp.buildout_postgres.root",
            "cp.buildout_postgres.tests"
        ],
        "version": "0.1-r2723"
    },
    "cp.recipe.cmd": {
        "cmdline": [],
        "modules": [
            "cp",
            "cp.recipe",
            "cp.recipe.cmd",
            "cp.recipe.cmd.tests",
            "cp.recipe.cmd.tests.test_cmddocs"
        ],
        "version": "0.5"
    },
    "cp1147": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "cp5coach2": {
        "cmdline": [],
        "modules": [
            "cp5coach2"
        ],
        "version": "0.0.0"
    },
    "cp6": {
        "cmdline": [],
        "modules": [
            "CP6"
        ],
        "version": "1.0.3"
    },
    "cpad": {
        "cmdline": [],
        "modules": [
            "cpad"
        ],
        "version": "1.0.0"
    },
    "cpanel": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cpapipackage": {
        "cmdline": [],
        "modules": [
            "cpapipackage",
            "cpapipackage.group",
            "cpapipackage.host",
            "cpapipackage.misc",
            "cpapipackage.network",
            "cpapipackage.policy",
            "cpapipackage.post",
            "cpapipackage.service",
            "cpapipackage.session"
        ],
        "version": "1.0"
    },
    "cpauto": {
        "cmdline": [],
        "modules": [
            "cpauto",
            "cpauto.core",
            "cpauto.core.exceptions",
            "cpauto.core.misc",
            "cpauto.core.sessions",
            "cpauto.objects",
            "cpauto.objects._common",
            "cpauto.objects.access",
            "cpauto.objects.application",
            "cpauto.objects.group",
            "cpauto.objects.host",
            "cpauto.objects.network",
            "cpauto.objects.policy",
            "cpauto.objects.service",
            "cpauto.objects.simplegateway",
            "cpauto.objects.threat"
        ],
        "version": "0.0.5"
    },
    "cpbmapi": {
        "cmdline": [],
        "modules": [
            "cpbmapi",
            "cpbmapi.cli",
            "cpbmapi.cpbmapi"
        ],
        "version": "0.0.2"
    },
    "cpc-api": {
        "cmdline": [],
        "modules": [
            "cpc_api",
            "cpc_api.api"
        ],
        "version": "0.1.5"
    },
    "cpc.geofiles": {
        "cmdline": [],
        "modules": [
            "geofiles",
            "geofiles.conversion",
            "geofiles.datasets",
            "geofiles.exceptions",
            "geofiles.loading",
            "geofiles.reading",
            "geofiles.writing"
        ],
        "version": "0.3.5"
    },
    "cpc.geogrids": {
        "cmdline": [],
        "modules": [
            "geogrids",
            "geogrids.definition",
            "geogrids.exceptions",
            "geogrids.manipulation"
        ],
        "version": "0.2.3"
    },
    "cpc.geoplot": {
        "cmdline": [],
        "modules": [
            "geoplot",
            "geoplot.colors",
            "geoplot.exceptions",
            "geoplot.geofield",
            "geoplot.geomap",
            "geoplot.test"
        ],
        "version": "0.1.6"
    },
    "cpc.mpp": {
        "cmdline": [],
        "modules": [
            "mpp",
            "mpp.bc",
            "mpp.cal",
            "tests",
            "tests.test_main"
        ],
        "version": "0.2.2"
    },
    "cpc.stats": {
        "cmdline": [],
        "modules": [
            "stats",
            "stats.stats"
        ],
        "version": "1.3.3"
    },
    "cpc.units": {
        "cmdline": [],
        "modules": [
            "units",
            "units.units"
        ],
        "version": "0.1.3"
    },
    "cpchunk": {
        "cmdline": [],
        "modules": [
            "cpchunk"
        ],
        "version": "1.0.0.4"
    },
    "cpdb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cpdbear": {
        "cmdline": [],
        "modules": [
            "coalaCPDBear",
            "coalaCPDBear.CPDBear"
        ],
        "version": "0.10.0"
    },
    "cpdns": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cpe": {
        "cmdline": [],
        "modules": [
            "cpe",
            "cpe.__meta__",
            "cpe.comp",
            "cpe.comp.cpecomp",
            "cpe.comp.cpecomp1_1",
            "cpe.comp.cpecomp2_2",
            "cpe.comp.cpecomp2_3",
            "cpe.comp.cpecomp2_3_fs",
            "cpe.comp.cpecomp2_3_uri",
            "cpe.comp.cpecomp2_3_uri_edpacked",
            "cpe.comp.cpecomp2_3_wfn",
            "cpe.comp.cpecomp_anyvalue",
            "cpe.comp.cpecomp_empty",
            "cpe.comp.cpecomp_logical",
            "cpe.comp.cpecomp_notapplicable",
            "cpe.comp.cpecomp_simple",
            "cpe.comp.cpecomp_undefined",
            "cpe.cpe",
            "cpe.cpe1_1",
            "cpe.cpe2_2",
            "cpe.cpe2_3",
            "cpe.cpe2_3_fs",
            "cpe.cpe2_3_uri",
            "cpe.cpe2_3_wfn",
            "cpe.cpelang",
            "cpe.cpelang2_2",
            "cpe.cpelang2_3",
            "cpe.cpeset",
            "cpe.cpeset1_1",
            "cpe.cpeset2_2",
            "cpe.cpeset2_3"
        ],
        "version": "1.2.1"
    },
    "cpe-utils": {
        "cmdline": [],
        "modules": [
            "cpe_utils"
        ],
        "version": "0.1.0"
    },
    "cpenv": {
        "cmdline": [],
        "modules": [
            "cpenv",
            "cpenv.api",
            "cpenv.cache",
            "cpenv.compat",
            "cpenv.defaults",
            "cpenv.deps",
            "cpenv.hooks",
            "cpenv.log",
            "cpenv.models",
            "cpenv.packages",
            "cpenv.packages.click",
            "cpenv.packages.click._bashcomplete",
            "cpenv.packages.click._compat",
            "cpenv.packages.click._termui_impl",
            "cpenv.packages.click._textwrap",
            "cpenv.packages.click.core",
            "cpenv.packages.click.decorators",
            "cpenv.packages.click.exceptions",
            "cpenv.packages.click.formatting",
            "cpenv.packages.click.parser",
            "cpenv.packages.click.termui",
            "cpenv.packages.click.testing",
            "cpenv.packages.click.types",
            "cpenv.packages.click.utils",
            "cpenv.packages.yaml",
            "cpenv.packages.yaml.composer",
            "cpenv.packages.yaml.constructor",
            "cpenv.packages.yaml.cyaml",
            "cpenv.packages.yaml.dumper",
            "cpenv.packages.yaml.emitter",
            "cpenv.packages.yaml.error",
            "cpenv.packages.yaml.events",
            "cpenv.packages.yaml.loader",
            "cpenv.packages.yaml.nodes",
            "cpenv.packages.yaml.parser",
            "cpenv.packages.yaml.reader",
            "cpenv.packages.yaml.representer",
            "cpenv.packages.yaml.resolver",
            "cpenv.packages.yaml.scanner",
            "cpenv.packages.yaml.serializer",
            "cpenv.packages.yaml.tokens",
            "cpenv.resolver",
            "cpenv.shell",
            "cpenv.utils"
        ],
        "version": "0.3.5"
    },
    "cpf-cnpj": {
        "cmdline": [],
        "modules": [
            "cpf_cnpj",
            "cpf_cnpj.cpf_cnpj",
            "cpf_cnpj.tests",
            "cpf_cnpj.tests.tests"
        ],
        "version": "0.1.4"
    },
    "cpfile": {
        "cmdline": [
            "cpfile"
        ],
        "modules": [
            "cpfile",
            "cpfile.cpfile"
        ],
        "version": "1.0.3.1"
    },
    "cpghstore": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "cphcttoolbox": {
        "cmdline": [
            "centerfdk.py",
            "clcenterfdk.py",
            "clfdk.py",
            "clkatsevich.py",
            "cucenterfdk.py",
            "cufdk.py",
            "cukatsevich.py",
            "fdk.py",
            "genclipped.py",
            "gencollapseborder.py",
            "genfanslices.py",
            "genflux2proj.py",
            "gengapless.py",
            "genmeanborder.py",
            "genmerged.py",
            "gennormalized.py",
            "gensinograms.py",
            "genslices.py",
            "gensplit.py",
            "katsevich.py",
            "npycenterfdk.py",
            "npyfdk.py",
            "npykatsevich.py",
            "preprocess.py"
        ],
        "modules": [
            "cphct",
            "cphct.cl",
            "cphct.cl.core",
            "cphct.cl.io",
            "cphct.cl.misc",
            "cphct.cl.misc.base",
            "cphct.cl.utils",
            "cphct.cl.utils.base",
            "cphct.cone",
            "cphct.cone.cl",
            "cphct.cone.cl.io",
            "cphct.cone.conf",
            "cphct.cone.cu",
            "cphct.cone.cu.io",
            "cphct.cone.fdk",
            "cphct.cone.fdk.cl",
            "cphct.cone.fdk.cl.io",
            "cphct.cone.fdk.cl.kernels",
            "cphct.cone.fdk.cl.kernels.base",
            "cphct.cone.fdk.cl.kernels.initialize",
            "cphct.cone.fdk.conf",
            "cphct.cone.fdk.cu",
            "cphct.cone.fdk.cu.io",
            "cphct.cone.fdk.cu.kernels",
            "cphct.cone.fdk.cu.kernels.base",
            "cphct.cone.fdk.cu.kernels.initialize",
            "cphct.cone.fdk.gpu",
            "cphct.cone.fdk.gpu.io",
            "cphct.cone.fdk.io",
            "cphct.cone.fdk.npy",
            "cphct.cone.fdk.npy.io",
            "cphct.cone.fdk.npycore",
            "cphct.cone.fdk.npycore.io",
            "cphct.cone.fdk.npycore.kernels",
            "cphct.cone.fdk.npycore.kernels.base",
            "cphct.cone.fdk.npycore.kernels.initialize",
            "cphct.cone.io",
            "cphct.cone.katsevich",
            "cphct.cone.katsevich.cl",
            "cphct.cone.katsevich.cl.io",
            "cphct.cone.katsevich.cl.kernels",
            "cphct.cone.katsevich.cl.kernels.base",
            "cphct.cone.katsevich.cl.kernels.initialize",
            "cphct.cone.katsevich.conf",
            "cphct.cone.katsevich.cu",
            "cphct.cone.katsevich.cu.io",
            "cphct.cone.katsevich.cu.kernels",
            "cphct.cone.katsevich.cu.kernels.base",
            "cphct.cone.katsevich.cu.kernels.initialize",
            "cphct.cone.katsevich.gpu",
            "cphct.cone.katsevich.gpu.io",
            "cphct.cone.katsevich.io",
            "cphct.cone.katsevich.npy",
            "cphct.cone.katsevich.npy.io",
            "cphct.cone.katsevich.npycore",
            "cphct.cone.katsevich.npycore.io",
            "cphct.cone.katsevich.npycore.kernels",
            "cphct.cone.katsevich.npycore.kernels.base",
            "cphct.cone.katsevich.npycore.kernels.initialize",
            "cphct.cone.npy",
            "cphct.cone.npy.io",
            "cphct.cone.npycore",
            "cphct.cone.npycore.io",
            "cphct.cone.npycore.utils",
            "cphct.cone.npycore.utils.base",
            "cphct.cone.npycore.utils.tools",
            "cphct.conf",
            "cphct.cu",
            "cphct.cu.core",
            "cphct.cu.gpuarray",
            "cphct.cu.io",
            "cphct.cu.misc",
            "cphct.cu.misc.base",
            "cphct.cu.utils",
            "cphct.cu.utils.base",
            "cphct.fan",
            "cphct.fan.centerfdk",
            "cphct.fan.centerfdk.cl",
            "cphct.fan.centerfdk.cl.io",
            "cphct.fan.centerfdk.cl.kernels",
            "cphct.fan.centerfdk.conf",
            "cphct.fan.centerfdk.cu",
            "cphct.fan.centerfdk.cu.io",
            "cphct.fan.centerfdk.cu.kernels",
            "cphct.fan.centerfdk.io",
            "cphct.fan.centerfdk.npy",
            "cphct.fan.centerfdk.npy.io",
            "cphct.fan.centerfdk.npycore",
            "cphct.fan.centerfdk.npycore.io",
            "cphct.fan.centerfdk.npycore.kernels",
            "cphct.fan.cl",
            "cphct.fan.cl.io",
            "cphct.fan.conf",
            "cphct.fan.cu",
            "cphct.fan.cu.io",
            "cphct.fan.io",
            "cphct.fan.npy",
            "cphct.fan.npy.io",
            "cphct.fan.npycore",
            "cphct.fan.npycore.io",
            "cphct.fan.utils",
            "cphct.io",
            "cphct.log",
            "cphct.misc",
            "cphct.misc.base",
            "cphct.misc.timelog",
            "cphct.misc.timelog.base",
            "cphct.npy",
            "cphct.npy.io",
            "cphct.npycore",
            "cphct.npycore.io",
            "cphct.npycore.misc",
            "cphct.npycore.misc.base",
            "cphct.npycore.utils",
            "cphct.npycore.utils.base",
            "cphct.plugins",
            "cphct.utils",
            "cphct.utils.base",
            "cphctplugins",
            "cphctplugins.cl",
            "cphctplugins.cl.clip",
            "cphctplugins.cl.clip.base",
            "cphctplugins.cl.dummy",
            "cphctplugins.cl.dump",
            "cphctplugins.cl.flux2proj",
            "cphctplugins.cl.flux2proj.base",
            "cphctplugins.cl.hounsfield",
            "cphctplugins.cl.hounsfield.base",
            "cphctplugins.cl.maskvolumefov",
            "cphctplugins.cl.maskvolumefov.base",
            "cphctplugins.cl.savesinogramrows",
            "cphctplugins.cl.savesinograms",
            "cphctplugins.cl.square",
            "cphctplugins.cu",
            "cphctplugins.cu.clip",
            "cphctplugins.cu.clip.base",
            "cphctplugins.cu.dummy",
            "cphctplugins.cu.dump",
            "cphctplugins.cu.flux2proj",
            "cphctplugins.cu.flux2proj.base",
            "cphctplugins.cu.hounsfield",
            "cphctplugins.cu.hounsfield.base",
            "cphctplugins.cu.maskvolumefov",
            "cphctplugins.cu.maskvolumefov.base",
            "cphctplugins.cu.savesinogramrows",
            "cphctplugins.cu.savesinograms",
            "cphctplugins.cu.square",
            "cphctplugins.npy",
            "cphctplugins.npy.clip",
            "cphctplugins.npy.dummy",
            "cphctplugins.npy.dump",
            "cphctplugins.npy.flux2proj",
            "cphctplugins.npy.hounsfield",
            "cphctplugins.npy.interpolatedead",
            "cphctplugins.npy.loadraw",
            "cphctplugins.npy.loadscene",
            "cphctplugins.npy.loadzeros",
            "cphctplugins.npy.maskvolumefov",
            "cphctplugins.npy.normalize",
            "cphctplugins.npy.resamplegapless",
            "cphctplugins.npy.resetproj",
            "cphctplugins.npy.savesinogramrows",
            "cphctplugins.npy.savesinograms",
            "cphctplugins.npy.saveslices",
            "cphctplugins.npy.savestacked",
            "cphctplugins.npy.savevolume",
            "cphctplugins.npy.square",
            "cphctplugins.npy.verify"
        ],
        "version": "1.1.3"
    },
    "cphelper": {
        "cmdline": [],
        "modules": [
            "cphelper",
            "cphelper.admin",
            "cphelper.apps",
            "cphelper.models",
            "cphelper.tests",
            "cphelper.urls",
            "cphelper.views"
        ],
        "version": "1.4"
    },
    "cphhpctoolbox": {
        "cmdline": [],
        "modules": [
            "cphhpc",
            "cphhpc/device",
            "cphhpc/device/gpu",
            "cphhpc/device/gpu.opencl",
            "cphhpc/image",
            "cphhpc/image/filter",
            "cphhpc/image/filter.gauss2d",
            "cphhpc/image/filter.median2d",
            "cphhpc/image/filter.sobel2d",
            "cphhpc/signal",
            "cphhpc/signal/convolution",
            "cphhpc/signal/convolution.convolve2d",
            "cphhpc/signal/convolution.kernels"
        ],
        "version": "0.0.2"
    },
    "cpickle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cpiofile": {
        "cmdline": [],
        "modules": [
            "cpiofile"
        ],
        "version": "0.003"
    },
    "cpipe": {
        "cmdline": [],
        "modules": [
            "cpipe",
            "cpipe.cpipe"
        ],
        "version": "0.0.1"
    },
    "cpl": {
        "cmdline": [],
        "modules": [
            "cpl",
            "cpl.main",
            "cpl.metadata"
        ],
        "version": "0.1.1"
    },
    "cplay-ng": {
        "cmdline": [],
        "modules": [
            "cplay",
            "cplay.cplay",
            "cplay.remote_control"
        ],
        "version": "2.2.0"
    },
    "cpm": {
        "cmdline": [],
        "modules": [
            "crosspm",
            "crosspm.adapters",
            "crosspm.adapters.artifactory",
            "crosspm.adapters.common",
            "crosspm.cpm",
            "crosspm.helpers",
            "crosspm.helpers.archive",
            "crosspm.helpers.config",
            "crosspm.helpers.downloader",
            "crosspm.helpers.exceptions",
            "crosspm.helpers.output",
            "crosspm.helpers.package",
            "crosspm.helpers.parser",
            "crosspm.helpers.promoter",
            "crosspm.helpers.source",
            "crosspm.pm_arti_download",
            "crosspm.pm_pack",
            "crosspm.pm_promote_deps"
        ],
        "version": "0.8.1.dev71"
    },
    "cpmerge": {
        "cmdline": [],
        "modules": [
            "cpmerge",
            "cpmerge.cpmerge"
        ],
        "version": "1.0.5"
    },
    "cpmoptimize": {
        "cmdline": [],
        "modules": [
            "cpmoptimize",
            "cpmoptimize.byteplay_abarnert",
            "cpmoptimize.hook",
            "cpmoptimize.matcode",
            "cpmoptimize.matrices",
            "cpmoptimize.recompiler",
            "cpmoptimize.run"
        ],
        "version": "0.3.post2"
    },
    "cpolymer": {
        "cmdline": [],
        "modules": [
            "cpolymer",
            "cpolymer.angle",
            "cpolymer.bond",
            "cpolymer.cell",
            "cpolymer.constrain",
            "cpolymer.create",
            "cpolymer.lsimu",
            "cpolymer.pair",
            "cpolymer.polymer",
            "cpolymer.proba",
            "cpolymer.sortn",
            "cpolymer.test-create",
            "cpolymer.test-lsimu",
            "cpolymer.test-polymer",
            "cpolymer.test-proba",
            "cpolymer.translate_cdf_cdc",
            "cpolymer.utils"
        ],
        "version": "0.36"
    },
    "cpool": {
        "cmdline": [],
        "modules": [
            "cpool"
        ],
        "version": "0.2.2"
    },
    "cpopen": {
        "cmdline": [],
        "modules": [
            "cpopen"
        ],
        "version": "1.4"
    },
    "cporter": {
        "cmdline": [],
        "modules": [
            "cporter",
            "cporter.cporter"
        ],
        "version": "0.2.0"
    },
    "cpp-coveralls": {
        "cmdline": [],
        "modules": [
            "cpp_coveralls",
            "cpp_coveralls.coverage",
            "cpp_coveralls.coverage_test",
            "cpp_coveralls.gitrepo",
            "cpp_coveralls.report"
        ],
        "version": "0.3.12"
    },
    "cppa3": {
        "cmdline": [],
        "modules": [],
        "version": "0.23"
    },
    "cppbuildprofiler": {
        "cmdline": [],
        "modules": [
            "cppbuildprofiler",
            "cppbuildprofiler.analysis",
            "cppbuildprofiler.cli",
            "cppbuildprofiler.dependency",
            "cppbuildprofiler.parser",
            "cppbuildprofiler.profiler"
        ],
        "version": "1.0"
    },
    "cppcheck-junit": {
        "cmdline": [
            "cppcheck_junit.py"
        ],
        "modules": [
            "cppcheck_junit"
        ],
        "version": "1.3.0"
    },
    "cppcheckbear": {
        "cmdline": [],
        "modules": [
            "coalaCPPCheckBear",
            "coalaCPPCheckBear.CPPCheckBear"
        ],
        "version": "0.10.0.1482010155"
    },
    "cppclean": {
        "cmdline": [],
        "modules": [
            "cpp",
            "cpp.ast",
            "cpp.find_warnings",
            "cpp.headers",
            "cpp.keywords",
            "cpp.metrics",
            "cpp.nonvirtual_dtors",
            "cpp.static_data",
            "cpp.symbols",
            "cpp.tokenize",
            "cpp.utils"
        ],
        "version": "0.12"
    },
    "cppcleanbear": {
        "cmdline": [],
        "modules": [
            "coalaCPPCleanBear",
            "coalaCPPCleanBear.CPPCleanBear"
        ],
        "version": "0.10.0"
    },
    "cppcolormap": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "cppdep": {
        "cmdline": [],
        "modules": [
            "cppdep",
            "cppdep.cppdep",
            "cppdep.graph"
        ],
        "version": "0.2.2"
    },
    "cppheaderparser": {
        "cmdline": [],
        "modules": [
            "CppHeaderParser",
            "CppHeaderParser.CppHeaderParser"
        ],
        "version": "2.7.4"
    },
    "cppimport": {
        "cmdline": [],
        "modules": [
            "cppimport",
            "cppimport.build_module",
            "cppimport.checksum",
            "cppimport.config",
            "cppimport.cpprun",
            "cppimport.filepaths",
            "cppimport.find",
            "cppimport.importer",
            "cppimport.templating"
        ],
        "version": "16.6.24"
    },
    "cppinterpreter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cpplint": {
        "cmdline": [],
        "modules": [
            "cpplint"
        ],
        "version": "1.3.0"
    },
    "cpplint-junit": {
        "cmdline": [
            "cpplint_junit.py"
        ],
        "modules": [
            "cpplint_junit"
        ],
        "version": "1.1.0"
    },
    "cpplintbear": {
        "cmdline": [],
        "modules": [
            "coalaCPPLintBear",
            "coalaCPPLintBear.CPPLintBear"
        ],
        "version": "0.10.0"
    },
    "cppman": {
        "cmdline": [
            "cppman"
        ],
        "modules": [
            "cppman",
            "cppman.config",
            "cppman.crawler",
            "cppman.environ",
            "cppman.formatter",
            "cppman.formatter.cplusplus",
            "cppman.formatter.cppreference",
            "cppman.formatter.tableparser",
            "cppman.main",
            "cppman.util"
        ],
        "version": "0.4.8"
    },
    "cppmangle": {
        "cmdline": [],
        "modules": [
            "cppmangle",
            "cppmangle.ast",
            "cppmangle.cdecl",
            "cppmangle.mangle",
            "cppmangle.msvc"
        ],
        "version": "0.2"
    },
    "cpppo": {
        "cmdline": [],
        "modules": [
            "cpppo",
            "cpppo.automata",
            "cpppo.automata_test",
            "cpppo.dotdict",
            "cpppo.dotdict_test",
            "cpppo.history_test",
            "cpppo.misc",
            "cpppo.misc_test",
            "cpppo.modbus_test",
            "cpppo.readme",
            "cpppo.remote_test",
            "cpppo.serial_test",
            "cpppo.version",
            "cpppo/bin",
            "cpppo/bin.modbus_poll",
            "cpppo/bin.modbus_sim",
            "cpppo/history",
            "cpppo/history.files",
            "cpppo/history.times",
            "cpppo/remote",
            "cpppo/remote.io",
            "cpppo/remote.plc",
            "cpppo/remote.plc_modbus",
            "cpppo/remote.pymodbus_fixes",
            "cpppo/server",
            "cpppo/server.echo",
            "cpppo/server.echo_test",
            "cpppo/server.enip_test",
            "cpppo/server.logix_test",
            "cpppo/server.network",
            "cpppo/server.tnet",
            "cpppo/server.tnet_test",
            "cpppo/server.tnetstrings",
            "cpppo/server.tnetstrings_test",
            "cpppo/server/enip",
            "cpppo/server/enip.ab",
            "cpppo/server/enip.client",
            "cpppo/server/enip.client_test",
            "cpppo/server/enip.device",
            "cpppo/server/enip.get_attribute",
            "cpppo/server/enip.getattr",
            "cpppo/server/enip.historize",
            "cpppo/server/enip.io_example",
            "cpppo/server/enip.list_identity_simple",
            "cpppo/server/enip.list_services",
            "cpppo/server/enip.logix",
            "cpppo/server/enip.main",
            "cpppo/server/enip.parser",
            "cpppo/server/enip.parser_test",
            "cpppo/server/enip.poll",
            "cpppo/server/enip.poll_example",
            "cpppo/server/enip.poll_example_many",
            "cpppo/server/enip.poll_example_many_with_write",
            "cpppo/server/enip.poll_example_simple",
            "cpppo/server/enip.poll_test",
            "cpppo/server/enip.powerflex_motor_velocity",
            "cpppo/server/enip.thruput",
            "cpppo/server/enip.weather",
            "cpppo/tools",
            "cpppo/tools.await",
            "cpppo/tools.await_test"
        ],
        "version": "3.9.5"
    },
    "cppstyle": {
        "cmdline": [
            "cppstyle"
        ],
        "modules": [
            "cppstyle",
            "cppstyle.check",
            "cppstyle.check_comments",
            "cppstyle.check_indent",
            "cppstyle.check_naming",
            "cppstyle.check_order",
            "cppstyle.model",
            "cppstyle.model.access",
            "cppstyle.model.access_specifier",
            "cppstyle.model.class_node",
            "cppstyle.model.comment",
            "cppstyle.model.field",
            "cppstyle.model.function",
            "cppstyle.model.issue",
            "cppstyle.model.method",
            "cppstyle.model.node",
            "cppstyle.model.parameter",
            "cppstyle.model.parser",
            "cppstyle.model.position",
            "cppstyle.model.scope",
            "cppstyle.model.struct",
            "cppstyle.model.variable",
            "cppstyle.utils"
        ],
        "version": "0.2.5"
    },
    "cppy": {
        "cmdline": [],
        "modules": [
            "cppy"
        ],
        "version": "1.0.2"
    },
    "cprextract.py": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cprextracttest": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cprint": {
        "cmdline": [],
        "modules": [
            "cprint",
            "cprint.cprint"
        ],
        "version": "1.1"
    },
    "cprofile-graph": {
        "cmdline": [],
        "modules": [
            "cprofile_graph",
            "cprofile_graph.cli"
        ],
        "version": "2.0.2"
    },
    "cprofilev": {
        "cmdline": [],
        "modules": [
            "cprofilev"
        ],
        "version": "1.0.7"
    },
    "cproj": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "cprometheus": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "cproto": {
        "cmdline": [],
        "modules": [
            "cproto",
            "cproto.core",
            "cproto.core.cproto",
            "cproto.domains",
            "cproto.domains.factory"
        ],
        "version": "0.1.8"
    },
    "cprotobuf": {
        "cmdline": [
            "protoc-gen-cprotobuf"
        ],
        "modules": [
            "cprotobuf",
            "cprotobuf.plugin_pb"
        ],
        "version": "0.1.5"
    },
    "cpruntime": {
        "cmdline": [],
        "modules": [
            "cpruntime",
            "cpruntime.cpruntime"
        ],
        "version": "0.0.7"
    },
    "cps": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cpsamd-kernel": {
        "cmdline": [],
        "modules": [
            "cpsamd_kernel",
            "cpsamd_kernel.cpsamd",
            "cpsamd_kernel.install",
            "cpsamd_kernel.kernel"
        ],
        "version": "0.1"
    },
    "cpsk": {
        "cmdline": [],
        "modules": [
            "cpsk"
        ],
        "version": "0.1.5"
    },
    "cpsky": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "cpsms": {
        "cmdline": [],
        "modules": [
            "cpsms",
            "cpsms.cpsms"
        ],
        "version": "0.1"
    },
    "cpthook": {
        "cmdline": [
            "cpthook"
        ],
        "modules": [
            "cpthook"
        ],
        "version": "1.0.2"
    },
    "cptnester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "cpu-affinity": {
        "cmdline": [],
        "modules": [
            "affinity"
        ],
        "version": "0.1.0"
    },
    "cpu-cores": {
        "cmdline": [
            "get_cpu_physical_cores.py"
        ],
        "modules": [
            "cpu_cores",
            "cpu_cores.common",
            "cpu_cores.darwin",
            "cpu_cores.linux"
        ],
        "version": "0.1.3"
    },
    "cpuc-networktest-parser": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cpucoolerchart": {
        "cmdline": [],
        "modules": [
            "cpucoolerchart",
            "cpucoolerchart._compat",
            "cpucoolerchart.app",
            "cpucoolerchart.cache",
            "cpucoolerchart.command",
            "cpucoolerchart.crawler",
            "cpucoolerchart.crawler_data",
            "cpucoolerchart.extensions",
            "cpucoolerchart.models",
            "cpucoolerchart.views",
            "cpucoolerchart.wsgi"
        ],
        "version": "0.1.dev2"
    },
    "cpuset-py3": {
        "cmdline": [],
        "modules": [
            "cpuset",
            "cpuset.commands",
            "cpuset.commands.common",
            "cpuset.commands.mem",
            "cpuset.commands.proc",
            "cpuset.commands.set",
            "cpuset.commands.shield",
            "cpuset.config",
            "cpuset.cset",
            "cpuset.main",
            "cpuset.util",
            "cpuset.version"
        ],
        "version": "1.0"
    },
    "cpuspeedy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cputil": {
        "cmdline": [],
        "modules": [
            "cputil",
            "cputil.cpio",
            "cputil.db",
            "cputil.log",
            "cputil.pipeline",
            "cputil.pipeline.feature_coder",
            "cputil.shell",
            "cputil.stopwatch"
        ],
        "version": "3.2.2"
    },
    "cpy2py": {
        "cmdline": [],
        "modules": [
            "cpy2py",
            "cpy2py.ipyc",
            "cpy2py.ipyc.ipyc_exceptions",
            "cpy2py.ipyc.ipyc_fifo",
            "cpy2py.ipyc.ipyc_socket",
            "cpy2py.kernel",
            "cpy2py.kernel.kernel_async",
            "cpy2py.kernel.kernel_core",
            "cpy2py.kernel.kernel_exceptions",
            "cpy2py.kernel.kernel_multi",
            "cpy2py.kernel.kernel_requesthandler",
            "cpy2py.kernel.kernel_single",
            "cpy2py.kernel.kernel_state",
            "cpy2py.meta",
            "cpy2py.proxy",
            "cpy2py.proxy.proxy_func",
            "cpy2py.proxy.proxy_instance",
            "cpy2py.proxy.proxy_meta",
            "cpy2py.proxy.proxy_object",
            "cpy2py.proxy.proxy_proxy",
            "cpy2py.proxy.proxy_tracker",
            "cpy2py.proxy.proxy_twin",
            "cpy2py.twinterpreter",
            "cpy2py.twinterpreter.bootstrap",
            "cpy2py.twinterpreter.group_state",
            "cpy2py.twinterpreter.kernel",
            "cpy2py.twinterpreter.kernel_exceptions",
            "cpy2py.twinterpreter.kernel_state",
            "cpy2py.twinterpreter.twin_def",
            "cpy2py.twinterpreter.twin_exceptions",
            "cpy2py.twinterpreter.twin_main",
            "cpy2py.twinterpreter.twin_master",
            "cpy2py.utility",
            "cpy2py.utility.compat",
            "cpy2py.utility.enum",
            "cpy2py.utility.exceptions",
            "cpy2py.utility.proc_tools",
            "cpy2py.utility.proxy",
            "cpy2py.utility.thread_tools",
            "cpy2py.utility.utils"
        ],
        "version": "0.17.1"
    },
    "cpycomtrade": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cpyimagingmspec": {
        "cmdline": [],
        "modules": [
            "cpyImagingMSpec",
            "cpyImagingMSpec.io",
            "cpyImagingMSpec.metrics",
            "cpyImagingMSpec.utils"
        ],
        "version": "0.2.3"
    },
    "cpymad": {
        "cmdline": [],
        "modules": [
            "cpymad",
            "cpymad._rpc",
            "cpymad.madx",
            "cpymad.types",
            "cpymad.util"
        ],
        "version": "0.17.0"
    },
    "cpymspec": {
        "cmdline": [],
        "modules": [
            "cpyMSpec",
            "cpyMSpec.legacy_interface",
            "cpyMSpec.spectrum",
            "cpyMSpec.utils"
        ],
        "version": "0.3.4"
    },
    "cpyutils": {
        "cmdline": [],
        "modules": [
            "cpyutils",
            "cpyutils.config",
            "cpyutils.db",
            "cpyutils.evaluate",
            "cpyutils.eventloop",
            "cpyutils.eventloop0",
            "cpyutils.fileutils",
            "cpyutils.iputils",
            "cpyutils.lextab",
            "cpyutils.log",
            "cpyutils.oneconnect",
            "cpyutils.parameters",
            "cpyutils.parsetab",
            "cpyutils.restutils",
            "cpyutils.rpcweb",
            "cpyutils.runcommand",
            "cpyutils.timeoutxmlrpccli",
            "cpyutils.version",
            "cpyutils.xmlobject",
            "cpyutils.xmlrpcutils"
        ],
        "version": "0.27"
    },
    "cpyx": {
        "cmdline": [],
        "modules": [
            "Cpyx",
            "Cpyx.Cpyx",
            "Cpyx._version"
        ],
        "version": "0.2.2.0"
    },
    "cq": {
        "cmdline": [],
        "modules": [
            "cq",
            "cq.aggregates",
            "cq.app",
            "cq.compat",
            "cq.events",
            "cq.exceptions",
            "cq.genuuid",
            "cq.handlers",
            "cq.settings",
            "cq.storages",
            "cq/contrib",
            "cq/contrib/django",
            "cq/contrib/django.apps",
            "cq/contrib/django.models",
            "cq/contrib/django.shortcuts",
            "cq/contrib/django.storages",
            "cq/contrib/django/migrations",
            "cq/contrib/django/migrations.0001_initial",
            "cq/contrib/django/migrations.0002_ts_field_index",
            "cq/contrib/django/migrations.0003_event_aggregate_type",
            "cq/contrib/django/migrations.0004_event_revision",
            "cq/contrib/sqlalchemy",
            "cq/contrib/sqlalchemy.storage",
            "cq/tests",
            "cq/tests.app",
            "cq/tests.test_aggregates",
            "cq/tests.test_apps",
            "cq/tests.test_entities",
            "cq/tests.test_replay",
            "cq/tests.test_repository",
            "cq/tests.test_storages",
            "cq/tests.test_upcasting"
        ],
        "version": "0.9"
    },
    "cq-nester": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "cqdb": {
        "cmdline": [],
        "modules": [
            "cqdb"
        ],
        "version": "0.0.4"
    },
    "cql": {
        "cmdline": [],
        "modules": [
            "cql",
            "cql.apivalues",
            "cql.cassandra",
            "cql.cassandra.Cassandra",
            "cql.cassandra.constants",
            "cql.cassandra.ttypes",
            "cql.connection",
            "cql.connection_pool",
            "cql.cqltypes",
            "cql.cursor",
            "cql.decoders",
            "cql.errors",
            "cql.marshal",
            "cql.native",
            "cql.query",
            "cql.thrifteries"
        ],
        "version": "1.4.0"
    },
    "cql-builder": {
        "cmdline": [],
        "modules": [
            "cql_builder",
            "cql_builder.assignment",
            "cql_builder.base",
            "cql_builder.builder",
            "cql_builder.condition",
            "cql_builder.selection",
            "cql_builder.statement"
        ],
        "version": "0.2.1"
    },
    "cql-dump": {
        "cmdline": [
            "cql_dump.py"
        ],
        "modules": [],
        "version": "0.2b"
    },
    "cql-kernel": {
        "cmdline": [],
        "modules": [
            "cql_kernel",
            "cql_kernel.cql_html_format",
            "cql_kernel.cqlsh",
            "cql_kernel.images",
            "cql_kernel.install",
            "cql_kernel.kernel",
            "cqlshlib_cql_kernel",
            "cqlshlib_cql_kernel.copyutil",
            "cqlshlib_cql_kernel.cql3handling",
            "cqlshlib_cql_kernel.cqlhandling",
            "cqlshlib_cql_kernel.displaying",
            "cqlshlib_cql_kernel.formatting",
            "cqlshlib_cql_kernel.helptopics",
            "cqlshlib_cql_kernel.pylexotron",
            "cqlshlib_cql_kernel.saferscanner",
            "cqlshlib_cql_kernel.sslhandling",
            "cqlshlib_cql_kernel.test",
            "cqlshlib_cql_kernel.test.ansi_colors",
            "cqlshlib_cql_kernel.test.basecase",
            "cqlshlib_cql_kernel.test.cassconnect",
            "cqlshlib_cql_kernel.test.run_cqlsh",
            "cqlshlib_cql_kernel.test.test_cql_parsing",
            "cqlshlib_cql_kernel.test.test_cqlsh_commands",
            "cqlshlib_cql_kernel.test.test_cqlsh_completion",
            "cqlshlib_cql_kernel.test.test_cqlsh_invocation",
            "cqlshlib_cql_kernel.test.test_cqlsh_output",
            "cqlshlib_cql_kernel.test.test_cqlsh_parsing",
            "cqlshlib_cql_kernel.test.winpty",
            "cqlshlib_cql_kernel.tracing",
            "cqlshlib_cql_kernel.util",
            "cqlshlib_cql_kernel.wcwidth"
        ],
        "version": "3.0.1"
    },
    "cql-shifter": {
        "cmdline": [],
        "modules": [
            "shifter",
            "shifter.cli",
            "shifter.config",
            "shifter.db",
            "shifter.map",
            "shifter.migrate"
        ],
        "version": "0.2"
    },
    "cqlengine": {
        "cmdline": [],
        "modules": [
            "cqlengine",
            "cqlengine.columns",
            "cqlengine.connection",
            "cqlengine.exceptions",
            "cqlengine.functions",
            "cqlengine.management",
            "cqlengine.models",
            "cqlengine.named",
            "cqlengine.operators",
            "cqlengine.query",
            "cqlengine.statements",
            "cqlengine.tests",
            "cqlengine.tests.base",
            "cqlengine.tests.columns",
            "cqlengine.tests.columns.test_container_columns",
            "cqlengine.tests.columns.test_counter_column",
            "cqlengine.tests.columns.test_static_column",
            "cqlengine.tests.columns.test_validation",
            "cqlengine.tests.columns.test_value_io",
            "cqlengine.tests.connections",
            "cqlengine.tests.management",
            "cqlengine.tests.management.test_compaction_settings",
            "cqlengine.tests.management.test_management",
            "cqlengine.tests.model",
            "cqlengine.tests.model.test_class_construction",
            "cqlengine.tests.model.test_equality_operations",
            "cqlengine.tests.model.test_model",
            "cqlengine.tests.model.test_model_io",
            "cqlengine.tests.model.test_polymorphism",
            "cqlengine.tests.model.test_updates",
            "cqlengine.tests.model.test_validation",
            "cqlengine.tests.model.test_value_lists",
            "cqlengine.tests.operators",
            "cqlengine.tests.operators.test_assignment_operators",
            "cqlengine.tests.operators.test_base_operator",
            "cqlengine.tests.operators.test_where_operators",
            "cqlengine.tests.query",
            "cqlengine.tests.query.test_batch_query",
            "cqlengine.tests.query.test_datetime_queries",
            "cqlengine.tests.query.test_named",
            "cqlengine.tests.query.test_queryoperators",
            "cqlengine.tests.query.test_queryset",
            "cqlengine.tests.query.test_updates",
            "cqlengine.tests.statements",
            "cqlengine.tests.statements.test_assignment_clauses",
            "cqlengine.tests.statements.test_assignment_statement",
            "cqlengine.tests.statements.test_base_clause",
            "cqlengine.tests.statements.test_base_statement",
            "cqlengine.tests.statements.test_delete_statement",
            "cqlengine.tests.statements.test_insert_statement",
            "cqlengine.tests.statements.test_quoter",
            "cqlengine.tests.statements.test_select_statement",
            "cqlengine.tests.statements.test_update_statement",
            "cqlengine.tests.statements.test_where_clause",
            "cqlengine.tests.test_batch_query",
            "cqlengine.tests.test_consistency",
            "cqlengine.tests.test_ifnotexists",
            "cqlengine.tests.test_load",
            "cqlengine.tests.test_timestamp",
            "cqlengine.tests.test_transaction",
            "cqlengine.tests.test_ttl"
        ],
        "version": "0.21.0"
    },
    "cqlsh": {
        "cmdline": [
            "cqlsh"
        ],
        "modules": [
            "cqlshlib",
            "cqlshlib.copyutil",
            "cqlshlib.cql3handling",
            "cqlshlib.cqlhandling",
            "cqlshlib.displaying",
            "cqlshlib.formatting",
            "cqlshlib.helptopics",
            "cqlshlib.pylexotron",
            "cqlshlib.saferscanner",
            "cqlshlib.sslhandling",
            "cqlshlib.tracing",
            "cqlshlib.util",
            "cqlshlib.wcwidth"
        ],
        "version": "5.0.4"
    },
    "cqlsl": {
        "cmdline": [],
        "modules": [
            "cqlsl",
            "cqlsl.sessions",
            "cqlsl.utils"
        ],
        "version": "0.2.0"
    },
    "cqlug-demo": {
        "cmdline": [
            "create-doku-page",
            "hello",
            "hello.bat"
        ],
        "modules": [
            "cqlug_demo",
            "cqlug_demo.create",
            "cqlug_demo.hello"
        ],
        "version": "0.1.1"
    },
    "cqrs": {
        "cmdline": [],
        "modules": [
            "cqrs"
        ],
        "version": "1.1.0"
    },
    "cqsfsaver": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.6"
    },
    "cqstat": {
        "cmdline": [],
        "modules": [
            "cqstat",
            "cqstat.cluster",
            "cqstat.job",
            "cqstat.lib",
            "cqstat.output",
            "cqstat.qcommand",
            "cqstat.qstat",
            "cqstat.queue",
            "cqstat.setup",
            "cqstat.template",
            "cqstat.test"
        ],
        "version": "1.0.0"
    },
    "cquery": {
        "cmdline": [],
        "modules": [
            "cquery",
            "cquery.cli",
            "cquery.lib",
            "cquery.tests",
            "cquery.tests.test_reading",
            "cquery.tests.test_writing",
            "cquery.vendor",
            "cquery.vendor.click",
            "cquery.vendor.click._bashcomplete",
            "cquery.vendor.click._compat",
            "cquery.vendor.click._termui_impl",
            "cquery.vendor.click._textwrap",
            "cquery.vendor.click.core",
            "cquery.vendor.click.decorators",
            "cquery.vendor.click.exceptions",
            "cquery.vendor.click.formatting",
            "cquery.vendor.click.parser",
            "cquery.vendor.click.termui",
            "cquery.vendor.click.testing",
            "cquery.vendor.click.types",
            "cquery.vendor.click.utils",
            "cquery.vendor.nose",
            "cquery.vendor.nose.case",
            "cquery.vendor.nose.commands",
            "cquery.vendor.nose.config",
            "cquery.vendor.nose.core",
            "cquery.vendor.nose.exc",
            "cquery.vendor.nose.ext",
            "cquery.vendor.nose.ext.dtcompat",
            "cquery.vendor.nose.failure",
            "cquery.vendor.nose.importer",
            "cquery.vendor.nose.inspector",
            "cquery.vendor.nose.loader",
            "cquery.vendor.nose.plugins",
            "cquery.vendor.nose.plugins.allmodules",
            "cquery.vendor.nose.plugins.attrib",
            "cquery.vendor.nose.plugins.base",
            "cquery.vendor.nose.plugins.builtin",
            "cquery.vendor.nose.plugins.capture",
            "cquery.vendor.nose.plugins.collect",
            "cquery.vendor.nose.plugins.cover",
            "cquery.vendor.nose.plugins.debug",
            "cquery.vendor.nose.plugins.deprecated",
            "cquery.vendor.nose.plugins.doctests",
            "cquery.vendor.nose.plugins.errorclass",
            "cquery.vendor.nose.plugins.failuredetail",
            "cquery.vendor.nose.plugins.isolate",
            "cquery.vendor.nose.plugins.logcapture",
            "cquery.vendor.nose.plugins.manager",
            "cquery.vendor.nose.plugins.multiprocess",
            "cquery.vendor.nose.plugins.plugintest",
            "cquery.vendor.nose.plugins.prof",
            "cquery.vendor.nose.plugins.skip",
            "cquery.vendor.nose.plugins.testid",
            "cquery.vendor.nose.plugins.xunit",
            "cquery.vendor.nose.proxy",
            "cquery.vendor.nose.pyversion",
            "cquery.vendor.nose.result",
            "cquery.vendor.nose.selector",
            "cquery.vendor.nose.sphinx",
            "cquery.vendor.nose.sphinx.pluginopts",
            "cquery.vendor.nose.suite",
            "cquery.vendor.nose.tools",
            "cquery.vendor.nose.tools.nontrivial",
            "cquery.vendor.nose.tools.trivial",
            "cquery.vendor.nose.twistedtools",
            "cquery.vendor.nose.util",
            "cquery.version"
        ],
        "version": "0.2.1"
    },
    "cqy-nester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cr": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cr-nester": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "cr8": {
        "cmdline": [],
        "modules": [
            "cr8",
            "cr8.aio",
            "cr8.bench_spec",
            "cr8.cli",
            "cr8.clients",
            "cr8.engine",
            "cr8.exceptions",
            "cr8.fake_providers",
            "cr8.insert_blob",
            "cr8.insert_fake_data",
            "cr8.insert_json",
            "cr8.log",
            "cr8.main",
            "cr8.metrics",
            "cr8.misc",
            "cr8.run_crate",
            "cr8.run_spec",
            "cr8.run_track",
            "cr8.timeit"
        ],
        "version": "0.9.3"
    },
    "crab": {
        "cmdline": [
            "crab",
            "crabd",
            "crabd-check",
            "crabsh"
        ],
        "modules": [
            "crab",
            "crab.client",
            "crab.notify",
            "crab.notify.email",
            "crab.report",
            "crab.report.html",
            "crab.report.text",
            "crab.server",
            "crab.server.config",
            "crab.server.io",
            "crab.service",
            "crab.service.clean",
            "crab.service.monitor",
            "crab.service.notify",
            "crab.store",
            "crab.store.db",
            "crab.store.file",
            "crab.store.mysql",
            "crab.store.sqlite",
            "crab.util",
            "crab.util.compat",
            "crab.util.datetime",
            "crab.util.filter",
            "crab.util.guesstimezone",
            "crab.util.pid",
            "crab.util.schedule",
            "crab.util.statuspattern",
            "crab.util.string",
            "crab.util.web",
            "crab.version",
            "crab.web",
            "crab.web.rss",
            "crab.web.web"
        ],
        "version": "0.5.0"
    },
    "crabigator": {
        "cmdline": [],
        "modules": [
            "crabigator",
            "crabigator.tests",
            "crabigator.tests.test_wanikani",
            "crabigator.wanikani"
        ],
        "version": "0.1.5"
    },
    "crablfs": {
        "cmdline": [
            "copy-profiles",
            "crablfs",
            "userpack"
        ],
        "modules": [
            "crablfs",
            "crablfs.cmdline",
            "crablfs.filetools",
            "crablfs.filetrans",
            "crablfs.plainconf",
            "crablfs.shadow",
            "userpack"
        ],
        "version": "0.1.1beta"
    },
    "crabmd": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.19"
    },
    "crabpy": {
        "cmdline": [],
        "modules": [
            "crabpy",
            "crabpy.client",
            "crabpy.gateway",
            "crabpy.gateway.capakey",
            "crabpy.gateway.crab",
            "crabpy.gateway.exception",
            "crabpy.wsa",
            "crabpy.wsse",
            "tests",
            "tests.conftest",
            "tests.gateway",
            "tests.gateway.test_capakey",
            "tests.gateway.test_capakey_cached",
            "tests.gateway.test_crab",
            "tests.gateway.test_crab_cached",
            "tests.gateway.test_exception",
            "tests.test_client",
            "tests.test_wsa",
            "tests.test_wsse"
        ],
        "version": "0.8.1"
    },
    "crabpy-pyramid": {
        "cmdline": [],
        "modules": [
            "crabpy_pyramid",
            "crabpy_pyramid.renderers",
            "crabpy_pyramid.renderers.capakey",
            "crabpy_pyramid.renderers.crab",
            "crabpy_pyramid.routes",
            "crabpy_pyramid.routes.capakey",
            "crabpy_pyramid.routes.crab",
            "crabpy_pyramid.utils",
            "crabpy_pyramid.views",
            "crabpy_pyramid.views.capakey",
            "crabpy_pyramid.views.crab"
        ],
        "version": "0.6.1"
    },
    "crabsnack": {
        "cmdline": [],
        "modules": [
            "crabsnack",
            "crabsnack.__version__",
            "crabsnack.text"
        ],
        "version": "0.1.2"
    },
    "cracklib": {
        "cmdline": [],
        "modules": [
            "cracklib",
            "test_cracklib"
        ],
        "version": "2.9.3"
    },
    "crackmapexec": {
        "cmdline": [],
        "modules": [
            "cme",
            "cme.cmedb",
            "cme.cmeserver",
            "cme.connection",
            "cme.context",
            "cme.crackmapexec",
            "cme.credentials",
            "cme.credentials.commonstructs",
            "cme.credentials.cryptocommon",
            "cme.credentials.lsa",
            "cme.credentials.ntds",
            "cme.credentials.offlineregistry",
            "cme.credentials.sam",
            "cme.credentials.secretsdump",
            "cme.credentials.wdigest",
            "cme.database",
            "cme.enum",
            "cme.enum.lookupsid",
            "cme.enum.passpol",
            "cme.enum.rpcquery",
            "cme.enum.shares",
            "cme.enum.uac",
            "cme.enum.users",
            "cme.enum.wmiquery",
            "cme.execmethods",
            "cme.execmethods.atexec",
            "cme.execmethods.mssqlexec",
            "cme.execmethods.smbexec",
            "cme.execmethods.wmiexec",
            "cme.first_run",
            "cme.helpers",
            "cme.logger",
            "cme.moduleloader",
            "cme.msfrpc",
            "cme.mssql",
            "cme.remotefile",
            "cme.remoteoperations",
            "cme.spider",
            "cme.spider.smbspider",
            "cme.targetparser"
        ],
        "version": "3.1.5"
    },
    "crackqcli": {
        "cmdline": [
            "crackqcli.py"
        ],
        "modules": [
            "crackqcli",
            "crackqcli.crackqcli"
        ],
        "version": "0.4.1"
    },
    "cradox": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.2"
    },
    "crafapyr": {
        "cmdline": [],
        "modules": [
            "crafapyr",
            "crafapyr.player"
        ],
        "version": "1.1.0"
    },
    "craft": {
        "cmdline": [
            "craft"
        ],
        "modules": [
            "craft",
            "craft.crafty"
        ],
        "version": "0.2.6"
    },
    "craft-ai": {
        "cmdline": [],
        "modules": [
            "craftai",
            "craftai.client",
            "craftai.errors",
            "craftai.helpers",
            "craftai.interpreter",
            "craftai.jwt_decode",
            "craftai.operators",
            "craftai.time"
        ],
        "version": "1.2.1"
    },
    "craftar": {
        "cmdline": [
            "craftar_search",
            "craftar_upload"
        ],
        "modules": [
            "craftar",
            "craftar._common",
            "craftar._management",
            "craftar._recognition",
            "craftar.settings"
        ],
        "version": "1.3.8"
    },
    "craftbuildtools": {
        "cmdline": [],
        "modules": [
            "craftbuildtools",
            "craftbuildtools.app",
            "craftbuildtools.bootstrap",
            "craftbuildtools.data",
            "craftbuildtools.data.project",
            "craftbuildtools.data.todo",
            "craftbuildtools.operations",
            "craftbuildtools.operations.addproject_operation",
            "craftbuildtools.operations.build_operation",
            "craftbuildtools.operations.clean_operation",
            "craftbuildtools.operations.copy_operation",
            "craftbuildtools.operations.createproject_operation",
            "craftbuildtools.operations.downloadspigotbuildtools_operation",
            "craftbuildtools.operations.editproject_operation",
            "craftbuildtools.operations.listprojects_operation",
            "craftbuildtools.operations.removeproject_operation",
            "craftbuildtools.operations.todo_operation",
            "craftbuildtools.operations.upload_operation",
            "craftbuildtools.template",
            "craftbuildtools.utils"
        ],
        "version": "0.1.6"
    },
    "craftr-build": {
        "cmdline": [],
        "modules": [
            "craftr",
            "craftr.core",
            "craftr.core.build",
            "craftr.core.config",
            "craftr.core.logging",
            "craftr.core.manifest",
            "craftr.core.renames",
            "craftr.core.session",
            "craftr.defaults",
            "craftr.foreignbuild",
            "craftr.loaders",
            "craftr.mods",
            "craftr.platform",
            "craftr.platform.cygwin",
            "craftr.platform.darwin",
            "craftr.platform.linux",
            "craftr.platform.msys",
            "craftr.platform.win32",
            "craftr.targetbuilder",
            "craftr.utils",
            "craftr.utils.argspec",
            "craftr.utils.cson",
            "craftr.utils.httputils",
            "craftr.utils.path",
            "craftr.utils.pyutils",
            "craftr.utils.shell",
            "craftr.utils.singleton",
            "craftr.utils.tty"
        ],
        "version": "2.0.0"
    },
    "craigsgenerator": {
        "cmdline": [],
        "modules": [
            "craigsgenerator",
            "craigsgenerator.download",
            "craigsgenerator.generators",
            "craigsgenerator.parse"
        ],
        "version": "0.1.1"
    },
    "craigslist": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "craigslist-rental-market": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "craigslist-scraper": {
        "cmdline": [],
        "modules": [
            "craigslist_scraper",
            "craigslist_scraper.scraper",
            "tests",
            "tests.test_scraper"
        ],
        "version": "1.1.0"
    },
    "cram": {
        "cmdline": [],
        "modules": [
            "cram",
            "cram._cli",
            "cram._diff",
            "cram._encoding",
            "cram._main",
            "cram._process",
            "cram._run",
            "cram._test",
            "cram._xunit"
        ],
        "version": "0.7"
    },
    "crammit": {
        "cmdline": [],
        "modules": [
            "crammit",
            "crammit.tests",
            "crammit.tests.test_assetmanager"
        ],
        "version": "0.5"
    },
    "cramunit": {
        "cmdline": [
            "run_cram_unit.py"
        ],
        "modules": [
            "cram_unit",
            "cram_unit.crammer",
            "cram_unit.io"
        ],
        "version": "0.8"
    },
    "cran": {
        "cmdline": [],
        "modules": [
            "cran",
            "cran.settings"
        ],
        "version": "0.1.14"
    },
    "cranberry": {
        "cmdline": [],
        "modules": [
            "cranberry",
            "cranberry.cranberry",
            "cranberry.crawler",
            "cranberry.linter",
            "cranberry.sensor",
            "cranberry.songhandler",
            "cranberry.uploader",
            "cranberry.urlcreator",
            "cranberry.urlhandler"
        ],
        "version": "0.1.0"
    },
    "crane": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crane-ec2": {
        "cmdline": [],
        "modules": [
            "crane_ec2",
            "crane_ec2.models"
        ],
        "version": "0.2.1"
    },
    "crange": {
        "cmdline": [
            "crange",
            "crtags"
        ],
        "modules": [
            "crange",
            "crange.crange",
            "crange.crtags",
            "crange.options",
            "crange.sourcefile",
            "crange.tag",
            "crange.tagdb"
        ],
        "version": "0.1.3"
    },
    "cranium": {
        "cmdline": [],
        "modules": [
            "cranium"
        ],
        "version": "0.0.5"
    },
    "crank": {
        "cmdline": [],
        "modules": [
            "crank",
            "crank.dispatcher",
            "crank.dispatchstate",
            "crank.objectdispatcher",
            "crank.restdispatcher",
            "crank.util"
        ],
        "version": "0.8.1"
    },
    "crapi": {
        "cmdline": [],
        "modules": [
            "crapi",
            "crapi.ipc",
            "crapi.ipc.ClientPipe",
            "crapi.ipc.Pipe",
            "crapi.ipc.PipeError",
            "crapi.ipc.PipeTimeoutError",
            "crapi.ipc.ServerPipe",
            "crapi.misc",
            "crapi.misc.Utils",
            "crapi.service",
            "crapi.service.Daemon",
            "crapi.service.DaemonContractError",
            "crapi.service.DaemonError",
            "crapi.service.DaemonNamingError",
            "crapi.service.DaemonPrivilegeException",
            "crapi.service.DaemonTimeoutError",
            "crapi.service.WindowsDaemonFactory",
            "crapi.service.management",
            "crapi.service.management.Administrator",
            "crapi.service.management.Supervisor",
            "crapi.service.rt"
        ],
        "version": "0.0.2b5"
    },
    "crappy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crappylml": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crappyspider": {
        "cmdline": [],
        "modules": [
            "crappyspider",
            "crappyspider.items",
            "crappyspider.middlewares",
            "crappyspider.pipelines",
            "crappyspider.settings"
        ],
        "version": "0.3"
    },
    "craption": {
        "cmdline": [],
        "modules": [
            "craption",
            "craption.cli",
            "craption.settings",
            "craption.upload",
            "craption.utils"
        ],
        "version": "1.3"
    },
    "crash": {
        "cmdline": [],
        "modules": [
            "crash",
            "crash.command",
            "crash.commands",
            "crash.config",
            "crash.outputs",
            "crash.printer",
            "crash.repl",
            "crash.sysinfo",
            "crash.tabulate",
            "crash.test_command",
            "crash.test_commands",
            "crash.test_config",
            "crash.test_repl",
            "crash.test_sysinfo",
            "crash.tests"
        ],
        "version": "0.20.0"
    },
    "crash-hound": {
        "cmdline": [],
        "modules": [
            "crash_hound",
            "test",
            "test.test"
        ],
        "version": "2.2"
    },
    "crashlog": {
        "cmdline": [],
        "modules": [
            "crashlog"
        ],
        "version": "0.0.1"
    },
    "crashreporter": {
        "cmdline": [],
        "modules": [
            "crashreporter",
            "crashreporter.api",
            "crashreporter.crashreporter",
            "crashreporter.injector",
            "crashreporter.process",
            "crashreporter.tools"
        ],
        "version": "1.13"
    },
    "crassh": {
        "cmdline": [
            "crassh"
        ],
        "modules": [
            "crassh"
        ],
        "version": "2.8"
    },
    "crate": {
        "cmdline": [],
        "modules": [
            "client",
            "client.blob",
            "client.compat",
            "client.connection",
            "client.cursor",
            "client.exceptions",
            "client.http",
            "client.sqlalchemy",
            "client.sqlalchemy.compiler",
            "client.sqlalchemy.dialect",
            "client.sqlalchemy.predicates",
            "client.sqlalchemy.sa_version",
            "client.sqlalchemy.tests",
            "client.sqlalchemy.tests.array_test",
            "client.sqlalchemy.tests.bulk_test",
            "client.sqlalchemy.tests.compiler_test",
            "client.sqlalchemy.tests.connection_test",
            "client.sqlalchemy.tests.create_table_test",
            "client.sqlalchemy.tests.datetime_test",
            "client.sqlalchemy.tests.dict_test",
            "client.sqlalchemy.tests.insert_from_select_test",
            "client.sqlalchemy.tests.match_test",
            "client.sqlalchemy.tests.update_test",
            "client.sqlalchemy.types",
            "client.test_connection",
            "client.test_cursor",
            "client.test_http",
            "client.tests",
            "testing",
            "testing.layer",
            "testing.test_layer",
            "testing.tests"
        ],
        "version": "0.19.3"
    },
    "crate-anon": {
        "cmdline": [],
        "modules": [
            "crate_anon",
            "crate_anon.anonymise",
            "crate_anon.anonymise.altermethod",
            "crate_anon.anonymise.anonregex",
            "crate_anon.anonymise.anonymise",
            "crate_anon.anonymise.anonymise_cli",
            "crate_anon.anonymise.config",
            "crate_anon.anonymise.config_singleton",
            "crate_anon.anonymise.constants",
            "crate_anon.anonymise.dbholder",
            "crate_anon.anonymise.dd",
            "crate_anon.anonymise.ddr",
            "crate_anon.anonymise.launch_multiprocess_anonymiser",
            "crate_anon.anonymise.make_demo_database",
            "crate_anon.anonymise.models",
            "crate_anon.anonymise.patient",
            "crate_anon.anonymise.scrub",
            "crate_anon.anonymise.test_anonymisation",
            "crate_anon.anonymise.test_extract_text",
            "crate_anon.common",
            "crate_anon.common.contenttypes",
            "crate_anon.common.debugfunc",
            "crate_anon.common.extendedconfigparser",
            "crate_anon.common.fileops",
            "crate_anon.common.formatting",
            "crate_anon.common.hash",
            "crate_anon.common.jsonfunc",
            "crate_anon.common.lang",
            "crate_anon.common.logsupport",
            "crate_anon.common.nhs",
            "crate_anon.common.sql",
            "crate_anon.common.sql_grammar",
            "crate_anon.common.sql_grammar_factory",
            "crate_anon.common.sql_grammar_mssql",
            "crate_anon.common.sql_grammar_mysql",
            "crate_anon.common.sqla",
            "crate_anon.common.stringfunc",
            "crate_anon.common.subproc",
            "crate_anon.common.timing",
            "crate_anon.crateweb",
            "crate_anon.crateweb.config",
            "crate_anon.crateweb.config.apps",
            "crate_anon.crateweb.config.constants",
            "crate_anon.crateweb.config.settings",
            "crate_anon.crateweb.config.urls",
            "crate_anon.crateweb.config.wsgi",
            "crate_anon.crateweb.consent",
            "crate_anon.crateweb.consent.celery",
            "crate_anon.crateweb.consent.forms",
            "crate_anon.crateweb.consent.management",
            "crate_anon.crateweb.consent.management.commands",
            "crate_anon.crateweb.consent.management.commands.populate",
            "crate_anon.crateweb.consent.management.commands.test_email",
            "crate_anon.crateweb.consent.migrations",
            "crate_anon.crateweb.consent.migrations.0001_initial",
            "crate_anon.crateweb.consent.migrations.0002_auto_20160621_1511",
            "crate_anon.crateweb.consent.migrations.0003_auto_20160628_1301",
            "crate_anon.crateweb.consent.migrations.0004_auto_20160703_1530",
            "crate_anon.crateweb.consent.migrations.0005_auto_20170203_1348",
            "crate_anon.crateweb.consent.migrations.0006_auto_20170206_1617",
            "crate_anon.crateweb.consent.migrations.0007_auto_20170228_1052",
            "crate_anon.crateweb.consent.models",
            "crate_anon.crateweb.consent.storage",
            "crate_anon.crateweb.consent.tasks",
            "crate_anon.crateweb.consent.utils",
            "crate_anon.crateweb.consent.views",
            "crate_anon.crateweb.core",
            "crate_anon.crateweb.core.admin",
            "crate_anon.crateweb.core.auth_views",
            "crate_anon.crateweb.core.constants",
            "crate_anon.crateweb.core.dbfunc",
            "crate_anon.crateweb.core.mail",
            "crate_anon.crateweb.core.management",
            "crate_anon.crateweb.core.management.commands",
            "crate_anon.crateweb.core.management.commands.runcpserver",
            "crate_anon.crateweb.core.middleware",
            "crate_anon.crateweb.core.utils",
            "crate_anon.crateweb.core.views",
            "crate_anon.crateweb.extra",
            "crate_anon.crateweb.extra.admin",
            "crate_anon.crateweb.extra.django_cache_fn",
            "crate_anon.crateweb.extra.excel",
            "crate_anon.crateweb.extra.fields",
            "crate_anon.crateweb.extra.forms",
            "crate_anon.crateweb.extra.middleware",
            "crate_anon.crateweb.extra.pdf",
            "crate_anon.crateweb.extra.request_cache",
            "crate_anon.crateweb.extra.salutation",
            "crate_anon.crateweb.extra.serve",
            "crate_anon.crateweb.manage",
            "crate_anon.crateweb.research",
            "crate_anon.crateweb.research.context_processors",
            "crate_anon.crateweb.research.forms",
            "crate_anon.crateweb.research.html_functions",
            "crate_anon.crateweb.research.migrations",
            "crate_anon.crateweb.research.migrations.0001_initial",
            "crate_anon.crateweb.research.migrations.0002_auto_20170203_1348",
            "crate_anon.crateweb.research.migrations.0003_patientexplorer_patientexploreraudit",
            "crate_anon.crateweb.research.migrations.0004_auto_20170212_0137",
            "crate_anon.crateweb.research.migrations.0005_query_sql_hash",
            "crate_anon.crateweb.research.migrations.0006_patientexplorer_pmq_hash",
            "crate_anon.crateweb.research.models",
            "crate_anon.crateweb.research.research_db_info",
            "crate_anon.crateweb.research.sql_writer",
            "crate_anon.crateweb.research.tests",
            "crate_anon.crateweb.research.views",
            "crate_anon.crateweb.specimen_secret_local_settings",
            "crate_anon.crateweb.specimen_secret_local_settings.crateweb_local_settings",
            "crate_anon.crateweb.userprofile",
            "crate_anon.crateweb.userprofile.forms",
            "crate_anon.crateweb.userprofile.migrations",
            "crate_anon.crateweb.userprofile.migrations.0001_initial",
            "crate_anon.crateweb.userprofile.migrations.0002_userprofile_sql_scratchpad",
            "crate_anon.crateweb.userprofile.migrations.0003_auto_20160628_1301",
            "crate_anon.crateweb.userprofile.migrations.0004_userprofile_patients_per_page",
            "crate_anon.crateweb.userprofile.migrations.0005_userprofile_patient_multiquery_scratchpad",
            "crate_anon.crateweb.userprofile.migrations.0006_auto_20170212_0137",
            "crate_anon.crateweb.userprofile.models",
            "crate_anon.crateweb.userprofile.views",
            "crate_anon.nlp_manager",
            "crate_anon.nlp_manager.all_processors",
            "crate_anon.nlp_manager.base_nlp_parser",
            "crate_anon.nlp_manager.build_gate_java_interface",
            "crate_anon.nlp_manager.build_medex_itself",
            "crate_anon.nlp_manager.build_medex_java_interface",
            "crate_anon.nlp_manager.constants",
            "crate_anon.nlp_manager.input_field_config",
            "crate_anon.nlp_manager.launch_multiprocess_nlp",
            "crate_anon.nlp_manager.models",
            "crate_anon.nlp_manager.nlp_definition",
            "crate_anon.nlp_manager.nlp_manager",
            "crate_anon.nlp_manager.number",
            "crate_anon.nlp_manager.output_user_config",
            "crate_anon.nlp_manager.parse_biochemistry",
            "crate_anon.nlp_manager.parse_clinical",
            "crate_anon.nlp_manager.parse_cognitive",
            "crate_anon.nlp_manager.parse_gate",
            "crate_anon.nlp_manager.parse_haematology",
            "crate_anon.nlp_manager.parse_medex",
            "crate_anon.nlp_manager.regex_func",
            "crate_anon.nlp_manager.regex_numbers",
            "crate_anon.nlp_manager.regex_parser",
            "crate_anon.nlp_manager.regex_test",
            "crate_anon.nlp_manager.regex_units",
            "crate_anon.nlp_manager.test_all_regex",
            "crate_anon.nlp_manager.text_handling",
            "crate_anon.preprocess",
            "crate_anon.preprocess.ddhint",
            "crate_anon.preprocess.postcodes",
            "crate_anon.preprocess.preprocess_pcmis",
            "crate_anon.preprocess.preprocess_rio",
            "crate_anon.preprocess.rio_constants",
            "crate_anon.preprocess.rio_ddgen",
            "crate_anon.preprocess.rio_pk",
            "crate_anon.preprocess.rio_view_func",
            "crate_anon.preprocess.rio_views",
            "crate_anon.tools",
            "crate_anon.tools.estimate_mysql_memory_usage",
            "crate_anon.tools.generate_new_django_secret_key",
            "crate_anon.tools.launch_celery",
            "crate_anon.tools.launch_cherrypy_server",
            "crate_anon.tools.launch_flower",
            "crate_anon.tools.list_all_extensions",
            "crate_anon.tools.merge_csv",
            "crate_anon.tools.print_crateweb_demo_config",
            "crate_anon.tools.winservice",
            "crate_anon.version"
        ],
        "version": "0.18.32"
    },
    "crate-docs-theme": {
        "cmdline": [],
        "modules": [
            "theme",
            "theme.rtd",
            "theme.rtd.conf",
            "theme.rtd.conf.crash",
            "theme.rtd.conf.crate_dbal",
            "theme.rtd.conf.crate_java",
            "theme.rtd.conf.crate_jdbc",
            "theme.rtd.conf.crate_mesos",
            "theme.rtd.conf.crate_pdo",
            "theme.rtd.conf.crate_python",
            "theme.rtd.conf.crate_ruby",
            "theme.rtd.conf.crate_server"
        ],
        "version": "0.5.23"
    },
    "crate-peewee": {
        "cmdline": [],
        "modules": [
            "crate",
            "crate.peewee"
        ],
        "version": "0.1.0"
    },
    "crate-riot": {
        "cmdline": [],
        "modules": [
            "crate_riot"
        ],
        "version": "0.1"
    },
    "crater": {
        "cmdline": [],
        "modules": [
            "crater",
            "crater.crater",
            "crater.gen",
            "crater.gitcrate",
            "crater.lockfile",
            "crater.log",
            "crater.selfcrate",
            "crater.tarcrate"
        ],
        "version": "0.6"
    },
    "cratesmirror": {
        "cmdline": [],
        "modules": [
            "cratesmirror",
            "cratesmirror._mirror",
            "cratesmirror._tpool",
            "cratesmirror._utils"
        ],
        "version": "1.1.3"
    },
    "craton": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "craton-dashboard": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crawdad": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crawl": {
        "cmdline": [],
        "modules": [
            "crawl",
            "crawl.crawl",
            "crawl.extensions",
            "crawl.index",
            "crawl.normalized_list",
            "crawl.paths"
        ],
        "version": "0.5.5"
    },
    "crawl-frontier": {
        "cmdline": [],
        "modules": [
            "crawlfrontier",
            "crawlfrontier._version",
            "crawlfrontier.contrib",
            "crawlfrontier.contrib.backends",
            "crawlfrontier.contrib.backends.memory",
            "crawlfrontier.contrib.backends.memory.test_backend",
            "crawlfrontier.contrib.backends.sqlalchemy",
            "crawlfrontier.contrib.backends.sqlalchemy.test_backend",
            "crawlfrontier.contrib.middlewares",
            "crawlfrontier.contrib.middlewares.domain",
            "crawlfrontier.contrib.middlewares.fingerprint",
            "crawlfrontier.contrib.requests",
            "crawlfrontier.contrib.requests.converters",
            "crawlfrontier.contrib.requests.manager",
            "crawlfrontier.contrib.scrapy",
            "crawlfrontier.contrib.scrapy.converters",
            "crawlfrontier.contrib.scrapy.manager",
            "crawlfrontier.contrib.scrapy.middlewares",
            "crawlfrontier.contrib.scrapy.middlewares.schedulers",
            "crawlfrontier.contrib.scrapy.middlewares.seeds",
            "crawlfrontier.contrib.scrapy.middlewares.seeds.file",
            "crawlfrontier.contrib.scrapy.middlewares.seeds.s3",
            "crawlfrontier.contrib.scrapy.overusedbuffer",
            "crawlfrontier.contrib.scrapy.schedulers",
            "crawlfrontier.contrib.scrapy.schedulers.frontier",
            "crawlfrontier.contrib.scrapy.schedulers.recording",
            "crawlfrontier.core",
            "crawlfrontier.core.components",
            "crawlfrontier.core.manager",
            "crawlfrontier.core.models",
            "crawlfrontier.exceptions",
            "crawlfrontier.logger",
            "crawlfrontier.logger.events",
            "crawlfrontier.logger.filters",
            "crawlfrontier.logger.formatters",
            "crawlfrontier.logger.formatters.color",
            "crawlfrontier.logger.formatters.json",
            "crawlfrontier.logger.formatters.text",
            "crawlfrontier.logger.handlers",
            "crawlfrontier.logger.handlers.redis",
            "crawlfrontier.settings",
            "crawlfrontier.settings.default_settings",
            "crawlfrontier.tests",
            "crawlfrontier.tests.backends",
            "crawlfrontier.utils",
            "crawlfrontier.utils.collections",
            "crawlfrontier.utils.converters",
            "crawlfrontier.utils.encoders",
            "crawlfrontier.utils.fingerprint",
            "crawlfrontier.utils.graphs",
            "crawlfrontier.utils.graphs.data",
            "crawlfrontier.utils.graphs.generate_diagrams",
            "crawlfrontier.utils.graphs.manager",
            "crawlfrontier.utils.graphs.models",
            "crawlfrontier.utils.heap",
            "crawlfrontier.utils.managers",
            "crawlfrontier.utils.misc",
            "crawlfrontier.utils.tester",
            "crawlfrontier.utils.url"
        ],
        "version": "0.2.0.post0.dev29"
    },
    "crawl-me": {
        "cmdline": [],
        "modules": [
            "crawl_me",
            "crawl_me.__projconf__",
            "crawl_me.common",
            "crawl_me.common.crawlercore",
            "crawl_me.common.rangedownloader",
            "crawl_me.common.utils",
            "crawl_me.plugin",
            "crawl_me.plugin.baseHandler",
            "crawl_me.plugin.gamersky",
            "crawl_me.plugin.pageBasedHandler",
            "crawl_me.plugin.pixiv",
            "crawl_me.sysconf",
            "crawl_me.third_party",
            "crawl_me.third_party.abc"
        ],
        "version": "0.1.9dev-20140619-2"
    },
    "crawl-redfin": {
        "cmdline": [],
        "modules": [
            "crawl_redfin",
            "crawl_redfin.const",
            "crawl_redfin.const.house_type",
            "crawl_redfin.helpers",
            "crawl_redfin.htmlparser",
            "crawl_redfin.pkg",
            "crawl_redfin.pkg.crawlib",
            "crawl_redfin.pkg.crawlib.decoder",
            "crawl_redfin.pkg.crawlib.exc",
            "crawl_redfin.pkg.crawlib.helpers",
            "crawl_redfin.pkg.crawlib.htmlparser",
            "crawl_redfin.pkg.crawlib.spider",
            "crawl_redfin.pkg.crawlib.status",
            "crawl_redfin.pkg.crawlib.urlencoder",
            "crawl_redfin.pkg.crawlib.zzz_manual_install",
            "crawl_redfin.pkg.dataIO",
            "crawl_redfin.pkg.dataIO.compress",
            "crawl_redfin.pkg.dataIO.js",
            "crawl_redfin.pkg.dataIO.pk",
            "crawl_redfin.pkg.dataIO.printer",
            "crawl_redfin.pkg.dataIO.py23",
            "crawl_redfin.pkg.dataIO.textfile",
            "crawl_redfin.pkg.dataIO.zzz_manual_install",
            "crawl_redfin.urlencoder",
            "crawl_redfin.zzz_manual_install"
        ],
        "version": "0.0.2"
    },
    "crawl-trulia": {
        "cmdline": [],
        "modules": [
            "crawl_trulia",
            "crawl_trulia.helpers",
            "crawl_trulia.htmlparser",
            "crawl_trulia.packages",
            "crawl_trulia.packages.crawlib",
            "crawl_trulia.packages.crawlib.decoder",
            "crawl_trulia.packages.crawlib.exc",
            "crawl_trulia.packages.crawlib.helpers",
            "crawl_trulia.packages.crawlib.htmlparser",
            "crawl_trulia.packages.crawlib.spider",
            "crawl_trulia.packages.crawlib.urlencoder",
            "crawl_trulia.packages.crawlib.zzz_manual_install",
            "crawl_trulia.urlencoder",
            "crawl_trulia.zzz_manual_install"
        ],
        "version": "0.0.4"
    },
    "crawl-zillow": {
        "cmdline": [],
        "modules": [
            "crawl_zillow",
            "crawl_zillow.helpers",
            "crawl_zillow.htmlparser",
            "crawl_zillow.packages",
            "crawl_zillow.packages.crawlib",
            "crawl_zillow.packages.crawlib.decoder",
            "crawl_zillow.packages.crawlib.exc",
            "crawl_zillow.packages.crawlib.helpers",
            "crawl_zillow.packages.crawlib.htmlparser",
            "crawl_zillow.packages.crawlib.spider",
            "crawl_zillow.packages.crawlib.urlencoder",
            "crawl_zillow.packages.crawlib.zzz_manual_install",
            "crawl_zillow.urlencoder",
            "crawl_zillow.zzz_manual_install"
        ],
        "version": "0.0.1"
    },
    "crawler": {
        "cmdline": [],
        "modules": [
            "crawler",
            "crawler.base",
            "crawler.error",
            "crawler.request",
            "crawler.response",
            "script",
            "script.demo",
            "script.test",
            "test",
            "test.basic",
            "test.handler",
            "test.request",
            "test.response",
            "test.task_generator"
        ],
        "version": "0.0.2"
    },
    "crawler-detection": {
        "cmdline": [],
        "modules": [
            "crawler_detection"
        ],
        "version": "0.1"
    },
    "crawler-operation-for-youguowang": {
        "cmdline": [],
        "modules": [
            "crawler_operation_for_youguowang"
        ],
        "version": "1.0.0"
    },
    "crawlermaster": {
        "cmdline": [],
        "modules": [
            "crawlermaster",
            "crawlermaster.cmparser",
            "crawlermaster.cmselector",
            "crawlermaster.cmspider",
            "crawlermaster.launcher",
            "crawlermaster.mod",
            "crawlermaster.resource",
            "crawlermaster.ui",
            "crawlermaster.utility"
        ],
        "version": "0.1.2a6"
    },
    "crawlers": {
        "cmdline": [],
        "modules": [
            "crawlers.setup"
        ],
        "version": "0.0.1"
    },
    "crawley": {
        "cmdline": [
            "crawley"
        ],
        "modules": [
            "crawley",
            "crawley.config",
            "crawley.crawlers",
            "crawley.crawlers.base",
            "crawley.crawlers.fast",
            "crawley.crawlers.offline",
            "crawley.exceptions",
            "crawley.extractors",
            "crawley.http",
            "crawley.http.cookies",
            "crawley.http.managers",
            "crawley.http.request",
            "crawley.http.response",
            "crawley.http.urls",
            "crawley.manager",
            "crawley.manager.commands",
            "crawley.manager.commands.browser",
            "crawley.manager.commands.command",
            "crawley.manager.commands.run",
            "crawley.manager.commands.shell",
            "crawley.manager.commands.startproject",
            "crawley.manager.commands.syncdb",
            "crawley.manager.projects",
            "crawley.manager.projects.base",
            "crawley.manager.projects.code",
            "crawley.manager.projects.template",
            "crawley.manager.utils",
            "crawley.persistance",
            "crawley.persistance.connectors",
            "crawley.persistance.databases",
            "crawley.persistance.documents",
            "crawley.persistance.documents.csv_doc",
            "crawley.persistance.documents.json",
            "crawley.persistance.documents.meta",
            "crawley.persistance.documents.xml",
            "crawley.scrapers",
            "crawley.scrapers.base",
            "crawley.scrapers.smart",
            "crawley.simple_parser",
            "crawley.simple_parser.compilers",
            "crawley.simple_parser.config_parser",
            "crawley.simple_parser.parsers",
            "crawley.smtp",
            "crawley.smtp.sender",
            "crawley.utils",
            "crawley.utils.collections",
            "crawley.utils.collections.custom_dict",
            "crawley.utils.collections.ordered_dict",
            "crawley.utils.common",
            "crawley.utils.files",
            "crawley.utils.matchers",
            "crawley.utils.projects"
        ],
        "version": "0.2.4"
    },
    "crawley-dev": {
        "cmdline": [
            "crawley"
        ],
        "modules": [
            "crawley",
            "crawley.config",
            "crawley.crawlers",
            "crawley.crawlers.base",
            "crawley.crawlers.fast",
            "crawley.crawlers.offline",
            "crawley.exceptions",
            "crawley.extractors",
            "crawley.http",
            "crawley.http.cookies",
            "crawley.http.managers",
            "crawley.http.request",
            "crawley.http.response",
            "crawley.http.urls",
            "crawley.manager",
            "crawley.manager.commands",
            "crawley.manager.commands.browser",
            "crawley.manager.commands.command",
            "crawley.manager.commands.migratedb",
            "crawley.manager.commands.run",
            "crawley.manager.commands.shell",
            "crawley.manager.commands.startproject",
            "crawley.manager.commands.syncdb",
            "crawley.manager.projects",
            "crawley.manager.projects.base",
            "crawley.manager.projects.code",
            "crawley.manager.projects.database",
            "crawley.manager.projects.template",
            "crawley.manager.utils",
            "crawley.multiprogramming",
            "crawley.multiprogramming.collections",
            "crawley.multiprogramming.pool",
            "crawley.multiprogramming.threads",
            "crawley.persistance",
            "crawley.persistance.documents",
            "crawley.persistance.documents.csv_doc",
            "crawley.persistance.documents.json_doc",
            "crawley.persistance.documents.meta",
            "crawley.persistance.documents.xml",
            "crawley.persistance.nosql",
            "crawley.persistance.nosql.base",
            "crawley.persistance.nosql.couch",
            "crawley.persistance.nosql.mongo",
            "crawley.persistance.relational",
            "crawley.persistance.relational.connectors",
            "crawley.persistance.relational.databases",
            "crawley.scrapers",
            "crawley.scrapers.base",
            "crawley.scrapers.smart",
            "crawley.simple_parser",
            "crawley.simple_parser.compilers",
            "crawley.simple_parser.config_parser",
            "crawley.simple_parser.parsers",
            "crawley.smtp",
            "crawley.smtp.sender",
            "crawley.utils",
            "crawley.utils.collections",
            "crawley.utils.collections.custom_dict",
            "crawley.utils.collections.ordered_dict",
            "crawley.utils.common",
            "crawley.utils.files",
            "crawley.utils.matchers",
            "crawley.utils.projects",
            "crawley.web_browser",
            "crawley.web_browser.GUI",
            "crawley.web_browser.GUI.base",
            "crawley.web_browser.GUI.config",
            "crawley.web_browser.GUI.settings",
            "crawley.web_browser.base",
            "crawley.web_browser.baseBrowser",
            "crawley.web_browser.browser",
            "crawley.web_browser.config",
            "crawley.web_browser.gui_project",
            "crawley.web_browser.run"
        ],
        "version": "0.2.4"
    },
    "crawlib": {
        "cmdline": [],
        "modules": [
            "crawlib",
            "crawlib.decoder",
            "crawlib.exc",
            "crawlib.helpers",
            "crawlib.htmlparser",
            "crawlib.spider",
            "crawlib.status",
            "crawlib.urlencoder",
            "crawlib.zzz_manual_install"
        ],
        "version": "0.0.6"
    },
    "crawlidator": {
        "cmdline": [
            "crawlidator"
        ],
        "modules": [
            "crawlidator",
            "crawlidator.crawlidator"
        ],
        "version": "0.2"
    },
    "crawling": {
        "cmdline": [],
        "modules": [
            "crawling",
            "crawling.cli",
            "crawling.crawling"
        ],
        "version": "0.1"
    },
    "crawlmi": {
        "cmdline": [],
        "modules": [
            "crawlmi",
            "crawlmi._monkeypatches",
            "crawlmi.cmdline",
            "crawlmi.commands",
            "crawlmi.commands.base",
            "crawlmi.commands.crawl",
            "crawlmi.commands.fetch",
            "crawlmi.commands.list",
            "crawlmi.commands.settings",
            "crawlmi.commands.shell",
            "crawlmi.commands.startproject",
            "crawlmi.commands.version",
            "crawlmi.commands.view",
            "crawlmi.compat",
            "crawlmi.core",
            "crawlmi.core.context_factory",
            "crawlmi.core.downloader",
            "crawlmi.core.engine",
            "crawlmi.core.handlers",
            "crawlmi.core.handlers.file_handler",
            "crawlmi.core.handlers.general_handler",
            "crawlmi.core.handlers.http_1_1_handler",
            "crawlmi.core.handlers.http_handler",
            "crawlmi.core.handlers.https_handler",
            "crawlmi.core.process",
            "crawlmi.core.project",
            "crawlmi.core.signal_manager",
            "crawlmi.core.webclient",
            "crawlmi.exceptions",
            "crawlmi.extractor",
            "crawlmi.extractor.base_link_extractor",
            "crawlmi.extractor.ignored_extensions",
            "crawlmi.extractor.link",
            "crawlmi.extractor.lxml_link_extractor",
            "crawlmi.http",
            "crawlmi.http.cookies",
            "crawlmi.http.headers",
            "crawlmi.http.request",
            "crawlmi.http.request.request",
            "crawlmi.http.response",
            "crawlmi.http.response.factory",
            "crawlmi.http.response.html_response",
            "crawlmi.http.response.response",
            "crawlmi.http.response.text_response",
            "crawlmi.http.response.xml_response",
            "crawlmi.log",
            "crawlmi.middleware",
            "crawlmi.middleware.extension_manager",
            "crawlmi.middleware.extensions",
            "crawlmi.middleware.extensions.core_stats",
            "crawlmi.middleware.extensions.log_stats",
            "crawlmi.middleware.extensions.save_response",
            "crawlmi.middleware.extensions.telnet",
            "crawlmi.middleware.middleware_manager",
            "crawlmi.middleware.pipeline_manager",
            "crawlmi.middleware.pipelines",
            "crawlmi.middleware.pipelines.canonical",
            "crawlmi.middleware.pipelines.chunked_transfer",
            "crawlmi.middleware.pipelines.cookies",
            "crawlmi.middleware.pipelines.default_headers",
            "crawlmi.middleware.pipelines.downloader_stats",
            "crawlmi.middleware.pipelines.duplicate_filter",
            "crawlmi.middleware.pipelines.filter",
            "crawlmi.middleware.pipelines.http_cache",
            "crawlmi.middleware.pipelines.http_cache.http_cache",
            "crawlmi.middleware.pipelines.http_cache.policy",
            "crawlmi.middleware.pipelines.http_cache.storage",
            "crawlmi.middleware.pipelines.http_compression",
            "crawlmi.middleware.pipelines.random_user_agent",
            "crawlmi.middleware.pipelines.redirect",
            "crawlmi.middleware.pipelines.retry",
            "crawlmi.middleware.pipelines.tor",
            "crawlmi.parser",
            "crawlmi.parser.quantity",
            "crawlmi.parser.s",
            "crawlmi.parser.selectors",
            "crawlmi.parser.selectors.lxml_selector",
            "crawlmi.parser.selectors.selector_list",
            "crawlmi.parser.sp",
            "crawlmi.queue",
            "crawlmi.queue.heap",
            "crawlmi.queue.memory_queue",
            "crawlmi.queue.priority_queue",
            "crawlmi.queue.queue",
            "crawlmi.queue.response_queue",
            "crawlmi.settings",
            "crawlmi.settings.default_settings",
            "crawlmi.settings.engine_settings",
            "crawlmi.settings.settings",
            "crawlmi.shell",
            "crawlmi.signals",
            "crawlmi.spider",
            "crawlmi.spider.base",
            "crawlmi.spider.sitemap",
            "crawlmi.spider.slot",
            "crawlmi.spider.spider_manager",
            "crawlmi.stats",
            "crawlmi.stats.dummy_stats",
            "crawlmi.stats.memory_stats",
            "crawlmi.stats.statistics",
            "crawlmi.stats.top_samples",
            "crawlmi.tests",
            "crawlmi.tests.mocks",
            "crawlmi.tests.mocks.dummy_dbm",
            "crawlmi.tests.test_cmdline",
            "crawlmi.tests.test_cmdline.sample_commands",
            "crawlmi.tests.test_cmdline.sample_commands.command1",
            "crawlmi.tests.test_cmdline.sample_commands.mod",
            "crawlmi.tests.test_cmdline.sample_commands.mod.command2",
            "crawlmi.tests.test_cmdline.test_cmdline",
            "crawlmi.tests.test_downloader",
            "crawlmi.tests.test_downloader_handlers",
            "crawlmi.tests.test_engine",
            "crawlmi.tests.test_engine_settings",
            "crawlmi.tests.test_extension_manager",
            "crawlmi.tests.test_extractor",
            "crawlmi.tests.test_extractor.test_link",
            "crawlmi.tests.test_extractor.test_lxml_link_extractor",
            "crawlmi.tests.test_http",
            "crawlmi.tests.test_http.test_http_cookies",
            "crawlmi.tests.test_http.test_http_headers",
            "crawlmi.tests.test_http.test_http_html_response",
            "crawlmi.tests.test_http.test_http_request",
            "crawlmi.tests.test_http.test_http_response",
            "crawlmi.tests.test_http.test_http_text_response",
            "crawlmi.tests.test_log",
            "crawlmi.tests.test_middleware",
            "crawlmi.tests.test_middleware.test_extensions_log_stats",
            "crawlmi.tests.test_middleware.test_pipelines_canonical",
            "crawlmi.tests.test_middleware.test_pipelines_chunked_transfer",
            "crawlmi.tests.test_middleware.test_pipelines_cookies",
            "crawlmi.tests.test_middleware.test_pipelines_default_headers",
            "crawlmi.tests.test_middleware.test_pipelines_downloader_stats",
            "crawlmi.tests.test_middleware.test_pipelines_duplicate_filter",
            "crawlmi.tests.test_middleware.test_pipelines_filter",
            "crawlmi.tests.test_middleware.test_pipelines_http_cache",
            "crawlmi.tests.test_middleware.test_pipelines_http_compression",
            "crawlmi.tests.test_middleware.test_pipelines_random_user_agent",
            "crawlmi.tests.test_middleware.test_pipelines_redirect",
            "crawlmi.tests.test_middleware.test_pipelines_retry",
            "crawlmi.tests.test_middleware_manager",
            "crawlmi.tests.test_parser",
            "crawlmi.tests.test_parser.test_lxml_selector",
            "crawlmi.tests.test_parser.test_quantity",
            "crawlmi.tests.test_parser.test_s",
            "crawlmi.tests.test_parser.test_selector",
            "crawlmi.tests.test_parser.test_sp",
            "crawlmi.tests.test_pipeline_manager",
            "crawlmi.tests.test_project",
            "crawlmi.tests.test_project.test_project",
            "crawlmi.tests.test_queue",
            "crawlmi.tests.test_queue.test_heap",
            "crawlmi.tests.test_queue.test_priority_queue",
            "crawlmi.tests.test_queue.test_queue",
            "crawlmi.tests.test_queue.test_response_queue",
            "crawlmi.tests.test_response_factory",
            "crawlmi.tests.test_settings",
            "crawlmi.tests.test_signal_manager",
            "crawlmi.tests.test_spider_manager",
            "crawlmi.tests.test_spider_manager.test_spider_manager",
            "crawlmi.tests.test_spider_manager.test_spiders",
            "crawlmi.tests.test_spider_manager.test_spiders.spider0",
            "crawlmi.tests.test_spider_manager.test_spiders.spider1",
            "crawlmi.tests.test_spider_manager.test_spiders.spider2",
            "crawlmi.tests.test_spider_manager.test_spiders.spider3",
            "crawlmi.tests.test_statistics",
            "crawlmi.tests.test_stats",
            "crawlmi.tests.test_top_samples",
            "crawlmi.tests.test_utils",
            "crawlmi.tests.test_utils.test_iter_submodules",
            "crawlmi.tests.test_utils.test_iter_submodules.mod",
            "crawlmi.tests.test_utils.test_iter_submodules.mod.mod0",
            "crawlmi.tests.test_utils.test_iter_submodules.mod1",
            "crawlmi.tests.test_utils.test_utils_conf",
            "crawlmi.tests.test_utils.test_utils_defer",
            "crawlmi.tests.test_utils.test_utils_encoding",
            "crawlmi.tests.test_utils.test_utils_gz",
            "crawlmi.tests.test_utils.test_utils_html",
            "crawlmi.tests.test_utils.test_utils_middleware",
            "crawlmi.tests.test_utils.test_utils_misc",
            "crawlmi.tests.test_utils.test_utils_python",
            "crawlmi.tests.test_utils.test_utils_regex",
            "crawlmi.tests.test_utils.test_utils_request",
            "crawlmi.tests.test_utils.test_utils_response",
            "crawlmi.tests.test_utils.test_utils_sitemap",
            "crawlmi.tests.test_utils.test_utils_template",
            "crawlmi.tests.test_utils.test_utils_url",
            "crawlmi.tests.test_webclient",
            "crawlmi.utils",
            "crawlmi.utils.clock",
            "crawlmi.utils.conf",
            "crawlmi.utils.console",
            "crawlmi.utils.defer",
            "crawlmi.utils.encoding",
            "crawlmi.utils.engine",
            "crawlmi.utils.gz",
            "crawlmi.utils.html",
            "crawlmi.utils.lxml_fix",
            "crawlmi.utils.middleware",
            "crawlmi.utils.misc",
            "crawlmi.utils.ossignal",
            "crawlmi.utils.python",
            "crawlmi.utils.regex",
            "crawlmi.utils.request",
            "crawlmi.utils.response",
            "crawlmi.utils.sitemap",
            "crawlmi.utils.tcp",
            "crawlmi.utils.template",
            "crawlmi.utils.test",
            "crawlmi.utils.trackref",
            "crawlmi.utils.url",
            "crawlmi.xlib",
            "crawlmi.xlib.pydispatch",
            "crawlmi.xlib.pydispatch.dispatcher",
            "crawlmi.xlib.pydispatch.errors",
            "crawlmi.xlib.pydispatch.robust",
            "crawlmi.xlib.pydispatch.robustapply",
            "crawlmi.xlib.pydispatch.saferef"
        ],
        "version": "0.1.8"
    },
    "crawly": {
        "cmdline": [],
        "modules": [
            "crawly"
        ],
        "version": "0.1b"
    },
    "crawlz": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crawtext": {
        "cmdline": [],
        "modules": [
            "crawtext",
            "crawtext.crawler",
            "crawtext.crawtext",
            "crawtext.database",
            "crawtext.database.database",
            "crawtext.encoding",
            "crawtext.export",
            "crawtext.filter",
            "crawtext.packages",
            "crawtext.packages.emails",
            "crawtext.packages.format_email",
            "crawtext.query",
            "crawtext.report",
            "crawtext.text",
            "crawtext.tldextract",
            "crawtext.tldextract.tests",
            "crawtext.tldextract.tests.all",
            "crawtext.tldextract.tldextract",
            "crawtext.url",
            "crawtext.urls",
            "crawtext.utils",
            "packages",
            "packages.feedfinder",
            "packages.feedparser",
            "packages.feedparser.feedparser",
            "packages.feedparser.feedparsertest",
            "packages.feedparser.sgmllib3",
            "packages.jieba",
            "packages.jieba.analyse",
            "packages.jieba.analyse.analyzer",
            "packages.jieba.finalseg",
            "packages.jieba.finalseg.prob_emit",
            "packages.jieba.finalseg.prob_start",
            "packages.jieba.finalseg.prob_trans",
            "packages.jieba.posseg",
            "packages.jieba.posseg.char_state_tab",
            "packages.jieba.posseg.prob_emit",
            "packages.jieba.posseg.prob_start",
            "packages.jieba.posseg.prob_trans",
            "packages.jieba.posseg.viterbi",
            "packages.tldextract",
            "packages.tldextract.tldextract",
            "utils",
            "utils.encoding"
        ],
        "version": "4.1.1"
    },
    "crayola": {
        "cmdline": [],
        "modules": [
            "crayola",
            "crayola.crayola",
            "crayola.tests"
        ],
        "version": "0.1.1"
    },
    "crayon": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "crayons": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "crazy": {
        "cmdline": [],
        "modules": [
            "crazy"
        ],
        "version": "0.1.0"
    },
    "crazy-architect-framework": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crazy-ball": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crazy-decrypter": {
        "cmdline": [],
        "modules": [
            "crazy",
            "crazy.crazy_decrypter"
        ],
        "version": "0.0.3"
    },
    "crazyhash": {
        "cmdline": [],
        "modules": [
            "crazyhash",
            "crazyhash.constants",
            "crazyhash.crazyhash"
        ],
        "version": "0.0.2"
    },
    "crbm": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crc-itu": {
        "cmdline": [],
        "modules": [],
        "version": "0.1a2"
    },
    "crc-nd.utils": {
        "cmdline": [],
        "modules": [
            "crc_nd",
            "crc_nd.utils",
            "crc_nd.utils.django",
            "crc_nd.utils.error_mixins",
            "crc_nd.utils.errors",
            "crc_nd.utils.file_io",
            "crc_nd.utils.test_io"
        ],
        "version": "0.2.0"
    },
    "crc16": {
        "cmdline": [],
        "modules": [
            "crc16",
            "crc16.crc16pure",
            "crc16.test"
        ],
        "version": "0.1.1"
    },
    "crc32": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crc8": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.4"
    },
    "crcache": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crccheck": {
        "cmdline": [],
        "modules": [
            "crccheck",
            "crccheck.base",
            "crccheck.checksum",
            "crccheck.crc",
            "tests",
            "tests.test_base",
            "tests.test_checksum",
            "tests.test_crc",
            "tests.test_reflectbitorder"
        ],
        "version": "0.6"
    },
    "crcelk": {
        "cmdline": [],
        "modules": [
            "crcelk"
        ],
        "version": "1.1"
    },
    "crcli": {
        "cmdline": [],
        "modules": [
            "cr",
            "crcli",
            "crcli.scripts",
            "crcli.scripts.cli",
            "crcli.scripts.dump"
        ],
        "version": "0.0.1"
    },
    "crcmod": {
        "cmdline": [],
        "modules": [
            "crcmod",
            "crcmod._crcfunpy",
            "crcmod.crcmod",
            "crcmod.predefined",
            "crcmod.test"
        ],
        "version": "1.7"
    },
    "crcnsget": {
        "cmdline": [],
        "modules": [
            "crcnsget",
            "crcnsget.cli",
            "crcnsget.crcnsget"
        ],
        "version": "0.1.0"
    },
    "crdist": {
        "cmdline": [],
        "modules": [
            "crdist",
            "crdist.admin",
            "crdist.apps",
            "crdist.migrations",
            "crdist.migrations.0001_initial",
            "crdist.migrations.0002_load_intial_data",
            "crdist.models",
            "crdist.tests",
            "crdist.urls",
            "crdist.utils",
            "crdist.views",
            "crdist.widgets"
        ],
        "version": "0.1.5"
    },
    "crdown": {
        "cmdline": [
            "crdown"
        ],
        "modules": [
            "crunchy",
            "crunchy.common",
            "crunchy.decoder",
            "crunchy.downloader",
            "crunchy.login"
        ],
        "version": "0.6.9"
    },
    "crds": {
        "cmdline": [
            "crds",
            "crds_cached_context",
            "crds_check_cache",
            "crds_jwst_serverless_pipeline_env.csh",
            "crds_repair_cache",
            "cron_sync",
            "custom_query_affected_datasets",
            "pipeline_bestref",
            "query_affected_datasets",
            "remote_cache_init",
            "safe_bestrefs"
        ],
        "modules": [
            "crds",
            "crds.bestrefs",
            "crds.bestrefs.bestrefs",
            "crds.bestrefs.headers",
            "crds.bestrefs.table_effects",
            "crds.certify",
            "crds.certify.certify",
            "crds.certify.generic_tpn",
            "crds.certify.mapping_parser",
            "crds.certify.reftypes",
            "crds.certify.validator_helpers",
            "crds.certify.validators",
            "crds.client",
            "crds.client.api",
            "crds.client.proxy",
            "crds.core",
            "crds.core.cmdline",
            "crds.core.config",
            "crds.core.constants",
            "crds.core.custom_dict",
            "crds.core.exceptions",
            "crds.core.git_version",
            "crds.core.heavy_client",
            "crds.core.log",
            "crds.core.mapping_verifier",
            "crds.core.naming",
            "crds.core.pysh",
            "crds.core.python23",
            "crds.core.rmap",
            "crds.core.selectors",
            "crds.core.substitutions",
            "crds.core.timestamp",
            "crds.core.utils",
            "crds.data_file",
            "crds.diff",
            "crds.hst",
            "crds.hst.acs",
            "crds.hst.acs_common",
            "crds.hst.acs_v1",
            "crds.hst.acs_v2",
            "crds.hst.cos",
            "crds.hst.locate",
            "crds.hst.nicmos",
            "crds.hst.siname",
            "crds.hst.stis",
            "crds.hst.wfc3",
            "crds.hst.wfpc2",
            "crds.io",
            "crds.io.abstract",
            "crds.io.asdf",
            "crds.io.factory",
            "crds.io.fits",
            "crds.io.geis",
            "crds.io.json",
            "crds.io.jwstdm",
            "crds.io.yaml",
            "crds.jwst",
            "crds.jwst.fgs",
            "crds.jwst.locate",
            "crds.jwst.miri",
            "crds.jwst.nircam",
            "crds.jwst.niriss",
            "crds.jwst.nirspec",
            "crds.jwst.pipeline",
            "crds.jwst.schema",
            "crds.jwst.system",
            "crds.list",
            "crds.matches",
            "crds.misc",
            "crds.misc.check_archive",
            "crds.misc.datalvl",
            "crds.misc.query_affected",
            "crds.misc.sql",
            "crds.misc.uniqname",
            "crds.refactoring",
            "crds.refactoring.checksum",
            "crds.refactoring.newcontext",
            "crds.refactoring.refactor",
            "crds.refactoring.refactor2",
            "crds.rowdiff",
            "crds.submit",
            "crds.submit.background",
            "crds.submit.monitor",
            "crds.submit.submit",
            "crds.submit.web",
            "crds.sync",
            "crds.tables",
            "crds.tests",
            "crds.tests.compare_pickles",
            "crds.tests.profile_bestrefs",
            "crds.tests.profile_pickling",
            "crds.tests.test_bad_files",
            "crds.tests.test_bestrefs",
            "crds.tests.test_build6",
            "crds.tests.test_certify",
            "crds.tests.test_cmdline",
            "crds.tests.test_config",
            "crds.tests.test_diff",
            "crds.tests.test_heavy_client",
            "crds.tests.test_io",
            "crds.tests.test_matches",
            "crds.tests.test_newcontext",
            "crds.tests.test_refactor",
            "crds.tests.test_rmap",
            "crds.tests.test_rowdiff",
            "crds.tests.test_special",
            "crds.tests.test_sync",
            "crds.tests.test_table_effects",
            "crds.tests.test_uses",
            "crds.tobs",
            "crds.tobs.locate",
            "crds.tobs.tests",
            "crds.tobs.tinstr",
            "crds.uses"
        ],
        "version": "7.1.1"
    },
    "creader": {
        "cmdline": [],
        "modules": [
            "creader",
            "creader.creader"
        ],
        "version": "0.1.0"
    },
    "creadoc": {
        "cmdline": [],
        "modules": [
            "creadoc",
            "creadoc.api",
            "creadoc.app_meta",
            "creadoc.controller",
            "creadoc.designer",
            "creadoc.designer.actions",
            "creadoc.designer.exceptions",
            "creadoc.designer.forms",
            "creadoc.designer.helpers",
            "creadoc.designer.mutex",
            "creadoc.migrations",
            "creadoc.migrations.0001_initial",
            "creadoc.migrations.0002_auto__add_creadocreportdatasource",
            "creadoc.models",
            "creadoc.report",
            "creadoc.report.actions",
            "creadoc.report.constants",
            "creadoc.report.enums",
            "creadoc.report.exceptions",
            "creadoc.report.helpers",
            "creadoc.report.registry",
            "creadoc.report.source",
            "creadoc.report.variable",
            "creadoc.viewer",
            "creadoc.viewer.actions",
            "creadoc.viewer.forms",
            "demo.app",
            "demo.app.app_meta",
            "demo.app.controller",
            "demo.app.designer",
            "demo.app.designer.app_meta",
            "demo.app.example",
            "demo.app.example.actions",
            "demo.app.example.app_meta",
            "demo.app.helpers",
            "demo.app.metaroles",
            "demo.app.middlewares",
            "demo.app.reports",
            "demo.app.reports.actions",
            "demo.app.reports.app_meta",
            "demo.app.reports.forms",
            "demo.app.views"
        ],
        "version": "0.0.5"
    },
    "creamas": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "create": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "create-ap-gui": {
        "cmdline": [],
        "modules": [
            "createApGui",
            "createApGui.aboutPage",
            "createApGui.createPage",
            "createApGui.editPage",
            "createApGui.gui",
            "createApGui.guiComponent",
            "createApGui.language",
            "createApGui.mainWindow",
            "createApGui.runningAp",
            "createApGui.settingPage",
            "createApGui.statusPage",
            "createApGui.terminalInterface",
            "createApGui.trayIcon",
            "createApGui.trayRightClickMenu",
            "createApGui.userSetting"
        ],
        "version": "1.3.1"
    },
    "create-flask-app": {
        "cmdline": [],
        "modules": [
            "create_flask_app"
        ],
        "version": "0.1.6"
    },
    "create-ios-framework": {
        "cmdline": [],
        "modules": [
            "crif",
            "crif._version",
            "crif.utils"
        ],
        "version": "0.1.5"
    },
    "create-react-redux-ecosystem": {
        "cmdline": [],
        "modules": [
            "rrcreate_assets.create"
        ],
        "version": "0.0.1"
    },
    "createappendget": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "createbucket": {
        "cmdline": [],
        "modules": [
            "createbucket",
            "createbucket.create_s3_bucket"
        ],
        "version": "0.1.2"
    },
    "createcloudmap": {
        "cmdline": [],
        "modules": [
            "cloudmap",
            "cloudmap._version",
            "cloudmap.create_map",
            "cloudmap.dundee",
            "cloudmap.geo",
            "cloudmap.geo_dundee",
            "cloudmap.geo_jma",
            "cloudmap.mkdir",
            "cloudmap.polar",
            "cloudmap.satellite",
            "cloudmap.satellites"
        ],
        "version": "0.9.0"
    },
    "createcoverage": {
        "cmdline": [],
        "modules": [
            "createcoverage",
            "createcoverage.script",
            "createcoverage.tests"
        ],
        "version": "1.5"
    },
    "createmucroom": {
        "cmdline": [],
        "modules": [
            "app"
        ],
        "version": "0.1.0"
    },
    "createpy": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "createsend": {
        "cmdline": [],
        "modules": [
            "createsend",
            "createsend.administrator",
            "createsend.campaign",
            "createsend.client",
            "createsend.createsend",
            "createsend.list",
            "createsend.person",
            "createsend.segment",
            "createsend.subscriber",
            "createsend.template",
            "createsend.transactional",
            "createsend.utils"
        ],
        "version": "4.2.1"
    },
    "createurls": {
        "cmdline": [],
        "modules": [
            "createurls"
        ],
        "version": "0.0.1"
    },
    "createzopecoverage": {
        "cmdline": [],
        "modules": [
            "createzopecoverage",
            "createzopecoverage.recipe",
            "createzopecoverage.script",
            "createzopecoverage.testing",
            "createzopecoverage.tests",
            "createzopecoverage.tests.test"
        ],
        "version": "1.5"
    },
    "creativeai": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "creavel": {
        "cmdline": [
            "caravel"
        ],
        "modules": [
            "caravel",
            "caravel.ascii_art",
            "caravel.bin",
            "caravel.config",
            "caravel.data",
            "caravel.data.countries",
            "caravel.dataframe",
            "caravel.extract_table_names",
            "caravel.forms",
            "caravel.migrations",
            "caravel.migrations.env",
            "caravel.models",
            "caravel.source_registry",
            "caravel.sql_lab",
            "caravel.utils",
            "caravel.views",
            "caravel.viz"
        ],
        "version": "0.11.0"
    },
    "crecomp": {
        "cmdline": [],
        "modules": [
            "crecomp",
            "crecomp.communication",
            "crecomp.component",
            "crecomp.crecomp",
            "crecomp.crecomp_utility",
            "crecomp.ply",
            "crecomp.ply.lex",
            "crecomp.ply.yacc",
            "crecomp.scrp_lex",
            "crecomp.scrp_parser",
            "crecomp.scrp_yacc",
            "crecomp.software",
            "crecomp.template",
            "crecomp.template.software",
            "crecomp.template.software.bridge",
            "crecomp.template.xillybus",
            "crecomp.userlogic",
            "crecomp.verilog"
        ],
        "version": "1.5.2"
    },
    "cred-client": {
        "cmdline": [],
        "modules": [
            "cred",
            "cred.client"
        ],
        "version": "0.2.6"
    },
    "cred-server": {
        "cmdline": [
            "cred-gen",
            "cred-server"
        ],
        "modules": [
            "cred",
            "cred.app",
            "cred.common",
            "cred.common.util",
            "cred.config",
            "cred.database",
            "cred.exceptions",
            "cred.models",
            "cred.models.apikey",
            "cred.models.client",
            "cred.models.event",
            "cred.models.subscribe",
            "cred.resources",
            "cred.resources.apikeys",
            "cred.resources.auth",
            "cred.resources.clients",
            "cred.resources.clients_events",
            "cred.resources.events",
            "cred.routes",
            "cred.test",
            "cred.test.test_apikeys",
            "cred.test.test_auth",
            "cred.test.test_clients",
            "cred.test.test_clients_events",
            "cred.test.test_events",
            "cred.test.util"
        ],
        "version": "0.3.0"
    },
    "credentials": {
        "cmdline": [],
        "modules": [
            "credentials",
            "credentials.backends",
            "credentials.base"
        ],
        "version": "1.1"
    },
    "credentials-sauce": {
        "cmdline": [],
        "modules": [
            "credentials",
            "credentials.backends",
            "credentials.base"
        ],
        "version": "1.3"
    },
    "credis": {
        "cmdline": [],
        "modules": [
            "credis",
            "credis.redis"
        ],
        "version": "1.0.5"
    },
    "creditcard": {
        "cmdline": [],
        "modules": [
            "creditcard",
            "creditcard.internal"
        ],
        "version": "1.0.2"
    },
    "credits.common": {
        "cmdline": [],
        "modules": [
            "credits",
            "credits.address",
            "credits.digest",
            "credits.hash",
            "credits.interface",
            "credits.key",
            "credits.proof",
            "credits.test",
            "credits.transaction",
            "credits.transform"
        ],
        "version": "3.1.0"
    },
    "credkeep": {
        "cmdline": [],
        "modules": [
            "credkeep",
            "credkeep.cli",
            "credkeep.decrypt",
            "credkeep.encrypt",
            "credkeep.util",
            "tests",
            "tests.test_decrypt",
            "tests.test_encrypt",
            "tests.test_utils"
        ],
        "version": "0.2.1"
    },
    "credo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "credo-manager": {
        "cmdline": [],
        "modules": [
            "credo",
            "credo.actions",
            "credo.amazon",
            "credo.asker",
            "credo.cred_types",
            "credo.cred_types.amazon",
            "credo.cred_types.environment",
            "credo.cred_types.saml",
            "credo.crypto",
            "credo.errors",
            "credo.executor",
            "credo.explorer",
            "credo.helper",
            "credo.overview",
            "credo.pub_keys",
            "credo.server",
            "credo.server.server",
            "credo.structure",
            "credo.structure.account",
            "credo.structure.credential_path",
            "credo.structure.credentials",
            "credo.structure.keys",
            "credo.structure.repository",
            "credo.structure.user",
            "credo.versioning",
            "credo.versioning.base",
            "credo.versioning.git"
        ],
        "version": "0.4.4.4"
    },
    "credolib": {
        "cmdline": [],
        "modules": [
            "credolib",
            "credolib.atsas",
            "credolib.calculation",
            "credolib.initialization",
            "credolib.interpretation",
            "credolib.io",
            "credolib.persistence",
            "credolib.plotting",
            "credolib.procedures",
            "credolib.qualitycontrol",
            "credolib.utils"
        ],
        "version": "1.1.0"
    },
    "creds": {
        "cmdline": [],
        "modules": [
            "creds",
            "creds.constants",
            "creds.plan",
            "creds.ssh",
            "creds.users",
            "creds.utils",
            "external",
            "external.six"
        ],
        "version": "1.0.15"
    },
    "creds3": {
        "cmdline": [
            "creds3.py"
        ],
        "modules": [
            "creds3"
        ],
        "version": "1.0.2"
    },
    "credsmash": {
        "cmdline": [],
        "modules": [
            "credsmash",
            "credsmash.api",
            "credsmash.api.delete",
            "credsmash.api.get",
            "credsmash.api.list",
            "credsmash.api.prune",
            "credsmash.api.put",
            "credsmash.cli",
            "credsmash.cli_dynamodb",
            "credsmash.crypto",
            "credsmash.crypto.aes_ctr",
            "credsmash.crypto.aes_gcm",
            "credsmash.dynamodb_storage_service",
            "credsmash.kms_key_service",
            "credsmash.templates",
            "credsmash.util"
        ],
        "version": "2.2.2"
    },
    "credstash": {
        "cmdline": [
            "credstash.py"
        ],
        "modules": [
            "credstash"
        ],
        "version": "1.13.2"
    },
    "credulous": {
        "cmdline": [],
        "modules": [
            "credulous",
            "credulous.credulous"
        ],
        "version": "0.2.2"
    },
    "creeky-schachtler": {
        "cmdline": [],
        "modules": [
            "creeky_schachtler"
        ],
        "version": "1.1.0"
    },
    "creep": {
        "cmdline": [],
        "modules": [
            "creep",
            "creep.creep",
            "creep.src",
            "creep.src.action",
            "creep.src.definition",
            "creep.src.deployer",
            "creep.src.environment",
            "creep.src.factory",
            "creep.src.logger",
            "creep.src.path",
            "creep.src.process",
            "creep.src.revision",
            "creep.src.sources",
            "creep.src.sources.git",
            "creep.src.sources.hash",
            "creep.src.targets",
            "creep.src.targets.console",
            "creep.src.targets.file",
            "creep.src.targets.ftp",
            "creep.src.targets.ssh"
        ],
        "version": "0.3.4"
    },
    "creepy": {
        "cmdline": [],
        "modules": [
            "creepy",
            "creepy.crawler"
        ],
        "version": "0.1.6"
    },
    "crefi": {
        "cmdline": [],
        "modules": [
            "crefi",
            "crefi_helper",
            "logger",
            "version"
        ],
        "version": "2.0.9"
    },
    "creh-logs": {
        "cmdline": [],
        "modules": [
            "logs",
            "logs.actions",
            "logs.actions.register",
            "logs.admin",
            "logs.contstants",
            "logs.management",
            "logs.management.commands",
            "logs.management.commands.archived_logs",
            "logs.management.commands.delete_logs",
            "logs.migrations",
            "logs.migrations.0001_initial",
            "logs.migrations.0002_log_user",
            "logs.migrations.0003_auto_20170428_1105",
            "logs.models",
            "logs.tests",
            "logs.tests.test_actions",
            "logs.tests.test_commands",
            "logs.tests.test_utils",
            "logs.utils"
        ],
        "version": "0.1.11"
    },
    "creh-pages": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "creh-urls": {
        "cmdline": [],
        "modules": [
            "urls",
            "urls.actions",
            "urls.actions.register",
            "urls.admin",
            "urls.constants",
            "urls.middleware",
            "urls.migrations",
            "urls.migrations.0001_initial",
            "urls.models",
            "urls.signals",
            "urls.tests",
            "urls.tests.test_actions",
            "urls.tests.urls",
            "urls.tests.views"
        ],
        "version": "0.1.2"
    },
    "creh-urls-redirec": {
        "cmdline": [],
        "modules": [
            "urls",
            "urls.actions",
            "urls.actions.register",
            "urls.admin",
            "urls.constants",
            "urls.middleware",
            "urls.migrations",
            "urls.migrations.0001_initial",
            "urls.migrations.0002_auto_20170509_1807",
            "urls.migrations.0003_auto_20170509_1808",
            "urls.migrations.0004_auto_20170515_2019",
            "urls.models",
            "urls.signals",
            "urls.tests",
            "urls.tests.test_actions",
            "urls.tests.urls",
            "urls.tests.views"
        ],
        "version": "0.1.8"
    },
    "creole": {
        "cmdline": [
            "creole2html.py"
        ],
        "modules": [
            "creole",
            "creole.document",
            "creole.genshi_emitter",
            "creole.html_emitter",
            "creole.parser",
            "creole.rules"
        ],
        "version": "1.2"
    },
    "creoleparser": {
        "cmdline": [],
        "modules": [
            "creoleparser",
            "creoleparser.core",
            "creoleparser.dialects",
            "creoleparser.elements"
        ],
        "version": "0.7.4"
    },
    "crepes-bretonnes": {
        "cmdline": [],
        "modules": [
            "crepes_bretonnes",
            "crepes_bretonnes.metaclass2"
        ],
        "version": "42.0"
    },
    "crepo": {
        "cmdline": [],
        "modules": [
            "crepo",
            "git_command",
            "git_repo",
            "manifest",
            "test",
            "trace"
        ],
        "version": "0.1.8"
    },
    "crepopy": {
        "cmdline": [],
        "modules": [
            "crepopy",
            "crepopy.add_key",
            "crepopy.create",
            "crepopy.list_repos",
            "crepopy.main"
        ],
        "version": "0.0.4a"
    },
    "crest": {
        "cmdline": [],
        "modules": [
            "crest",
            "crest.cli",
            "crest.history",
            "crest.tests",
            "crest.tests.test_cli"
        ],
        "version": "0.0.1"
    },
    "crew": {
        "cmdline": [],
        "modules": [
            "crew",
            "crew.exceptions",
            "crew.master",
            "crew.master.threaded_client",
            "crew.master.tornado",
            "crew.master.tornado.adapter",
            "crew.master.tornado.client",
            "crew.master.tornado.multitask",
            "crew.worker",
            "crew.worker.context",
            "crew.worker.handler",
            "crew.worker.listener",
            "crew.worker.pubsub",
            "crew.worker.run",
            "crew.worker.task",
            "crew.worker.thread"
        ],
        "version": "0.9.2"
    },
    "crfst": {
        "cmdline": [],
        "modules": [
            "crfst",
            "crfst.canonical",
            "crfst.eval",
            "crfst.features",
            "crfst.ftex",
            "crfst.readers",
            "crfst.tagger",
            "crfst.testis",
            "crfst.testis2",
            "crfst.utils",
            "crfst.winfeatures"
        ],
        "version": "0.2"
    },
    "cri": {
        "cmdline": [
            "cri"
        ],
        "modules": [
            "cri",
            "cri.api_pb2",
            "cri.api_pb2_grpc",
            "cri.gogo_pb2"
        ],
        "version": "0.1.5"
    },
    "crianza": {
        "cmdline": [],
        "modules": [
            "crianza",
            "crianza.compiler",
            "crianza.errors",
            "crianza.genetic",
            "crianza.instructions",
            "crianza.interpreter",
            "crianza.native",
            "crianza.optimizer",
            "crianza.parser",
            "crianza.repl",
            "crianza.stack",
            "crianza.tokenizer"
        ],
        "version": "0.1.8"
    },
    "crib": {
        "cmdline": [],
        "modules": [
            "crib",
            "crib.command",
            "crib.crib"
        ],
        "version": "0.2.3"
    },
    "cric": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cric-score": {
        "cmdline": [],
        "modules": [
            "cric_score",
            "cric_score.main"
        ],
        "version": "0.1.2"
    },
    "crick": {
        "cmdline": [],
        "modules": [
            "crick",
            "crick._version",
            "crick.tests",
            "crick.tests.test_space_saving",
            "crick.tests.test_stats",
            "crick.tests.test_tdigest"
        ],
        "version": "0.0.3"
    },
    "cricket": {
        "cmdline": [],
        "modules": [
            "cricket",
            "cricket.compat",
            "cricket.django",
            "cricket.django.discoverer",
            "cricket.django.django_runtests",
            "cricket.django.executor",
            "cricket.django.model",
            "cricket.events",
            "cricket.executor",
            "cricket.main",
            "cricket.model",
            "cricket.pipes",
            "cricket.unittest",
            "cricket.unittest.discoverer",
            "cricket.unittest.executor",
            "cricket.unittest.model",
            "cricket.view",
            "tests",
            "tests.test_models",
            "tests.test_unit_integration"
        ],
        "version": "0.2.5"
    },
    "cricket-score": {
        "cmdline": [],
        "modules": [
            "cricket-score",
            "cricket-score.cricscore"
        ],
        "version": "1.0"
    },
    "cricket-score-indicator": {
        "cmdline": [
            "cricscore_indicator"
        ],
        "modules": [
            "cricket_score_indicator",
            "cricket_score_indicator.cric_indicator",
            "cricket_score_indicator.espn_scrap"
        ],
        "version": "4.5"
    },
    "cricketlive": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cricketlivescore": {
        "cmdline": [],
        "modules": [
            "cricketlivescore",
            "cricketlivescore.score"
        ],
        "version": "1.1.2"
    },
    "cricketscore": {
        "cmdline": [
            "cricketscore"
        ],
        "modules": [],
        "version": "2.0"
    },
    "criclive": {
        "cmdline": [],
        "modules": [
            "criclive",
            "criclive.main"
        ],
        "version": "0.1.0"
    },
    "cricri": {
        "cmdline": [],
        "modules": [
            "cricri",
            "cricri.__version__",
            "cricri.algo",
            "cricri.condition",
            "cricri.cricri",
            "cricri.http_client",
            "cricri.tcp_client"
        ],
        "version": "1.1"
    },
    "cricscore": {
        "cmdline": [],
        "modules": [
            "cricscore"
        ],
        "version": "0.1"
    },
    "crimereports": {
        "cmdline": [],
        "modules": [
            "crimereports"
        ],
        "version": "1.0.0"
    },
    "crimg": {
        "cmdline": [],
        "modules": [
            "crimg",
            "crimg.api",
            "crimg.bin"
        ],
        "version": "0.0.3"
    },
    "criminal": {
        "cmdline": [],
        "modules": [
            "criminal"
        ],
        "version": "0.1.0"
    },
    "crimson": {
        "cmdline": [],
        "modules": [
            "crimson",
            "crimson.fastqc",
            "crimson.flagstat",
            "crimson.fusioncatcher",
            "crimson.main",
            "crimson.picard",
            "crimson.star",
            "crimson.star_fusion",
            "crimson.utils",
            "crimson.vep"
        ],
        "version": "0.3.0"
    },
    "crimson-antispam": {
        "cmdline": [],
        "modules": [
            "antispam",
            "antispam.admin",
            "antispam.apps",
            "antispam.context_processors",
            "antispam.decorators",
            "antispam.helpers",
            "antispam.middlewares",
            "antispam.models",
            "antispam.views"
        ],
        "version": "0.5.0"
    },
    "cripto": {
        "cmdline": [],
        "modules": [
            "cripto"
        ],
        "version": "1.0a"
    },
    "crirm": {
        "cmdline": [],
        "modules": [
            "crirm",
            "crirm.criteria",
            "crirm.main",
            "crirm.util"
        ],
        "version": "0.3"
    },
    "crisp": {
        "cmdline": [],
        "modules": [
            "crisp",
            "crisp.calibration",
            "crisp.camera",
            "crisp.cli",
            "crisp.imu",
            "crisp.l3g4200d",
            "crisp.pose",
            "crisp.ransac",
            "crisp.remove_slp",
            "crisp.rotations",
            "crisp.stream",
            "crisp.timesync",
            "crisp.tracking",
            "crisp.videoslice",
            "crisp.znccpyr"
        ],
        "version": "2.2"
    },
    "crispor-cli": {
        "cmdline": [],
        "modules": [
            "crispor_cli",
            "crispor_cli.crispor",
            "crispor_cli.functions",
            "crispor_cli.functions.basic_imports",
            "crispor_cli.functions.batch_functions",
            "crispor_cli.functions.bio_functions",
            "crispor_cli.functions.cleanup_functions",
            "crispor_cli.functions.common_functions",
            "crispor_cli.functions.constants",
            "crispor_cli.functions.crisporEffScores",
            "crispor_cli.functions.doenchScore",
            "crispor_cli.functions.fasta_functions",
            "crispor_cli.functions.finishing_functions",
            "crispor_cli.functions.get_offtargets",
            "crispor_cli.functions.parser_functions",
            "crispor_cli.functions.scoring_functions",
            "crispor_cli.functions.sequence_helper_functions",
            "crispor_cli.functions.submit_process",
            "crispor_cli.microHomScore"
        ],
        "version": "0.1.1"
    },
    "crispresso": {
        "cmdline": [],
        "modules": [
            "CRISPResso",
            "CRISPResso.CRISPRessoCORE",
            "CRISPResso.CRISPRessoCompareCORE",
            "CRISPResso.CRISPRessoCountCORE",
            "CRISPResso.CRISPRessoPooledCORE",
            "CRISPResso.CRISPRessoPooledWGSCompareCORE",
            "CRISPResso.CRISPRessoWGSCORE"
        ],
        "version": "1.0.5"
    },
    "crispy": {
        "cmdline": [
            "crispy"
        ],
        "modules": [
            "crispy",
            "crispy.gui",
            "crispy.gui.main",
            "crispy.gui.models",
            "crispy.gui.models.listmodel",
            "crispy.gui.models.treemodel",
            "crispy.gui.quanty",
            "crispy.gui.views",
            "crispy.gui.views.treeview",
            "crispy.gui.widgets",
            "crispy.gui.widgets.combobox",
            "crispy.gui.widgets.plotwidget",
            "crispy.resources"
        ],
        "version": "0.2.0"
    },
    "crispy-forms-foundation": {
        "cmdline": [],
        "modules": [
            "crispy_forms_foundation",
            "crispy_forms_foundation.forms",
            "crispy_forms_foundation.layout",
            "crispy_forms_foundation.layout.base",
            "crispy_forms_foundation.layout.buttons",
            "crispy_forms_foundation.layout.containers",
            "crispy_forms_foundation.layout.fields",
            "crispy_forms_foundation.layout.grid",
            "crispy_forms_foundation.models",
            "crispy_forms_foundation.settings",
            "crispy_forms_foundation.templatetags",
            "crispy_forms_foundation.templatetags.crispy_forms_foundation_field"
        ],
        "version": "0.6.0"
    },
    "crispy-forms-foundation-demo": {
        "cmdline": [],
        "modules": [
            "crispy_forms_foundation_demo",
            "crispy_forms_foundation_demo.crispies",
            "crispy_forms_foundation_demo.forms",
            "crispy_forms_foundation_demo.models",
            "crispy_forms_foundation_demo.urls",
            "crispy_forms_foundation_demo.views"
        ],
        "version": "0.5.0"
    },
    "crispy-forms-materialize": {
        "cmdline": [],
        "modules": [
            "crispy_forms_materialize",
            "crispy_forms_materialize.layout",
            "crispy_forms_materialize.models"
        ],
        "version": "0.1"
    },
    "crispy-forms-semantic-ui": {
        "cmdline": [],
        "modules": [
            "crispy_forms_semantic_ui",
            "crispy_forms_semantic_ui.apps"
        ],
        "version": "0.2.0"
    },
    "crispy-semantic-ui": {
        "cmdline": [],
        "modules": [
            "semantic_ui",
            "semantic_ui.apps",
            "semantic_ui.models",
            "semantic_ui.patch",
            "semantic_ui.templatetags",
            "semantic_ui.templatetags.semantic_ui"
        ],
        "version": "1.0.2"
    },
    "crispy-templates": {
        "cmdline": [],
        "modules": [
            "crispy_templates",
            "crispy_templates.apps",
            "crispy_templates.models",
            "crispy_templates.urls",
            "crispy_templates.views"
        ],
        "version": "0.2.0"
    },
    "crispys-webkit": {
        "cmdline": [],
        "modules": [
            "crispys_webkit",
            "crispys_webkit.exceptions",
            "crispys_webkit.objextend",
            "crispys_webkit.objprope",
            "crispys_webkit.objverify",
            "crispys_webkit.tests",
            "crispys_webkit.urls"
        ],
        "version": "0.1.141"
    },
    "critbot": {
        "cmdline": [
            "critvisor",
            "stdcrit"
        ],
        "modules": [
            "critbot",
            "critbot.core",
            "critbot.plugins",
            "critbot.plugins.email",
            "critbot.plugins.slack",
            "critbot.plugins.syslog"
        ],
        "version": "0.1.19"
    },
    "critic": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "criticalpath": {
        "cmdline": [],
        "modules": [
            "criticalpath"
        ],
        "version": "0.1.0"
    },
    "critics": {
        "cmdline": [],
        "modules": [
            "critics",
            "critics.commands",
            "critics.compat",
            "critics.core",
            "critics.i18n",
            "critics.parsers",
            "critics.transport"
        ],
        "version": "0.2.1"
    },
    "critter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crlbuilder": {
        "cmdline": [],
        "modules": [
            "crlbuilder"
        ],
        "version": "0.10.2"
    },
    "crlibm": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.3"
    },
    "crm114": {
        "cmdline": [],
        "modules": [
            "crm114",
            "crm114.classifier"
        ],
        "version": "2.0.2"
    },
    "crmfg-utils": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crmngr": {
        "cmdline": [],
        "modules": [
            "crmngr",
            "crmngr.cache",
            "crmngr.cli",
            "crmngr.config",
            "crmngr.controlrepository",
            "crmngr.cprint",
            "crmngr.forgeapi",
            "crmngr.git",
            "crmngr.puppetfile",
            "crmngr.utils",
            "crmngr.version"
        ],
        "version": "2.0.1"
    },
    "crmsh": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "croc": {
        "cmdline": [
            "croc-area",
            "croc-average",
            "croc-bedroc",
            "croc-curve"
        ],
        "modules": [
            "croc",
            "croc.area",
            "croc.average",
            "croc.bedroc",
            "croc.curve"
        ],
        "version": "1.1.26"
    },
    "crochet": {
        "cmdline": [],
        "modules": [
            "crochet",
            "crochet._eventloop",
            "crochet._resultstore",
            "crochet._shutdown",
            "crochet._util",
            "crochet._version",
            "crochet.tests",
            "crochet.tests.test_api",
            "crochet.tests.test_process",
            "crochet.tests.test_resultstore",
            "crochet.tests.test_setup",
            "crochet.tests.test_shutdown",
            "crochet.tests.test_util"
        ],
        "version": "1.6.0"
    },
    "crockford": {
        "cmdline": [],
        "modules": [
            "crockford",
            "package",
            "package.errors",
            "package.info",
            "package.unittest"
        ],
        "version": "0.0.2"
    },
    "croco": {
        "cmdline": [],
        "modules": [
            "croco",
            "croco._crocodile_billing"
        ],
        "version": "0.0.2"
    },
    "crocodoc": {
        "cmdline": [],
        "modules": [
            "crocodoc",
            "crocodoc.document",
            "crocodoc.download",
            "crocodoc.session",
            "crocodoc.version"
        ],
        "version": "0.1.1"
    },
    "crocus": {
        "cmdline": [],
        "modules": [
            "crocus",
            "crocus.application",
            "crocus.errors",
            "crocus.helpers",
            "crocus.request",
            "crocus.response",
            "crocus.server"
        ],
        "version": "0.3.0"
    },
    "croesus": {
        "cmdline": [],
        "modules": [
            "croesus_core",
            "croesus_core.admin",
            "croesus_core.admin.accounting",
            "croesus_core.admin.accounting.account",
            "croesus_core.admin.bank",
            "croesus_core.admin.bank.statement",
            "croesus_core.admin.bank.transaction",
            "croesus_core.admin.list_filter",
            "croesus_core.admin.membership",
            "croesus_core.admin.membership.debt",
            "croesus_core.admin.person",
            "croesus_core.admin.person.person",
            "croesus_core.apps",
            "croesus_core.exceptions",
            "croesus_core.exceptions.membership_fee_agreement",
            "croesus_core.exceptions.membership_fee_debt",
            "croesus_core.forms",
            "croesus_core.management",
            "croesus_core.management.commands",
            "croesus_core.management.commands.croesus_booking_wizard",
            "croesus_core.management.commands.croesus_dump",
            "croesus_core.management.commands.croesus_dump_person_data",
            "croesus_core.management.commands.croesus_import_statement",
            "croesus_core.management.commands.croesus_load",
            "croesus_core.management.commands.croesus_report",
            "croesus_core.migrations",
            "croesus_core.migrations.0001_initial",
            "croesus_core.migrations.0002_Account__delete_protection",
            "croesus_core.migrations.0003_switch_from_Hibiscus_to_MT940",
            "croesus_core.migrations.0004_Booking__add_date",
            "croesus_core.models",
            "croesus_core.models.accounting",
            "croesus_core.models.accounting.account",
            "croesus_core.models.accounting.booking",
            "croesus_core.models.bank",
            "croesus_core.models.bank.statement",
            "croesus_core.models.bank.transaction",
            "croesus_core.models.base",
            "croesus_core.models.membership",
            "croesus_core.models.membership.agreement",
            "croesus_core.models.membership.debt",
            "croesus_core.models.membership.inactive_rule",
            "croesus_core.models.person",
            "croesus_core.models.person.account",
            "croesus_core.models.person.person",
            "croesus_core.reports",
            "croesus_core.reports.calculation",
            "croesus_core.reports.report",
            "croesus_core.settings",
            "croesus_core.utils",
            "croesus_core.utils.ascii_table",
            "croesus_core.utils.buffers",
            "croesus_core.utils.commands",
            "croesus_core.utils.iban",
            "croesus_core.utils.mt940",
            "croesus_core.utils.serializers",
            "croesus_core.utils.shell",
            "croesus_core.utils.time"
        ],
        "version": "0.2"
    },
    "crog": {
        "cmdline": [],
        "modules": [
            "crog",
            "crog.crog"
        ],
        "version": "0.0.2"
    },
    "croi": {
        "cmdline": [],
        "modules": [
            "croi",
            "croi.collection",
            "croi.decorators",
            "croi.generators",
            "croi.reflection"
        ],
        "version": "0.1.1"
    },
    "croissance": {
        "cmdline": [],
        "modules": [
            "croissance",
            "croissance.estimation",
            "croissance.estimation.defaults",
            "croissance.estimation.outliers",
            "croissance.estimation.ranking",
            "croissance.estimation.regression",
            "croissance.estimation.smoothing",
            "croissance.estimation.smoothing.segments",
            "croissance.estimation.util",
            "croissance.figures",
            "croissance.formats",
            "croissance.formats.input",
            "croissance.formats.output"
        ],
        "version": "1.1.0"
    },
    "croissant": {
        "cmdline": [],
        "modules": [
            "croissant",
            "croissant.bin",
            "croissant.language",
            "croissant.language.exceptions",
            "croissant.language.exceptions.syntax",
            "croissant.language.keyword",
            "croissant.language.keyword.base",
            "croissant.language.keyword.meta",
            "croissant.language.keyword.scenario_and",
            "croissant.language.keyword.scenario_given",
            "croissant.language.keyword.scenario_then",
            "croissant.language.keyword.scenario_title",
            "croissant.language.keyword.scenario_when",
            "croissant.language.keyword.story_title",
            "croissant.organization",
            "croissant.organization.block",
            "croissant.output",
            "croissant.output.base",
            "croissant.output.console",
            "croissant.step",
            "croissant.step.base",
            "croissant.step.exceptions",
            "croissant.step.exceptions.assertion",
            "croissant.step.exceptions.step",
            "croissant.step.functions",
            "croissant.step.meta",
            "croissant.story",
            "croissant.story.scenario",
            "croissant.story.story",
            "croissant.story.story_set",
            "croissant.tests"
        ],
        "version": "0.4"
    },
    "crom": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crom-tools": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cromlech": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cromlech.container": {
        "cmdline": [],
        "modules": [
            "cromlech",
            "cromlech.container",
            "cromlech.container.components",
            "cromlech.container.constraints",
            "cromlech.container.contained",
            "cromlech.container.interfaces",
            "cromlech.container.size",
            "cromlech.container.tests",
            "cromlech.container.tests.test_constraints",
            "cromlech.container.tests.test_contained",
            "cromlech.container.tests.test_contained_event",
            "cromlech.container.tests.test_container",
            "cromlech.container.tests.test_namechooser",
            "cromlech.container.tests.test_setitem",
            "cromlech.container.tests.test_size",
            "cromlech.container.tests.test_sublocations",
            "cromlech.container.tests.test_uncontained"
        ],
        "version": "0.1"
    },
    "cromlech.sqlalchemy": {
        "cmdline": [],
        "modules": [
            "cromlech",
            "cromlech.sqlalchemy",
            "cromlech.sqlalchemy.components",
            "cromlech.sqlalchemy.controlled"
        ],
        "version": "0.4"
    },
    "cromlech.wsgistate": {
        "cmdline": [],
        "modules": [
            "cromlech",
            "cromlech.wsgistate",
            "cromlech.wsgistate.controlled",
            "cromlech.wsgistate.middleware",
            "cromlech.wsgistate.timeout"
        ],
        "version": "0.3b2"
    },
    "cromtool": {
        "cmdline": [
            "cromtool"
        ],
        "modules": [
            "cromtool",
            "cromtool.main"
        ],
        "version": "1.4"
    },
    "cromulatron": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cromulent": {
        "cmdline": [],
        "modules": [
            "cromulent",
            "cromulent.extra",
            "cromulent.model",
            "cromulent.vocab"
        ],
        "version": "0.2.7"
    },
    "cron": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cron-descriptor": {
        "cmdline": [],
        "modules": [
            "cron_descriptor",
            "cron_descriptor.CasingTypeEnum",
            "cron_descriptor.DescriptionTypeEnum",
            "cron_descriptor.Exception",
            "cron_descriptor.ExpressionDescriptor",
            "cron_descriptor.ExpressionParser",
            "cron_descriptor.GetText",
            "cron_descriptor.Options",
            "cron_descriptor.StringBuilder",
            "tests",
            "tests.TestApi",
            "tests.TestCase",
            "tests.TestCasing",
            "tests.TestExceptions",
            "tests.TestFormats",
            "tests.TestImport",
            "tests.TestLocale"
        ],
        "version": "1.2.8"
    },
    "cron-runner": {
        "cmdline": [],
        "modules": [
            "cronrunner",
            "cronrunner.base",
            "cronrunner.config",
            "cronrunner.cron",
            "cronrunner.database",
            "cronrunner.filelock",
            "cronrunner.main",
            "cronrunner.notification",
            "cronrunner.registry"
        ],
        "version": "0.0.2"
    },
    "cron-sentry": {
        "cmdline": [],
        "modules": [
            "cron_sentry",
            "cron_sentry.runner",
            "cron_sentry.version"
        ],
        "version": "0.7.0"
    },
    "cron-wrap": {
        "cmdline": [
            "cwrap.py"
        ],
        "modules": [],
        "version": "0.6.3"
    },
    "cron.py": {
        "cmdline": [],
        "modules": [
            "cron",
            "cron.tab"
        ],
        "version": "0.0.5"
    },
    "croncoat": {
        "cmdline": [],
        "modules": [
            "croncoat",
            "croncoat.cc",
            "croncoat.cc.cronwrapper",
            "croncoat.cc.expiringcommand",
            "croncoat.cc.helper",
            "croncoat.cc.mailbackend",
            "croncoat.scripts",
            "croncoat.scripts.ccscript",
            "croncoat.test",
            "croncoat.test.test_cw"
        ],
        "version": "0.3.1"
    },
    "crondeamon": {
        "cmdline": [],
        "modules": [
            "crondeamon",
            "crondeamon.common",
            "crondeamon.common.valid_configfile",
            "crondeamon.common.valid_mysql",
            "crondeamon.sbin",
            "crondeamon.sbin._kill",
            "crondeamon.sbin.main",
            "crondeamon.slave",
            "crondeamon.slave.service",
            "crondeamon.ui",
            "crondeamon.ui.cap",
            "crondeamon.ui.cap.cap",
            "crondeamon.ui.cap.cap.admin",
            "crondeamon.ui.cap.cap.cron",
            "crondeamon.ui.cap.cap.cron.admin",
            "crondeamon.ui.cap.cap.cron.models",
            "crondeamon.ui.cap.cap.cron.sites",
            "crondeamon.ui.cap.cap.cron.utils",
            "crondeamon.ui.cap.cap.cron.views",
            "crondeamon.ui.cap.cap.models",
            "crondeamon.ui.cap.cap.settings",
            "crondeamon.ui.cap.cap.task",
            "crondeamon.ui.cap.cap.task.admin",
            "crondeamon.ui.cap.cap.task.models",
            "crondeamon.ui.cap.cap.task.sites",
            "crondeamon.ui.cap.cap.task.utils",
            "crondeamon.ui.cap.cap.task.views",
            "crondeamon.ui.cap.cap.urls",
            "crondeamon.ui.cap.cap.user_manager",
            "crondeamon.ui.cap.cap.user_manager.sites",
            "crondeamon.ui.cap.cap.user_manager.utils",
            "crondeamon.ui.cap.cap.user_manager.views",
            "crondeamon.ui.cap.cap.utils",
            "crondeamon.ui.cap.cap.views",
            "crondeamon.ui.cap.cap.wsgi",
            "crondeamon.ui.cap.django_wsgi",
            "crondeamon.ui.cap.handle",
            "crondeamon.ui.cap.manage",
            "crondeamon.ui.cap.serv",
            "twisted.plugins.main_plugin"
        ],
        "version": "0.1.3"
    },
    "crondog-client": {
        "cmdline": [],
        "modules": [
            "crondogclient",
            "crondogclient.core",
            "crondogclient.crondog"
        ],
        "version": "2.0.0dev4"
    },
    "crone": {
        "cmdline": [],
        "modules": [
            "crone"
        ],
        "version": "1.0.3"
    },
    "cronen": {
        "cmdline": [],
        "modules": [
            "cronen",
            "cronen.base",
            "cronen.scheduler",
            "cronen.tests",
            "cronen.tests.cronen",
            "cronen.tests.cronen.test_scheduler",
            "cronen.tests.cronen.test_trigger",
            "cronen.trigger"
        ],
        "version": "1.1"
    },
    "cronex": {
        "cmdline": [],
        "modules": [
            "cronex",
            "cronex.tests"
        ],
        "version": "0.1.1"
    },
    "cronfed": {
        "cmdline": [],
        "modules": [
            "cronfed"
        ],
        "version": "0.2.1"
    },
    "cronicle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cronify": {
        "cmdline": [],
        "modules": [
            "cronify",
            "cronify.common",
            "cronify.cronify",
            "pythonlibraries",
            "pythonlibraries.tests",
            "pythonlibraries.tests.test_threadpool",
            "pythonlibraries.threadpool"
        ],
        "version": "0.13"
    },
    "croniter": {
        "cmdline": [],
        "modules": [
            "croniter",
            "croniter.croniter",
            "croniter.tests",
            "croniter.tests.base",
            "croniter.tests.test_croniter",
            "croniter.tests.test_speed"
        ],
        "version": "0.3.16"
    },
    "croniter-hpx": {
        "cmdline": [],
        "modules": [
            "croniter",
            "croniter.croniter",
            "croniter.tests",
            "croniter.tests.base",
            "croniter.tests.test_croniter",
            "croniter.tests.test_speed"
        ],
        "version": "0.3.12.dev0"
    },
    "cronitor": {
        "cmdline": [],
        "modules": [
            "cronitor",
            "cronitor.monitor"
        ],
        "version": "1.0.2"
    },
    "cronlib": {
        "cmdline": [],
        "modules": [
            "cronlib",
            "cronlib.vixie",
            "cronlib.vixie.CronJob",
            "cronlib.vixie.CronSchedule",
            "cronlib.vixie.CronTypes"
        ],
        "version": "0.1b"
    },
    "cronlikescheduler": {
        "cmdline": [],
        "modules": [
            "schedule"
        ],
        "version": "0.5.2"
    },
    "cronmon": {
        "cmdline": [
            "cronmon"
        ],
        "modules": [
            "cronmon",
            "cronmon._version",
            "cronmon.cli",
            "cronmon.log",
            "cronmon.run",
            "cronmon.server"
        ],
        "version": "0.2.1"
    },
    "cronofy": {
        "cmdline": [],
        "modules": [
            "cronofy",
            "cronofy.resources",
            "cronofy.test",
            "cronofy.test.test_resources",
            "cronofy.utils"
        ],
        "version": "0.0.4"
    },
    "cronoplug": {
        "cmdline": [],
        "modules": [
            "cronoplug",
            "cronoplug.driver",
            "cronoplug.plugin",
            "cronoplug.test_driver",
            "cronoplug.test_plugin"
        ],
        "version": "0.0.1"
    },
    "cronos": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cronosparser": {
        "cmdline": [],
        "modules": [
            "cronos",
            "cronos.cli",
            "cronos.constants",
            "cronos.parser"
        ],
        "version": "0.2"
    },
    "cronq": {
        "cmdline": [],
        "modules": [
            "cronq",
            "cronq.backends",
            "cronq.backends.mysql",
            "cronq.config",
            "cronq.injector",
            "cronq.interval_parser",
            "cronq.logsetup",
            "cronq.models",
            "cronq.models.base",
            "cronq.models.category",
            "cronq.models.event",
            "cronq.models.job",
            "cronq.queue_connection",
            "cronq.rabbit_connection",
            "cronq.result_aggregator",
            "cronq.runner",
            "cronq.utils",
            "cronq.web"
        ],
        "version": "0.17.1"
    },
    "cronquot": {
        "cmdline": [],
        "modules": [
            "cronquot",
            "cronquot.cronquot"
        ],
        "version": "0.1.0"
    },
    "cronsingleton": {
        "cmdline": [],
        "modules": [
            "cronsingleton",
            "cronsingleton.script"
        ],
        "version": "1.0"
    },
    "crontab": {
        "cmdline": [],
        "modules": [
            "crontab",
            "crontab._crontab"
        ],
        "version": "0.21.3"
    },
    "crontab-ng": {
        "cmdline": [],
        "modules": [
            "crontab",
            "crontab._crontab"
        ],
        "version": "0.20.3"
    },
    "crontabber": {
        "cmdline": [],
        "modules": [
            "crontabber",
            "crontabber.app",
            "crontabber.base",
            "crontabber.connection_factory",
            "crontabber.datetimeutil",
            "crontabber.dbapi2_util",
            "crontabber.generic_app",
            "crontabber.mixins",
            "crontabber.tests",
            "crontabber.tests.base",
            "crontabber.tests.sampleapp",
            "crontabber.tests.test_crontab_mixins",
            "crontabber.tests.test_crontabber",
            "crontabber.tests.test_datetimeutil",
            "crontabber.tests.test_subprocess_mixin",
            "crontabber.tests.test_transaction_executor",
            "crontabber.transaction_executor"
        ],
        "version": "0.18.1"
    },
    "crontabparser": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crontub": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cronus": {
        "cmdline": [],
        "modules": [
            "cronus",
            "cronus.beat",
            "cronus.test_beat",
            "cronus.test_timeout",
            "cronus.timeout"
        ],
        "version": "0.2"
    },
    "cronutils": {
        "cmdline": [],
        "modules": [
            "cronutils",
            "cronutils.error_handler",
            "cronutils.task_runner"
        ],
        "version": "0.2.0"
    },
    "cronwatch": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cronwrap": {
        "cmdline": [],
        "modules": [],
        "version": "1.4"
    },
    "cropfaces": {
        "cmdline": [
            "cropfaces",
            "cropfaces.cmd",
            "cropfoldersquares",
            "cropfoldersquares.cmd",
            "cropvideoframes",
            "cropvideoframes.cmd"
        ],
        "modules": [
            "cropfaces",
            "cropfaces.cropfaces",
            "cropfaces.tool",
            "cropfaces.toolFolderSquares",
            "cropfaces.toolVideoFrames"
        ],
        "version": "0.0.76"
    },
    "cropper": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cropresize": {
        "cmdline": [],
        "modules": [
            "cropresize"
        ],
        "version": "0.1.6"
    },
    "cropresize2": {
        "cmdline": [],
        "modules": [
            "cropresize2"
        ],
        "version": "0.2.0"
    },
    "cropy": {
        "cmdline": [
            "cropy"
        ],
        "modules": [
            "cropy",
            "cropy.entropy"
        ],
        "version": "0.1"
    },
    "cross": {
        "cmdline": [],
        "modules": [
            "cross",
            "cross.cross"
        ],
        "version": "1.0.3"
    },
    "cross3d": {
        "cmdline": [],
        "modules": [
            "cross3d",
            "cross3d.abstract",
            "cross3d.abstract.abstractapplication",
            "cross3d.abstract.abstractcontainer",
            "cross3d.abstract.abstractexceptionrouter",
            "cross3d.abstract.abstractgroup",
            "cross3d.abstract.abstractscene",
            "cross3d.abstract.abstractsceneanimationcontroller",
            "cross3d.abstract.abstractsceneanimationkey",
            "cross3d.abstract.abstractsceneatmospheric",
            "cross3d.abstract.abstractscenecache",
            "cross3d.abstract.abstractscenecamera",
            "cross3d.abstract.abstractscenefx",
            "cross3d.abstract.abstractscenelayer",
            "cross3d.abstract.abstractscenelayergroup",
            "cross3d.abstract.abstractscenemap",
            "cross3d.abstract.abstractscenematerial",
            "cross3d.abstract.abstractscenemodel",
            "cross3d.abstract.abstractsceneobject",
            "cross3d.abstract.abstractscenepropset",
            "cross3d.abstract.abstractscenerenderer",
            "cross3d.abstract.abstractscenerenderpass",
            "cross3d.abstract.abstractsceneviewport",
            "cross3d.abstract.abstractscenewrapper",
            "cross3d.abstract.abstractundocontext",
            "cross3d.abstract.abstractuserprops",
            "cross3d.abstract.collection",
            "cross3d.abstract.external",
            "cross3d.classes",
            "cross3d.classes.clipboard",
            "cross3d.classes.dispatch",
            "cross3d.classes.dispatchprocess",
            "cross3d.classes.exceptions",
            "cross3d.classes.fcurve",
            "cross3d.classes.filesequence",
            "cross3d.classes.flipbook",
            "cross3d.classes.framerange",
            "cross3d.classes.signalinspector",
            "cross3d.classes.timecode",
            "cross3d.classes.valuerange",
            "cross3d.constants",
            "cross3d.enum",
            "cross3d.maya",
            "cross3d.maya.collection",
            "cross3d.maya.external",
            "cross3d.maya.mayaapplication",
            "cross3d.maya.mayaexceptionrouter",
            "cross3d.maya.mayagroup",
            "cross3d.maya.mayascene",
            "cross3d.maya.mayascenecamera",
            "cross3d.maya.mayascenematerial",
            "cross3d.maya.mayascenemodel",
            "cross3d.maya.mayasceneobject",
            "cross3d.maya.mayasceneviewport",
            "cross3d.maya.mayascenewrapper",
            "cross3d.maya.mayauserprops",
            "cross3d.migrate",
            "cross3d.migrate.dsofile",
            "cross3d.migrate.imagesequence",
            "cross3d.migrate.winregistry",
            "cross3d.motionbuilder",
            "cross3d.motionbuilder.collection",
            "cross3d.motionbuilder.external",
            "cross3d.motionbuilder.motionbuilderapplication",
            "cross3d.motionbuilder.motionbuilderscene",
            "cross3d.softimage",
            "cross3d.softimage.blur3dplugin",
            "cross3d.softimage.collection",
            "cross3d.softimage.external",
            "cross3d.softimage.softimageapplication",
            "cross3d.softimage.softimagegroup",
            "cross3d.softimage.softimagescene",
            "cross3d.softimage.softimagescenecamera",
            "cross3d.softimage.softimagescenemodel",
            "cross3d.softimage.softimagesceneobject",
            "cross3d.softimage.softimagescenerenderpass",
            "cross3d.softimage.softimagesceneviewport",
            "cross3d.softimage.softimagescenewrapper",
            "cross3d.softimage.softimageundocontext",
            "cross3d.softimage.softimageuserprops",
            "cross3d.studiomax",
            "cross3d.studiomax.collection",
            "cross3d.studiomax.external",
            "cross3d.studiomax.rescaletime",
            "cross3d.studiomax.studiomaxapplication",
            "cross3d.studiomax.studiomaxgroup",
            "cross3d.studiomax.studiomaxscene",
            "cross3d.studiomax.studiomaxsceneanimationcontroller",
            "cross3d.studiomax.studiomaxsceneanimationkey",
            "cross3d.studiomax.studiomaxsceneatmospheric",
            "cross3d.studiomax.studiomaxscenecache",
            "cross3d.studiomax.studiomaxscenecamera",
            "cross3d.studiomax.studiomaxscenefx",
            "cross3d.studiomax.studiomaxscenelayer",
            "cross3d.studiomax.studiomaxscenelayergroup",
            "cross3d.studiomax.studiomaxscenemap",
            "cross3d.studiomax.studiomaxscenematerial",
            "cross3d.studiomax.studiomaxscenemodel",
            "cross3d.studiomax.studiomaxsceneobject",
            "cross3d.studiomax.studiomaxscenepropset",
            "cross3d.studiomax.studiomaxscenerenderer",
            "cross3d.studiomax.studiomaxsceneviewport",
            "cross3d.studiomax.studiomaxscenewrapper",
            "cross3d.studiomax.studiomaxundocontext",
            "cross3d.studiomax.studiomaxuserprops"
        ],
        "version": "0.1.0"
    },
    "crossbar": {
        "cmdline": [],
        "modules": [
            "crossbar",
            "crossbar._compat",
            "crossbar._log_categories",
            "crossbar._logging",
            "crossbar._util",
            "crossbar.adapter",
            "crossbar.adapter.mqtt",
            "crossbar.adapter.mqtt._events",
            "crossbar.adapter.mqtt._utils",
            "crossbar.adapter.mqtt.protocol",
            "crossbar.adapter.mqtt.test",
            "crossbar.adapter.mqtt.test.interop",
            "crossbar.adapter.mqtt.test.interop_tests",
            "crossbar.adapter.mqtt.test.test_events",
            "crossbar.adapter.mqtt.test.test_protocol",
            "crossbar.adapter.mqtt.test.test_topic",
            "crossbar.adapter.mqtt.test.test_tx",
            "crossbar.adapter.mqtt.test.test_wamp",
            "crossbar.adapter.mqtt.tx",
            "crossbar.adapter.mqtt.wamp",
            "crossbar.adapter.rest",
            "crossbar.adapter.rest.callee",
            "crossbar.adapter.rest.caller",
            "crossbar.adapter.rest.common",
            "crossbar.adapter.rest.publisher",
            "crossbar.adapter.rest.subscriber",
            "crossbar.adapter.rest.test",
            "crossbar.adapter.rest.test._request",
            "crossbar.adapter.rest.test.test_callee",
            "crossbar.adapter.rest.test.test_caller",
            "crossbar.adapter.rest.test.test_common",
            "crossbar.adapter.rest.test.test_publisher",
            "crossbar.adapter.rest.test.test_signature",
            "crossbar.adapter.rest.test.test_subscriber",
            "crossbar.adapter.rest.test.test_webhook",
            "crossbar.adapter.rest.webhook",
            "crossbar.common",
            "crossbar.common.checkconfig",
            "crossbar.common.fswatcher",
            "crossbar.common.process",
            "crossbar.common.processinfo",
            "crossbar.common.profiler",
            "crossbar.common.reloader",
            "crossbar.controller",
            "crossbar.controller.cli",
            "crossbar.controller.guest",
            "crossbar.controller.native",
            "crossbar.controller.node",
            "crossbar.controller.process",
            "crossbar.controller.processtypes",
            "crossbar.controller.template",
            "crossbar.controller.test",
            "crossbar.controller.test.test_cleanup",
            "crossbar.controller.test.test_cli",
            "crossbar.controller.test.test_run",
            "crossbar.router",
            "crossbar.router.auth",
            "crossbar.router.auth.anonymous",
            "crossbar.router.auth.cryptosign",
            "crossbar.router.auth.pending",
            "crossbar.router.auth.ticket",
            "crossbar.router.auth.tls",
            "crossbar.router.auth.wampcra",
            "crossbar.router.broker",
            "crossbar.router.cookiestore",
            "crossbar.router.dealer",
            "crossbar.router.longpoll",
            "crossbar.router.metering",
            "crossbar.router.observation",
            "crossbar.router.protocol",
            "crossbar.router.realmstore",
            "crossbar.router.role",
            "crossbar.router.router",
            "crossbar.router.service",
            "crossbar.router.session",
            "crossbar.router.test",
            "crossbar.router.test.helpers",
            "crossbar.router.test.test_authorize",
            "crossbar.router.test.test_broker",
            "crossbar.router.test.test_cookiestore",
            "crossbar.router.test.test_dealer",
            "crossbar.router.test.test_metering",
            "crossbar.router.test.test_observation",
            "crossbar.router.test.test_pytrie",
            "crossbar.router.test.test_router",
            "crossbar.router.test.test_testament",
            "crossbar.router.test.test_unisocket",
            "crossbar.router.test.test_wildcard",
            "crossbar.router.unisocket",
            "crossbar.router.uplink",
            "crossbar.router.wildcard",
            "crossbar.test",
            "crossbar.test.test_checkconfig",
            "crossbar.test.test_compat",
            "crossbar.test.test_logger",
            "crossbar.twisted",
            "crossbar.twisted.endpoint",
            "crossbar.twisted.fileupload",
            "crossbar.twisted.flashpolicy",
            "crossbar.twisted.processutil",
            "crossbar.twisted.resource",
            "crossbar.twisted.sharedport",
            "crossbar.twisted.site",
            "crossbar.twisted.test",
            "crossbar.twisted.test.multipart",
            "crossbar.twisted.test.test_endpoint",
            "crossbar.twisted.test.test_fileupload",
            "crossbar.twisted.test.test_resource",
            "crossbar.twisted.tlsctx",
            "crossbar.worker",
            "crossbar.worker.container",
            "crossbar.worker.process",
            "crossbar.worker.router",
            "crossbar.worker.test",
            "crossbar.worker.test.examples",
            "crossbar.worker.test.examples.badclass",
            "crossbar.worker.test.examples.goodclass",
            "crossbar.worker.test.examples.importerror",
            "crossbar.worker.test.examples.syntaxerror",
            "crossbar.worker.test.test_loader",
            "crossbar.worker.test.test_router",
            "crossbar.worker.testee",
            "crossbar.worker.worker"
        ],
        "version": "17.5.1"
    },
    "crossbarhttp": {
        "cmdline": [],
        "modules": [
            "crossbarhttp",
            "crossbarhttp.crossbarhttp"
        ],
        "version": "0.1.2"
    },
    "crossbarhttp3": {
        "cmdline": [],
        "modules": [
            "crossbarhttp",
            "crossbarhttp.compat",
            "crossbarhttp.crossbarhttp"
        ],
        "version": "1.1"
    },
    "crossbow": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crosscat": {
        "cmdline": [],
        "modules": [
            "crosscat",
            "crosscat.CrossCatClient",
            "crosscat.EngineTemplate",
            "crosscat.HadoopEngine",
            "crosscat.IPClusterEngine",
            "crosscat.JSONRPCEngine",
            "crosscat.LocalEngine",
            "crosscat.MultiprocessingEngine",
            "crosscat.convergence_analysis",
            "crosscat.convergence_analysis.automated_convergence_tests",
            "crosscat.convergence_analysis.convergence_test",
            "crosscat.convergence_analysis.generate_convergence_script",
            "crosscat.convergence_analysis.parse_convergence_results",
            "crosscat.convergence_analysis.plot_convergence_results",
            "crosscat.cython_code",
            "crosscat.cython_code.continuous_component_model_test",
            "crosscat.cython_code.mixed_state_test",
            "crosscat.cython_code.state_test",
            "crosscat.cython_code.test_missing_value",
            "crosscat.cython_code.test_multinomial_impute",
            "crosscat.cython_code.test_pred_prob_and_density",
            "crosscat.cython_code.test_sample",
            "crosscat.jsonrpc_http",
            "crosscat.jsonrpc_http.server_jsonrpc",
            "crosscat.jsonrpc_http.stub_client_jsonrpc",
            "crosscat.jsonrpc_http.test_engine",
            "crosscat.jsonrpc_http.test_resume",
            "crosscat.tests",
            "crosscat.tests.component_model_extensions",
            "crosscat.tests.component_model_extensions.ContinuousComponentModel",
            "crosscat.tests.component_model_extensions.CyclicComponentModel",
            "crosscat.tests.component_model_extensions.MultinomialComponentModel",
            "crosscat.tests.cpp_long_tests",
            "crosscat.tests.cpp_unit_tests",
            "crosscat.tests.enumerate_utils",
            "crosscat.tests.geweke_on_schemas",
            "crosscat.tests.geweke_utils",
            "crosscat.tests.mutual_information_test_utils",
            "crosscat.tests.plot_utils",
            "crosscat.tests.quality_test_utils",
            "crosscat.tests.synthetic_data_generator",
            "crosscat.tests.test_col_ensure",
            "crosscat.tests.test_log_likelihood",
            "crosscat.tests.test_pred_prob_and_density",
            "crosscat.tests.test_sampler_enumeration",
            "crosscat.tests.timing_analysis",
            "crosscat.tests.timing_test_utils",
            "crosscat.utils",
            "crosscat.utils.api_utils",
            "crosscat.utils.convergence_test_utils",
            "crosscat.utils.data_utils",
            "crosscat.utils.diagnostic_utils",
            "crosscat.utils.file_utils",
            "crosscat.utils.general_utils",
            "crosscat.utils.hadoop_utils",
            "crosscat.utils.inference_utils",
            "crosscat.utils.sample_utils",
            "crosscat.utils.useCase_utils",
            "crosscat.utils.validate_utils",
            "crosscat.utils.xnet_utils",
            "crosscat.version"
        ],
        "version": "0.1.55"
    },
    "crosscompute": {
        "cmdline": [],
        "modules": [
            "crosscompute",
            "crosscompute.configurations",
            "crosscompute.exceptions",
            "crosscompute.extensions",
            "crosscompute.models",
            "crosscompute.scaffolds",
            "crosscompute.scripts",
            "crosscompute.scripts.run",
            "crosscompute.scripts.serve",
            "crosscompute.scripts.setup",
            "crosscompute.scripts.work",
            "crosscompute.symmetries",
            "crosscompute.tests",
            "crosscompute.types"
        ],
        "version": "0.6.8.2"
    },
    "crosscompute-audio": {
        "cmdline": [],
        "modules": [
            "crosscompute_audio"
        ],
        "version": "0.1"
    },
    "crosscompute-geotable": {
        "cmdline": [],
        "modules": [
            "crosscompute_geotable",
            "crosscompute_geotable.fallbacks"
        ],
        "version": "0.6.7"
    },
    "crosscompute-image": {
        "cmdline": [],
        "modules": [
            "crosscompute_image"
        ],
        "version": "0.6.7.2"
    },
    "crosscompute-integer": {
        "cmdline": [],
        "modules": [
            "crosscompute_integer"
        ],
        "version": "0.6.7"
    },
    "crosscompute-notebook-extensions": {
        "cmdline": [],
        "modules": [
            "crosscompute_notebook_extensions",
            "crosscompute_notebook_extensions.ipynb",
            "crosscompute_notebook_extensions.macros",
            "crosscompute_notebook_extensions.settings"
        ],
        "version": "0.4.2.2"
    },
    "crosscompute-select": {
        "cmdline": [],
        "modules": [
            "crosscompute_select"
        ],
        "version": "0.6.7"
    },
    "crosscompute-table": {
        "cmdline": [],
        "modules": [
            "crosscompute_table"
        ],
        "version": "0.6.7.1"
    },
    "crosscompute-text": {
        "cmdline": [],
        "modules": [
            "crosscompute_text"
        ],
        "version": "0.6.7"
    },
    "crosscompute-types": {
        "cmdline": [],
        "modules": [],
        "version": "0.6.8"
    },
    "crosscompute-video": {
        "cmdline": [],
        "modules": [
            "crosscompute_video"
        ],
        "version": "0.1"
    },
    "crosservice": {
        "cmdline": [],
        "modules": [
            "crosservice",
            "crosservice.client",
            "crosservice.constants",
            "crosservice.handlers",
            "crosservice.log",
            "crosservice.main",
            "crosservice.server",
            "crosservice.signals",
            "crosservice.test",
            "crosservice.utils"
        ],
        "version": "0.2.15"
    },
    "crosshair": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crossline": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crossmap": {
        "cmdline": [],
        "modules": [
            "cmmodule",
            "cmmodule.BED",
            "cmmodule.PSL",
            "cmmodule.SAM",
            "cmmodule.annoGene",
            "cmmodule.bam_cigar",
            "cmmodule.bgrMerge",
            "cmmodule.changePoint",
            "cmmodule.cigar",
            "cmmodule.dotProduct",
            "cmmodule.fasta",
            "cmmodule.fastq",
            "cmmodule.fickett",
            "cmmodule.ireader",
            "cmmodule.mystat",
            "cmmodule.myutils",
            "cmmodule.orf",
            "cmmodule.poisson",
            "cmmodule.quantile",
            "cmmodule.sam_header",
            "cmmodule.twoList",
            "cmmodule.wig_reader",
            "cmmodule.wiggle"
        ],
        "version": "0.2.6"
    },
    "crosspm": {
        "cmdline": [],
        "modules": [
            "crosspm",
            "crosspm.adapters",
            "crosspm.adapters.artifactory",
            "crosspm.adapters.artifactoryaql",
            "crosspm.adapters.common",
            "crosspm.adapters.files",
            "crosspm.config",
            "crosspm.cpm",
            "crosspm.helpers",
            "crosspm.helpers.archive",
            "crosspm.helpers.cache",
            "crosspm.helpers.config",
            "crosspm.helpers.downloader",
            "crosspm.helpers.exceptions",
            "crosspm.helpers.locker",
            "crosspm.helpers.output",
            "crosspm.helpers.package",
            "crosspm.helpers.parser",
            "crosspm.helpers.promoter",
            "crosspm.helpers.source"
        ],
        "version": "1.0.7.dev272"
    },
    "crossroad": {
        "cmdline": [],
        "modules": [],
        "version": "0.6"
    },
    "crossroads": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crosstex": {
        "cmdline": [
            "crosstex"
        ],
        "modules": [
            "crosstex",
            "crosstex.cmd",
            "crosstex.latex",
            "crosstex.objects",
            "crosstex.parse",
            "crosstex.style",
            "crosstex.style.homepage",
            "crosstex.style.plain"
        ],
        "version": "0.8.dev"
    },
    "crossvalidf": {
        "cmdline": [],
        "modules": [
            "crossvalidf"
        ],
        "version": "0.0.1"
    },
    "crossword": {
        "cmdline": [],
        "modules": [
            "crossword",
            "crossword.compat",
            "crossword.core",
            "crossword.exceptions",
            "crossword.format_ipuz",
            "crossword.format_puz"
        ],
        "version": "0.1.2"
    },
    "crosswords": {
        "cmdline": [],
        "modules": [
            "crosswords",
            "crosswords.cli",
            "crosswords.dictionnaries",
            "crosswords.words"
        ],
        "version": "0.3.2"
    },
    "crosys": {
        "cmdline": [],
        "modules": [
            "crosys",
            "crosys.zzz_manual_install"
        ],
        "version": "0.0.1"
    },
    "crotal": {
        "cmdline": [],
        "modules": [
            "crotal",
            "crotal.command",
            "crotal.config",
            "crotal.db",
            "crotal.deploy",
            "crotal.lib",
            "crotal.lib.pinyin",
            "crotal.lib.pinyin.main",
            "crotal.lib.pinyin.pinyin",
            "crotal.logger",
            "crotal.main",
            "crotal.models",
            "crotal.models.base",
            "crotal.models.fields",
            "crotal.models.others",
            "crotal.models.page",
            "crotal.models.post",
            "crotal.models.template",
            "crotal.renderer",
            "crotal.server",
            "crotal.site",
            "crotal.template_engine",
            "crotal.utils",
            "crotal.version",
            "tests",
            "tests.base",
            "tests.test_database",
            "tests.test_object_manager",
            "tests.test_page",
            "tests.test_post",
            "tests.test_site",
            "tests.test_utils"
        ],
        "version": "0.9.8"
    },
    "croupyer": {
        "cmdline": [],
        "modules": [
            "croupyer",
            "croupyer.test"
        ],
        "version": "0.0.1"
    },
    "croutera": {
        "cmdline": [
            "croutera"
        ],
        "modules": [
            "croutera",
            "croutera.cli",
            "croutera.commands",
            "croutera.exceptions",
            "croutera.extractor",
            "croutera.models",
            "croutera.models.base",
            "croutera.models.cisco",
            "croutera.models.cisco.dpc3928s",
            "croutera.models.dlink",
            "croutera.models.dlink.dir610",
            "croutera.models.routers",
            "croutera.models.tplink",
            "croutera.models.tplink.tlwrbased",
            "croutera.models.tplink.wr340g",
            "croutera.models.tplink.wr720n",
            "croutera.runner",
            "croutera.version",
            "tests",
            "tests.models",
            "tests.models.test_base",
            "tests.models.test_router",
            "tests.test_cli",
            "tests.test_extractor",
            "tests.test_runner"
        ],
        "version": "0.0.6"
    },
    "crow": {
        "cmdline": [],
        "modules": [
            "crow",
            "crow.agent",
            "crow.agent.base",
            "crow.agent.config",
            "crow.agent.runner"
        ],
        "version": "0.1.1"
    },
    "crowbar": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crowd": {
        "cmdline": [],
        "modules": [
            "crowd"
        ],
        "version": "1.0.1"
    },
    "crowd-api": {
        "cmdline": [],
        "modules": [
            "crowd_api"
        ],
        "version": "0.0.6"
    },
    "crowd-pam": {
        "cmdline": [
            "crowd_pam_configure.py"
        ],
        "modules": [
            "crowd_pam",
            "crowd_pam.config",
            "crowd_pam.crowd_auth_utils",
            "crowd_pam.crowd_pam",
            "crowd_pam.error",
            "crowd_pam.getent",
            "crowd_pam.logs"
        ],
        "version": "0.0.1"
    },
    "crowdastro": {
        "cmdline": [],
        "modules": [
            "crowdastro",
            "crowdastro._catalogue",
            "crowdastro._plot_classifier",
            "crowdastro._show_classifier_subject",
            "crowdastro.checksums",
            "crowdastro.classifier",
            "crowdastro.compile_cnn",
            "crowdastro.config",
            "crowdastro.consensuses",
            "crowdastro.elais_labels",
            "crowdastro.exceptions",
            "crowdastro.generate_annotator_labels",
            "crowdastro.generate_cnn_outputs",
            "crowdastro.generate_dataset",
            "crowdastro.generate_test_sets",
            "crowdastro.generate_training_data",
            "crowdastro.import_data",
            "crowdastro.plot",
            "crowdastro.repack_h5",
            "crowdastro.rgz_data",
            "crowdastro.rgz_show",
            "crowdastro.rgzatlascat",
            "crowdastro.show_filters",
            "crowdastro.test",
            "crowdastro.train",
            "crowdastro.train_classifier",
            "crowdastro.train_cnn"
        ],
        "version": "0.1.1"
    },
    "crowdbox": {
        "cmdline": [],
        "modules": [
            "crowdbox"
        ],
        "version": "0.0.3"
    },
    "crowdcurio-client": {
        "cmdline": [],
        "modules": [
            "crowdcurio_client",
            "crowdcurio_client.crowdcurio",
            "crowdcurio_client.curio",
            "crowdcurio_client.data",
            "crowdcurio_client.experiment",
            "crowdcurio_client.project",
            "crowdcurio_client.resource",
            "crowdcurio_client.response",
            "crowdcurio_client.task",
            "crowdcurio_client.user"
        ],
        "version": "0.1.2"
    },
    "crowdedtext": {
        "cmdline": [],
        "modules": [
            "crowdedText",
            "crowdedText.__version__",
            "crowdedText.cl_utils",
            "crowdedText.commonutils",
            "crowdedText.commonutils.getpackagepath",
            "crowdedText.crowdedText",
            "crowdedText.tests",
            "crowdedText.utKit"
        ],
        "version": "0.2.1"
    },
    "crowdevry": {
        "cmdline": [],
        "modules": [
            "crowd"
        ],
        "version": "0.7a1dev0"
    },
    "crowdflower": {
        "cmdline": [],
        "modules": [
            "crowdflower",
            "crowdflower.cache",
            "crowdflower.connection",
            "crowdflower.exception",
            "crowdflower.job",
            "crowdflower.serialization",
            "crowdflower.unit"
        ],
        "version": "0.1.4"
    },
    "crowdin-cli-py": {
        "cmdline": [],
        "modules": [
            "crowdin",
            "crowdin.cli",
            "crowdin.connection",
            "crowdin.methods"
        ],
        "version": "0.95.5"
    },
    "crowdin-client": {
        "cmdline": [
            "crowdin"
        ],
        "modules": [
            "crowdin",
            "crowdin.api",
            "crowdin.client",
            "crowdin.main"
        ],
        "version": "0.4"
    },
    "crowdprocess": {
        "cmdline": [],
        "modules": [
            "crowdprocess",
            "crowdprocess.crowdprocess"
        ],
        "version": "0.2.0"
    },
    "crowdrouter": {
        "cmdline": [],
        "modules": [
            "crowdrouter",
            "crowdrouter.context",
            "crowdrouter.context.abstract_request_strategy",
            "crowdrouter.context.crowd_object",
            "crowdrouter.context.crowdrequest",
            "crowdrouter.context.crowdresponse",
            "crowdrouter.context.django_request_strategy",
            "crowdrouter.context.flask_request_strategy",
            "crowdrouter.context.mock_request_strategy",
            "crowdrouter.crowd_stats",
            "crowdrouter.crowdrouter",
            "crowdrouter.crowdrouter.abstract_crowdrouter",
            "crowdrouter.decorators",
            "crowdrouter.errors",
            "crowdrouter.task",
            "crowdrouter.task.abstract_crowd_choice",
            "crowdrouter.task.abstract_loop_condition_crowd_choice",
            "crowdrouter.task.abstract_task",
            "crowdrouter.utils",
            "crowdrouter.workflow",
            "crowdrouter.workflow.abstract_workflow",
            "crowdrouter.workflow.crowd_pipeline"
        ],
        "version": "1.5.5"
    },
    "crowdtimeout": {
        "cmdline": [],
        "modules": [
            "crowd"
        ],
        "version": "0.9.0"
    },
    "crowdtruth": {
        "cmdline": [],
        "modules": [
            "controllers",
            "controllers.configController",
            "controllers.groundtruthController",
            "controllers.inputController",
            "controllers.outputController",
            "models",
            "models.collection",
            "models.job",
            "models.judgment",
            "models.metrics",
            "models.unit",
            "models.worker"
        ],
        "version": "1.0"
    },
    "crowfood": {
        "cmdline": [],
        "modules": [
            "crowfood",
            "crowfood.cli",
            "crowfood.cluster_regexp",
            "crowfood.engine",
            "crowfood.graph",
            "crowfood.utils"
        ],
        "version": "0.4.1"
    },
    "crowsnest-capabilities": {
        "cmdline": [],
        "modules": [
            "crowsnest_capabilities",
            "crowsnest_capabilities.exceptions",
            "crowsnest_capabilities.loader",
            "crowsnest_capabilities.models",
            "crowsnest_capabilities.structure",
            "crowsnest_capabilities.tests",
            "crowsnest_capabilities.tests.base",
            "crowsnest_capabilities.tests.loader",
            "crowsnest_capabilities.tests.models",
            "crowsnest_capabilities.tests.structure"
        ],
        "version": "0.1.1"
    },
    "crox": {
        "cmdline": [],
        "modules": [
            "crox",
            "crox.core"
        ],
        "version": "0.1.2"
    },
    "crprint": {
        "cmdline": [],
        "modules": [
            "crPrint"
        ],
        "version": "0.3"
    },
    "crszu": {
        "cmdline": [],
        "modules": [
            "crszu",
            "crszu.cr",
            "crszu.edge_detection",
            "crszu.errors",
            "crszu.match",
            "crszu.rmnoise"
        ],
        "version": "0.0.1"
    },
    "crtauth": {
        "cmdline": [],
        "modules": [
            "crtauth",
            "crtauth.client",
            "crtauth.constant_time_compare",
            "crtauth.exceptions",
            "crtauth.key_provider",
            "crtauth.ldap_key_provider",
            "crtauth.msgpack_protocol",
            "crtauth.protocol",
            "crtauth.rsa",
            "crtauth.server",
            "crtauth.ssh",
            "crtauth.wsgi"
        ],
        "version": "0.99.4"
    },
    "crtt": {
        "cmdline": [],
        "modules": [
            "CRTT",
            "CRTT.PyLog2html",
            "CRTT.config",
            "CRTT.crtt_json",
            "CRTT.get_nodes",
            "CRTT.loglib",
            "CRTT.retry"
        ],
        "version": "0.8.1"
    },
    "crucible": {
        "cmdline": [
            "crucible"
        ],
        "modules": [],
        "version": "0.1.0"
    },
    "crud": {
        "cmdline": [],
        "modules": [
            "crud"
        ],
        "version": "0.1"
    },
    "crud-filters": {
        "cmdline": [],
        "modules": [
            "CRUDFilters",
            "CRUDFilters.CRUDFilters",
            "CRUDFilters.CRUDFilters.settings",
            "CRUDFilters.CRUDFilters.wsgi",
            "CRUDFilters.forms",
            "CRUDFilters.manage",
            "CRUDFilters.managers",
            "CRUDFilters.models",
            "CRUDFilters.serializers",
            "CRUDFilters.templates",
            "CRUDFilters.templatetags",
            "CRUDFilters.templatetags.CRUDFilters",
            "CRUDFilters.tests",
            "CRUDFilters.tests.managers",
            "CRUDFilters.tests.migrations",
            "CRUDFilters.tests.migrations.0001_initial",
            "CRUDFilters.tests.models",
            "CRUDFilters.tests.serializers",
            "CRUDFilters.tests.tests",
            "CRUDFilters.tests.urls",
            "CRUDFilters.tests.views",
            "CRUDFilters.urls",
            "CRUDFilters.views"
        ],
        "version": "0.3.6"
    },
    "crudalchemy": {
        "cmdline": [],
        "modules": [
            "crudalchemy",
            "crudalchemy.declarative",
            "crudalchemy.utils"
        ],
        "version": "0.2dev"
    },
    "cruddy": {
        "cmdline": [],
        "modules": [
            "cruddy",
            "cruddy.calculatedvalue",
            "cruddy.exceptions",
            "cruddy.lambdaclient",
            "cruddy.prototype",
            "cruddy.response",
            "cruddy.scripts",
            "cruddy.scripts.cli"
        ],
        "version": "0.14.0"
    },
    "crudexml": {
        "cmdline": [],
        "modules": [
            "crudexml"
        ],
        "version": "1.0"
    },
    "crudini": {
        "cmdline": [
            "crudini"
        ],
        "modules": [],
        "version": "0.9"
    },
    "crudit": {
        "cmdline": [],
        "modules": [
            "crudit",
            "crudit.exceptions",
            "crudit.version"
        ],
        "version": "0.2.0"
    },
    "crumb": {
        "cmdline": [],
        "modules": [
            "crumb",
            "crumb.annotations",
            "crumb.cloner",
            "crumb.config",
            "crumb.crumb",
            "crumb.export",
            "crumb.main",
            "crumb.orderedset",
            "crumb.repo",
            "crumb.runner",
            "crumb.tempdir"
        ],
        "version": "0.0.0"
    },
    "crumb.py": {
        "cmdline": [],
        "modules": [
            "crumb"
        ],
        "version": "0.5"
    },
    "crumbs": {
        "cmdline": [],
        "modules": [
            "crumbs",
            "crumbs.information"
        ],
        "version": "2.1.0"
    },
    "crunch": {
        "cmdline": [],
        "modules": [
            "crunch",
            "crunch.core"
        ],
        "version": "0.0.2.2"
    },
    "crunchable": {
        "cmdline": [],
        "modules": [
            "crunchable",
            "crunchable.crunchable"
        ],
        "version": "0.3"
    },
    "crunchy2mkv": {
        "cmdline": [
            "crunchy2mkv"
        ],
        "modules": [],
        "version": "0.1"
    },
    "crunchyfrog": {
        "cmdline": [],
        "modules": [
            "backend_httplog",
            "backend_httplog.apachelogs",
            "cf",
            "cf.app",
            "cf.autocompletion",
            "cf.cmdline",
            "cf.config",
            "cf.db",
            "cf.db.backends",
            "cf.db.backends.firebird",
            "cf.db.backends.informix",
            "cf.db.backends.maxdb",
            "cf.db.backends.mssql",
            "cf.db.backends.mysql",
            "cf.db.backends.oracle",
            "cf.db.backends.postgres",
            "cf.db.backends.sqlite",
            "cf.db.meta",
            "cf.db.objects",
            "cf.db.url",
            "cf.filter",
            "cf.filter.exportfilter",
            "cf.instance",
            "cf.ipc",
            "cf.library",
            "cf.nativeshell",
            "cf.plugins",
            "cf.plugins.builtin",
            "cf.plugins.core",
            "cf.plugins.mixins",
            "cf.release",
            "cf.shell",
            "cf.shell.ipython_view",
            "cf.ui",
            "cf.ui.browser",
            "cf.ui.confirmsave",
            "cf.ui.datasources",
            "cf.ui.dialogs",
            "cf.ui.editor",
            "cf.ui.mainwindow",
            "cf.ui.pane",
            "cf.ui.prefs",
            "cf.ui.statusbar",
            "cf.ui.utils",
            "cf.ui.widgets",
            "cf.ui.widgets.grid",
            "cf.ui.widgets.sqlview",
            "cf.userdb",
            "cf.utils",
            "utils",
            "utils.builder",
            "utils.builder.gcwiki",
            "utils.command",
            "utils.command.build_api",
            "utils.command.build_manpage",
            "utils.command.build_mo",
            "utils.command.clean_docs",
            "utils.command.clean_mo",
            "utils.command.run",
            "utils.genapi",
            "utils.msgfmt"
        ],
        "version": "0.4.2"
    },
    "crunchyroll": {
        "cmdline": [],
        "modules": [
            "crunchyroll",
            "crunchyroll.apis",
            "crunchyroll.apis.ajax",
            "crunchyroll.apis.android",
            "crunchyroll.apis.errors",
            "crunchyroll.apis.meta",
            "crunchyroll.apis.scraper",
            "crunchyroll.constants",
            "crunchyroll.models",
            "crunchyroll.subtitles",
            "crunchyroll.util",
            "tests",
            "tests.test_integration"
        ],
        "version": "1.0.1"
    },
    "crunner": {
        "cmdline": [
            "crun"
        ],
        "modules": [
            "crunner",
            "crunner.config",
            "crunner.event",
            "crunner.logger",
            "crunner.notifier",
            "crunner.runner",
            "crunner.watcher"
        ],
        "version": "0.4.1"
    },
    "crush": {
        "cmdline": [],
        "modules": [
            "crush",
            "crush.analyze",
            "crush.ceph",
            "crush.ceph.convert",
            "crush.compare",
            "crush.main"
        ],
        "version": "1.0.26"
    },
    "crushha": {
        "cmdline": [],
        "modules": [
            "crushha",
            "crushha.interpreter"
        ],
        "version": "0.2"
    },
    "crust": {
        "cmdline": [],
        "modules": [
            "crust",
            "crust.api",
            "crust.exceptions",
            "crust.fields",
            "crust.query",
            "crust.requests",
            "crust.resources",
            "crust.six",
            "crust.utils"
        ],
        "version": "0.2.1"
    },
    "crux": {
        "cmdline": [
            "cli",
            "collector",
            "launcher",
            "notifier",
            "shipper",
            "worker"
        ],
        "modules": [
            "crux",
            "crux.taskapi",
            "crux.util"
        ],
        "version": "0.1"
    },
    "cruzdb": {
        "cmdline": [],
        "modules": [
            "cruzdb",
            "cruzdb.annotate",
            "cruzdb.blat_blast",
            "cruzdb.intersecter",
            "cruzdb.mirror",
            "cruzdb.models",
            "cruzdb.sequence",
            "cruzdb.soup",
            "cruzdb.sqlsoup",
            "cruzdb.tests",
            "cruzdb.tests.test_db"
        ],
        "version": "0.5.6"
    },
    "crwy": {
        "cmdline": [],
        "modules": [
            "crwy",
            "crwy.changetmpl",
            "crwy.cmdline",
            "crwy.commands",
            "crwy.commands.createspider",
            "crwy.commands.list",
            "crwy.commands.runspider",
            "crwy.commands.startproject",
            "crwy.settings",
            "crwy.settings.default_settings",
            "crwy.spider",
            "crwy.templates",
            "crwy.templates.project",
            "crwy.templates.project.src",
            "crwy.templates.spider",
            "crwy.utils",
            "crwy.utils.html",
            "crwy.utils.html.geventcurl",
            "crwy.utils.html.html_downloader",
            "crwy.utils.html.html_parser",
            "crwy.utils.mail",
            "crwy.utils.queue",
            "crwy.utils.queue.RedisQueue",
            "crwy.utils.queue.SsdbQueue",
            "crwy.utils.sql",
            "crwy.utils.sql.db"
        ],
        "version": "1.0.3"
    },
    "crx-unpack": {
        "cmdline": [],
        "modules": [
            "crx_unpack",
            "crx_unpack.clr",
            "crx_unpack.encrypted_dir"
        ],
        "version": "0.1.1"
    },
    "crxmake": {
        "cmdline": [
            "crxmake"
        ],
        "modules": [
            "crxmake",
            "crxmake.crxmake"
        ],
        "version": "0.0.3"
    },
    "crydeer": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.5.2"
    },
    "cryex": {
        "cmdline": [],
        "modules": [
            "cryex",
            "cryex.coins",
            "cryex.coins.poloniex",
            "cryex.core",
            "cryex.kraken",
            "cryex.model",
            "cryex.poloniex"
        ],
        "version": "0.1.21"
    },
    "cryha": {
        "cmdline": [],
        "modules": [
            "cryha",
            "cryha.common",
            "cryha.crypter",
            "cryha.hasher"
        ],
        "version": "1.0"
    },
    "cryio": {
        "cmdline": [],
        "modules": [
            "cryio",
            "cryio.cbfimage",
            "cryio.crysalis",
            "cryio.edfimage",
            "cryio.esperanto",
            "cryio.fit2dmask",
            "cryio.mar345image",
            "cryio.numpymask",
            "cryio.parparser",
            "cryio.templates",
            "cryio.templates.tplcbf",
            "cryio.templates.tplcrys",
            "cryio.templates.tpledf",
            "cryio.templates.tplesp",
            "cryio.tools"
        ],
        "version": "2017.3.1"
    },
    "crymon": {
        "cmdline": [],
        "modules": [
            "crymon",
            "crymon.reconstruct"
        ],
        "version": "2017.3.2.1"
    },
    "cryo": {
        "cmdline": [],
        "modules": [
            "cryo",
            "cryo.backends",
            "cryo.backends.memory",
            "cryo.backends.sqlite",
            "cryo.backends.standardsql",
            "cryo.connection",
            "cryo.datatypes",
            "cryo.exceptions",
            "cryo.metadata",
            "cryo.query",
            "cryo.session",
            "cryo.util"
        ],
        "version": "0.1"
    },
    "cryoproxy": {
        "cmdline": [],
        "modules": [
            "cryoproxy",
            "cryoproxy.cryoproxy"
        ],
        "version": "2017.4.26"
    },
    "cryotec-server": {
        "cmdline": [],
        "modules": [
            "cryotec_server",
            "cryotec_server.actions",
            "cryotec_server.actions.admin",
            "cryotec_server.actions.forms",
            "cryotec_server.actions.migrations",
            "cryotec_server.actions.migrations.0001_initial",
            "cryotec_server.actions.migrations.0002_auto__add_field_report_reported_by",
            "cryotec_server.actions.models",
            "cryotec_server.actions.tests",
            "cryotec_server.actions.views",
            "cryotec_server.actiontemplates",
            "cryotec_server.actiontemplates.admin",
            "cryotec_server.actiontemplates.models",
            "cryotec_server.actiontemplates.tests",
            "cryotec_server.actiontemplates.views",
            "cryotec_server.checklists",
            "cryotec_server.checklists.admin",
            "cryotec_server.checklists.forms",
            "cryotec_server.checklists.models",
            "cryotec_server.checklists.tests",
            "cryotec_server.checklists.views",
            "cryotec_server.clients",
            "cryotec_server.clients.admin",
            "cryotec_server.clients.migrations",
            "cryotec_server.clients.migrations.0001_initial",
            "cryotec_server.clients.migrations.0002_auto__add_field_client_address_machine__add_field_client_address_legal",
            "cryotec_server.clients.models",
            "cryotec_server.clients.tests",
            "cryotec_server.clients.views",
            "cryotec_server.dashboard",
            "cryotec_server.files",
            "cryotec_server.files.admin",
            "cryotec_server.files.forms",
            "cryotec_server.files.models",
            "cryotec_server.files.tests",
            "cryotec_server.files.views",
            "cryotec_server.libs",
            "cryotec_server.libs.admin",
            "cryotec_server.libs.modelmixins",
            "cryotec_server.libs.templatetags",
            "cryotec_server.libs.templatetags.cryotec_extras",
            "cryotec_server.machines",
            "cryotec_server.machines.admin",
            "cryotec_server.machines.migrations",
            "cryotec_server.machines.migrations.0001_initial",
            "cryotec_server.machines.migrations.0002_auto__add_field_machinemark_manufacturer__add_field_machinemark_info",
            "cryotec_server.machines.models",
            "cryotec_server.machines.tests",
            "cryotec_server.machines.views",
            "cryotec_server.menu",
            "cryotec_server.settings",
            "cryotec_server.urls"
        ],
        "version": "1.3.6"
    },
    "cryp": {
        "cmdline": [
            "cryp",
            "cryp-backup",
            "cryp-cli"
        ],
        "modules": [
            "cryp",
            "cryp.backup",
            "cryp.dbus",
            "cryp.gui",
            "cryp.storage"
        ],
        "version": "0.2"
    },
    "crypt-keeper": {
        "cmdline": [],
        "modules": [
            "crypt_keeper",
            "crypt_keeper.crypt",
            "crypt_keeper.keeper"
        ],
        "version": "0.0.5"
    },
    "crypt-me": {
        "cmdline": [],
        "modules": [],
        "version": "0.140"
    },
    "cryptacular": {
        "cmdline": [],
        "modules": [
            "cryptacular",
            "cryptacular.bcrypt",
            "cryptacular.bcrypt.test_bcrypt",
            "cryptacular.core",
            "cryptacular.core.test_core",
            "cryptacular.crypt",
            "cryptacular.crypt.test_crypt",
            "cryptacular.pbkdf2",
            "cryptacular.pbkdf2.test_pbkdf2"
        ],
        "version": "1.4.1"
    },
    "crypter": {
        "cmdline": [
            "crypter",
            "crypter-client"
        ],
        "modules": [
            "crypter",
            "crypter.client",
            "crypter.server"
        ],
        "version": "1.0.3"
    },
    "cryptex": {
        "cmdline": [],
        "modules": [
            "cryptex"
        ],
        "version": "1.1.1"
    },
    "crypthub": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cryptic": {
        "cmdline": [],
        "modules": [
            "cryptic",
            "cryptic.cryptic"
        ],
        "version": "0.0.1"
    },
    "cryptic-abir": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cryptio": {
        "cmdline": [],
        "modules": [
            "cryptio",
            "cryptio.header",
            "cryptio.io"
        ],
        "version": "0.0.1.dev16"
    },
    "cryptlib-py": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crypto": {
        "cmdline": [],
        "modules": [
            "crypto",
            "crypto.app",
            "crypto.decryptoapp",
            "crypto.library",
            "crypto.library.cryptor",
            "crypto.library.hash",
            "crypto.library.package",
            "crypto.settings"
        ],
        "version": "1.4.1"
    },
    "crypto-allauth": {
        "cmdline": [],
        "modules": [
            "crypto_allauth",
            "crypto_allauth.apps",
            "crypto_allauth.hashing",
            "crypto_allauth.models",
            "crypto_allauth.providers",
            "crypto_allauth.providers.trezor",
            "crypto_allauth.providers.trezor.provider",
            "crypto_allauth.providers.trezor.urls",
            "crypto_allauth.providers.trezor.views",
            "crypto_allauth.tests",
            "crypto_allauth.tests.test_trezor"
        ],
        "version": "0.0.5"
    },
    "crypto-drive-manager": {
        "cmdline": [],
        "modules": [
            "crypto_drive_manager",
            "crypto_drive_manager.cli"
        ],
        "version": "1.0"
    },
    "crypto-enigma": {
        "cmdline": [
            "enigma.py",
            "pyenigma.py"
        ],
        "modules": [
            "crypto_enigma",
            "crypto_enigma._version",
            "crypto_enigma.components",
            "crypto_enigma.cypher",
            "crypto_enigma.exceptions",
            "crypto_enigma.machine",
            "crypto_enigma.utils"
        ],
        "version": "0.2.1b2"
    },
    "crypto-masher": {
        "cmdline": [],
        "modules": [
            "crypto_masher"
        ],
        "version": "0.1"
    },
    "crypto-primitives": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crypto-test": {
        "cmdline": [],
        "modules": [
            "crypto_test"
        ],
        "version": "1.0.0"
    },
    "crypto-wallet": {
        "cmdline": [],
        "modules": [
            "crypto_wallet"
        ],
        "version": "0.1.0"
    },
    "cryptoapy": {
        "cmdline": [],
        "modules": [
            "cprocsp",
            "cprocsp.certutils",
            "cprocsp.cryptoapi",
            "cprocsp.csp",
            "cprocsp.decoder",
            "cprocsp.filetimes",
            "cprocsp.rdn"
        ],
        "version": "0.4.56"
    },
    "cryptoassets.core": {
        "cmdline": [],
        "modules": [
            "cryptoassets",
            "cryptoassets.core",
            "cryptoassets.core.app",
            "cryptoassets.core.configure",
            "cryptoassets.core.models",
            "cryptoassets.core.tests",
            "cryptoassets.core.tests.base",
            "cryptoassets.core.tests.test_bitcoind",
            "cryptoassets.core.tests.test_block_io",
            "cryptoassets.core.tests.test_blockchain",
            "cryptoassets.core.tests.test_coin",
            "cryptoassets.core.tests.test_configure",
            "cryptoassets.core.tests.test_conflictresolver",
            "cryptoassets.core.tests.test_event_handler",
            "cryptoassets.core.tests.test_generic",
            "cryptoassets.core.tests.test_import",
            "cryptoassets.core.tests.test_service",
            "cryptoassets.core.tests.test_simplehttplistener",
            "cryptoassets.core.tests.test_tunnel",
            "cryptoassets.core.tests.test_walletnotify",
            "cryptoassets.core.tests.testlogging",
            "cryptoassets.core.tests.testwarnings"
        ],
        "version": "0.2"
    },
    "cryptoassets.django": {
        "cmdline": [],
        "modules": [
            "cryptoassets",
            "cryptoassets.django",
            "cryptoassets.django.app",
            "cryptoassets.django.assetdb",
            "cryptoassets.django.incoming",
            "cryptoassets.django.management",
            "cryptoassets.django.management.commands",
            "cryptoassets.django.management.commands.cryptoassets_helper_service",
            "cryptoassets.django.management.commands.cryptoassets_initialize_database",
            "cryptoassets.django.management.transaction",
            "cryptoassets.django.signals"
        ],
        "version": "0.1"
    },
    "cryptobalances": {
        "cmdline": [],
        "modules": [
            "cryptobalances",
            "cryptobalances.checker",
            "cryptobalances.config",
            "cryptobalances.exchanges",
            "cryptobalances.exchanges.changer",
            "cryptobalances.exchanges.coinomat",
            "cryptobalances.exchanges.poloniex",
            "cryptobalances.exchanges.shapeshift",
            "cryptobalances.main",
            "cryptobalances.services",
            "cryptobalances.services.chain_cryptoid",
            "cryptobalances.services.chain_so",
            "cryptobalances.services.counterparty",
            "cryptobalances.services.doge",
            "cryptobalances.services.ethereum",
            "cryptobalances.services.golos",
            "cryptobalances.services.nem",
            "cryptobalances.services.nxt",
            "cryptobalances.services.omni",
            "cryptobalances.services.openassets",
            "cryptobalances.services.ripple",
            "cryptobalances.services.steem",
            "cryptobalances.services.zcash",
            "cryptobalances.validator"
        ],
        "version": "0.9.5"
    },
    "cryptobox-server": {
        "cmdline": [
            "CryptoBoxRootActions",
            "CryptoBoxWebserver"
        ],
        "modules": [
            "cryptobox",
            "cryptobox.core",
            "cryptobox.core.container",
            "cryptobox.core.exceptions",
            "cryptobox.core.main",
            "cryptobox.core.settings",
            "cryptobox.core.tools",
            "cryptobox.plugins",
            "cryptobox.plugins.base",
            "cryptobox.plugins.manage",
            "cryptobox.tests",
            "cryptobox.tests.base",
            "cryptobox.tests.test.cryptobox",
            "cryptobox.tests.test.cryptoboxtools",
            "cryptobox.tests.test.plugins",
            "cryptobox.tests.test.websites",
            "cryptobox.tests.tools",
            "cryptobox.web",
            "cryptobox.web.dataset",
            "cryptobox.web.languages",
            "cryptobox.web.sites"
        ],
        "version": "0.3.0"
    },
    "cryptocheck": {
        "cmdline": [],
        "modules": [
            "cryptocheck"
        ],
        "version": "0.0.1"
    },
    "cryptoclip": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.1"
    },
    "cryptocoin": {
        "cmdline": [],
        "modules": [
            "cryptocoin",
            "cryptocoin.base58",
            "cryptocoin.key"
        ],
        "version": "0.0.1"
    },
    "cryptocoinchartsapi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cryptoconditions": {
        "cmdline": [],
        "modules": [
            "cryptoconditions",
            "cryptoconditions.condition",
            "cryptoconditions.crypto",
            "cryptoconditions.exceptions",
            "cryptoconditions.fulfillment",
            "cryptoconditions.lib",
            "cryptoconditions.lib.hasher",
            "cryptoconditions.lib.predictor",
            "cryptoconditions.lib.reader",
            "cryptoconditions.lib.writer",
            "cryptoconditions.type_registry",
            "cryptoconditions.types",
            "cryptoconditions.types.base_sha256",
            "cryptoconditions.types.ed25519",
            "cryptoconditions.types.inverted_threshold_sha256",
            "cryptoconditions.types.sha256",
            "cryptoconditions.types.threshold_sha256",
            "cryptoconditions.types.timeout",
            "cryptoconditions.version"
        ],
        "version": "0.5.1"
    },
    "cryptodrive": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cryptoexchange": {
        "cmdline": [],
        "modules": [
            "cryptoexchange",
            "cryptoexchange.HttpMD5Util",
            "cryptoexchange.OkcoinFutureAPI",
            "cryptoexchange.OkcoinSpotAPI",
            "cryptoexchange.OkcoinWebsocket",
            "cryptoexchange.api796",
            "cryptoexchange.bitfutures",
            "cryptoexchange.bitmex",
            "cryptoexchange.bitmex_ws",
            "cryptoexchange/util.OkcoinClient",
            "cryptoexchange/util.bitmex-auth-test",
            "cryptoexchange/util.bitmex-generate-api-key",
            "cryptoexchange/util.bitmex-ws-auth-test"
        ],
        "version": "0.0.6"
    },
    "cryptogaphy": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "cryptography": {
        "cmdline": [],
        "modules": [
            "cryptography",
            "cryptography.exceptions",
            "cryptography.fernet",
            "cryptography.hazmat",
            "cryptography.hazmat.backends",
            "cryptography.hazmat.backends.commoncrypto",
            "cryptography.hazmat.backends.commoncrypto.backend",
            "cryptography.hazmat.backends.commoncrypto.ciphers",
            "cryptography.hazmat.backends.commoncrypto.hashes",
            "cryptography.hazmat.backends.commoncrypto.hmac",
            "cryptography.hazmat.backends.interfaces",
            "cryptography.hazmat.backends.multibackend",
            "cryptography.hazmat.backends.openssl",
            "cryptography.hazmat.backends.openssl.backend",
            "cryptography.hazmat.backends.openssl.ciphers",
            "cryptography.hazmat.backends.openssl.cmac",
            "cryptography.hazmat.backends.openssl.decode_asn1",
            "cryptography.hazmat.backends.openssl.dh",
            "cryptography.hazmat.backends.openssl.dsa",
            "cryptography.hazmat.backends.openssl.ec",
            "cryptography.hazmat.backends.openssl.encode_asn1",
            "cryptography.hazmat.backends.openssl.hashes",
            "cryptography.hazmat.backends.openssl.hmac",
            "cryptography.hazmat.backends.openssl.rsa",
            "cryptography.hazmat.backends.openssl.utils",
            "cryptography.hazmat.backends.openssl.x509",
            "cryptography.hazmat.bindings",
            "cryptography.hazmat.bindings.commoncrypto",
            "cryptography.hazmat.bindings.commoncrypto.binding",
            "cryptography.hazmat.bindings.openssl",
            "cryptography.hazmat.bindings.openssl._conditional",
            "cryptography.hazmat.bindings.openssl.binding",
            "cryptography.hazmat.primitives",
            "cryptography.hazmat.primitives.asymmetric",
            "cryptography.hazmat.primitives.asymmetric.dh",
            "cryptography.hazmat.primitives.asymmetric.dsa",
            "cryptography.hazmat.primitives.asymmetric.ec",
            "cryptography.hazmat.primitives.asymmetric.padding",
            "cryptography.hazmat.primitives.asymmetric.rsa",
            "cryptography.hazmat.primitives.asymmetric.utils",
            "cryptography.hazmat.primitives.ciphers",
            "cryptography.hazmat.primitives.ciphers.algorithms",
            "cryptography.hazmat.primitives.ciphers.base",
            "cryptography.hazmat.primitives.ciphers.modes",
            "cryptography.hazmat.primitives.cmac",
            "cryptography.hazmat.primitives.constant_time",
            "cryptography.hazmat.primitives.hashes",
            "cryptography.hazmat.primitives.hmac",
            "cryptography.hazmat.primitives.interfaces",
            "cryptography.hazmat.primitives.kdf",
            "cryptography.hazmat.primitives.kdf.concatkdf",
            "cryptography.hazmat.primitives.kdf.hkdf",
            "cryptography.hazmat.primitives.kdf.kbkdf",
            "cryptography.hazmat.primitives.kdf.pbkdf2",
            "cryptography.hazmat.primitives.kdf.scrypt",
            "cryptography.hazmat.primitives.kdf.x963kdf",
            "cryptography.hazmat.primitives.keywrap",
            "cryptography.hazmat.primitives.padding",
            "cryptography.hazmat.primitives.serialization",
            "cryptography.hazmat.primitives.twofactor",
            "cryptography.hazmat.primitives.twofactor.hotp",
            "cryptography.hazmat.primitives.twofactor.totp",
            "cryptography.hazmat.primitives.twofactor.utils",
            "cryptography.utils",
            "cryptography.x509",
            "cryptography.x509.base",
            "cryptography.x509.extensions",
            "cryptography.x509.general_name",
            "cryptography.x509.name",
            "cryptography.x509.oid"
        ],
        "version": "1.8.1"
    },
    "cryptography-vectors": {
        "cmdline": [],
        "modules": [
            "cryptography_vectors"
        ],
        "version": "1.8.1"
    },
    "cryptography-with-deps": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.10"
    },
    "cryptographykit": {
        "cmdline": [],
        "modules": [
            "Cryptokit",
            "Cryptokit.CaesarCipher",
            "Cryptokit.HideMessageInImage",
            "Cryptokit.OneTimePadEncryption",
            "Cryptokit.VigenereCipher",
            "Cryptokit/helper_files",
            "Cryptokit/helper_files.detectEnglish"
        ],
        "version": "2.0.3"
    },
    "cryptoim": {
        "cmdline": [
            "main.py"
        ],
        "modules": [
            "cryptoim",
            "cryptoim.cli",
            "cryptoim.common",
            "cryptoim.const",
            "cryptoim.decryptor_core",
            "cryptoim.encryptor_core",
            "cryptoim.key_exchange",
            "cryptoim.xmpp"
        ],
        "version": "0.1.1"
    },
    "cryptokit": {
        "cmdline": [],
        "modules": [
            "cryptokit",
            "cryptokit.aes",
            "cryptokit.rsa"
        ],
        "version": "0.0.2"
    },
    "cryptonator": {
        "cmdline": [],
        "modules": [
            "cryptonator"
        ],
        "version": "0.0.2"
    },
    "cryptonet": {
        "cmdline": [],
        "modules": [
            "cryptonet",
            "cryptonet.chain",
            "cryptonet.constants",
            "cryptonet.dapp",
            "cryptonet.database",
            "cryptonet.datastructs",
            "cryptonet.debug",
            "cryptonet.errors",
            "cryptonet.miner",
            "cryptonet.rpcserver",
            "cryptonet.seeknbuild",
            "cryptonet.standard",
            "cryptonet.statemaker",
            "cryptonet.utilities"
        ],
        "version": "0.0.5"
    },
    "cryptopng": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cryptopy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cryptorito": {
        "cmdline": [],
        "modules": [
            "cryptorito"
        ],
        "version": "0.0.3"
    },
    "cryptoshop": {
        "cmdline": [],
        "modules": [
            "cryptoshop",
            "cryptoshop._cascade_engine",
            "cryptoshop._chunk_engine",
            "cryptoshop._derivation_engine",
            "cryptoshop._nonce_engine",
            "cryptoshop._settings",
            "cryptoshop.cryptoshop"
        ],
        "version": "2.0.1"
    },
    "cryptosyspki": {
        "cmdline": [],
        "modules": [
            "cryptosyspki"
        ],
        "version": "0.1.1"
    },
    "cryptotik": {
        "cmdline": [],
        "modules": [
            "cryptotik",
            "cryptotik.bittrex",
            "cryptotik.btce",
            "cryptotik.common",
            "cryptotik.hitbtc",
            "cryptotik.livecoin",
            "cryptotik.okcoin",
            "cryptotik.poloniex",
            "cryptotik.therock"
        ],
        "version": "0.12"
    },
    "cryptotools": {
        "cmdline": [],
        "modules": [
            "cryptotools",
            "cryptotools.converters",
            "cryptotools.decrypt",
            "cryptotools.encrypt",
            "cryptotools.hamming_distance",
            "cryptotools.language_score",
            "cryptotools.single_char_xor_cipher",
            "cryptotools.xor",
            "cryptotools.xor_cipher"
        ],
        "version": "0.1.0.dev1"
    },
    "cryptotrade": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "cryptox": {
        "cmdline": [],
        "modules": [
            "cryptox",
            "cryptox.market",
            "cryptox.private",
            "cryptox.public",
            "cryptox.public.common",
            "cryptox.public.common.common",
            "cryptox.public.day_volume",
            "cryptox.public.day_volume.day_volume",
            "cryptox.public.get_currency_pairs",
            "cryptox.public.get_currency_pairs.get_currency_pairs",
            "cryptox.public.order_book",
            "cryptox.public.order_book.order_book",
            "cryptox.public.trade_history",
            "cryptox.public.trade_history.trade_history",
            "cryptox.sockets",
            "tests",
            "tests.context",
            "tests.test_basic"
        ],
        "version": "0.2.0"
    },
    "cryptoyaml": {
        "cmdline": [],
        "modules": [
            "cryptoyaml",
            "cryptoyaml.api",
            "cryptoyaml.commands",
            "cryptoyaml.testing"
        ],
        "version": "0.2.0"
    },
    "cryptsy": {
        "cmdline": [],
        "modules": [
            "Cryptsy"
        ],
        "version": "0.2.1"
    },
    "crysp": {
        "cmdline": [],
        "modules": [
            "crysp",
            "crysp.aes",
            "crysp.bits",
            "crysp.blake",
            "crysp.chacha",
            "crysp.crc",
            "crysp.des",
            "crysp.keccak",
            "crysp.md",
            "crysp.mode",
            "crysp.padding",
            "crysp.poly",
            "crysp.rc4",
            "crysp.salsa20",
            "crysp.serpent",
            "crysp.sha",
            "crysp.skein",
            "crysp.threefish",
            "crysp.utils",
            "crysp.utils.freq1",
            "crysp.utils.freq2",
            "crysp.utils.freq3",
            "crysp.utils.knapsack",
            "crysp.utils.oldies",
            "crysp.utils.operators",
            "crysp.utils.perms",
            "crysp.utils.words",
            "crysp.wb"
        ],
        "version": "0.9"
    },
    "crystalarchitect": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "crystalbball": {
        "cmdline": [],
        "modules": [
            "crystalbball",
            "crystalbball.constants",
            "crystalbball.crystalbball",
            "crystalbball.utils"
        ],
        "version": "0.1.4"
    },
    "crystalmethod": {
        "cmdline": [],
        "modules": [
            "crystalmethod"
        ],
        "version": "3.0.0"
    },
    "crystalpy": {
        "cmdline": [],
        "modules": [
            "crystalpy",
            "crystalpy.diffraction",
            "crystalpy.diffraction.ComplexAmplitude",
            "crystalpy.diffraction.Diffraction",
            "crystalpy.diffraction.DiffractionExceptions",
            "crystalpy.diffraction.DiffractionResult",
            "crystalpy.diffraction.DiffractionSetup",
            "crystalpy.diffraction.DiffractionSetupSweeps",
            "crystalpy.diffraction.GeometryType",
            "crystalpy.diffraction.PerfectCrystalDiffraction",
            "crystalpy.examples",
            "crystalpy.examples.PlotData1D",
            "crystalpy.examples.Si111",
            "crystalpy.examples.Si111_simple",
            "crystalpy.examples.Values",
            "crystalpy.examples.main",
            "crystalpy.polarization",
            "crystalpy.polarization.CrystalPhasePlate",
            "crystalpy.polarization.MuellerDiffraction",
            "crystalpy.polarization.MuellerMatrix",
            "crystalpy.polarization.MuellerResult",
            "crystalpy.tests",
            "crystalpy.tests.PyCrystalTests",
            "crystalpy.util",
            "crystalpy.util.ComplexAmplitudePhoton",
            "crystalpy.util.ComplexAmplitudePhotonBunch",
            "crystalpy.util.Photon",
            "crystalpy.util.PhotonBunch",
            "crystalpy.util.PolarizedPhoton",
            "crystalpy.util.PolarizedPhotonBunch",
            "crystalpy.util.StokesVector",
            "crystalpy.util.Vector"
        ],
        "version": "0.0.5"
    },
    "crython": {
        "cmdline": [],
        "modules": [
            "crython",
            "crython.compat",
            "crython.expression",
            "crython.field",
            "crython.job",
            "crython.log",
            "crython.tab"
        ],
        "version": "0.0.5"
    },
    "crytography": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "crytto": {
        "cmdline": [],
        "modules": [
            "crytto",
            "crytto.filecrypt",
            "crytto.main",
            "crytto.utils",
            "filecrypt",
            "filecrypt.filecrypt",
            "filecrypt.main",
            "filecrypt.utils"
        ],
        "version": "0.2.1"
    },
    "crzbxs": {
        "cmdline": [],
        "modules": [
            "crzbxs"
        ],
        "version": "1.0.0"
    },
    "cs": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.1"
    },
    "cs-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.0"
    },
    "cs-time-updater": {
        "cmdline": [
            "cs_time_updater.py"
        ],
        "modules": [],
        "version": "0.1"
    },
    "cs.accreditedfile": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.accreditedfile",
            "cs.accreditedfile.browser",
            "cs.accreditedfile.browser.accreditation",
            "cs.accreditedfile.browser.accreditedfileview",
            "cs.accreditedfile.config",
            "cs.accreditedfile.content",
            "cs.accreditedfile.content.accreditedfile",
            "cs.accreditedfile.future",
            "cs.accreditedfile.helpers",
            "cs.accreditedfile.interfaces",
            "cs.accreditedfile.interfaces.accreditedfile",
            "cs.accreditedfile.subscriber",
            "cs.accreditedfile.tests",
            "cs.accreditedfile.tests.base",
            "cs.accreditedfile.tests.test_doctest"
        ],
        "version": "1.5"
    },
    "cs.aktak": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.aktak",
            "cs.aktak.browser",
            "cs.aktak.browser.aktak_urteka",
            "cs.aktak.tests"
        ],
        "version": "1.2"
    },
    "cs.ansi-colour": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.ansi_colour"
        ],
        "version": "20160828"
    },
    "cs.app.beyonwiz": {
        "cmdline": [],
        "modules": [
            "cs.app",
            "cs.app.beyonwiz"
        ],
        "version": "20160828"
    },
    "cs.app.maildb": {
        "cmdline": [],
        "modules": [
            "cs.app",
            "cs.app.maildb"
        ],
        "version": "20160828"
    },
    "cs.app.mailfiler": {
        "cmdline": [],
        "modules": [
            "cs.app",
            "cs.app.mailfiler"
        ],
        "version": "20160828"
    },
    "cs.app.megacli": {
        "cmdline": [],
        "modules": [
            "cs.app",
            "cs.app.megacli"
        ],
        "version": "20160310"
    },
    "cs.app.ssh": {
        "cmdline": [],
        "modules": [
            "cs.app",
            "cs.app.ssh"
        ],
        "version": "20161003"
    },
    "cs.argitalpena": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.argitalpena",
            "cs.argitalpena.browser",
            "cs.argitalpena.browser.azken_argitalpenak",
            "cs.argitalpena.config",
            "cs.argitalpena.content",
            "cs.argitalpena.content.argitalpena",
            "cs.argitalpena.interfaces"
        ],
        "version": "2.3.3"
    },
    "cs.asynchron": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.asynchron"
        ],
        "version": "20160828"
    },
    "cs.auth.facebook": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.auth",
            "cs.auth.facebook",
            "cs.auth.facebook.browser",
            "cs.auth.facebook.controlpanel",
            "cs.auth.facebook.interfaces",
            "cs.auth.facebook.login",
            "cs.auth.facebook.plugin",
            "cs.auth.facebook.setuphandlers",
            "cs.auth.facebook.tests",
            "cs.auth.facebook.user"
        ],
        "version": "1.1"
    },
    "cs.auth.twitter": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.auth",
            "cs.auth.twitter",
            "cs.auth.twitter.config",
            "cs.auth.twitter.controlpanel",
            "cs.auth.twitter.interfaces",
            "cs.auth.twitter.login",
            "cs.auth.twitter.plugin",
            "cs.auth.twitter.setuphandlers",
            "cs.auth.twitter.tests",
            "cs.auth.twitter.user"
        ],
        "version": "1.1"
    },
    "cs.autotranslate": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.autotranslate",
            "cs.autotranslate.subscriber",
            "cs.autotranslate.tests",
            "cs.autotranslate.translate"
        ],
        "version": "1.1"
    },
    "cs.board": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.board",
            "cs.board.browser",
            "cs.board.browser.api",
            "cs.board.browser.boardview",
            "cs.board.browser.documentview",
            "cs.board.config",
            "cs.board.content",
            "cs.board.content.board",
            "cs.board.content.boarddocument",
            "cs.board.interfaces",
            "cs.board.interfaces.board",
            "cs.board.interfaces.boarddocument",
            "cs.board.portlets",
            "cs.board.setuphandlers",
            "cs.board.subscribers",
            "cs.board.subscribers.boarddocument",
            "cs.board.subscribers.file",
            "cs.board.tests",
            "cs.board.tests.base",
            "cs.board.tests.test_doctest"
        ],
        "version": "1.7.2"
    },
    "cs.bodysection": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.bodysection",
            "cs.bodysection.navigation",
            "cs.bodysection.tests"
        ],
        "version": "1.4"
    },
    "cs.clockutils": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.clockutils"
        ],
        "version": "20150116.2"
    },
    "cs.collage": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.collage",
            "cs.collage.browser",
            "cs.collage.browser.views",
            "cs.collage.tests"
        ],
        "version": "1.4"
    },
    "cs.commenteditor": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.commenteditor",
            "cs.commenteditor.browser",
            "cs.commenteditor.tests"
        ],
        "version": "1.1"
    },
    "cs.configutils": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.configutils"
        ],
        "version": "20160828"
    },
    "cs.cssbrowserselector": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.cssbrowserselector",
            "cs.cssbrowserselector.tests"
        ],
        "version": "1.0"
    },
    "cs.csvutils": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.csvutils"
        ],
        "version": "20160828"
    },
    "cs.debug": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.debug"
        ],
        "version": "20160918"
    },
    "cs.discussionextender": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.discussionextender",
            "cs.discussionextender.comments",
            "cs.discussionextender.discussion",
            "cs.discussionextender.tests"
        ],
        "version": "1.0.4"
    },
    "cs.donedukia": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.donedukia",
            "cs.donedukia.Extensions",
            "cs.donedukia.Extensions.Install",
            "cs.donedukia.browser",
            "cs.donedukia.browser.donedukiaview",
            "cs.donedukia.config",
            "cs.donedukia.content",
            "cs.donedukia.content.donedukia",
            "cs.donedukia.interfaces",
            "cs.donedukia.tests"
        ],
        "version": "2.1.2"
    },
    "cs.dxfeatured": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.dxfeatured",
            "cs.dxfeatured.browser",
            "cs.dxfeatured.featured",
            "cs.dxfeatured.tests"
        ],
        "version": "1.0"
    },
    "cs.editablebanner": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.editablebanner",
            "cs.editablebanner.banner",
            "cs.editablebanner.interfaces",
            "cs.editablebanner.tests"
        ],
        "version": "0.4"
    },
    "cs.editablefooter": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.editablefooter",
            "cs.editablefooter.footer",
            "cs.editablefooter.interfaces",
            "cs.editablefooter.tests",
            "cs.editablefooter.upgrades"
        ],
        "version": "2.0"
    },
    "cs.editabletagline": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.editabletagline",
            "cs.editabletagline.interfaces",
            "cs.editabletagline.tagline",
            "cs.editabletagline.tests",
            "cs.editabletagline.upgrades"
        ],
        "version": "2.0.1"
    },
    "cs.env": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.env"
        ],
        "version": "20160828"
    },
    "cs.excutils": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.excutils"
        ],
        "version": "20160828"
    },
    "cs.featured": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.featured",
            "cs.featured.config",
            "cs.featured.content",
            "cs.featured.content.featured",
            "cs.featured.interfaces",
            "cs.featured.portlets",
            "cs.featured.portlets.featuredportlet",
            "cs.featured.tests",
            "cs.featured.tests.base_featuredportlet",
            "cs.featured.tests.doc_tests",
            "cs.featured.tests.test_featuredportlet"
        ],
        "version": "1.1.1"
    },
    "cs.fileutils": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.fileutils"
        ],
        "version": "20160918"
    },
    "cs.folderishpage": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.folderishpage",
            "cs.folderishpage.folderishpage",
            "cs.folderishpage.tests"
        ],
        "version": "2.0"
    },
    "cs.gallery": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.gallery",
            "cs.gallery.tests"
        ],
        "version": "1.0"
    },
    "cs.html": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.html"
        ],
        "version": "20160828"
    },
    "cs.htmlmailer": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.htmlmailer",
            "cs.htmlmailer.mailer"
        ],
        "version": "1.0.1"
    },
    "cs.i18n": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.i18n",
            "cs.i18n.browser",
            "cs.i18n.browser.translatable",
            "cs.i18n.interfaces"
        ],
        "version": "0.10"
    },
    "cs.id3": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.id3"
        ],
        "version": "20150116.2"
    },
    "cs.inttypes": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.inttypes"
        ],
        "version": "20150120"
    },
    "cs.kontratazioa": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.kontratazioa",
            "cs.kontratazioa.browser",
            "cs.kontratazioa.browser.kontratazioa_list",
            "cs.kontratazioa.browser.kontratazioafolderview",
            "cs.kontratazioa.browser.kontratazioaview",
            "cs.kontratazioa.browser.state_list",
            "cs.kontratazioa.config",
            "cs.kontratazioa.content",
            "cs.kontratazioa.content.kontratazioa",
            "cs.kontratazioa.content.kontratazioafolder",
            "cs.kontratazioa.interfaces",
            "cs.kontratazioa.interfaces.kontratazioa",
            "cs.kontratazioa.interfaces.kontratazioafolder"
        ],
        "version": "2.2"
    },
    "cs.later": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.later"
        ],
        "version": "20160828"
    },
    "cs.lex": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.lex"
        ],
        "version": "20160828"
    },
    "cs.linguaplone.links": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.linguaplone",
            "cs.linguaplone.links",
            "cs.linguaplone.links.tests",
            "cs.linguaplone.links.viewlet"
        ],
        "version": "1.2"
    },
    "cs.logutils": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.logutils"
        ],
        "version": "20160828"
    },
    "cs.mailutils": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.mailutils"
        ],
        "version": "20160828"
    },
    "cs.migration.folder2donedukia": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.migration",
            "cs.migration.folder2donedukia",
            "cs.migration.folder2donedukia.browser",
            "cs.migration.folder2donedukia.browser.folder",
            "cs.migration.folder2donedukia.tests"
        ],
        "version": "1.8"
    },
    "cs.mixin.ucattrs": {
        "cmdline": [],
        "modules": [
            "cs.mixin",
            "cs.mixin.ucattrs"
        ],
        "version": "20150118"
    },
    "cs.navigation": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.navigation",
            "cs.navigation.portlets",
            "cs.navigation.portlets.navigation",
            "cs.navigation.tests"
        ],
        "version": "0.4"
    },
    "cs.nodedb": {
        "cmdline": [],
        "modules": [
            "cs.nodedb",
            "cs.nodedb.backend",
            "cs.nodedb.csvdb",
            "cs.nodedb.csvdb_tests",
            "cs.nodedb.export",
            "cs.nodedb.export_tests",
            "cs.nodedb.html",
            "cs.nodedb.httpd",
            "cs.nodedb.mappingdb",
            "cs.nodedb.mappingdb_tests",
            "cs.nodedb.node",
            "cs.nodedb.node_tests",
            "cs.nodedb.sqla",
            "cs.nodedb.sqla_tests",
            "cs.nodedb.text",
            "cs.nodedb.text_tests",
            "cs.nodedb.tokcab",
            "cs.nodedb.tokcab_tests"
        ],
        "version": "20160828"
    },
    "cs.numeric": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.numeric"
        ],
        "version": "20150311.2"
    },
    "cs.obj": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.obj"
        ],
        "version": "20160828"
    },
    "cs.pfg.dnivalidator": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.pfg",
            "cs.pfg.dnivalidator",
            "cs.pfg.dnivalidator.dni",
            "cs.pfg.dnivalidator.patches"
        ],
        "version": "0.3"
    },
    "cs.pfg.multifile": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.pfg",
            "cs.pfg.multifile",
            "cs.pfg.multifile.browser",
            "cs.pfg.multifile.config",
            "cs.pfg.multifile.content",
            "cs.pfg.multifile.content.formmultifilefield",
            "cs.pfg.multifile.content.widgets",
            "cs.pfg.multifile.interfaces",
            "cs.pfg.multifile.interfaces.formmultifilefield",
            "cs.pfg.multifile.tests",
            "cs.pfg.multifile.tests.base",
            "cs.pfg.multifile.tests.test_doctest"
        ],
        "version": "1.0.1"
    },
    "cs.pfg.xmlmailer": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.pfg",
            "cs.pfg.xmlmailer",
            "cs.pfg.xmlmailer.Extensions",
            "cs.pfg.xmlmailer.Extensions.install",
            "cs.pfg.xmlmailer.config",
            "cs.pfg.xmlmailer.mailadapter",
            "cs.pfg.xmlmailer.tests"
        ],
        "version": "0.2"
    },
    "cs.plone5.tinymcepatch": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.plone5",
            "cs.plone5.tinymcepatch",
            "cs.plone5.tinymcepatch.patches",
            "cs.plone5.tinymcepatch.tests"
        ],
        "version": "1.0.3"
    },
    "cs.plonepatches.resourceregistries": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.plonepatches",
            "cs.plonepatches.resourceregistries",
            "cs.plonepatches.resourceregistries.BaseRegistry",
            "cs.plonepatches.resourceregistries.tests"
        ],
        "version": "1.0"
    },
    "cs.plt.contentnegotiator": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.plt",
            "cs.plt.contentnegotiator",
            "cs.plt.contentnegotiator.patches"
        ],
        "version": "1.3"
    },
    "cs.portlet.aemet": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.portlet",
            "cs.portlet.aemet",
            "cs.portlet.aemet.aemetparser",
            "cs.portlet.aemet.aemetportlet",
            "cs.portlet.aemet.tests",
            "cs.portlet.aemet.tests.base",
            "cs.portlet.aemet.tests.test_portlet"
        ],
        "version": "1.3"
    },
    "cs.portlet.calendar": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.portlet",
            "cs.portlet.calendar",
            "cs.portlet.calendar.events",
            "cs.portlet.calendar.portlet",
            "cs.portlet.calendar.testing",
            "cs.portlet.calendar.tests",
            "cs.portlet.calendar.tests.test_setup"
        ],
        "version": "1.0"
    },
    "cs.portlet.icalendar": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.portlet",
            "cs.portlet.icalendar",
            "cs.portlet.icalendar.calendarportlet",
            "cs.portlet.icalendar.tests"
        ],
        "version": "1.0"
    },
    "cs.predicate": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.predicate"
        ],
        "version": "20160828"
    },
    "cs.py.func": {
        "cmdline": [],
        "modules": [
            "cs.py",
            "cs.py.func"
        ],
        "version": "20160828"
    },
    "cs.py.modules": {
        "cmdline": [],
        "modules": [
            "cs.py",
            "cs.py.modules"
        ],
        "version": "20160918"
    },
    "cs.py.stack": {
        "cmdline": [],
        "modules": [
            "cs.py",
            "cs.py.stack"
        ],
        "version": "20160827"
    },
    "cs.py3": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.py3"
        ],
        "version": "20160828"
    },
    "cs.py3-for2": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.py3_for2"
        ],
        "version": "20160827.1"
    },
    "cs.py3-for3": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.py3_for3"
        ],
        "version": "20160827"
    },
    "cs.queues": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.queues"
        ],
        "version": "20160828"
    },
    "cs.range": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.range"
        ],
        "version": "20160828"
    },
    "cs.recipe.checkinterval": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.recipe",
            "cs.recipe.checkinterval"
        ],
        "version": "1.0"
    },
    "cs.recipe.eggpath": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.recipe",
            "cs.recipe.eggpath",
            "cs.recipe.eggpath.tests",
            "cs.recipe.eggpath.tests.test_docs"
        ],
        "version": "1.8"
    },
    "cs.resources": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.resources"
        ],
        "version": "20160828"
    },
    "cs.rfc2616": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.rfc2616"
        ],
        "version": "20160828"
    },
    "cs.rtmpstreaming": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.rtmpstreaming",
            "cs.rtmpstreaming.browser",
            "cs.rtmpstreaming.browser.streamingview",
            "cs.rtmpstreaming.portlets",
            "cs.rtmpstreaming.portlets.streamingportlet",
            "cs.rtmpstreaming.tests",
            "cs.rtmpstreaming.tests.base_streamingportlet",
            "cs.rtmpstreaming.tests.test_streamingportlet"
        ],
        "version": "1.0.4"
    },
    "cs.seopack": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.seopack",
            "cs.seopack.batch",
            "cs.seopack.canonical",
            "cs.seopack.noindex"
        ],
        "version": "1.1"
    },
    "cs.seq": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.seq"
        ],
        "version": "20160918"
    },
    "cs.serialise": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.serialise"
        ],
        "version": "20160828"
    },
    "cs.sh": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.sh"
        ],
        "version": "20150118"
    },
    "cs.tags": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.tags",
            "cs.tags.browser",
            "cs.tags.browser.tags",
            "cs.tags.clouds",
            "cs.tags.interfaces",
            "cs.tags.tags",
            "cs.tags.tests"
        ],
        "version": "0.1.1"
    },
    "cs.threads": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.threads"
        ],
        "version": "20160828"
    },
    "cs.timeutils": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.timeutils"
        ],
        "version": "20150116"
    },
    "cs.togglecanonical": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.togglecanonical",
            "cs.togglecanonical.tests",
            "cs.togglecanonical.upgrades"
        ],
        "version": "1.1"
    },
    "cs.tty": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.tty"
        ],
        "version": "20160828"
    },
    "cs.upd": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.upd"
        ],
        "version": "20160828"
    },
    "cs.urlutils": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.urlutils"
        ],
        "version": "20160828"
    },
    "cs.video": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.video",
            "cs.video.Extensions",
            "cs.video.Extensions.Install",
            "cs.video.browser",
            "cs.video.browser.activate",
            "cs.video.browser.videos",
            "cs.video.config",
            "cs.video.content",
            "cs.video.content.video",
            "cs.video.interfaces",
            "cs.video.syndication",
            "cs.video.tests",
            "cs.video.tests.doc_tests"
        ],
        "version": "3.0"
    },
    "cs.zestreleaser.changelog": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.zestreleaser",
            "cs.zestreleaser.changelog"
        ],
        "version": "0.7"
    },
    "cs.zestreleaser.upload": {
        "cmdline": [],
        "modules": [
            "cs",
            "cs.zestreleaser",
            "cs.zestreleaser.upload",
            "cs.zestreleaser.upload.upload"
        ],
        "version": "1.0"
    },
    "cs103": {
        "cmdline": [],
        "modules": [
            "cs103",
            "cs103.custom",
            "cs103.custom.custom",
            "cs103.custom.ipython_config",
            "cs103.image",
            "cs103.image.image",
            "cs103.image.imagetest",
            "cs103.iofunc",
            "cs103.iofunc.example",
            "cs103.iofunc.iofunc",
            "cs103.parsing",
            "cs103.parsing.parsing",
            "cs103.testing",
            "cs103.testing.example",
            "cs103.testing.testing",
            "cs103.typecheck",
            "cs103.typecheck.example",
            "cs103.typecheck.typecheck"
        ],
        "version": "0.2.6"
    },
    "cs10606": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "cs1110grade": {
        "cmdline": [
            "grade.py"
        ],
        "modules": [
            "cs1110grade",
            "cs1110grade.grade_foo",
            "cs1110grade.grade_foo.master",
            "cs1110grade.grade_foo.master.foo",
            "cs1110grade.grade_foo.tests",
            "gradepy",
            "gradepy.command_line",
            "gradepy.grade"
        ],
        "version": "0.1.2"
    },
    "cs207rbtree": {
        "cmdline": [],
        "modules": [
            "cs207rbtree",
            "cs207rbtree.interface",
            "cs207rbtree.logical",
            "cs207rbtree.physical",
            "cs207rbtree.rbtree"
        ],
        "version": "1.0.3"
    },
    "cs251tk": {
        "cmdline": [],
        "modules": [
            "cs251tk",
            "cs251tk.common",
            "cs251tk.common.chdir",
            "cs251tk.common.dirsize",
            "cs251tk.common.find_unmerged_branches_in_cwd",
            "cs251tk.common.flatten",
            "cs251tk.common.group_by",
            "cs251tk.common.parse_commit_msg_for_assignments",
            "cs251tk.common.run",
            "cs251tk.common.test_chdir",
            "cs251tk.common.test_dirsize",
            "cs251tk.common.test_find_unmerged_branches_in_cwd",
            "cs251tk.common.test_flatten",
            "cs251tk.common.test_group_by",
            "cs251tk.common.test_parse_commit_msg_for_assignments",
            "cs251tk.common.test_run",
            "cs251tk.common.version",
            "cs251tk.formatters",
            "cs251tk.formatters.base",
            "cs251tk.formatters.gist",
            "cs251tk.formatters.markdown",
            "cs251tk.formatters.yaml",
            "cs251tk.referee",
            "cs251tk.referee.args",
            "cs251tk.referee.emailify",
            "cs251tk.referee.parse_commits",
            "cs251tk.referee.process_student",
            "cs251tk.referee.send_email",
            "cs251tk.specs",
            "cs251tk.specs.cache",
            "cs251tk.specs.load",
            "cs251tk.specs.util",
            "cs251tk.student",
            "cs251tk.student.analyze",
            "cs251tk.student.checkout",
            "cs251tk.student.clone",
            "cs251tk.student.markdownify",
            "cs251tk.student.markdownify.cat",
            "cs251tk.student.markdownify.find_warnings",
            "cs251tk.student.markdownify.markdownify",
            "cs251tk.student.markdownify.pipe",
            "cs251tk.student.markdownify.process_file",
            "cs251tk.student.markdownify.test_cat",
            "cs251tk.student.markdownify.test_pipe",
            "cs251tk.student.markdownify.test_truncate",
            "cs251tk.student.markdownify.truncate",
            "cs251tk.student.markdownify.warning_unmerged_branches",
            "cs251tk.student.pull",
            "cs251tk.student.record",
            "cs251tk.student.remove",
            "cs251tk.student.reset",
            "cs251tk.student.stash",
            "cs251tk.toolkit",
            "cs251tk.toolkit.args",
            "cs251tk.toolkit.config",
            "cs251tk.toolkit.find_update",
            "cs251tk.toolkit.get_students",
            "cs251tk.toolkit.gist",
            "cs251tk.toolkit.process_student",
            "cs251tk.toolkit.progress_bar",
            "cs251tk.toolkit.save_recordings",
            "cs251tk.toolkit.tabulate",
            "cs251tk.toolkit.test_args",
            "cs251tk.toolkit.test_get_students",
            "cs251tk.toolkit.test_tabulate"
        ],
        "version": "2.1.14"
    },
    "cs50": {
        "cmdline": [],
        "modules": [
            "cs50",
            "cs50.cs50",
            "cs50.sql"
        ],
        "version": "1.3.0"
    },
    "csa": {
        "cmdline": [],
        "modules": [
            "csa",
            "csa._elementary",
            "csa._misc",
            "csa.arithmetic",
            "csa.closure",
            "csa.conngen",
            "csa.connset",
            "csa.csaobject",
            "csa.ct",
            "csa.elementary",
            "csa.function",
            "csa.geometry",
            "csa.intervalset",
            "csa.misc",
            "csa.operators",
            "csa.plot",
            "csa.stream",
            "csa.valueset",
            "csa.version"
        ],
        "version": "0.1.6"
    },
    "csample": {
        "cmdline": [],
        "modules": [
            "csample"
        ],
        "version": "0.6.2"
    },
    "csapi": {
        "cmdline": [],
        "modules": [
            "csapi",
            "csapi.cli",
            "csapi.csapi"
        ],
        "version": "0.0.8"
    },
    "csat": {
        "cmdline": [],
        "modules": [
            "csat",
            "csat.acquisition",
            "csat.acquisition.admin",
            "csat.acquisition.assets",
            "csat.acquisition.base",
            "csat.acquisition.forms",
            "csat.acquisition.migrations",
            "csat.acquisition.migrations.0001_initial",
            "csat.acquisition.migrations.0002_auto__add_field_acquisitionsessionconfig_temporary",
            "csat.acquisition.migrations.0003_auto__add_field_acquisitionsessionconfig_created",
            "csat.acquisition.migrations.0004_auto__add_field_acquisitionsessionconfig_started__add_field_acquisitio",
            "csat.acquisition.migrations.0005_auto__del_unique_datacollectorconfig_running_instance_id",
            "csat.acquisition.migrations.0006_auto__add_field_acquisitionsessionconfig_database",
            "csat.acquisition.migrations.0007_auto__add_field_datacollectorconfig_result_id__add_field_datacollector",
            "csat.acquisition.migrations.0008_auto__del_field_datacollectorconfig_result__add_field_datacollectorcon",
            "csat.acquisition.migrations.0009_auto__del_field_datacollectorconfig_received__add_field_datacollectorc",
            "csat.acquisition.migrations.0010_auto__del_field_acquisitionsessionconfig_database",
            "csat.acquisition.migrations.0011_auto__add_field_acquisitionsessionconfig_graph",
            "csat.acquisition.migrations.0012_auto__add_field_acquisitionsessionconfig_thumbnail",
            "csat.acquisition.migrations.0013_auto__add_field_acquisitionsessionconfig_dark_thumbnail",
            "csat.acquisition.migrations.0014_auto__del_field_acquisitionsessionconfig_dark_thumbnail__add_field_acq",
            "csat.acquisition.models",
            "csat.acquisition.runner",
            "csat.acquisition.scripts",
            "csat.acquisition.scripts.data",
            "csat.acquisition.scripts.runner",
            "csat.acquisition.scripts.server",
            "csat.acquisition.server",
            "csat.acquisition.urls",
            "csat.acquisition.views",
            "csat.client",
            "csat.collectors",
            "csat.collectors.examples",
            "csat.collectors.examples.forms",
            "csat.collectors.examples.graphs",
            "csat.collectors.examples.migrations",
            "csat.collectors.examples.migrations.0001_initial",
            "csat.collectors.examples.models",
            "csat.collectors.ghcomments",
            "csat.collectors.ghcomments.collector",
            "csat.collectors.ghcomments.forms",
            "csat.collectors.ghcomments.migrations",
            "csat.collectors.ghcomments.migrations.0001_initial",
            "csat.collectors.ghcomments.migrations.0002_auto__add_field_githubcommentsconfig_access_token",
            "csat.collectors.ghcomments.models",
            "csat.collectors.pipermail",
            "csat.collectors.pipermail.admin",
            "csat.collectors.pipermail.collector",
            "csat.collectors.pipermail.forms",
            "csat.collectors.pipermail.migrations",
            "csat.collectors.pipermail.migrations.0001_initial",
            "csat.collectors.pipermail.models",
            "csat.collectors.pygit",
            "csat.collectors.pygit.collector",
            "csat.collectors.pygit.forms",
            "csat.collectors.pygit.migrations",
            "csat.collectors.pygit.migrations.0001_initial",
            "csat.collectors.pygit.migrations.0002_auto__chg_field_config_repo_url",
            "csat.collectors.pygit.migrations.0003_auto__add_field_config_keep_history",
            "csat.collectors.pygit.models",
            "csat.collectors.pygit.parser",
            "csat.collectors.random",
            "csat.collectors.random.forms",
            "csat.collectors.random.generator",
            "csat.collectors.random.migrations",
            "csat.collectors.random.migrations.0001_initial",
            "csat.collectors.random.models",
            "csat.collectors.upload",
            "csat.collectors.upload.forms",
            "csat.collectors.upload.migrations",
            "csat.collectors.upload.migrations.0001_initial",
            "csat.collectors.upload.models",
            "csat.django",
            "csat.django.apps",
            "csat.django.apps.base",
            "csat.django.apps.base.assets",
            "csat.django.apps.base.bundles",
            "csat.django.apps.base.templatetags",
            "csat.django.apps.base.templatetags.crispy",
            "csat.django.apps.base.templatetags.pygments",
            "csat.django.apps.bootstrap",
            "csat.django.apps.bootstrap.assets",
            "csat.django.apps.bootstrap.layout",
            "csat.django.fields",
            "csat.django.monkeypatch",
            "csat.graphml",
            "csat.graphml.builder",
            "csat.logging",
            "csat.paths",
            "csat.protocols",
            "csat.queue",
            "csat.tasks",
            "csat.utils",
            "csat.visualization",
            "csat.visualization.assets",
            "csat.visualization.context_processors",
            "csat.visualization.urls",
            "csat.visualization.views",
            "csat.webapp",
            "csat.webapp.scripts",
            "csat.webapp.scripts.server",
            "csat.webapp.server",
            "csat.webapp.settings",
            "csat.webapp.urls",
            "csat.webapp.wsgi"
        ],
        "version": "0.3"
    },
    "csb": {
        "cmdline": [],
        "modules": [
            "csb",
            "csb.build",
            "csb/apps",
            "csb/apps.bfit",
            "csb/apps.bfite",
            "csb/apps.buildhmm",
            "csb/apps.csfrag",
            "csb/apps.embd",
            "csb/apps.helloworld",
            "csb/apps.hhfrag",
            "csb/apps.hhsearch",
            "csb/apps.precision",
            "csb/apps.promix",
            "csb/bio",
            "csb/bio/fragments",
            "csb/bio/fragments.rosetta",
            "csb/bio/hmm",
            "csb/bio/hmm.pseudocounts",
            "csb/bio/io",
            "csb/bio/io.clans",
            "csb/bio/io.cs",
            "csb/bio/io.dssp",
            "csb/bio/io.fasta",
            "csb/bio/io.hhpred",
            "csb/bio/io.mrc",
            "csb/bio/io.noe",
            "csb/bio/io.procheck",
            "csb/bio/io.psipred",
            "csb/bio/io.svg",
            "csb/bio/io.vasco",
            "csb/bio/io.whatif",
            "csb/bio/io.wwpdb",
            "csb/bio/nmr",
            "csb/bio/sequence",
            "csb/bio/sequence.alignment",
            "csb/bio/structure",
            "csb/bio/utils",
            "csb/core",
            "csb/io",
            "csb/io.plots",
            "csb/io.tsv",
            "csb/numeric",
            "csb/numeric.integrators",
            "csb/statistics",
            "csb/statistics.ars",
            "csb/statistics.maxent",
            "csb/statistics.mixtures",
            "csb/statistics.rand",
            "csb/statistics.scalemixture",
            "csb/statistics/pdf",
            "csb/statistics/pdf.parameterized",
            "csb/statistics/samplers",
            "csb/statistics/samplers/mc",
            "csb/statistics/samplers/mc.multichain",
            "csb/statistics/samplers/mc.neqsteppropagator",
            "csb/statistics/samplers/mc.propagators",
            "csb/statistics/samplers/mc.singlechain",
            "csb/statmech",
            "csb/statmech.ensembles",
            "csb/statmech.wham",
            "csb/test",
            "csb/test.app",
            "csb/test/cases",
            "csb/test/cases/bio",
            "csb/test/cases/bio/fragments",
            "csb/test/cases/bio/hmm",
            "csb/test/cases/bio/io",
            "csb/test/cases/bio/io/clans",
            "csb/test/cases/bio/io/cs",
            "csb/test/cases/bio/io/fasta",
            "csb/test/cases/bio/io/hhpred",
            "csb/test/cases/bio/io/mrc",
            "csb/test/cases/bio/io/noe",
            "csb/test/cases/bio/io/procheck",
            "csb/test/cases/bio/io/whatif",
            "csb/test/cases/bio/io/wwpdb",
            "csb/test/cases/bio/nmr",
            "csb/test/cases/bio/sequence",
            "csb/test/cases/bio/sequence/alignment",
            "csb/test/cases/bio/structure",
            "csb/test/cases/bio/utils",
            "csb/test/cases/core",
            "csb/test/cases/io",
            "csb/test/cases/numeric",
            "csb/test/cases/numeric.integrators",
            "csb/test/cases/statistics",
            "csb/test/cases/statistics.ars",
            "csb/test/cases/statistics.maxent",
            "csb/test/cases/statistics.mixtures",
            "csb/test/cases/statistics.rand",
            "csb/test/cases/statistics.scalemixture",
            "csb/test/cases/statistics/pdf",
            "csb/test/cases/statistics/pdf.parameterized",
            "csb/test/cases/statistics/samplers",
            "csb/test/cases/statmech",
            "csb/test/cases/statmech.ensembles",
            "csb/test/cases/statmech.wham"
        ],
        "version": "1.2.3"
    },
    "csb43": {
        "cmdline": [],
        "modules": [
            "csb43",
            "csb43.csb43",
            "csb43.csb43.account",
            "csb43.csb43.csb_file",
            "csb43.csb43.exchange",
            "csb43.csb43.item",
            "csb43.csb43.record",
            "csb43.csb43.transaction",
            "csb43.formats",
            "csb43.homebank",
            "csb43.homebank.converter",
            "csb43.i18n",
            "csb43.ofx",
            "csb43.ofx.converter",
            "csb43.tests",
            "csb43.tests.samples",
            "csb43.tests.test_cmd",
            "csb43.tests.test_csb2ofx",
            "csb43.tests.test_csb_account",
            "csb43.tests.test_csb_exchange",
            "csb43.tests.test_csb_file",
            "csb43.tests.test_csb_item",
            "csb43.tests.test_csb_transaction",
            "csb43.tests.test_homebank",
            "csb43.tests.test_ofx_global",
            "csb43.tests.test_utils",
            "csb43.utils",
            "csb43.utils.cmd",
            "csb43.utils.compat",
            "csb43.utils.currency_data",
            "csb43.utils.messages"
        ],
        "version": "0.6.1"
    },
    "csbuddy": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.5"
    },
    "csbuild": {
        "cmdline": [],
        "modules": [
            "csbuild",
            "csbuild._gui",
            "csbuild._shared_globals",
            "csbuild._utils",
            "csbuild.log",
            "csbuild.plugin",
            "csbuild.plugin_plist_generator",
            "csbuild.projectSettings",
            "csbuild.project_generator",
            "csbuild.project_generator_qtcreator",
            "csbuild.project_generator_slickedit",
            "csbuild.project_generator_visual_studio",
            "csbuild.project_generator_visual_studio_v2",
            "csbuild.terminfo",
            "csbuild.toolchain",
            "csbuild.toolchain_android",
            "csbuild.toolchain_gcc",
            "csbuild.toolchain_gcc_darwin",
            "csbuild.toolchain_ios",
            "csbuild.toolchain_msvc"
        ],
        "version": "0.92.0"
    },
    "csc-pysparse": {
        "cmdline": [],
        "modules": [
            "pysparse",
            "pysparse.misc",
            "pysparse.misc.system",
            "pysparse.setup",
            "pysparse.sparse",
            "pysparse.sparse.pysparseMatrix",
            "pysparse.sparse.setup",
            "pysparse.sparse.sparseMatrix",
            "pysparse.tools",
            "pysparse.tools.poisson",
            "pysparse.tools.poisson_vec",
            "pysparse.tools.sparray",
            "pysparse.tools.spmatrix_util",
            "pysparse.version"
        ],
        "version": "1.1.1.4"
    },
    "csc-utils": {
        "cmdline": [],
        "modules": [
            "csc",
            "csc.conceptnet",
            "csc.conceptnet.admin",
            "csc.conceptnet.analogyspace",
            "csc.conceptnet.analogyspace2",
            "csc.conceptnet.models",
            "csc.conceptnet.network",
            "csc.conceptnet4",
            "csc.concepttools",
            "csc.corpus",
            "csc.corpus.admin",
            "csc.corpus.models",
            "csc.corpus.parse",
            "csc.corpus.parse.admin",
            "csc.corpus.parse.adverbs",
            "csc.corpus.parse.build",
            "csc.corpus.parse.models",
            "csc.corpus.views",
            "csc.divisi2",
            "csc.divisi2.algorithms",
            "csc.divisi2.algorithms.mds",
            "csc.divisi2.algorithms.nmf",
            "csc.divisi2.algorithms.svd",
            "csc.divisi2.blending",
            "csc.divisi2.dataset",
            "csc.divisi2.dense",
            "csc.divisi2.examples",
            "csc.divisi2.exceptions",
            "csc.divisi2.export_svdview",
            "csc.divisi2.fileIO",
            "csc.divisi2.labels",
            "csc.divisi2.network",
            "csc.divisi2.operators",
            "csc.divisi2.ordered_set",
            "csc.divisi2.priodict",
            "csc.divisi2.reconstructed",
            "csc.divisi2.sparse",
            "csc.django_settings",
            "csc.lib",
            "csc.lib.events",
            "csc.lib.events.models",
            "csc.lib.voting",
            "csc.lib.voting.admin",
            "csc.lib.voting.managers",
            "csc.lib.voting.models",
            "csc.lib.voting.templatetags",
            "csc.lib.voting.templatetags.voting_tags",
            "csc.lib.voting.views",
            "csc.nl",
            "csc.nl.ar",
            "csc.nl.en",
            "csc.nl.es",
            "csc.nl.euro",
            "csc.nl.fi",
            "csc.nl.fr",
            "csc.nl.hu",
            "csc.nl.it",
            "csc.nl.ja",
            "csc.nl.ja_cabocha",
            "csc.nl.ja_cabocha.cabocha_token",
            "csc.nl.ja_cabocha.chunk",
            "csc.nl.ja_cabocha.debug",
            "csc.nl.ja_cabocha.parser",
            "csc.nl.ja_cabocha.properties",
            "csc.nl.ja_cabocha.system",
            "csc.nl.ja_cabocha.tree",
            "csc.nl.ja_cabocha.util",
            "csc.nl.ja_cabocha.utterance",
            "csc.nl.ja_cabocha.word",
            "csc.nl.ko",
            "csc.nl.mblem",
            "csc.nl.mblem.trie",
            "csc.nl.nl",
            "csc.nl.pt",
            "csc.nl.trie",
            "csc.nl.zh",
            "csc.pseudo_auth",
            "csc.pseudo_auth.backends",
            "csc.pseudo_auth.models",
            "csc.util",
            "csc.webapi",
            "csc.webapi.docs",
            "csc.webapi.handlers",
            "csc.webapi.templatetags",
            "csc.webapi.templatetags.rst",
            "csc.webapi.urls",
            "csc_utils",
            "csc_utils.batch",
            "csc_utils.cache",
            "csc_utils.data_structures",
            "csc_utils.dict_mixin",
            "csc_utils.graph_matrix",
            "csc_utils.io",
            "csc_utils.log",
            "csc_utils.ordered_set",
            "csc_utils.packed_matrix",
            "csc_utils.persist",
            "csc_utils.priodict",
            "csc_utils.seq",
            "csc_utils.test_orderedset",
            "csc_utils.vector"
        ],
        "version": "0.6.7"
    },
    "csc4175-nester": {
        "cmdline": [],
        "modules": [
            "csc4175_nester"
        ],
        "version": "1.3.0"
    },
    "cschin888-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.0"
    },
    "csci.countdown": {
        "cmdline": [],
        "modules": [],
        "version": "1.0dev"
    },
    "csci.feedback": {
        "cmdline": [],
        "modules": [],
        "version": "1.0dev"
    },
    "csci.fourthplinth": {
        "cmdline": [],
        "modules": [],
        "version": "0.1dev"
    },
    "csci.images": {
        "cmdline": [],
        "modules": [],
        "version": "1.0dev"
    },
    "csci.postfeeds": {
        "cmdline": [],
        "modules": [],
        "version": "1.0dev"
    },
    "csci.shortlinks": {
        "cmdline": [],
        "modules": [],
        "version": "0.1dev"
    },
    "csci.tweetsite": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "cscntlr": {
        "cmdline": [],
        "modules": [
            "CsCntlr",
            "CsCntlr.CsCntlr",
            "CsCntlr.__modes",
            "CsCntlr.__modes.CsABC",
            "CsCntlr.__modes.CsFPM",
            "CsCntlr.__modes.CsMSM"
        ],
        "version": "0.1.0"
    },
    "csdjango.contactform": {
        "cmdline": [],
        "modules": [
            "csdjango",
            "csdjango.contactform",
            "csdjango.contactform.forms",
            "csdjango.contactform.test_urls",
            "csdjango.contactform.views"
        ],
        "version": "1.0"
    },
    "csdl-unoffical": {
        "cmdline": [],
        "modules": [
            "csdl"
        ],
        "version": "0.3.0"
    },
    "csdn": {
        "cmdline": [],
        "modules": [
            "csdn",
            "csdn.csdn",
            "csdn.csdn_backup",
            "csdn.csdn_backup.csdn_backup",
            "csdn.csdn_backup.csdn_backup_common",
            "csdn.csdn_backup.csdn_backup_requests",
            "csdn.csdn_backup.csdn_backup_selenium",
            "csdn.csdn_offline",
            "csdn.csdn_offline.csdn_offline",
            "csdn.csdn_offline.csdn_offline_aiohttp",
            "csdn.csdn_offline.csdn_offline_common"
        ],
        "version": "1.0.1"
    },
    "csdncommenter": {
        "cmdline": [],
        "modules": [
            "csdncommenter",
            "csdncommenter.csdncommenter"
        ],
        "version": "0.0.6"
    },
    "csdoor": {
        "cmdline": [
            "csdoor"
        ],
        "modules": [
            "csdoor",
            "csdoor.cli",
            "csdoor.file_parser",
            "csdoor.gui",
            "csdoor.room_file",
            "csdoor.student",
            "csdoor.test"
        ],
        "version": "0.1"
    },
    "csearch": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csecuritybear": {
        "cmdline": [],
        "modules": [
            "coalaCSecurityBear",
            "coalaCSecurityBear.CSecurityBear"
        ],
        "version": "0.10.0"
    },
    "csexp": {
        "cmdline": [],
        "modules": [
            "csexp"
        ],
        "version": "0.1"
    },
    "csf": {
        "cmdline": [],
        "modules": [
            "csf",
            "csf.api",
            "csf.conf",
            "csf.util"
        ],
        "version": "1.0.20.0"
    },
    "csfd-parser": {
        "cmdline": [],
        "modules": [
            "csfd"
        ],
        "version": "1.0.5"
    },
    "csfifo": {
        "cmdline": [],
        "modules": [],
        "version": "1.4"
    },
    "csg": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csgo": {
        "cmdline": [],
        "modules": [
            "csgo",
            "csgo.client",
            "csgo.enums",
            "csgo.features",
            "csgo.features.items",
            "csgo.features.match",
            "csgo.features.player",
            "csgo.features.sharedobjects",
            "csgo.msg",
            "csgo.protobufs",
            "csgo.protobufs.base_gcmessages_pb2",
            "csgo.protobufs.cstrike15_gcmessages_pb2",
            "csgo.protobufs.econ_gcmessages_pb2",
            "csgo.protobufs.engine_gcmessages_pb2",
            "csgo.protobufs.gcsdk_gcmessages_pb2",
            "csgo.protobufs.gcsystemmsgs_pb2",
            "csgo.protobufs.steammessages_pb2",
            "csgo.sharecode"
        ],
        "version": "0.3.7"
    },
    "csgo-python": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csgoprices": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csh": {
        "cmdline": [],
        "modules": [
            "csh",
            "csh.cshldap",
            "csh.ldap",
            "csh.member",
            "csh.utils",
            "csh.webnews"
        ],
        "version": "0.2.3"
    },
    "csh-ldap": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.4.dev41"
    },
    "csh-uuid": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1.dev1"
    },
    "csh-webnews": {
        "cmdline": [],
        "modules": [
            "csh_webnews"
        ],
        "version": "0.1.2"
    },
    "csharplintbear": {
        "cmdline": [],
        "modules": [
            "coalaCSharpLintBear",
            "coalaCSharpLintBear.CSharpLintBear"
        ],
        "version": "0.10.0"
    },
    "cshldap": {
        "cmdline": [],
        "modules": [
            "CSHLDAP"
        ],
        "version": "0.8"
    },
    "cshpy3": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csia": {
        "cmdline": [
            "CSIA"
        ],
        "modules": [
            "CSIA"
        ],
        "version": "3.21"
    },
    "csidatadotcom": {
        "cmdline": [],
        "modules": [
            "csidatadotcom"
        ],
        "version": "1.0.2"
    },
    "csimportresources": {
        "cmdline": [],
        "modules": [
            "CSImportResources",
            "CSImportResources.CloudShellManager"
        ],
        "version": "0.3"
    },
    "csiphash": {
        "cmdline": [],
        "modules": [
            "csiphash",
            "csiphash.six"
        ],
        "version": "0.0.5"
    },
    "csirtg-dnsdb": {
        "cmdline": [],
        "modules": [
            "csirtg_dnsdb",
            "csirtg_dnsdb._version",
            "csirtg_dnsdb.client",
            "csirtg_dnsdb.exceptions",
            "test",
            "test.test_client"
        ],
        "version": "0.0.0a4"
    },
    "csirtg-indicator": {
        "cmdline": [],
        "modules": [
            "csirtg_indicator",
            "csirtg_indicator._version",
            "csirtg_indicator.constants",
            "csirtg_indicator.exceptions",
            "csirtg_indicator.format",
            "csirtg_indicator.format.plugin",
            "csirtg_indicator.format.zbind",
            "csirtg_indicator.format.zbindrpz",
            "csirtg_indicator.format.zbro",
            "csirtg_indicator.format.zcsv",
            "csirtg_indicator.format.zjson",
            "csirtg_indicator.format.zsnort",
            "csirtg_indicator.format.zstix",
            "csirtg_indicator.format.ztable",
            "csirtg_indicator.indicator",
            "csirtg_indicator.utils",
            "csirtg_indicator.utils.ztime",
            "test",
            "test.format",
            "test.format.test_bind",
            "test.format.test_bindrpz",
            "test.format.test_bro",
            "test.format.test_csv",
            "test.format.test_format_keys",
            "test.format.test_json",
            "test.format.test_snort",
            "test.format.test_stix",
            "test.format.test_table",
            "test.test_email",
            "test.test_fqdn",
            "test.test_indicator",
            "test.test_ipv4",
            "test.test_ipv6",
            "test.test_message",
            "test.test_timestamps",
            "test.test_urls"
        ],
        "version": "0.0.0b18"
    },
    "csirtg-mail": {
        "cmdline": [],
        "modules": [
            "csirtg_mail",
            "csirtg_mail._version",
            "csirtg_mail.client",
            "csirtg_mail.constants",
            "csirtg_mail.parse",
            "csirtg_mail.urls",
            "test",
            "test.test_multi_alternative_plain_html_01",
            "test.test_multi_alternative_plain_html_02",
            "test.test_multi_alternative_plain_html_03",
            "test.test_multi_alternative_plain_text_01",
            "test.test_multi_mixed_alternative_plain_html_01",
            "test.test_multi_mixed_html_application_octet-stream_01",
            "test.test_multi_mixed_plain_application_x_zip_compressed_01",
            "test.test_multi_mixed_plain_rfc822_mixed_plain_rfc822_plain_01",
            "test.test_multi_mixed_plain_rfc822_plain_01",
            "test.test_multi_mixed_plain_rfc822_plain_02",
            "test.test_single_html_01",
            "test.test_single_html_02",
            "test.test_single_html_03",
            "test.test_single_html_04",
            "test.test_single_plain_01",
            "test.test_single_plain_02",
            "test.test_single_plain_03"
        ],
        "version": "0.0.0a8"
    },
    "csirtg-smrt": {
        "cmdline": [],
        "modules": [
            "csirtg_smrt",
            "csirtg_smrt._version",
            "csirtg_smrt.archiver",
            "csirtg_smrt.client",
            "csirtg_smrt.client.dummy",
            "csirtg_smrt.client.plugin",
            "csirtg_smrt.client.zcif",
            "csirtg_smrt.client.zcifv2",
            "csirtg_smrt.client.zcifzmq",
            "csirtg_smrt.client.zcsirtg",
            "csirtg_smrt.client.zelasticsearch",
            "csirtg_smrt.client.zsplunk",
            "csirtg_smrt.client.zsyslog",
            "csirtg_smrt.client.zzmq",
            "csirtg_smrt.client.zzyre",
            "csirtg_smrt.constants",
            "csirtg_smrt.decoders",
            "csirtg_smrt.decoders.zgzip",
            "csirtg_smrt.decoders.zzip",
            "csirtg_smrt.exceptions",
            "csirtg_smrt.fetcher",
            "csirtg_smrt.parser",
            "csirtg_smrt.parser.bro",
            "csirtg_smrt.parser.cef",
            "csirtg_smrt.parser.delim",
            "csirtg_smrt.parser.pattern",
            "csirtg_smrt.parser.pipe",
            "csirtg_smrt.parser.semicolon",
            "csirtg_smrt.parser.ufw",
            "csirtg_smrt.parser.zcifv2",
            "csirtg_smrt.parser.zcsv",
            "csirtg_smrt.parser.zemail",
            "csirtg_smrt.parser.zindicator",
            "csirtg_smrt.parser.zjson",
            "csirtg_smrt.parser.zrss",
            "csirtg_smrt.parser.zsmtpd",
            "csirtg_smrt.parser.zstix",
            "csirtg_smrt.parser.zsyslog",
            "csirtg_smrt.parser.ztsv",
            "csirtg_smrt.rule",
            "csirtg_smrt.smrt",
            "csirtg_smrt.utils",
            "csirtg_smrt.utils.zarrow",
            "csirtg_smrt.utils.zcolumns",
            "csirtg_smrt.utils.zcontent",
            "csirtg_smrt.utils.znltk",
            "test",
            "test.alexa",
            "test.alexa.test_alexa",
            "test.alienvault",
            "test.alienvault.test_alienvault",
            "test.bambenek",
            "test.bambenek.test_bambenek",
            "test.bro",
            "test.bro.test_bro",
            "test.cef",
            "test.cef.test_cef",
            "test.client",
            "test.client.test_cif",
            "test.client.test_csirtg",
            "test.client.test_elasticsearch",
            "test.client.test_splunk",
            "test.client.test_syslog",
            "test.client.test_zyre",
            "test.csirtg",
            "test.csirtg.test_csirtg",
            "test.malc0de",
            "test.malc0de.test_malc0de",
            "test.malwaredomains",
            "test.malwaredomains.test_malwaredomains",
            "test.openphish",
            "test.openphish.test_openphish",
            "test.packetmail",
            "test.packetmail.test_packetmail",
            "test.pastebin",
            "test.pastebin.test_pastebin",
            "test.phishtank",
            "test.phishtank.test_phishtank",
            "test.ransomware_abuse_ch",
            "test.ransomware_abuse_ch.test_ransomware_abuse_ch",
            "test.sansedu",
            "test.sansedu.test_sans",
            "test.smrt",
            "test.smrt.test_archiver",
            "test.smrt.test_defang",
            "test.smrt.test_remote_regex",
            "test.smrt.test_smrt",
            "test.spamcop",
            "test.spamcop.test_spamcop",
            "test.spamhaus",
            "test.spamhaus.test_spamhaus",
            "test.test_nltk",
            "test.test_timestamps",
            "test.ufw",
            "test.ufw.test_ufw",
            "test.utils",
            "test.utils.test_smrt_column_detection",
            "test.utils.test_smrt_utils",
            "test.vxvault",
            "test.vxvault.test_vxvault"
        ],
        "version": "0.0.0a45"
    },
    "csirtgsdk": {
        "cmdline": [],
        "modules": [
            "csirtgsdk",
            "csirtgsdk._version",
            "csirtgsdk.client",
            "csirtgsdk.client.client",
            "csirtgsdk.client.http",
            "csirtgsdk.constants",
            "csirtgsdk.exceptions",
            "csirtgsdk.feed",
            "csirtgsdk.format",
            "csirtgsdk.format.format_csv",
            "csirtgsdk.format.format_json",
            "csirtgsdk.format.format_stix",
            "csirtgsdk.format.table",
            "csirtgsdk.format.zbro",
            "csirtgsdk.indicator",
            "csirtgsdk.search",
            "csirtgsdk.utils",
            "test",
            "test.format",
            "test.format.test_zbro",
            "test.test_client",
            "test.test_feed",
            "test.test_feed_live",
            "test.test_format_stix",
            "test.test_indicator",
            "test.test_indicator_attachment_live",
            "test.test_search",
            "test.test_search_live"
        ],
        "version": "0.0.0a7"
    },
    "cskipdict": {
        "cmdline": [],
        "modules": [
            "cskipdict"
        ],
        "version": "0.0.3"
    },
    "csl-data": {
        "cmdline": [],
        "modules": [
            "csl_data",
            "csl_data._bridge",
            "csl_data._date_fragment",
            "csl_data._fragments",
            "csl_data.document",
            "csl_data.item",
            "csl_data.schema"
        ],
        "version": "0.1.1"
    },
    "cslbot": {
        "cmdline": [],
        "modules": [
            "cslbot",
            "cslbot.commands",
            "cslbot.commands.8ball",
            "cslbot.commands.about",
            "cslbot.commands.abuse",
            "cslbot.commands.acl",
            "cslbot.commands.acronym",
            "cslbot.commands.active",
            "cslbot.commands.admins",
            "cslbot.commands.babble",
            "cslbot.commands.bard",
            "cslbot.commands.bc",
            "cslbot.commands.bike",
            "cslbot.commands.blame",
            "cslbot.commands.botsnack",
            "cslbot.commands.botspam",
            "cslbot.commands.cadmin",
            "cslbot.commands.cancel",
            "cslbot.commands.channels",
            "cslbot.commands.choose",
            "cslbot.commands.cidr",
            "cslbot.commands.coin",
            "cslbot.commands.cve",
            "cslbot.commands.ddate",
            "cslbot.commands.defersay",
            "cslbot.commands.define",
            "cslbot.commands.demorse",
            "cslbot.commands.distro",
            "cslbot.commands.dvorak",
            "cslbot.commands.ebay",
            "cslbot.commands.eix",
            "cslbot.commands.errno",
            "cslbot.commands.filter",
            "cslbot.commands.fml",
            "cslbot.commands.fortune",
            "cslbot.commands.fullwidth",
            "cslbot.commands.fweather",
            "cslbot.commands.gcc",
            "cslbot.commands.gizoogle",
            "cslbot.commands.google",
            "cslbot.commands.grep",
            "cslbot.commands.guarded",
            "cslbot.commands.help",
            "cslbot.commands.highlight",
            "cslbot.commands.hooks",
            "cslbot.commands.ignore",
            "cslbot.commands.imdb",
            "cslbot.commands.inspect",
            "cslbot.commands.insult",
            "cslbot.commands.intensify",
            "cslbot.commands.ipa",
            "cslbot.commands.issue",
            "cslbot.commands.isup",
            "cslbot.commands.jargon",
            "cslbot.commands.join",
            "cslbot.commands.kill",
            "cslbot.commands.line",
            "cslbot.commands.lmgtfy",
            "cslbot.commands.man",
            "cslbot.commands.metar",
            "cslbot.commands.metro",
            "cslbot.commands.microwave",
            "cslbot.commands.mission",
            "cslbot.commands.mode",
            "cslbot.commands.morse",
            "cslbot.commands.msg",
            "cslbot.commands.next",
            "cslbot.commands.nicks",
            "cslbot.commands.note",
            "cslbot.commands.nuke",
            "cslbot.commands.part",
            "cslbot.commands.pester",
            "cslbot.commands.ping",
            "cslbot.commands.praise",
            "cslbot.commands.pull",
            "cslbot.commands.quit",
            "cslbot.commands.quote",
            "cslbot.commands.random",
            "cslbot.commands.randtranslate",
            "cslbot.commands.reddit",
            "cslbot.commands.roman",
            "cslbot.commands.s",
            "cslbot.commands.score",
            "cslbot.commands.seen",
            "cslbot.commands.sha512",
            "cslbot.commands.shibe",
            "cslbot.commands.signal",
            "cslbot.commands.slap",
            "cslbot.commands.slogan",
            "cslbot.commands.stats",
            "cslbot.commands.stock",
            "cslbot.commands.stopwatch",
            "cslbot.commands.summon",
            "cslbot.commands.threads",
            "cslbot.commands.throw",
            "cslbot.commands.time",
            "cslbot.commands.timeout",
            "cslbot.commands.timeuntil",
            "cslbot.commands.tjbash",
            "cslbot.commands.translate",
            "cslbot.commands.tumblr",
            "cslbot.commands.uptime",
            "cslbot.commands.urban",
            "cslbot.commands.version",
            "cslbot.commands.vote",
            "cslbot.commands.wai",
            "cslbot.commands.weather",
            "cslbot.commands.wiki",
            "cslbot.commands.wikipath",
            "cslbot.commands.wisdom",
            "cslbot.commands.wolf",
            "cslbot.commands.word",
            "cslbot.commands.wtf",
            "cslbot.commands.xkcd",
            "cslbot.commands.yoda",
            "cslbot.commands.zipcode",
            "cslbot.helpers",
            "cslbot.helpers.acl",
            "cslbot.helpers.arguments",
            "cslbot.helpers.babble",
            "cslbot.helpers.backtrace",
            "cslbot.helpers.command",
            "cslbot.helpers.config",
            "cslbot.helpers.control",
            "cslbot.helpers.core",
            "cslbot.helpers.exception",
            "cslbot.helpers.geoip",
            "cslbot.helpers.handler",
            "cslbot.helpers.hook",
            "cslbot.helpers.identity",
            "cslbot.helpers.misc",
            "cslbot.helpers.modutils",
            "cslbot.helpers.orm",
            "cslbot.helpers.reddit",
            "cslbot.helpers.registry",
            "cslbot.helpers.reloader",
            "cslbot.helpers.server",
            "cslbot.helpers.sql",
            "cslbot.helpers.textutils",
            "cslbot.helpers.urlutils",
            "cslbot.helpers.web",
            "cslbot.helpers.workers",
            "cslbot.hooks",
            "cslbot.hooks.autodeop",
            "cslbot.hooks.babble",
            "cslbot.hooks.band",
            "cslbot.hooks.bob",
            "cslbot.hooks.butt",
            "cslbot.hooks.caps",
            "cslbot.hooks.ctf",
            "cslbot.hooks.note",
            "cslbot.hooks.reddit",
            "cslbot.hooks.scores",
            "cslbot.hooks.stallman",
            "cslbot.hooks.understanding",
            "cslbot.hooks.url",
            "cslbot.hooks.voice",
            "cslbot.hooks.xkcd",
            "scripts",
            "scripts.client",
            "scripts.entropy",
            "scripts.fuzz",
            "scripts.gen_babble",
            "scripts.migrate",
            "scripts.parsedata",
            "scripts.parselogs",
            "scripts.reload",
            "test",
            "test.bot_test",
            "test.test"
        ],
        "version": "0.21"
    },
    "cslbot-tjhsst": {
        "cmdline": [],
        "modules": [],
        "version": "0.4"
    },
    "cslr": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cslurp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csmpe": {
        "cmdline": [],
        "modules": [
            "csmpe",
            "csmpe.context",
            "csmpe.core_plugins",
            "csmpe.core_plugins.csm_check_config_filesystem",
            "csmpe.core_plugins.csm_check_config_filesystem.ios_xr",
            "csmpe.core_plugins.csm_check_config_filesystem.ios_xr.plugin",
            "csmpe.core_plugins.csm_check_isis_neighbors",
            "csmpe.core_plugins.csm_check_isis_neighbors.ios_xr",
            "csmpe.core_plugins.csm_check_isis_neighbors.ios_xr.plugin",
            "csmpe.core_plugins.csm_config_capture",
            "csmpe.core_plugins.csm_config_capture.plugin",
            "csmpe.core_plugins.csm_custom_commands_capture",
            "csmpe.core_plugins.csm_custom_commands_capture.plugin",
            "csmpe.core_plugins.csm_error_core_check",
            "csmpe.core_plugins.csm_error_core_check.ios_xr",
            "csmpe.core_plugins.csm_error_core_check.ios_xr.plugin",
            "csmpe.core_plugins.csm_failed_config_startup_check",
            "csmpe.core_plugins.csm_failed_config_startup_check.ios_xr",
            "csmpe.core_plugins.csm_failed_config_startup_check.ios_xr.plugin",
            "csmpe.core_plugins.csm_filesystem_check",
            "csmpe.core_plugins.csm_filesystem_check.ios_xr",
            "csmpe.core_plugins.csm_filesystem_check.ios_xr.disk_space_check",
            "csmpe.core_plugins.csm_filesystem_check.ios_xr.filesystem_rw_check",
            "csmpe.core_plugins.csm_filesystem_check.ios_xr.utils",
            "csmpe.core_plugins.csm_get_inventory",
            "csmpe.core_plugins.csm_get_inventory.exr",
            "csmpe.core_plugins.csm_get_inventory.exr.plugin",
            "csmpe.core_plugins.csm_get_inventory.ios",
            "csmpe.core_plugins.csm_get_inventory.ios.plugin",
            "csmpe.core_plugins.csm_get_inventory.ios_xe",
            "csmpe.core_plugins.csm_get_inventory.ios_xe.plugin",
            "csmpe.core_plugins.csm_get_inventory.ios_xr",
            "csmpe.core_plugins.csm_get_inventory.ios_xr.plugin",
            "csmpe.core_plugins.csm_get_inventory.nx_os",
            "csmpe.core_plugins.csm_get_inventory.nx_os.plugin",
            "csmpe.core_plugins.csm_install_operations",
            "csmpe.core_plugins.csm_install_operations.actions",
            "csmpe.core_plugins.csm_install_operations.exr",
            "csmpe.core_plugins.csm_install_operations.exr.activate",
            "csmpe.core_plugins.csm_install_operations.exr.add",
            "csmpe.core_plugins.csm_install_operations.exr.commit",
            "csmpe.core_plugins.csm_install_operations.exr.deactivate",
            "csmpe.core_plugins.csm_install_operations.exr.install",
            "csmpe.core_plugins.csm_install_operations.exr.package_lib",
            "csmpe.core_plugins.csm_install_operations.exr.remove",
            "csmpe.core_plugins.csm_install_operations.exr.remove_all",
            "csmpe.core_plugins.csm_install_operations.ios",
            "csmpe.core_plugins.csm_install_operations.ios.activate",
            "csmpe.core_plugins.csm_install_operations.ios.add",
            "csmpe.core_plugins.csm_install_operations.ios.install",
            "csmpe.core_plugins.csm_install_operations.ios.remove",
            "csmpe.core_plugins.csm_install_operations.ios_xe",
            "csmpe.core_plugins.csm_install_operations.ios_xe.activate",
            "csmpe.core_plugins.csm_install_operations.ios_xe.add",
            "csmpe.core_plugins.csm_install_operations.ios_xe.install",
            "csmpe.core_plugins.csm_install_operations.ios_xe.pre_activate",
            "csmpe.core_plugins.csm_install_operations.ios_xe.remove",
            "csmpe.core_plugins.csm_install_operations.ios_xe.utils",
            "csmpe.core_plugins.csm_install_operations.ios_xr",
            "csmpe.core_plugins.csm_install_operations.ios_xr.activate",
            "csmpe.core_plugins.csm_install_operations.ios_xr.add",
            "csmpe.core_plugins.csm_install_operations.ios_xr.commit",
            "csmpe.core_plugins.csm_install_operations.ios_xr.deactivate",
            "csmpe.core_plugins.csm_install_operations.ios_xr.hardware_audit",
            "csmpe.core_plugins.csm_install_operations.ios_xr.install",
            "csmpe.core_plugins.csm_install_operations.ios_xr.migrate",
            "csmpe.core_plugins.csm_install_operations.ios_xr.migration_lib",
            "csmpe.core_plugins.csm_install_operations.ios_xr.package_lib",
            "csmpe.core_plugins.csm_install_operations.ios_xr.post_migrate",
            "csmpe.core_plugins.csm_install_operations.ios_xr.pre_migrate",
            "csmpe.core_plugins.csm_install_operations.ios_xr.remove",
            "csmpe.core_plugins.csm_install_operations.ios_xr.remove_all",
            "csmpe.core_plugins.csm_install_operations.ios_xr.simple_server_helper",
            "csmpe.core_plugins.csm_install_operations.utils",
            "csmpe.core_plugins.csm_node_status_check",
            "csmpe.core_plugins.csm_node_status_check.exr",
            "csmpe.core_plugins.csm_node_status_check.exr.plugin",
            "csmpe.core_plugins.csm_node_status_check.exr.plugin_lib",
            "csmpe.core_plugins.csm_node_status_check.ios_xe",
            "csmpe.core_plugins.csm_node_status_check.ios_xe.plugin",
            "csmpe.core_plugins.csm_node_status_check.ios_xe.plugin_lib",
            "csmpe.core_plugins.csm_node_status_check.ios_xr",
            "csmpe.core_plugins.csm_node_status_check.ios_xr.plugin",
            "csmpe.core_plugins.csm_node_status_check.ios_xr.plugin_lib",
            "csmpe.core_plugins.csm_redundancy_check",
            "csmpe.core_plugins.csm_redundancy_check.ios_xe",
            "csmpe.core_plugins.csm_redundancy_check.ios_xe.plugin",
            "csmpe.core_plugins.csm_redundancy_check.ios_xr",
            "csmpe.core_plugins.csm_redundancy_check.ios_xr.plugin",
            "csmpe.csm_pm",
            "csmpe.decorators",
            "csmpe.plugins",
            "csmpe.plugins.base",
            "tests",
            "tests.ios_xr",
            "tests.ios_xr.test_package_lib",
            "tests.test_context",
            "tests.test_decorators"
        ],
        "version": "1.0.0"
    },
    "csnd": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csnews": {
        "cmdline": [],
        "modules": [
            "csnews",
            "csnews.admin",
            "csnews.feeds",
            "csnews.migrations",
            "csnews.migrations.0001_initial",
            "csnews.models",
            "csnews.tests",
            "csnews.tests.tests",
            "csnews.urls",
            "csnews.views"
        ],
        "version": "2.10"
    },
    "csnews-multilingual": {
        "cmdline": [],
        "modules": [
            "csnews_multilingual",
            "csnews_multilingual.admin",
            "csnews_multilingual.apps",
            "csnews_multilingual.context_processors",
            "csnews_multilingual.diggpaginator",
            "csnews_multilingual.feeds",
            "csnews_multilingual.forms",
            "csnews_multilingual.migrations",
            "csnews_multilingual.migrations.0001_initial",
            "csnews_multilingual.migrations.0002_auto_20161116_1114",
            "csnews_multilingual.migrations.0003_auto_20161117_1041",
            "csnews_multilingual.migrations.0004_auto_20161117_1740",
            "csnews_multilingual.migrations.0005_auto_20161117_1745",
            "csnews_multilingual.migrations.0006_tagtranslation_slug",
            "csnews_multilingual.migrations.0007_auto_20161129_0953",
            "csnews_multilingual.migrations.0008_auto_20161201_1145",
            "csnews_multilingual.migrations.0009_auto_20170216_1719",
            "csnews_multilingual.models",
            "csnews_multilingual.tiny_mce_settings",
            "csnews_multilingual.urls",
            "csnews_multilingual.views"
        ],
        "version": "3.20"
    },
    "csnotifier": {
        "cmdline": [],
        "modules": [
            "csnotifier",
            "csnotifier.admin",
            "csnotifier.migrations",
            "csnotifier.migrations.0001_initial",
            "csnotifier.migrations.0002_auto_20151126_0834",
            "csnotifier.migrations.0003_notification_desc",
            "csnotifier.migrations.0004_auto_20161212_1351",
            "csnotifier.migrations.0005_device_user",
            "csnotifier.migrations.0006_auto_20170328_0830",
            "csnotifier.models",
            "csnotifier.notifications"
        ],
        "version": "0.10"
    },
    "csodium": {
        "cmdline": [],
        "modules": [
            "csodium",
            "csodium._build"
        ],
        "version": "0.0.3"
    },
    "cson": {
        "cmdline": [],
        "modules": [
            "cson",
            "cson.parser",
            "cson.writer"
        ],
        "version": "0.7"
    },
    "csort": {
        "cmdline": [
            "csort"
        ],
        "modules": [
            "csort"
        ],
        "version": "0.1.1"
    },
    "csorteddict": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "csound-ifn-parser": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csound-routines": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csound-vst-code-generators": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csp": {
        "cmdline": [],
        "modules": [
            "csp",
            "csp.eventlet",
            "csp.twisted",
            "csp.twisted.port",
            "csp.twisted.resource",
            "csp.twisted.session",
            "csp.twisted.util"
        ],
        "version": "0.1alpha10"
    },
    "csp-eventlet": {
        "cmdline": [],
        "modules": [
            "csp_eventlet"
        ],
        "version": "0.7.0"
    },
    "csp-twisted": {
        "cmdline": [],
        "modules": [
            "csp_twisted",
            "csp_twisted.port",
            "csp_twisted.resource",
            "csp_twisted.session",
            "csp_twisted.util"
        ],
        "version": "0.2.0"
    },
    "csp-validator": {
        "cmdline": [],
        "modules": [
            "csp_validator",
            "csp_validator.constant",
            "csp_validator.csp",
            "tests",
            "tests.test_functions",
            "tests.test_host_source"
        ],
        "version": "0.3"
    },
    "cspace-hgsite": {
        "cmdline": [],
        "modules": [],
        "version": "1.1"
    },
    "cspark-python": {
        "cmdline": [],
        "modules": [
            "cspark",
            "cspark.ContextBuilder",
            "cspark.ContextEngine",
            "cspark.ContextRouter",
            "cspark.ContextUpdateHandler",
            "cspark.EventTypeRouter",
            "cspark.MessageResponse",
            "cspark.MessageUpdate",
            "cspark.Response",
            "cspark.Router",
            "cspark.SQLiteContextEngine",
            "cspark.Update",
            "cspark.UpdateHandler",
            "cspark.Updater"
        ],
        "version": "0.0.13"
    },
    "cspipe": {
        "cmdline": [
            "CSpipe"
        ],
        "modules": [
            "CSpipe"
        ],
        "version": "0.072"
    },
    "cspkeyset": {
        "cmdline": [
            "keyset"
        ],
        "modules": [
            "cspkeyset",
            "cspkeyset.hdimage"
        ],
        "version": "0.1.13"
    },
    "csplitb": {
        "cmdline": [
            "csplitb"
        ],
        "modules": [
            "csplitb"
        ],
        "version": "1.0.2"
    },
    "csputils": {
        "cmdline": [],
        "modules": [
            "csputils",
            "csputils.csp",
            "csputils.test_csp"
        ],
        "version": "0.1.1"
    },
    "csq": {
        "cmdline": [],
        "modules": [
            "csq",
            "csq.csq",
            "csq.handler"
        ],
        "version": "1.0.7"
    },
    "csql": {
        "cmdline": [],
        "modules": [
            "csql",
            "csql.cmd"
        ],
        "version": "0.9.6"
    },
    "csquery": {
        "cmdline": [],
        "modules": [
            "csquery",
            "csquery.lucene",
            "csquery.structured"
        ],
        "version": "0.1.4"
    },
    "csr-aws-guestshell": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csr-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.6.0"
    },
    "csrbuilder": {
        "cmdline": [],
        "modules": [
            "csrbuilder"
        ],
        "version": "0.10.1"
    },
    "csrfmiddleware": {
        "cmdline": [],
        "modules": [],
        "version": "1.3"
    },
    "csrmesh": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "css": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "css-crawler": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "css-explore": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "css-html-js-minify": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "css-html-prettify": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "css-image-concat": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "css-scale": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "css-scripts": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "css.css3githubbuttons": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "css.fontawesome": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "css.pure": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "css2json": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssaudit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssautoprefixbear": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssbuster": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csscheck": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csscleaner": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csscoco": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csscolor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csscompressor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssconflict": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssdbpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssdeadwood": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssdecl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssdiff": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssgrid": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csslintbear": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssmergemedia": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssmin": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssminfoo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssocialprofile": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssocialuser": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssondiet": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssprefixer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssprefixer2": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssq": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssrtl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssselect": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssselect2": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csssprite": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csstyle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cssutils": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cstar-perf.frontend": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cstar-perf.tool": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cstat": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cstats": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cstk": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cstp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cstruct": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cstyle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cstypo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csumb205-multimedia": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv-anamoly-detector": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv-anomaly-detector": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv-generator": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv-map-converter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv-object-reader": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv-overview": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv-reader-simple-project": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv-splitter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv-to-sqlite": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv-to-table": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv-tools": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv-validator": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv.toolkit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv2anki": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv2arff": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv2dict": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv2es": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv2graphite": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv2json": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv2latex": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv2mysql": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv2odoo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv2oerp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv2ofx": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv2sql": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv2table": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv2xls": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv2xlsx": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv2xmlgen": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csv342": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvalidate": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvbar": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvcat": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvcleaner": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvcompare": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvconvert": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvcool": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvdatamix": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvdb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvddf": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvdedupe": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvdiff": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvdumper": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvfaker": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvfile": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvfilter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvimporter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvkit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvlib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvlintbear": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvloader": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvmapper": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvmatch": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvmerge": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvorm": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvpandas": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvparser": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvpivot": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvplait": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvpp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvputty": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvquerytool": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvrope": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvschema": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvsed": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvsee": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvshuf": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvsimple": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvsort": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvsorter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvsqlite3": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvt": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvtodict": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvtomd": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvtools": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvtosqlite": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvutils": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvvalidator": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvwriter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvx": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csvxls": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csx": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "csys": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ct": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ct-core-api": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ct-core-db": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ct-fcore": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ct-nester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ct-rest": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ct3": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctable": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctapipe": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctctwspylib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctd": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctdms": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctds": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctec-consumer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctec-thrift-client": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctext": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctf": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctf-cli": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cthreading": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cthreeml": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cthub": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cti-toolkit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctimer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctip": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctk-cli": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctk-cli-indexer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctler": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctlib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctlimit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctm": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctmatching": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctn": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctnamecleaner": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctop": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctox": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctrax": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctree": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctregistermicroserviceflask": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctrfoobar2000": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctrie": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctrl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctrldaemon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctrlk": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctrls": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cts-smsteknik": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctstore": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctutils": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctutlz": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctx": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctx-defense": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctxlogger": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctxvar": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctypedbytes": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctypes": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctypes-bitfield": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctypes-configure": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctypes-configure2": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctypes-ejdb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctypes-opencv": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctypes-snappy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctypescracklib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctypescrypto": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctypesgen": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctypesgsl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctypeslib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctypeslib2": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctypeswrapper": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ctznosx": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cu-oi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cu2qu": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuaffils": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cual-id": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuav": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cub": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuba": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cube": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cube-client": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cube2sphere": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubeflow": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubehash": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubemx2cmake": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubes": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubes-search": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubey": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicreport": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubictemp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-accidents": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-activitystream": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-addressbook": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-apycot": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-awstats": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-basket": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-blog": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-book": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-bootstrap": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-brainomics": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-calendar": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-card": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-celery": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-celerytask": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-ckanpublish": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-ckeditor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-clinipath": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-cmcicpay": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-cmt": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-codenaf": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-collaboration": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-comment": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-company": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-compound": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-condor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-conference": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-container": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-datacat": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-dataio": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-dataprocessing": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-dbpedia": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-document": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-drh": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-eac": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-elasticsearch": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-elections": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-email": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-embed": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-event": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-expense": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-faq": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-fastimport": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-fckeditorcompat": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-file": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-folder": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-forge": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-forgotpwd": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-forum": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-frbr": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-fresh": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-genomics": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-geocoding": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-i18ncontent": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-i18nfield": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-inlinedit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-intranet": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-inventory": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-invoice": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-iprogress": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-jqplot": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-jsonb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-jsonld": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-jsonschema": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-keyword": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-leaflet": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-link": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-localperms": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-mailinglist": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-mandrill": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-massmailing": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-mediaplayer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-medicalexp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-mercurial-server": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-narval": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-nazca": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-nazcaui": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-ner": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-neuroimaging": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-nosylist": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-oaipmh": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-oauth": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-openidrelay": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-osmfrance": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-pdfexport": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-person": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-piwik": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-portlets": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-postgis": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-preview": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-processing": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-prov": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-pyramid": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-questionnaire": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-queueing": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-registration": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-relationwidget": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-rememberme": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-rqlcontroller": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-saem-ref": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-searchui": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-securityprofile": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-seda": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-semnews": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-sentry": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-seo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-sherpa": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-shoppingcart": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-signedrequest": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-simplefacet": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-sioc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-skillmat": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-skos": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-slickgrid": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-squareui": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-subprocess": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-sysinfo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-tag": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-tagsinput": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-task": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-testcard": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-timeline": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-timeseries": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-timesheet": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-tracker": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-trackervcs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-transactionlog": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-treeview": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-trustedauth": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-uitest": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-varnish": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-vcreview": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-vcrs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-vcsfile": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-vcwiki": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-vtimeline": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-wireit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-workcase": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-worker": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-workorder": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-wsme": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubicweb-zone": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubieleds": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubric": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cubrid-python": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cucco": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuckoo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuckoo-api": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuckoo-brood": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuckoo-modified-api": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuckooapi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuckoobot": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuckoomodifiedutils": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuckoopy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuckoos": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cucutags": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuda-functions": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuda4py": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cudaminer-param-checker": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cudamps": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cudapyint": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cudatree": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cudnn-python-wrappers": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cudnnenv": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cue": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cue-sdk": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuebung-helper": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cueclient": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuecloud": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cueparser": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuepy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuevanalib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuevanalinks": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cufflinks": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cui": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuid.py": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuinester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuinester01": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuiows": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuisine": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuisine-postgresql": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuisine-sweet": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "culinary": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cull": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cullerton.agora": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cullerton.agorapi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "culliford-nester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "culour": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "culqi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "culqipy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cum": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cumberbatch": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cumin": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cumtbscore": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cumulus": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cumulus-aws": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cumulus-bundle-handler": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cumulusci": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cunidecode": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cup": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cupboard": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuppa": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cupy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curate": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curator": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curco": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curd.py": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curdling": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curielements": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curio": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curio-http": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curious": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curiousorm": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curl-parser": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curl-proxies-checker": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curl-to-requests": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curl2requests": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curlbomb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curlc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curldrop": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curlify": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curling": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curlish": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curlrc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curlwrapper": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curly": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curmit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "currconv": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "currencies": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "currency": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "currency-calculator": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "currency.converter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "currencycloud": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "currencyconverter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "currencylayer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "currencyparser": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "current": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "currint": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curry": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curry-partial": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curryer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "currying": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curryproxy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "currypy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cursed": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cursed-desktop": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cursed-lich": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cursedmongo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curser": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curses-2048": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curses-check-for-keypress": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curses-ex": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curses-menu": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curses-ui": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cursesrace": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cursexml": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cursgame": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cursingspock": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cursive": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cursive.pymag": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cursive.tools": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curso": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curso-python101": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curso-python102": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cursoaulahu": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cursor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curtain": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curtains": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curtsies": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curve": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curve25519-donna": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curveball": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "curveline": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cus-pythonlib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cushing": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cushion": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "custodia": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "custodia.ipa": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "custodian": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "custom": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "custom-e-celery": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "custom-inherit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "custom-interactive-console": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "custom-manager": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "custom-redis": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "custom-resource": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "custom-settings": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "custom-text-test-runner": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "custom-tool": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "custom-user-profiles": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "custom-user-roles": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "customer.krainrealestate": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "customer.lascatalinascr-com": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "customer.mlscrcom": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "customerio": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "customevent": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "customizeme": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "customlogger": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "customlogging": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "customnoseplugins": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "customs-agent": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "customselectadmin": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "customsort": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "custos": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cut": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cutadapt": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cutaudio": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cute": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cute-format": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cute-import": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuteeyfirstdemo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuterenamer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuteshop": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cutest.py": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cutiepy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cutil": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cutils": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cutlass": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cutools": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cutplace": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuts": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cutter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuttle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuttlefish": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuttlepool": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuvner": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cuzdan": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cv-utils": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cv2": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cv2-wrapper": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cv2wrap": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cva": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvault": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvbase": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvexp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvgtracker": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvimage": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvloop": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvlops": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvprac": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvra": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvra-bootloader": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvra-packager": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvrfparse": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvs2svn": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvsanaly": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvss": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvss-util": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvsslib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvssmanager": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvstoys": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvsxxdiff": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvtypes": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvu": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvulkan": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvutils": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvx": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvxcanon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvxfit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvxflow": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvxopt": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvxportfolio": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvxpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cvxstoc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cw-celerytask-helpers": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cw-stegano": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwave": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwb-python": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwbrowser": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwcli": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwclientlib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwcutils": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwf": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwhmi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwiid": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwl-cli": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwl-runner": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwl-upgrader": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwl2argparse": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwlcli": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwlgen": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwlref-runner": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwltest": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwltool": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwltool-service": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwltool-ucsc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwmon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwmon-mysql": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwmon-system": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwmud": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwr-api": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwru": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwspy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwtags": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cwthon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cx-bsdiff": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cx-freeze": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cx-logging": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cx-oracle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cx-oracle-on-ctypes": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cx-oracledbatools": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cx-oracletools": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cx-pygenlib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cx-pyoraclelib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cx-test": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cxeeprom-tool": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cxg": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cxio": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cxiot-nester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cxmanage": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cxnet": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cxor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cxpegg": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cxpworld": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cxx2rs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cxxfilt": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cy-faststart": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cy-nester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cy-scm": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyanide": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyanide-and-happiness": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyanite": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyanite-utils": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyarma": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyaron": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyassimp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyavro": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cybak": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyber": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyberoam-candy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyberplant-scrapy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyberqinterface": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cybint": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyborg": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cybox": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cybox211": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cybuild": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cycle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cycle-detector": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cycler": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cycles": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cycli": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyclone": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyclone-sse": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyclone-synchronization-tool": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyclone-wtforms": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyclope3": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyclops": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyclops-tmanager": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyclosible": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cycloudpickle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyctp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cycy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cydra": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cydragithttp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cydragitserverglue": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cydrahgwebdir": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cydratrac": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cydratwistedgit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cydtw": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyffld2": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyflann": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyflash": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyflib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cygenja": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyglfw3": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cygnet": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cygnet-adapter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cygnet-common": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cygnet-network-manager": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cygnet-router": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cygrid": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cygwinreg": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyhdfs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyhdfs3": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyheapq": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyhll": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyhunspell": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cykdtree": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cykeccak": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cykle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cykooz.buildout.basicauth": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cykooz.buildout.venv": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cykooz.djangopaste": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cykooz.djangorecipe": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cykooz.recipe.pastewsgi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cykooz.recipe.patch": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cykooz.recipe.wsgi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cykooz.sequence": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cykooz.thumbs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cykooz.title": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cylitestblarghblargh": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cylon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cylon.py": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cylowess": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cylp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cymagic": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cymbal": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyme": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cymem": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cymon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cymru-services": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cymruwhois": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cymysql": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cymysql2": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cynic": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cynic3": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cynote": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cynq": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyopenssl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyordereddict": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyp-nester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cypari": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cypari2": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cypher": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cypico": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cypress-common": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cypresscapsense-i2c": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cypy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cypyon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cypyserialize": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyrand": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyrandom": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyrano": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyrasterize": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyrax": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyrss": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyrtranslit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyrun": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyrusbus": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cys2n": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyscs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cysignals": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cystatsd": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyther": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cythereal-vbsdk": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cython": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cython-codegen": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cython-construct": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cython-ipp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cython-plugin": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cythongsl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cythonrun": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cythontemplate": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cythrust": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cytime": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cytoflow": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cytominer-database": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cytoolz": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cytoplasm": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyvcf": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyvcf2": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyvix": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyvlfeat": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyw-bogus": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cyw-bogus-0.1.95": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cz-urnnbn-api": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cz7129183": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "czech-holidays": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "czech-sort": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "czechtile": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "czipfile": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "czjson": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "czmatchmaker": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "czml": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "cztext": {
        "cmdline": [],
        "modules": [],
        "version": ""
    }
}