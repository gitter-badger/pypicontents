{
    "h": {
        "cmdline": [],
        "modules": [
            "h"
        ],
        "version": "0.1.5"
    },
    "h-ello-worl-d": {
        "cmdline": [],
        "modules": [
            "h__ello__worl__d"
        ],
        "version": "1.1.1"
    },
    "h0x70n-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "h1": {
        "cmdline": [],
        "modules": [
            "h1",
            "h1.client",
            "h1.lazy_listing",
            "h1.models",
            "tests",
            "tests.test_client",
            "tests.test_lazy_listing",
            "tests.test_models"
        ],
        "version": "1.4.2"
    },
    "h10n": {
        "cmdline": [],
        "modules": [
            "h10n",
            "h10n.core",
            "h10n.helper",
            "h10n.helper.pluralize",
            "h10n.source",
            "h10n.tests",
            "h10n.tests.core_test",
            "h10n.tests.core_test.catalog_test",
            "h10n.tests.core_test.helper_namespace_test",
            "h10n.tests.core_test.locale_test",
            "h10n.tests.core_test.message_test",
            "h10n.tests.helper_test",
            "h10n.tests.helper_test.pluralize_test",
            "h10n.tests.source_test",
            "h10n.tests.source_test.scanner_test",
            "h10n.tests.source_test.yaml_source_test",
            "h10n.tests.translator_test",
            "h10n.tests.translator_test.message_test",
            "h10n.tests.translator_test.translator_test",
            "h10n.tests.util_test",
            "h10n.tests.util_test.exception_context_test",
            "h10n.tests.util_test.namespace_test",
            "h10n.translator",
            "h10n.util"
        ],
        "version": "0.1b1"
    },
    "h11": {
        "cmdline": [],
        "modules": [
            "h11",
            "h11._connection",
            "h11._events",
            "h11._headers",
            "h11._readers",
            "h11._receivebuffer",
            "h11._state",
            "h11._util",
            "h11._version",
            "h11._writers",
            "h11.tests",
            "h11.tests.helpers",
            "h11.tests.test_against_stdlib_http",
            "h11.tests.test_connection",
            "h11.tests.test_events",
            "h11.tests.test_headers",
            "h11.tests.test_helpers",
            "h11.tests.test_io",
            "h11.tests.test_receivebuffer",
            "h11.tests.test_state",
            "h11.tests.test_util"
        ],
        "version": "0.7.0"
    },
    "h2": {
        "cmdline": [],
        "modules": [
            "h2",
            "h2.config",
            "h2.connection",
            "h2.errors",
            "h2.events",
            "h2.exceptions",
            "h2.frame_buffer",
            "h2.settings",
            "h2.stream",
            "h2.utilities",
            "h2.windows"
        ],
        "version": "3.0.1"
    },
    "h2lily": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "h2o": {
        "cmdline": [],
        "modules": [
            "h2o",
            "h2o.assembly",
            "h2o.astfun",
            "h2o.backend",
            "h2o.backend.cluster",
            "h2o.backend.connection",
            "h2o.backend.server",
            "h2o.cross_validation",
            "h2o.demos",
            "h2o.display",
            "h2o.estimators",
            "h2o.estimators.aggregator",
            "h2o.estimators.deeplearning",
            "h2o.estimators.deepwater",
            "h2o.estimators.estimator_base",
            "h2o.estimators.gbm",
            "h2o.estimators.glm",
            "h2o.estimators.glrm",
            "h2o.estimators.kmeans",
            "h2o.estimators.naive_bayes",
            "h2o.estimators.pca",
            "h2o.estimators.random_forest",
            "h2o.estimators.stackedensemble",
            "h2o.estimators.svd",
            "h2o.estimators.word2vec",
            "h2o.exceptions",
            "h2o.expr",
            "h2o.frame",
            "h2o.grid",
            "h2o.grid.grid_search",
            "h2o.grid.metrics",
            "h2o.group_by",
            "h2o.h2o",
            "h2o.job",
            "h2o.model",
            "h2o.model.autoencoder",
            "h2o.model.binomial",
            "h2o.model.clustering",
            "h2o.model.confusion_matrix",
            "h2o.model.dim_reduction",
            "h2o.model.metrics_base",
            "h2o.model.model_base",
            "h2o.model.model_builder",
            "h2o.model.model_future",
            "h2o.model.multinomial",
            "h2o.model.regression",
            "h2o.model.word_embedding",
            "h2o.schemas",
            "h2o.schemas.error",
            "h2o.transforms",
            "h2o.transforms.decomposition",
            "h2o.transforms.preprocessing",
            "h2o.transforms.transform_base",
            "h2o.two_dim_table",
            "h2o.utils",
            "h2o.utils.backward_compatibility",
            "h2o.utils.compatibility",
            "h2o.utils.config",
            "h2o.utils.debugging",
            "h2o.utils.progressbar",
            "h2o.utils.shared_utils",
            "h2o.utils.typechecks"
        ],
        "version": "3.10.4.6"
    },
    "h2o-pysparkling-1.6": {
        "cmdline": [],
        "modules": [
            "pysparkling",
            "pysparkling.conf",
            "pysparkling.context",
            "pysparkling.conversions",
            "pysparkling.initializer"
        ],
        "version": "1.6.10"
    },
    "h2o-pysparkling-2.0": {
        "cmdline": [],
        "modules": [
            "pysparkling",
            "pysparkling.conf",
            "pysparkling.context",
            "pysparkling.conversions",
            "pysparkling.initializer"
        ],
        "version": "2.0.8"
    },
    "h2o-pysparkling-2.1": {
        "cmdline": [],
        "modules": [
            "pysparkling",
            "pysparkling.conf",
            "pysparkling.context",
            "pysparkling.conversions",
            "pysparkling.initializer"
        ],
        "version": "2.1.7"
    },
    "h2ohyperopt": {
        "cmdline": [],
        "modules": [
            "h2ohyperopt",
            "h2ohyperopt.dleoptimizer",
            "h2ohyperopt.examples",
            "h2ohyperopt.gbmoptimizer",
            "h2ohyperopt.glmoptimizer",
            "h2ohyperopt.modeldocker",
            "h2ohyperopt.modeloptimizer",
            "h2ohyperopt.tests",
            "h2ohyperopt.tests.data_gen",
            "h2ohyperopt.tests.test_DLEOpt",
            "h2ohyperopt.tests.test_GBMOpt",
            "h2ohyperopt.tests.test_GLMOpt",
            "h2ohyperopt.tests.test_ModelDockerOpt",
            "h2ohyperopt.tests.test_modelOpt_metrics",
            "h2ohyperopt.tests.test_modelOpt_parameters",
            "h2ohyperopt.tests.test_util",
            "h2ohyperopt.util"
        ],
        "version": "0.1"
    },
    "h2tools": {
        "cmdline": [],
        "modules": [
            "h2tools",
            "h2tools.cluster_tree",
            "h2tools.collections",
            "h2tools.collections.integral",
            "h2tools.collections.particles",
            "h2tools.collections.pcm",
            "h2tools.collections.setup",
            "h2tools.collections.triangular_surface",
            "h2tools.h2matrix",
            "h2tools.mcbh",
            "h2tools.minimal_data",
            "h2tools.mpi_misc",
            "h2tools.problem",
            "h2tools.setup"
        ],
        "version": "1.1.1"
    },
    "h4-scripts": {
        "cmdline": [],
        "modules": [
            "h4_scripts",
            "h4_scripts.AuthorData",
            "h4_scripts.Config",
            "h4_scripts.Facebook",
            "h4_scripts.Gmail",
            "h4_scripts.GoogleSpreadsheetAPI",
            "h4_scripts.Logger",
            "h4_scripts.NetworkTest",
            "h4_scripts.PTT",
            "h4_scripts.Wikidot",
            "h4_scripts.common"
        ],
        "version": "0.9.1"
    },
    "h5browse": {
        "cmdline": [],
        "modules": [
            "h5browse",
            "h5browse.datasetplot",
            "h5browse.dirreader",
            "h5browse.h5browse",
            "h5browse.hdfattributemodel",
            "h5browse.hdfattributewidget",
            "h5browse.hdfdatasetmodel",
            "h5browse.hdfdatasetwidget",
            "h5browse.hdftreemodel",
            "h5browse.hdftreewidget"
        ],
        "version": "0.2"
    },
    "h5config": {
        "cmdline": [],
        "modules": [
            "h5config",
            "h5config.config",
            "h5config.log",
            "h5config.storage",
            "h5config.storage.hdf5",
            "h5config.storage.yaml",
            "h5config.test",
            "h5config.tools"
        ],
        "version": "0.3"
    },
    "h5cube": {
        "cmdline": [],
        "modules": [
            "h5cube",
            "h5cube.h5cube",
            "h5cube.test",
            "h5cube.test.h5cube_cmdline",
            "h5cube.test.h5cube_functions"
        ],
        "version": "0.3"
    },
    "h5df": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.5"
    },
    "h5dj": {
        "cmdline": [],
        "modules": [
            "h5dj",
            "h5dj.models",
            "h5dj.storage",
            "tests",
            "tests.h5dj_tests",
            "tests.h5dj_tests.tests",
            "tests.runtests",
            "tests.test_settings"
        ],
        "version": "0.1.0"
    },
    "h5features": {
        "cmdline": [],
        "modules": [
            "h5features",
            "h5features.converter",
            "h5features.data",
            "h5features.entry",
            "h5features.features",
            "h5features.h5features",
            "h5features.index",
            "h5features.items",
            "h5features.labels",
            "h5features.reader",
            "h5features.version",
            "h5features.writer"
        ],
        "version": "1.2"
    },
    "h5json": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.1"
    },
    "h5netcdf": {
        "cmdline": [],
        "modules": [
            "h5netcdf",
            "h5netcdf._chainmap",
            "h5netcdf.attrs",
            "h5netcdf.compat",
            "h5netcdf.core",
            "h5netcdf.dimensions",
            "h5netcdf.legacyapi",
            "h5netcdf.utils"
        ],
        "version": "0.3.1"
    },
    "h5pom": {
        "cmdline": [],
        "modules": [
            "h5pom",
            "h5pom.core",
            "h5pom.descriptors"
        ],
        "version": "0.1"
    },
    "h5preserve": {
        "cmdline": [],
        "modules": [
            "h5preserve",
            "h5preserve._utils",
            "h5preserve._version",
            "h5preserve.additional_registries"
        ],
        "version": "0.14.0"
    },
    "h5py": {
        "cmdline": [],
        "modules": [
            "h5py",
            "h5py._hl",
            "h5py._hl.attrs",
            "h5py._hl.base",
            "h5py._hl.compat",
            "h5py._hl.dataset",
            "h5py._hl.datatype",
            "h5py._hl.dims",
            "h5py._hl.files",
            "h5py._hl.filters",
            "h5py._hl.group",
            "h5py._hl.selections",
            "h5py._hl.selections2",
            "h5py.highlevel",
            "h5py.ipy_completer",
            "h5py.tests",
            "h5py.tests.common",
            "h5py.tests.hl",
            "h5py.tests.hl.test_attribute_create",
            "h5py.tests.hl.test_dataset_getitem",
            "h5py.tests.hl.test_dataset_swmr",
            "h5py.tests.hl.test_datatype",
            "h5py.tests.hl.test_dims_dimensionproxy",
            "h5py.tests.hl.test_file",
            "h5py.tests.hl.test_threads",
            "h5py.tests.old",
            "h5py.tests.old.common",
            "h5py.tests.old.test_attrs",
            "h5py.tests.old.test_attrs_data",
            "h5py.tests.old.test_base",
            "h5py.tests.old.test_dataset",
            "h5py.tests.old.test_datatype",
            "h5py.tests.old.test_dimension_scales",
            "h5py.tests.old.test_file",
            "h5py.tests.old.test_file_image",
            "h5py.tests.old.test_group",
            "h5py.tests.old.test_h5",
            "h5py.tests.old.test_h5d_direct_chunk_write",
            "h5py.tests.old.test_h5f",
            "h5py.tests.old.test_h5p",
            "h5py.tests.old.test_h5t",
            "h5py.tests.old.test_objects",
            "h5py.tests.old.test_selections",
            "h5py.tests.old.test_slicing",
            "h5py.version"
        ],
        "version": "2.7.0"
    },
    "h5py-cache": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "h5py-wrapper": {
        "cmdline": [],
        "modules": [
            "h5py_wrapper",
            "h5py_wrapper.lib",
            "h5py_wrapper.wrapper",
            "tests",
            "tests.test_wrapper"
        ],
        "version": "1.0.1"
    },
    "h5pyviewer": {
        "cmdline": [],
        "modules": [
            "h5pyViewer",
            "h5pyViewer.FrmProcRoiStat",
            "h5pyViewer.FrmPyFAI",
            "h5pyViewer.GLCanvasImg",
            "h5pyViewer.h5pyViewer",
            "h5pyViewer.hdfAttrib",
            "h5pyViewer.hdfGrid",
            "h5pyViewer.hdfImage",
            "h5pyViewer.hdfImageGL",
            "h5pyViewer.hdfTree",
            "h5pyViewer.userSample",
            "h5pyViewer.utilities"
        ],
        "version": "0.0.1.6"
    },
    "h5scripting": {
        "cmdline": [],
        "modules": [
            "h5scripting",
            "h5scripting.__version__",
            "h5scripting.example",
            "h5scripting.h5scripting",
            "h5scripting.tests"
        ],
        "version": "0.1.0"
    },
    "h5serv": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "h5sparse": {
        "cmdline": [],
        "modules": [
            "h5sparse",
            "h5sparse.h5sparse",
            "h5sparse.tests"
        ],
        "version": "0.0.4"
    },
    "h5wqueue": {
        "cmdline": [],
        "modules": [
            "h5wqueue",
            "h5wqueue.writers"
        ],
        "version": "0.1"
    },
    "h5writer": {
        "cmdline": [],
        "modules": [
            "h5writer",
            "h5writer.h5writer",
            "h5writer.h5writer_mpi_pw",
            "h5writer.h5writer_mpi_sw",
            "h5writer.h5writer_single",
            "h5writer.log"
        ],
        "version": "0.5.12"
    },
    "ha-alpr": {
        "cmdline": [],
        "modules": [],
        "version": "0.3"
    },
    "ha-ffmpeg": {
        "cmdline": [],
        "modules": [
            "haffmpeg",
            "haffmpeg.camera",
            "haffmpeg.core",
            "haffmpeg.sensor",
            "haffmpeg.tools"
        ],
        "version": "1.5"
    },
    "ha-philipsjs": {
        "cmdline": [],
        "modules": [
            "haphilipsjs"
        ],
        "version": "0.0.1"
    },
    "ha-release": {
        "cmdline": [
            "ha-release"
        ],
        "modules": [],
        "version": "0.6.7"
    },
    "ha12-ha123": {
        "cmdline": [],
        "modules": [
            "ha12-ha123"
        ],
        "version": "1.0.1"
    },
    "haaaa": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haagenti-gsma": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haags": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haalchemy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haas": {
        "cmdline": [],
        "modules": [
            "haas",
            "haas._version",
            "haas.error_holder",
            "haas.exceptions",
            "haas.haas_application",
            "haas.loader",
            "haas.main",
            "haas.module_import_error",
            "haas.plugin_context",
            "haas.plugin_manager",
            "haas.plugins",
            "haas.plugins.base_hook_plugin",
            "haas.plugins.coverage",
            "haas.plugins.discoverer",
            "haas.plugins.i_discoverer_plugin",
            "haas.plugins.i_hook_plugin",
            "haas.plugins.i_result_handler_plugin",
            "haas.plugins.i_runner_plugin",
            "haas.plugins.parallel_runner",
            "haas.plugins.result_handler",
            "haas.plugins.runner",
            "haas.plugins.tests",
            "haas.plugins.tests.test_coverage",
            "haas.plugins.tests.test_discoverer",
            "haas.plugins.tests.test_result_handlers",
            "haas.result",
            "haas.suite",
            "haas.testing",
            "haas.tests",
            "haas.tests._test_case_data",
            "haas.tests._test_cases",
            "haas.tests.builder",
            "haas.tests.fixtures",
            "haas.tests.test_builder",
            "haas.tests.test_error_holder",
            "haas.tests.test_haas_application",
            "haas.tests.test_loader",
            "haas.tests.test_parallel_runner",
            "haas.tests.test_plugin_context",
            "haas.tests.test_plugin_manager",
            "haas.tests.test_result",
            "haas.tests.test_runner",
            "haas.tests.test_suite",
            "haas.tests.test_utils",
            "haas.utils"
        ],
        "version": "0.8.0"
    },
    "habakkuk": {
        "cmdline": [
            "habakkuk"
        ],
        "modules": [
            "habakkuk",
            "habakkuk.config_ivy_bridge",
            "habakkuk.dag",
            "habakkuk.dag_node",
            "habakkuk.make_dag",
            "habakkuk.parse2003"
        ],
        "version": "0.1.0"
    },
    "habanero": {
        "cmdline": [],
        "modules": [
            "habanero",
            "habanero.agency",
            "habanero.cn",
            "habanero.cn.cn",
            "habanero.cn.constants",
            "habanero.cn.styles",
            "habanero.cn_formats",
            "habanero.cnrequest",
            "habanero.counts",
            "habanero.counts.counts",
            "habanero.cross_cite",
            "habanero.crossref",
            "habanero.crossref.crossref",
            "habanero.crossref.filters",
            "habanero.exceptions",
            "habanero.filterhandler",
            "habanero.filters",
            "habanero.filters.filters",
            "habanero.habanero",
            "habanero.habanero_utils",
            "habanero.members",
            "habanero.namespace",
            "habanero.noworks",
            "habanero.request",
            "habanero.request_class",
            "habanero.response",
            "habanero.works"
        ],
        "version": "0.2.6"
    },
    "haberdashery": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "habit": {
        "cmdline": [],
        "modules": [
            "habit"
        ],
        "version": "0.1.0"
    },
    "habitat": {
        "cmdline": [],
        "modules": [
            "habitat",
            "habitat.filters",
            "habitat.loadable_manager",
            "habitat.parser",
            "habitat.parser_daemon",
            "habitat.parser_modules",
            "habitat.parser_modules.simple_binary_parser",
            "habitat.parser_modules.ukhas_parser",
            "habitat.sensors",
            "habitat.sensors.base",
            "habitat.sensors.stdtelem",
            "habitat.uploader",
            "habitat.utils",
            "habitat.utils.checksums",
            "habitat.utils.dynamicloader",
            "habitat.utils.filtertools",
            "habitat.utils.immortal_changes",
            "habitat.utils.quick_traceback",
            "habitat.utils.startup",
            "habitat.views",
            "habitat.views.flight",
            "habitat.views.habitat",
            "habitat.views.listener_information",
            "habitat.views.listener_telemetry",
            "habitat.views.parser",
            "habitat.views.payload_configuration",
            "habitat.views.payload_telemetry",
            "habitat.views.utils"
        ],
        "version": "0.3.3"
    },
    "habitica": {
        "cmdline": [],
        "modules": [
            "habitica",
            "habitica.api",
            "habitica.core"
        ],
        "version": "0.0.16"
    },
    "habitica-challenge-wrangler": {
        "cmdline": [],
        "modules": [
            "habitica_challenge_wrangler",
            "habitica_challenge_wrangler.challenge_wrangler",
            "habitica_challenge_wrangler.configuration"
        ],
        "version": "2.0.0"
    },
    "habitica-todo": {
        "cmdline": [],
        "modules": [
            "habitica-todo",
            "habitica-todo.castSpells",
            "habitica-todo.dates",
            "habitica-todo.hab_task",
            "habitica-todo.main",
            "habitica-todo.manaPull",
            "habitica-todo.oneWaySync",
            "habitica-todo.task",
            "habitica-todo.todo_task"
        ],
        "version": "1.3"
    },
    "habitican-curse": {
        "cmdline": [
            "habitican-curse"
        ],
        "modules": [
            "habitican_curse",
            "habitican_curse.config",
            "habitican_curse.content",
            "habitican_curse.debug",
            "habitican_curse.global_objects",
            "habitican_curse.helper",
            "habitican_curse.interface",
            "habitican_curse.menu",
            "habitican_curse.request_manager",
            "habitican_curse.screen",
            "habitican_curse.task",
            "habitican_curse.user"
        ],
        "version": "2.2.6"
    },
    "habiticatodo": {
        "cmdline": [],
        "modules": [
            "habiticaTodo",
            "habiticaTodo.castSpells",
            "habiticaTodo.dates",
            "habiticaTodo.hab_task",
            "habiticaTodo.main",
            "habiticaTodo.manaPull",
            "habiticaTodo.oneWaySync",
            "habiticaTodo.task",
            "habiticaTodo.todo_task"
        ],
        "version": "1.2.0"
    },
    "habito": {
        "cmdline": [],
        "modules": [
            "habito",
            "habito.habito"
        ],
        "version": "1.0a2"
    },
    "habits": {
        "cmdline": [],
        "modules": [
            "habits",
            "habits.api",
            "habits.config",
            "habits.server"
        ],
        "version": "0.0.20"
    },
    "habpy": {
        "cmdline": [],
        "modules": [
            "habpy"
        ],
        "version": "0.1"
    },
    "habra-favorites": {
        "cmdline": [],
        "modules": [
            "habra_favorites",
            "habra_favorites.exporters",
            "habra_favorites.items",
            "habra_favorites.loaders",
            "habra_favorites.main",
            "habra_favorites.pipelines",
            "habra_favorites.settings",
            "habra_favorites.spiders",
            "habra_favorites.spiders.favorites_spider"
        ],
        "version": "1.4.0"
    },
    "habrahabr": {
        "cmdline": [],
        "modules": [
            "habrahabr"
        ],
        "version": "0.0.1"
    },
    "habrahabr-api": {
        "cmdline": [],
        "modules": [
            "habrahabr",
            "habrahabr.api",
            "habrahabr.auth",
            "habrahabr.errors",
            "habrahabr.resources",
            "habrahabr.resources.base",
            "habrahabr.resources.comments",
            "habrahabr.resources.company",
            "habrahabr.resources.feed",
            "habrahabr.resources.flow",
            "habrahabr.resources.hub",
            "habrahabr.resources.poll",
            "habrahabr.resources.post",
            "habrahabr.resources.search",
            "habrahabr.resources.settings",
            "habrahabr.resources.tracker",
            "habrahabr.resources.user",
            "habrahabr.utils"
        ],
        "version": "0.1.2"
    },
    "habu": {
        "cmdline": [],
        "modules": [
            "habu"
        ],
        "version": "0.0.13"
    },
    "hac": {
        "cmdline": [],
        "modules": [
            "hac",
            "hac.commands",
            "hac.core",
            "hac.data",
            "hac.parse_cli",
            "hac.parse_common",
            "hac.parse_config",
            "hac.util_common",
            "hac.util_data"
        ],
        "version": "1.0.5"
    },
    "hacheck": {
        "cmdline": [],
        "modules": [
            "hacheck",
            "hacheck.cache",
            "hacheck.checker",
            "hacheck.compat",
            "hacheck.config",
            "hacheck.handlers",
            "hacheck.haupdown",
            "hacheck.main",
            "hacheck.mysql",
            "hacheck.spool"
        ],
        "version": "0.7.0"
    },
    "hachi": {
        "cmdline": [],
        "modules": [
            "hachi",
            "hachi.compat",
            "hachi.const",
            "hachi.core",
            "hachi.exceptions",
            "hachi.request",
            "hachi.response",
            "hachi.serial",
            "hachi.tests",
            "hachi.twisted"
        ],
        "version": "0.5.1"
    },
    "hachibee-sphinx-theme": {
        "cmdline": [],
        "modules": [
            "hachibee_sphinx_theme"
        ],
        "version": "0.2.5"
    },
    "hachiko": {
        "cmdline": [],
        "modules": [
            "hachiko",
            "hachiko.hachiko"
        ],
        "version": "0.1"
    },
    "hachoir-core": {
        "cmdline": [],
        "modules": [
            "hachoir_core",
            "hachoir_core.benchmark",
            "hachoir_core.bits",
            "hachoir_core.cmd_line",
            "hachoir_core.compatibility",
            "hachoir_core.config",
            "hachoir_core.dict",
            "hachoir_core.endian",
            "hachoir_core.error",
            "hachoir_core.event_handler",
            "hachoir_core.field",
            "hachoir_core.field.basic_field_set",
            "hachoir_core.field.bit_field",
            "hachoir_core.field.byte_field",
            "hachoir_core.field.character",
            "hachoir_core.field.enum",
            "hachoir_core.field.fake_array",
            "hachoir_core.field.field",
            "hachoir_core.field.field_set",
            "hachoir_core.field.float",
            "hachoir_core.field.generic_field_set",
            "hachoir_core.field.helper",
            "hachoir_core.field.integer",
            "hachoir_core.field.link",
            "hachoir_core.field.new_seekable_field_set",
            "hachoir_core.field.padding",
            "hachoir_core.field.parser",
            "hachoir_core.field.seekable_field_set",
            "hachoir_core.field.static_field_set",
            "hachoir_core.field.string_field",
            "hachoir_core.field.sub_file",
            "hachoir_core.field.timestamp",
            "hachoir_core.field.vector",
            "hachoir_core.i18n",
            "hachoir_core.iso639",
            "hachoir_core.language",
            "hachoir_core.log",
            "hachoir_core.memory",
            "hachoir_core.profiler",
            "hachoir_core.stream",
            "hachoir_core.stream.input",
            "hachoir_core.stream.input_helper",
            "hachoir_core.stream.output",
            "hachoir_core.stream.stream",
            "hachoir_core.text_handler",
            "hachoir_core.timeout",
            "hachoir_core.tools",
            "hachoir_core.version"
        ],
        "version": "1.3.3"
    },
    "hachoir-metadata": {
        "cmdline": [
            "hachoir-metadata",
            "hachoir-metadata-gtk",
            "hachoir-metadata-qt"
        ],
        "modules": [
            "hachoir_metadata",
            "hachoir_metadata.archive",
            "hachoir_metadata.audio",
            "hachoir_metadata.config",
            "hachoir_metadata.file_system",
            "hachoir_metadata.filter",
            "hachoir_metadata.formatter",
            "hachoir_metadata.image",
            "hachoir_metadata.jpeg",
            "hachoir_metadata.metadata",
            "hachoir_metadata.metadata_item",
            "hachoir_metadata.misc",
            "hachoir_metadata.program",
            "hachoir_metadata.qt",
            "hachoir_metadata.qt.dialog_ui",
            "hachoir_metadata.register",
            "hachoir_metadata.riff",
            "hachoir_metadata.safe",
            "hachoir_metadata.setter",
            "hachoir_metadata.timezone",
            "hachoir_metadata.version",
            "hachoir_metadata.video"
        ],
        "version": "1.3.3"
    },
    "hachoir-parser": {
        "cmdline": [],
        "modules": [
            "hachoir_parser",
            "hachoir_parser.archive",
            "hachoir_parser.archive.ace",
            "hachoir_parser.archive.ar",
            "hachoir_parser.archive.bzip2_parser",
            "hachoir_parser.archive.cab",
            "hachoir_parser.archive.gzip_parser",
            "hachoir_parser.archive.mar",
            "hachoir_parser.archive.rar",
            "hachoir_parser.archive.rpm",
            "hachoir_parser.archive.sevenzip",
            "hachoir_parser.archive.tar",
            "hachoir_parser.archive.zip",
            "hachoir_parser.audio",
            "hachoir_parser.audio.8svx",
            "hachoir_parser.audio.aiff",
            "hachoir_parser.audio.au",
            "hachoir_parser.audio.flac",
            "hachoir_parser.audio.id3",
            "hachoir_parser.audio.itunesdb",
            "hachoir_parser.audio.midi",
            "hachoir_parser.audio.mod",
            "hachoir_parser.audio.modplug",
            "hachoir_parser.audio.mpeg_audio",
            "hachoir_parser.audio.real_audio",
            "hachoir_parser.audio.s3m",
            "hachoir_parser.audio.xm",
            "hachoir_parser.common",
            "hachoir_parser.common.deflate",
            "hachoir_parser.common.msdos",
            "hachoir_parser.common.tracker",
            "hachoir_parser.common.win32",
            "hachoir_parser.common.win32_lang_id",
            "hachoir_parser.container",
            "hachoir_parser.container.action_script",
            "hachoir_parser.container.asn1",
            "hachoir_parser.container.mkv",
            "hachoir_parser.container.ogg",
            "hachoir_parser.container.realmedia",
            "hachoir_parser.container.riff",
            "hachoir_parser.container.swf",
            "hachoir_parser.file_system",
            "hachoir_parser.file_system.ext2",
            "hachoir_parser.file_system.fat",
            "hachoir_parser.file_system.iso9660",
            "hachoir_parser.file_system.linux_swap",
            "hachoir_parser.file_system.mbr",
            "hachoir_parser.file_system.ntfs",
            "hachoir_parser.file_system.reiser_fs",
            "hachoir_parser.game",
            "hachoir_parser.game.blp",
            "hachoir_parser.game.laf",
            "hachoir_parser.game.spider_man_video",
            "hachoir_parser.game.zsnes",
            "hachoir_parser.guess",
            "hachoir_parser.image",
            "hachoir_parser.image.bmp",
            "hachoir_parser.image.common",
            "hachoir_parser.image.exif",
            "hachoir_parser.image.gif",
            "hachoir_parser.image.ico",
            "hachoir_parser.image.iptc",
            "hachoir_parser.image.jpeg",
            "hachoir_parser.image.pcx",
            "hachoir_parser.image.photoshop_metadata",
            "hachoir_parser.image.png",
            "hachoir_parser.image.psd",
            "hachoir_parser.image.tga",
            "hachoir_parser.image.tiff",
            "hachoir_parser.image.wmf",
            "hachoir_parser.image.xcf",
            "hachoir_parser.misc",
            "hachoir_parser.misc.bplist",
            "hachoir_parser.misc.chm",
            "hachoir_parser.misc.common",
            "hachoir_parser.misc.file_3do",
            "hachoir_parser.misc.file_3ds",
            "hachoir_parser.misc.gnome_keyring",
            "hachoir_parser.misc.hlp",
            "hachoir_parser.misc.lnk",
            "hachoir_parser.misc.msoffice",
            "hachoir_parser.misc.msoffice_summary",
            "hachoir_parser.misc.ole2",
            "hachoir_parser.misc.pcf",
            "hachoir_parser.misc.pdf",
            "hachoir_parser.misc.pifv",
            "hachoir_parser.misc.torrent",
            "hachoir_parser.misc.ttf",
            "hachoir_parser.misc.word_doc",
            "hachoir_parser.network",
            "hachoir_parser.network.common",
            "hachoir_parser.network.ouid",
            "hachoir_parser.network.tcpdump",
            "hachoir_parser.parser",
            "hachoir_parser.parser_list",
            "hachoir_parser.program",
            "hachoir_parser.program.elf",
            "hachoir_parser.program.exe",
            "hachoir_parser.program.exe_ne",
            "hachoir_parser.program.exe_pe",
            "hachoir_parser.program.exe_res",
            "hachoir_parser.program.java",
            "hachoir_parser.program.prc",
            "hachoir_parser.program.python",
            "hachoir_parser.template",
            "hachoir_parser.version",
            "hachoir_parser.video",
            "hachoir_parser.video.amf",
            "hachoir_parser.video.asf",
            "hachoir_parser.video.flv",
            "hachoir_parser.video.fourcc",
            "hachoir_parser.video.mov",
            "hachoir_parser.video.mpeg_ts",
            "hachoir_parser.video.mpeg_video"
        ],
        "version": "1.3.4"
    },
    "hachoir-regex": {
        "cmdline": [],
        "modules": [
            "hachoir_regex",
            "hachoir_regex.compatibility",
            "hachoir_regex.parser",
            "hachoir_regex.pattern",
            "hachoir_regex.regex",
            "hachoir_regex.tools",
            "hachoir_regex.version"
        ],
        "version": "1.0.5"
    },
    "hachoir-subfile": {
        "cmdline": [
            "hachoir-subfile"
        ],
        "modules": [
            "hachoir_subfile",
            "hachoir_subfile.data_rate",
            "hachoir_subfile.output",
            "hachoir_subfile.pattern",
            "hachoir_subfile.search",
            "hachoir_subfile.version"
        ],
        "version": "0.5.3"
    },
    "hachoir-urwid": {
        "cmdline": [
            "hachoir-urwid"
        ],
        "modules": [
            "hachoir_urwid",
            "hachoir_urwid.urwid_ui",
            "hachoir_urwid.version"
        ],
        "version": "1.1"
    },
    "hachoir-wx": {
        "cmdline": [
            "hachoir-wx"
        ],
        "modules": [
            "hachoir_wx",
            "hachoir_wx.app",
            "hachoir_wx.dialogs",
            "hachoir_wx.dispatcher",
            "hachoir_wx.field_view",
            "hachoir_wx.field_view.core_type_menu",
            "hachoir_wx.field_view.core_type_menu_fwd",
            "hachoir_wx.field_view.core_type_menu_imp",
            "hachoir_wx.field_view.field_menu",
            "hachoir_wx.field_view.field_menu_fwd",
            "hachoir_wx.field_view.field_menu_imp",
            "hachoir_wx.field_view.field_menu_setup",
            "hachoir_wx.field_view.field_split_menu",
            "hachoir_wx.field_view.field_split_menu_fwd",
            "hachoir_wx.field_view.field_split_menu_imp",
            "hachoir_wx.field_view.field_view",
            "hachoir_wx.field_view.field_view_fwd",
            "hachoir_wx.field_view.field_view_imp",
            "hachoir_wx.field_view.field_view_setup",
            "hachoir_wx.field_view.format",
            "hachoir_wx.field_view.mutator",
            "hachoir_wx.field_view.stubs",
            "hachoir_wx.frame_view",
            "hachoir_wx.frame_view.frame_view",
            "hachoir_wx.frame_view.frame_view_fwd",
            "hachoir_wx.frame_view.frame_view_imp",
            "hachoir_wx.frame_view.frame_view_setup",
            "hachoir_wx.hex_view",
            "hachoir_wx.hex_view.compat_all",
            "hachoir_wx.hex_view.compat_gtk",
            "hachoir_wx.hex_view.hex_view",
            "hachoir_wx.hex_view.hex_view_fwd",
            "hachoir_wx.hex_view.hex_view_imp",
            "hachoir_wx.hex_view.hex_view_scroll",
            "hachoir_wx.hex_view.hex_view_scroll_fwd",
            "hachoir_wx.hex_view.hex_view_scroll_imp",
            "hachoir_wx.hex_view.hex_view_scroll_setup",
            "hachoir_wx.hex_view.hex_view_setup",
            "hachoir_wx.hex_view.stubs",
            "hachoir_wx.resource",
            "hachoir_wx.resource.resource",
            "hachoir_wx.unicode",
            "hachoir_wx.version"
        ],
        "version": "0.3"
    },
    "hachoir3": {
        "cmdline": [
            "hachoir-grep",
            "hachoir-metadata",
            "hachoir-strip",
            "hachoir-urwid",
            "hachoir-wx"
        ],
        "modules": [
            "hachoir",
            "hachoir.core",
            "hachoir.core.benchmark",
            "hachoir.core.bits",
            "hachoir.core.cmd_line",
            "hachoir.core.config",
            "hachoir.core.dict",
            "hachoir.core.endian",
            "hachoir.core.error",
            "hachoir.core.event_handler",
            "hachoir.core.i18n",
            "hachoir.core.iso639",
            "hachoir.core.language",
            "hachoir.core.log",
            "hachoir.core.memory",
            "hachoir.core.profiler",
            "hachoir.core.text_handler",
            "hachoir.core.timeout",
            "hachoir.core.tools",
            "hachoir.editor",
            "hachoir.editor.field",
            "hachoir.editor.fieldset",
            "hachoir.editor.typed_field",
            "hachoir.field",
            "hachoir.field.basic_field_set",
            "hachoir.field.bit_field",
            "hachoir.field.byte_field",
            "hachoir.field.character",
            "hachoir.field.enum",
            "hachoir.field.fake_array",
            "hachoir.field.field",
            "hachoir.field.field_set",
            "hachoir.field.float",
            "hachoir.field.generic_field_set",
            "hachoir.field.helper",
            "hachoir.field.integer",
            "hachoir.field.link",
            "hachoir.field.padding",
            "hachoir.field.parser",
            "hachoir.field.seekable_field_set",
            "hachoir.field.static_field_set",
            "hachoir.field.string_field",
            "hachoir.field.sub_file",
            "hachoir.field.timestamp",
            "hachoir.field.vector",
            "hachoir.grep",
            "hachoir.metadata",
            "hachoir.metadata.archive",
            "hachoir.metadata.audio",
            "hachoir.metadata.config",
            "hachoir.metadata.csv",
            "hachoir.metadata.file_system",
            "hachoir.metadata.filter",
            "hachoir.metadata.formatter",
            "hachoir.metadata.gtk",
            "hachoir.metadata.image",
            "hachoir.metadata.jpeg",
            "hachoir.metadata.main",
            "hachoir.metadata.metadata",
            "hachoir.metadata.metadata_item",
            "hachoir.metadata.misc",
            "hachoir.metadata.program",
            "hachoir.metadata.qt",
            "hachoir.metadata.qt.main",
            "hachoir.metadata.register",
            "hachoir.metadata.riff",
            "hachoir.metadata.safe",
            "hachoir.metadata.setter",
            "hachoir.metadata.timezone",
            "hachoir.metadata.video",
            "hachoir.parser",
            "hachoir.parser.archive",
            "hachoir.parser.archive.ace",
            "hachoir.parser.archive.ar",
            "hachoir.parser.archive.bomstore",
            "hachoir.parser.archive.bzip2_parser",
            "hachoir.parser.archive.cab",
            "hachoir.parser.archive.gzip_parser",
            "hachoir.parser.archive.lzx",
            "hachoir.parser.archive.mar",
            "hachoir.parser.archive.mozilla_ar",
            "hachoir.parser.archive.prs_pak",
            "hachoir.parser.archive.rar",
            "hachoir.parser.archive.rpm",
            "hachoir.parser.archive.sevenzip",
            "hachoir.parser.archive.tar",
            "hachoir.parser.archive.zip",
            "hachoir.parser.archive.zlib",
            "hachoir.parser.audio",
            "hachoir.parser.audio.aiff",
            "hachoir.parser.audio.au",
            "hachoir.parser.audio.flac",
            "hachoir.parser.audio.id3",
            "hachoir.parser.audio.itunesdb",
            "hachoir.parser.audio.midi",
            "hachoir.parser.audio.mod",
            "hachoir.parser.audio.modplug",
            "hachoir.parser.audio.mpeg_audio",
            "hachoir.parser.audio.real_audio",
            "hachoir.parser.audio.s3m",
            "hachoir.parser.audio.xm",
            "hachoir.parser.common",
            "hachoir.parser.common.deflate",
            "hachoir.parser.common.msdos",
            "hachoir.parser.common.tracker",
            "hachoir.parser.common.win32",
            "hachoir.parser.common.win32_lang_id",
            "hachoir.parser.container",
            "hachoir.parser.container.action_script",
            "hachoir.parser.container.asn1",
            "hachoir.parser.container.mkv",
            "hachoir.parser.container.ogg",
            "hachoir.parser.container.realmedia",
            "hachoir.parser.container.riff",
            "hachoir.parser.container.swf",
            "hachoir.parser.file_system",
            "hachoir.parser.file_system.ext2",
            "hachoir.parser.file_system.fat",
            "hachoir.parser.file_system.iso9660",
            "hachoir.parser.file_system.linux_swap",
            "hachoir.parser.file_system.mbr",
            "hachoir.parser.file_system.ntfs",
            "hachoir.parser.file_system.reiser_fs",
            "hachoir.parser.game",
            "hachoir.parser.game.blp",
            "hachoir.parser.game.laf",
            "hachoir.parser.game.spider_man_video",
            "hachoir.parser.game.zsnes",
            "hachoir.parser.guess",
            "hachoir.parser.image",
            "hachoir.parser.image.bmp",
            "hachoir.parser.image.common",
            "hachoir.parser.image.exif",
            "hachoir.parser.image.gif",
            "hachoir.parser.image.ico",
            "hachoir.parser.image.iptc",
            "hachoir.parser.image.jpeg",
            "hachoir.parser.image.pcx",
            "hachoir.parser.image.photoshop_metadata",
            "hachoir.parser.image.png",
            "hachoir.parser.image.psd",
            "hachoir.parser.image.tga",
            "hachoir.parser.image.tiff",
            "hachoir.parser.image.wmf",
            "hachoir.parser.image.xcf",
            "hachoir.parser.misc",
            "hachoir.parser.misc.bplist",
            "hachoir.parser.misc.chm",
            "hachoir.parser.misc.common",
            "hachoir.parser.misc.dsstore",
            "hachoir.parser.misc.file_3do",
            "hachoir.parser.misc.file_3ds",
            "hachoir.parser.misc.gnome_keyring",
            "hachoir.parser.misc.hlp",
            "hachoir.parser.misc.lnk",
            "hachoir.parser.misc.mapsforge_map",
            "hachoir.parser.misc.msoffice",
            "hachoir.parser.misc.msoffice_summary",
            "hachoir.parser.misc.mstask",
            "hachoir.parser.misc.ole2",
            "hachoir.parser.misc.ole2_util",
            "hachoir.parser.misc.pcf",
            "hachoir.parser.misc.pdf",
            "hachoir.parser.misc.pifv",
            "hachoir.parser.misc.torrent",
            "hachoir.parser.misc.ttf",
            "hachoir.parser.misc.word_2",
            "hachoir.parser.misc.word_doc",
            "hachoir.parser.network",
            "hachoir.parser.network.common",
            "hachoir.parser.network.ouid",
            "hachoir.parser.network.tcpdump",
            "hachoir.parser.parser",
            "hachoir.parser.parser_list",
            "hachoir.parser.program",
            "hachoir.parser.program.elf",
            "hachoir.parser.program.exe",
            "hachoir.parser.program.exe_ne",
            "hachoir.parser.program.exe_pe",
            "hachoir.parser.program.exe_res",
            "hachoir.parser.program.java",
            "hachoir.parser.program.java_serialized",
            "hachoir.parser.program.macho",
            "hachoir.parser.program.nds",
            "hachoir.parser.program.prc",
            "hachoir.parser.program.python",
            "hachoir.parser.template",
            "hachoir.parser.video",
            "hachoir.parser.video.amf",
            "hachoir.parser.video.asf",
            "hachoir.parser.video.flv",
            "hachoir.parser.video.fourcc",
            "hachoir.parser.video.mov",
            "hachoir.parser.video.mpeg_ts",
            "hachoir.parser.video.mpeg_video",
            "hachoir.regex",
            "hachoir.regex.parser",
            "hachoir.regex.pattern",
            "hachoir.regex.regex",
            "hachoir.stream",
            "hachoir.stream.input",
            "hachoir.stream.input_helper",
            "hachoir.stream.output",
            "hachoir.stream.stream",
            "hachoir.strip",
            "hachoir.subfile",
            "hachoir.subfile.data_rate",
            "hachoir.subfile.main",
            "hachoir.subfile.output",
            "hachoir.subfile.pattern",
            "hachoir.subfile.search",
            "hachoir.subfile.version",
            "hachoir.test",
            "hachoir.urwid_ui",
            "hachoir.version",
            "hachoir.wx",
            "hachoir.wx.app",
            "hachoir.wx.dialogs",
            "hachoir.wx.dispatcher",
            "hachoir.wx.field_view",
            "hachoir.wx.field_view.core_type_menu",
            "hachoir.wx.field_view.core_type_menu_fwd",
            "hachoir.wx.field_view.core_type_menu_imp",
            "hachoir.wx.field_view.field_menu",
            "hachoir.wx.field_view.field_menu_fwd",
            "hachoir.wx.field_view.field_menu_imp",
            "hachoir.wx.field_view.field_menu_setup",
            "hachoir.wx.field_view.field_split_menu",
            "hachoir.wx.field_view.field_split_menu_fwd",
            "hachoir.wx.field_view.field_split_menu_imp",
            "hachoir.wx.field_view.field_view",
            "hachoir.wx.field_view.field_view_fwd",
            "hachoir.wx.field_view.field_view_imp",
            "hachoir.wx.field_view.field_view_setup",
            "hachoir.wx.field_view.format",
            "hachoir.wx.field_view.mutator",
            "hachoir.wx.field_view.stubs",
            "hachoir.wx.frame_view",
            "hachoir.wx.frame_view.frame_view",
            "hachoir.wx.frame_view.frame_view_fwd",
            "hachoir.wx.frame_view.frame_view_imp",
            "hachoir.wx.frame_view.frame_view_setup",
            "hachoir.wx.hex_view",
            "hachoir.wx.hex_view.file_cache",
            "hachoir.wx.hex_view.hex_view",
            "hachoir.wx.hex_view.hex_view_setup",
            "hachoir.wx.main",
            "hachoir.wx.resource",
            "hachoir.wx.resource.resource",
            "hachoir.wx.tree_view",
            "hachoir.wx.tree_view.tree_view",
            "hachoir.wx.tree_view.tree_view_setup",
            "hachoir.wx.unicode"
        ],
        "version": "3.0a2"
    },
    "hachoir3-superdesk": {
        "cmdline": [],
        "modules": [
            "hachoir",
            "hachoir.core",
            "hachoir.core.benchmark",
            "hachoir.core.bits",
            "hachoir.core.cmd_line",
            "hachoir.core.config",
            "hachoir.core.dict",
            "hachoir.core.endian",
            "hachoir.core.error",
            "hachoir.core.event_handler",
            "hachoir.core.i18n",
            "hachoir.core.iso639",
            "hachoir.core.language",
            "hachoir.core.log",
            "hachoir.core.memory",
            "hachoir.core.profiler",
            "hachoir.core.text_handler",
            "hachoir.core.timeout",
            "hachoir.core.tools",
            "hachoir.editor",
            "hachoir.editor.field",
            "hachoir.editor.fieldset",
            "hachoir.editor.typed_field",
            "hachoir.field",
            "hachoir.field.basic_field_set",
            "hachoir.field.bit_field",
            "hachoir.field.byte_field",
            "hachoir.field.character",
            "hachoir.field.enum",
            "hachoir.field.fake_array",
            "hachoir.field.field",
            "hachoir.field.field_set",
            "hachoir.field.float",
            "hachoir.field.generic_field_set",
            "hachoir.field.helper",
            "hachoir.field.integer",
            "hachoir.field.link",
            "hachoir.field.new_seekable_field_set",
            "hachoir.field.padding",
            "hachoir.field.parser",
            "hachoir.field.seekable_field_set",
            "hachoir.field.static_field_set",
            "hachoir.field.string_field",
            "hachoir.field.sub_file",
            "hachoir.field.timestamp",
            "hachoir.field.vector",
            "hachoir.grep",
            "hachoir.metadata",
            "hachoir.metadata.archive",
            "hachoir.metadata.audio",
            "hachoir.metadata.config",
            "hachoir.metadata.file_system",
            "hachoir.metadata.filter",
            "hachoir.metadata.formatter",
            "hachoir.metadata.image",
            "hachoir.metadata.jpeg",
            "hachoir.metadata.metadata",
            "hachoir.metadata.metadata_item",
            "hachoir.metadata.misc",
            "hachoir.metadata.program",
            "hachoir.metadata.qt",
            "hachoir.metadata.register",
            "hachoir.metadata.riff",
            "hachoir.metadata.safe",
            "hachoir.metadata.setter",
            "hachoir.metadata.timezone",
            "hachoir.metadata.video",
            "hachoir.parser",
            "hachoir.parser.archive",
            "hachoir.parser.archive.ace",
            "hachoir.parser.archive.ar",
            "hachoir.parser.archive.bzip2_parser",
            "hachoir.parser.archive.cab",
            "hachoir.parser.archive.gzip_parser",
            "hachoir.parser.archive.lzx",
            "hachoir.parser.archive.mar",
            "hachoir.parser.archive.mozilla_ar",
            "hachoir.parser.archive.rar",
            "hachoir.parser.archive.rpm",
            "hachoir.parser.archive.sevenzip",
            "hachoir.parser.archive.tar",
            "hachoir.parser.archive.zip",
            "hachoir.parser.archive.zlib",
            "hachoir.parser.audio",
            "hachoir.parser.audio.aiff",
            "hachoir.parser.audio.au",
            "hachoir.parser.audio.flac",
            "hachoir.parser.audio.id3",
            "hachoir.parser.audio.itunesdb",
            "hachoir.parser.audio.midi",
            "hachoir.parser.audio.mod",
            "hachoir.parser.audio.modplug",
            "hachoir.parser.audio.mpeg_audio",
            "hachoir.parser.audio.real_audio",
            "hachoir.parser.audio.s3m",
            "hachoir.parser.audio.xm",
            "hachoir.parser.common",
            "hachoir.parser.common.deflate",
            "hachoir.parser.common.msdos",
            "hachoir.parser.common.tracker",
            "hachoir.parser.common.win32",
            "hachoir.parser.common.win32_lang_id",
            "hachoir.parser.container",
            "hachoir.parser.container.action_script",
            "hachoir.parser.container.asn1",
            "hachoir.parser.container.mkv",
            "hachoir.parser.container.ogg",
            "hachoir.parser.container.realmedia",
            "hachoir.parser.container.riff",
            "hachoir.parser.container.swf",
            "hachoir.parser.file_system",
            "hachoir.parser.file_system.ext2",
            "hachoir.parser.file_system.fat",
            "hachoir.parser.file_system.iso9660",
            "hachoir.parser.file_system.linux_swap",
            "hachoir.parser.file_system.mbr",
            "hachoir.parser.file_system.ntfs",
            "hachoir.parser.file_system.reiser_fs",
            "hachoir.parser.game",
            "hachoir.parser.game.blp",
            "hachoir.parser.game.laf",
            "hachoir.parser.game.spider_man_video",
            "hachoir.parser.game.zsnes",
            "hachoir.parser.guess",
            "hachoir.parser.image",
            "hachoir.parser.image.bmp",
            "hachoir.parser.image.common",
            "hachoir.parser.image.exif",
            "hachoir.parser.image.gif",
            "hachoir.parser.image.ico",
            "hachoir.parser.image.iptc",
            "hachoir.parser.image.jpeg",
            "hachoir.parser.image.pcx",
            "hachoir.parser.image.photoshop_metadata",
            "hachoir.parser.image.png",
            "hachoir.parser.image.psd",
            "hachoir.parser.image.tga",
            "hachoir.parser.image.tiff",
            "hachoir.parser.image.wmf",
            "hachoir.parser.image.xcf",
            "hachoir.parser.misc",
            "hachoir.parser.misc.bplist",
            "hachoir.parser.misc.chm",
            "hachoir.parser.misc.common",
            "hachoir.parser.misc.dsstore",
            "hachoir.parser.misc.file_3do",
            "hachoir.parser.misc.file_3ds",
            "hachoir.parser.misc.gnome_keyring",
            "hachoir.parser.misc.hlp",
            "hachoir.parser.misc.lnk",
            "hachoir.parser.misc.msoffice",
            "hachoir.parser.misc.msoffice_summary",
            "hachoir.parser.misc.mstask",
            "hachoir.parser.misc.ole2",
            "hachoir.parser.misc.ole2_util",
            "hachoir.parser.misc.pcf",
            "hachoir.parser.misc.pdf",
            "hachoir.parser.misc.pifv",
            "hachoir.parser.misc.torrent",
            "hachoir.parser.misc.ttf",
            "hachoir.parser.misc.word_2",
            "hachoir.parser.misc.word_doc",
            "hachoir.parser.network",
            "hachoir.parser.network.common",
            "hachoir.parser.network.ouid",
            "hachoir.parser.network.tcpdump",
            "hachoir.parser.parser",
            "hachoir.parser.parser_list",
            "hachoir.parser.program",
            "hachoir.parser.program.elf",
            "hachoir.parser.program.exe",
            "hachoir.parser.program.exe_ne",
            "hachoir.parser.program.exe_pe",
            "hachoir.parser.program.exe_res",
            "hachoir.parser.program.java",
            "hachoir.parser.program.nds",
            "hachoir.parser.program.prc",
            "hachoir.parser.program.python",
            "hachoir.parser.template",
            "hachoir.parser.video",
            "hachoir.parser.video.amf",
            "hachoir.parser.video.asf",
            "hachoir.parser.video.flv",
            "hachoir.parser.video.fourcc",
            "hachoir.parser.video.mov",
            "hachoir.parser.video.mpeg_ts",
            "hachoir.parser.video.mpeg_video",
            "hachoir.regex",
            "hachoir.regex.parser",
            "hachoir.regex.pattern",
            "hachoir.regex.regex",
            "hachoir.stream",
            "hachoir.stream.input",
            "hachoir.stream.input_helper",
            "hachoir.stream.output",
            "hachoir.stream.stream",
            "hachoir.strip",
            "hachoir.subfile",
            "hachoir.subfile.data_rate",
            "hachoir.subfile.output",
            "hachoir.subfile.pattern",
            "hachoir.subfile.search",
            "hachoir.subfile.version",
            "hachoir.test",
            "hachoir.urwid_ui",
            "hachoir.version"
        ],
        "version": "3.0a1.post2"
    },
    "hack": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "hack-assembler": {
        "cmdline": [],
        "modules": [
            "hack_assembler",
            "hack_assembler.cli",
            "hack_assembler.parser",
            "hack_assembler.symbol_table"
        ],
        "version": "0.3.1"
    },
    "hack-exe": {
        "cmdline": [
            "hack.exe"
        ],
        "modules": [
            "hack_exe",
            "hack_exe.hack_exe"
        ],
        "version": "0.2"
    },
    "hackbeil": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hackchat": {
        "cmdline": [],
        "modules": [
            "hackchat"
        ],
        "version": "0.1.4"
    },
    "hackcmds": {
        "cmdline": [
            "init.sh"
        ],
        "modules": [
            "Hacker",
            "Hacker.ini",
            "Hacker.ini.TEMPLATES",
            "Hacker.ini.settings",
            "Hacker.libs",
            "Hacker.libs.cmd",
            "Hacker.libs.hackerlib",
            "Hacker.libs.networklib",
            "Hacker.libs.socialdatalib",
            "Hacker.modules",
            "Hacker.modules.Code",
            "Hacker.modules.Social",
            "Hacker.modules.TableW",
            "Hacker.modules.U"
        ],
        "version": "5.2"
    },
    "hackdamdyscompcheck": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hacked-http": {
        "cmdline": [],
        "modules": [
            "hacked_http",
            "hacked_http._httplib",
            "hacked_http._urllib2"
        ],
        "version": "0.0.1"
    },
    "hackedit": {
        "cmdline": [],
        "modules": [
            "@package@",
            "hackedit",
            "hackedit.api",
            "hackedit.api._shared",
            "hackedit.api.editor",
            "hackedit.api.events",
            "hackedit.api.gettext",
            "hackedit.api.index",
            "hackedit.api.interpreters",
            "hackedit.api.plugins",
            "hackedit.api.project",
            "hackedit.api.shortcuts",
            "hackedit.api.signals",
            "hackedit.api.special_icons",
            "hackedit.api.system",
            "hackedit.api.tasks",
            "hackedit.api.utils",
            "hackedit.api.versions",
            "hackedit.api.widgets",
            "hackedit.api.window",
            "hackedit.app",
            "hackedit.app.application",
            "hackedit.app.argparser",
            "hackedit.app.common",
            "hackedit.app.dialogs",
            "hackedit.app.dialogs.dlg_about",
            "hackedit.app.dialogs.dlg_ignore",
            "hackedit.app.dialogs.dlg_template_answers",
            "hackedit.app.dialogs.open_path",
            "hackedit.app.dialogs.preferences",
            "hackedit.app.dialogs.workspace",
            "hackedit.app.docks",
            "hackedit.app.environ",
            "hackedit.app.events",
            "hackedit.app.forms",
            "hackedit.app.forms.dlg_about_ui",
            "hackedit.app.forms.dlg_add_template_source_ui",
            "hackedit.app.forms.dlg_find_replace_ui",
            "hackedit.app.forms.dlg_ignore_file_ui",
            "hackedit.app.forms.dlg_open_ui",
            "hackedit.app.forms.dlg_preferences_ui",
            "hackedit.app.forms.dlg_progress_ui",
            "hackedit.app.forms.dlg_run_process_ui",
            "hackedit.app.forms.dlg_script_run_config_ui",
            "hackedit.app.forms.dlg_select_workspaces_ui",
            "hackedit.app.forms.dlg_template_vars_ui",
            "hackedit.app.forms.dlg_terminal_history_ui",
            "hackedit.app.forms.event_history_widget_ui",
            "hackedit.app.forms.event_widget_ui",
            "hackedit.app.forms.hackedit_rc",
            "hackedit.app.forms.locator_ui",
            "hackedit.app.forms.main_window_ui",
            "hackedit.app.forms.run_widget_ui",
            "hackedit.app.forms.settings_page_behaviour_ui",
            "hackedit.app.forms.settings_page_editor_colors_ui",
            "hackedit.app.forms.settings_page_editor_display_ui",
            "hackedit.app.forms.settings_page_editor_ui",
            "hackedit.app.forms.settings_page_environment_ui",
            "hackedit.app.forms.settings_page_indexing_ui",
            "hackedit.app.forms.settings_page_mimetypes_ui",
            "hackedit.app.forms.settings_page_notifications_ui",
            "hackedit.app.forms.settings_page_shortcuts_ui",
            "hackedit.app.forms.settings_page_templates_ui",
            "hackedit.app.forms.settings_page_workspaces_ui",
            "hackedit.app.forms.task_widget_ui",
            "hackedit.app.forms.terminal_widget_ui",
            "hackedit.app.forms.welcome_window_ui",
            "hackedit.app.forms.wizard_new_ui",
            "hackedit.app.generic_pyqode_server",
            "hackedit.app.icons",
            "hackedit.app.index",
            "hackedit.app.index.backend",
            "hackedit.app.index.db",
            "hackedit.app.ipc",
            "hackedit.app.ipc.client",
            "hackedit.app.ipc.server",
            "hackedit.app.ipc.utils",
            "hackedit.app.logger",
            "hackedit.app.main_window",
            "hackedit.app.mime_types",
            "hackedit.app.pip_tools",
            "hackedit.app.plugin_manager",
            "hackedit.app.project",
            "hackedit.app.settings",
            "hackedit.app.tasks",
            "hackedit.app.templates",
            "hackedit.app.versions",
            "hackedit.app.welcome_window",
            "hackedit.app.widgets",
            "hackedit.app.widgets.html_delegate",
            "hackedit.app.widgets.locator",
            "hackedit.app.widgets.preference_pages",
            "hackedit.app.widgets.preference_pages.behaviour",
            "hackedit.app.widgets.preference_pages.editor",
            "hackedit.app.widgets.preference_pages.editor_colors",
            "hackedit.app.widgets.preference_pages.editor_display",
            "hackedit.app.widgets.preference_pages.environment",
            "hackedit.app.widgets.preference_pages.indexing",
            "hackedit.app.widgets.preference_pages.mimetypes",
            "hackedit.app.widgets.preference_pages.notifications",
            "hackedit.app.widgets.preference_pages.shortcuts",
            "hackedit.app.widgets.preference_pages.templates",
            "hackedit.app.widgets.preference_pages.workspaces",
            "hackedit.app.widgets.recents",
            "hackedit.app.wizards",
            "hackedit.app.wizards.new",
            "hackedit.app.workspaces",
            "hackedit.console",
            "hackedit.main",
            "hackedit.plugins",
            "hackedit.plugins.documents",
            "hackedit.plugins.editors",
            "hackedit.plugins.find_replace",
            "hackedit.plugins.html_preview",
            "hackedit.plugins.image_viewer",
            "hackedit.plugins.outline",
            "hackedit.plugins.terminal",
            "hackedit.plugins.workspaces",
            "hackedit.styles",
            "hackedit.styles.arkdark",
            "hackedit.styles.aube",
            "hackedit.styles.crepuscule",
            "hackedit.styles.midnadark",
            "hackedit.vendor",
            "hackedit.vendor.binaryornot",
            "hackedit.vendor.binaryornot.check",
            "hackedit.vendor.binaryornot.helpers",
            "hackedit.vendor.chardet",
            "hackedit.vendor.chardet.big5freq",
            "hackedit.vendor.chardet.big5prober",
            "hackedit.vendor.chardet.chardetect",
            "hackedit.vendor.chardet.chardistribution",
            "hackedit.vendor.chardet.charsetgroupprober",
            "hackedit.vendor.chardet.charsetprober",
            "hackedit.vendor.chardet.codingstatemachine",
            "hackedit.vendor.chardet.compat",
            "hackedit.vendor.chardet.constants",
            "hackedit.vendor.chardet.cp949prober",
            "hackedit.vendor.chardet.escprober",
            "hackedit.vendor.chardet.escsm",
            "hackedit.vendor.chardet.eucjpprober",
            "hackedit.vendor.chardet.euckrfreq",
            "hackedit.vendor.chardet.euckrprober",
            "hackedit.vendor.chardet.euctwfreq",
            "hackedit.vendor.chardet.euctwprober",
            "hackedit.vendor.chardet.gb2312freq",
            "hackedit.vendor.chardet.gb2312prober",
            "hackedit.vendor.chardet.hebrewprober",
            "hackedit.vendor.chardet.jisfreq",
            "hackedit.vendor.chardet.jpcntx",
            "hackedit.vendor.chardet.langbulgarianmodel",
            "hackedit.vendor.chardet.langcyrillicmodel",
            "hackedit.vendor.chardet.langgreekmodel",
            "hackedit.vendor.chardet.langhebrewmodel",
            "hackedit.vendor.chardet.langhungarianmodel",
            "hackedit.vendor.chardet.langthaimodel",
            "hackedit.vendor.chardet.latin1prober",
            "hackedit.vendor.chardet.mbcharsetprober",
            "hackedit.vendor.chardet.mbcsgroupprober",
            "hackedit.vendor.chardet.mbcssm",
            "hackedit.vendor.chardet.sbcharsetprober",
            "hackedit.vendor.chardet.sbcsgroupprober",
            "hackedit.vendor.chardet.sjisprober",
            "hackedit.vendor.chardet.universaldetector",
            "hackedit.vendor.chardet.utf8prober",
            "hackedit.vendor.colorama",
            "hackedit.vendor.colorama.ansi",
            "hackedit.vendor.colorama.ansitowin32",
            "hackedit.vendor.colorama.initialise",
            "hackedit.vendor.colorama.win32",
            "hackedit.vendor.colorama.winterm",
            "hackedit.vendor.coloredlogs",
            "hackedit.vendor.coloredlogs.cli",
            "hackedit.vendor.coloredlogs.converter",
            "hackedit.vendor.coloredlogs.demo",
            "hackedit.vendor.coloredlogs.syslog",
            "hackedit.vendor.coloredlogs.tests",
            "hackedit.vendor.future",
            "hackedit.vendor.future.backports",
            "hackedit.vendor.future.backports._markupbase",
            "hackedit.vendor.future.backports.datetime",
            "hackedit.vendor.future.backports.email",
            "hackedit.vendor.future.backports.email._encoded_words",
            "hackedit.vendor.future.backports.email._header_value_parser",
            "hackedit.vendor.future.backports.email._parseaddr",
            "hackedit.vendor.future.backports.email._policybase",
            "hackedit.vendor.future.backports.email.base64mime",
            "hackedit.vendor.future.backports.email.charset",
            "hackedit.vendor.future.backports.email.encoders",
            "hackedit.vendor.future.backports.email.errors",
            "hackedit.vendor.future.backports.email.feedparser",
            "hackedit.vendor.future.backports.email.generator",
            "hackedit.vendor.future.backports.email.header",
            "hackedit.vendor.future.backports.email.headerregistry",
            "hackedit.vendor.future.backports.email.iterators",
            "hackedit.vendor.future.backports.email.message",
            "hackedit.vendor.future.backports.email.mime",
            "hackedit.vendor.future.backports.email.mime.application",
            "hackedit.vendor.future.backports.email.mime.audio",
            "hackedit.vendor.future.backports.email.mime.base",
            "hackedit.vendor.future.backports.email.mime.image",
            "hackedit.vendor.future.backports.email.mime.message",
            "hackedit.vendor.future.backports.email.mime.multipart",
            "hackedit.vendor.future.backports.email.mime.nonmultipart",
            "hackedit.vendor.future.backports.email.mime.text",
            "hackedit.vendor.future.backports.email.parser",
            "hackedit.vendor.future.backports.email.policy",
            "hackedit.vendor.future.backports.email.quoprimime",
            "hackedit.vendor.future.backports.email.utils",
            "hackedit.vendor.future.backports.html",
            "hackedit.vendor.future.backports.html.entities",
            "hackedit.vendor.future.backports.html.parser",
            "hackedit.vendor.future.backports.http",
            "hackedit.vendor.future.backports.http.client",
            "hackedit.vendor.future.backports.http.cookiejar",
            "hackedit.vendor.future.backports.http.cookies",
            "hackedit.vendor.future.backports.http.server",
            "hackedit.vendor.future.backports.misc",
            "hackedit.vendor.future.backports.socket",
            "hackedit.vendor.future.backports.socketserver",
            "hackedit.vendor.future.backports.test",
            "hackedit.vendor.future.backports.test.pystone",
            "hackedit.vendor.future.backports.test.ssl_servers",
            "hackedit.vendor.future.backports.test.support",
            "hackedit.vendor.future.backports.total_ordering",
            "hackedit.vendor.future.backports.urllib",
            "hackedit.vendor.future.backports.urllib.error",
            "hackedit.vendor.future.backports.urllib.parse",
            "hackedit.vendor.future.backports.urllib.request",
            "hackedit.vendor.future.backports.urllib.response",
            "hackedit.vendor.future.backports.urllib.robotparser",
            "hackedit.vendor.future.backports.xmlrpc",
            "hackedit.vendor.future.backports.xmlrpc.client",
            "hackedit.vendor.future.backports.xmlrpc.server",
            "hackedit.vendor.future.builtins",
            "hackedit.vendor.future.builtins.disabled",
            "hackedit.vendor.future.builtins.iterators",
            "hackedit.vendor.future.builtins.misc",
            "hackedit.vendor.future.builtins.newnext",
            "hackedit.vendor.future.builtins.newround",
            "hackedit.vendor.future.builtins.newsuper",
            "hackedit.vendor.future.moves",
            "hackedit.vendor.future.moves._dummy_thread",
            "hackedit.vendor.future.moves._markupbase",
            "hackedit.vendor.future.moves._thread",
            "hackedit.vendor.future.moves.builtins",
            "hackedit.vendor.future.moves.collections",
            "hackedit.vendor.future.moves.configparser",
            "hackedit.vendor.future.moves.copyreg",
            "hackedit.vendor.future.moves.dbm",
            "hackedit.vendor.future.moves.dbm.dumb",
            "hackedit.vendor.future.moves.dbm.gnu",
            "hackedit.vendor.future.moves.dbm.ndbm",
            "hackedit.vendor.future.moves.html",
            "hackedit.vendor.future.moves.html.entities",
            "hackedit.vendor.future.moves.html.parser",
            "hackedit.vendor.future.moves.http",
            "hackedit.vendor.future.moves.http.client",
            "hackedit.vendor.future.moves.http.cookiejar",
            "hackedit.vendor.future.moves.http.cookies",
            "hackedit.vendor.future.moves.http.server",
            "hackedit.vendor.future.moves.itertools",
            "hackedit.vendor.future.moves.pickle",
            "hackedit.vendor.future.moves.queue",
            "hackedit.vendor.future.moves.reprlib",
            "hackedit.vendor.future.moves.socketserver",
            "hackedit.vendor.future.moves.subprocess",
            "hackedit.vendor.future.moves.sys",
            "hackedit.vendor.future.moves.test",
            "hackedit.vendor.future.moves.test.support",
            "hackedit.vendor.future.moves.tkinter",
            "hackedit.vendor.future.moves.tkinter.colorchooser",
            "hackedit.vendor.future.moves.tkinter.commondialog",
            "hackedit.vendor.future.moves.tkinter.constants",
            "hackedit.vendor.future.moves.tkinter.dialog",
            "hackedit.vendor.future.moves.tkinter.dnd",
            "hackedit.vendor.future.moves.tkinter.filedialog",
            "hackedit.vendor.future.moves.tkinter.font",
            "hackedit.vendor.future.moves.tkinter.messagebox",
            "hackedit.vendor.future.moves.tkinter.scrolledtext",
            "hackedit.vendor.future.moves.tkinter.simpledialog",
            "hackedit.vendor.future.moves.tkinter.tix",
            "hackedit.vendor.future.moves.tkinter.ttk",
            "hackedit.vendor.future.moves.urllib",
            "hackedit.vendor.future.moves.urllib.error",
            "hackedit.vendor.future.moves.urllib.parse",
            "hackedit.vendor.future.moves.urllib.request",
            "hackedit.vendor.future.moves.urllib.response",
            "hackedit.vendor.future.moves.urllib.robotparser",
            "hackedit.vendor.future.moves.winreg",
            "hackedit.vendor.future.moves.xmlrpc",
            "hackedit.vendor.future.moves.xmlrpc.client",
            "hackedit.vendor.future.moves.xmlrpc.server",
            "hackedit.vendor.future.standard_library",
            "hackedit.vendor.future.tests",
            "hackedit.vendor.future.tests.base",
            "hackedit.vendor.future.types",
            "hackedit.vendor.future.types.newbytes",
            "hackedit.vendor.future.types.newdict",
            "hackedit.vendor.future.types.newint",
            "hackedit.vendor.future.types.newlist",
            "hackedit.vendor.future.types.newmemoryview",
            "hackedit.vendor.future.types.newobject",
            "hackedit.vendor.future.types.newopen",
            "hackedit.vendor.future.types.newrange",
            "hackedit.vendor.future.types.newstr",
            "hackedit.vendor.future.utils",
            "hackedit.vendor.future.utils.surrogateescape",
            "hackedit.vendor.humanfriendly",
            "hackedit.vendor.humanfriendly.cli",
            "hackedit.vendor.humanfriendly.compat",
            "hackedit.vendor.humanfriendly.prompts",
            "hackedit.vendor.humanfriendly.sphinx",
            "hackedit.vendor.humanfriendly.tables",
            "hackedit.vendor.humanfriendly.terminal",
            "hackedit.vendor.humanfriendly.tests",
            "hackedit.vendor.humanfriendly.text",
            "hackedit.vendor.humanfriendly.usage",
            "hackedit.vendor.jedi",
            "hackedit.vendor.jedi._compatibility",
            "hackedit.vendor.jedi.api",
            "hackedit.vendor.jedi.api.classes",
            "hackedit.vendor.jedi.api.helpers",
            "hackedit.vendor.jedi.api.interpreter",
            "hackedit.vendor.jedi.api.keywords",
            "hackedit.vendor.jedi.api.replstartup",
            "hackedit.vendor.jedi.api.usages",
            "hackedit.vendor.jedi.cache",
            "hackedit.vendor.jedi.common",
            "hackedit.vendor.jedi.debug",
            "hackedit.vendor.jedi.evaluate",
            "hackedit.vendor.jedi.evaluate.analysis",
            "hackedit.vendor.jedi.evaluate.cache",
            "hackedit.vendor.jedi.evaluate.compiled",
            "hackedit.vendor.jedi.evaluate.compiled.fake",
            "hackedit.vendor.jedi.evaluate.docstrings",
            "hackedit.vendor.jedi.evaluate.dynamic",
            "hackedit.vendor.jedi.evaluate.finder",
            "hackedit.vendor.jedi.evaluate.flow_analysis",
            "hackedit.vendor.jedi.evaluate.helpers",
            "hackedit.vendor.jedi.evaluate.imports",
            "hackedit.vendor.jedi.evaluate.iterable",
            "hackedit.vendor.jedi.evaluate.param",
            "hackedit.vendor.jedi.evaluate.precedence",
            "hackedit.vendor.jedi.evaluate.recursion",
            "hackedit.vendor.jedi.evaluate.representation",
            "hackedit.vendor.jedi.evaluate.site",
            "hackedit.vendor.jedi.evaluate.stdlib",
            "hackedit.vendor.jedi.evaluate.sys_path",
            "hackedit.vendor.jedi.parser",
            "hackedit.vendor.jedi.parser.fast",
            "hackedit.vendor.jedi.parser.pgen2",
            "hackedit.vendor.jedi.parser.pgen2.grammar",
            "hackedit.vendor.jedi.parser.pgen2.parse",
            "hackedit.vendor.jedi.parser.pgen2.pgen",
            "hackedit.vendor.jedi.parser.token",
            "hackedit.vendor.jedi.parser.tokenize",
            "hackedit.vendor.jedi.parser.tree",
            "hackedit.vendor.jedi.parser.user_context",
            "hackedit.vendor.jedi.refactoring",
            "hackedit.vendor.jedi.settings",
            "hackedit.vendor.jedi.utils",
            "hackedit.vendor.keyring",
            "hackedit.vendor.keyring.backend",
            "hackedit.vendor.keyring.backends",
            "hackedit.vendor.keyring.backends.OS_X",
            "hackedit.vendor.keyring.backends.SecretService",
            "hackedit.vendor.keyring.backends.Windows",
            "hackedit.vendor.keyring.backends._OS_X_API",
            "hackedit.vendor.keyring.backends.fail",
            "hackedit.vendor.keyring.backends.kwallet",
            "hackedit.vendor.keyring.cli",
            "hackedit.vendor.keyring.core",
            "hackedit.vendor.keyring.credentials",
            "hackedit.vendor.keyring.errors",
            "hackedit.vendor.keyring.getpassbackend",
            "hackedit.vendor.keyring.http",
            "hackedit.vendor.keyring.py27compat",
            "hackedit.vendor.keyring.py33compat",
            "hackedit.vendor.keyring.tests",
            "hackedit.vendor.keyring.tests.backends",
            "hackedit.vendor.keyring.tests.backends.test_OS_X",
            "hackedit.vendor.keyring.tests.backends.test_SecretService",
            "hackedit.vendor.keyring.tests.backends.test_Windows",
            "hackedit.vendor.keyring.tests.backends.test_kwallet",
            "hackedit.vendor.keyring.tests.test_backend",
            "hackedit.vendor.keyring.tests.util",
            "hackedit.vendor.keyring.util",
            "hackedit.vendor.keyring.util.escape",
            "hackedit.vendor.keyring.util.platform_",
            "hackedit.vendor.keyring.util.properties",
            "hackedit.vendor.pep8",
            "hackedit.vendor.pyflakes",
            "hackedit.vendor.pyflakes.api",
            "hackedit.vendor.pyflakes.checker",
            "hackedit.vendor.pyflakes.messages",
            "hackedit.vendor.pyflakes.reporter",
            "hackedit.vendor.pyflakes.scripts",
            "hackedit.vendor.pyflakes.scripts.pyflakes",
            "hackedit.vendor.pyflakes.test",
            "hackedit.vendor.pyflakes.test.harness",
            "hackedit.vendor.pyflakes.test.test_api",
            "hackedit.vendor.pyflakes.test.test_doctests",
            "hackedit.vendor.pyflakes.test.test_imports",
            "hackedit.vendor.pyflakes.test.test_other",
            "hackedit.vendor.pyflakes.test.test_return_with_arguments_inside_generator",
            "hackedit.vendor.pyflakes.test.test_undefined_names",
            "hackedit.vendor.pygments",
            "hackedit.vendor.pygments.cmdline",
            "hackedit.vendor.pygments.console",
            "hackedit.vendor.pygments.filter",
            "hackedit.vendor.pygments.filters",
            "hackedit.vendor.pygments.formatter",
            "hackedit.vendor.pygments.formatters",
            "hackedit.vendor.pygments.formatters._mapping",
            "hackedit.vendor.pygments.formatters.bbcode",
            "hackedit.vendor.pygments.formatters.html",
            "hackedit.vendor.pygments.formatters.img",
            "hackedit.vendor.pygments.formatters.irc",
            "hackedit.vendor.pygments.formatters.latex",
            "hackedit.vendor.pygments.formatters.other",
            "hackedit.vendor.pygments.formatters.rtf",
            "hackedit.vendor.pygments.formatters.svg",
            "hackedit.vendor.pygments.formatters.terminal",
            "hackedit.vendor.pygments.formatters.terminal256",
            "hackedit.vendor.pygments.lexer",
            "hackedit.vendor.pygments.lexers",
            "hackedit.vendor.pygments.lexers._asy_builtins",
            "hackedit.vendor.pygments.lexers._cl_builtins",
            "hackedit.vendor.pygments.lexers._cocoa_builtins",
            "hackedit.vendor.pygments.lexers._csound_builtins",
            "hackedit.vendor.pygments.lexers._lasso_builtins",
            "hackedit.vendor.pygments.lexers._lua_builtins",
            "hackedit.vendor.pygments.lexers._mapping",
            "hackedit.vendor.pygments.lexers._mql_builtins",
            "hackedit.vendor.pygments.lexers._openedge_builtins",
            "hackedit.vendor.pygments.lexers._php_builtins",
            "hackedit.vendor.pygments.lexers._postgres_builtins",
            "hackedit.vendor.pygments.lexers._scilab_builtins",
            "hackedit.vendor.pygments.lexers._sourcemod_builtins",
            "hackedit.vendor.pygments.lexers._stan_builtins",
            "hackedit.vendor.pygments.lexers._vim_builtins",
            "hackedit.vendor.pygments.lexers.actionscript",
            "hackedit.vendor.pygments.lexers.agile",
            "hackedit.vendor.pygments.lexers.algebra",
            "hackedit.vendor.pygments.lexers.ambient",
            "hackedit.vendor.pygments.lexers.apl",
            "hackedit.vendor.pygments.lexers.archetype",
            "hackedit.vendor.pygments.lexers.asm",
            "hackedit.vendor.pygments.lexers.automation",
            "hackedit.vendor.pygments.lexers.basic",
            "hackedit.vendor.pygments.lexers.business",
            "hackedit.vendor.pygments.lexers.c_cpp",
            "hackedit.vendor.pygments.lexers.c_like",
            "hackedit.vendor.pygments.lexers.chapel",
            "hackedit.vendor.pygments.lexers.compiled",
            "hackedit.vendor.pygments.lexers.configs",
            "hackedit.vendor.pygments.lexers.console",
            "hackedit.vendor.pygments.lexers.csound",
            "hackedit.vendor.pygments.lexers.css",
            "hackedit.vendor.pygments.lexers.d",
            "hackedit.vendor.pygments.lexers.dalvik",
            "hackedit.vendor.pygments.lexers.data",
            "hackedit.vendor.pygments.lexers.diff",
            "hackedit.vendor.pygments.lexers.dotnet",
            "hackedit.vendor.pygments.lexers.dsls",
            "hackedit.vendor.pygments.lexers.dylan",
            "hackedit.vendor.pygments.lexers.ecl",
            "hackedit.vendor.pygments.lexers.eiffel",
            "hackedit.vendor.pygments.lexers.elm",
            "hackedit.vendor.pygments.lexers.erlang",
            "hackedit.vendor.pygments.lexers.esoteric",
            "hackedit.vendor.pygments.lexers.ezhil",
            "hackedit.vendor.pygments.lexers.factor",
            "hackedit.vendor.pygments.lexers.fantom",
            "hackedit.vendor.pygments.lexers.felix",
            "hackedit.vendor.pygments.lexers.fortran",
            "hackedit.vendor.pygments.lexers.foxpro",
            "hackedit.vendor.pygments.lexers.functional",
            "hackedit.vendor.pygments.lexers.go",
            "hackedit.vendor.pygments.lexers.grammar_notation",
            "hackedit.vendor.pygments.lexers.graph",
            "hackedit.vendor.pygments.lexers.graphics",
            "hackedit.vendor.pygments.lexers.haskell",
            "hackedit.vendor.pygments.lexers.haxe",
            "hackedit.vendor.pygments.lexers.hdl",
            "hackedit.vendor.pygments.lexers.hexdump",
            "hackedit.vendor.pygments.lexers.html",
            "hackedit.vendor.pygments.lexers.idl",
            "hackedit.vendor.pygments.lexers.igor",
            "hackedit.vendor.pygments.lexers.inferno",
            "hackedit.vendor.pygments.lexers.installers",
            "hackedit.vendor.pygments.lexers.int_fiction",
            "hackedit.vendor.pygments.lexers.iolang",
            "hackedit.vendor.pygments.lexers.j",
            "hackedit.vendor.pygments.lexers.javascript",
            "hackedit.vendor.pygments.lexers.julia",
            "hackedit.vendor.pygments.lexers.jvm",
            "hackedit.vendor.pygments.lexers.lisp",
            "hackedit.vendor.pygments.lexers.make",
            "hackedit.vendor.pygments.lexers.markup",
            "hackedit.vendor.pygments.lexers.math",
            "hackedit.vendor.pygments.lexers.matlab",
            "hackedit.vendor.pygments.lexers.ml",
            "hackedit.vendor.pygments.lexers.modeling",
            "hackedit.vendor.pygments.lexers.modula2",
            "hackedit.vendor.pygments.lexers.nimrod",
            "hackedit.vendor.pygments.lexers.nit",
            "hackedit.vendor.pygments.lexers.nix",
            "hackedit.vendor.pygments.lexers.oberon",
            "hackedit.vendor.pygments.lexers.objective",
            "hackedit.vendor.pygments.lexers.ooc",
            "hackedit.vendor.pygments.lexers.other",
            "hackedit.vendor.pygments.lexers.parasail",
            "hackedit.vendor.pygments.lexers.parsers",
            "hackedit.vendor.pygments.lexers.pascal",
            "hackedit.vendor.pygments.lexers.pawn",
            "hackedit.vendor.pygments.lexers.perl",
            "hackedit.vendor.pygments.lexers.php",
            "hackedit.vendor.pygments.lexers.praat",
            "hackedit.vendor.pygments.lexers.prolog",
            "hackedit.vendor.pygments.lexers.python",
            "hackedit.vendor.pygments.lexers.qvt",
            "hackedit.vendor.pygments.lexers.r",
            "hackedit.vendor.pygments.lexers.rdf",
            "hackedit.vendor.pygments.lexers.rebol",
            "hackedit.vendor.pygments.lexers.resource",
            "hackedit.vendor.pygments.lexers.roboconf",
            "hackedit.vendor.pygments.lexers.robotframework",
            "hackedit.vendor.pygments.lexers.ruby",
            "hackedit.vendor.pygments.lexers.rust",
            "hackedit.vendor.pygments.lexers.scripting",
            "hackedit.vendor.pygments.lexers.shell",
            "hackedit.vendor.pygments.lexers.smalltalk",
            "hackedit.vendor.pygments.lexers.snobol",
            "hackedit.vendor.pygments.lexers.special",
            "hackedit.vendor.pygments.lexers.sql",
            "hackedit.vendor.pygments.lexers.supercollider",
            "hackedit.vendor.pygments.lexers.tcl",
            "hackedit.vendor.pygments.lexers.templates",
            "hackedit.vendor.pygments.lexers.testing",
            "hackedit.vendor.pygments.lexers.text",
            "hackedit.vendor.pygments.lexers.textedit",
            "hackedit.vendor.pygments.lexers.textfmts",
            "hackedit.vendor.pygments.lexers.theorem",
            "hackedit.vendor.pygments.lexers.trafficscript",
            "hackedit.vendor.pygments.lexers.urbi",
            "hackedit.vendor.pygments.lexers.web",
            "hackedit.vendor.pygments.lexers.webmisc",
            "hackedit.vendor.pygments.lexers.x10",
            "hackedit.vendor.pygments.modeline",
            "hackedit.vendor.pygments.plugin",
            "hackedit.vendor.pygments.regexopt",
            "hackedit.vendor.pygments.scanner",
            "hackedit.vendor.pygments.sphinxext",
            "hackedit.vendor.pygments.style",
            "hackedit.vendor.pygments.styles",
            "hackedit.vendor.pygments.styles.algol",
            "hackedit.vendor.pygments.styles.algol_nu",
            "hackedit.vendor.pygments.styles.arduino",
            "hackedit.vendor.pygments.styles.autumn",
            "hackedit.vendor.pygments.styles.borland",
            "hackedit.vendor.pygments.styles.bw",
            "hackedit.vendor.pygments.styles.colorful",
            "hackedit.vendor.pygments.styles.default",
            "hackedit.vendor.pygments.styles.emacs",
            "hackedit.vendor.pygments.styles.friendly",
            "hackedit.vendor.pygments.styles.fruity",
            "hackedit.vendor.pygments.styles.igor",
            "hackedit.vendor.pygments.styles.lovelace",
            "hackedit.vendor.pygments.styles.manni",
            "hackedit.vendor.pygments.styles.monokai",
            "hackedit.vendor.pygments.styles.murphy",
            "hackedit.vendor.pygments.styles.native",
            "hackedit.vendor.pygments.styles.paraiso_dark",
            "hackedit.vendor.pygments.styles.paraiso_light",
            "hackedit.vendor.pygments.styles.pastie",
            "hackedit.vendor.pygments.styles.perldoc",
            "hackedit.vendor.pygments.styles.rrt",
            "hackedit.vendor.pygments.styles.tango",
            "hackedit.vendor.pygments.styles.trac",
            "hackedit.vendor.pygments.styles.vim",
            "hackedit.vendor.pygments.styles.vs",
            "hackedit.vendor.pygments.styles.xcode",
            "hackedit.vendor.pygments.token",
            "hackedit.vendor.pygments.unistring",
            "hackedit.vendor.pygments.util",
            "hackedit.vendor.pyqode",
            "hackedit.vendor.pyqode.cobol",
            "hackedit.vendor.pyqode.cobol._forms",
            "hackedit.vendor.pyqode.cobol._forms.resources_rc",
            "hackedit.vendor.pyqode.cobol.api",
            "hackedit.vendor.pyqode.cobol.api.folding",
            "hackedit.vendor.pyqode.cobol.api.icons",
            "hackedit.vendor.pyqode.cobol.api.keywords",
            "hackedit.vendor.pyqode.cobol.api.parsers",
            "hackedit.vendor.pyqode.cobol.api.parsers.names",
            "hackedit.vendor.pyqode.cobol.api.parsers.pic",
            "hackedit.vendor.pyqode.cobol.api.pic",
            "hackedit.vendor.pyqode.cobol.api.regex",
            "hackedit.vendor.pyqode.cobol.backend",
            "hackedit.vendor.pyqode.cobol.backend.server",
            "hackedit.vendor.pyqode.cobol.backend.workers",
            "hackedit.vendor.pyqode.cobol.modes",
            "hackedit.vendor.pyqode.cobol.modes.auto_indent",
            "hackedit.vendor.pyqode.cobol.modes.backspace",
            "hackedit.vendor.pyqode.cobol.modes.comments",
            "hackedit.vendor.pyqode.cobol.modes.goto",
            "hackedit.vendor.pyqode.cobol.modes.indenter",
            "hackedit.vendor.pyqode.cobol.modes.margins",
            "hackedit.vendor.pyqode.cobol.modes.pic_offset",
            "hackedit.vendor.pyqode.cobol.modes.sh",
            "hackedit.vendor.pyqode.cobol.widgets",
            "hackedit.vendor.pyqode.cobol.widgets.code_edit",
            "hackedit.vendor.pyqode.cobol.widgets.outline",
            "hackedit.vendor.pyqode.cobol.widgets.pic_offsets",
            "hackedit.vendor.pyqode.core",
            "hackedit.vendor.pyqode.core._designer_plugins",
            "hackedit.vendor.pyqode.core._designer_plugins.code_edit_plugin",
            "hackedit.vendor.pyqode.core._designer_plugins.errors_table_plugin",
            "hackedit.vendor.pyqode.core._designer_plugins.interactive_console_plugin",
            "hackedit.vendor.pyqode.core._designer_plugins.tab_widget_plugin",
            "hackedit.vendor.pyqode.core._forms",
            "hackedit.vendor.pyqode.core._forms.dlg_encodings_ui",
            "hackedit.vendor.pyqode.core._forms.dlg_goto_line_ui",
            "hackedit.vendor.pyqode.core._forms.dlg_preferred_encodings_editor_ui",
            "hackedit.vendor.pyqode.core._forms.dlg_unsaved_files_ui",
            "hackedit.vendor.pyqode.core._forms.pnl_encoding_ui",
            "hackedit.vendor.pyqode.core._forms.pnl_read_only_ui",
            "hackedit.vendor.pyqode.core._forms.popup_open_files_ui",
            "hackedit.vendor.pyqode.core._forms.pyqode_core_rc",
            "hackedit.vendor.pyqode.core._forms.search_panel_ui",
            "hackedit.vendor.pyqode.core.api",
            "hackedit.vendor.pyqode.core.api.client",
            "hackedit.vendor.pyqode.core.api.code_edit",
            "hackedit.vendor.pyqode.core.api.decoration",
            "hackedit.vendor.pyqode.core.api.encodings",
            "hackedit.vendor.pyqode.core.api.folding",
            "hackedit.vendor.pyqode.core.api.manager",
            "hackedit.vendor.pyqode.core.api.mode",
            "hackedit.vendor.pyqode.core.api.panel",
            "hackedit.vendor.pyqode.core.api.syntax_highlighter",
            "hackedit.vendor.pyqode.core.api.utils",
            "hackedit.vendor.pyqode.core.backend",
            "hackedit.vendor.pyqode.core.backend.server",
            "hackedit.vendor.pyqode.core.backend.workers",
            "hackedit.vendor.pyqode.core.cache",
            "hackedit.vendor.pyqode.core.dialogs",
            "hackedit.vendor.pyqode.core.dialogs.encodings",
            "hackedit.vendor.pyqode.core.dialogs.goto",
            "hackedit.vendor.pyqode.core.dialogs.unsaved_files",
            "hackedit.vendor.pyqode.core.icons",
            "hackedit.vendor.pyqode.core.managers",
            "hackedit.vendor.pyqode.core.managers.backend",
            "hackedit.vendor.pyqode.core.managers.decorations",
            "hackedit.vendor.pyqode.core.managers.file",
            "hackedit.vendor.pyqode.core.managers.modes",
            "hackedit.vendor.pyqode.core.managers.panels",
            "hackedit.vendor.pyqode.core.modes",
            "hackedit.vendor.pyqode.core.modes.autocomplete",
            "hackedit.vendor.pyqode.core.modes.autoindent",
            "hackedit.vendor.pyqode.core.modes.backspace",
            "hackedit.vendor.pyqode.core.modes.caret_line_highlight",
            "hackedit.vendor.pyqode.core.modes.case_converter",
            "hackedit.vendor.pyqode.core.modes.checker",
            "hackedit.vendor.pyqode.core.modes.code_completion",
            "hackedit.vendor.pyqode.core.modes.cursor_history",
            "hackedit.vendor.pyqode.core.modes.extended_selection",
            "hackedit.vendor.pyqode.core.modes.filewatcher",
            "hackedit.vendor.pyqode.core.modes.indenter",
            "hackedit.vendor.pyqode.core.modes.line_highlighter",
            "hackedit.vendor.pyqode.core.modes.matcher",
            "hackedit.vendor.pyqode.core.modes.occurences",
            "hackedit.vendor.pyqode.core.modes.outline",
            "hackedit.vendor.pyqode.core.modes.pygments_sh",
            "hackedit.vendor.pyqode.core.modes.right_margin",
            "hackedit.vendor.pyqode.core.modes.wordclick",
            "hackedit.vendor.pyqode.core.modes.zoom",
            "hackedit.vendor.pyqode.core.panels",
            "hackedit.vendor.pyqode.core.panels.checker",
            "hackedit.vendor.pyqode.core.panels.encodings",
            "hackedit.vendor.pyqode.core.panels.folding",
            "hackedit.vendor.pyqode.core.panels.global_checker",
            "hackedit.vendor.pyqode.core.panels.line_number",
            "hackedit.vendor.pyqode.core.panels.marker",
            "hackedit.vendor.pyqode.core.panels.read_only",
            "hackedit.vendor.pyqode.core.panels.search_and_replace",
            "hackedit.vendor.pyqode.core.share",
            "hackedit.vendor.pyqode.core.styles",
            "hackedit.vendor.pyqode.core.styles.darcula",
            "hackedit.vendor.pyqode.core.styles.qt",
            "hackedit.vendor.pyqode.core.tools",
            "hackedit.vendor.pyqode.core.tools.console",
            "hackedit.vendor.pyqode.core.widgets",
            "hackedit.vendor.pyqode.core.widgets._pty",
            "hackedit.vendor.pyqode.core.widgets.code_edits",
            "hackedit.vendor.pyqode.core.widgets.encodings",
            "hackedit.vendor.pyqode.core.widgets.errors_table",
            "hackedit.vendor.pyqode.core.widgets.file_icons_provider",
            "hackedit.vendor.pyqode.core.widgets.filesystem_treeview",
            "hackedit.vendor.pyqode.core.widgets.interactive",
            "hackedit.vendor.pyqode.core.widgets.menu_recents",
            "hackedit.vendor.pyqode.core.widgets.outline",
            "hackedit.vendor.pyqode.core.widgets.output_window",
            "hackedit.vendor.pyqode.core.widgets.preview",
            "hackedit.vendor.pyqode.core.widgets.prompt_line_edit",
            "hackedit.vendor.pyqode.core.widgets.pty_wrapper",
            "hackedit.vendor.pyqode.core.widgets.splittable_tab_widget",
            "hackedit.vendor.pyqode.core.widgets.tab_bar",
            "hackedit.vendor.pyqode.core.widgets.tabs",
            "hackedit.vendor.pyqode.core.widgets.terminal",
            "hackedit.vendor.pyqode.json",
            "hackedit.vendor.pyqode.json.api",
            "hackedit.vendor.pyqode.json.api.folding",
            "hackedit.vendor.pyqode.json.modes",
            "hackedit.vendor.pyqode.json.modes.autocomplete",
            "hackedit.vendor.pyqode.json.modes.autoindent",
            "hackedit.vendor.pyqode.json.modes.linter",
            "hackedit.vendor.pyqode.json.modes.sh",
            "hackedit.vendor.pyqode.json.panels",
            "hackedit.vendor.pyqode.json.panels.navigation",
            "hackedit.vendor.pyqode.json.widgets",
            "hackedit.vendor.pyqode.json.widgets.code_edit",
            "hackedit.vendor.pyqode.python",
            "hackedit.vendor.pyqode.python._forms",
            "hackedit.vendor.pyqode.python._forms.pyqode_python_icons_rc",
            "hackedit.vendor.pyqode.python.backend",
            "hackedit.vendor.pyqode.python.backend.pep8utils",
            "hackedit.vendor.pyqode.python.backend.server",
            "hackedit.vendor.pyqode.python.backend.workers",
            "hackedit.vendor.pyqode.python.designer_plugin",
            "hackedit.vendor.pyqode.python.folding",
            "hackedit.vendor.pyqode.python.managers",
            "hackedit.vendor.pyqode.python.managers.file",
            "hackedit.vendor.pyqode.python.modes",
            "hackedit.vendor.pyqode.python.modes.autocomplete",
            "hackedit.vendor.pyqode.python.modes.autoindent",
            "hackedit.vendor.pyqode.python.modes.calltips",
            "hackedit.vendor.pyqode.python.modes.comments",
            "hackedit.vendor.pyqode.python.modes.frosted_checker",
            "hackedit.vendor.pyqode.python.modes.goto_assignements",
            "hackedit.vendor.pyqode.python.modes.indenter",
            "hackedit.vendor.pyqode.python.modes.pep8_checker",
            "hackedit.vendor.pyqode.python.modes.sh",
            "hackedit.vendor.pyqode.python.panels",
            "hackedit.vendor.pyqode.python.panels.quick_doc",
            "hackedit.vendor.pyqode.python.panels.symbol_browser",
            "hackedit.vendor.pyqode.python.widgets",
            "hackedit.vendor.pyqode.python.widgets.code_edit",
            "hackedit.vendor.pyqode.python.widgets.console",
            "hackedit.vendor.pyqode.python.widgets.interactive",
            "hackedit.vendor.pyqode.python.widgets.outline",
            "hackedit.vendor.pyqode.qt",
            "hackedit.vendor.pyqode.qt.QtCore",
            "hackedit.vendor.pyqode.qt.QtDesigner",
            "hackedit.vendor.pyqode.qt.QtGui",
            "hackedit.vendor.pyqode.qt.QtNetwork",
            "hackedit.vendor.pyqode.qt.QtTest",
            "hackedit.vendor.pyqode.qt.QtWebWidgets",
            "hackedit.vendor.pyqode.qt.QtWidgets",
            "hackedit.vendor.pyqode.rst",
            "hackedit.vendor.pyqode.rst.backend",
            "hackedit.vendor.pyqode.rst.backend.server",
            "hackedit.vendor.pyqode.rst.backend.workers",
            "hackedit.vendor.pyqode.rst.modes",
            "hackedit.vendor.pyqode.rst.modes.sh",
            "hackedit.vendor.pyqode.rst.widgets",
            "hackedit.vendor.pyqode.rst.widgets.code_edit",
            "hackedit.vendor.qcrash",
            "hackedit.vendor.qcrash._dialogs",
            "hackedit.vendor.qcrash._dialogs.gh_login",
            "hackedit.vendor.qcrash._dialogs.report",
            "hackedit.vendor.qcrash._dialogs.review",
            "hackedit.vendor.qcrash._extlibs",
            "hackedit.vendor.qcrash._extlibs.github",
            "hackedit.vendor.qcrash._forms",
            "hackedit.vendor.qcrash._forms.dlg_github_login_ui",
            "hackedit.vendor.qcrash._forms.dlg_report_bug_ui",
            "hackedit.vendor.qcrash._forms.dlg_review_ui",
            "hackedit.vendor.qcrash._forms.qcrash_rc",
            "hackedit.vendor.qcrash._hooks",
            "hackedit.vendor.qcrash.api",
            "hackedit.vendor.qcrash.backends",
            "hackedit.vendor.qcrash.backends.base",
            "hackedit.vendor.qcrash.backends.email",
            "hackedit.vendor.qcrash.backends.github",
            "hackedit.vendor.qcrash.formatters",
            "hackedit.vendor.qcrash.formatters.base",
            "hackedit.vendor.qcrash.formatters.email",
            "hackedit.vendor.qcrash.formatters.markdown",
            "hackedit.vendor.qcrash.qt",
            "hackedit.vendor.qdarkstyle",
            "hackedit.vendor.qdarkstyle.compile_qrc",
            "hackedit.vendor.qdarkstyle.pyqt5_style_rc",
            "hackedit.vendor.qdarkstyle.pyqt_style_rc",
            "hackedit.vendor.qdarkstyle.pyside_style_rc",
            "hackedit.vendor.restructuredtext_lint",
            "hackedit.vendor.restructuredtext_lint.cli",
            "hackedit.vendor.restructuredtext_lint.lint",
            "hackedit.vendor.restructuredtext_lint.test",
            "hackedit.vendor.restructuredtext_lint.test.test",
            "my_package",
            "test_api",
            "test_api.test__shared",
            "test_api.test_editor",
            "test_api.test_events",
            "test_api.test_gettext",
            "test_api.test_index",
            "test_api.test_interpreters",
            "test_api.test_plugins",
            "test_api.test_project",
            "test_api.test_shortcuts",
            "test_api.test_signals",
            "test_api.test_special_icons",
            "test_api.test_system",
            "test_api.test_tasks",
            "test_api.test_utils",
            "test_api.test_versions",
            "test_api.test_widgets",
            "test_api.test_window",
            "test_app",
            "test_app.test_index",
            "test_app.test_index.test_backend",
            "test_app.test_index.test_db",
            "test_app.test_templates"
        ],
        "version": "1.0a2"
    },
    "hackedit-cobol": {
        "cmdline": [],
        "modules": [
            "hackedit_cobol",
            "hackedit_cobol.forms",
            "hackedit_cobol.forms.dlg_check_compiler_ui",
            "hackedit_cobol.forms.dlg_configure_project_ui",
            "hackedit_cobol.forms.dlg_dbpre_ui",
            "hackedit_cobol.forms.dlg_monospace_output_ui",
            "hackedit_cobol.forms.dlg_secondary_compilers_ui",
            "hackedit_cobol.forms.hackedit_cobol_rc",
            "hackedit_cobol.forms.preferences_editor_ui",
            "hackedit_cobol.forms.settings_page_compiler_ui",
            "hackedit_cobol.forms.settings_page_preparsers_ui",
            "hackedit_cobol.lib",
            "hackedit_cobol.lib.build_thread",
            "hackedit_cobol.lib.compiler",
            "hackedit_cobol.lib.dbpre",
            "hackedit_cobol.lib.dlg_check_compiler",
            "hackedit_cobol.lib.dlg_configure",
            "hackedit_cobol.lib.esql",
            "hackedit_cobol.lib.events",
            "hackedit_cobol.lib.linter",
            "hackedit_cobol.lib.manager_plugin_base",
            "hackedit_cobol.lib.msvc",
            "hackedit_cobol.lib.preparsers",
            "hackedit_cobol.lib.utils",
            "hackedit_cobol.plugins",
            "hackedit_cobol.plugins.compiler_preferences",
            "hackedit_cobol.plugins.editor",
            "hackedit_cobol.plugins.file_mode",
            "hackedit_cobol.plugins.icon_provider",
            "hackedit_cobol.plugins.index",
            "hackedit_cobol.plugins.indicators",
            "hackedit_cobol.plugins.offset",
            "hackedit_cobol.plugins.preparsers_preferences",
            "hackedit_cobol.plugins.project_mode",
            "hackedit_cobol.plugins.templates",
            "hackedit_cobol.plugins.workspaces",
            "hackedit_cobol.pyqode_cobol_server"
        ],
        "version": "1.0a2"
    },
    "hackedit-python": {
        "cmdline": [],
        "modules": [
            "@package@",
            "hackedit_python",
            "hackedit_python.add_import",
            "hackedit_python.clean_pyc",
            "hackedit_python.context_menus",
            "hackedit_python.editor",
            "hackedit_python.forms",
            "hackedit_python.forms.dlg_create_virtualenv_ui",
            "hackedit_python.forms.dlg_edit_breakpoints_ui",
            "hackedit_python.forms.dlg_rope_rename_ui",
            "hackedit_python.forms.hackedit_python_rc",
            "hackedit_python.forms.settings_page_editor_ui",
            "hackedit_python.forms.settings_page_interpreters_ui",
            "hackedit_python.index",
            "hackedit_python.interpreters",
            "hackedit_python.open_module",
            "hackedit_python.pyconsole",
            "hackedit_python.pyqode_server",
            "hackedit_python.refactor",
            "hackedit_python.run",
            "hackedit_python.system",
            "hackedit_python.templates",
            "hackedit_python.vendor",
            "hackedit_python.vendor.rope",
            "hackedit_python.vendor.rope.base",
            "hackedit_python.vendor.rope.base.arguments",
            "hackedit_python.vendor.rope.base.ast",
            "hackedit_python.vendor.rope.base.astutils",
            "hackedit_python.vendor.rope.base.builtins",
            "hackedit_python.vendor.rope.base.change",
            "hackedit_python.vendor.rope.base.codeanalyze",
            "hackedit_python.vendor.rope.base.default_config",
            "hackedit_python.vendor.rope.base.evaluate",
            "hackedit_python.vendor.rope.base.exceptions",
            "hackedit_python.vendor.rope.base.fscommands",
            "hackedit_python.vendor.rope.base.history",
            "hackedit_python.vendor.rope.base.libutils",
            "hackedit_python.vendor.rope.base.oi",
            "hackedit_python.vendor.rope.base.oi.doa",
            "hackedit_python.vendor.rope.base.oi.docstrings",
            "hackedit_python.vendor.rope.base.oi.memorydb",
            "hackedit_python.vendor.rope.base.oi.objectdb",
            "hackedit_python.vendor.rope.base.oi.objectinfo",
            "hackedit_python.vendor.rope.base.oi.runmod",
            "hackedit_python.vendor.rope.base.oi.soa",
            "hackedit_python.vendor.rope.base.oi.soi",
            "hackedit_python.vendor.rope.base.oi.transform",
            "hackedit_python.vendor.rope.base.prefs",
            "hackedit_python.vendor.rope.base.project",
            "hackedit_python.vendor.rope.base.pycore",
            "hackedit_python.vendor.rope.base.pynames",
            "hackedit_python.vendor.rope.base.pynamesdef",
            "hackedit_python.vendor.rope.base.pyobjects",
            "hackedit_python.vendor.rope.base.pyobjectsdef",
            "hackedit_python.vendor.rope.base.pyscopes",
            "hackedit_python.vendor.rope.base.resourceobserver",
            "hackedit_python.vendor.rope.base.resources",
            "hackedit_python.vendor.rope.base.simplify",
            "hackedit_python.vendor.rope.base.stdmods",
            "hackedit_python.vendor.rope.base.taskhandle",
            "hackedit_python.vendor.rope.base.utils",
            "hackedit_python.vendor.rope.base.utils.datastructures",
            "hackedit_python.vendor.rope.base.utils.pycompat",
            "hackedit_python.vendor.rope.base.worder",
            "hackedit_python.vendor.rope.contrib",
            "hackedit_python.vendor.rope.contrib.autoimport",
            "hackedit_python.vendor.rope.contrib.changestack",
            "hackedit_python.vendor.rope.contrib.codeassist",
            "hackedit_python.vendor.rope.contrib.finderrors",
            "hackedit_python.vendor.rope.contrib.findit",
            "hackedit_python.vendor.rope.contrib.fixmodnames",
            "hackedit_python.vendor.rope.contrib.fixsyntax",
            "hackedit_python.vendor.rope.contrib.generate",
            "hackedit_python.vendor.rope.refactor",
            "hackedit_python.vendor.rope.refactor.change_signature",
            "hackedit_python.vendor.rope.refactor.encapsulate_field",
            "hackedit_python.vendor.rope.refactor.extract",
            "hackedit_python.vendor.rope.refactor.functionutils",
            "hackedit_python.vendor.rope.refactor.importutils",
            "hackedit_python.vendor.rope.refactor.importutils.actions",
            "hackedit_python.vendor.rope.refactor.importutils.importinfo",
            "hackedit_python.vendor.rope.refactor.importutils.module_imports",
            "hackedit_python.vendor.rope.refactor.inline",
            "hackedit_python.vendor.rope.refactor.introduce_factory",
            "hackedit_python.vendor.rope.refactor.introduce_parameter",
            "hackedit_python.vendor.rope.refactor.localtofield",
            "hackedit_python.vendor.rope.refactor.method_object",
            "hackedit_python.vendor.rope.refactor.move",
            "hackedit_python.vendor.rope.refactor.multiproject",
            "hackedit_python.vendor.rope.refactor.occurrences",
            "hackedit_python.vendor.rope.refactor.patchedast",
            "hackedit_python.vendor.rope.refactor.rename",
            "hackedit_python.vendor.rope.refactor.restructure",
            "hackedit_python.vendor.rope.refactor.similarfinder",
            "hackedit_python.vendor.rope.refactor.sourceutils",
            "hackedit_python.vendor.rope.refactor.suites",
            "hackedit_python.vendor.rope.refactor.topackage",
            "hackedit_python.vendor.rope.refactor.usefunction",
            "hackedit_python.vendor.rope.refactor.wildcards",
            "hackedit_python.vendor.virtualenv",
            "hackedit_python.workspaces"
        ],
        "version": "1.0a2"
    },
    "hacker": {
        "cmdline": [],
        "modules": [
            "hackernews",
            "hackernews.settings",
            "tests",
            "tests.test_api_verison",
            "tests.test_ask_stories",
            "tests.test_get_item",
            "tests.test_get_max_item",
            "tests.test_get_user",
            "tests.test_job_stories",
            "tests.test_new_stories",
            "tests.test_show_stories",
            "tests.test_top_stories",
            "tests.test_updates"
        ],
        "version": "0.3.1"
    },
    "hacker-news": {
        "cmdline": [],
        "modules": [
            "hn",
            "hn.hn",
            "hn.post",
            "hn.user"
        ],
        "version": "2.1.4"
    },
    "hacker-top": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "hackercafe": {
        "cmdline": [],
        "modules": [
            "hackercafe",
            "hackercafe.main"
        ],
        "version": "1.0.1"
    },
    "hackercodecs": {
        "cmdline": [],
        "modules": [
            "hackercodecs"
        ],
        "version": "0.3"
    },
    "hackerearth-box": {
        "cmdline": [],
        "modules": [
            "hackerearth_box",
            "hackerearth_box.config_parser",
            "hackerearth_box.exceptions",
            "hackerearth_box.install",
            "hackerearth_box.utils"
        ],
        "version": "0.2.1"
    },
    "hackernews": {
        "cmdline": [],
        "modules": [
            "hn",
            "hn.constants",
            "hn.hn",
            "hn.utils",
            "tests",
            "tests.test_leaders",
            "tests.test_pagination",
            "tests.test_stories_dict_structure",
            "tests.test_story_class",
            "tests.test_story_fromid",
            "tests.test_story_get_comments",
            "tests.test_utils"
        ],
        "version": "2.0.0"
    },
    "hackernews-cli": {
        "cmdline": [],
        "modules": [
            "hncli",
            "hncli._version",
            "hncli.cli",
            "hncli.config"
        ],
        "version": "0.0.1.post5"
    },
    "hackernews-python": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.2"
    },
    "hackernews-scraper": {
        "cmdline": [],
        "modules": [
            "hackernews_scraper",
            "hackernews_scraper.endpoints",
            "hackernews_scraper.hnscraper",
            "hackernews_scraper.test",
            "hackernews_scraper.test.basetestcase",
            "hackernews_scraper.test.factories",
            "hackernews_scraper.test.test_comment_scraper",
            "hackernews_scraper.test.test_scraper",
            "hackernews_scraper.test.test_story_scraper"
        ],
        "version": "1.0.2"
    },
    "hackernewsapi": {
        "cmdline": [],
        "modules": [
            "HackerNewsAPI",
            "HackerNewsAPI.API",
            "HackerNewsAPI.utils"
        ],
        "version": "0.1.1"
    },
    "hackerrank": {
        "cmdline": [],
        "modules": [
            "hackerrank",
            "hackerrank.hackerrank"
        ],
        "version": "0.1"
    },
    "hackerrank-sdk": {
        "cmdline": [],
        "modules": [
            "hackerrank",
            "hackerrank.HackerRankAPI",
            "hackerrank.testing"
        ],
        "version": "1.2.2"
    },
    "hackersh": {
        "cmdline": [
            "hackersh"
        ],
        "modules": [
            "hackersh",
            "hackersh._ordereddict",
            "hackersh._version",
            "hackersh.components",
            "hackersh.components.external",
            "hackersh.components.external.amap",
            "hackersh.components.external.dnsdict6",
            "hackersh.components.external.nbtscan",
            "hackersh.components.external.nikto",
            "hackersh.components.external.nmap",
            "hackersh.components.external.ping",
            "hackersh.components.external.sqlmap",
            "hackersh.components.external.w3af",
            "hackersh.components.external.xprobe2",
            "hackersh.components.internal",
            "hackersh.components.internal.browse",
            "hackersh.components.internal.domain",
            "hackersh.components.internal.hostname",
            "hackersh.components.internal.ipv4_address",
            "hackersh.components.internal.ipv4_range",
            "hackersh.components.internal.ipv6_address",
            "hackersh.components.internal.iterate_links",
            "hackersh.components.internal.nslookup",
            "hackersh.components.internal.submit",
            "hackersh.components.internal.url",
            "hackersh.components.system",
            "hackersh.components.system.alert",
            "hackersh.components.system.null",
            "hackersh.components.system.print",
            "hackersh.components.system.system",
            "hackersh.components.system.tmpfile",
            "hackersh.conio",
            "hackersh.exceptions",
            "hackersh.log",
            "hackersh.miscellaneous",
            "hackersh.objects"
        ],
        "version": "0.2.0"
    },
    "hackerspacepi": {
        "cmdline": [],
        "modules": [
            "hackerspacepi"
        ],
        "version": "0.1.9"
    },
    "hackertray": {
        "cmdline": [],
        "modules": [
            "hackertray",
            "hackertray.analytics",
            "hackertray.appindicator_replacement",
            "hackertray.chrome",
            "hackertray.data",
            "hackertray.firefox",
            "hackertray.hackernews",
            "hackertray.version"
        ],
        "version": "3.0.0"
    },
    "hackery": {
        "cmdline": [],
        "modules": [
            "hackery",
            "hackery.backend",
            "hackery.hack",
            "hackery.redis_backend",
            "hackery.version_hack"
        ],
        "version": "0.0.8"
    },
    "hackhttp": {
        "cmdline": [],
        "modules": [
            "hackhttp",
            "hackhttp.hackhttp"
        ],
        "version": "1.0.4"
    },
    "hacking": {
        "cmdline": [],
        "modules": [
            "hacking",
            "hacking.checks",
            "hacking.checks.comments",
            "hacking.checks.dictlist",
            "hacking.checks.docstrings",
            "hacking.checks.except_checks",
            "hacking.checks.imports",
            "hacking.checks.localization",
            "hacking.checks.other",
            "hacking.checks.python23",
            "hacking.checks.vim_check",
            "hacking.config",
            "hacking.core",
            "hacking.tests",
            "hacking.tests.checks",
            "hacking.tests.checks.test_comments",
            "hacking.tests.test_config",
            "hacking.tests.test_doctest",
            "hacking.tests.test_import_exceptions",
            "hacking.tests.test_local"
        ],
        "version": "0.13.0"
    },
    "hacklib": {
        "cmdline": [],
        "modules": [
            "hacklib",
            "hacklib.hacklib"
        ],
        "version": "0.1.6"
    },
    "hackman": {
        "cmdline": [
            "event.py"
        ],
        "modules": [
            "hackman",
            "hackman.config_manager",
            "hackman.json_not_found_exception",
            "hackman.logger",
            "hackman.redis_exception",
            "hackman.worker"
        ],
        "version": "0.5"
    },
    "hackmanager": {
        "cmdline": [],
        "modules": [
            "hackManager",
            "hackManager.hack",
            "hackManager.test"
        ],
        "version": "2.4.0"
    },
    "hacks": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.12"
    },
    "hackthederivative": {
        "cmdline": [],
        "modules": [
            "hackthederivative"
        ],
        "version": "0.0.1"
    },
    "hackulus": {
        "cmdline": [
            "hackulus"
        ],
        "modules": [
            "hackulus",
            "hackulus.config",
            "hackulus.models",
            "hackulus.start",
            "hackulus.utils"
        ],
        "version": "0.0.3"
    },
    "hackwrench": {
        "cmdline": [],
        "modules": [
            "hackwrench",
            "hackwrench.browser",
            "hackwrench.conf",
            "hackwrench.db",
            "hackwrench.ext",
            "hackwrench.extensions",
            "hackwrench.extensions.download",
            "hackwrench.extensions.greasemonkey",
            "hackwrench.extensions.open_all_links",
            "hackwrench.gui",
            "hackwrench.inspector",
            "hackwrench.nprefs",
            "hackwrench.plugins",
            "hackwrench.session",
            "hackwrench.sq",
            "hackwrench.status",
            "hackwrench.webkit_evaljs"
        ],
        "version": "0.2"
    },
    "hacky": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "hacs": {
        "cmdline": [],
        "modules": [
            "hacs",
            "hacs.admin",
            "hacs.apps",
            "hacs.defaults",
            "hacs.django_utils_version",
            "hacs.fields",
            "hacs.globals",
            "hacs.lru_wrapped",
            "hacs.management",
            "hacs.management.commands",
            "hacs.management.commands.export_routes",
            "hacs.management.commands.import_routes",
            "hacs.middleware",
            "hacs.migrations",
            "hacs.migrations.0001_initial",
            "hacs.models",
            "hacs.tests",
            "hacs.tests.test_management_export_routes",
            "hacs.tests.test_management_import_routes",
            "hacs.tests.test_middleware",
            "hacs.tests.test_utils",
            "hacs.urls",
            "hacs.utils",
            "hacs.views",
            "hacs.views.errors"
        ],
        "version": "1.0a1"
    },
    "hadapi": {
        "cmdline": [],
        "modules": [
            "hadapi",
            "hadapi.model_runtime",
            "hadapi.service"
        ],
        "version": "1.0.30"
    },
    "haddock": {
        "cmdline": [],
        "modules": [
            "haddock",
            "haddock.api",
            "haddock.auth",
            "haddock.test",
            "haddock.test.requestMock",
            "haddock.test.test_api",
            "haddock.test.test_auth"
        ],
        "version": "0.6.0"
    },
    "hades": {
        "cmdline": [],
        "modules": [
            "hades",
            "hades.hades"
        ],
        "version": "0.2.0"
    },
    "hadmlservices": {
        "cmdline": [],
        "modules": [
            "hadmlservices",
            "hadmlservices.callbacks",
            "hadmlservices.service"
        ],
        "version": "1.0.23"
    },
    "hadoop-inspector": {
        "cmdline": [],
        "modules": [
            "hadoopinspector",
            "hadoopinspector._version",
            "hadoopinspector.check_results",
            "hadoopinspector.check_runner",
            "hadoopinspector.core",
            "hadoopinspector.registry",
            "hadoopinspector.tests",
            "hadoopinspector.tests.test_check_results",
            "hadoopinspector.tests.test_check_runner",
            "hadoopinspector.tests.test_check_vars",
            "hadoopinspector.tests.test_core",
            "hadoopinspector.tests.test_registry",
            "hadoopinspector.tests.test_tooling",
            "prod",
            "prod._version",
            "prod.check_results",
            "prod.check_runner",
            "prod.core",
            "prod.hadoopinspector_runner",
            "prod.registry"
        ],
        "version": "0.1.6"
    },
    "hadoop-manager": {
        "cmdline": [],
        "modules": [
            "hdpmanager",
            "hdpmanager.combiner",
            "hdpmanager.counter",
            "hdpmanager.hdpenv",
            "hdpmanager.hdpfs",
            "hdpmanager.hdpjob",
            "hdpmanager.hdpmanager",
            "hdpmanager.mapper",
            "hdpmanager.protocol",
            "hdpmanager.reducer",
            "hdpmanager.streamer"
        ],
        "version": "0.0.4"
    },
    "hadoop-mock": {
        "cmdline": [],
        "modules": [
            "hadoop_mock",
            "hadoop_mock.hadoop_mock",
            "hadoop_mock.hadoop_ssh"
        ],
        "version": "0.1"
    },
    "hadoopcalculator": {
        "cmdline": [
            "hadoop_calculator"
        ],
        "modules": [
            "hadoopcalculator",
            "hadoopcalculator.hadoop_calculator"
        ],
        "version": "1.0"
    },
    "hadoopy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hadrian": {
        "cmdline": [],
        "modules": [
            "hadrian",
            "hadrian.conf",
            "hadrian.conf.fab",
            "hadrian.contrib",
            "hadrian.contrib.auth",
            "hadrian.contrib.auth.decorators",
            "hadrian.contrib.auth.templatetags",
            "hadrian.contrib.auth.templatetags.group_tags",
            "hadrian.contrib.google",
            "hadrian.contrib.gravatar",
            "hadrian.contrib.gravatar.templatetags",
            "hadrian.contrib.gravatar.templatetags.gravatar_tags",
            "hadrian.contrib.pagination",
            "hadrian.contrib.pagination.templatetags",
            "hadrian.contrib.pagination.templatetags.pagination"
        ],
        "version": "2.0"
    },
    "hadroid": {
        "cmdline": [],
        "modules": [
            "hadroid",
            "hadroid.bot",
            "hadroid.botctl",
            "hadroid.client",
            "hadroid.config",
            "hadroid.docopt2",
            "hadroid.modules",
            "hadroid.modules.base",
            "hadroid.modules.coffee",
            "hadroid.modules.cron",
            "hadroid.modules.menu"
        ],
        "version": "0.1.0"
    },
    "haeul001": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haeul002": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haeul003": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haeul01": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hagelslag": {
        "cmdline": [],
        "modules": [
            "hagelslag",
            "hagelslag.data",
            "hagelslag.data.MRMSGrid",
            "hagelslag.data.ModelGrid",
            "hagelslag.data.ModelOutput",
            "hagelslag.data.NCARModelGrid",
            "hagelslag.data.SSEFModelGrid",
            "hagelslag.evaluation",
            "hagelslag.evaluation.ContingencyTable",
            "hagelslag.evaluation.GridEvaluator",
            "hagelslag.evaluation.MetricPlotter",
            "hagelslag.evaluation.MulticlassContingencyTable",
            "hagelslag.evaluation.NeighborEvaluator",
            "hagelslag.evaluation.ObjectEvaluator",
            "hagelslag.evaluation.ProbabilityMetrics",
            "hagelslag.processing",
            "hagelslag.processing.EnhancedWatershedSegmenter",
            "hagelslag.processing.EnsembleProducts",
            "hagelslag.processing.Hysteresis",
            "hagelslag.processing.ObjectMatcher",
            "hagelslag.processing.STObject",
            "hagelslag.processing.TrackModeler",
            "hagelslag.processing.TrackProcessing",
            "hagelslag.processing.TrackSampler",
            "hagelslag.util",
            "hagelslag.util.Config",
            "hagelslag.util.convert_mrms_grids",
            "hagelslag.util.make_proj_grids",
            "hagelslag.util.munkres",
            "hagelslag.util.output_tree_ensembles",
            "hagelslag.util.show_importance_ranks"
        ],
        "version": "0.2"
    },
    "hagraph": {
        "cmdline": [],
        "modules": [
            "hagraph"
        ],
        "version": "1.0.3"
    },
    "haha": {
        "cmdline": [],
        "modules": [
            "haha"
        ],
        "version": "100.0.0"
    },
    "hahariri-nester": {
        "cmdline": [],
        "modules": [
            "hahariri_nester"
        ],
        "version": "1.22.0"
    },
    "hahatest": {
        "cmdline": [],
        "modules": [
            "hahatest"
        ],
        "version": "0.0.6"
    },
    "haibo": {
        "cmdline": [],
        "modules": [
            "haibo",
            "haibo.data2html",
            "haibo.log",
            "haibo.setcolor"
        ],
        "version": "0.1.2"
    },
    "haigha": {
        "cmdline": [],
        "modules": [
            "haigha",
            "haigha.channel",
            "haigha.channel_pool",
            "haigha.classes",
            "haigha.classes.basic_class",
            "haigha.classes.channel_class",
            "haigha.classes.exchange_class",
            "haigha.classes.protocol_class",
            "haigha.classes.queue_class",
            "haigha.classes.transaction_class",
            "haigha.connection",
            "haigha.connections",
            "haigha.connections.rabbit_connection",
            "haigha.exceptions",
            "haigha.frames",
            "haigha.frames.content_frame",
            "haigha.frames.frame",
            "haigha.frames.header_frame",
            "haigha.frames.heartbeat_frame",
            "haigha.frames.method_frame",
            "haigha.message",
            "haigha.reader",
            "haigha.transports",
            "haigha.transports.event_transport",
            "haigha.transports.gevent_transport",
            "haigha.transports.socket_transport",
            "haigha.transports.transport",
            "haigha.writer"
        ],
        "version": "0.9.0"
    },
    "haii": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "haiku": {
        "cmdline": [],
        "modules": [],
        "version": "0.01"
    },
    "haiku-errors": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.0"
    },
    "haiku-lang": {
        "cmdline": [],
        "modules": [
            "haiku",
            "haiku.builtin",
            "haiku.builtin.base64_",
            "haiku.builtin.base64___test",
            "haiku.builtin.constant",
            "haiku.builtin.operator_",
            "haiku.builtin.pickle",
            "haiku.builtin.quote",
            "haiku.builtin.string_",
            "haiku.builtin.types",
            "haiku.environment",
            "haiku.interpreter",
            "haiku.interpreter.base",
            "haiku.pickle",
            "haiku.pickle.base",
            "haiku.pickle.canonical",
            "haiku.pickle.canonical__test",
            "haiku.pickle.meta",
            "haiku.pickle.simple",
            "haiku.pickle.simple__test",
            "haiku.shell",
            "haiku.types",
            "haiku.types.alpha",
            "haiku.types.boolean",
            "haiku.types.fraction",
            "haiku.types.integer",
            "haiku.types.matrix",
            "haiku.types.omega",
            "haiku.types.procedure",
            "haiku.types.relation",
            "haiku.types.sequence",
            "haiku.types.set_",
            "haiku.types.symbol",
            "haiku.types.tuple_",
            "haiku.types.unicode_",
            "haiku.utils",
            "haiku.utils.frozendict",
            "haiku.utils.serialization",
            "haiku.utils.testing"
        ],
        "version": "0.0.7"
    },
    "haikunator": {
        "cmdline": [],
        "modules": [
            "haikunator",
            "haikunator.haikunator",
            "haikunator.tests"
        ],
        "version": "2.1.0"
    },
    "hailstone": {
        "cmdline": [],
        "modules": [
            "hailstone"
        ],
        "version": "1.0.0"
    },
    "hailstorm": {
        "cmdline": [],
        "modules": [
            "hailstorm",
            "hailstorm.escape",
            "hailstorm.template",
            "hailstorm.util"
        ],
        "version": "1.0.0"
    },
    "hairball": {
        "cmdline": [],
        "modules": [
            "hairball",
            "hairball.plugins",
            "hairball.plugins.blocks",
            "hairball.plugins.checks",
            "hairball.plugins.convention",
            "hairball.plugins.duplicate",
            "hairball.plugins.initialization"
        ],
        "version": "0.3"
    },
    "haishoku": {
        "cmdline": [],
        "modules": [
            "haishoku",
            "haishoku.alg",
            "haishoku.haillow",
            "haishoku.haishoku"
        ],
        "version": "1.1.1"
    },
    "hakim-nester": {
        "cmdline": [],
        "modules": [
            "hakim_nester"
        ],
        "version": "1.4.0"
    },
    "hakmatak": {
        "cmdline": [
            "hakmatakread",
            "hakmatakwrite"
        ],
        "modules": [
            "hakmatak",
            "hakmatak.cache",
            "hakmatak.constant",
            "hakmatak.d11n",
            "hakmatak.identifier",
            "hakmatak.leaf",
            "hakmatak.node",
            "hakmatak.w10n",
            "hakmatak.worker4r",
            "hakmatak.worker4w",
            "hakmatak/cli",
            "hakmatak/cli.read",
            "hakmatak/cli.write",
            "hakmatak/output",
            "hakmatak/output.factory",
            "hakmatak/output.json",
            "hakmatak/output.raw",
            "hakmatak/output.writer",
            "hakmatak/output/html",
            "hakmatak/output/html.dirlist",
            "hakmatak/store",
            "hakmatak/store/read",
            "hakmatak/store/read.bytearray",
            "hakmatak/store/read.factory",
            "hakmatak/store/read.reader",
            "hakmatak/store/read/example",
            "hakmatak/store/read/example.basic",
            "hakmatak/store/write",
            "hakmatak/store/write.factory",
            "hakmatak/store/write.writer",
            "hakmatak/util",
            "hakmatak/util.magic",
            "hakmatak/wsgi",
            "hakmatak/wsgi.index",
            "hakmatak/wsgi.webify",
            "hakmatak/wsgi.webread",
            "hakmatak/wsgi.webwrite"
        ],
        "version": "1.1.2"
    },
    "hal": {
        "cmdline": [],
        "modules": [
            "HAL",
            "HAL.HAL",
            "HAL.context",
            "HAL.dbtest",
            "HAL.engine",
            "HAL.engine.base",
            "HAL.engine.general",
            "HAL.engine.generic",
            "HAL.engine.matrix",
            "HAL.engine.oneword",
            "HAL.engine.plugin",
            "HAL.engine.regex",
            "HAL.mainentry",
            "HAL.spam",
            "HAL.string",
            "HAL.tkgui"
        ],
        "version": "0.0.3"
    },
    "hal-assistant": {
        "cmdline": [],
        "modules": [
            "hal",
            "hal.hal",
            "hal.library",
            "hal.version"
        ],
        "version": "0.3"
    },
    "hal-codec": {
        "cmdline": [],
        "modules": [
            "hal_codec"
        ],
        "version": "1.0.2"
    },
    "hal-json": {
        "cmdline": [],
        "modules": [
            "hal"
        ],
        "version": "0.1"
    },
    "hal-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "halb": {
        "cmdline": [
            "lbtool"
        ],
        "modules": [
            "halb",
            "halb.halb"
        ],
        "version": "0.1.5"
    },
    "halberd": {
        "cmdline": [
            "halberd"
        ],
        "modules": [
            "Halberd",
            "Halberd.ScanTask",
            "Halberd.clientlib",
            "Halberd.clues",
            "Halberd.clues.Clue",
            "Halberd.clues.analysis",
            "Halberd.clues.file",
            "Halberd.conflib",
            "Halberd.crew",
            "Halberd.logger",
            "Halberd.reportlib",
            "Halberd.shell",
            "Halberd.util",
            "Halberd.version"
        ],
        "version": "0.2.4"
    },
    "halcon": {
        "cmdline": [],
        "modules": [
            "halcon",
            "halcon.search"
        ],
        "version": "0.0.21"
    },
    "halcyon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haleasy": {
        "cmdline": [],
        "modules": [
            "haleasy"
        ],
        "version": "0.4.3"
    },
    "halef-setu": {
        "cmdline": [],
        "modules": [
            "halef_setu",
            "halef_setu.features",
            "halef_setu.models",
            "halef_setu_api",
            "halef_setu_api.views"
        ],
        "version": "0.0.5"
    },
    "halfnarp": {
        "cmdline": [],
        "modules": [
            "backrest",
            "backrest.commands",
            "backrest.models",
            "backrest.testing",
            "backrest.views"
        ],
        "version": "1.0.0"
    },
    "halfpipe": {
        "cmdline": [],
        "modules": [
            "halfpipe",
            "halfpipe.functional"
        ],
        "version": "0.4"
    },
    "halide": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "halimun": {
        "cmdline": [],
        "modules": [
            "halimun"
        ],
        "version": "0.1.1"
    },
    "halite": {
        "cmdline": [],
        "modules": [
            "halite",
            "halite.aiding",
            "halite.bottle",
            "halite.genindex",
            "halite.server_bottle",
            "halite.test",
            "halite.test.functional",
            "halite.test.functional.config_helper",
            "halite.test.functional.halite_functional_tests"
        ],
        "version": "0.1.17"
    },
    "hall-cond": {
        "cmdline": [],
        "modules": [
            "hall_cond",
            "hall_cond.hall_conductivity",
            "hall_cond.ifinsu"
        ],
        "version": "0.1.0"
    },
    "halla": {
        "cmdline": [],
        "modules": [
            "halla",
            "halla.config",
            "halla.distance",
            "halla.halla",
            "halla.hallaclust",
            "halla.hallagram",
            "halla.hierarchy",
            "halla.logger",
            "halla.parser",
            "halla.plot",
            "halla.stats",
            "halla.store",
            "halla.synthetic_data",
            "halla.tests",
            "halla.tests.advanced_tests_distance",
            "halla.tests.basic_tests_stats",
            "halla.tests.halla_test"
        ],
        "version": "0.7.14"
    },
    "hallgrim": {
        "cmdline": [],
        "modules": [
            "hallgrim",
            "hallgrim.IliasXMLCreator",
            "hallgrim.IliasXMLCreator.gap",
            "hallgrim.IliasXMLCreator.multi",
            "hallgrim.IliasXMLCreator.order",
            "hallgrim.IliasXMLCreator.packer",
            "hallgrim.IliasXMLCreator.single",
            "hallgrim.IliasXMLCreator.xmlBuildingBlocks",
            "hallgrim.MultipartEncoder",
            "hallgrim.custom_markdown",
            "hallgrim.hallgrim",
            "hallgrim.messages",
            "hallgrim.parser",
            "hallgrim.templates",
            "hallgrim.uploader"
        ],
        "version": "0.3.7"
    },
    "hallie": {
        "cmdline": [],
        "modules": [
            "hallie",
            "hallie.hallie",
            "hallie.modules",
            "hallie.modules.browser",
            "hallie.modules.files",
            "hallie.modules.install",
            "hallie.modules.itunes",
            "hallie.modules.settings",
            "hallie.modules.speech",
            "hallie.modules.user",
            "tests",
            "tests.test_hallie"
        ],
        "version": "0.1.1"
    },
    "hallo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hallucination": {
        "cmdline": [],
        "modules": [
            "hallucination",
            "hallucination.models"
        ],
        "version": "0.2.16"
    },
    "halo5.py": {
        "cmdline": [],
        "modules": [
            "halo5",
            "halo5.base",
            "halo5.client",
            "halo5.entity",
            "halo5.metadata",
            "halo5.profile",
            "halo5.stats",
            "halo5.tests",
            "halo5.tests.test_all",
            "halo5.ugc"
        ],
        "version": "0.3.0"
    },
    "halogen": {
        "cmdline": [],
        "modules": [
            "halogen",
            "halogen.exceptions",
            "halogen.schema",
            "halogen.types",
            "halogen.validators"
        ],
        "version": "1.3.2"
    },
    "halonadm": {
        "cmdline": [],
        "modules": [
            "halonadm",
            "halonadm.halonadm"
        ],
        "version": "1.0.0"
    },
    "halonctl": {
        "cmdline": [],
        "modules": [
            "halonctl",
            "halonctl.cache",
            "halonctl.config",
            "halonctl.debug",
            "halonctl.formatters",
            "halonctl.formatters.csv_",
            "halonctl.formatters.json_",
            "halonctl.formatters.table",
            "halonctl.modapi",
            "halonctl.models",
            "halonctl.modules",
            "halonctl.modules.cmd",
            "halonctl.modules.hsl",
            "halonctl.modules.keyring_",
            "halonctl.modules.postfix",
            "halonctl.modules.query",
            "halonctl.modules.shell",
            "halonctl.modules.stat",
            "halonctl.modules.status",
            "halonctl.modules.update",
            "halonctl.proxies",
            "halonctl.roles",
            "halonctl.util"
        ],
        "version": "1.4.0"
    },
    "halopy": {
        "cmdline": [],
        "modules": [
            "halopy"
        ],
        "version": "1.1"
    },
    "halotoolkit": {
        "cmdline": [],
        "modules": [
            "halotoolkit",
            "halotoolkit.halo",
            "halotoolkit.htk_functions",
            "halotoolkit.htk_options"
        ],
        "version": "0.1.6"
    },
    "halotools": {
        "cmdline": [],
        "modules": [
            "astropy_helpers",
            "astropy_helpers.commands",
            "astropy_helpers.commands._dummy",
            "astropy_helpers.commands._test_compat",
            "astropy_helpers.commands.build_ext",
            "astropy_helpers.commands.build_py",
            "astropy_helpers.commands.build_sphinx",
            "astropy_helpers.commands.install",
            "astropy_helpers.commands.install_lib",
            "astropy_helpers.commands.register",
            "astropy_helpers.commands.setup_package",
            "astropy_helpers.commands.test",
            "astropy_helpers.compat",
            "astropy_helpers.compat._subprocess_py2",
            "astropy_helpers.compat.subprocess",
            "astropy_helpers.distutils_helpers",
            "astropy_helpers.git_helpers",
            "astropy_helpers.setup_helpers",
            "astropy_helpers.sphinx",
            "astropy_helpers.sphinx.conf",
            "astropy_helpers.sphinx.ext",
            "astropy_helpers.sphinx.ext.astropyautosummary",
            "astropy_helpers.sphinx.ext.autodoc_enhancements",
            "astropy_helpers.sphinx.ext.automodapi",
            "astropy_helpers.sphinx.ext.automodsumm",
            "astropy_helpers.sphinx.ext.changelog_links",
            "astropy_helpers.sphinx.ext.comment_eater",
            "astropy_helpers.sphinx.ext.compiler_unparse",
            "astropy_helpers.sphinx.ext.docscrape",
            "astropy_helpers.sphinx.ext.docscrape_sphinx",
            "astropy_helpers.sphinx.ext.doctest",
            "astropy_helpers.sphinx.ext.edit_on_github",
            "astropy_helpers.sphinx.ext.numpydoc",
            "astropy_helpers.sphinx.ext.phantom_import",
            "astropy_helpers.sphinx.ext.smart_resolver",
            "astropy_helpers.sphinx.ext.tests",
            "astropy_helpers.sphinx.ext.tests.test_autodoc_enhancements",
            "astropy_helpers.sphinx.ext.tests.test_automodapi",
            "astropy_helpers.sphinx.ext.tests.test_automodsumm",
            "astropy_helpers.sphinx.ext.tests.test_docscrape",
            "astropy_helpers.sphinx.ext.tests.test_utils",
            "astropy_helpers.sphinx.ext.tocdepthfix",
            "astropy_helpers.sphinx.ext.traitsdoc",
            "astropy_helpers.sphinx.ext.utils",
            "astropy_helpers.sphinx.setup_package",
            "astropy_helpers.test_helpers",
            "astropy_helpers.utils",
            "astropy_helpers.version",
            "astropy_helpers.version_helpers",
            "halotools",
            "halotools._astropy_init",
            "halotools.conftest",
            "halotools.custom_exceptions",
            "halotools.cython_version",
            "halotools.empirical_models",
            "halotools.empirical_models.abunmatch",
            "halotools.empirical_models.abunmatch.conditional_abunmatch",
            "halotools.empirical_models.abunmatch.tests",
            "halotools.empirical_models.abunmatch.tests.test_conditional_abunmatch",
            "halotools.empirical_models.assembias_models",
            "halotools.empirical_models.assembias_models.heaviside_assembias",
            "halotools.empirical_models.assembias_models.tests",
            "halotools.empirical_models.assembias_models.tests.test_assembias",
            "halotools.empirical_models.component_model_templates",
            "halotools.empirical_models.component_model_templates.binary_galprop_models",
            "halotools.empirical_models.component_model_templates.prim_galprop_model",
            "halotools.empirical_models.component_model_templates.scatter_models",
            "halotools.empirical_models.component_model_templates.tests",
            "halotools.empirical_models.component_model_templates.tests.test_binary_galprop_models",
            "halotools.empirical_models.component_model_templates.tests.test_prim_galprop_model",
            "halotools.empirical_models.component_model_templates.tests.test_scatter_models",
            "halotools.empirical_models.composite_models",
            "halotools.empirical_models.composite_models.hod_models",
            "halotools.empirical_models.composite_models.hod_models.cacciato09",
            "halotools.empirical_models.composite_models.hod_models.hearin15",
            "halotools.empirical_models.composite_models.hod_models.leauthaud11",
            "halotools.empirical_models.composite_models.hod_models.tests",
            "halotools.empirical_models.composite_models.hod_models.tests.test_tinker13",
            "halotools.empirical_models.composite_models.hod_models.tests.test_zheng07",
            "halotools.empirical_models.composite_models.hod_models.tests.test_zu_mandelbaum16",
            "halotools.empirical_models.composite_models.hod_models.tinker13",
            "halotools.empirical_models.composite_models.hod_models.zheng07",
            "halotools.empirical_models.composite_models.hod_models.zu_mandelbaum15",
            "halotools.empirical_models.composite_models.hod_models.zu_mandelbaum16",
            "halotools.empirical_models.composite_models.sfr_models",
            "halotools.empirical_models.composite_models.sfr_models.smhm_binary_sfr",
            "halotools.empirical_models.composite_models.smhm_models",
            "halotools.empirical_models.composite_models.smhm_models.behroozi10",
            "halotools.empirical_models.composite_models.tests",
            "halotools.empirical_models.composite_models.tests.test_preloaded_models",
            "halotools.empirical_models.factories",
            "halotools.empirical_models.factories.hod_mock_factory",
            "halotools.empirical_models.factories.hod_model_factory",
            "halotools.empirical_models.factories.mock_factory_template",
            "halotools.empirical_models.factories.mock_helpers",
            "halotools.empirical_models.factories.model_factory_template",
            "halotools.empirical_models.factories.prebuilt_model_factory",
            "halotools.empirical_models.factories.subhalo_mock_factory",
            "halotools.empirical_models.factories.subhalo_model_factory",
            "halotools.empirical_models.factories.tests",
            "halotools.empirical_models.factories.tests.test_clf_support",
            "halotools.empirical_models.factories.tests.test_hod_factory",
            "halotools.empirical_models.factories.tests.test_hod_mock_factory",
            "halotools.empirical_models.factories.tests.test_hod_model_factory",
            "halotools.empirical_models.factories.tests.test_mock_helpers",
            "halotools.empirical_models.factories.tests.test_prebuilt_hod_model_factory",
            "halotools.empirical_models.factories.tests.test_prebuilt_subhalo_model_factory",
            "halotools.empirical_models.factories.tests.test_subhalo_model_factory",
            "halotools.empirical_models.model_defaults",
            "halotools.empirical_models.model_helpers",
            "halotools.empirical_models.occupation_models",
            "halotools.empirical_models.occupation_models.cacciato09_components",
            "halotools.empirical_models.occupation_models.engines",
            "halotools.empirical_models.occupation_models.engines.setup_package",
            "halotools.empirical_models.occupation_models.leauthaud11_components",
            "halotools.empirical_models.occupation_models.occupation_model_template",
            "halotools.empirical_models.occupation_models.tests",
            "halotools.empirical_models.occupation_models.tests.test_cacciato09_clf",
            "halotools.empirical_models.occupation_models.tests.test_leauthaud11_hod",
            "halotools.empirical_models.occupation_models.tests.test_occupation_component",
            "halotools.empirical_models.occupation_models.tests.test_tinker13",
            "halotools.empirical_models.occupation_models.tests.test_zheng07_centrals",
            "halotools.empirical_models.occupation_models.tests.test_zheng07_satellites",
            "halotools.empirical_models.occupation_models.tests.test_zu_mandelbaum15_components",
            "halotools.empirical_models.occupation_models.tinker13_components",
            "halotools.empirical_models.occupation_models.zheng07_components",
            "halotools.empirical_models.occupation_models.zu_mandelbaum15_components",
            "halotools.empirical_models.phase_space_models",
            "halotools.empirical_models.phase_space_models.analytic_models",
            "halotools.empirical_models.phase_space_models.analytic_models.centrals",
            "halotools.empirical_models.phase_space_models.analytic_models.centrals.tests",
            "halotools.empirical_models.phase_space_models.analytic_models.centrals.tests.test_trivial_phase_space",
            "halotools.empirical_models.phase_space_models.analytic_models.centrals.tests.test_trivial_profile",
            "halotools.empirical_models.phase_space_models.analytic_models.centrals.trivial_phase_space",
            "halotools.empirical_models.phase_space_models.analytic_models.centrals.trivial_profile",
            "halotools.empirical_models.phase_space_models.analytic_models.halo_boundary_functions",
            "halotools.empirical_models.phase_space_models.analytic_models.monte_carlo_helpers",
            "halotools.empirical_models.phase_space_models.analytic_models.profile_model_template",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.biased_nfw_phase_space",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.conc_mass",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.conc_mass.direct_from_halo_catalog",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.conc_mass.dutton_maccio14",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.conc_mass.tests",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.conc_mass.tests.test_conc_mass",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels.biased_isotropic_velocity",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels.mass_profile",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels.mc_generate_nfw_radial_positions",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels.tests",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels.tests.setup_package",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels.tests.test_biased_isotropic_velocity",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels.tests.test_unbiased_isotropic_velocity",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels.unbiased_isotropic_velocity",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.nfw_phase_space",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.nfw_profile",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.sfr_biased_nfw_phase_space",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_biased_nfw",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_biased_nfw.test_biased_nfw_consistency",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_biased_nfw.test_biased_nfw_consistency_mockpop",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_biased_nfw.test_biased_nfw_initialization",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_biased_nfw.test_biased_nfw_phase_space",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_biased_nfw.test_biased_nfw_phase_space_argument_handling",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_biased_nfw.test_conc_gal_bias_behavior",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_biased_nfw.test_mockpop",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_conc_mass_inheritance",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_conc_mass_inheritance.test_direct_from_halo_catalog",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_nfw_phase_space",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_nfw_phase_space.test_nfw_phase_space",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_nfw_phase_space.test_nfw_phase_space_argument_handling",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_nfw_phase_space.test_nfw_phase_space_functions",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_nfw_phase_space.test_nfw_phase_space_initialization",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_nfw_phase_space.test_nfw_phase_space_monte_carlo",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_nfw_profile",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_nfw_profile.test_colossus_consistency",
            "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.tests.test_nfw_profile.test_nfw_profile",
            "halotools.empirical_models.phase_space_models.analytic_models.tests",
            "halotools.empirical_models.phase_space_models.analytic_models.tests.test_halo_boundary_functions",
            "halotools.empirical_models.phase_space_models.subhalo_based_models",
            "halotools.empirical_models.phase_space_models.subhalo_based_models.subhalo_phase_space",
            "halotools.empirical_models.phase_space_models.subhalo_based_models.subhalo_selection_kernel",
            "halotools.empirical_models.phase_space_models.subhalo_based_models.tests",
            "halotools.empirical_models.phase_space_models.subhalo_based_models.tests.test_composite_model",
            "halotools.empirical_models.phase_space_models.subhalo_based_models.tests.test_subhalo_phase_space",
            "halotools.empirical_models.phase_space_models.subhalo_based_models.tests.test_subhalo_selection_kernel",
            "halotools.empirical_models.sfr_models",
            "halotools.empirical_models.sfr_models.halo_mass_quenching",
            "halotools.empirical_models.sfr_models.tests",
            "halotools.empirical_models.sfr_models.tests.test_halo_mass_quenching",
            "halotools.empirical_models.sfr_models.tests.test_zu_mandelbaum16",
            "halotools.empirical_models.sfr_models.zu_mandelbaum16",
            "halotools.empirical_models.smhm_models",
            "halotools.empirical_models.smhm_models.behroozi10",
            "halotools.empirical_models.smhm_models.moster13",
            "halotools.empirical_models.smhm_models.smhm_helpers",
            "halotools.empirical_models.smhm_models.tests",
            "halotools.empirical_models.smhm_models.tests.test_behroozi10",
            "halotools.empirical_models.smhm_models.tests.test_moster13",
            "halotools.empirical_models.smhm_models.tests.test_redshift_defensiveness",
            "halotools.empirical_models.smhm_models.zu_mandelbaum15",
            "halotools.empirical_models.tests",
            "halotools.empirical_models.tests.test_model_helpers",
            "halotools.extern",
            "halotools.mock_observables",
            "halotools.mock_observables.catalog_analysis_helpers",
            "halotools.mock_observables.counts_in_cells",
            "halotools.mock_observables.counts_in_cells.counts_in_cylinders",
            "halotools.mock_observables.counts_in_cells.engines",
            "halotools.mock_observables.counts_in_cells.engines.setup_package",
            "halotools.mock_observables.counts_in_cells.tests",
            "halotools.mock_observables.counts_in_cells.tests.pure_python_counts_in_cells",
            "halotools.mock_observables.counts_in_cells.tests.test_counts_in_cylinders",
            "halotools.mock_observables.group_identification",
            "halotools.mock_observables.group_identification.fof_groups",
            "halotools.mock_observables.group_identification.test_groups",
            "halotools.mock_observables.group_identification.test_groups.test_fof_groups",
            "halotools.mock_observables.isolation_functions",
            "halotools.mock_observables.isolation_functions.conditional_cylindrical_isolation",
            "halotools.mock_observables.isolation_functions.conditional_spherical_isolation",
            "halotools.mock_observables.isolation_functions.cylindrical_isolation",
            "halotools.mock_observables.isolation_functions.engines",
            "halotools.mock_observables.isolation_functions.engines.setup_package",
            "halotools.mock_observables.isolation_functions.isolation_functions_helpers",
            "halotools.mock_observables.isolation_functions.spherical_isolation",
            "halotools.mock_observables.isolation_functions.tests",
            "halotools.mock_observables.isolation_functions.tests.test_conditional_cylindrical_isolation",
            "halotools.mock_observables.isolation_functions.tests.test_conditional_spherical_isolation",
            "halotools.mock_observables.isolation_functions.tests.test_cylindrical_isolation",
            "halotools.mock_observables.isolation_functions.tests.test_isolation_helpers",
            "halotools.mock_observables.isolation_functions.tests.test_spherical_isolation",
            "halotools.mock_observables.large_scale_density",
            "halotools.mock_observables.large_scale_density.large_scale_density_spherical_annulus",
            "halotools.mock_observables.large_scale_density.large_scale_density_spherical_volume",
            "halotools.mock_observables.large_scale_density.tests",
            "halotools.mock_observables.large_scale_density.tests.test_large_scale_density_spherical_annulus",
            "halotools.mock_observables.large_scale_density.tests.test_large_scale_density_spherical_volume",
            "halotools.mock_observables.mock_observables_helpers",
            "halotools.mock_observables.mock_survey",
            "halotools.mock_observables.occupation_stats",
            "halotools.mock_observables.pair_counters",
            "halotools.mock_observables.pair_counters.cpairs",
            "halotools.mock_observables.pair_counters.cpairs.setup_package",
            "halotools.mock_observables.pair_counters.marked_cpairs",
            "halotools.mock_observables.pair_counters.marked_cpairs.setup_package",
            "halotools.mock_observables.pair_counters.marked_npairs_3d",
            "halotools.mock_observables.pair_counters.marked_npairs_xy_z",
            "halotools.mock_observables.pair_counters.mesh_helpers",
            "halotools.mock_observables.pair_counters.npairs_3d",
            "halotools.mock_observables.pair_counters.npairs_jackknife_3d",
            "halotools.mock_observables.pair_counters.npairs_per_object_3d",
            "halotools.mock_observables.pair_counters.npairs_projected",
            "halotools.mock_observables.pair_counters.npairs_s_mu",
            "halotools.mock_observables.pair_counters.npairs_xy_z",
            "halotools.mock_observables.pair_counters.pairs",
            "halotools.mock_observables.pair_counters.pairwise_distance_3d",
            "halotools.mock_observables.pair_counters.pairwise_distance_xy_z",
            "halotools.mock_observables.pair_counters.rectangular_mesh",
            "halotools.mock_observables.pair_counters.rectangular_mesh_2d",
            "halotools.mock_observables.pair_counters.test_pair_counters",
            "halotools.mock_observables.pair_counters.test_pair_counters.pure_python_distance_matrix",
            "halotools.mock_observables.pair_counters.test_pair_counters.pure_python_npairs_per_object_3d",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_marked_npairs_3d",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_marked_npairs_xy_z",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_mesh_helpers",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_npairs_3d",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_npairs_jackknife_3d",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_npairs_per_object_3d",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_npairs_projected",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_npairs_s_mu",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_npairs_xy_z",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_pairwise_distance_3d",
            "halotools.mock_observables.pair_counters.test_pair_counters.test_rectangular_mesh",
            "halotools.mock_observables.pairwise_velocities",
            "halotools.mock_observables.pairwise_velocities.engines",
            "halotools.mock_observables.pairwise_velocities.engines.setup_package",
            "halotools.mock_observables.pairwise_velocities.los_pvd_vs_rp",
            "halotools.mock_observables.pairwise_velocities.mean_los_velocity_vs_rp",
            "halotools.mock_observables.pairwise_velocities.mean_radial_velocity_vs_r",
            "halotools.mock_observables.pairwise_velocities.pairwise_velocities_helpers",
            "halotools.mock_observables.pairwise_velocities.radial_pvd_vs_r",
            "halotools.mock_observables.pairwise_velocities.tests",
            "halotools.mock_observables.pairwise_velocities.tests.test_los_pvd_vs_rp",
            "halotools.mock_observables.pairwise_velocities.tests.test_mean_los_velocity_vs_rp",
            "halotools.mock_observables.pairwise_velocities.tests.test_mean_radial_velocity_vs_r",
            "halotools.mock_observables.pairwise_velocities.tests.test_pairwise_velocity_helpers",
            "halotools.mock_observables.pairwise_velocities.tests.test_pairwise_velocity_stats",
            "halotools.mock_observables.pairwise_velocities.tests.test_radial_pvd_vs_r",
            "halotools.mock_observables.pairwise_velocities.tests.test_velocity_marked_npairs_3d",
            "halotools.mock_observables.pairwise_velocities.velocity_marked_npairs_3d",
            "halotools.mock_observables.pairwise_velocities.velocity_marked_npairs_xy_z",
            "halotools.mock_observables.radial_profiles",
            "halotools.mock_observables.radial_profiles.engines",
            "halotools.mock_observables.radial_profiles.engines.setup_package",
            "halotools.mock_observables.radial_profiles.radial_profile_3d",
            "halotools.mock_observables.radial_profiles.radial_profiles_helpers",
            "halotools.mock_observables.radial_profiles.tests",
            "halotools.mock_observables.radial_profiles.tests.test_radial_profile_3d",
            "halotools.mock_observables.surface_density",
            "halotools.mock_observables.surface_density.delta_sigma",
            "halotools.mock_observables.surface_density.engines",
            "halotools.mock_observables.surface_density.engines.setup_package",
            "halotools.mock_observables.surface_density.mass_in_cylinders",
            "halotools.mock_observables.surface_density.surface_density",
            "halotools.mock_observables.surface_density.surface_density_helpers",
            "halotools.mock_observables.surface_density.tests",
            "halotools.mock_observables.surface_density.tests.external_delta_sigma",
            "halotools.mock_observables.surface_density.tests.pure_python_weighted_npairs_per_object_xy",
            "halotools.mock_observables.surface_density.tests.pure_python_weighted_npairs_xy",
            "halotools.mock_observables.surface_density.tests.test_delta_sigma",
            "halotools.mock_observables.surface_density.tests.test_mass_in_cylinders",
            "halotools.mock_observables.surface_density.tests.test_pure_python_weighted_npairs_xy",
            "halotools.mock_observables.surface_density.tests.test_surface_density",
            "halotools.mock_observables.surface_density.tests.test_surface_density_helpers",
            "halotools.mock_observables.surface_density.tests.test_weighted_npairs_per_object_xy",
            "halotools.mock_observables.surface_density.tests.test_weighted_npairs_xy",
            "halotools.mock_observables.surface_density.weighted_npairs_per_object_xy",
            "halotools.mock_observables.surface_density.weighted_npairs_xy",
            "halotools.mock_observables.tests",
            "halotools.mock_observables.tests.cf_helpers",
            "halotools.mock_observables.tests.test_catalog_analysis_helpers",
            "halotools.mock_observables.tests.test_mock_observables_helpers",
            "halotools.mock_observables.tests.test_mock_survey",
            "halotools.mock_observables.tests.test_occupation_stats",
            "halotools.mock_observables.two_point_clustering",
            "halotools.mock_observables.two_point_clustering.angular_tpcf",
            "halotools.mock_observables.two_point_clustering.clustering_helpers",
            "halotools.mock_observables.two_point_clustering.marked_tpcf",
            "halotools.mock_observables.two_point_clustering.rp_pi_tpcf",
            "halotools.mock_observables.two_point_clustering.s_mu_tpcf",
            "halotools.mock_observables.two_point_clustering.tests",
            "halotools.mock_observables.two_point_clustering.tests.locate_external_unit_testing_data",
            "halotools.mock_observables.two_point_clustering.tests.test_angular_tpcf",
            "halotools.mock_observables.two_point_clustering.tests.test_clustering_helpers",
            "halotools.mock_observables.two_point_clustering.tests.test_marked_tpcf",
            "halotools.mock_observables.two_point_clustering.tests.test_rp_pi_tpcf",
            "halotools.mock_observables.two_point_clustering.tests.test_s_mu_tpcf",
            "halotools.mock_observables.two_point_clustering.tests.test_tpcf",
            "halotools.mock_observables.two_point_clustering.tests.test_tpcf_estimators",
            "halotools.mock_observables.two_point_clustering.tests.test_tpcf_jackknife",
            "halotools.mock_observables.two_point_clustering.tests.test_tpcf_multipole",
            "halotools.mock_observables.two_point_clustering.tests.test_tpcf_one_two_halo",
            "halotools.mock_observables.two_point_clustering.tests.test_wp",
            "halotools.mock_observables.two_point_clustering.tpcf",
            "halotools.mock_observables.two_point_clustering.tpcf_estimators",
            "halotools.mock_observables.two_point_clustering.tpcf_jackknife",
            "halotools.mock_observables.two_point_clustering.tpcf_multipole",
            "halotools.mock_observables.two_point_clustering.tpcf_one_two_halo_decomp",
            "halotools.mock_observables.two_point_clustering.wp",
            "halotools.mock_observables.void_statistics",
            "halotools.mock_observables.void_statistics.tests",
            "halotools.mock_observables.void_statistics.tests.test_underdensity_prob_func",
            "halotools.mock_observables.void_statistics.tests.test_void_prob_func",
            "halotools.mock_observables.void_statistics.underdensity_prob_func",
            "halotools.mock_observables.void_statistics.void_prob_func",
            "halotools.sim_manager",
            "halotools.sim_manager.cached_halo_catalog",
            "halotools.sim_manager.download_manager",
            "halotools.sim_manager.fake_sim",
            "halotools.sim_manager.halo_table_cache",
            "halotools.sim_manager.halo_table_cache_log_entry",
            "halotools.sim_manager.ptcl_table_cache",
            "halotools.sim_manager.ptcl_table_cache_log_entry",
            "halotools.sim_manager.rockstar_hlist_reader",
            "halotools.sim_manager.setup_package",
            "halotools.sim_manager.sim_defaults",
            "halotools.sim_manager.supported_sims",
            "halotools.sim_manager.tabular_ascii_reader",
            "halotools.sim_manager.tests",
            "halotools.sim_manager.tests.helper_functions",
            "halotools.sim_manager.tests.test_cached_halo_catalog",
            "halotools.sim_manager.tests.test_download_manager",
            "halotools.sim_manager.tests.test_fake_sim",
            "halotools.sim_manager.tests.test_halo_table_cache",
            "halotools.sim_manager.tests.test_halo_table_cache_log_entry",
            "halotools.sim_manager.tests.test_ptcl_table_cache",
            "halotools.sim_manager.tests.test_ptcl_table_cache_log_entry",
            "halotools.sim_manager.tests.test_rockstar_hlist_reader",
            "halotools.sim_manager.tests.test_supported_sims",
            "halotools.sim_manager.tests.test_tabular_ascii_reader",
            "halotools.sim_manager.tests.test_user_supplied_halo_catalog",
            "halotools.sim_manager.tests.test_user_supplied_ptcl_catalog",
            "halotools.sim_manager.user_supplied_halo_catalog",
            "halotools.sim_manager.user_supplied_ptcl_catalog",
            "halotools.tests",
            "halotools.tests.docs_code_block_tests",
            "halotools.tests.docs_code_block_tests.test_hod_model_factory_tutorial",
            "halotools.tests.setup_package",
            "halotools.tests.test_amurrica",
            "halotools.tests.test_pytest",
            "halotools.tests.test_seed",
            "halotools.tests.test_subpkg_imports",
            "halotools.tests.usa",
            "halotools.utils",
            "halotools.utils.array_indexing_manipulations",
            "halotools.utils.array_utils",
            "halotools.utils.autosummary_workaround",
            "halotools.utils.crossmatch",
            "halotools.utils.group_member_generator",
            "halotools.utils.inverse_transformation_sampling",
            "halotools.utils.io_utils",
            "halotools.utils.spherical_geometry",
            "halotools.utils.table_utils",
            "halotools.utils.tests",
            "halotools.utils.tests.test_array_indexing_manipulations",
            "halotools.utils.tests.test_array_utils",
            "halotools.utils.tests.test_crossmatch",
            "halotools.utils.tests.test_group_member_generator",
            "halotools.utils.tests.test_its",
            "halotools.utils.tests.test_table_utils",
            "halotools.utils.tests.test_value_added_halo_table_functions",
            "halotools.utils.value_added_halo_table_functions",
            "halotools.version"
        ],
        "version": "0.5rc1"
    },
    "halp": {
        "cmdline": [],
        "modules": [
            "halp",
            "halp.algorithms",
            "halp.algorithms.directed_paths",
            "halp.algorithms.directed_random_walk",
            "halp.algorithms.k_shortest_hyperpaths",
            "halp.algorithms.undirected_partitioning",
            "halp.directed_hypergraph",
            "halp.undirected_hypergraph",
            "halp.utilities",
            "halp.utilities.directed_graph_transformations",
            "halp.utilities.directed_matrices",
            "halp.utilities.directed_statistics",
            "halp.utilities.priority_queue",
            "halp.utilities.undirected_graph_transformations",
            "halp.utilities.undirected_matrices",
            "tests",
            "tests.test_directed_hypergraph",
            "tests.test_undirected_hypergraph"
        ],
        "version": "1.0.0"
    },
    "halt": {
        "cmdline": [],
        "modules": [
            "halt",
            "halt.halt",
            "halt.util"
        ],
        "version": "0.1.1"
    },
    "halwa": {
        "cmdline": [],
        "modules": [
            "halwa"
        ],
        "version": "0.1.9"
    },
    "halweb": {
        "cmdline": [
            "hal.py"
        ],
        "modules": [
            "halicea",
            "halicea.hal",
            "halicea.halicea_manage",
            "halicea.lib",
            "halicea.lib.baseClasses",
            "halicea.lib.codeBlocksHelpers",
            "halicea.lib.config",
            "halicea.lib.consoleHelpers",
            "halicea.lib.dirtree",
            "halicea.lib.imports",
            "halicea.lib.ioUtils",
            "halicea.lib.locators",
            "halicea.lib.mvcManager",
            "halicea.lib.mvcPaths",
            "halicea.lib.packager",
            "halicea.lib.projectManager",
            "halicea.lib.renderers",
            "halicea.lib.templateHelpers",
            "halicea.tests",
            "halicea.tests.BlockLocatorTestCases",
            "halicea.tests.BlockTestCases",
            "halicea.tests.codeBlockHelperTests",
            "halicea.tests.packagerTestCases",
            "halicea.tests.test_imports",
            "halicea.tests.testsrunner"
        ],
        "version": "0.6.0"
    },
    "ham": {
        "cmdline": [],
        "modules": [
            "ham",
            "ham._version",
            "ham.rules",
            "ham.symbols"
        ],
        "version": "0.2"
    },
    "hamachi-ssh": {
        "cmdline": [],
        "modules": [],
        "version": "1.1"
    },
    "hambot": {
        "cmdline": [],
        "modules": [
            "hambot",
            "hambot.cmd",
            "hambot.constants",
            "hambot.plugin"
        ],
        "version": "1.0.0"
    },
    "hambster-test": {
        "cmdline": [],
        "modules": [
            "runrun",
            "wayne",
            "wayne.circle"
        ],
        "version": "0.2"
    },
    "hamed-advanced": {
        "cmdline": [],
        "modules": [
            "hamed_advanced",
            "hamed_advanced.tests"
        ],
        "version": "1.0"
    },
    "hamilton": {
        "cmdline": [],
        "modules": [
            "Hamilton",
            "Hamilton.Interface",
            "Hamilton.Interface.Examples",
            "Hamilton.Interface.Examples.GUI-ArmSlider-P(I)D control",
            "Hamilton.Interface.Examples.GUI-Crosslides-P(I)D control",
            "Hamilton.Interface.Examples.GUI-NewtonsCradle",
            "Hamilton.Interface.Examples.GUI-PULLEY",
            "Hamilton.Interface.Examples.GUI-TOP (TOL)",
            "Hamilton.Interface.GUI-Hamilton"
        ],
        "version": "0.1.0"
    },
    "haml": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hamlish-jinja": {
        "cmdline": [],
        "modules": [
            "hamlish_jinja"
        ],
        "version": "0.3.3"
    },
    "hamlpy": {
        "cmdline": [],
        "modules": [
            "hamlpy",
            "hamlpy.elements",
            "hamlpy.hamlpy",
            "hamlpy.hamlpy_watcher",
            "hamlpy.nodes",
            "hamlpy.template",
            "hamlpy.template.loaders",
            "hamlpy.template.utils",
            "hamlpy.templatize"
        ],
        "version": "0.82.2"
    },
    "hamlpy3": {
        "cmdline": [],
        "modules": [
            "hamlpy",
            "hamlpy.elements",
            "hamlpy.ext",
            "hamlpy.hamlpy",
            "hamlpy.hamlpy_watcher",
            "hamlpy.nodes",
            "hamlpy.template",
            "hamlpy.template.loaders",
            "hamlpy.template.utils",
            "hamlpy.templatize"
        ],
        "version": "0.84.0"
    },
    "hamlreloader": {
        "cmdline": [],
        "modules": [
            "hamlreloader",
            "hamlreloader.reloader",
            "hamlreloader.tests",
            "hamlreloader.tests.test_reloader"
        ],
        "version": "0.0.3"
    },
    "hamly": {
        "cmdline": [],
        "modules": [
            "hamly",
            "hamly.ast_utils",
            "hamly.compiler",
            "hamly.const",
            "hamly.escape",
            "hamly.html",
            "hamly.loader",
            "hamly.optimizer",
            "hamly.parser"
        ],
        "version": "0.1"
    },
    "hammer": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hammercloud": {
        "cmdline": [],
        "modules": [
            "hammercloud",
            "hammercloud._utils",
            "hammercloud.account",
            "hammercloud.api",
            "hammercloud.api.base",
            "hammercloud.api.firstgen",
            "hammercloud.api.nova",
            "hammercloud.api.preferences",
            "hammercloud.consolebrowser",
            "hammercloud.hammercloud",
            "hammercloud.handle",
            "hammercloud.parser",
            "hammercloud.server",
            "hammercloud.shell",
            "hammercloud.shell.expect",
            "hammercloud.shell.pshell",
            "hammercloud.static",
            "hammercloud.static.account",
            "hammercloud.static.const",
            "hammercloud.static.server",
            "hammercloud.static.shell",
            "hammercloud.templates",
            "hammercloud.terminal"
        ],
        "version": "3.0.5"
    },
    "hammerd": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "hammerhead": {
        "cmdline": [],
        "modules": [
            "hammerhead",
            "hammerhead.cli",
            "hammerhead.hammerhead"
        ],
        "version": "0.0.1"
    },
    "hammers": {
        "cmdline": [],
        "modules": [
            "hammers",
            "hammers.colors",
            "hammers.diagnostics",
            "hammers.mycnf",
            "hammers.mysqlargs",
            "hammers.mysqlshim",
            "hammers.osapi",
            "hammers.osrest",
            "hammers.query",
            "hammers.scripts",
            "hammers.scripts.conflict_macs",
            "hammers.scripts.curiouser",
            "hammers.scripts.ipmi_retry",
            "hammers.scripts.maintenance_reservation",
            "hammers.scripts.neutron_reaper",
            "hammers.scripts.undead_instances",
            "hammers.slack",
            "hammers.util"
        ],
        "version": "0.1.8"
    },
    "hammertime": {
        "cmdline": [],
        "modules": [
            "hammertime"
        ],
        "version": "0.2.4"
    },
    "hammock": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.4"
    },
    "hammock-builder": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hammock-rest": {
        "cmdline": [],
        "modules": [
            "cli",
            "cli.base",
            "hammock",
            "hammock.api",
            "hammock.backends",
            "hammock.backends._aweb",
            "hammock.backends._falcon",
            "hammock.backends.backend",
            "hammock.cli",
            "hammock.cli.app",
            "hammock.cli.colors",
            "hammock.cli.command",
            "hammock.cli.command_manager",
            "hammock.cli.interact",
            "hammock.client",
            "hammock.common",
            "hammock.common_resources",
            "hammock.common_resources.common",
            "hammock.converters",
            "hammock.doc",
            "hammock.exceptions",
            "hammock.names",
            "hammock.packages",
            "hammock.policy",
            "hammock.proxy",
            "hammock.resource",
            "hammock.resource_node",
            "hammock.templates",
            "hammock.testing",
            "hammock.testing.base",
            "hammock.testing.server",
            "hammock.types",
            "hammock.types.args",
            "hammock.types.credentials",
            "hammock.types.file",
            "hammock.types.func_spec",
            "hammock.types.headers",
            "hammock.types.http_base",
            "hammock.types.request",
            "hammock.types.response",
            "hammock.types.url",
            "hammock.wrappers",
            "hammock.wrappers._route",
            "hammock.wrappers._sink",
            "hammock.wrappers.wrapper",
            "resources1",
            "resources1.argument_types",
            "resources1.auth",
            "resources1.cli_ignored_package",
            "resources1.cli_ignored_package.sub",
            "resources1.cli_ignored_resource",
            "resources1.cli_names",
            "resources1.client_methods",
            "resources1.dict",
            "resources1.exceptions",
            "resources1.files",
            "resources1.headers",
            "resources1.keyword_map",
            "resources1.keywords",
            "resources1.lists",
            "resources1.patterns",
            "resources1.policy",
            "resources1.redirect",
            "resources1.responses",
            "resources1.sub_modified",
            "resources1.sub_modified.sub",
            "resources1.sub_resource",
            "resources1.sub_resource.nested",
            "resources1.sub_resource.nested.empty",
            "resources1.sub_resource.nested.sub",
            "resources1.sub_resource.sub",
            "resources1.sub_resource.sub2",
            "resources1.sub_resource2",
            "resources1.sub_resource2.sub",
            "resources1.text",
            "resources1.variable_in_url",
            "resources2",
            "resources2.list"
        ],
        "version": "0.0.1"
    },
    "hammr": {
        "cmdline": [
            "hammr",
            "hammr.bat"
        ],
        "modules": [
            "bin",
            "hammr",
            "hammr.commands",
            "hammr.commands.account",
            "hammr.commands.account.account",
            "hammr.commands.bundle",
            "hammr.commands.bundle.bundle",
            "hammr.commands.format",
            "hammr.commands.format.format",
            "hammr.commands.image",
            "hammr.commands.image.image",
            "hammr.commands.os",
            "hammr.commands.os.os",
            "hammr.commands.platform",
            "hammr.commands.platform.platform",
            "hammr.commands.quota",
            "hammr.commands.quota.quota",
            "hammr.commands.scan",
            "hammr.commands.scan.scan",
            "hammr.commands.template",
            "hammr.commands.template.template",
            "hammr.commands.user",
            "hammr.commands.user.user",
            "hammr.hammr",
            "hammr.utils",
            "hammr.utils.account_utils",
            "hammr.utils.bundle_utils",
            "hammr.utils.constants",
            "hammr.utils.generate_utils",
            "hammr.utils.hammr_utils",
            "hammr.utils.publish_utils",
            "hammr.utils.scan_utils",
            "tests",
            "tests.unit",
            "tests.unit.commands",
            "tests.unit.commands.scan",
            "tests.unit.commands.scan.test_scan",
            "tests.unit.commands.template",
            "tests.unit.commands.template.test_template",
            "tests.unit.utils",
            "tests.unit.utils.test_account_utils",
            "tests.unit.utils.test_bundle_utils",
            "tests.unit.utils.test_generate_utils",
            "tests.unit.utils.test_hammr_utils",
            "tests.unit.utils.test_publish_utils"
        ],
        "version": "3.7.4"
    },
    "hammr-3.6": {
        "cmdline": [],
        "modules": [
            "bin",
            "hammr",
            "hammr.commands",
            "hammr.commands.account",
            "hammr.commands.account.account",
            "hammr.commands.bundle",
            "hammr.commands.bundle.bundle",
            "hammr.commands.format",
            "hammr.commands.format.format",
            "hammr.commands.image",
            "hammr.commands.image.image",
            "hammr.commands.os",
            "hammr.commands.os.os",
            "hammr.commands.platform",
            "hammr.commands.platform.platform",
            "hammr.commands.quota",
            "hammr.commands.quota.quota",
            "hammr.commands.scan",
            "hammr.commands.scan.scan",
            "hammr.commands.template",
            "hammr.commands.template.template",
            "hammr.commands.user",
            "hammr.commands.user.user",
            "hammr.hammr",
            "hammr.utils",
            "hammr.utils.account_utils",
            "hammr.utils.constants",
            "hammr.utils.generate_utils",
            "hammr.utils.hammr_utils",
            "hammr.utils.publish_utils",
            "hammr.utils.scan_utils",
            "tests",
            "tests.unit",
            "tests.unit.commands",
            "tests.unit.commands.template",
            "tests.unit.commands.template.test_template",
            "tests.unit.utils"
        ],
        "version": "1.1"
    },
    "hamms": {
        "cmdline": [],
        "modules": [
            "hamms",
            "hamms.morse"
        ],
        "version": "1.3"
    },
    "hamnonlineng": {
        "cmdline": [],
        "modules": [
            "hamnonlineng",
            "hamnonlineng.core"
        ],
        "version": "0.1.0a3"
    },
    "hamopy": {
        "cmdline": [],
        "modules": [
            "hamopy",
            "hamopy.algorithm",
            "hamopy.benchmarks",
            "hamopy.benchmarks.BM3_simul",
            "hamopy.benchmarks.BM4_simul",
            "hamopy.benchmarks.BM5_simul",
            "hamopy.classes",
            "hamopy.ham_library",
            "hamopy.materials",
            "hamopy.materials.hamstad",
            "hamopy.materials.standard",
            "hamopy.materials.virtuel",
            "hamopy.postpro",
            "hamopy.setup"
        ],
        "version": "0.2.0"
    },
    "hamper": {
        "cmdline": [],
        "modules": [
            "hamper",
            "hamper.acl",
            "hamper.cli",
            "hamper.commander",
            "hamper.config",
            "hamper.interfaces",
            "hamper.log",
            "hamper.plugins",
            "hamper.plugins.bitly",
            "hamper.plugins.channel_utils",
            "hamper.plugins.commands",
            "hamper.plugins.dictionary",
            "hamper.plugins.factoids",
            "hamper.plugins.flip",
            "hamper.plugins.friendly",
            "hamper.plugins.goodbye",
            "hamper.plugins.help",
            "hamper.plugins.karma",
            "hamper.plugins.plugin_utils",
            "hamper.plugins.questions",
            "hamper.plugins.quotes",
            "hamper.plugins.roulette",
            "hamper.plugins.seen",
            "hamper.plugins.suggest",
            "hamper.plugins.timez",
            "hamper.plugins.tinyurl",
            "hamper.plugins.whatwasthat",
            "hamper.tests",
            "hamper.tests.test_command",
            "hamper.tests.test_interfaces",
            "hamper.tests.test_permissions",
            "hamper.utils"
        ],
        "version": "1.9.1"
    },
    "hampercli": {
        "cmdline": [],
        "modules": [
            "hamper",
            "hamper.authenticator",
            "hamper.certifier",
            "hamper.hamper",
            "hamper.identifier",
            "hamper.provisioner",
            "hamper/helpers",
            "hamper/helpers.date",
            "hamper/helpers.driver",
            "hamper/helpers.error",
            "hamper/helpers.singleton"
        ],
        "version": "1.0.4"
    },
    "hamperclitest": {
        "cmdline": [],
        "modules": [
            "hamper",
            "hamper.authenticator",
            "hamper.certifier",
            "hamper.hamper",
            "hamper.identifier",
            "hamper.provisioner"
        ],
        "version": "0.1.0"
    },
    "hampy": {
        "cmdline": [],
        "modules": [
            "hampy",
            "hampy.detect",
            "hampy.hamming",
            "hampy.hamming_marker"
        ],
        "version": "1.4.1"
    },
    "hamster": {
        "cmdline": [
            "hamster"
        ],
        "modules": [
            "moviehamster"
        ],
        "version": "0.1dev"
    },
    "hamster-bridge": {
        "cmdline": [],
        "modules": [
            "hamster_bridge",
            "hamster_bridge.bridge",
            "hamster_bridge.listeners",
            "hamster_bridge.listeners.jira",
            "hamster_bridge.listeners.redmine"
        ],
        "version": "0.7.0"
    },
    "hamster-cli": {
        "cmdline": [],
        "modules": [
            "hamster_cli",
            "hamster_cli.hamster_cli",
            "hamster_cli.help_strings"
        ],
        "version": "0.12.0"
    },
    "hamster-gtk": {
        "cmdline": [],
        "modules": [
            "hamster_gtk",
            "hamster_gtk.hamster_gtk",
            "hamster_gtk.helpers",
            "hamster_gtk.misc",
            "hamster_gtk.misc.dialogs",
            "hamster_gtk.misc.dialogs.date_range_select_dialog",
            "hamster_gtk.misc.dialogs.edit_fact_dialog",
            "hamster_gtk.misc.dialogs.error_dialog",
            "hamster_gtk.misc.dialogs.hamster_about_dialog",
            "hamster_gtk.overview",
            "hamster_gtk.overview.dialogs",
            "hamster_gtk.overview.widgets",
            "hamster_gtk.overview.widgets.charts",
            "hamster_gtk.overview.widgets.fact_grid",
            "hamster_gtk.overview.widgets.misc",
            "hamster_gtk.preferences",
            "hamster_gtk.preferences.preferences_dialog",
            "hamster_gtk.preferences.widgets",
            "hamster_gtk.preferences.widgets.combo_file_chooser",
            "hamster_gtk.preferences.widgets.config_widget",
            "hamster_gtk.preferences.widgets.hamster_combo_box_text",
            "hamster_gtk.preferences.widgets.hamster_spin_button",
            "hamster_gtk.preferences.widgets.time_entry",
            "hamster_gtk.tracking",
            "hamster_gtk.tracking.screens",
            "tests",
            "tests.conftest",
            "tests.factories",
            "tests.misc",
            "tests.misc.conftest",
            "tests.misc.test_dialogs",
            "tests.overview",
            "tests.overview.conftest",
            "tests.overview.test_dialogs",
            "tests.overview.test_widgets",
            "tests.preferences",
            "tests.preferences.conftest",
            "tests.preferences.test_preferences_dialog",
            "tests.preferences.widgets",
            "tests.preferences.widgets.conftest",
            "tests.preferences.widgets.test_combo_file_chooser",
            "tests.preferences.widgets.test_config_widget",
            "tests.preferences.widgets.test_hamster_combo_box_text",
            "tests.preferences.widgets.test_hamster_spin_button",
            "tests.preferences.widgets.test_time_entry",
            "tests.test_hamster-gtk",
            "tests.test_helpers",
            "tests.test_minimal",
            "tests.tracking",
            "tests.tracking.conftest",
            "tests.tracking.test_screens"
        ],
        "version": "0.11.0"
    },
    "hamster-lib": {
        "cmdline": [],
        "modules": [
            "hamster_lib",
            "hamster_lib.backends",
            "hamster_lib.backends.sqlalchemy",
            "hamster_lib.backends.sqlalchemy.objects",
            "hamster_lib.backends.sqlalchemy.storage",
            "hamster_lib.helpers",
            "hamster_lib.helpers.config_helpers",
            "hamster_lib.helpers.helpers",
            "hamster_lib.helpers.time",
            "hamster_lib.lib",
            "hamster_lib.objects",
            "hamster_lib.reports",
            "hamster_lib.storage",
            "tests",
            "tests.backends",
            "tests.backends.sqlalchemy",
            "tests.backends.sqlalchemy.common",
            "tests.backends.sqlalchemy.conftest",
            "tests.backends.sqlalchemy.factories",
            "tests.backends.sqlalchemy.test_objects",
            "tests.backends.sqlalchemy.test_storage",
            "tests.conftest",
            "tests.hamster_lib",
            "tests.hamster_lib.conftest",
            "tests.hamster_lib.factories",
            "tests.hamster_lib.test_lib",
            "tests.hamster_lib.test_objects",
            "tests.hamster_lib.test_reports",
            "tests.hamster_lib.test_storage",
            "tests.helpers",
            "tests.helpers.conftest",
            "tests.helpers.test_config_helpers",
            "tests.helpers.test_helpers",
            "tests.helpers.test_time"
        ],
        "version": "0.12.0"
    },
    "hamster-rc": {
        "cmdline": [],
        "modules": [
            "hamster_rc"
        ],
        "version": "0.1.1"
    },
    "hamster-sqlite": {
        "cmdline": [],
        "modules": [
            "hamster",
            "hamster.db",
            "hamster.lib",
            "hamster.storage"
        ],
        "version": "0.3"
    },
    "hamsterlib": {
        "cmdline": [],
        "modules": [
            "hamsterlib",
            "hamsterlib.backends",
            "hamsterlib.backends.sqlalchemy",
            "hamsterlib.backends.sqlalchemy.objects",
            "hamsterlib.backends.sqlalchemy.storage",
            "hamsterlib.helpers",
            "hamsterlib.lib",
            "hamsterlib.objects",
            "hamsterlib.reports",
            "hamsterlib.storage",
            "tests",
            "tests.backends",
            "tests.backends.sqlalchemy",
            "tests.backends.sqlalchemy.common",
            "tests.backends.sqlalchemy.conftest",
            "tests.backends.sqlalchemy.factories",
            "tests.backends.sqlalchemy.test_objects",
            "tests.backends.sqlalchemy.test_storage",
            "tests.conftest",
            "tests.hamsterlib",
            "tests.hamsterlib.conftest",
            "tests.hamsterlib.factories",
            "tests.hamsterlib.test_helpers",
            "tests.hamsterlib.test_lib",
            "tests.hamsterlib.test_objects",
            "tests.hamsterlib.test_reports",
            "tests.hamsterlib.test_storage"
        ],
        "version": "0.1.0"
    },
    "hamtools": {
        "cmdline": [],
        "modules": [
            "hamtools",
            "hamtools.adif",
            "hamtools.ctydat",
            "hamtools.geolog",
            "hamtools.kml",
            "hamtools.qrz",
            "hamtools.ziplocs"
        ],
        "version": "0.3"
    },
    "hamutils": {
        "cmdline": [],
        "modules": [
            "hamutils",
            "hamutils.adif",
            "hamutils.adif.adi",
            "hamutils.adif.adx",
            "hamutils.adif.common",
            "hamutils.cabrillo",
            "hamutils.cabrillo.cabrillo",
            "hamutils.qrz",
            "hamutils.space_weather",
            "hamutils.space_weather.geomagnetic_data",
            "hamutils.space_weather.predictions",
            "hamutils.space_weather.solar_data"
        ],
        "version": "0.2.0"
    },
    "hana": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hanabirc": {
        "cmdline": [
            "hanabIRC"
        ],
        "modules": [
            "hanabIRC",
            "hanabIRC.GameResponse",
            "hanabIRC.game_history",
            "hanabIRC.hanabi",
            "hanabIRC.hanabot",
            "hanabIRC.text_markup"
        ],
        "version": "1.2.05"
    },
    "hancock": {
        "cmdline": [],
        "modules": [
            "hancock"
        ],
        "version": "1.1.2"
    },
    "hand": {
        "cmdline": [],
        "modules": [
            "hand",
            "hand.baserss"
        ],
        "version": "0.5"
    },
    "hand-evaluator": {
        "cmdline": [],
        "modules": [
            "evaluator",
            "evaluator.evaluator",
            "evaluator.hand",
            "evaluator.main"
        ],
        "version": "0.0.1a"
    },
    "handbag": {
        "cmdline": [],
        "modules": [
            "handbag",
            "handbag.cursor",
            "handbag.database",
            "handbag.dbm",
            "handbag.dbm.abstract",
            "handbag.dbm.lmdbdbm",
            "handbag.dson",
            "handbag.environment",
            "handbag.index",
            "handbag.model",
            "handbag.model_adaptors",
            "handbag.registry",
            "handbag.relationships",
            "handbag.table",
            "handbag.transaction",
            "handbag.uniqueid",
            "handbag.validators",
            "handbag.version",
            "tests",
            "tests.test_cursor",
            "tests.test_index",
            "tests.test_model",
            "tests.test_relationships",
            "tests.test_table",
            "tests.test_validators"
        ],
        "version": "0.1.8"
    },
    "handcrank": {
        "cmdline": [],
        "modules": [
            "handcrank",
            "handcrank.dirchange",
            "handcrank.directives",
            "handcrank.generator",
            "handcrank.report",
            "handcrank.roles",
            "handcrank.runner",
            "handcrank.tests",
            "handcrank.tests.test_dirchange",
            "handcrank.tests.test_generator",
            "handcrank.tests.test_report",
            "handcrank.tests.test_runner",
            "handcrank.tests.test_skeleton",
            "handcrank.tests.testcase",
            "handcrank.version"
        ],
        "version": "0.2"
    },
    "handkerchief": {
        "cmdline": [],
        "modules": [
            "handkerchief",
            "handkerchief.handkerchief"
        ],
        "version": "0.2"
    },
    "handle": {
        "cmdline": [],
        "modules": [
            "handle",
            "handle.filters",
            "handle.handle",
            "handle.item",
            "handle.section"
        ],
        "version": "0.1.0"
    },
    "handleget": {
        "cmdline": [],
        "modules": [
            "handleget",
            "handleget.error",
            "handleget.info",
            "handleget.load",
            "handleget.parse",
            "handleget.request",
            "handleget.test"
        ],
        "version": "0.4.1"
    },
    "handler": {
        "cmdline": [],
        "modules": [
            "handler"
        ],
        "version": "1.3.0"
    },
    "handler-list": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "handlersocket": {
        "cmdline": [],
        "modules": [
            "handlersocket",
            "handlersocket.client"
        ],
        "version": "0.0.2"
    },
    "handofcats": {
        "cmdline": [],
        "modules": [
            "handofcats",
            "handofcats.cli",
            "handofcats.commandcollector",
            "handofcats.commandcreator",
            "handofcats.compat",
            "handofcats.debug",
            "handofcats.middlewares",
            "handofcats.middlewares.configjson",
            "handofcats.middlewares.verbosity_adjustment",
            "handofcats.parsercreator"
        ],
        "version": "0.4.4"
    },
    "handroll": {
        "cmdline": [],
        "modules": [
            "handroll",
            "handroll.commands",
            "handroll.commands.base",
            "handroll.commands.build",
            "handroll.commands.builtins",
            "handroll.commands.scaffold",
            "handroll.commands.watch",
            "handroll.composers",
            "handroll.composers.atom",
            "handroll.composers.generic",
            "handroll.composers.j2",
            "handroll.composers.md",
            "handroll.composers.mixins",
            "handroll.composers.rst",
            "handroll.composers.sass",
            "handroll.composers.txt",
            "handroll.configuration",
            "handroll.date",
            "handroll.director",
            "handroll.entry",
            "handroll.exceptions",
            "handroll.extensions",
            "handroll.extensions.base",
            "handroll.extensions.blog",
            "handroll.extensions.loader",
            "handroll.extensions.sitemap",
            "handroll.handlers",
            "handroll.i18n",
            "handroll.resolver",
            "handroll.scaffolder",
            "handroll.server",
            "handroll.signals",
            "handroll.site",
            "handroll.template",
            "handroll.template.catalog",
            "handroll.template.j2",
            "handroll.tests",
            "handroll.tests.factory",
            "handroll.tests.test_blog_extension",
            "handroll.tests.test_commands",
            "handroll.tests.test_composers",
            "handroll.tests.test_configuration",
            "handroll.tests.test_director",
            "handroll.tests.test_entry",
            "handroll.tests.test_extensions",
            "handroll.tests.test_handlers",
            "handroll.tests.test_resolver",
            "handroll.tests.test_scaffolder",
            "handroll.tests.test_server",
            "handroll.tests.test_site",
            "handroll.tests.test_sitemap_extension",
            "handroll.tests.test_template",
            "handroll.tests.testcase"
        ],
        "version": "3.1"
    },
    "hands-chopping": {
        "cmdline": [],
        "modules": [
            "goods",
            "goods.data",
            "goods.data.entry",
            "goods.spider",
            "goods.spider.base",
            "goods.spider.core",
            "goods.spider.spider_jd",
            "goods.spider.spider_taobao",
            "goods.threads",
            "goods.threads.core",
            "goods.threads.goods_thread",
            "goods.utils",
            "goods.utils.const_value",
            "goods.utils.message",
            "run",
            "test",
            "test.test_spider"
        ],
        "version": "0.3.0"
    },
    "handsetdetection": {
        "cmdline": [],
        "modules": [
            "handsetdetection",
            "handsetdetection.exceptions",
            "handsetdetection.hdapiv2",
            "handsetdetection.wsseut",
            "tests",
            "tests.handsetdetection_tests",
            "tests.testutils",
            "tests.wsseut_tests"
        ],
        "version": "1.1"
    },
    "handsontablesjs": {
        "cmdline": [],
        "modules": [
            "handsontablesjs",
            "tests"
        ],
        "version": "0.0.1"
    },
    "handwritingio": {
        "cmdline": [],
        "modules": [
            "handwritingio",
            "handwritingio.version"
        ],
        "version": "1.0.0"
    },
    "handy": {
        "cmdline": [],
        "modules": [
            "handy",
            "handy.ajax",
            "handy.cross",
            "handy.db",
            "handy.decorators",
            "handy.forms",
            "handy.forms.widgets",
            "handy.http",
            "handy.logger",
            "handy.mail",
            "handy.middleware",
            "handy.models",
            "handy.models.fields",
            "handy.shortcuts",
            "handy.text",
            "handy.utils"
        ],
        "version": "0.5.5"
    },
    "handystats": {
        "cmdline": [],
        "modules": [
            "handystats"
        ],
        "version": "0.1.1"
    },
    "hanga": {
        "cmdline": [],
        "modules": [
            "hanga",
            "hanga.api",
            "hanga.appdirs",
            "hanga.scripts",
            "hanga.scripts.client",
            "hanga.utils"
        ],
        "version": "0.7.1"
    },
    "hangar51client": {
        "cmdline": [],
        "modules": [
            "hangar51client"
        ],
        "version": "2.1.3"
    },
    "hanger51client": {
        "cmdline": [],
        "modules": [
            "hanger51client"
        ],
        "version": "1.0.5"
    },
    "hanging-threads": {
        "cmdline": [],
        "modules": [
            "hanging_threads"
        ],
        "version": "2.0.3"
    },
    "hanglish": {
        "cmdline": [],
        "modules": [
            "hanglish"
        ],
        "version": "1.0.1"
    },
    "hangman": {
        "cmdline": [],
        "modules": [
            "Hangman"
        ],
        "version": "1.4.0."
    },
    "hangmanai": {
        "cmdline": [],
        "modules": [
            "HangmanAI",
            "HangmanAI.Automate",
            "HangmanAI.Hangman",
            "HangmanAI.ModDict"
        ],
        "version": "0.0.4"
    },
    "hangpanels": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hangrypy": {
        "cmdline": [],
        "modules": [
            "hangrypy",
            "hangrypy.default_recipe_parser",
            "hangrypy.foodnetwork",
            "hangrypy.recipe",
            "hangrypy.schema_org_recipe_parser"
        ],
        "version": "1.1"
    },
    "hangul": {
        "cmdline": [],
        "modules": [
            "hangul.hangul"
        ],
        "version": "0.1"
    },
    "hangul-romanize": {
        "cmdline": [],
        "modules": [
            "hangul_romanize",
            "hangul_romanize.core",
            "hangul_romanize.rule"
        ],
        "version": "0.0.1"
    },
    "hangul-utils": {
        "cmdline": [],
        "modules": [
            "hangul_utils"
        ],
        "version": "0.2"
    },
    "hangul.translit": {
        "cmdline": [],
        "modules": [
            "hangul",
            "hangul.translit"
        ],
        "version": "0.1.1"
    },
    "hangulize": {
        "cmdline": [],
        "modules": [
            "cmds",
            "cmds.gentest",
            "cmds.helper",
            "cmds.profile",
            "cmds.repl",
            "cmds.stat",
            "hangulize",
            "hangulize.hangul",
            "hangulize.langs",
            "hangulize.langs.aze",
            "hangulize.langs.bel",
            "hangulize.langs.bul",
            "hangulize.langs.cat",
            "hangulize.langs.ces",
            "hangulize.langs.cym",
            "hangulize.langs.deu",
            "hangulize.langs.ell",
            "hangulize.langs.epo",
            "hangulize.langs.est",
            "hangulize.langs.fin",
            "hangulize.langs.grc",
            "hangulize.langs.hbs",
            "hangulize.langs.hun",
            "hangulize.langs.isl",
            "hangulize.langs.ita",
            "hangulize.langs.jpn",
            "hangulize.langs.kat",
            "hangulize.langs.kat.narrow",
            "hangulize.langs.lat",
            "hangulize.langs.lav",
            "hangulize.langs.lit",
            "hangulize.langs.mkd",
            "hangulize.langs.nld",
            "hangulize.langs.pol",
            "hangulize.langs.por",
            "hangulize.langs.por.br",
            "hangulize.langs.ron",
            "hangulize.langs.rus",
            "hangulize.langs.slk",
            "hangulize.langs.slv",
            "hangulize.langs.spa",
            "hangulize.langs.sqi",
            "hangulize.langs.swe",
            "hangulize.langs.tur",
            "hangulize.langs.ukr",
            "hangulize.langs.vie",
            "hangulize.langs.wlm",
            "hangulize.models",
            "hangulize.normalization",
            "hangulize.processing",
            "tests",
            "tests.aze",
            "tests.bel",
            "tests.bul",
            "tests.cat",
            "tests.ces",
            "tests.cym",
            "tests.deu",
            "tests.ell",
            "tests.epo",
            "tests.est",
            "tests.fin",
            "tests.grc",
            "tests.hbs",
            "tests.hun",
            "tests.internal",
            "tests.isl",
            "tests.ita",
            "tests.jpn",
            "tests.kat",
            "tests.kat_narrow",
            "tests.lat",
            "tests.lav",
            "tests.lit",
            "tests.mkd",
            "tests.nld",
            "tests.pol",
            "tests.por",
            "tests.por_br",
            "tests.ron",
            "tests.rus",
            "tests.slk",
            "tests.slv",
            "tests.spa",
            "tests.sqi",
            "tests.swe",
            "tests.tur",
            "tests.ukr",
            "tests.vie",
            "tests.wlm"
        ],
        "version": "0.0.9"
    },
    "hangups": {
        "cmdline": [],
        "modules": [
            "hangups",
            "hangups.auth",
            "hangups.channel",
            "hangups.client",
            "hangups.conversation",
            "hangups.conversation_event",
            "hangups.event",
            "hangups.exceptions",
            "hangups.hangouts_pb2",
            "hangups.http_utils",
            "hangups.message_parser",
            "hangups.parsers",
            "hangups.pblite",
            "hangups.ui",
            "hangups.ui.emoticon",
            "hangups.ui.notify",
            "hangups.ui.utils",
            "hangups.user",
            "hangups.version"
        ],
        "version": "0.4.2"
    },
    "hangups-robobrowser": {
        "cmdline": [],
        "modules": [
            "robobrowser",
            "robobrowser.browser",
            "robobrowser.cache",
            "robobrowser.compat",
            "robobrowser.exceptions",
            "robobrowser.forms",
            "robobrowser.forms.fields",
            "robobrowser.forms.form",
            "robobrowser.helpers",
            "robobrowser.ordereddict",
            "robobrowser.responses",
            "tests",
            "tests.fixtures",
            "tests.test_browser",
            "tests.test_cache",
            "tests.test_forms",
            "tests.test_helpers",
            "tests.utils"
        ],
        "version": "0.5.2"
    },
    "hangups-urwid": {
        "cmdline": [],
        "modules": [
            "urwid",
            "urwid.canvas",
            "urwid.command_map",
            "urwid.compat",
            "urwid.container",
            "urwid.curses_display",
            "urwid.decoration",
            "urwid.display_common",
            "urwid.escape",
            "urwid.font",
            "urwid.graphics",
            "urwid.html_fragment",
            "urwid.lcd_display",
            "urwid.listbox",
            "urwid.main_loop",
            "urwid.monitored_list",
            "urwid.old_str_util",
            "urwid.raw_display",
            "urwid.signals",
            "urwid.split_repr",
            "urwid.tests",
            "urwid.tests.test_canvas",
            "urwid.tests.test_container",
            "urwid.tests.test_decoration",
            "urwid.tests.test_doctests",
            "urwid.tests.test_event_loops",
            "urwid.tests.test_graphics",
            "urwid.tests.test_listbox",
            "urwid.tests.test_str_util",
            "urwid.tests.test_text_layout",
            "urwid.tests.test_util",
            "urwid.tests.test_vterm",
            "urwid.tests.test_widget",
            "urwid.tests.util",
            "urwid.text_layout",
            "urwid.treetools",
            "urwid.util",
            "urwid.version",
            "urwid.vterm",
            "urwid.web_display",
            "urwid.widget",
            "urwid.wimp"
        ],
        "version": "1.2.2-dev"
    },
    "hangupsbot": {
        "cmdline": [],
        "modules": [
            "hangupsbot",
            "hangupsbot.commands",
            "hangupsbot.commands.config",
            "hangupsbot.commands.conversations",
            "hangupsbot.commands.default",
            "hangupsbot.commands.jokes",
            "hangupsbot.commands.users",
            "hangupsbot.config",
            "hangupsbot.handlers",
            "hangupsbot.handlers.autoreplies",
            "hangupsbot.handlers.commands",
            "hangupsbot.handlers.forwarding",
            "hangupsbot.handlers.membership",
            "hangupsbot.handlers.rename",
            "hangupsbot.utils",
            "hangupsbot.version"
        ],
        "version": "1.7.1"
    },
    "hanja": {
        "cmdline": [],
        "modules": [
            "hanja",
            "hanja.hangul",
            "hanja.pairs"
        ],
        "version": "0.11.0"
    },
    "hanjq": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "hank-pki": {
        "cmdline": [],
        "modules": [
            "hanK_pki"
        ],
        "version": "0.0.4"
    },
    "hankel": {
        "cmdline": [],
        "modules": [
            "hankel",
            "hankel.discrete",
            "hankel.hankel"
        ],
        "version": "0.3.1"
    },
    "hankshaw": {
        "cmdline": [],
        "modules": [
            "hankshaw",
            "hankshaw.EnvChangeOutput",
            "hankshaw.FitnessOutput",
            "hankshaw.GenotypesOutput",
            "hankshaw.Metapopulation",
            "hankshaw.MetapopulationOutput",
            "hankshaw.OutputWriter",
            "hankshaw.Population",
            "hankshaw.PopulationOutput",
            "hankshaw.cmd_script",
            "hankshaw.genome",
            "hankshaw.misc",
            "hankshaw.topology"
        ],
        "version": "2.0.0"
    },
    "hannakageul": {
        "cmdline": [],
        "modules": [
            "hannakageul",
            "hannakageul.convert",
            "hannakageul.convert.euccn",
            "hannakageul.convert.eucjp",
            "hannakageul.convert.euckr",
            "hannakageul.convert.jis",
            "hannakageul.convert.sjis",
            "hannakageul.convert.utf8",
            "hannakageul.decoder",
            "hannakageul.encoder"
        ],
        "version": "0.1.2"
    },
    "hanoi": {
        "cmdline": [],
        "modules": [
            "hanoi",
            "hanoi.api",
            "hanoi.backend",
            "tests",
            "tests.api",
            "tests.backend"
        ],
        "version": "0.0.4"
    },
    "hanoolchoi-nester": {
        "cmdline": [],
        "modules": [
            "hanoolchoi_nester"
        ],
        "version": "1.3.0"
    },
    "hanotify": {
        "cmdline": [],
        "modules": [
            "hanotifylib",
            "hanotifylib.report",
            "hanotifylib.watch"
        ],
        "version": "0.1.0"
    },
    "hanqian-nester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hansel": {
        "cmdline": [],
        "modules": [
            "hansel",
            "hansel._utils",
            "hansel.cli",
            "hansel.cli.cli",
            "hansel.cli.utils",
            "hansel.crumb",
            "hansel.mktree",
            "hansel.pandas",
            "hansel.utils",
            "hansel.version"
        ],
        "version": "1.0.2"
    },
    "hanselx": {
        "cmdline": [],
        "modules": [
            "hansel",
            "hansel.hansel"
        ],
        "version": "0.0.7"
    },
    "hanshu": {
        "cmdline": [],
        "modules": [
            "hanshu"
        ],
        "version": "1.2.0"
    },
    "hanshu1": {
        "cmdline": [],
        "modules": [
            "hanshu1"
        ],
        "version": "1.2.0"
    },
    "hany": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hanyang-registration": {
        "cmdline": [],
        "modules": [
            "hanyang_registration",
            "hanyang_registration.sugang"
        ],
        "version": "1.1.6"
    },
    "hanythingondemand": {
        "cmdline": [
            "hod"
        ],
        "modules": [
            "hod",
            "hod.cluster",
            "hod.commands",
            "hod.commands.command",
            "hod.config",
            "hod.config.autogen",
            "hod.config.autogen.common",
            "hod.config.autogen.hadoop",
            "hod.config.autogen.hadoop_on_lustre2",
            "hod.config.autogen.hbase",
            "hod.config.autogen.ipython_notebook",
            "hod.config.config",
            "hod.config.template",
            "hod.config.writer",
            "hod.config.writer._hadoop",
            "hod.config.writer.common",
            "hod.hodproc",
            "hod.local",
            "hod.main",
            "hod.mpiservice",
            "hod.node",
            "hod.node.node",
            "hod.options",
            "hod.rmscheduler",
            "hod.rmscheduler.hodjob",
            "hod.rmscheduler.job",
            "hod.rmscheduler.resourcemanagerscheduler",
            "hod.rmscheduler.rm_pbs",
            "hod.subcommands",
            "hod.subcommands.batch",
            "hod.subcommands.clean",
            "hod.subcommands.clone",
            "hod.subcommands.connect",
            "hod.subcommands.create",
            "hod.subcommands.destroy",
            "hod.subcommands.dists",
            "hod.subcommands.genconfig",
            "hod.subcommands.helptemplate",
            "hod.subcommands.listcmd",
            "hod.subcommands.relabel",
            "hod.subcommands.subcommand",
            "hod.table",
            "hod.utils",
            "hod.work",
            "hod.work.config_service",
            "hod.work.work"
        ],
        "version": "3.2.2"
    },
    "hanzi2pinyin": {
        "cmdline": [],
        "modules": [
            "hanzi2pinyin",
            "hanzi2pinyin.h2p",
            "hanzi2pinyin.quickh2p"
        ],
        "version": "0.1"
    },
    "hanziconv": {
        "cmdline": [
            "hanzi-convert"
        ],
        "modules": [
            "hanziconv",
            "hanziconv.charmap",
            "hanziconv.hanziconv",
            "hanziconv.specialnoun"
        ],
        "version": "0.3.2"
    },
    "hanzidentifier": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "hanzo-warc-tools": {
        "cmdline": [],
        "modules": [
            "httptools",
            "httptools.messaging",
            "httptools.proxy",
            "httptools.semantics",
            "warctools",
            "warctools.arc",
            "warctools.archive_detect",
            "warctools.log",
            "warctools.record",
            "warctools.stream",
            "warctools.warc"
        ],
        "version": "0.2"
    },
    "hanzo-warctools": {
        "cmdline": [],
        "modules": [],
        "version": "4.7"
    },
    "haobtc-oauth2": {
        "cmdline": [],
        "modules": [
            "pyoauth2",
            "pyoauth2.client",
            "pyoauth2.libs",
            "pyoauth2.libs.access_token",
            "pyoauth2.libs.auth_code",
            "pyoauth2.libs.base",
            "pyoauth2.libs.connection",
            "pyoauth2.libs.errors",
            "pyoauth2.libs.request",
            "pyoauth2.libs.response",
            "pyoauth2.libs.utils"
        ],
        "version": "0.0.6"
    },
    "haodouutils": {
        "cmdline": [],
        "modules": [
            "HaodouUtils",
            "HaodouUtils.hdutils",
            "HaodouUtils.sendmail"
        ],
        "version": "0.1.3"
    },
    "hapapi": {
        "cmdline": [],
        "modules": [
            "hapapi",
            "hapapi.api",
            "hapapi.api.auth",
            "hapapi.api.backend",
            "hapapi.api.mixins",
            "hapapi.api.proxy",
            "hapapi.api.root",
            "hapapi.haproxy"
        ],
        "version": "0.1.2"
    },
    "hapctl": {
        "cmdline": [],
        "modules": [
            "hapctl",
            "hapctl.cmd",
            "hapctl.cmd.cli",
            "hapctl.haproxy"
        ],
        "version": "1.0.0"
    },
    "hapi": {
        "cmdline": [],
        "modules": [
            "pyramid_oauthprovider"
        ],
        "version": "0.0"
    },
    "hapi-client": {
        "cmdline": [],
        "modules": [
            "hyperdns.hapi.client",
            "hyperdns.hapi.client.account",
            "hyperdns.hapi.client.cli",
            "hyperdns.hapi.client.cli.hal",
            "hyperdns.hapi.client.cli.ping",
            "hyperdns.hapi.client.cli.records",
            "hyperdns.hapi.client.cli.resources",
            "hyperdns.hapi.client.cli.shell",
            "hyperdns.hapi.client.cli.task",
            "hyperdns.hapi.client.cli.vendors",
            "hyperdns.hapi.client.cli.zones",
            "hyperdns.hapi.client.pools",
            "hyperdns.hapi.client.resource",
            "hyperdns.hapi.client.vendor",
            "hyperdns.hapi.client.zone",
            "hyperdns.hapi.sysmgr",
            "hyperdns.hapi.sysmgr.cli",
            "hyperdns.hapi.sysmgr.cli.cli_config",
            "hyperdns.hapi.sysmgr.cli.cli_hal",
            "hyperdns.hapi.sysmgr.cli.cli_help",
            "hyperdns.hapi.sysmgr.cli.cli_login",
            "hyperdns.hapi.sysmgr.cli.cli_ping",
            "hyperdns.hapi.sysmgr.cli.cli_shell"
        ],
        "version": "0.9.1"
    },
    "hapi-vendor-afilias": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-akamai": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-buddyns": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-cedexis": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-cloudflare": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-cloudfloor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-cloudns": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-conexim": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-dnsbycomodo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-dnsimple": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-durabledns": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-dyn": {
        "cmdline": [],
        "modules": [
            "hyperdns.vendor.drivers.dyn"
        ],
        "version": "0.0.1"
    },
    "hapi-vendor-easydns": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-edgecast": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-edgedirector": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-google": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-irondns": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-level3": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-limelight": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-loaddns": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-name": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-netriplex": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-noip": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-nsone": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-r53": {
        "cmdline": [],
        "modules": [
            "hyperdns.vendor.drivers.r53"
        ],
        "version": "0.9.0"
    },
    "hapi-vendor-rackspace": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-savvisdirect": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-softlayer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-systemns": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-toolkit": {
        "cmdline": [],
        "modules": [
            "hyperdns.vendor.cli",
            "hyperdns.vendor.cli.config",
            "hyperdns.vendor.cli.main",
            "hyperdns.vendor.cli.new_vendor",
            "hyperdns.vendor.cli.shell",
            "hyperdns.vendor.cli.vc_angular",
            "hyperdns.vendor.cli.vc_create",
            "hyperdns.vendor.cli.vc_delete",
            "hyperdns.vendor.cli.vc_test",
            "hyperdns.vendor.cli.vendors",
            "hyperdns.vendor.core",
            "hyperdns.vendor.core.abstract",
            "hyperdns.vendor.core.base",
            "hyperdns.vendor.core.exceptions",
            "hyperdns.vendor.core.http",
            "hyperdns.vendor.core.interface",
            "hyperdns.vendor.core.registry",
            "hyperdns.vendor.drivers.mock",
            "hyperdns.vendor.drivers.mock1",
            "hyperdns.vendor.drivers.mock2"
        ],
        "version": "0.0.2"
    },
    "hapi-vendor-totaluptime": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-ultra": {
        "cmdline": [],
        "modules": [
            "hyperdns.vendor.drivers.ultra"
        ],
        "version": "0.9.0"
    },
    "hapi-vendor-verisign": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapi-vendor-zerigo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hapicake": {
        "cmdline": [],
        "modules": [
            "cake",
            "cake.env",
            "cake.error",
            "cake.hub",
            "cake.settings",
            "cake.test",
            "cake.test.hub_jukebox",
            "cake.test.test_settings"
        ],
        "version": "0.1.1"
    },
    "hapipy": {
        "cmdline": [],
        "modules": [
            "hapi",
            "hapi.base",
            "hapi.blog",
            "hapi.broadcast",
            "hapi.error",
            "hapi.forms",
            "hapi.keywords",
            "hapi.leads",
            "hapi.logging_helper",
            "hapi.mixins",
            "hapi.mixins.threading",
            "hapi.nurturing",
            "hapi.prospects",
            "hapi.settings",
            "hapi.utils"
        ],
        "version": "2.10.0"
    },
    "hapis": {
        "cmdline": [],
        "modules": [
            "hapis",
            "hapis.settings",
            "hapis.tests"
        ],
        "version": "0.1a2"
    },
    "happierfuntokenizing": {
        "cmdline": [],
        "modules": [
            "happierfuntokenizing",
            "happierfuntokenizing.happierfuntokenizing"
        ],
        "version": "1.5.7"
    },
    "happiest": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "happinesslintbear": {
        "cmdline": [],
        "modules": [
            "coalaHappinessLintBear",
            "coalaHappinessLintBear.HappinessLintBear"
        ],
        "version": "0.10.0"
    },
    "happy": {
        "cmdline": [],
        "modules": [
            "happy",
            "happy.cli",
            "happy.heroku"
        ],
        "version": "1.2.0"
    },
    "happy-blog": {
        "cmdline": [],
        "modules": [
            "happy_blog",
            "happy_blog.admin",
            "happy_blog.cms_app",
            "happy_blog.cms_plugins",
            "happy_blog.migrations",
            "happy_blog.migrations.0001_initial",
            "happy_blog.models",
            "happy_blog.urls",
            "happy_blog.views"
        ],
        "version": "0.2.2"
    },
    "happybase": {
        "cmdline": [],
        "modules": [
            "happybase",
            "happybase._version",
            "happybase.batch",
            "happybase.connection",
            "happybase.pool",
            "happybase.table",
            "happybase.util"
        ],
        "version": "1.1.0"
    },
    "happybase-mock": {
        "cmdline": [],
        "modules": [
            "happybase_mock",
            "happybase_mock.batch",
            "happybase_mock.connection",
            "happybase_mock.pool",
            "happybase_mock.table"
        ],
        "version": "0.9.0"
    },
    "happybase-sasl": {
        "cmdline": [],
        "modules": [
            "happybase",
            "happybase._version",
            "happybase.batch",
            "happybase.connection",
            "happybase.hbase",
            "happybase.hbase.Hbase",
            "happybase.hbase.constants",
            "happybase.hbase.ttypes",
            "happybase.pool",
            "happybase.table",
            "happybase.util"
        ],
        "version": "1.0"
    },
    "happycowler": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.3"
    },
    "happydef": {
        "cmdline": [],
        "modules": [
            "happydef",
            "happydef.happydef"
        ],
        "version": "0.1"
    },
    "happyforms": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "happylogging": {
        "cmdline": [],
        "modules": [
            "happylogging",
            "happylogging.utils"
        ],
        "version": "0.0.2"
    },
    "happyml": {
        "cmdline": [],
        "modules": [
            "happyml",
            "happyml.datasets",
            "happyml.models",
            "happyml.plot",
            "happyml.utils"
        ],
        "version": "0.0.5"
    },
    "happymongo": {
        "cmdline": [],
        "modules": [
            "happymongo"
        ],
        "version": "0.1.1"
    },
    "happynumber": {
        "cmdline": [],
        "modules": [
            "happynumber"
        ],
        "version": "0.1"
    },
    "happypacket": {
        "cmdline": [],
        "modules": [
            "happypacket",
            "happypacket.aggregator",
            "happypacket.cli",
            "happypacket.kprobe",
            "happypacket.net",
            "happypacket.net.client",
            "happypacket.net.common",
            "happypacket.net.server",
            "happypacket.outputs",
            "happypacket.outputs.influx",
            "happypacket.outputs.textfile",
            "happypacket.utils",
            "happypacket.utils.asnmap",
            "happypacket.worker"
        ],
        "version": "0.0.7"
    },
    "happypanda": {
        "cmdline": [],
        "modules": [
            "happypanda",
            "happypanda.app",
            "happypanda.app_constants",
            "happypanda.asm_manager",
            "happypanda.color_line_edit",
            "happypanda.database",
            "happypanda.database.arguments",
            "happypanda.database.db",
            "happypanda.database.db_constants",
            "happypanda.executors",
            "happypanda.fetch",
            "happypanda.gallery",
            "happypanda.gallerydb",
            "happypanda.gallerydialog",
            "happypanda.hplugins",
            "happypanda.io_misc",
            "happypanda.misc",
            "happypanda.misc_db",
            "happypanda.pewnet",
            "happypanda.settings",
            "happypanda.settingsdialog",
            "happypanda.utils"
        ],
        "version": "1.1"
    },
    "haproxy-herald": {
        "cmdline": [],
        "modules": [
            "herald",
            "herald.baseplugin",
            "herald.herald",
            "herald.plugins",
            "herald.plugins.fileplugin",
            "herald.plugins.httpplugin",
            "herald.rules"
        ],
        "version": "0.1.0"
    },
    "haproxy-log-analysis": {
        "cmdline": [],
        "modules": [
            "haproxy",
            "haproxy.filters",
            "haproxy.line",
            "haproxy.logfile",
            "haproxy.main",
            "haproxy.tests",
            "haproxy.tests.test_argparse",
            "haproxy.tests.test_filters",
            "haproxy.tests.test_log_file",
            "haproxy.tests.test_log_line",
            "haproxy.tests.test_regex"
        ],
        "version": "2.0.2"
    },
    "haproxy-stats": {
        "cmdline": [],
        "modules": [
            "haproxystats",
            "haproxystats.version"
        ],
        "version": "1.3"
    },
    "haproxy-top": {
        "cmdline": [],
        "modules": [
            "haproxytop",
            "haproxytop.menu",
            "haproxytop.util",
            "haproxytop.version"
        ],
        "version": "0.2"
    },
    "haproxyadmin": {
        "cmdline": [],
        "modules": [
            "haproxyadmin",
            "haproxyadmin.backend",
            "haproxyadmin.command_status",
            "haproxyadmin.exceptions",
            "haproxyadmin.frontend",
            "haproxyadmin.haproxy",
            "haproxyadmin.internal",
            "haproxyadmin.server",
            "haproxyadmin.utils"
        ],
        "version": "0.2.1"
    },
    "haproxyctl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haproxystats": {
        "cmdline": [],
        "modules": [
            "haproxystats",
            "haproxystats.metrics",
            "haproxystats.process",
            "haproxystats.pull",
            "haproxystats.utils"
        ],
        "version": "0.3.14"
    },
    "haproxytool": {
        "cmdline": [],
        "modules": [
            "haproxytool",
            "haproxytool.acl",
            "haproxytool.backend",
            "haproxytool.cli",
            "haproxytool.dump",
            "haproxytool.frontend",
            "haproxytool.haproxy",
            "haproxytool.map",
            "haproxytool.server",
            "haproxytool.utils"
        ],
        "version": "0.5.3"
    },
    "hapy": {
        "cmdline": [],
        "modules": [
            "hapy"
        ],
        "version": "0"
    },
    "hapy-ffi": {
        "cmdline": [],
        "modules": [
            "HaPy"
        ],
        "version": "0.1.3"
    },
    "hapy-heritrix": {
        "cmdline": [],
        "modules": [
            "hapy",
            "hapy.hapy"
        ],
        "version": "0.1.1"
    },
    "hapydeis": {
        "cmdline": [],
        "modules": [
            "hapydeis",
            "hapydeis.hapydeis"
        ],
        "version": "0.0.2.dev4"
    },
    "har2warc": {
        "cmdline": [],
        "modules": [
            "har2warc",
            "har2warc.har2warc"
        ],
        "version": "1.0.2"
    },
    "haralyzer": {
        "cmdline": [],
        "modules": [
            "haralyzer",
            "haralyzer.assets",
            "haralyzer.compat",
            "haralyzer.errors",
            "haralyzer.multihar"
        ],
        "version": "1.4.10"
    },
    "haralyzer-api": {
        "cmdline": [],
        "modules": [
            "har_api",
            "har_api.models",
            "har_api.resource_fields",
            "har_api.resources",
            "har_api.resources.pages",
            "har_api.resources.tests",
            "har_api.routes",
            "har_api.settings",
            "har_api.utils"
        ],
        "version": "0.1.2"
    },
    "harambe": {
        "cmdline": [],
        "modules": [
            "harambe",
            "harambe.__about__",
            "harambe.cli",
            "harambe.contrib",
            "harambe.contrib.app_option",
            "harambe.contrib.application_data",
            "harambe.contrib.auth",
            "harambe.contrib.auth.decorators",
            "harambe.contrib.auth.exceptions",
            "harambe.contrib.auth.models",
            "harambe.contrib.auth.oauth",
            "harambe.contrib.auth.signals",
            "harambe.contrib.views",
            "harambe.contrib.views.app_settings",
            "harambe.contrib.views.auth",
            "harambe.contrib.views.contact_page",
            "harambe.contrib.views.error_page",
            "harambe.contrib.views.maintenance_page",
            "harambe.core",
            "harambe.decorators",
            "harambe.exceptions",
            "harambe.ext",
            "harambe.extras",
            "harambe.extras.harambe_db",
            "harambe.extras.htmlcompress",
            "harambe.extras.jade",
            "harambe.extras.jinja_helpers",
            "harambe.extras.md",
            "harambe.utils"
        ],
        "version": "0.10.0"
    },
    "harbor-py": {
        "cmdline": [],
        "modules": [
            "harborclient",
            "harborclient.harborclient",
            "harborclient.test_harborclient"
        ],
        "version": "1.2.0"
    },
    "hardcode-haml": {
        "cmdline": [],
        "modules": [
            "hardcode_haml",
            "hardcode_haml.lang",
            "hardcode_haml.lang.c",
            "hardcode_haml.lang.cpp",
            "hardcode_haml.lang.python",
            "hardcode_haml.main",
            "hardcode_haml.parser",
            "hardcode_haml.primitives"
        ],
        "version": "0.2.3"
    },
    "hardlink": {
        "cmdline": [],
        "modules": [
            "hardlink",
            "hardlink.base"
        ],
        "version": "0.2"
    },
    "hardlinker": {
        "cmdline": [],
        "modules": [
            "hardlinker",
            "hardlinker.gstats",
            "hardlinker.tools"
        ],
        "version": "0.5.3"
    },
    "hardlinkpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hardnote": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.3"
    },
    "hardscan": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hardware": {
        "cmdline": [],
        "modules": [
            "hardware",
            "hardware.benchmark",
            "hardware.benchmark.cpu",
            "hardware.benchmark.disk",
            "hardware.benchmark.mem",
            "hardware.benchmark.utils",
            "hardware.cardiff",
            "hardware.cardiff.cardiff",
            "hardware.cardiff.check",
            "hardware.cardiff.compare_sets",
            "hardware.cardiff.perf_cpu_tables",
            "hardware.cardiff.utils",
            "hardware.cmdb",
            "hardware.detect",
            "hardware.detect_utils",
            "hardware.diskinfo",
            "hardware.generate",
            "hardware.hpacucli",
            "hardware.infiniband",
            "hardware.ipmi",
            "hardware.matcher",
            "hardware.megacli",
            "hardware.state",
            "hardware.tests",
            "hardware.tests.test_benchmark_cpu",
            "hardware.tests.test_benchmark_disk",
            "hardware.tests.test_benchmark_mem",
            "hardware.tests.test_cardiff_check",
            "hardware.tests.test_cardiff_perf_level",
            "hardware.tests.test_cmdb",
            "hardware.tests.test_detect",
            "hardware.tests.test_diskinfo",
            "hardware.tests.test_ethtool",
            "hardware.tests.test_generate",
            "hardware.tests.test_hpacucli",
            "hardware.tests.test_infiniband",
            "hardware.tests.test_ipmi",
            "hardware.tests.test_lldp",
            "hardware.tests.test_matcher",
            "hardware.tests.test_megacli",
            "hardware.tests.test_state",
            "hardware.tests.utils"
        ],
        "version": "0.18"
    },
    "hare": {
        "cmdline": [],
        "modules": [
            "hare",
            "hare.column",
            "hare.connection",
            "hare.db",
            "hare.exception",
            "hare.table",
            "hare.transaction",
            "hare.util"
        ],
        "version": "0.6"
    },
    "hark": {
        "cmdline": [],
        "modules": [
            "hark",
            "hark.cli",
            "hark.cli.hark",
            "hark.cli.util",
            "hark.client",
            "hark.context",
            "hark.context.imagecache",
            "hark.dal",
            "hark.driver",
            "hark.driver.base",
            "hark.driver.status",
            "hark.driver.virtualbox",
            "hark.exceptions",
            "hark.guest",
            "hark.imagestore",
            "hark.lib",
            "hark.lib.command",
            "hark.lib.platform",
            "hark.log",
            "hark.models",
            "hark.models.base_image",
            "hark.models.folder_share",
            "hark.models.image",
            "hark.models.machine",
            "hark.models.network_interface",
            "hark.models.port_mapping",
            "hark.networking",
            "hark.procedure",
            "hark.share",
            "hark.share.abstract_share",
            "hark.share.nfs",
            "hark.ssh",
            "hark.util",
            "hark.util.download",
            "tests",
            "tests.test_base_image",
            "tests.test_cli_hark",
            "tests.test_client",
            "tests.test_command",
            "tests.test_context",
            "tests.test_dal",
            "tests.test_driver",
            "tests.test_guest",
            "tests.test_image",
            "tests.test_lib_platform",
            "tests.test_models",
            "tests.test_networking",
            "tests.test_ssh",
            "tests.test_util"
        ],
        "version": "1.0.0.dev3"
    },
    "hark-builder": {
        "cmdline": [],
        "modules": [
            "hark_builder",
            "hark_builder.build",
            "hark_builder.cli",
            "hark_builder.context",
            "hark_builder.exceptions",
            "hark_builder.imagecache",
            "hark_builder.runner",
            "tests",
            "tests.test_build",
            "tests.test_context",
            "tests.test_imagecache",
            "tests.test_runner",
            "tests.util"
        ],
        "version": "1.0.0.dev6"
    },
    "hark-imagestore": {
        "cmdline": [],
        "modules": [
            "hark_imagestore",
            "hark_imagestore.cli",
            "hark_imagestore.imagecache",
            "hark_imagestore.lib",
            "hark_imagestore.lib.aws",
            "hark_imagestore.lib.server",
            "hark_imagestore.server"
        ],
        "version": "1.0.0.dev4"
    },
    "harleyfirstmodule": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "harmless": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "harmony": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "harmopy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "harness-it": {
        "cmdline": [],
        "modules": [
            "harness",
            "harness.dataframe",
            "harness.pipeline"
        ],
        "version": "0.1.3"
    },
    "harobed.paster-template.advanced-package": {
        "cmdline": [],
        "modules": [
            "harobed",
            "harobed.paster_template",
            "harobed.paster_template.advanced_package"
        ],
        "version": "0.2"
    },
    "harold": {
        "cmdline": [],
        "modules": [
            "harold",
            "harold._aux_linalg",
            "harold._classes",
            "harold._discrete_funcs",
            "harold._frequency_domain",
            "harold._global_constants",
            "harold._kalman_ops",
            "harold._polynomial_ops",
            "harold._solvers",
            "harold._system_funcs",
            "harold._system_props"
        ],
        "version": "0.1.1b4"
    },
    "harp": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "harparser": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "harpoon": {
        "cmdline": [
            "harpoon"
        ],
        "modules": [
            "harpoon",
            "harpoon.site",
            "harpoon.visualfactory"
        ],
        "version": "0.1"
    },
    "harpy": {
        "cmdline": [],
        "modules": [
            "harpy",
            "harpy.cache",
            "harpy.content",
            "harpy.cookie",
            "harpy.entry",
            "harpy.har",
            "harpy.header",
            "harpy.page",
            "harpy.post_data",
            "harpy.query_string",
            "harpy.request",
            "harpy.response",
            "harpy.timings"
        ],
        "version": "0.2.0"
    },
    "harrier": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "harrison": {
        "cmdline": [],
        "modules": [
            "harrison",
            "harrison.profile",
            "harrison.registered_timer",
            "harrison.test_timer",
            "harrison.timer",
            "harrison.util",
            "harrison.util.inspectlib",
            "harrison.util.test_inspectlib"
        ],
        "version": "1.1.1"
    },
    "harrow": {
        "cmdline": [],
        "modules": [
            "harrow",
            "harrow.arrows"
        ],
        "version": "0.0.0"
    },
    "harry": {
        "cmdline": [],
        "modules": [
            "harry",
            "harry.harpy",
            "harry.harpy.harpy",
            "harry.harpy.harpy.cache",
            "harry.harpy.harpy.content",
            "harry.harpy.harpy.cookie",
            "harry.harpy.harpy.entry",
            "harry.harpy.harpy.har",
            "harry.harpy.harpy.header",
            "harry.harpy.harpy.page",
            "harry.harpy.harpy.post_data",
            "harry.harpy.harpy.query_string",
            "harry.harpy.harpy.request",
            "harry.harpy.harpy.response",
            "harry.harpy.harpy.timings",
            "harry.harry"
        ],
        "version": "0.0.22"
    },
    "harser": {
        "cmdline": [],
        "modules": [
            "harser"
        ],
        "version": "0.1"
    },
    "harstats-graphite": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "haruki": {
        "cmdline": [],
        "modules": [
            "haruki.action",
            "haruki.robot",
            "haruki.scraper"
        ],
        "version": "0.1"
    },
    "haruzira-sdk": {
        "cmdline": [],
        "modules": [
            "haruzirasdk",
            "haruzirasdk.haruzira_message",
            "haruzirasdk.hz_client_tcp_communication",
            "haruzirasdk.hz_encryption",
            "haruzirasdk.hz_speech_recognition_command_info",
            "haruzirasdk.hz_trace",
            "haruzirasdk.msg_ack_send_speech_data",
            "haruzirasdk.msg_ack_send_speech_recognition_command",
            "haruzirasdk.msg_ack_start_comm",
            "haruzirasdk.msg_notify_complete_speech",
            "haruzirasdk.msg_notify_end_comm",
            "haruzirasdk.msg_notify_stop_comm",
            "haruzirasdk.msg_req_start_comm",
            "haruzirasdk.msg_send_speech_data",
            "haruzirasdk.msg_send_speech_recognition_command"
        ],
        "version": "2.1.0"
    },
    "harvest": {
        "cmdline": [],
        "modules": [
            "harvest",
            "harvest.commands",
            "harvest.commands.init",
            "harvest.commands.init_demo",
            "harvest.commands.update",
            "harvest.config",
            "harvest.decorators",
            "harvest.utils"
        ],
        "version": "2.2.3"
    },
    "harvest-api-client": {
        "cmdline": [],
        "modules": [
            "harvest_api_client",
            "harvest_api_client.harvest",
            "harvest_api_client.tokens_manager"
        ],
        "version": "1.1.3"
    },
    "harvest-invoice": {
        "cmdline": [],
        "modules": [
            "harvest_invoice",
            "harvest_invoice.command_line",
            "harvest_invoice.invoice"
        ],
        "version": "0.0.1"
    },
    "harvest-python3": {
        "cmdline": [],
        "modules": [
            "harvest",
            "harvest.harvest"
        ],
        "version": "0.0.4"
    },
    "harvest-sow": {
        "cmdline": [],
        "modules": [
            "sow",
            "sow.commands",
            "sow.console",
            "sow.utils"
        ],
        "version": "1.0.0b1"
    },
    "harvest-vocab": {
        "cmdline": [],
        "modules": [
            "vocab",
            "vocab.managers",
            "vocab.models",
            "vocab.operators",
            "vocab.resources",
            "vocab.settings",
            "vocab.translators",
            "vocab.urls"
        ],
        "version": "2.0.4"
    },
    "harvester": {
        "cmdline": [],
        "modules": [
            "harvester",
            "harvester.models",
            "harvester.user_agents",
            "harvester.utils"
        ],
        "version": "0.3.5"
    },
    "harvestingkit": {
        "cmdline": [],
        "modules": [
            "harvestingkit",
            "harvestingkit.app_utils",
            "harvestingkit.aps_package",
            "harvestingkit.bibrecord",
            "harvestingkit.config",
            "harvestingkit.configparser",
            "harvestingkit.contrast_out",
            "harvestingkit.contrast_out_utils",
            "harvestingkit.edpsciences_package",
            "harvestingkit.elsevier_package",
            "harvestingkit.etree_utils",
            "harvestingkit.ftp_utils",
            "harvestingkit.harvestingkit_cli",
            "harvestingkit.hindawi_bibfilter",
            "harvestingkit.html_utils",
            "harvestingkit.inspire_cds_package",
            "harvestingkit.inspire_cds_package.base",
            "harvestingkit.inspire_cds_package.from_cds",
            "harvestingkit.inspire_cds_package.from_inspire",
            "harvestingkit.inspire_cds_package.mappings",
            "harvestingkit.jats_package",
            "harvestingkit.jats_utils",
            "harvestingkit.minidom_utils",
            "harvestingkit.nlm_utils",
            "harvestingkit.oup_package",
            "harvestingkit.pos_package",
            "harvestingkit.scoap3utils",
            "harvestingkit.springer_crawler",
            "harvestingkit.springer_package",
            "harvestingkit.tests",
            "harvestingkit.tests.aps_package_tests",
            "harvestingkit.tests.bibrecord_tests",
            "harvestingkit.tests.edpsciencespackage_tests",
            "harvestingkit.tests.elsevier_package_tests",
            "harvestingkit.tests.elsevier_scoap3_package_tests",
            "harvestingkit.tests.html_utils_tests",
            "harvestingkit.tests.inspire_cds_package_tests",
            "harvestingkit.tests.jats_utils_tests",
            "harvestingkit.tests.minidom_utils_tests",
            "harvestingkit.tests.pos_package_tests",
            "harvestingkit.tests.utils_tests",
            "harvestingkit.tests.world_scientific_package_tests",
            "harvestingkit.utils",
            "harvestingkit.world_scientific_package"
        ],
        "version": "0.6.9"
    },
    "harvestman": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "harvestmedia": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "harvey": {
        "cmdline": [],
        "modules": [
            "harvey",
            "harvey.get_tldr",
            "harvey.harvey"
        ],
        "version": "0.0.5"
    },
    "hasattr-safe": {
        "cmdline": [],
        "modules": [
            "hasattr_safe",
            "hasattr_safe.hasattr_safe"
        ],
        "version": "0.1.1"
    },
    "hasel": {
        "cmdline": [],
        "modules": [
            "hasel"
        ],
        "version": "1.0.1"
    },
    "hash": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hash-benchmark": {
        "cmdline": [],
        "modules": [
            "hash_benchmark",
            "hash_benchmark.management",
            "hash_benchmark.management.commands",
            "hash_benchmark.management.commands.hash_benchmark",
            "hash_benchmark.models"
        ],
        "version": "0.2.0"
    },
    "hash-me": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hash-ring": {
        "cmdline": [],
        "modules": [
            "hash_ring",
            "hash_ring.hash_ring",
            "hash_ring.memcache_ring"
        ],
        "version": "1.3.1"
    },
    "hashable": {
        "cmdline": [],
        "modules": [
            "hashable",
            "hashable.equals_builder",
            "hashable.hash_code_builder",
            "hashable.helpers",
            "hashable.tools"
        ],
        "version": "0.1"
    },
    "hashable-collections": {
        "cmdline": [],
        "modules": [
            "hashable_collections",
            "hashable_collections.hashable_collections"
        ],
        "version": "1.1"
    },
    "hashcache": {
        "cmdline": [],
        "modules": [
            "hashcache",
            "hashcache..___init__",
            "hashcache.._hashcache",
            "hashcache.hashcache",
            "tests",
            "tests..___init__",
            "tests.._settings",
            "tests.._test_hashcache",
            "tests.settings",
            "tests.test_hashcache"
        ],
        "version": "0.0.1"
    },
    "hashcalclib": {
        "cmdline": [],
        "modules": [
            "hashcalclib",
            "hashcalclib.commonutil",
            "hashcalclib.hashcalclib"
        ],
        "version": "1.6.3"
    },
    "hashdb": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.beta"
    },
    "hashdb2": {
        "cmdline": [],
        "modules": [
            "hashdb2",
            "hashdb2.command_comp",
            "hashdb2.command_hash",
            "hashdb2.command_line",
            "hashdb2.escape",
            "hashdb2.hash",
            "hashdb2.orm",
            "hashdb2.walk"
        ],
        "version": "1.0"
    },
    "hashdd": {
        "cmdline": [
            "hashdd"
        ],
        "modules": [
            "hashdd",
            "hashdd.algorithms",
            "hashdd.algorithms.algorithm",
            "hashdd.algorithms.hashdd_adler32",
            "hashdd.algorithms.hashdd_content_hash",
            "hashdd.algorithms.hashdd_crc16",
            "hashdd.algorithms.hashdd_crc16_ccitt",
            "hashdd.algorithms.hashdd_crc32",
            "hashdd.algorithms.hashdd_crc32b",
            "hashdd.algorithms.hashdd_gost",
            "hashdd.algorithms.hashdd_haval128",
            "hashdd.algorithms.hashdd_haval160",
            "hashdd.algorithms.hashdd_haval192",
            "hashdd.algorithms.hashdd_haval224",
            "hashdd.algorithms.hashdd_haval256",
            "hashdd.algorithms.hashdd_md2",
            "hashdd.algorithms.hashdd_md4",
            "hashdd.algorithms.hashdd_md5",
            "hashdd.algorithms.hashdd_md5w",
            "hashdd.algorithms.hashdd_ripemd128",
            "hashdd.algorithms.hashdd_ripemd160",
            "hashdd.algorithms.hashdd_ripemd256",
            "hashdd.algorithms.hashdd_ripemd320",
            "hashdd.algorithms.hashdd_sha1",
            "hashdd.algorithms.hashdd_sha224",
            "hashdd.algorithms.hashdd_sha256",
            "hashdd.algorithms.hashdd_sha384",
            "hashdd.algorithms.hashdd_sha512",
            "hashdd.algorithms.hashdd_snefru128",
            "hashdd.algorithms.hashdd_snefru256",
            "hashdd.algorithms.hashdd_ssdeep",
            "hashdd.algorithms.hashdd_tiger128",
            "hashdd.algorithms.hashdd_tiger160",
            "hashdd.algorithms.hashdd_tiger192",
            "hashdd.algorithms.hashdd_whirlpool",
            "hashdd.api",
            "hashdd.api.client",
            "hashdd.constants",
            "hashdd.features",
            "hashdd.features.feature",
            "hashdd.features.hashdd_file_absolute_path",
            "hashdd.features.hashdd_file_name",
            "hashdd.features.hashdd_filemagic",
            "hashdd.features.hashdd_known_level",
            "hashdd.features.hashdd_mime",
            "hashdd.features.hashdd_opsystem_code",
            "hashdd.features.hashdd_plaintext",
            "hashdd.features.hashdd_product_code",
            "hashdd.features.hashdd_size",
            "hashdd.features.hashdd_uuid",
            "hashdd.hashdd",
            "hashdd.hashes",
            "hashdd.profile",
            "hashdd.tests",
            "hashdd.tests.test_algorithms",
            "hashdd.tests.test_features",
            "hashdd.tests.test_selective_modules",
            "hashdd.version"
        ],
        "version": "0.0.8"
    },
    "hashdist": {
        "cmdline": [
            "hit",
            "hit-check-libs"
        ],
        "modules": [
            "hashdist",
            "hashdist.cli",
            "hashdist.cli.build_tools_cli",
            "hashdist.cli.frontend_cli",
            "hashdist.cli.ipy_shell",
            "hashdist.cli.main",
            "hashdist.cli.manage_store_cli",
            "hashdist.cli.skeleton",
            "hashdist.cli.source_cache_cli",
            "hashdist.cli.test",
            "hashdist.cli.test.test_build_tools",
            "hashdist.cli.utils",
            "hashdist.core",
            "hashdist.core.ant_glob",
            "hashdist.core.build_store",
            "hashdist.core.build_tools",
            "hashdist.core.cache",
            "hashdist.core.common",
            "hashdist.core.decorators",
            "hashdist.core.fileutils",
            "hashdist.core.hasher",
            "hashdist.core.hit_recipe",
            "hashdist.core.links",
            "hashdist.core.run_job",
            "hashdist.core.source_cache",
            "hashdist.core.test",
            "hashdist.core.test.test_ant_glob",
            "hashdist.core.test.test_build_store",
            "hashdist.core.test.test_build_tools",
            "hashdist.core.test.test_cache",
            "hashdist.core.test.test_fileutils",
            "hashdist.core.test.test_hasher",
            "hashdist.core.test.test_hit_recipe",
            "hashdist.core.test.test_links",
            "hashdist.core.test.test_run_job",
            "hashdist.core.test.test_shebang",
            "hashdist.core.test.test_source_cache",
            "hashdist.core.test.utils",
            "hashdist.deps",
            "hashdist.deps.argparse",
            "hashdist.deps.jsonschema",
            "hashdist.deps.jsonschema._format",
            "hashdist.deps.jsonschema._utils",
            "hashdist.deps.jsonschema._validators",
            "hashdist.deps.jsonschema.compat",
            "hashdist.deps.jsonschema.exceptions",
            "hashdist.deps.jsonschema.validators",
            "hashdist.deps.sh",
            "hashdist.deps.yaml",
            "hashdist.deps.yaml.composer",
            "hashdist.deps.yaml.constructor",
            "hashdist.deps.yaml.dumper",
            "hashdist.deps.yaml.emitter",
            "hashdist.deps.yaml.error",
            "hashdist.deps.yaml.events",
            "hashdist.deps.yaml.loader",
            "hashdist.deps.yaml.nodes",
            "hashdist.deps.yaml.parser",
            "hashdist.deps.yaml.reader",
            "hashdist.deps.yaml.representer",
            "hashdist.deps.yaml.resolver",
            "hashdist.deps.yaml.scanner",
            "hashdist.deps.yaml.serializer",
            "hashdist.deps.yaml.tokens",
            "hashdist.formats",
            "hashdist.formats.config",
            "hashdist.formats.marked_yaml",
            "hashdist.formats.templated_stream",
            "hashdist.formats.tests",
            "hashdist.formats.tests.test_config",
            "hashdist.formats.tests.test_marked_yaml",
            "hashdist.hdist_logging",
            "hashdist.host",
            "hashdist.host.debian",
            "hashdist.host.host",
            "hashdist.host.test",
            "hashdist.host.test.test_debian",
            "hashdist.spec",
            "hashdist.spec.builder",
            "hashdist.spec.exceptions",
            "hashdist.spec.hook",
            "hashdist.spec.hook_api",
            "hashdist.spec.package",
            "hashdist.spec.package_loader",
            "hashdist.spec.profile",
            "hashdist.spec.tests",
            "hashdist.spec.tests.test_builder",
            "hashdist.spec.tests.test_hooks",
            "hashdist.spec.tests.test_package",
            "hashdist.spec.tests.test_profile",
            "hashdist.spec.tests.test_shebang",
            "hashdist.spec.tests.test_stack",
            "hashdist.spec.tests.test_utils",
            "hashdist.spec.utils",
            "hashdist.test"
        ],
        "version": "0.3"
    },
    "hashedassets": {
        "cmdline": [],
        "modules": [
            "hashedassets",
            "hashedassets.rewrite",
            "hashedassets.serializer",
            "hashedassets.tests"
        ],
        "version": "0.3.2"
    },
    "hashedin-logan": {
        "cmdline": [],
        "modules": [
            "logan",
            "logan.eventlogger",
            "logan.exceptions",
            "logan.helpers",
            "logan.utils"
        ],
        "version": "0.6"
    },
    "hashedindex": {
        "cmdline": [],
        "modules": [
            "hashedindex",
            "hashedindex.textparser",
            "tests",
            "tests.test_hashedindex",
            "tests.test_parser"
        ],
        "version": "0.4.0"
    },
    "hashedwords": {
        "cmdline": [],
        "modules": [
            "hashed"
        ],
        "version": "1.0.1"
    },
    "hasher": {
        "cmdline": [],
        "modules": [
            "hasher",
            "hasher.app",
            "hasher.hashes",
            "hasher.main",
            "hasher_test",
            "hasher_test.test_hasher"
        ],
        "version": "2.0.1"
    },
    "hashes": {
        "cmdline": [],
        "modules": [
            "hashes",
            "hashes.common",
            "hashes.common.helpers",
            "hashes.common.orchestra",
            "hashes.ops",
            "hashes.ops.bcrypt",
            "hashes.ops.cisco_pix",
            "hashes.ops.cisco_type7",
            "hashes.ops.ldap_md5",
            "hashes.ops.ldap_salted_md5",
            "hashes.ops.ldap_salted_sha1",
            "hashes.ops.ldap_sha1",
            "hashes.ops.md5",
            "hashes.ops.md5_crypt",
            "hashes.ops.msdcc",
            "hashes.ops.msdcc2",
            "hashes.ops.mssql2000",
            "hashes.ops.mssql2005",
            "hashes.ops.mysql323",
            "hashes.ops.mysql41",
            "hashes.ops.nt",
            "hashes.ops.oracle10",
            "hashes.ops.oracle11",
            "hashes.ops.postgres_md5",
            "hashes.ops.sha1",
            "hashes.ops.sha1_crypt",
            "hashes.ops.sha256",
            "hashes.ops.sha256_crypt",
            "hashes.ops.sha512",
            "hashes.ops.sha512_crypt"
        ],
        "version": "1.1.0"
    },
    "hashextender": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hashfile": {
        "cmdline": [],
        "modules": [
            "hashfile"
        ],
        "version": "2.1.5"
    },
    "hashfs": {
        "cmdline": [],
        "modules": [
            "hashfs",
            "hashfs._compat",
            "hashfs.hashfs",
            "hashfs.utils",
            "tests",
            "tests.test_hashfs"
        ],
        "version": "0.7.0"
    },
    "hashicon": {
        "cmdline": [],
        "modules": [
            "hashicon",
            "hashicon.hashicon"
        ],
        "version": "0.1.1"
    },
    "hashid": {
        "cmdline": [],
        "modules": [
            "hashid"
        ],
        "version": "3.1.4"
    },
    "hashids": {
        "cmdline": [],
        "modules": [
            "hashids"
        ],
        "version": "1.2.0"
    },
    "hashify": {
        "cmdline": [],
        "modules": [
            "hashify"
        ],
        "version": "1.5"
    },
    "hashin": {
        "cmdline": [],
        "modules": [
            "hashin"
        ],
        "version": "0.9.0"
    },
    "hashin-pyup": {
        "cmdline": [],
        "modules": [
            "hashin"
        ],
        "version": "0.7.2"
    },
    "hashish": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "hashlib": {
        "cmdline": [],
        "modules": [
            "hashlib"
        ],
        "version": "20081119"
    },
    "hashmerge": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hashmoji": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "hashprint": {
        "cmdline": [],
        "modules": [
            "hashprint"
        ],
        "version": "1.0.0"
    },
    "hashpumpy": {
        "cmdline": [],
        "modules": [],
        "version": "1.2"
    },
    "hashring": {
        "cmdline": [],
        "modules": [
            "hashring",
            "hashring.hashring"
        ],
        "version": "1.5.1"
    },
    "hashstatic": {
        "cmdline": [],
        "modules": [
            "hashstatic"
        ],
        "version": "0.2"
    },
    "hashstore": {
        "cmdline": [],
        "modules": [
            "hashstore",
            "hashstore.backup",
            "hashstore.db",
            "hashstore.local_store",
            "hashstore.mount",
            "hashstore.py2",
            "hashstore.server",
            "hashstore.session",
            "hashstore.shash",
            "hashstore.storage",
            "hashstore.udk",
            "hashstore.utils"
        ],
        "version": "0.0.4"
    },
    "hashsum": {
        "cmdline": [],
        "modules": [
            "tests",
            "tests._test_utils",
            "tests.benchmarks",
            "tests.test_hashsum"
        ],
        "version": "1.2.2"
    },
    "hashtable": {
        "cmdline": [],
        "modules": [
            "hash",
            "hash.hashtable"
        ],
        "version": "0.1"
    },
    "hashtag": {
        "cmdline": [],
        "modules": [
            "hashTag",
            "hashTag.DBConnectionHandler",
            "hashTag.DBConnectiontests",
            "hashTag.DataFetchEngine",
            "hashTag.Datastore",
            "hashTag.HashTag",
            "hashTag.Parser",
            "hashTag.QueryDispatch",
            "hashTag.TagSearch",
            "hashTag.dbInitlizer",
            "hashTag.sample_test"
        ],
        "version": "0.1"
    },
    "hashutils": {
        "cmdline": [],
        "modules": [
            "hashutils",
            "hashutils.hashutils"
        ],
        "version": "0.0.3"
    },
    "hashwrapper": {
        "cmdline": [],
        "modules": [
            "hashwrapper",
            "hashwrapper.hashwrapper"
        ],
        "version": "0.51"
    },
    "hasitchanged": {
        "cmdline": [],
        "modules": [
            "hasItChanged"
        ],
        "version": "0.0.5"
    },
    "haskell": {
        "cmdline": [],
        "modules": [
            "haskell"
        ],
        "version": "0.0.1"
    },
    "haskelllintbear": {
        "cmdline": [],
        "modules": [
            "coalaHaskellLintBear",
            "coalaHaskellLintBear.HaskellLintBear"
        ],
        "version": "0.10.0"
    },
    "hasoffers": {
        "cmdline": [],
        "modules": [
            "hasoffers",
            "hasoffers.api"
        ],
        "version": "0.2.1"
    },
    "hassbian": {
        "cmdline": [],
        "modules": [
            "hassbian",
            "hassbian.config",
            "hassbian.errors"
        ],
        "version": "0.1"
    },
    "haste": {
        "cmdline": [],
        "modules": [],
        "version": "0.6"
    },
    "haste-client": {
        "cmdline": [
            "haste"
        ],
        "modules": [],
        "version": "1.0.3"
    },
    "hastebin-client": {
        "cmdline": [],
        "modules": [
            "hastebin_client",
            "hastebin_client.config",
            "hastebin_client.utils",
            "tests",
            "tests.test_haste_utils"
        ],
        "version": "0.1.2"
    },
    "hastests": {
        "cmdline": [],
        "modules": [
            "hastests",
            "hastests.account",
            "hastests.data",
            "hastests.version"
        ],
        "version": "0.3.0"
    },
    "hastexo-xblock": {
        "cmdline": [
            "hastexo_connect.py"
        ],
        "modules": [
            "hastexo",
            "hastexo.hastexo",
            "hastexo.heat",
            "hastexo.swift",
            "hastexo.tasks",
            "hastexo.utils"
        ],
        "version": "0.5.3"
    },
    "hastur": {
        "cmdline": [],
        "modules": [
            "hastur",
            "hastur.arms",
            "hastur.bandits",
            "hastur.distributions",
            "hastur.exceptions",
            "hastur.observations"
        ],
        "version": "0.1.2"
    },
    "hasura": {
        "cmdline": [],
        "modules": [
            "hasura",
            "hasura.hasura_base"
        ],
        "version": "0.1"
    },
    "hasy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hat": {
        "cmdline": [],
        "modules": [
            "hat",
            "hat.activations",
            "hat.augmentation",
            "hat.backend",
            "hat.backend.theano_backend",
            "hat.callbacks",
            "hat.data_transformations",
            "hat.generators",
            "hat.globals",
            "hat.initializations",
            "hat.layers",
            "hat.layers.cnn",
            "hat.layers.core",
            "hat.layers.embeddings",
            "hat.layers.noise",
            "hat.layers.normalization",
            "hat.layers.pool",
            "hat.layers.pooling",
            "hat.layers.radial_basis",
            "hat.layers.rnn",
            "hat.layers.your_layer",
            "hat.metrics",
            "hat.models",
            "hat.objectives",
            "hat.optimizers",
            "hat.preprocessing",
            "hat.regularizations",
            "hat.serializations",
            "hat.supports",
            "hat.utils",
            "hat.utils.plots"
        ],
        "version": "0.1.4dev"
    },
    "hat-trie": {
        "cmdline": [],
        "modules": [],
        "version": "0.3"
    },
    "hatak": {
        "cmdline": [],
        "modules": [
            "bael",
            "bael.hatak",
            "bael.hatak.alembic",
            "bael.hatak.recipe",
            "bael.hatak.tasks",
            "bael.hatak.templates",
            "bael.hatak.uwsgi",
            "hatak",
            "hatak.application",
            "hatak.command",
            "hatak.controller",
            "hatak.errors",
            "hatak.plugin",
            "hatak.route",
            "hatak.testing",
            "hatak.unpackrequest"
        ],
        "version": "0.2.7.11"
    },
    "hatak-alembic": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.alembic",
            "haplugin.alembic.commands",
            "haplugin.alembic.plugin"
        ],
        "version": "0.1.3"
    },
    "hatak-auth": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.auth",
            "haplugin.auth.controllers",
            "haplugin.auth.db_tables",
            "haplugin.auth.driver",
            "haplugin.auth.forms",
            "haplugin.auth.helpers",
            "haplugin.auth.models",
            "haplugin.auth.plugin",
            "haplugin.auth.tests",
            "haplugin.auth.tests.test_models",
            "haplugin.auth.tests.test_plugin"
        ],
        "version": "0.2.6"
    },
    "hatak-beaker": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.beaker"
        ],
        "version": "0.1.2"
    },
    "hatak-debugtoolbar": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.debugtoolbar"
        ],
        "version": "0.1"
    },
    "hatak-flashmsg": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.flashmsg",
            "haplugin.flashmsg.helpers",
            "haplugin.flashmsg.models",
            "haplugin.flashmsg.plugin",
            "haplugin.flashmsg.tests",
            "haplugin.flashmsg.tests.test_helpers",
            "haplugin.flashmsg.tests.test_models",
            "haplugin.flashmsg.tests.test_plugin"
        ],
        "version": "0.1.2"
    },
    "hatak-formskit": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.formskit",
            "haplugin.formskit.helpers",
            "haplugin.formskit.models",
            "haplugin.formskit.plugin",
            "haplugin.formskit.testing",
            "haplugin.formskit.tests"
        ],
        "version": "0.2.3.7"
    },
    "hatak-haml": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.haml"
        ],
        "version": "0.1"
    },
    "hatak-jinja2": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.jinja2"
        ],
        "version": "0.2"
    },
    "hatak-logging": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.logging"
        ],
        "version": "0.2"
    },
    "hatak-sql": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.sql",
            "haplugin.sql.driver",
            "haplugin.sql.fixtures",
            "haplugin.sql.models",
            "haplugin.sql.plugin",
            "haplugin.sql.testing"
        ],
        "version": "0.1.16"
    },
    "hatak-statics": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.statics",
            "haplugin.statics.helper",
            "haplugin.statics.plugin",
            "haplugin.statics.request_plugins"
        ],
        "version": "0.2.5"
    },
    "hatak-toster": {
        "cmdline": [],
        "modules": [
            "haplugin",
            "haplugin.toster",
            "haplugin.toster.cases",
            "haplugin.toster.commands",
            "haplugin.toster.database",
            "haplugin.toster.fixtures",
            "haplugin.toster.plugin",
            "haplugin.toster.runner"
        ],
        "version": "0.2.1"
    },
    "hatch": {
        "cmdline": [],
        "modules": [
            "hatch",
            "hatch.entry_points",
            "hatch.filter",
            "hatch.finder",
            "hatch.finders",
            "hatch.interface",
            "hatch.internal",
            "hatch.observer",
            "hatch.utils"
        ],
        "version": "0.9"
    },
    "hatcher": {
        "cmdline": [],
        "modules": [
            "hatcher",
            "hatcher._version",
            "hatcher.api",
            "hatcher.cli",
            "hatcher.cli.main",
            "hatcher.cli.organization_actions",
            "hatcher.cli.repository_actions",
            "hatcher.cli.server_actions",
            "hatcher.cli.team_actions",
            "hatcher.cli.tests",
            "hatcher.cli.tests.test_utils",
            "hatcher.cli.user_actions",
            "hatcher.cli.utils",
            "hatcher.cli.v0",
            "hatcher.cli.v0.repository_actions",
            "hatcher.cli.v0.tests",
            "hatcher.cli.v0.tests.test_api_tokens_commands",
            "hatcher.cli.v0.tests.test_app_commands",
            "hatcher.cli.v0.tests.test_egg_commands",
            "hatcher.cli.v0.tests.test_main",
            "hatcher.cli.v0.tests.test_organization_commands",
            "hatcher.cli.v0.tests.test_runtime_commands",
            "hatcher.cli.v0.tests.test_team_commands",
            "hatcher.cli.v0.tests.test_user_commands",
            "hatcher.cli.v1",
            "hatcher.cli.v1.repository_actions",
            "hatcher.cli.v1.tests",
            "hatcher.cli.v1.tests.test_runtime_commands",
            "hatcher.core",
            "hatcher.core.auth",
            "hatcher.core.brood_client",
            "hatcher.core.brood_url_handler",
            "hatcher.core.model_registry",
            "hatcher.core.organization",
            "hatcher.core.repository",
            "hatcher.core.team",
            "hatcher.core.tests",
            "hatcher.core.tests.common",
            "hatcher.core.tests.test_brood_client",
            "hatcher.core.tests.test_json_schema_test_mixin",
            "hatcher.core.tests.test_url_builder",
            "hatcher.core.tests.test_url_handler",
            "hatcher.core.tests.test_utils",
            "hatcher.core.url_templates",
            "hatcher.core.user",
            "hatcher.core.utils",
            "hatcher.core.v0",
            "hatcher.core.v0.organization",
            "hatcher.core.v0.repository",
            "hatcher.core.v0.team",
            "hatcher.core.v0.tests",
            "hatcher.core.v0.tests.test_organization",
            "hatcher.core.v0.tests.test_repository",
            "hatcher.core.v0.tests.test_team",
            "hatcher.core.v0.tests.test_user",
            "hatcher.core.v0.user",
            "hatcher.core.v1",
            "hatcher.core.v1.repository",
            "hatcher.core.v1.tests",
            "hatcher.core.v1.tests.test_repository",
            "hatcher.errors",
            "hatcher.testing",
            "hatcher.tests",
            "hatcher.tests.common",
            "hatcher.utils"
        ],
        "version": "0.10.4"
    },
    "hatchery": {
        "cmdline": [],
        "modules": [
            "hatchery",
            "hatchery._version",
            "hatchery.config",
            "hatchery.executor",
            "hatchery.helpers",
            "hatchery.main",
            "hatchery.project",
            "hatchery.snippets"
        ],
        "version": "0.4.2"
    },
    "hatchlib": {
        "cmdline": [],
        "modules": [
            "hatchlib",
            "hatchlib.dynamic",
            "hatchlib.dynamic.lcs_ext",
            "hatchlib.encoding",
            "hatchlib.factorize",
            "hatchlib.factorize.pr",
            "hatchlib.math",
            "hatchlib.math.sequence",
            "hatchlib.math.sieve",
            "hatchlib.search",
            "hatchlib.shuffle",
            "hatchlib.sort"
        ],
        "version": "0.6.0"
    },
    "hate": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hatena-haiker": {
        "cmdline": [],
        "modules": [
            "haiker",
            "haiker.api",
            "haiker.auth",
            "haiker.error",
            "haiker.types",
            "haiker.utils",
            "tests",
            "tests.samples",
            "tests.test_api",
            "tests.test_auth",
            "tests.test_error",
            "tests.test_types",
            "tests.test_utils"
        ],
        "version": "0.4.0"
    },
    "hatena2rest": {
        "cmdline": [],
        "modules": [
            "hatena2rest",
            "hatena2rest.command",
            "hatena2rest.convert",
            "hatena2rest.htnparser",
            "hatena2rest.processing",
            "hatena2rest.utils"
        ],
        "version": "0.1.1"
    },
    "hatena2rst": {
        "cmdline": [],
        "modules": [
            "hatena2rst",
            "hatena2rst.constants",
            "hatena2rst.main"
        ],
        "version": "0.0.1"
    },
    "hatenablog": {
        "cmdline": [],
        "modules": [
            "hatenablog",
            "hatenablog.hatenablog"
        ],
        "version": "0.0.1"
    },
    "hatenadiary": {
        "cmdline": [],
        "modules": [],
        "version": "0.3"
    },
    "hatenagraph": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hathilda": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.12"
    },
    "hathitables": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hatom2atom": {
        "cmdline": [],
        "modules": [
            "hatom2atom",
            "hatom2atom.h2aproxy",
            "hatom2atom.settings",
            "hatom2atom.util"
        ],
        "version": "0.6"
    },
    "hatta": {
        "cmdline": [],
        "modules": [
            "hatta",
            "hatta.config",
            "hatta.error",
            "hatta.hg_integration",
            "hatta.page",
            "hatta.parser",
            "hatta.request",
            "hatta.response",
            "hatta.search",
            "hatta.storage",
            "hatta.views",
            "hatta.wiki"
        ],
        "version": "1.6.7"
    },
    "haufe.eggserver": {
        "cmdline": [],
        "modules": [
            "eggserver",
            "eggserver.eggsrv",
            "eggserver.parse_pkg_info",
            "eggserver.testing",
            "eggserver.util"
        ],
        "version": "0.2.6"
    },
    "haufe.hrs.configuration": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.hrs",
            "haufe.hrs.configuration",
            "haufe.hrs.configuration.decorator",
            "haufe.hrs.configuration.demo",
            "haufe.hrs.configuration.demo2_notify",
            "haufe.hrs.configuration.interfaces",
            "haufe.hrs.configuration.logger",
            "haufe.hrs.configuration.patches",
            "haufe.hrs.configuration.service",
            "haufe.hrs.configuration.services",
            "haufe.hrs.configuration.tests",
            "haufe.hrs.configuration.tests.test_configuration",
            "haufe.hrs.configuration.tests.test_directives",
            "haufe.hrs.configuration.tests.test_service",
            "haufe.hrs.configuration.util",
            "haufe.hrs.configuration.zcml"
        ],
        "version": "0.5.18"
    },
    "haufe.monitoring": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.monitoring",
            "haufe.monitoring.browser",
            "haufe.monitoring.browser.error_log_view",
            "haufe.monitoring.browser.monitor",
            "haufe.monitoring.browser.status",
            "haufe.monitoring.browser.unix",
            "haufe.monitoring.config",
            "haufe.monitoring.controlpanel",
            "haufe.monitoring.gil_monitor",
            "haufe.monitoring.network"
        ],
        "version": "0.2.1.4"
    },
    "haufe.releaser": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.releaser",
            "haufe.releaser.commands",
            "haufe.releaser.rest",
            "haufe.releaser.upload"
        ],
        "version": "0.1.5"
    },
    "haufe.requestmonitoring": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.requestmonitoring",
            "haufe.requestmonitoring.DumpTraceback",
            "haufe.requestmonitoring.Rotator",
            "haufe.requestmonitoring.info",
            "haufe.requestmonitoring.interfaces",
            "haufe.requestmonitoring.monitor",
            "haufe.requestmonitoring.patch",
            "haufe.requestmonitoring.successlogging",
            "haufe.requestmonitoring.timelogging"
        ],
        "version": "0.5.0"
    },
    "haufe.selenium": {
        "cmdline": [],
        "modules": [
            "src",
            "src.haufe",
            "src.haufe.selenium",
            "src.haufe.selenium.cli",
            "src.haufe.selenium.testing",
            "src.haufe.selenium.testing.selenium",
            "src.haufe.selenium.testing.testcase",
            "src.haufe.selenium.tests",
            "src.haufe.selenium.tests.testSimple"
        ],
        "version": "0.3.0"
    },
    "haufe.sharepoint": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.sharepoint",
            "haufe.sharepoint.cli",
            "haufe.sharepoint.connector",
            "haufe.sharepoint.logger",
            "haufe.sharepoint.patches",
            "haufe.sharepoint.tests",
            "haufe.sharepoint.tests.test_connector"
        ],
        "version": "0.1.9"
    },
    "haufe.sharepoint.extended": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.sharepoint",
            "haufe.sharepoint.cli",
            "haufe.sharepoint.connector",
            "haufe.sharepoint.logger",
            "haufe.sharepoint.patches",
            "haufe.sharepoint.tests",
            "haufe.sharepoint.tests.test_connector",
            "haufemod",
            "haufemod.sharepoint",
            "haufemod.sharepoint.cli",
            "haufemod.sharepoint.connector",
            "haufemod.sharepoint.logger",
            "haufemod.sharepoint.patches",
            "haufemod.sharepoint.tests",
            "haufemod.sharepoint.tests.test_connector",
            "nadpathaufe",
            "nadpathaufe.sharepoint",
            "nadpathaufe.sharepoint.cli",
            "nadpathaufe.sharepoint.connector",
            "nadpathaufe.sharepoint.logger",
            "nadpathaufe.sharepoint.patches",
            "nadpathaufe.sharepoint.tests",
            "nadpathaufe.sharepoint.tests.test_connector"
        ],
        "version": "0.1.0"
    },
    "haufe.sortabletable": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.sortabletable"
        ],
        "version": "0.2"
    },
    "haufe.stripml": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.stripml",
            "haufe.stripml.tests"
        ],
        "version": "1.2.2"
    },
    "haufe.testrunner": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.testrunner",
            "haufe.testrunner.cli",
            "haufe.testrunner.database",
            "haufe.testrunner.database.bootstrap",
            "haufe.testrunner.database.config",
            "haufe.testrunner.database.model",
            "haufe.testrunner.database.setup",
            "haufe.testrunner.formatter",
            "haufe.testrunner.styles",
            "haufe.testrunner.tests"
        ],
        "version": "0.6.13"
    },
    "haufe.testrunner.ui": {
        "cmdline": [],
        "modules": [
            "haufe_testrunner_ui",
            "haufe_testrunner_ui.app",
            "haufe_testrunner_ui.testing"
        ],
        "version": "0.1.5"
    },
    "haufe.ztop": {
        "cmdline": [],
        "modules": [
            "haufe",
            "haufe.ztop",
            "haufe.ztop.Feeder",
            "haufe.ztop.Sampler",
            "haufe.ztop.zanalyse",
            "haufe.ztop.ztop"
        ],
        "version": "0.2.2"
    },
    "haul": {
        "cmdline": [],
        "modules": [
            "haul",
            "haul.api",
            "haul.compat",
            "haul.core",
            "haul.exceptions",
            "haul.extenders",
            "haul.extenders.pipeline",
            "haul.extenders.pipeline.google",
            "haul.extenders.pipeline.pinterest",
            "haul.extenders.pipeline.tumblr",
            "haul.extenders.pipeline.wordpress",
            "haul.finders",
            "haul.finders.pipeline",
            "haul.finders.pipeline.css",
            "haul.finders.pipeline.html",
            "haul.settings",
            "haul.utils"
        ],
        "version": "1.3.2"
    },
    "haus": {
        "cmdline": [],
        "modules": [
            "haus",
            "haus.cli",
            "haus.components",
            "haus.components.abstract",
            "haus.components.appinit",
            "haus.components.barrelsec",
            "haus.components.beakerstate",
            "haus.components.genshiview",
            "haus.components.locations",
            "haus.components.logger",
            "haus.components.prefixer",
            "haus.components.selectordispatch",
            "haus.components.standard",
            "haus.components.staticfiles",
            "haus.components.status",
            "haus.components.yaroreq",
            "haus.core"
        ],
        "version": "0.1.0"
    },
    "hausastemmer": {
        "cmdline": [],
        "modules": [
            "hausastemmer",
            "hausastemmer.HausaStemmer",
            "hausastemmer.dict_lookup"
        ],
        "version": "1.0"
    },
    "hautomation-gpio": {
        "cmdline": [],
        "modules": [
            "hautomation_gpio",
            "hautomation_gpio.cmds",
            "hautomation_gpio.deploy",
            "hautomation_gpio.settings",
            "hautomation_gpio.tests",
            "hautomation_gpio.utils"
        ],
        "version": "0.7"
    },
    "hautomation-restclient": {
        "cmdline": [],
        "modules": [
            "hautomation_restclient",
            "hautomation_restclient.cmds",
            "hautomation_restclient.manage",
            "hautomation_restclient.tests"
        ],
        "version": "0.3.2"
    },
    "hautomation-x10": {
        "cmdline": [],
        "modules": [
            "hautomation_x10",
            "hautomation_x10.cmds",
            "hautomation_x10.deploy",
            "hautomation_x10.driver",
            "hautomation_x10.settings",
            "hautomation_x10.tests",
            "hautomation_x10.utils"
        ],
        "version": "0.11.1"
    },
    "havaiana": {
        "cmdline": [],
        "modules": [
            "havaiana",
            "havaiana.charts",
            "havaiana.config",
            "havaiana.example",
            "havaiana.helpers",
            "havaiana.renderers"
        ],
        "version": "2.6.2"
    },
    "havarti": {
        "cmdline": [],
        "modules": [
            "havarti",
            "havarti.celery",
            "havarti.data",
            "havarti.downloader",
            "havarti.parse",
            "havarti.storage",
            "havarti.storage.localstorage",
            "havarti.storage.rackspacestorage",
            "havarti.storage.s3storage"
        ],
        "version": "1.0"
    },
    "have-a-rest": {
        "cmdline": [],
        "modules": [
            "docs",
            "docs.generator",
            "have_a_rest",
            "have_a_rest.ext",
            "have_a_rest.ext.django",
            "have_a_rest.ext.django.json_response",
            "have_a_rest.ext.django.view",
            "have_a_rest.fields",
            "have_a_rest.json_response",
            "have_a_rest.view"
        ],
        "version": "0.1.2"
    },
    "haven": {
        "cmdline": [],
        "modules": [
            "haven",
            "haven.blueprint",
            "haven.connection",
            "haven.constants",
            "haven.contrib",
            "haven.contrib.websocket_gevent_impl",
            "haven.gevent_impl",
            "haven.haven",
            "haven.log",
            "haven.mixins",
            "haven.request",
            "haven.thread_impl",
            "haven.utils"
        ],
        "version": "1.1.105"
    },
    "havenondemand": {
        "cmdline": [],
        "modules": [
            "havenondemand",
            "havenondemand.errorcodes",
            "havenondemand.hodclient",
            "havenondemand.hodresponseparser"
        ],
        "version": "2.0.1.post0"
    },
    "haversine": {
        "cmdline": [],
        "modules": [
            "haversine"
        ],
        "version": "0.4.5"
    },
    "havocbot": {
        "cmdline": [],
        "modules": [
            "havocbot",
            "havocbot.bot",
            "havocbot.client",
            "havocbot.clients",
            "havocbot.clients.hipchat",
            "havocbot.clients.skype",
            "havocbot.clients.slack",
            "havocbot.clients.xmpp",
            "havocbot.common",
            "havocbot.core",
            "havocbot.core.havocbot_help",
            "havocbot.core.havocbot_list",
            "havocbot.core.havocbot_reload",
            "havocbot.core.havocbot_restart",
            "havocbot.core.havocbot_user",
            "havocbot.exceptions",
            "havocbot.message",
            "havocbot.plugin",
            "havocbot.pluginmanager",
            "havocbot.singletonmixin",
            "havocbot.stasher",
            "havocbot.user"
        ],
        "version": "0.2.0"
    },
    "hawk": {
        "cmdline": [],
        "modules": [
            "hawk",
            "hawk.config",
            "hawk.scripts",
            "hawk.tinker"
        ],
        "version": "0.1"
    },
    "hawkauthlib": {
        "cmdline": [],
        "modules": [
            "hawkauthlib",
            "hawkauthlib.noncecache",
            "hawkauthlib.tests",
            "hawkauthlib.tests.test_noncecache",
            "hawkauthlib.tests.test_request_objects",
            "hawkauthlib.tests.test_signatures",
            "hawkauthlib.tests.test_utils",
            "hawkauthlib.utils"
        ],
        "version": "0.1.1"
    },
    "hawkey": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hawkrest": {
        "cmdline": [],
        "modules": [
            "hawkrest",
            "hawkrest.management",
            "hawkrest.management.commands",
            "hawkrest.management.commands.hawkrequest",
            "hawkrest.middleware",
            "hawkrest.models"
        ],
        "version": "1.0.0"
    },
    "hawkular-client": {
        "cmdline": [],
        "modules": [
            "hawkular",
            "hawkular.alerts",
            "hawkular.client",
            "hawkular.metrics"
        ],
        "version": "0.5.3"
    },
    "hawkular-client-cli": {
        "cmdline": [],
        "modules": [
            "hawkular_client_cli",
            "hawkular_client_cli.command_line"
        ],
        "version": "0.18.3"
    },
    "hawkweed": {
        "cmdline": [],
        "modules": [
            "hawkweed",
            "hawkweed.classes",
            "hawkweed.classes.collection",
            "hawkweed.classes.dict_cls",
            "hawkweed.classes.future",
            "hawkweed.classes.iterable",
            "hawkweed.classes.list_cls",
            "hawkweed.classes.repr",
            "hawkweed.classes.set_cls",
            "hawkweed.computed",
            "hawkweed.functional",
            "hawkweed.functional.list_prims",
            "hawkweed.functional.logical",
            "hawkweed.functional.mathematical",
            "hawkweed.functional.primitives",
            "hawkweed.monads",
            "hawkweed.monads.continuation",
            "hawkweed.monads.either",
            "hawkweed.monads.identity",
            "hawkweed.monads.io",
            "hawkweed.monads.listm",
            "hawkweed.monads.maybe",
            "hawkweed.monads.monad",
            "tests",
            "tests.test_collection",
            "tests.test_continuation",
            "tests.test_dict",
            "tests.test_either",
            "tests.test_future",
            "tests.test_identity",
            "tests.test_io",
            "tests.test_iterable",
            "tests.test_list",
            "tests.test_list_prims",
            "tests.test_listm",
            "tests.test_logical",
            "tests.test_math",
            "tests.test_mathematical",
            "tests.test_maybe",
            "tests.test_monad",
            "tests.test_primitives",
            "tests.test_repr",
            "tests.test_set"
        ],
        "version": "0.1.5"
    },
    "haxor": {
        "cmdline": [],
        "modules": [
            "hackernews",
            "hackernews.settings",
            "tests",
            "tests.test_api_verison",
            "tests.test_ask_stories",
            "tests.test_get_item",
            "tests.test_get_max_item",
            "tests.test_get_user",
            "tests.test_job_stories",
            "tests.test_new_stories",
            "tests.test_show_stories",
            "tests.test_top_stories",
            "tests.test_updates"
        ],
        "version": "0.4"
    },
    "haxor-news": {
        "cmdline": [],
        "modules": [
            "haxor_news",
            "haxor_news.compat",
            "haxor_news.completer",
            "haxor_news.completions",
            "haxor_news.config",
            "haxor_news.hacker_news",
            "haxor_news.hacker_news_cli",
            "haxor_news.haxor",
            "haxor_news.keys",
            "haxor_news.lib",
            "haxor_news.lib.debug_timer",
            "haxor_news.lib.haxor",
            "haxor_news.lib.haxor.haxor",
            "haxor_news.lib.haxor.settings",
            "haxor_news.lib.html2text",
            "haxor_news.lib.html2text.html2text",
            "haxor_news.lib.pretty_date_time",
            "haxor_news.main",
            "haxor_news.main_cli",
            "haxor_news.onions",
            "haxor_news.settings",
            "haxor_news.style",
            "haxor_news.toolbar",
            "haxor_news.utils",
            "haxor_news.web_viewer",
            "tests",
            "tests.compat",
            "tests.data",
            "tests.data.comment",
            "tests.data.item",
            "tests.data.markdown",
            "tests.data.regex",
            "tests.data.tip",
            "tests.data.title",
            "tests.data.url",
            "tests.mock_hacker_news_api",
            "tests.run_tests",
            "tests.test_cli",
            "tests.test_completer",
            "tests.test_config",
            "tests.test_hacker_news",
            "tests.test_hacker_news_cli",
            "tests.test_haxor",
            "tests.test_keys",
            "tests.test_toolbar"
        ],
        "version": "0.4.3"
    },
    "haya": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hayes": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haymetric": {
        "cmdline": [],
        "modules": [
            "haymetric",
            "haymetric.haymetric"
        ],
        "version": "0.1.1"
    },
    "hayrack": {
        "cmdline": [],
        "modules": [
            "hayrack",
            "hayrack.config",
            "hayrack.log",
            "hayrack.server",
            "hayrack.tests",
            "hayrack.tests.transport_test",
            "hayrack.transport"
        ],
        "version": "0.0.6"
    },
    "haystack": {
        "cmdline": [],
        "modules": [
            "haystack",
            "haystack.abc",
            "haystack.abc.interfaces",
            "haystack.allocators",
            "haystack.allocators.heapwalker",
            "haystack.allocators.libc",
            "haystack.allocators.libc.ctypes_elf",
            "haystack.allocators.libc.ctypes_malloc",
            "haystack.allocators.libc.libcheapwalker",
            "haystack.allocators.libc.libdl",
            "haystack.allocators.libc.sandbox",
            "haystack.allocators.win32",
            "haystack.allocators.win32.win7_32",
            "haystack.allocators.win32.win7_64",
            "haystack.allocators.win32.win7heap",
            "haystack.allocators.win32.win7heapwalker",
            "haystack.allocators.win32.winheap",
            "haystack.allocators.win32.winheapwalker",
            "haystack.allocators.win32.winxp_32",
            "haystack.allocators.win32.winxp_32_peb",
            "haystack.allocators.win32.winxp_64",
            "haystack.allocators.win32.winxpheap",
            "haystack.allocators.win32.winxpheapwalker",
            "haystack.argparse_utils",
            "haystack.basicmodel",
            "haystack.cli",
            "haystack.cliwin",
            "haystack.constraints",
            "haystack.dbg",
            "haystack.dump_loader",
            "haystack.gui",
            "haystack.gui.addmodule",
            "haystack.gui.addmoduleview",
            "haystack.gui.gui",
            "haystack.gui.infomodel",
            "haystack.gui.mainwindow",
            "haystack.gui.memmaptab",
            "haystack.gui.qhexedit",
            "haystack.gui.searchStruct",
            "haystack.gui.searchinfoStruct",
            "haystack.gui.searchinfoview",
            "haystack.gui.searchview",
            "haystack.gui.statushandler",
            "haystack.gui.view",
            "haystack.gui.widgets",
            "haystack.listmodel",
            "haystack.mappings",
            "haystack.mappings.base",
            "haystack.mappings.cuckoo",
            "haystack.mappings.file",
            "haystack.mappings.minidump",
            "haystack.mappings.process",
            "haystack.mappings.rek",
            "haystack.mappings.vol",
            "haystack.mappings.vol2map",
            "haystack.memory_dumper",
            "haystack.model",
            "haystack.outputters",
            "haystack.outputters.python",
            "haystack.outputters.text",
            "haystack.reverse",
            "haystack.reverse.api",
            "haystack.reverse.cli",
            "haystack.reverse.config",
            "haystack.reverse.context",
            "haystack.reverse.diff",
            "haystack.reverse.enumerators",
            "haystack.reverse.fieldtypes",
            "haystack.reverse.graph",
            "haystack.reverse.heuristics",
            "haystack.reverse.heuristics.constraints",
            "haystack.reverse.heuristics.dsa",
            "haystack.reverse.heuristics.interfaces",
            "haystack.reverse.heuristics.model",
            "haystack.reverse.heuristics.pointertypes",
            "haystack.reverse.heuristics.radare",
            "haystack.reverse.heuristics.reversers",
            "haystack.reverse.heuristics.signature",
            "haystack.reverse.lrucache",
            "haystack.reverse.matchers",
            "haystack.reverse.pattern",
            "haystack.reverse.re_string",
            "haystack.reverse.searchers",
            "haystack.reverse.structure",
            "haystack.reverse.utils",
            "haystack.search",
            "haystack.search.api",
            "haystack.search.searcher",
            "haystack.target",
            "haystack.types",
            "haystack.utils",
            "haystack.win-dump-heap"
        ],
        "version": "0.36"
    },
    "haystack-bio": {
        "cmdline": [],
        "modules": [
            "haystack",
            "haystack.bioutilities",
            "haystack.external",
            "haystack.haystack_common",
            "haystack.haystack_download_genome_CORE",
            "haystack.haystack_hotspots_CORE",
            "haystack.haystack_motifs_CORE",
            "haystack.haystack_pipeline_CORE",
            "haystack.haystack_tf_activity_plane_CORE"
        ],
        "version": "0.4.0"
    },
    "haystack-myisam": {
        "cmdline": [],
        "modules": [
            "haystackmyisam",
            "haystackmyisam.models",
            "haystackmyisam.myisam_backend"
        ],
        "version": "0.0.3"
    },
    "haystack-queryparser": {
        "cmdline": [],
        "modules": [
            "haystack_queryparser",
            "haystack_queryparser.haystack_queryparser",
            "haystack_queryparser.tests"
        ],
        "version": "0.2.1"
    },
    "haz": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "haze": {
        "cmdline": [],
        "modules": [
            "haze",
            "haze.cli",
            "haze.cli.awsmetadata",
            "haze.cli.commands",
            "haze.cli.conductor",
            "haze.ec2"
        ],
        "version": "0.0.14"
    },
    "hazel": {
        "cmdline": [],
        "modules": [
            "hazel",
            "hazel.build",
            "hazel.cli",
            "hazel.config",
            "hazel.deploy",
            "hazel.load",
            "hazel.utils"
        ],
        "version": "0.4.5"
    },
    "hazelcast-python-client": {
        "cmdline": [],
        "modules": [
            "hazelcast",
            "hazelcast.client",
            "hazelcast.cluster",
            "hazelcast.config",
            "hazelcast.connection",
            "hazelcast.core",
            "hazelcast.exception",
            "hazelcast.future",
            "hazelcast.hash",
            "hazelcast.invocation",
            "hazelcast.lifecycle",
            "hazelcast.near_cache",
            "hazelcast.partition",
            "hazelcast.protocol",
            "hazelcast.protocol.client_message",
            "hazelcast.protocol.codec",
            "hazelcast.protocol.codec.atomic_long_add_and_get_codec",
            "hazelcast.protocol.codec.atomic_long_alter_and_get_codec",
            "hazelcast.protocol.codec.atomic_long_alter_codec",
            "hazelcast.protocol.codec.atomic_long_apply_codec",
            "hazelcast.protocol.codec.atomic_long_compare_and_set_codec",
            "hazelcast.protocol.codec.atomic_long_decrement_and_get_codec",
            "hazelcast.protocol.codec.atomic_long_get_and_add_codec",
            "hazelcast.protocol.codec.atomic_long_get_and_alter_codec",
            "hazelcast.protocol.codec.atomic_long_get_and_increment_codec",
            "hazelcast.protocol.codec.atomic_long_get_and_set_codec",
            "hazelcast.protocol.codec.atomic_long_get_codec",
            "hazelcast.protocol.codec.atomic_long_increment_and_get_codec",
            "hazelcast.protocol.codec.atomic_long_message_type",
            "hazelcast.protocol.codec.atomic_long_set_codec",
            "hazelcast.protocol.codec.atomic_reference_alter_and_get_codec",
            "hazelcast.protocol.codec.atomic_reference_alter_codec",
            "hazelcast.protocol.codec.atomic_reference_apply_codec",
            "hazelcast.protocol.codec.atomic_reference_clear_codec",
            "hazelcast.protocol.codec.atomic_reference_compare_and_set_codec",
            "hazelcast.protocol.codec.atomic_reference_contains_codec",
            "hazelcast.protocol.codec.atomic_reference_get_and_alter_codec",
            "hazelcast.protocol.codec.atomic_reference_get_and_set_codec",
            "hazelcast.protocol.codec.atomic_reference_get_codec",
            "hazelcast.protocol.codec.atomic_reference_is_null_codec",
            "hazelcast.protocol.codec.atomic_reference_message_type",
            "hazelcast.protocol.codec.atomic_reference_set_and_get_codec",
            "hazelcast.protocol.codec.atomic_reference_set_codec",
            "hazelcast.protocol.codec.client_add_distributed_object_listener_codec",
            "hazelcast.protocol.codec.client_add_membership_listener_codec",
            "hazelcast.protocol.codec.client_add_partition_lost_listener_codec",
            "hazelcast.protocol.codec.client_authentication_codec",
            "hazelcast.protocol.codec.client_authentication_custom_codec",
            "hazelcast.protocol.codec.client_create_proxy_codec",
            "hazelcast.protocol.codec.client_destroy_proxy_codec",
            "hazelcast.protocol.codec.client_get_distributed_objects_codec",
            "hazelcast.protocol.codec.client_get_partitions_codec",
            "hazelcast.protocol.codec.client_message_type",
            "hazelcast.protocol.codec.client_ping_codec",
            "hazelcast.protocol.codec.client_remove_all_listeners_codec",
            "hazelcast.protocol.codec.client_remove_distributed_object_listener_codec",
            "hazelcast.protocol.codec.client_remove_partition_lost_listener_codec",
            "hazelcast.protocol.codec.condition_await_codec",
            "hazelcast.protocol.codec.condition_before_await_codec",
            "hazelcast.protocol.codec.condition_message_type",
            "hazelcast.protocol.codec.condition_signal_all_codec",
            "hazelcast.protocol.codec.condition_signal_codec",
            "hazelcast.protocol.codec.count_down_latch_await_codec",
            "hazelcast.protocol.codec.count_down_latch_count_down_codec",
            "hazelcast.protocol.codec.count_down_latch_get_count_codec",
            "hazelcast.protocol.codec.count_down_latch_message_type",
            "hazelcast.protocol.codec.count_down_latch_try_set_count_codec",
            "hazelcast.protocol.codec.executor_service_cancel_on_address_codec",
            "hazelcast.protocol.codec.executor_service_cancel_on_partition_codec",
            "hazelcast.protocol.codec.executor_service_is_shutdown_codec",
            "hazelcast.protocol.codec.executor_service_message_type",
            "hazelcast.protocol.codec.executor_service_shutdown_codec",
            "hazelcast.protocol.codec.executor_service_submit_to_address_codec",
            "hazelcast.protocol.codec.executor_service_submit_to_partition_codec",
            "hazelcast.protocol.codec.list_add_all_codec",
            "hazelcast.protocol.codec.list_add_all_with_index_codec",
            "hazelcast.protocol.codec.list_add_codec",
            "hazelcast.protocol.codec.list_add_listener_codec",
            "hazelcast.protocol.codec.list_add_with_index_codec",
            "hazelcast.protocol.codec.list_clear_codec",
            "hazelcast.protocol.codec.list_compare_and_remove_all_codec",
            "hazelcast.protocol.codec.list_compare_and_retain_all_codec",
            "hazelcast.protocol.codec.list_contains_all_codec",
            "hazelcast.protocol.codec.list_contains_codec",
            "hazelcast.protocol.codec.list_get_all_codec",
            "hazelcast.protocol.codec.list_get_codec",
            "hazelcast.protocol.codec.list_index_of_codec",
            "hazelcast.protocol.codec.list_is_empty_codec",
            "hazelcast.protocol.codec.list_iterator_codec",
            "hazelcast.protocol.codec.list_last_index_of_codec",
            "hazelcast.protocol.codec.list_list_iterator_codec",
            "hazelcast.protocol.codec.list_message_type",
            "hazelcast.protocol.codec.list_remove_codec",
            "hazelcast.protocol.codec.list_remove_listener_codec",
            "hazelcast.protocol.codec.list_remove_with_index_codec",
            "hazelcast.protocol.codec.list_set_codec",
            "hazelcast.protocol.codec.list_size_codec",
            "hazelcast.protocol.codec.list_sub_codec",
            "hazelcast.protocol.codec.lock_force_unlock_codec",
            "hazelcast.protocol.codec.lock_get_lock_count_codec",
            "hazelcast.protocol.codec.lock_get_remaining_lease_time_codec",
            "hazelcast.protocol.codec.lock_is_locked_by_current_thread_codec",
            "hazelcast.protocol.codec.lock_is_locked_codec",
            "hazelcast.protocol.codec.lock_lock_codec",
            "hazelcast.protocol.codec.lock_message_type",
            "hazelcast.protocol.codec.lock_try_lock_codec",
            "hazelcast.protocol.codec.lock_unlock_codec",
            "hazelcast.protocol.codec.map_add_entry_listener_codec",
            "hazelcast.protocol.codec.map_add_entry_listener_to_key_codec",
            "hazelcast.protocol.codec.map_add_entry_listener_to_key_with_predicate_codec",
            "hazelcast.protocol.codec.map_add_entry_listener_with_predicate_codec",
            "hazelcast.protocol.codec.map_add_index_codec",
            "hazelcast.protocol.codec.map_add_interceptor_codec",
            "hazelcast.protocol.codec.map_add_near_cache_entry_listener_codec",
            "hazelcast.protocol.codec.map_add_partition_lost_listener_codec",
            "hazelcast.protocol.codec.map_clear_codec",
            "hazelcast.protocol.codec.map_clear_near_cache_codec",
            "hazelcast.protocol.codec.map_contains_key_codec",
            "hazelcast.protocol.codec.map_contains_value_codec",
            "hazelcast.protocol.codec.map_delete_codec",
            "hazelcast.protocol.codec.map_entries_with_paging_predicate_codec",
            "hazelcast.protocol.codec.map_entries_with_predicate_codec",
            "hazelcast.protocol.codec.map_entry_set_codec",
            "hazelcast.protocol.codec.map_evict_all_codec",
            "hazelcast.protocol.codec.map_evict_codec",
            "hazelcast.protocol.codec.map_execute_on_all_keys_codec",
            "hazelcast.protocol.codec.map_execute_on_key_codec",
            "hazelcast.protocol.codec.map_execute_on_keys_codec",
            "hazelcast.protocol.codec.map_execute_with_predicate_codec",
            "hazelcast.protocol.codec.map_flush_codec",
            "hazelcast.protocol.codec.map_force_unlock_codec",
            "hazelcast.protocol.codec.map_get_all_codec",
            "hazelcast.protocol.codec.map_get_codec",
            "hazelcast.protocol.codec.map_get_entry_view_codec",
            "hazelcast.protocol.codec.map_is_empty_codec",
            "hazelcast.protocol.codec.map_is_locked_codec",
            "hazelcast.protocol.codec.map_key_set_codec",
            "hazelcast.protocol.codec.map_key_set_with_paging_predicate_codec",
            "hazelcast.protocol.codec.map_key_set_with_predicate_codec",
            "hazelcast.protocol.codec.map_load_all_codec",
            "hazelcast.protocol.codec.map_load_given_keys_codec",
            "hazelcast.protocol.codec.map_lock_codec",
            "hazelcast.protocol.codec.map_message_type",
            "hazelcast.protocol.codec.map_put_all_codec",
            "hazelcast.protocol.codec.map_put_codec",
            "hazelcast.protocol.codec.map_put_if_absent_codec",
            "hazelcast.protocol.codec.map_put_transient_codec",
            "hazelcast.protocol.codec.map_remove_codec",
            "hazelcast.protocol.codec.map_remove_entry_listener_codec",
            "hazelcast.protocol.codec.map_remove_if_same_codec",
            "hazelcast.protocol.codec.map_remove_interceptor_codec",
            "hazelcast.protocol.codec.map_remove_partition_lost_listener_codec",
            "hazelcast.protocol.codec.map_replace_codec",
            "hazelcast.protocol.codec.map_replace_if_same_codec",
            "hazelcast.protocol.codec.map_set_codec",
            "hazelcast.protocol.codec.map_size_codec",
            "hazelcast.protocol.codec.map_try_lock_codec",
            "hazelcast.protocol.codec.map_try_put_codec",
            "hazelcast.protocol.codec.map_try_remove_codec",
            "hazelcast.protocol.codec.map_unlock_codec",
            "hazelcast.protocol.codec.map_values_codec",
            "hazelcast.protocol.codec.map_values_with_paging_predicate_codec",
            "hazelcast.protocol.codec.map_values_with_predicate_codec",
            "hazelcast.protocol.codec.multi_map_add_entry_listener_codec",
            "hazelcast.protocol.codec.multi_map_add_entry_listener_to_key_codec",
            "hazelcast.protocol.codec.multi_map_clear_codec",
            "hazelcast.protocol.codec.multi_map_contains_entry_codec",
            "hazelcast.protocol.codec.multi_map_contains_key_codec",
            "hazelcast.protocol.codec.multi_map_contains_value_codec",
            "hazelcast.protocol.codec.multi_map_entry_set_codec",
            "hazelcast.protocol.codec.multi_map_force_unlock_codec",
            "hazelcast.protocol.codec.multi_map_get_codec",
            "hazelcast.protocol.codec.multi_map_is_locked_codec",
            "hazelcast.protocol.codec.multi_map_key_set_codec",
            "hazelcast.protocol.codec.multi_map_lock_codec",
            "hazelcast.protocol.codec.multi_map_message_type",
            "hazelcast.protocol.codec.multi_map_put_codec",
            "hazelcast.protocol.codec.multi_map_remove_codec",
            "hazelcast.protocol.codec.multi_map_remove_entry_codec",
            "hazelcast.protocol.codec.multi_map_remove_entry_listener_codec",
            "hazelcast.protocol.codec.multi_map_size_codec",
            "hazelcast.protocol.codec.multi_map_try_lock_codec",
            "hazelcast.protocol.codec.multi_map_unlock_codec",
            "hazelcast.protocol.codec.multi_map_value_count_codec",
            "hazelcast.protocol.codec.multi_map_values_codec",
            "hazelcast.protocol.codec.queue_add_all_codec",
            "hazelcast.protocol.codec.queue_add_listener_codec",
            "hazelcast.protocol.codec.queue_clear_codec",
            "hazelcast.protocol.codec.queue_compare_and_remove_all_codec",
            "hazelcast.protocol.codec.queue_compare_and_retain_all_codec",
            "hazelcast.protocol.codec.queue_contains_all_codec",
            "hazelcast.protocol.codec.queue_contains_codec",
            "hazelcast.protocol.codec.queue_drain_to_codec",
            "hazelcast.protocol.codec.queue_drain_to_max_size_codec",
            "hazelcast.protocol.codec.queue_is_empty_codec",
            "hazelcast.protocol.codec.queue_iterator_codec",
            "hazelcast.protocol.codec.queue_message_type",
            "hazelcast.protocol.codec.queue_offer_codec",
            "hazelcast.protocol.codec.queue_peek_codec",
            "hazelcast.protocol.codec.queue_poll_codec",
            "hazelcast.protocol.codec.queue_put_codec",
            "hazelcast.protocol.codec.queue_remaining_capacity_codec",
            "hazelcast.protocol.codec.queue_remove_codec",
            "hazelcast.protocol.codec.queue_remove_listener_codec",
            "hazelcast.protocol.codec.queue_size_codec",
            "hazelcast.protocol.codec.queue_take_codec",
            "hazelcast.protocol.codec.replicated_map_add_entry_listener_codec",
            "hazelcast.protocol.codec.replicated_map_add_entry_listener_to_key_codec",
            "hazelcast.protocol.codec.replicated_map_add_entry_listener_to_key_with_predicate_codec",
            "hazelcast.protocol.codec.replicated_map_add_entry_listener_with_predicate_codec",
            "hazelcast.protocol.codec.replicated_map_add_near_cache_entry_listener_codec",
            "hazelcast.protocol.codec.replicated_map_clear_codec",
            "hazelcast.protocol.codec.replicated_map_contains_key_codec",
            "hazelcast.protocol.codec.replicated_map_contains_value_codec",
            "hazelcast.protocol.codec.replicated_map_entry_set_codec",
            "hazelcast.protocol.codec.replicated_map_get_codec",
            "hazelcast.protocol.codec.replicated_map_is_empty_codec",
            "hazelcast.protocol.codec.replicated_map_key_set_codec",
            "hazelcast.protocol.codec.replicated_map_message_type",
            "hazelcast.protocol.codec.replicated_map_put_all_codec",
            "hazelcast.protocol.codec.replicated_map_put_codec",
            "hazelcast.protocol.codec.replicated_map_remove_codec",
            "hazelcast.protocol.codec.replicated_map_remove_entry_listener_codec",
            "hazelcast.protocol.codec.replicated_map_size_codec",
            "hazelcast.protocol.codec.replicated_map_values_codec",
            "hazelcast.protocol.codec.ringbuffer_add_all_codec",
            "hazelcast.protocol.codec.ringbuffer_add_codec",
            "hazelcast.protocol.codec.ringbuffer_capacity_codec",
            "hazelcast.protocol.codec.ringbuffer_head_sequence_codec",
            "hazelcast.protocol.codec.ringbuffer_message_type",
            "hazelcast.protocol.codec.ringbuffer_read_many_codec",
            "hazelcast.protocol.codec.ringbuffer_read_one_codec",
            "hazelcast.protocol.codec.ringbuffer_remaining_capacity_codec",
            "hazelcast.protocol.codec.ringbuffer_size_codec",
            "hazelcast.protocol.codec.ringbuffer_tail_sequence_codec",
            "hazelcast.protocol.codec.semaphore_acquire_codec",
            "hazelcast.protocol.codec.semaphore_available_permits_codec",
            "hazelcast.protocol.codec.semaphore_drain_permits_codec",
            "hazelcast.protocol.codec.semaphore_init_codec",
            "hazelcast.protocol.codec.semaphore_message_type",
            "hazelcast.protocol.codec.semaphore_reduce_permits_codec",
            "hazelcast.protocol.codec.semaphore_release_codec",
            "hazelcast.protocol.codec.semaphore_try_acquire_codec",
            "hazelcast.protocol.codec.set_add_all_codec",
            "hazelcast.protocol.codec.set_add_codec",
            "hazelcast.protocol.codec.set_add_listener_codec",
            "hazelcast.protocol.codec.set_clear_codec",
            "hazelcast.protocol.codec.set_compare_and_remove_all_codec",
            "hazelcast.protocol.codec.set_compare_and_retain_all_codec",
            "hazelcast.protocol.codec.set_contains_all_codec",
            "hazelcast.protocol.codec.set_contains_codec",
            "hazelcast.protocol.codec.set_get_all_codec",
            "hazelcast.protocol.codec.set_is_empty_codec",
            "hazelcast.protocol.codec.set_message_type",
            "hazelcast.protocol.codec.set_remove_codec",
            "hazelcast.protocol.codec.set_remove_listener_codec",
            "hazelcast.protocol.codec.set_size_codec",
            "hazelcast.protocol.codec.topic_add_message_listener_codec",
            "hazelcast.protocol.codec.topic_message_type",
            "hazelcast.protocol.codec.topic_publish_codec",
            "hazelcast.protocol.codec.topic_remove_message_listener_codec",
            "hazelcast.protocol.codec.transaction_commit_codec",
            "hazelcast.protocol.codec.transaction_create_codec",
            "hazelcast.protocol.codec.transaction_message_type",
            "hazelcast.protocol.codec.transaction_rollback_codec",
            "hazelcast.protocol.codec.transactional_list_add_codec",
            "hazelcast.protocol.codec.transactional_list_message_type",
            "hazelcast.protocol.codec.transactional_list_remove_codec",
            "hazelcast.protocol.codec.transactional_list_size_codec",
            "hazelcast.protocol.codec.transactional_map_contains_key_codec",
            "hazelcast.protocol.codec.transactional_map_delete_codec",
            "hazelcast.protocol.codec.transactional_map_get_codec",
            "hazelcast.protocol.codec.transactional_map_get_for_update_codec",
            "hazelcast.protocol.codec.transactional_map_is_empty_codec",
            "hazelcast.protocol.codec.transactional_map_key_set_codec",
            "hazelcast.protocol.codec.transactional_map_key_set_with_predicate_codec",
            "hazelcast.protocol.codec.transactional_map_message_type",
            "hazelcast.protocol.codec.transactional_map_put_codec",
            "hazelcast.protocol.codec.transactional_map_put_if_absent_codec",
            "hazelcast.protocol.codec.transactional_map_remove_codec",
            "hazelcast.protocol.codec.transactional_map_remove_if_same_codec",
            "hazelcast.protocol.codec.transactional_map_replace_codec",
            "hazelcast.protocol.codec.transactional_map_replace_if_same_codec",
            "hazelcast.protocol.codec.transactional_map_set_codec",
            "hazelcast.protocol.codec.transactional_map_size_codec",
            "hazelcast.protocol.codec.transactional_map_values_codec",
            "hazelcast.protocol.codec.transactional_map_values_with_predicate_codec",
            "hazelcast.protocol.codec.transactional_multi_map_get_codec",
            "hazelcast.protocol.codec.transactional_multi_map_message_type",
            "hazelcast.protocol.codec.transactional_multi_map_put_codec",
            "hazelcast.protocol.codec.transactional_multi_map_remove_codec",
            "hazelcast.protocol.codec.transactional_multi_map_remove_entry_codec",
            "hazelcast.protocol.codec.transactional_multi_map_size_codec",
            "hazelcast.protocol.codec.transactional_multi_map_value_count_codec",
            "hazelcast.protocol.codec.transactional_queue_message_type",
            "hazelcast.protocol.codec.transactional_queue_offer_codec",
            "hazelcast.protocol.codec.transactional_queue_peek_codec",
            "hazelcast.protocol.codec.transactional_queue_poll_codec",
            "hazelcast.protocol.codec.transactional_queue_size_codec",
            "hazelcast.protocol.codec.transactional_queue_take_codec",
            "hazelcast.protocol.codec.transactional_set_add_codec",
            "hazelcast.protocol.codec.transactional_set_message_type",
            "hazelcast.protocol.codec.transactional_set_remove_codec",
            "hazelcast.protocol.codec.transactional_set_size_codec",
            "hazelcast.protocol.custom_codec",
            "hazelcast.protocol.error_codes",
            "hazelcast.protocol.event_response_const",
            "hazelcast.proxy",
            "hazelcast.proxy.atomic_long",
            "hazelcast.proxy.atomic_reference",
            "hazelcast.proxy.base",
            "hazelcast.proxy.count_down_latch",
            "hazelcast.proxy.executor",
            "hazelcast.proxy.id_generator",
            "hazelcast.proxy.list",
            "hazelcast.proxy.lock",
            "hazelcast.proxy.map",
            "hazelcast.proxy.multi_map",
            "hazelcast.proxy.queue",
            "hazelcast.proxy.reliable_topic",
            "hazelcast.proxy.replicated_map",
            "hazelcast.proxy.ringbuffer",
            "hazelcast.proxy.semaphore",
            "hazelcast.proxy.set",
            "hazelcast.proxy.topic",
            "hazelcast.proxy.transactional_list",
            "hazelcast.proxy.transactional_map",
            "hazelcast.proxy.transactional_multi_map",
            "hazelcast.proxy.transactional_queue",
            "hazelcast.proxy.transactional_set",
            "hazelcast.reactor",
            "hazelcast.serialization",
            "hazelcast.serialization.api",
            "hazelcast.serialization.base",
            "hazelcast.serialization.bits",
            "hazelcast.serialization.data",
            "hazelcast.serialization.input",
            "hazelcast.serialization.output",
            "hazelcast.serialization.portable",
            "hazelcast.serialization.portable.classdef",
            "hazelcast.serialization.portable.context",
            "hazelcast.serialization.portable.reader",
            "hazelcast.serialization.portable.serializer",
            "hazelcast.serialization.portable.writer",
            "hazelcast.serialization.predicate",
            "hazelcast.serialization.serialization_const",
            "hazelcast.serialization.serializer",
            "hazelcast.serialization.service",
            "hazelcast.transaction",
            "hazelcast.util"
        ],
        "version": "3.8.1"
    },
    "hazelcast-remote-controller": {
        "cmdline": [],
        "modules": [
            "hzrc",
            "hzrc.RemoteController",
            "hzrc.client",
            "hzrc.constants",
            "hzrc.ttypes"
        ],
        "version": "0.1"
    },
    "hazelnut": {
        "cmdline": [],
        "modules": [
            "hazelnut",
            "hazelnut.core"
        ],
        "version": "0.4"
    },
    "hazinses": {
        "cmdline": [],
        "modules": [
            "hazinses",
            "hazinses.admin",
            "hazinses.hazinses",
            "hazinses.models",
            "hazinses.tasks",
            "hazinses.urls",
            "hazinses.views"
        ],
        "version": "0.5.2"
    },
    "hazm": {
        "cmdline": [],
        "modules": [
            "hazm",
            "hazm.BijankhanReader",
            "hazm.Chunker",
            "hazm.DadeganReader",
            "hazm.DependencyParser",
            "hazm.HamshahriReader",
            "hazm.Lemmatizer",
            "hazm.Normalizer",
            "hazm.POSTagger",
            "hazm.PersicaReader",
            "hazm.PeykareReader",
            "hazm.SentenceTokenizer",
            "hazm.SequenceTagger",
            "hazm.Stemmer",
            "hazm.TreebankReader",
            "hazm.VerbValencyReader",
            "hazm.WordTokenizer",
            "hazm.utils"
        ],
        "version": "0.5.2"
    },
    "hbase-thrift": {
        "cmdline": [],
        "modules": [
            "hbase",
            "hbase.Hbase",
            "hbase.constants",
            "hbase.ttypes"
        ],
        "version": "0.20.4"
    },
    "hbasepy": {
        "cmdline": [],
        "modules": [
            "hbasepy"
        ],
        "version": "0.1.1"
    },
    "hbcal": {
        "cmdline": [],
        "modules": [
            "hbcal",
            "hbcal.hebrew_calendar",
            "hbcal.hebrew_calendar.abs_time",
            "hbcal.hebrew_calendar.civil_year",
            "hbcal.hebrew_calendar.daf_yomi",
            "hbcal.hebrew_calendar.date",
            "hbcal.hebrew_calendar.hebrew_letters",
            "hbcal.hebrew_calendar.hebrew_year",
            "hbcal.hebrew_calendar.weekday",
            "hbcal.main",
            "hbcal.ordinal",
            "hbcal.version",
            "tests",
            "tests.test_setup",
            "tests.tests_hbcal",
            "tests.tests_hbcal.test_configuration_parameter",
            "tests.tests_hbcal.test_current_date",
            "tests.tests_hbcal.test_dafbind_parameter",
            "tests.tests_hbcal.test_date_cache",
            "tests.tests_hbcal.test_input_calendar",
            "tests.tests_hbcal.test_israel_parameter",
            "tests.tests_hbcal.test_molad_parameter",
            "tests.tests_hbcal.test_omer_parameter",
            "tests.tests_hbcal.test_ordinal",
            "tests.tests_hbcal.test_output_calendar",
            "tests.tests_hbcal.test_output_format",
            "tests.tests_hbcal.test_sedrah_parameter",
            "tests.tests_hbcal.utilities",
            "tests.tests_hebrew_calendar",
            "tests.tests_hebrew_calendar.test_abstime",
            "tests.tests_hebrew_calendar.test_british_year",
            "tests.tests_hebrew_calendar.test_daf_cycle",
            "tests.tests_hebrew_calendar.test_gregorian_year",
            "tests.tests_hebrew_calendar.test_hebrew_year",
            "tests.tests_hebrew_calendar.test_julian_year",
            "tests.tests_hebrew_calendar.test_omer",
            "tests.tests_hebrew_calendar.test_reltime",
            "tests.tests_hebrew_calendar.test_sedrah"
        ],
        "version": "0.8.0"
    },
    "hbcht": {
        "cmdline": [
            "hbcht"
        ],
        "modules": [
            "hbcht"
        ],
        "version": "0.1.1"
    },
    "hbfm": {
        "cmdline": [],
        "modules": [
            "hbfm",
            "hbfm.inline_coloring",
            "hbfm.inline_list",
            "hbfm.number_headers",
            "hbfm.quote_uri_hash",
            "hbfm.toc"
        ],
        "version": "0.0.3"
    },
    "hbi": {
        "cmdline": [],
        "modules": [
            "hbi",
            "hbi.buflist",
            "hbi.conn",
            "hbi.context",
            "hbi.exceptions",
            "hbi.sendctrl",
            "hbi.sockconn",
            "hbi.swsconn",
            "hbi.version"
        ],
        "version": "1.0"
    },
    "hblock": {
        "cmdline": [],
        "modules": [
            "hblock",
            "hblock.appindicator_replacement",
            "hblock.data"
        ],
        "version": "0.0.6"
    },
    "hbmqtt": {
        "cmdline": [],
        "modules": [
            "hbmqtt",
            "hbmqtt.adapters",
            "hbmqtt.broker",
            "hbmqtt.client",
            "hbmqtt.codecs",
            "hbmqtt.errors",
            "hbmqtt.mqtt",
            "hbmqtt.mqtt.connack",
            "hbmqtt.mqtt.connect",
            "hbmqtt.mqtt.constants",
            "hbmqtt.mqtt.disconnect",
            "hbmqtt.mqtt.packet",
            "hbmqtt.mqtt.pingreq",
            "hbmqtt.mqtt.pingresp",
            "hbmqtt.mqtt.protocol",
            "hbmqtt.mqtt.protocol.broker_handler",
            "hbmqtt.mqtt.protocol.client_handler",
            "hbmqtt.mqtt.protocol.handler",
            "hbmqtt.mqtt.puback",
            "hbmqtt.mqtt.pubcomp",
            "hbmqtt.mqtt.publish",
            "hbmqtt.mqtt.pubrec",
            "hbmqtt.mqtt.pubrel",
            "hbmqtt.mqtt.suback",
            "hbmqtt.mqtt.subscribe",
            "hbmqtt.mqtt.unsuback",
            "hbmqtt.mqtt.unsubscribe",
            "hbmqtt.plugins",
            "hbmqtt.plugins.authentication",
            "hbmqtt.plugins.logging",
            "hbmqtt.plugins.manager",
            "hbmqtt.plugins.persistence",
            "hbmqtt.plugins.sys",
            "hbmqtt.plugins.sys.broker",
            "hbmqtt.session",
            "hbmqtt.utils",
            "hbmqtt.version",
            "mqtt",
            "mqtt.protocol",
            "mqtt.protocol.test_handler",
            "mqtt.test_connect",
            "mqtt.test_packet",
            "mqtt.test_puback",
            "mqtt.test_pubcomp",
            "mqtt.test_publish",
            "mqtt.test_pubrec",
            "mqtt.test_pubrel",
            "mqtt.test_suback",
            "mqtt.test_subscribe",
            "mqtt.test_unsuback",
            "mqtt.test_unsubscribe",
            "plugins",
            "plugins.test_authentication",
            "plugins.test_manager",
            "plugins.test_persistence",
            "scripts",
            "scripts.broker_script",
            "scripts.pub_script",
            "scripts.sub_script"
        ],
        "version": "0.8"
    },
    "hbp-neuromorphic-platform": {
        "cmdline": [],
        "modules": [
            "nmpi",
            "nmpi.nmpi_user"
        ],
        "version": "0.5.0"
    },
    "hbp-service-client": {
        "cmdline": [],
        "modules": [
            "hbp_service_client",
            "hbp_service_client.client",
            "hbp_service_client.document_service",
            "hbp_service_client.document_service.client",
            "hbp_service_client.document_service.exceptions",
            "hbp_service_client.document_service.requestor",
            "hbp_service_client.document_service.service_locator",
            "hbp_service_client.version"
        ],
        "version": "0.0.2"
    },
    "hbp-sphinx-theme": {
        "cmdline": [],
        "modules": [
            "hbp_sphinx_theme"
        ],
        "version": "0.3.4"
    },
    "hbric": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hbtee-test": {
        "cmdline": [],
        "modules": [
            "HBTee_test"
        ],
        "version": "1.3.0"
    },
    "hbvpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hc": {
        "cmdline": [],
        "modules": [
            "hc",
            "hc._meta",
            "hc.cli",
            "hc.datatypes",
            "hc.defaults",
            "hc.helpers",
            "hc.opening_hours_js",
            "hc.schulferien_org",
            "hc.yaml"
        ],
        "version": "0.1.0"
    },
    "hcache": {
        "cmdline": [],
        "modules": [
            "hcache",
            "hcache.hcache"
        ],
        "version": "1.0.3"
    },
    "hcbl": {
        "cmdline": [],
        "modules": [
            "hcbl",
            "hcbl.Hachi_filter",
            "hcbl.blacklist",
            "hcbl.test_for_bl",
            "hcbl.wu_manber"
        ],
        "version": "0.0.2"
    },
    "hccencoding": {
        "cmdline": [],
        "modules": [
            "hccEncoding",
            "hccEncoding.EncoderForClassification",
            "hccEncoding.EncoderForRegression"
        ],
        "version": "0.0.1"
    },
    "hcct": {
        "cmdline": [],
        "modules": [
            "hcct",
            "hcct.Hachi_filter",
            "hcct.contact",
            "hcct.test_for_contact"
        ],
        "version": "0.0.3"
    },
    "hchk": {
        "cmdline": [],
        "modules": [
            "hchk",
            "hchk.cli"
        ],
        "version": "0.1.4"
    },
    "hcl-exception.py": {
        "cmdline": [],
        "modules": [
            "hcl_exception"
        ],
        "version": "1.0.0"
    },
    "hcls-fhir-rdf": {
        "cmdline": [
            "download_fhir_spec",
            "generate_rdf",
            "generate_shex",
            "generate_xml_definitions"
        ],
        "modules": [
            "hcls_fhir_rdf",
            "hcls_fhir_rdf.defaults",
            "hcls_fhir_rdf.fhir_elements",
            "hcls_fhir_rdf.fhir_types",
            "hcls_fhir_rdf.namespaces",
            "hcls_fhir_rdf.rdflib_formats",
            "hcls_fhir_rdf.utils"
        ],
        "version": "0.1.3"
    },
    "hcluster": {
        "cmdline": [],
        "modules": [
            "hcluster",
            "hcluster.distance",
            "hcluster.hierarchy"
        ],
        "version": "0.2.0"
    },
    "hcml": {
        "cmdline": [],
        "modules": [
            "hcml",
            "hcml.Hachi_filter",
            "hcml.meaningless",
            "hcml.test_for_ml"
        ],
        "version": "0.0.1"
    },
    "hcnb": {
        "cmdline": [],
        "modules": [
            "hcnb",
            "hcnb.Hachi_filter",
            "hcnb.bayes",
            "hcnb.test_for_nb"
        ],
        "version": "0.0.1"
    },
    "hconf": {
        "cmdline": [],
        "modules": [
            "hconf",
            "hconf.Config",
            "hconf.Exceptions",
            "hconf.Subparsers",
            "hconf.Subparsers._subparser",
            "hconf.Subparsers.cmdline",
            "hconf.Subparsers.dictionary",
            "hconf.Subparsers.ini",
            "hconf.Subparsers.json_",
            "hconf.Subparsers.yaml_"
        ],
        "version": "0.0.2"
    },
    "hcp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hcpcbc": {
        "cmdline": [],
        "modules": [
            "charts",
            "charts.init",
            "charts.prep",
            "charts.xlsx",
            "hcpcbc",
            "hcpcbc.cbhandler",
            "hcpcbc.charthandler",
            "hcpcbc.init",
            "hcpcbc.template",
            "hcpcbc.tenants"
        ],
        "version": "2.1.4"
    },
    "hcplogs": {
        "cmdline": [],
        "modules": [
            "hcplogs",
            "hcplogs.init",
            "hcplogs.loghandler",
            "hcplogs.template"
        ],
        "version": "2.0.9"
    },
    "hcpre": {
        "cmdline": [],
        "modules": [
            "hcpre",
            "hcpre.config",
            "hcpre.duke_siemens",
            "hcpre.duke_siemens.constants",
            "hcpre.duke_siemens.util_dicom_siemens",
            "hcpre.duke_siemens.util_mrs_file",
            "hcpre.hcpipe",
            "hcpre.interfaces",
            "hcpre.util",
            "hcpre.workflows"
        ],
        "version": "0.5.5"
    },
    "hcpsdk": {
        "cmdline": [],
        "modules": [
            "hcpsdk",
            "hcpsdk.httpclient",
            "hcpsdk.ips",
            "hcpsdk.mapi",
            "hcpsdk.mapi.chargeback",
            "hcpsdk.mapi.logs",
            "hcpsdk.mapi.replication",
            "hcpsdk.mapi.tenant",
            "hcpsdk.namespace",
            "hcpsdk.pathbuilder",
            "hcpsdk.version",
            "tests",
            "tests.failtest",
            "tests.idletimertest",
            "tests.init_tests",
            "tests.loadtest",
            "tests.nsstatstest",
            "tests.replicatest",
            "tests.retrytest",
            "tests.test_010_ips",
            "tests.test_020_hcpsdk",
            "tests.test_021_hcpsdk_w_certs",
            "tests.test_030_namespace",
            "tests.test_040_mapi_replication",
            "tests.test_041_mapi_logs",
            "tests.test_042_mapi_chargeback",
            "tests.test_043_mapi_tenant",
            "tests.test_050_pathbuilder",
            "tests.timeouttest",
            "tests.trysdk"
        ],
        "version": "0.9.4.post6"
    },
    "hcpt": {
        "cmdline": [],
        "modules": [
            "hcptcmds",
            "hcptcmds.hcpcookie",
            "hcptcmds.hcpf",
            "hcptcmds.hcpinit",
            "hcptcmds.hcplist",
            "hcptcmds.hcpload",
            "hcptcmds.hcpretention",
            "hcptcmds.hcptest",
            "hcptcmds.hcpunload",
            "hcptcmds.init"
        ],
        "version": "1.0.19"
    },
    "hcpupd": {
        "cmdline": [],
        "modules": [
            "hcpup",
            "hcpup.conf",
            "hcpup.conf-org",
            "hcpup.init",
            "hcpup.log",
            "hcpup.notify",
            "hcpup.queue",
            "hcpup.up"
        ],
        "version": "0.2.3"
    },
    "hcpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hcs-storage": {
        "cmdline": [],
        "modules": [],
        "version": "1.2"
    },
    "hcs-utils": {
        "cmdline": [],
        "modules": [
            "hcs_utils",
            "hcs_utils._version",
            "hcs_utils.collections",
            "hcs_utils.daemon",
            "hcs_utils.itemstore",
            "hcs_utils.json",
            "hcs_utils.lock",
            "hcs_utils.memoize",
            "hcs_utils.path",
            "hcs_utils.storage",
            "hcs_utils.test",
            "hcs_utils.test.test_collections",
            "hcs_utils.test.test_itemstore",
            "hcs_utils.test.test_json",
            "hcs_utils.test.test_lock",
            "hcs_utils.test.test_memoize",
            "hcs_utils.test.test_path",
            "hcs_utils.test.test_storage",
            "hcs_utils.test.test_unittest",
            "hcs_utils.threading",
            "hcs_utils.unittest"
        ],
        "version": "2.0"
    },
    "hcsr04sensor": {
        "cmdline": [],
        "modules": [
            "hcsr04sensor",
            "hcsr04sensor.sensor"
        ],
        "version": "1.5.1"
    },
    "hcss": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.1"
    },
    "hcut": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.5"
    },
    "hcvcs": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "hd": {
        "cmdline": [],
        "modules": [
            "hd",
            "hd.hd",
            "hd.termsize"
        ],
        "version": "0.1.2"
    },
    "hd-es-tools": {
        "cmdline": [],
        "modules": [
            "hd_es_tools",
            "hd_es_tools.es_sync",
            "hd_es_tools.es_sync.fav_title_1_pgc",
            "hd_es_tools.es_sync.fav_title_1_pgc.fav_pgc_title",
            "hd_es_tools.es_sync.fav_title_2_recipe",
            "hd_es_tools.es_sync.fav_title_2_recipe.fav_recipe_title",
            "hd_es_tools.es_sync.fav_title_3_favdir",
            "hd_es_tools.es_sync.fav_title_3_favdir.fav_dir_title",
            "hd_es_tools.es_sync.fav_title_sync",
            "hd_es_tools.es_sync.fav_title_sync.task_sync_fav_title",
            "hd_es_tools.mongo_connector_doc_managers",
            "hd_es_tools.mongo_connector_doc_managers.elastic5_doc_manager",
            "hd_es_tools.mongo_connector_doc_managers.formatters",
            "hd_es_tools.mongo_connector_doc_managers.formatters.fav_formatter",
            "hd_es_tools.mongo_connector_doc_managers.formatters_proxy",
            "hd_es_tools.tools"
        ],
        "version": "0.2.6"
    },
    "hd-stream-supernatural-season-11-episode-12-dont-you-forget-about-me": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hd44780": {
        "cmdline": [],
        "modules": [
            "hd44780",
            "hd44780.backends",
            "hd44780.inputs",
            "hd44780.lcd",
            "hd44780.metadata",
            "hd44780.utils"
        ],
        "version": "1.1.2"
    },
    "hdate": {
        "cmdline": [],
        "modules": [
            "hdate",
            "hdate.hdate_julian",
            "hdate.hdate_string",
            "hdate.htables"
        ],
        "version": "0.2"
    },
    "hdbscan": {
        "cmdline": [],
        "modules": [
            "hdbscan",
            "hdbscan.hdbscan_",
            "hdbscan.plots",
            "hdbscan.prediction",
            "hdbscan.robust_single_linkage_",
            "hdbscan.validity"
        ],
        "version": "0.8.10"
    },
    "hdbscan-with-cosine-distance": {
        "cmdline": [],
        "modules": [
            "hdbscan",
            "hdbscan.hdbscan_",
            "hdbscan.plots",
            "hdbscan.robust_single_linkage_",
            "hdbscan.tests",
            "hdbscan.tests.test_hdbscan",
            "hdbscan.tests.test_rsl"
        ],
        "version": "0.8.1"
    },
    "hdd-stat": {
        "cmdline": [],
        "modules": [
            "hdd_stat",
            "hdd_stat.app",
            "hdd_stat.stat"
        ],
        "version": "1.1.0"
    },
    "hddfancontrol": {
        "cmdline": [],
        "modules": [
            "hddfancontrol",
            "hddfancontrol.bin_dep",
            "hddfancontrol.colored_logging"
        ],
        "version": "1.2.7"
    },
    "hddm": {
        "cmdline": [
            "hddm_demo.py"
        ],
        "modules": [
            "hddm",
            "hddm.MPLTraits",
            "hddm.MPLTraits_qt",
            "hddm.diag",
            "hddm.examples",
            "hddm.examples.plot_posterior_quantiles",
            "hddm.examples.postpred",
            "hddm.examples.simple_model",
            "hddm.generate",
            "hddm.likelihoods",
            "hddm.models",
            "hddm.models.base",
            "hddm.models.hddm_info",
            "hddm.models.hddm_regression",
            "hddm.models.hddm_stimcoding",
            "hddm.models.hddm_transformed",
            "hddm.models.hddm_truncated",
            "hddm.tests",
            "hddm.tests.benchmark",
            "hddm.tests.matlab_values",
            "hddm.tests.test_generate",
            "hddm.tests.test_likelihoods",
            "hddm.tests.test_models",
            "hddm.tests.test_optimization",
            "hddm.utils"
        ],
        "version": "0.6.1"
    },
    "hddtemp": {
        "cmdline": [],
        "modules": [
            "hddtemp"
        ],
        "version": "0.1.0"
    },
    "hdf-compass": {
        "cmdline": [],
        "modules": [
            "adios_model",
            "adios_model.model",
            "adios_model.test",
            "array_model",
            "array_model.model",
            "array_model.test",
            "asc_model",
            "asc_model.model",
            "asc_model.test",
            "bag_model",
            "bag_model.model",
            "bag_model.test",
            "compass_model",
            "compass_model.model",
            "compass_model.test",
            "compass_viewer",
            "compass_viewer.array",
            "compass_viewer.array.frame",
            "compass_viewer.array.plot",
            "compass_viewer.container",
            "compass_viewer.container.frame",
            "compass_viewer.container.list",
            "compass_viewer.events",
            "compass_viewer.frame",
            "compass_viewer.geo_array",
            "compass_viewer.geo_array.frame",
            "compass_viewer.geo_array.plot",
            "compass_viewer.geo_surface",
            "compass_viewer.geo_surface.frame",
            "compass_viewer.geo_surface.plot",
            "compass_viewer.image",
            "compass_viewer.image.frame",
            "compass_viewer.info",
            "compass_viewer.keyvalue",
            "compass_viewer.keyvalue.frame",
            "compass_viewer.text",
            "compass_viewer.text.frame",
            "compass_viewer.text.text_ctrl",
            "compass_viewer.viewer",
            "filesystem_model",
            "filesystem_model.model",
            "filesystem_model.test",
            "hdf5_model",
            "hdf5_model.model",
            "hdf5_model.test",
            "hdf5rest_model",
            "hdf5rest_model.hdf5dtype",
            "hdf5rest_model.model",
            "hdf5rest_model.test",
            "opendap_model",
            "opendap_model.model",
            "opendap_model.test",
            "utils",
            "utils.utils"
        ],
        "version": "0.7b3"
    },
    "hdf5-django": {
        "cmdline": [],
        "modules": [
            "h5dj",
            "h5dj.models",
            "h5dj.storage",
            "tests",
            "tests.h5dj_tests",
            "tests.h5dj_tests.tests",
            "tests.runtests",
            "tests.test_settings"
        ],
        "version": "0.1.2"
    },
    "hdf5-matlab-reader": {
        "cmdline": [],
        "modules": [
            "hdf5_matlab_reader",
            "hdf5_matlab_reader.empty_matrix",
            "hdf5_matlab_reader.matlab_reader",
            "hdf5_matlab_reader.tree_printer"
        ],
        "version": "0.1.2"
    },
    "hdf5able": {
        "cmdline": [],
        "modules": [
            "hdf5able",
            "hdf5able._version",
            "hdf5able.base",
            "hdf5able.callable",
            "hdf5able.test",
            "hdf5able.test.testbasetypes",
            "hdf5able.test.testcallable",
            "hdf5able.test.testhdf5able"
        ],
        "version": "0.3.0"
    },
    "hdf5lazy": {
        "cmdline": [],
        "modules": [
            "hdf5lazy",
            "hdf5lazy.core"
        ],
        "version": "0.0.1"
    },
    "hdf5pickle": {
        "cmdline": [],
        "modules": [
            "hdf5pickle",
            "hdf5pickle.base"
        ],
        "version": "0.3"
    },
    "hdf5plugin": {
        "cmdline": [],
        "modules": [
            "hdf5plugin"
        ],
        "version": "1.4.0"
    },
    "hdf5storage": {
        "cmdline": [],
        "modules": [
            "hdf5storage",
            "hdf5storage.Marshallers",
            "hdf5storage.lowlevel",
            "hdf5storage.utilities"
        ],
        "version": "0.1.14"
    },
    "hdfconvert": {
        "cmdline": [],
        "modules": [
            "H5toImage"
        ],
        "version": "1.0.1"
    },
    "hdfdict": {
        "cmdline": [],
        "modules": [
            "hdfdict",
            "hdfdict.hdfdict"
        ],
        "version": "0.1.1alpha"
    },
    "hdfqs": {
        "cmdline": [],
        "modules": [
            "hdfqs"
        ],
        "version": "1.1.0"
    },
    "hdfs": {
        "cmdline": [],
        "modules": [
            "hdfs",
            "hdfs.client",
            "hdfs.config",
            "hdfs.ext",
            "hdfs.ext.avro",
            "hdfs.ext.dataframe",
            "hdfs.ext.kerberos",
            "hdfs.util"
        ],
        "version": "2.0.16"
    },
    "hdfs3": {
        "cmdline": [],
        "modules": [
            "hdfs3",
            "hdfs3.compatibility",
            "hdfs3.core",
            "hdfs3.lib",
            "hdfs3.mapping",
            "hdfs3.utils"
        ],
        "version": "0.1.4"
    },
    "hdfscontents": {
        "cmdline": [],
        "modules": [
            "hdfscontents",
            "hdfscontents.hdfscheckpoints",
            "hdfscontents.hdfsio",
            "hdfscontents.hdfsmanager",
            "tests",
            "tests.runall"
        ],
        "version": "0.4"
    },
    "hdhomerun": {
        "cmdline": [],
        "modules": [
            "hdhomerun",
            "hdhomerun.hdhomerun"
        ],
        "version": "0.2"
    },
    "hdhomerun-recorder": {
        "cmdline": [
            "hdhomerun_recorder",
            "hdhomerun_recorder_setup"
        ],
        "modules": [
            "hdhomerun_recorder",
            "hdhomerun_recorder.recorder",
            "hdhomerun_recorder.setup"
        ],
        "version": "0.1.0"
    },
    "hdidx": {
        "cmdline": [
            "hdidx_build",
            "hdidx_index",
            "test_cext.py",
            "test_indexer.py"
        ],
        "modules": [
            "hdidx",
            "hdidx.distance",
            "hdidx.encoder",
            "hdidx.encoder.pq",
            "hdidx.encoder.sh",
            "hdidx.indexer",
            "hdidx.indexer.hamming",
            "hdidx.indexer.vq",
            "hdidx.storage",
            "hdidx.storage.lmdb_storage",
            "hdidx.storage.mem_storage",
            "hdidx.util"
        ],
        "version": "0.2.8.1"
    },
    "hdijupyterutils": {
        "cmdline": [],
        "modules": [
            "hdijupyterutils",
            "hdijupyterutils.configuration",
            "hdijupyterutils.constants",
            "hdijupyterutils.events",
            "hdijupyterutils.eventshandler",
            "hdijupyterutils.filehandler",
            "hdijupyterutils.filesystemreaderwriter",
            "hdijupyterutils.guid",
            "hdijupyterutils.ipythondisplay",
            "hdijupyterutils.ipywidgetfactory",
            "hdijupyterutils.log",
            "hdijupyterutils.utils"
        ],
        "version": "0.11.4"
    },
    "hdl": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "hdlcontroller": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.1"
    },
    "hdlconvertor": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "hdmedians": {
        "cmdline": [],
        "modules": [
            "hdmedians",
            "hdmedians.medoid"
        ],
        "version": "0.13"
    },
    "hdmi2usb.modeswitch": {
        "cmdline": [],
        "modules": [
            "hdmi2usb",
            "hdmi2usb.modeswitch",
            "hdmi2usb.modeswitch._version",
            "hdmi2usb.modeswitch.base",
            "hdmi2usb.modeswitch.boards",
            "hdmi2usb.modeswitch.cli",
            "hdmi2usb.modeswitch.files",
            "hdmi2usb.modeswitch.libusb",
            "hdmi2usb.modeswitch.lsusb",
            "hdmi2usb.modeswitch.tests"
        ],
        "version": "0.0.0.post151"
    },
    "hdnester": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hdpwordseg": {
        "cmdline": [
            "hdpwordseg"
        ],
        "modules": [
            "hdp",
            "hdp.hdpwordseg",
            "hdp.ngram",
            "hdp.prob",
            "hdp.strdist",
            "hdp.topicdist",
            "hdp.topicngram",
            "hdp.wordseg"
        ],
        "version": "1.1.9"
    },
    "hdpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hdrhistogram": {
        "cmdline": [],
        "modules": [
            "hdrh",
            "hdrh.codec",
            "hdrh.histogram",
            "hdrh.iterators",
            "hdrh.log"
        ],
        "version": "0.5.2"
    },
    "hdsubnetfinder": {
        "cmdline": [],
        "modules": [
            "hdsubnetfinder",
            "hdsubnetfinder.kernel",
            "hdsubnetfinder.kernel.kernel",
            "hdsubnetfinder.kernel.kernel_generator",
            "hdsubnetfinder.kernel.kernel_util",
            "hdsubnetfinder.subnetwork",
            "hdsubnetfinder.subnetwork.network_util",
            "hdsubnetfinder.subnetwork.sub_network_finder",
            "tests",
            "tests.resource",
            "tests.test_kernel",
            "tests.test_kernel_generator",
            "tests.test_network_util",
            "tests.test_sub_network_finder"
        ],
        "version": "0.2.2"
    },
    "hdu": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hdv-dummy": {
        "cmdline": [],
        "modules": [
            "hdv_dummy",
            "hdv_dummy.dummy"
        ],
        "version": "0.0.2"
    },
    "hdv-emails": {
        "cmdline": [],
        "modules": [
            "hdv_emails",
            "hdv_emails.mail"
        ],
        "version": "0.0.1"
    },
    "hdv-logging": {
        "cmdline": [],
        "modules": [
            "hdv_logging",
            "hdv_logging.logger"
        ],
        "version": "0.1.0"
    },
    "hdv-pyrun": {
        "cmdline": [],
        "modules": [
            "hdv_pyrun",
            "hdv_pyrun.api"
        ],
        "version": "0.1.1"
    },
    "hdv-scalr": {
        "cmdline": [],
        "modules": [
            "hdv_scalr",
            "hdv_scalr.api",
            "hdv_scalr.cli",
            "hdv_scalr.utils"
        ],
        "version": "0.1.0"
    },
    "hdv-sqlalchemywrapper": {
        "cmdline": [],
        "modules": [
            "hdv_sqlalchemywrapper",
            "hdv_sqlalchemywrapper.wrapper"
        ],
        "version": "0.0.5"
    },
    "hdwallet": {
        "cmdline": [],
        "modules": [
            "hdwallet",
            "hdwallet.base58",
            "hdwallet.bip32_test_vector",
            "hdwallet.curves",
            "hdwallet.hdwallet"
        ],
        "version": "0.3"
    },
    "hdx-data-freshness": {
        "cmdline": [],
        "modules": [
            "freshness",
            "freshness.database",
            "freshness.database.base",
            "freshness.database.dbdataset",
            "freshness.database.dbinfodataset",
            "freshness.database.dborganization",
            "freshness.database.dbresource",
            "freshness.database.dbrun",
            "freshness.datafreshness",
            "freshness.retrieval",
            "freshness.retry"
        ],
        "version": "0.84"
    },
    "hdx-python-api": {
        "cmdline": [],
        "modules": [
            "hdx",
            "hdx.configuration",
            "hdx.data",
            "hdx.data.dataset",
            "hdx.data.galleryitem",
            "hdx.data.hdxobject",
            "hdx.data.resource",
            "hdx.facades",
            "hdx.facades.hdx_scraperwiki",
            "hdx.facades.simple",
            "hdx.hdx_logging",
            "hdx.utilities",
            "hdx.utilities.dictandlist",
            "hdx.utilities.downloader",
            "hdx.utilities.loader",
            "hdx.utilities.location",
            "hdx.utilities.path"
        ],
        "version": "1.2.5"
    },
    "he-sdk-python": {
        "cmdline": [],
        "modules": [
            "hackerearth",
            "hackerearth.api_handlers",
            "hackerearth.parameters",
            "hackerearth.result",
            "hackerearth.settings",
            "hackerearth.test_api"
        ],
        "version": "0.3"
    },
    "he-update": {
        "cmdline": [],
        "modules": [
            "he_update"
        ],
        "version": "1.1"
    },
    "head": {
        "cmdline": [],
        "modules": [
            "Head"
        ],
        "version": "1.0.0"
    },
    "head-first": {
        "cmdline": [],
        "modules": [
            "head_first"
        ],
        "version": "1.4.1"
    },
    "head-first-python": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "head-first-python-upload-test": {
        "cmdline": [],
        "modules": [
            "test"
        ],
        "version": "1.0.0"
    },
    "head-firstpy": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "headache": {
        "cmdline": [],
        "modules": [
            "headache"
        ],
        "version": "0.1.0"
    },
    "headcache": {
        "cmdline": [],
        "modules": [
            "headcache",
            "headcache.file_watcher",
            "headcache.headcache",
            "headcache.md_parser",
            "headcache.search",
            "headcache.ui_components"
        ],
        "version": "0.1.2"
    },
    "header": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "header-detail-footer": {
        "cmdline": [],
        "modules": [],
        "version": "2.4"
    },
    "headercop": {
        "cmdline": [],
        "modules": [
            "headercop",
            "headercop.cli",
            "headercop.headercop"
        ],
        "version": "0.1.1"
    },
    "headerparser": {
        "cmdline": [],
        "modules": [
            "headerparser",
            "headerparser.errors",
            "headerparser.normdict",
            "headerparser.parser",
            "headerparser.scanner",
            "headerparser.types",
            "headerparser.util"
        ],
        "version": "0.1.0"
    },
    "headers-workaround": {
        "cmdline": [],
        "modules": [
            "headers_workaround"
        ],
        "version": "0.18"
    },
    "headfirst4": {
        "cmdline": [],
        "modules": [
            "headfirst4"
        ],
        "version": "1.0.0"
    },
    "headfirstex": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "headfirsttest1": {
        "cmdline": [],
        "modules": [
            "HeadFirstTest1"
        ],
        "version": "1.2.0"
    },
    "headhorn": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "headhunter": {
        "cmdline": [],
        "modules": [
            "headhunter",
            "headhunter.manager",
            "headhunter.runner"
        ],
        "version": "0.0.1"
    },
    "headhunterru": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "headintheclouds": {
        "cmdline": [],
        "modules": [
            "headintheclouds",
            "headintheclouds.boot2docker",
            "headintheclouds.cache",
            "headintheclouds.dependencies",
            "headintheclouds.dependencies.PyDbLite",
            "headintheclouds.dependencies.PyDbLite.MySQL",
            "headintheclouds.dependencies.PyDbLite.PyDbLite",
            "headintheclouds.dependencies.PyDbLite.PyDbLiteConv",
            "headintheclouds.dependencies.PyDbLite.PyDbLite_SQL",
            "headintheclouds.dependencies.PyDbLite.PyDbLite_conversions",
            "headintheclouds.dependencies.PyDbLite.SQLite",
            "headintheclouds.docker",
            "headintheclouds.ec2",
            "headintheclouds.ensemble",
            "headintheclouds.ensemble.container",
            "headintheclouds.ensemble.create",
            "headintheclouds.ensemble.dependency",
            "headintheclouds.ensemble.dependencygraph",
            "headintheclouds.ensemble.exceptions",
            "headintheclouds.ensemble.firewall",
            "headintheclouds.ensemble.parse",
            "headintheclouds.ensemble.remote",
            "headintheclouds.ensemble.server",
            "headintheclouds.ensemble.tasks",
            "headintheclouds.ensemble.thing",
            "headintheclouds.ensemble.thingindex",
            "headintheclouds.firewall",
            "headintheclouds.gcp",
            "headintheclouds.tasks",
            "headintheclouds.unmanaged",
            "headintheclouds.util"
        ],
        "version": "0.8.3"
    },
    "headjack": {
        "cmdline": [],
        "modules": [
            "headjack",
            "headjack.__version__",
            "headjack.archiver",
            "headjack.archiver.devonthink",
            "headjack.archiver.docs",
            "headjack.archiver.marvin",
            "headjack.archiver.papers",
            "headjack.archiver.tests",
            "headjack.archiver.tests.test_devonthink",
            "headjack.archiver.tests.test_docs",
            "headjack.archiver.tests.test_marvin",
            "headjack.archiver.tests.test_papers",
            "headjack.archiver.tests.tmp",
            "headjack.cl_utils",
            "headjack.commonutils",
            "headjack.commonutils.getpackagepath",
            "headjack.read",
            "headjack.read.convertKindleNB",
            "headjack.read.generate_web_article_epubs",
            "headjack.read.sendToKindle",
            "headjack.read.tests",
            "headjack.read.tests.test_convertKindleNB",
            "headjack.read.tests.test_generate_web_article_epubs",
            "headjack.read.tests.test_sendToKindle",
            "headjack.tests",
            "headjack.utKit"
        ],
        "version": "0.8.6"
    },
    "headlessvim": {
        "cmdline": [],
        "modules": [
            "headlessvim",
            "headlessvim._version",
            "headlessvim.arguments",
            "headlessvim.process",
            "headlessvim.runtimepath"
        ],
        "version": "0.0.5"
    },
    "headspin-cli": {
        "cmdline": [],
        "modules": [
            "headspin_cli",
            "headspin_cli.api",
            "headspin_cli.cli",
            "headspin_cli.config",
            "headspin_cli.connect_method"
        ],
        "version": "0.4.1"
    },
    "headstock": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "headsup": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "healpix": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "healpy": {
        "cmdline": [],
        "modules": [
            "healpy",
            "healpy.cookbook",
            "healpy.fitsfunc",
            "healpy.newvisufunc",
            "healpy.pixelfunc",
            "healpy.projaxes",
            "healpy.projector",
            "healpy.rotator",
            "healpy.sphtfunc",
            "healpy.test",
            "healpy.test.test_doctest_cython",
            "healpy.test.test_fitsfunc",
            "healpy.test.test_pixelfunc",
            "healpy.test.test_query_disc",
            "healpy.test.test_sphtfunc",
            "healpy.test.test_spinfunc",
            "healpy.test.test_visufunc",
            "healpy.version",
            "healpy.visufunc",
            "healpy.zoomtool"
        ],
        "version": "1.10.3"
    },
    "health": {
        "cmdline": [],
        "modules": [
            "health",
            "health.c2v",
            "health.codes",
            "health.utils"
        ],
        "version": "1.4"
    },
    "health-check": {
        "cmdline": [],
        "modules": [
            "health_check",
            "health_check.api",
            "health_check.api.mixins",
            "health_check.api.urls",
            "health_check.api.views",
            "health_check.apps",
            "health_check.commands",
            "health_check.management",
            "health_check.management.commands",
            "health_check.management.commands.health_check",
            "health_check.providers",
            "health_check.providers.base",
            "health_check.providers.celery",
            "health_check.providers.celery.health",
            "health_check.providers.celery.stats",
            "health_check.providers.django",
            "health_check.providers.django.health",
            "health_check.providers.django.stats",
            "health_check.providers.health",
            "health_check.providers.stats",
            "health_check.settings",
            "health_check.urls",
            "health_check.utils",
            "tests"
        ],
        "version": "3.1.0"
    },
    "health-checker": {
        "cmdline": [],
        "modules": [
            "healthchecker",
            "healthchecker.async",
            "healthchecker.checker"
        ],
        "version": "0.1.1"
    },
    "health-monitoring-plugins": {
        "cmdline": [
            "check_meinberg_ntp.py",
            "check_moxa_6000.py",
            "check_snmp_idrac.py",
            "check_snmp_ilo4.py",
            "check_snmp_janitza.py",
            "check_snmp_large_storage.py",
            "check_snmp_port.py",
            "check_snmp_raritan.py",
            "check_snmp_service.py",
            "check_snmp_teledyne.py",
            "check_snmp_time2.py",
            "check_snmp_ubiquiti.py",
            "snmpSessionBaseClass.py"
        ],
        "modules": [
            "health_monitoring_plugins",
            "health_monitoring_plugins.check_meinberg_ntp",
            "health_monitoring_plugins.check_meinberg_ntp.check_meinberg_ntp",
            "health_monitoring_plugins.check_moxa_6000",
            "health_monitoring_plugins.check_moxa_6000.check_moxa_6000",
            "health_monitoring_plugins.check_snmp_idrac",
            "health_monitoring_plugins.check_snmp_idrac.check_snmp_idrac",
            "health_monitoring_plugins.check_snmp_ilo4",
            "health_monitoring_plugins.check_snmp_ilo4.check_snmp_ilo4",
            "health_monitoring_plugins.check_snmp_large_storage",
            "health_monitoring_plugins.check_snmp_large_storage.check_snmp_large_storage",
            "health_monitoring_plugins.check_snmp_port",
            "health_monitoring_plugins.check_snmp_port.check_snmp_port",
            "health_monitoring_plugins.check_snmp_raritan",
            "health_monitoring_plugins.check_snmp_raritan.check_snmp_raritan",
            "health_monitoring_plugins.check_snmp_service",
            "health_monitoring_plugins.check_snmp_service.check_snmp_service",
            "health_monitoring_plugins.check_snmp_teledyne",
            "health_monitoring_plugins.check_snmp_teledyne.check_snmp_teledyne",
            "health_monitoring_plugins.check_snmp_time2",
            "health_monitoring_plugins.check_snmp_time2.check_snmp_time2",
            "health_monitoring_plugins.snmpSessionBaseClass",
            "test",
            "test.test_check_meinberg_ntp",
            "test.test_check_moxa_6000",
            "test.test_check_snmp_idrac",
            "test.test_check_snmp_ilo4",
            "test.test_check_snmp_janitza",
            "test.test_check_snmp_large_storage",
            "test.test_check_snmp_port",
            "test.test_check_snmp_raritan",
            "test.test_check_snmp_service",
            "test.test_check_snmp_teledyne",
            "test.test_check_snmp_time2",
            "test.test_check_snmp_ubiquiti",
            "test.test_snmpSessionBaseClass",
            "test.testagent",
            "test.testagent.eventloop",
            "test.testagent.masteragent",
            "test.testagent.netsnmpagent",
            "test.testagent.netsnmpapi",
            "test.testagent.snmp_fd"
        ],
        "version": "0.0.5"
    },
    "health-service": {
        "cmdline": [],
        "modules": [
            "health_service",
            "health_service.admin",
            "health_service.lib",
            "health_service.lib.autocomplete_admin",
            "health_service.migrations",
            "health_service.migrations.0001_initial",
            "health_service.migrations.0002_auto_20170320_1024",
            "health_service.models",
            "health_service.tests",
            "health_service.urls"
        ],
        "version": "1.2"
    },
    "healthcareai": {
        "cmdline": [],
        "modules": [
            "healthcareai",
            "healthcareai.common",
            "healthcareai.common.filters",
            "healthcareai.common.model_eval",
            "healthcareai.common.transformers",
            "healthcareai.deploy_supervised_model",
            "healthcareai.develop_supervised_model",
            "healthcareai.supervised_model_trainer",
            "healthcareai.tests",
            "healthcareai.tests.helpers",
            "healthcareai.tests.test_deploy_supervised_model_class",
            "healthcareai.tests.test_dev_supervised_model_class",
            "healthcareai.tests.test_df_imputation_class"
        ],
        "version": "0.1.8"
    },
    "healthcareai-test": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "healthcheck": {
        "cmdline": [],
        "modules": [
            "healthcheck",
            "tests",
            "tests.test_unit",
            "tests.test_unit.test_healthcheck"
        ],
        "version": "1.3.1"
    },
    "healthgraph-api": {
        "cmdline": [],
        "modules": [
            "healthgraph",
            "healthgraph.authmgr",
            "healthgraph.content_type",
            "healthgraph.exceptions",
            "healthgraph.parser",
            "healthgraph.resources",
            "healthgraph.sessionmgr",
            "healthgraph.settings"
        ],
        "version": "0.3.0"
    },
    "healthy": {
        "cmdline": [],
        "modules": [
            "tests",
            "tests.test_healthy"
        ],
        "version": "0.1.2"
    },
    "heamon7-calc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heamon7-tushare": {
        "cmdline": [],
        "modules": [
            "tushare",
            "tushare.data",
            "tushare.datayes",
            "tushare.datayes.HKequity",
            "tushare.datayes.IV",
            "tushare.datayes.api",
            "tushare.datayes.bond",
            "tushare.datayes.equity",
            "tushare.datayes.fund",
            "tushare.datayes.fundamental",
            "tushare.datayes.future",
            "tushare.datayes.idx",
            "tushare.datayes.macro",
            "tushare.datayes.market",
            "tushare.datayes.master",
            "tushare.datayes.options",
            "tushare.datayes.subject",
            "tushare.fund",
            "tushare.fund.cons",
            "tushare.fund.nav",
            "tushare.futures",
            "tushare.futures.cons",
            "tushare.futures.intlfutures",
            "tushare.internet",
            "tushare.internet.boxoffice",
            "tushare.stock",
            "tushare.stock.billboard",
            "tushare.stock.classifying",
            "tushare.stock.cons",
            "tushare.stock.fundamental",
            "tushare.stock.globals",
            "tushare.stock.macro",
            "tushare.stock.macro_vars",
            "tushare.stock.news_vars",
            "tushare.stock.newsevent",
            "tushare.stock.ref_vars",
            "tushare.stock.reference",
            "tushare.stock.shibor",
            "tushare.stock.trading",
            "tushare.trader",
            "tushare.trader.trader",
            "tushare.trader.utils",
            "tushare.trader.vars",
            "tushare.util",
            "tushare.util.common",
            "tushare.util.dateu",
            "tushare.util.netbase",
            "tushare.util.store",
            "tushare.util.upass",
            "tushare.util.vars"
        ],
        "version": "0.1.0"
    },
    "heamy": {
        "cmdline": [],
        "modules": [
            "heamy",
            "heamy.cache",
            "heamy.dataset",
            "heamy.estimator",
            "heamy.feature",
            "heamy.pipeline",
            "heamy.utils",
            "heamy.utils.main",
            "heamy.utils.optimizer"
        ],
        "version": "0.0.7"
    },
    "heap": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heapdict": {
        "cmdline": [],
        "modules": [
            "heapdict"
        ],
        "version": "1.0.0"
    },
    "heaper": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heapq-max": {
        "cmdline": [],
        "modules": [
            "heapq_max",
            "heapq_max.heapq_max",
            "heapq_max.test"
        ],
        "version": "0.21"
    },
    "heapqueue": {
        "cmdline": [],
        "modules": [
            "heapqueue",
            "heapqueue.base_heap",
            "heapqueue.binary_heap",
            "heapqueue.binomial_heap",
            "heapqueue.fibonacci_heap"
        ],
        "version": "0.1b4"
    },
    "heapy": {
        "cmdline": [],
        "modules": [
            "heapy",
            "heapy.pqueue",
            "heapy.util"
        ],
        "version": "0.6"
    },
    "hearkinator": {
        "cmdline": [],
        "modules": [
            "hearkinator",
            "hearkinator.akinator_bot"
        ],
        "version": "1.0"
    },
    "hearplanetapi": {
        "cmdline": [],
        "modules": [
            "hearplanet",
            "hearplanet.api",
            "hearplanet.check_version",
            "hearplanet.config",
            "hearplanet.query",
            "hearplanet.query.base",
            "hearplanet.query.read",
            "hearplanet.query.table",
            "hearplanet.query.utf8_pprint"
        ],
        "version": "0.1.1"
    },
    "hearstpatterns": {
        "cmdline": [],
        "modules": [
            "hearstPatterns",
            "hearstPatterns.hearstPatterns"
        ],
        "version": "0.1.2"
    },
    "heartbank": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heartbeat": {
        "cmdline": [
            "heartbeat",
            "heartbeatd"
        ],
        "modules": [
            "hbeat",
            "hbeat.daemon",
            "hbeat.logging",
            "hbeat.logging.base",
            "hbeat.logging.instance",
            "hbeat.server"
        ],
        "version": "0.1.0"
    },
    "hearthstone": {
        "cmdline": [],
        "modules": [
            "hearthstone",
            "hearthstone.cardxml",
            "hearthstone.dbf",
            "hearthstone.deckstrings",
            "hearthstone.entities",
            "hearthstone.enums",
            "hearthstone.stringsfile",
            "hearthstone.utils",
            "tests",
            "tests.test_dbf",
            "tests.test_deckstrings"
        ],
        "version": "3.6.18792"
    },
    "hearthstonearenalogwatcher": {
        "cmdline": [],
        "modules": [
            "hearthstonearenalogwatcher"
        ],
        "version": "0.1.1"
    },
    "hearthstonecarddetector": {
        "cmdline": [],
        "modules": [
            "hearthstonecarddetector"
        ],
        "version": "0.1.4"
    },
    "heartland": {
        "cmdline": [],
        "modules": [
            "heartland",
            "heartland.e3reader",
            "heartland.posgateway"
        ],
        "version": "0.1"
    },
    "heartmath": {
        "cmdline": [],
        "modules": [
            "heartmath"
        ],
        "version": "1.0.0"
    },
    "hearts": {
        "cmdline": [],
        "modules": [
            "hearts",
            "hearts.axis",
            "hearts.bars",
            "hearts.chart",
            "hearts.datatype",
            "hearts.dots",
            "hearts.grid",
            "hearts.line",
            "hearts.linear",
            "hearts.ordinal",
            "hearts.scale",
            "hearts.scoreticker",
            "hearts.scoretimeticker",
            "hearts.series",
            "hearts.svg",
            "hearts.temporal",
            "hearts.theme",
            "hearts.ticker",
            "hearts.utils"
        ],
        "version": "0.0.0"
    },
    "heat-agents": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "heat-cfntools": {
        "cmdline": [],
        "modules": [
            "heat_cfntools",
            "heat_cfntools.cfntools",
            "heat_cfntools.cfntools.cfn_helper",
            "heat_cfntools.tests",
            "heat_cfntools.tests.test_cfn_helper",
            "heat_cfntools.tests.test_cfn_hup"
        ],
        "version": "1.4.2"
    },
    "heat-infoblox": {
        "cmdline": [],
        "modules": [
            "heat_infoblox",
            "heat_infoblox.config",
            "heat_infoblox.connector",
            "heat_infoblox.constants",
            "heat_infoblox.ibexceptions",
            "heat_infoblox.netmri_resource_mixin",
            "heat_infoblox.object_manipulator",
            "heat_infoblox.resource_utils",
            "heat_infoblox.resources",
            "heat_infoblox.resources.anycast_loopback",
            "heat_infoblox.resources.bgp",
            "heat_infoblox.resources.bgp_neighbor",
            "heat_infoblox.resources.grid_member",
            "heat_infoblox.resources.ha_pair",
            "heat_infoblox.resources.nameserver_group_member",
            "heat_infoblox.resources.netmri_job",
            "heat_infoblox.resources.netmri_managed_resource",
            "heat_infoblox.resources.ospf",
            "heat_infoblox.tests",
            "heat_infoblox.tests.test_bgp",
            "heat_infoblox.tests.test_bgp_neighbor",
            "heat_infoblox.tests.test_grid_member",
            "heat_infoblox.tests.test_ha_pair",
            "heat_infoblox.tests.test_nameserver_group_member",
            "heat_infoblox.tests.test_object_manipulator",
            "heat_infoblox.tests.test_ospf",
            "heat_infoblox.tests.test_resource_utils",
            "heat_infoblox.tests.utils"
        ],
        "version": "2.0.0"
    },
    "heat-translator": {
        "cmdline": [],
        "modules": [],
        "version": "0.8.0"
    },
    "heatherr": {
        "cmdline": [],
        "modules": [
            "heatherr",
            "heatherr.account",
            "heatherr.account.tests",
            "heatherr.account.tests.test_views",
            "heatherr.account.urls",
            "heatherr.account.views",
            "heatherr.admin",
            "heatherr.apps",
            "heatherr.groups",
            "heatherr.groups.admin",
            "heatherr.groups.commands",
            "heatherr.groups.migrations",
            "heatherr.groups.migrations.0001_initial",
            "heatherr.groups.models",
            "heatherr.groups.tests",
            "heatherr.groups.tests.test_commands",
            "heatherr.migrations",
            "heatherr.migrations.0001_initial",
            "heatherr.models",
            "heatherr.settings",
            "heatherr.tests",
            "heatherr.tests.base",
            "heatherr.tests.test_views",
            "heatherr.urls",
            "heatherr.views",
            "heatherr.wsgi"
        ],
        "version": "1.0.2"
    },
    "heatherrd": {
        "cmdline": [],
        "modules": [
            "heatherrd",
            "heatherrd.protocol",
            "heatherrd.relay",
            "heatherrd.server"
        ],
        "version": "1.0.0"
    },
    "heatmap": {
        "cmdline": [],
        "modules": [
            "heatmap",
            "heatmap.colorschemes",
            "heatmap.heatmap"
        ],
        "version": "2.2.1"
    },
    "heatmapcluster": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "heatmappy": {
        "cmdline": [],
        "modules": [
            "heatmappy",
            "heatmappy.heatmap",
            "heatmappy.video"
        ],
        "version": "0.2.6"
    },
    "heatmaps": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heatmiserv3": {
        "cmdline": [],
        "modules": [
            "heatmiserV3",
            "heatmiserV3.connection",
            "heatmiserV3.constants",
            "heatmiserV3.heatmiser"
        ],
        "version": "0.9.3"
    },
    "heatshrink": {
        "cmdline": [],
        "modules": [
            "heatshrink",
            "heatshrink.streams"
        ],
        "version": "0.3.2"
    },
    "heaviside": {
        "cmdline": [
            "heaviside"
        ],
        "modules": [
            "heaviside",
            "heaviside.activities",
            "heaviside.ast",
            "heaviside.exceptions",
            "heaviside.lexer",
            "heaviside.parser",
            "heaviside.sfn",
            "heaviside.utils"
        ],
        "version": "1.0"
    },
    "heavymouse": {
        "cmdline": [],
        "modules": [
            "heavymouse",
            "heavymouse.alternate_heavymouse",
            "heavymouse.heavymouse"
        ],
        "version": "1.2"
    },
    "hebe": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "hebel": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heboan": {
        "cmdline": [],
        "modules": [
            "heboan"
        ],
        "version": "1.0.0"
    },
    "hec": {
        "cmdline": [
            "hecs.py"
        ],
        "modules": [
            "hec",
            "hec.encryption",
            "hec.gui"
        ],
        "version": "0.0.5"
    },
    "hecate": {
        "cmdline": [],
        "modules": [
            "hecate",
            "hecate.hecate",
            "hecate.runner",
            "hecate.tmux",
            "hecate.version"
        ],
        "version": "0.1.0"
    },
    "heccer": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0-alpha"
    },
    "heconvert": {
        "cmdline": [],
        "modules": [
            "heconvert",
            "heconvert.converter",
            "heconvert.core",
            "heconvert.keyboard",
            "heconvert.keyboard.ksx5002",
            "heconvert.keyboard.ksx5002.core",
            "heconvert.keyboard.ksx5002.interface",
            "heconvert.keyboard.ksx5002.mapping",
            "heconvert.misc",
            "heconvert.misc.util",
            "test",
            "test.tests"
        ],
        "version": "1.0.0"
    },
    "heddex.cityportal": {
        "cmdline": [],
        "modules": [
            "heddex",
            "heddex.cityportal",
            "heddex.cityportal.browser",
            "heddex.cityportal.browser.interfaces",
            "heddex.cityportal.browser.viewlets",
            "heddex.cityportal.portlets",
            "heddex.cityportal.portlets.personaltools",
            "heddex.cityportal.setuphandlers",
            "heddex.cityportal.tests"
        ],
        "version": "2.0"
    },
    "heddex.greenfield": {
        "cmdline": [],
        "modules": [
            "heddex",
            "heddex.greenfield",
            "heddex.greenfield.browser",
            "heddex.greenfield.browser.interfaces",
            "heddex.greenfield.browser.viewlets",
            "heddex.greenfield.portlets",
            "heddex.greenfield.setuphandlers",
            "heddex.greenfield.tests"
        ],
        "version": "2.0"
    },
    "heddex.tranquility": {
        "cmdline": [],
        "modules": [
            "heddex",
            "heddex.tranquility",
            "heddex.tranquility.browser",
            "heddex.tranquility.browser.common",
            "heddex.tranquility.browser.interfaces",
            "heddex.tranquility.portlets",
            "heddex.tranquility.portlets.personaltools",
            "heddex.tranquility.setuphandlers",
            "heddex.tranquility.tests"
        ],
        "version": "1.1"
    },
    "hedfpy": {
        "cmdline": [],
        "modules": [
            "src",
            "src.CommandLineOperator",
            "src.EDFOperator",
            "src.EyeSignalOperator",
            "src.HDFEyeOperator",
            "src.Operator",
            "src.log"
        ],
        "version": "0.0.dev2"
    },
    "hedge": {
        "cmdline": [],
        "modules": [
            "python",
            "python.cuda",
            "python.cuda.cgen",
            "python.cuda.discretization",
            "python.cuda.execute",
            "python.cuda.optemplate",
            "python.cuda.plan",
            "python.cuda.tools",
            "python.data",
            "python.discr_precompiled",
            "python.discretization",
            "python.element",
            "python.flux",
            "python.interpolation",
            "python.log",
            "python.mesh",
            "python.operators",
            "python.optemplate",
            "python.parallel",
            "python.pde",
            "python.polynomial",
            "python.quadrature",
            "python.timestep",
            "python.tools",
            "python.visualization",
            "python.vtk"
        ],
        "version": "0.91"
    },
    "hedgehog": {
        "cmdline": [],
        "modules": [
            "hedgehog",
            "hedgehog.base",
            "hedgehog.server",
            "hedgehog.steam_cmd",
            "hedgehog.tools"
        ],
        "version": "0.2.3"
    },
    "hedgehog-fa": {
        "cmdline": [],
        "modules": [
            "automationserver",
            "automationserver.main",
            "automationserver.server",
            "cli",
            "cli.client",
            "cli.main",
            "fieldagent",
            "fieldagent.common",
            "fieldagent.devicemanager",
            "fieldagent.main",
            "fieldagent.rpc",
            "fieldagent.version"
        ],
        "version": "1.1"
    },
    "hedgehog-field-agent": {
        "cmdline": [],
        "modules": [
            "assetadapter",
            "assetadapter.admin",
            "assetadapter.apps",
            "assetadapter.migrations",
            "assetadapter.migrations.0001_initial",
            "assetadapter.models",
            "assetadapter.serializers",
            "assetadapter.tasks",
            "assetadapter.tests",
            "assetadapter.urls",
            "assetadapter.version",
            "assetadapter.views",
            "assetadapter.visualizers",
            "orchestrator",
            "orchestrator.celeryapp",
            "orchestrator.config",
            "orchestrator.config.server",
            "orchestrator.settings",
            "orchestrator.urls",
            "orchestrator.version",
            "orchestrator.wsgi",
            "processengine",
            "processengine.admin",
            "processengine.apps",
            "processengine.flows",
            "processengine.forms",
            "processengine.migrations",
            "processengine.migrations.0001_initial",
            "processengine.models",
            "processengine.serializers",
            "processengine.tasks",
            "processengine.tests",
            "processengine.urls",
            "processengine.version",
            "processengine.views",
            "rmd",
            "rmd.admin",
            "rmd.apps",
            "rmd.migrations",
            "rmd.models",
            "rmd.tests",
            "rmd.urls",
            "rmd.version",
            "rmd.views",
            "visacore",
            "visacore.core",
            "visaweb",
            "visaweb.admin",
            "visaweb.apps",
            "visaweb.management",
            "visaweb.management.commands",
            "visaweb.management.commands.packagepolymer",
            "visaweb.migrations",
            "visaweb.models",
            "visaweb.tests",
            "visaweb.urls",
            "visaweb.version",
            "visaweb.views"
        ],
        "version": "4.7.1"
    },
    "hedgehog-hedgehog-pyvisa": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hedgehog-pyvisa": {
        "cmdline": [],
        "modules": [
            "pyvisa",
            "pyvisa.attributes",
            "pyvisa.compat",
            "pyvisa.compat.check_output",
            "pyvisa.compat.nullhandler",
            "pyvisa.compat.ordereddict",
            "pyvisa.compat.struct",
            "pyvisa.constants",
            "pyvisa.ctwrapper",
            "pyvisa.ctwrapper.cthelper",
            "pyvisa.ctwrapper.functions",
            "pyvisa.ctwrapper.highlevel",
            "pyvisa.ctwrapper.types",
            "pyvisa.errors",
            "pyvisa.highlevel",
            "pyvisa.resources",
            "pyvisa.resources.firewire",
            "pyvisa.resources.gpib",
            "pyvisa.resources.messagebased",
            "pyvisa.resources.pxi",
            "pyvisa.resources.registerbased",
            "pyvisa.resources.resource",
            "pyvisa.resources.serial",
            "pyvisa.resources.tcpip",
            "pyvisa.resources.usb",
            "pyvisa.resources.vxi",
            "pyvisa.rname",
            "pyvisa.shell",
            "pyvisa.testsuite",
            "pyvisa.testsuite.test_rname",
            "pyvisa.testsuite.test_util",
            "pyvisa.thirdparty",
            "pyvisa.thirdparty.prettytable",
            "pyvisa.util",
            "visa"
        ],
        "version": "2.0.0"
    },
    "hedgehog-pyvisa-py": {
        "cmdline": [],
        "modules": [
            "pyvisa-py",
            "pyvisa-py.common",
            "pyvisa-py.gpib",
            "pyvisa-py.highlevel",
            "pyvisa-py.protocols",
            "pyvisa-py.protocols.rpc",
            "pyvisa-py.protocols.usbraw",
            "pyvisa-py.protocols.usbtmc",
            "pyvisa-py.protocols.usbutil",
            "pyvisa-py.protocols.vxi11",
            "pyvisa-py.serial",
            "pyvisa-py.sessions",
            "pyvisa-py.tcpip",
            "pyvisa-py.testsuite",
            "pyvisa-py.usb"
        ],
        "version": "0.4"
    },
    "hedgehog-pyvisa-sim": {
        "cmdline": [],
        "modules": [
            "pyvisa-sim",
            "pyvisa-sim.channels",
            "pyvisa-sim.common",
            "pyvisa-sim.component",
            "pyvisa-sim.devices",
            "pyvisa-sim.gpib",
            "pyvisa-sim.highlevel",
            "pyvisa-sim.parser",
            "pyvisa-sim.serial",
            "pyvisa-sim.sessions",
            "pyvisa-sim.tcpip",
            "pyvisa-sim.testsuite",
            "pyvisa-sim.testsuite.test_all",
            "pyvisa-sim.testsuite.test_channel",
            "pyvisa-sim.usb"
        ],
        "version": "0.5"
    },
    "hedgehog-station-controller": {
        "cmdline": [],
        "modules": [
            "assetadapter",
            "assetadapter.devicemanager",
            "assetadapter.main",
            "core",
            "core.common",
            "rmd",
            "rmd.main",
            "rmd.manage",
            "rmd.settings",
            "rmd.urls",
            "rmd.version",
            "rmd.wsgi",
            "rpc",
            "rpc.amqp",
            "rpc.client",
            "rpc.server",
            "visaweb",
            "visaweb.admin",
            "visaweb.apps",
            "visaweb.migrations",
            "visaweb.migrations.0001_initial",
            "visaweb.models",
            "visaweb.serializers",
            "visaweb.tests",
            "visaweb.urls",
            "visaweb.views"
        ],
        "version": "2.6.9"
    },
    "hedgeye-analysis": {
        "cmdline": [],
        "modules": [
            "hedgeye_analysis",
            "hedgeye_analysis.hedgeye_analysis_boilerplate",
            "hedgeye_analysis.hedgeye_clinical_trials",
            "hedgeye_analysis.hedgeye_pandas_patch",
            "hedgeye_analysis.hedgeye_stock_analysis",
            "hedgeye_analysis.introspection"
        ],
        "version": "0.2.1"
    },
    "hedwig": {
        "cmdline": [],
        "modules": [
            "hedwig",
            "hedwig.backends",
            "hedwig.backends.base",
            "hedwig.backends.console",
            "hedwig.backends.smtp",
            "hedwig.message"
        ],
        "version": "0.1"
    },
    "hedwig-nest": {
        "cmdline": [],
        "modules": [
            "hedwig",
            "hedwig.nest",
            "hedwig.nest.worker"
        ],
        "version": "0.1.8"
    },
    "hedwig-owl": {
        "cmdline": [],
        "modules": [
            "hedwig",
            "hedwig.owl"
        ],
        "version": "0.1.5"
    },
    "hedwig-py": {
        "cmdline": [],
        "modules": [
            "hedwig",
            "hedwig.sholay",
            "hedwig.utils",
            "hedwig/core",
            "hedwig/core.base",
            "hedwig/core.consumer",
            "hedwig/core.emitter",
            "hedwig/core.service",
            "hedwig/core.settings",
            "hedwig/core.worker",
            "hedwig/django",
            "hedwig/django.apps",
            "hedwig/django.emitter",
            "hedwig/django.run",
            "hedwig/django.settings",
            "hedwig/django.signals",
            "hedwig/django.views",
            "hedwig/django.worker",
            "hedwig/rest_framework",
            "hedwig/rest_framework.apps",
            "hedwig/rest_framework.serializers",
            "hedwig/rest_framework.settings"
        ],
        "version": "0.0.9"
    },
    "heft": {
        "cmdline": [],
        "modules": [
            "heft",
            "heft.core",
            "heft.util"
        ],
        "version": "0.1.1"
    },
    "hehe": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hehehe": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heiankyoview": {
        "cmdline": [
            "heiankyoview"
        ],
        "modules": [
            "__init__",
            "heiankyoview"
        ],
        "version": "1.0"
    },
    "heidi": {
        "cmdline": [],
        "modules": [
            "heidi",
            "heidi.Parse",
            "heidi.Parse.parse",
            "heidi.Segmentation",
            "heidi.Segmentation.texttiling",
            "heidi.Summarization",
            "heidi.Summarization.clusterrank",
            "heidi.Summarization.randomSum"
        ],
        "version": "1.0.18"
    },
    "heightfield": {
        "cmdline": [],
        "modules": [
            "heightfield",
            "heightfield.deposition",
            "heightfield.gl",
            "heightfield.main",
            "heightfield.surface",
            "heightfield.viewer",
            "heightfield.viewer.pygameviewer"
        ],
        "version": "0.2"
    },
    "heihama": {
        "cmdline": [],
        "modules": [
            "heihama"
        ],
        "version": "1.0.00"
    },
    "heikesheng": {
        "cmdline": [],
        "modules": [
            "heikesheng"
        ],
        "version": "1.1.0"
    },
    "heima0712": {
        "cmdline": [],
        "modules": [
            "heima0712"
        ],
        "version": "0.0.1"
    },
    "heimdall": {
        "cmdline": [],
        "modules": [
            "heimdall",
            "heimdall.devices",
            "heimdall.heimdall",
            "heimdall.take_screenshot"
        ],
        "version": "0.0.6"
    },
    "hein": {
        "cmdline": [],
        "modules": [
            "hein",
            "hein._version",
            "hein.core",
            "hein.socreceiver",
            "hein.soctransmitter"
        ],
        "version": "0.1.7"
    },
    "heisenberg": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heisenberg-ec2": {
        "cmdline": [],
        "modules": [
            "heisenberg",
            "heisenberg.command",
            "heisenberg.command.base",
            "heisenberg.command.find",
            "heisenberg.command.ssh",
            "heisenberg.interface",
            "heisenberg.utils"
        ],
        "version": "1.0.3"
    },
    "hejl-nester": {
        "cmdline": [],
        "modules": [
            "hejl_nester"
        ],
        "version": "1.1.1"
    },
    "heka-py": {
        "cmdline": [],
        "modules": [
            "heka",
            "heka.client",
            "heka.command",
            "heka.config",
            "heka.decorators",
            "heka.decorators.base",
            "heka.decorators.stats",
            "heka.decorators.util",
            "heka.encoders",
            "heka.exceptions",
            "heka.filters",
            "heka.holder",
            "heka.logging",
            "heka.message",
            "heka.message_pb2",
            "heka.path",
            "heka.streams",
            "heka.streams.dev",
            "heka.streams.logging",
            "heka.streams.tcp",
            "heka.streams.udp",
            "heka.tests",
            "heka.tests.helpers",
            "heka.tests.plugin",
            "heka.tests.plugin_exception",
            "heka.tests.sync_subscriber",
            "heka.tests.test_client",
            "heka.tests.test_config",
            "heka.tests.test_decorators",
            "heka.tests.test_encoders",
            "heka.tests.test_filters",
            "heka.tests.test_hmac",
            "heka.tests.test_logging",
            "heka.tests.test_protobuf",
            "heka.tests.test_streams",
            "heka.tests.test_timer",
            "heka.util"
        ],
        "version": "0.30.3"
    },
    "heka-py-cef": {
        "cmdline": [],
        "modules": [
            "heka_cef",
            "heka_cef.cef_plugin",
            "heka_cef.tests",
            "heka_cef.tests.ceftests",
            "heka_cef.tests.test_cef"
        ],
        "version": "0.3.1"
    },
    "heka-py-raven": {
        "cmdline": [],
        "modules": [
            "heka_raven",
            "heka_raven.raven_plugin"
        ],
        "version": "0.7"
    },
    "heka-raven": {
        "cmdline": [],
        "modules": [
            "heka_raven",
            "heka_raven.raven_plugin"
        ],
        "version": "0.5"
    },
    "heketi": {
        "cmdline": [],
        "modules": [
            "heketi",
            "heketi.heketi"
        ],
        "version": "3.0.0"
    },
    "helcli": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "helen-electricity-usage": {
        "cmdline": [],
        "modules": [
            "helen_electricity_usage"
        ],
        "version": "0.1.1"
    },
    "helga": {
        "cmdline": [],
        "modules": [
            "helga",
            "helga.bin",
            "helga.bin.helga",
            "helga.comm",
            "helga.comm.irc",
            "helga.comm.xmpp",
            "helga.db",
            "helga.log",
            "helga.my_settings",
            "helga.plugins",
            "helga.plugins.help",
            "helga.plugins.manager",
            "helga.plugins.operator",
            "helga.plugins.ping",
            "helga.plugins.version",
            "helga.plugins.webhooks",
            "helga.settings",
            "helga.tests",
            "helga.tests.bin",
            "helga.tests.bin.test_helga",
            "helga.tests.comm",
            "helga.tests.comm.test_irc",
            "helga.tests.comm.test_xmpp",
            "helga.tests.plugins",
            "helga.tests.plugins.test_core",
            "helga.tests.plugins.test_help",
            "helga.tests.plugins.test_manager",
            "helga.tests.plugins.test_operator",
            "helga.tests.plugins.test_ping",
            "helga.tests.plugins.test_version",
            "helga.tests.plugins.test_webhooks",
            "helga.tests.test_db",
            "helga.tests.test_log",
            "helga.tests.test_settings",
            "helga.tests.util",
            "helga.tests.util.test_encodings",
            "helga.tests.webhooks",
            "helga.tests.webhooks.test_announcements",
            "helga.tests.webhooks.test_logger",
            "helga.util",
            "helga.util.encodings",
            "helga.webhooks",
            "helga.webhooks.announcements",
            "helga.webhooks.logger"
        ],
        "version": "1.7.5"
    },
    "helga-alias": {
        "cmdline": [],
        "modules": [
            "helga_alias"
        ],
        "version": "0.1.0"
    },
    "helga-api-monitor": {
        "cmdline": [],
        "modules": [
            "helga_api_monitor",
            "helga_api_monitor.plugin"
        ],
        "version": "1.0.2"
    },
    "helga-bugzilla": {
        "cmdline": [],
        "modules": [
            "helga_bugzilla",
            "helga_bugzilla.actions",
            "helga_bugzilla.actions.describe",
            "helga_bugzilla.actions.search_external",
            "helga_bugzilla.exceptions",
            "helga_bugzilla.utils"
        ],
        "version": "1.2.1"
    },
    "helga-contrib-updates": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.4"
    },
    "helga-cowsay": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.2"
    },
    "helga-craigslist-meta": {
        "cmdline": [],
        "modules": [
            "helga_craigslist_meta",
            "helga_craigslist_meta.plugin",
            "tests",
            "tests.test_plugin"
        ],
        "version": "1.1.0"
    },
    "helga-crickets": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "helga-dubstep": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-elo": {
        "cmdline": [],
        "modules": [
            "helga_elo",
            "helga_elo.plugin"
        ],
        "version": "1.0.0"
    },
    "helga-facts": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.2"
    },
    "helga-flip": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-giphy": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "helga-github-meta": {
        "cmdline": [],
        "modules": [
            "helga_github_meta",
            "helga_github_meta.plugin",
            "tests",
            "tests.test_plugin"
        ],
        "version": "1.1.0"
    },
    "helga-haskell": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.1"
    },
    "helga-hipchat-nicks": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "helga-hipster": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "helga-icanhazascii": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-ignore": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-isup": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.4"
    },
    "helga-jenkins": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.5"
    },
    "helga-jeopardy": {
        "cmdline": [],
        "modules": [
            "helga_jeopardy"
        ],
        "version": "0.3.12"
    },
    "helga-jira": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "helga-karma": {
        "cmdline": [],
        "modules": [
            "helga_karma",
            "helga_karma.data",
            "helga_karma.plugin",
            "tests",
            "tests.test_data",
            "tests.test_integration",
            "tests.test_plugin"
        ],
        "version": "1.3.0"
    },
    "helga-lingo": {
        "cmdline": [],
        "modules": [
            "helga_lingo",
            "helga_lingo.plugin",
            "tests",
            "tests.test_lingo"
        ],
        "version": "1.0.7"
    },
    "helga-log-reader": {
        "cmdline": [],
        "modules": [
            "helga_log_reader",
            "helga_log_reader.plugin"
        ],
        "version": "1.0.3"
    },
    "helga-loljava": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-markovify": {
        "cmdline": [],
        "modules": [
            "helga_markovify",
            "helga_markovify.markov",
            "helga_markovify.plugin",
            "helga_markovify.twitter"
        ],
        "version": "1.1.1"
    },
    "helga-meant-to-say": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-meet": {
        "cmdline": [],
        "modules": [
            "helga_meet",
            "helga_meet.helga_meet"
        ],
        "version": "1.1.1"
    },
    "helga-mimic": {
        "cmdline": [],
        "modules": [
            "helga_mimic"
        ],
        "version": "0.3.0"
    },
    "helga-mud": {
        "cmdline": [],
        "modules": [
            "helga_mud",
            "helga_mud.plugin"
        ],
        "version": "0.1.1"
    },
    "helga-newrelic": {
        "cmdline": [],
        "modules": [
            "helga_newrelic",
            "helga_newrelic.plugins",
            "helga_newrelic.webhooks"
        ],
        "version": "0.2.0"
    },
    "helga-no-more-olga": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-notify": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-oneliner": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-oral-history": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "helga-poems": {
        "cmdline": [],
        "modules": [
            "helga_poems",
            "helga_poems.plugin",
            "helga_poems.tests",
            "helga_poems.tests.test_plugin",
            "helga_poems.tests.test_util",
            "helga_poems.util"
        ],
        "version": "0.2.0"
    },
    "helga-pointing-poker": {
        "cmdline": [],
        "modules": [
            "helga_pointing_poker",
            "helga_pointing_poker.helga_pointing_poker"
        ],
        "version": "1.0.0"
    },
    "helga-prod-fixer": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.0"
    },
    "helga-pull-requests": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.5"
    },
    "helga-quest": {
        "cmdline": [],
        "modules": [
            "helga_quest",
            "helga_quest.core",
            "helga_quest.driver",
            "helga_quest.plugin",
            "helga_quest.util",
            "tests",
            "tests.test_core"
        ],
        "version": "1.1.0"
    },
    "helga-quip": {
        "cmdline": [],
        "modules": [
            "helga_quip",
            "helga_quip.plugin",
            "tests",
            "tests.test_plugin"
        ],
        "version": "1.2.0"
    },
    "helga-redmine": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.5"
    },
    "helga-reminders": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "helga-reviewboard": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "helga-reviews": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.6"
    },
    "helga-roll": {
        "cmdline": [],
        "modules": [
            "helga_roll",
            "helga_roll.plugin"
        ],
        "version": "1.0.4"
    },
    "helga-spook": {
        "cmdline": [],
        "modules": [
            "helga_spook",
            "helga_spook.plugin"
        ],
        "version": "1.1.5"
    },
    "helga-stfu": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-urban-jeopardy": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-urbandictionary": {
        "cmdline": [],
        "modules": [
            "helga_urbandictionary",
            "helga_urbandictionary.plugin"
        ],
        "version": "2.0.0"
    },
    "helga-versionone": {
        "cmdline": [],
        "modules": [
            "helga_versionone",
            "helga_versionone.tests",
            "helga_versionone.tests.test_alias",
            "helga_versionone.tests.test_commands",
            "helga_versionone.tests.test_oauth_command",
            "helga_versionone.tests.test_review",
            "helga_versionone.tests.test_take",
            "helga_versionone.tests.test_team",
            "helga_versionone.tests.test_things",
            "helga_versionone.tests.test_v1_wrapper",
            "helga_versionone.tests.util",
            "helga_versionone.v1_wrapper"
        ],
        "version": "0.1.10"
    },
    "helga-weather": {
        "cmdline": [],
        "modules": [
            "helga_weather",
            "helga_weather.plugin"
        ],
        "version": "1.0.4"
    },
    "helga-wiki-whois": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helga-winks": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "helga-xkcd": {
        "cmdline": [],
        "modules": [
            "helga_xkcd",
            "helga_xkcd.client",
            "helga_xkcd.command",
            "helga_xkcd.db"
        ],
        "version": "0.1.2"
    },
    "helga-yelling": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "helga-youtube-meta": {
        "cmdline": [],
        "modules": [
            "helga_youtube_meta",
            "helga_youtube_meta.plugin"
        ],
        "version": "1.0.12"
    },
    "helga-zen": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "helio": {
        "cmdline": [],
        "modules": [
            "helio",
            "helio.controller",
            "helio.controller.base",
            "helio.controller.finders",
            "helio.controller.finders_tests",
            "helio.controller.helpers",
            "helio.controller.helpers_tests",
            "helio.controller.tests",
            "helio.helio_exceptions",
            "helio.heliodjango",
            "helio.heliodjango.finders",
            "helio.heliodjango.middleware",
            "helio.heliodjango.renderers",
            "helio.heliodjango.tests",
            "helio.heliodjango.url_tests",
            "helio.heliodjango.urls",
            "helio.heliodjango.views",
            "helio.heliodjango.views_tests",
            "helio.helioflask",
            "helio.helioflask.blueprint_tests",
            "helio.helioflask.finders",
            "helio.helioflask.finders_tests",
            "helio.helioflask.helioflask",
            "helio.helioflask.renderers",
            "helio.javascript",
            "helio.javascript.tests",
            "helio.settings",
            "helio.views",
            "helio.views.tests",
            "helio.views.views",
            "helio.viewstate",
            "helio.viewstate.notification",
            "helio.viewstate.notification_tests",
            "helio.viewstate.tests",
            "helio.viewstate.viewstate"
        ],
        "version": "1.0.0b1"
    },
    "helionsdk": {
        "cmdline": [],
        "modules": [
            "helionsdk",
            "helionsdk.dns",
            "helionsdk.dns.dns_service",
            "helionsdk.dns.v1",
            "helionsdk.dns.v1._proxy",
            "helionsdk.dns.v1.domain",
            "helionsdk.dns.version",
            "helionsdk.hp",
            "helionsdk.shell",
            "helionsdk.tests",
            "helionsdk.tests.functional",
            "helionsdk.tests.functional.base",
            "helionsdk.tests.functional.dns",
            "helionsdk.tests.functional.dns.v1",
            "helionsdk.tests.functional.dns.v1.test_domain",
            "helionsdk.tests.unit",
            "helionsdk.tests.unit.dns",
            "helionsdk.tests.unit.dns.test_dns_service",
            "helionsdk.tests.unit.dns.test_version",
            "helionsdk.tests.unit.dns.v1",
            "helionsdk.tests.unit.dns.v1.test_domain",
            "helionsdk.tests.unit.dns.v1.test_proxy",
            "helionsdk.tests.unit.test_hp"
        ],
        "version": "0.3.0"
    },
    "heliopy": {
        "cmdline": [],
        "modules": [
            "heliopy.data",
            "heliopy.data.ace",
            "heliopy.data.artemis",
            "heliopy.data.cluster",
            "heliopy.data.helios",
            "heliopy.data.helper",
            "heliopy.data.imp",
            "heliopy.data.messenger",
            "heliopy.data.mms",
            "heliopy.data.ulysses",
            "heliopy.data.wind",
            "heliopy.plot",
            "heliopy.plot.fields",
            "heliopy.plot.particles",
            "heliopy.plot.spectra",
            "heliopy.stats",
            "heliopy.stats.distributions",
            "heliopy.stats.fitting",
            "heliopy.stats.stats",
            "heliopy.util",
            "heliopy.util.config",
            "heliopy.vector",
            "heliopy.vector.transformations",
            "pycdf.pycdf",
            "pycdf.pycdf.const"
        ],
        "version": "0.1b1"
    },
    "helios": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heliosheath": {
        "cmdline": [],
        "modules": [
            "heliosheath"
        ],
        "version": "0.0.0"
    },
    "heliotron": {
        "cmdline": [],
        "modules": [
            "heliotron",
            "heliotron.bridge",
            "heliotron.light",
            "heliotron.presets",
            "heliotron.util"
        ],
        "version": "0.2.1"
    },
    "helium": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "helium-commander": {
        "cmdline": [],
        "modules": [
            "helium_commander",
            "helium_commander.__about__",
            "helium_commander._version",
            "helium_commander.cli",
            "helium_commander.client",
            "helium_commander.commands",
            "helium_commander.commands.configuration",
            "helium_commander.commands.element",
            "helium_commander.commands.label",
            "helium_commander.commands.metadata",
            "helium_commander.commands.organization",
            "helium_commander.commands.sensor",
            "helium_commander.commands.timeseries",
            "helium_commander.commands.user",
            "helium_commander.configuration",
            "helium_commander.device",
            "helium_commander.device_configuration",
            "helium_commander.element",
            "helium_commander.label",
            "helium_commander.metadata",
            "helium_commander.options",
            "helium_commander.organization",
            "helium_commander.resource",
            "helium_commander.sensor",
            "helium_commander.timeseries",
            "helium_commander.user",
            "helium_commander.writer"
        ],
        "version": "0.15.7"
    },
    "helium-python": {
        "cmdline": [],
        "modules": [
            "helium",
            "helium.__about__",
            "helium._version",
            "helium.adapter",
            "helium.adapter.aiohttp",
            "helium.adapter.requests",
            "helium.client",
            "helium.configuration",
            "helium.device",
            "helium.device_configuration",
            "helium.element",
            "helium.exceptions",
            "helium.label",
            "helium.metadata",
            "helium.organization",
            "helium.relations",
            "helium.resource",
            "helium.sensor",
            "helium.session",
            "helium.timeseries",
            "helium.user",
            "helium.util"
        ],
        "version": "0.9.0"
    },
    "helix": {
        "cmdline": [],
        "modules": [
            "helix",
            "helix.app",
            "helix.client",
            "helix.eventhandler",
            "helix.exceptions"
        ],
        "version": "0.1.0"
    },
    "helixclient": {
        "cmdline": [],
        "modules": [
            "helixclient",
            "helixclient._client"
        ],
        "version": "0.0.1"
    },
    "helixmc": {
        "cmdline": [
            "helixmc-run"
        ],
        "modules": [
            "helixmc",
            "helixmc._c_build",
            "helixmc._cython_build",
            "helixmc.fitfxn",
            "helixmc.pose",
            "helixmc.random_step",
            "helixmc.score",
            "helixmc.tests",
            "helixmc.tests.test_util",
            "helixmc.util"
        ],
        "version": "0.9"
    },
    "hell": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.4"
    },
    "hellahella": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hellanzb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hellas": {
        "cmdline": [],
        "modules": [
            "Hellas",
            "Hellas.Athens",
            "Hellas.Delphi",
            "Hellas.Olympia",
            "Hellas.Pella",
            "Hellas.Sparta",
            "Hellas.Thebes",
            "Hellas.tests",
            "Hellas.tests.tests"
        ],
        "version": "1.0.6"
    },
    "hellfire": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "hello": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hello-darkness-script": {
        "cmdline": [
            "hello_darkness"
        ],
        "modules": [],
        "version": "0.1"
    },
    "hello-dependencies": {
        "cmdline": [],
        "modules": [
            "hello_dependencies",
            "hello_dependencies.hello"
        ],
        "version": "0.1"
    },
    "hello-egg": {
        "cmdline": [],
        "modules": [
            "hello_egg",
            "hello_egg.foo"
        ],
        "version": "0.1"
    },
    "hello-gfw": {
        "cmdline": [],
        "modules": [
            "hgfw"
        ],
        "version": "0.1.2"
    },
    "hello-greeting-test": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "hello-gwss": {
        "cmdline": [
            "hello_gwss"
        ],
        "modules": [],
        "version": "0.1"
    },
    "hello-hepeng": {
        "cmdline": [],
        "modules": [
            "hello_hepeng"
        ],
        "version": "1.0.0"
    },
    "hello-jasoncao": {
        "cmdline": [],
        "modules": [
            "hello_jasoncao",
            "hello_jasoncao.jasoncao"
        ],
        "version": "1.0dev"
    },
    "hello-maimai": {
        "cmdline": [],
        "modules": [
            "hello_maimai"
        ],
        "version": "1.0.0"
    },
    "hello-maiya": {
        "cmdline": [
            "hello_maiya.py"
        ],
        "modules": [],
        "version": "0.1"
    },
    "hello-memoryview": {
        "cmdline": [
            "hello-memoryview"
        ],
        "modules": [],
        "version": "0.1.0"
    },
    "hello-natalia": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hello-pip": {
        "cmdline": [],
        "modules": [
            "hello",
            "hello.example",
            "hello.hello"
        ],
        "version": "1.0.4"
    },
    "hello-pip-goran": {
        "cmdline": [],
        "modules": [
            "hello_pip_goran",
            "hello_pip_goran.say_hello"
        ],
        "version": "0.3"
    },
    "hello-pylab-example": {
        "cmdline": [],
        "modules": [
            "hello",
            "hello.maiusculo",
            "hello.minusculo"
        ],
        "version": "0.0.1"
    },
    "hello-pypi": {
        "cmdline": [],
        "modules": [
            "hello_pypi"
        ],
        "version": "1.2"
    },
    "hello-pypi-world": {
        "cmdline": [],
        "modules": [
            "funniest"
        ],
        "version": "0.1"
    },
    "hello-python2": {
        "cmdline": [],
        "modules": [
            "lambda_test",
            "lambda_test.shell"
        ],
        "version": "1.2.4"
    },
    "hello-samu": {
        "cmdline": [
            "hello_samu.py"
        ],
        "modules": [],
        "version": "0.5"
    },
    "hello-sanam": {
        "cmdline": [],
        "modules": [
            "test"
        ],
        "version": "1.0"
    },
    "hello-swa": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hello-test": {
        "cmdline": [],
        "modules": [
            "hello",
            "hello.hello"
        ],
        "version": "1.0-1"
    },
    "hello-world": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "hello-world-amit": {
        "cmdline": [],
        "modules": [
            "try_pypi"
        ],
        "version": "0.1"
    },
    "hello-world-py": {
        "cmdline": [],
        "modules": [
            "hello",
            "hello.Hello"
        ],
        "version": "1.0"
    },
    "hello.py": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "helloaaron": {
        "cmdline": [
            "helloWorld.py"
        ],
        "modules": [
            "bin",
            "bin.helloWorld",
            "helloAaron",
            "helloAaron.welcome"
        ],
        "version": "0.3"
    },
    "hellodai22": {
        "cmdline": [],
        "modules": [
            "hello",
            "nihao"
        ],
        "version": "1.0"
    },
    "helloderek": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hellodmt2": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hellodyy": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "helloforcalvin12": {
        "cmdline": [],
        "modules": [
            "hello"
        ],
        "version": "1.2.0"
    },
    "hellogrpc": {
        "cmdline": [],
        "modules": [
            "hellogrpc"
        ],
        "version": "0.0.1472012531"
    },
    "hellogui": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "helloipv": {
        "cmdline": [],
        "modules": [
            "ipv"
        ],
        "version": "1.0"
    },
    "hellojason": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hellojdh99": {
        "cmdline": [],
        "modules": [
            "hellojdh99"
        ],
        "version": "1.1"
    },
    "hellojosh": {
        "cmdline": [],
        "modules": [
            "helloJosh",
            "helloJosh.welcome"
        ],
        "version": "0.1"
    },
    "hellokyle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hellomeme": {
        "cmdline": [],
        "modules": [
            "hellomeme",
            "hellomeme.welcome"
        ],
        "version": "0.2"
    },
    "hellomyname": {
        "cmdline": [],
        "modules": [
            "helloMyName",
            "helloMyName.welcome"
        ],
        "version": "0.2"
    },
    "helloname": {
        "cmdline": [],
        "modules": [
            "helloname"
        ],
        "version": "0.2"
    },
    "hellopuyuh": {
        "cmdline": [],
        "modules": [
            "hellopuyuh"
        ],
        "version": "1.0"
    },
    "hellopy": {
        "cmdline": [],
        "modules": [
            "main",
            "main.main",
            "ne1",
            "ne1.fe",
            "v",
            "v.call"
        ],
        "version": "1.0"
    },
    "hellopypi": {
        "cmdline": [],
        "modules": [],
        "version": "1.1"
    },
    "hellopython": {
        "cmdline": [],
        "modules": [],
        "version": "0.10"
    },
    "hellopythonbymirror": {
        "cmdline": [],
        "modules": [
            "hellopythonbymirror",
            "hellopythonbymirror.color",
            "hellopythonbymirror.sayHello",
            "hellopythonbymirror.templates"
        ],
        "version": "0.1.9"
    },
    "hellopythonmanumg": {
        "cmdline": [],
        "modules": [
            "app"
        ],
        "version": "1.0"
    },
    "hellorap": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.5.1"
    },
    "hellorap1": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hellorapp": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "helloshopply": {
        "cmdline": [],
        "modules": [
            "helloshopply.code",
            "helloshopply.code.hello_es",
            "helloshopply.code.hello_shopply",
            "helloshopply.code.server",
            "helloshopply.test",
            "helloshopply.test.test_hello_es"
        ],
        "version": "0.0.3"
    },
    "hellosign": {
        "cmdline": [],
        "modules": [
            "hellosign",
            "hellosign.api",
            "hellosign.hello_objects",
            "hellosign.hellosign"
        ],
        "version": "0.1.2"
    },
    "hellosign-python-sdk": {
        "cmdline": [],
        "modules": [
            "hellosign_sdk",
            "hellosign_sdk.hsclient",
            "hellosign_sdk.resource",
            "hellosign_sdk.resource.account",
            "hellosign_sdk.resource.embedded",
            "hellosign_sdk.resource.resource",
            "hellosign_sdk.resource.resource_list",
            "hellosign_sdk.resource.signature",
            "hellosign_sdk.resource.signature_request",
            "hellosign_sdk.resource.team",
            "hellosign_sdk.resource.template",
            "hellosign_sdk.resource.unclaimed_draft",
            "hellosign_sdk.utils",
            "hellosign_sdk.utils.exception",
            "hellosign_sdk.utils.hsaccesstokenauth",
            "hellosign_sdk.utils.hsformat",
            "hellosign_sdk.utils.request"
        ],
        "version": "3.8.5"
    },
    "hellosina": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hellot": {
        "cmdline": [],
        "modules": [
            "helloT"
        ],
        "version": "1.0.0"
    },
    "hellotest": {
        "cmdline": [],
        "modules": [
            "hellotest",
            "hellotest.hello"
        ],
        "version": "0.1"
    },
    "hellotest987": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "hellotest988": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hellotest989": {
        "cmdline": [],
        "modules": [
            "py_sample",
            "py_sample.hello"
        ],
        "version": "1.1.2"
    },
    "hellowebapp-deploy": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "hellowolrd12345": {
        "cmdline": [],
        "modules": [
            "helloWolrd12345"
        ],
        "version": "1.0.1"
    },
    "helloworld": {
        "cmdline": [],
        "modules": [
            "helloworld",
            "helloworld.config",
            "helloworld.config.environment",
            "helloworld.config.middleware",
            "helloworld.config.routing",
            "helloworld.controllers",
            "helloworld.controllers.error",
            "helloworld.controllers.hello",
            "helloworld.lib",
            "helloworld.lib.app_globals",
            "helloworld.lib.base",
            "helloworld.lib.helpers",
            "helloworld.model",
            "helloworld.tests",
            "helloworld.tests.functional",
            "helloworld.tests.functional.test_hello",
            "helloworld.tests.test_models",
            "helloworld.websetup"
        ],
        "version": "0.1dev"
    },
    "helloworld-1": {
        "cmdline": [
            "test_script.py"
        ],
        "modules": [],
        "version": "0.1"
    },
    "helloworld-2015": {
        "cmdline": [],
        "modules": [
            "helloworld",
            "helloworld.core"
        ],
        "version": "1.0.0"
    },
    "helloworld-nb-extension": {
        "cmdline": [
            "jupyter-contrib-nbextension"
        ],
        "modules": [
            "jupyter_contrib_nbextensions",
            "jupyter_contrib_nbextensions.application",
            "jupyter_contrib_nbextensions.config_scripts",
            "jupyter_contrib_nbextensions.config_scripts.highlight_html_cfg",
            "jupyter_contrib_nbextensions.config_scripts.highlight_latex_cfg",
            "jupyter_contrib_nbextensions.install",
            "jupyter_contrib_nbextensions.migrate",
            "jupyter_contrib_nbextensions.nbconvert_support",
            "jupyter_contrib_nbextensions.nbconvert_support.embedhtml",
            "jupyter_contrib_nbextensions.nbconvert_support.pp_highlighter",
            "jupyter_contrib_nbextensions.nbconvert_support.pre_codefolding",
            "jupyter_contrib_nbextensions.nbconvert_support.pre_collapsible_headings",
            "jupyter_contrib_nbextensions.nbconvert_support.pre_pymarkdown",
            "jupyter_contrib_nbextensions.nbconvert_support.pre_svg2pdf",
            "jupyter_contrib_nbextensions.nbconvert_support.strip_output_prompt",
            "jupyter_contrib_nbextensions.nbconvert_support.toc2"
        ],
        "version": "0.2"
    },
    "helloworld-package": {
        "cmdline": [],
        "modules": [
            "helloworld-package",
            "helloworld-package.helloworld",
            "helloworld-package.main"
        ],
        "version": "0.1"
    },
    "helloworld-pypi": {
        "cmdline": [],
        "modules": [
            "helloworld_pypi",
            "helloworld_pypi.helloworld"
        ],
        "version": "0.1"
    },
    "helloworld-python": {
        "cmdline": [],
        "modules": [
            "helloworld",
            "helloworld.core"
        ],
        "version": "0.0.1"
    },
    "helloworld-yhp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "helloworld1995": {
        "cmdline": [],
        "modules": [
            "helloworld1995",
            "helloworld1995.helloworld"
        ],
        "version": "0.13"
    },
    "helloworld2016": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "helloworldkent": {
        "cmdline": [],
        "modules": [
            "helloworldkent",
            "helloworldkent.test"
        ],
        "version": "0.1"
    },
    "helloworldname": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "helm": {
        "cmdline": [
            "helm_launcher.py"
        ],
        "modules": [
            "helm",
            "helm.color",
            "helm.core",
            "helm.model",
            "helm.models",
            "helm.models.cpu",
            "helm.models.fs",
            "helm.models.mem",
            "helm.models.network",
            "helm.primitives",
            "helm.theme",
            "helm.view",
            "helm.views",
            "helm.views.bar",
            "helm.views.histogram",
            "helm.views.ring",
            "helm.widget",
            "helm.widgets",
            "helm.widgets.cpus",
            "helm.widgets.fss",
            "helm.widgets.memswap",
            "helm.widgets.networks"
        ],
        "version": "0.4"
    },
    "helmholtz": {
        "cmdline": [],
        "modules": [
            "helmholtz",
            "helmholtz.access_control",
            "helmholtz.access_control.admin",
            "helmholtz.access_control.backends",
            "helmholtz.access_control.decorators",
            "helmholtz.access_control.forms",
            "helmholtz.access_control.middleware",
            "helmholtz.access_control.models",
            "helmholtz.access_control.overload",
            "helmholtz.access_control.templatetags",
            "helmholtz.access_control.templatetags.access_control",
            "helmholtz.access_control.urls",
            "helmholtz.access_control.views",
            "helmholtz.access_request",
            "helmholtz.access_request.admin",
            "helmholtz.access_request.forms",
            "helmholtz.access_request.models",
            "helmholtz.access_request.templatetags",
            "helmholtz.access_request.templatetags.access_request",
            "helmholtz.access_request.urls",
            "helmholtz.access_request.views",
            "helmholtz.analysis",
            "helmholtz.analysis.admin",
            "helmholtz.analysis.fields",
            "helmholtz.analysis.models",
            "helmholtz.analysis.models.analysis",
            "helmholtz.analysis.models.component",
            "helmholtz.analysis.models.configuration",
            "helmholtz.analysis.models.pin",
            "helmholtz.analysis.models.potential",
            "helmholtz.analysis.templatetags",
            "helmholtz.analysis.templatetags.operations",
            "helmholtz.analysis.tools",
            "helmholtz.analysis.tools.core",
            "helmholtz.analysis.tools.core.analyses",
            "helmholtz.analysis.tools.core.authentication",
            "helmholtz.analysis.tools.core.components",
            "helmholtz.analysis.tools.core.decorators",
            "helmholtz.analysis.tools.core.pins",
            "helmholtz.analysis.tools.factories",
            "helmholtz.analysis.tools.factories.common",
            "helmholtz.analysis.tools.factories.django",
            "helmholtz.analysis.tools.factories.django.analyses",
            "helmholtz.analysis.tools.factories.django.components",
            "helmholtz.analysis.tools.library",
            "helmholtz.analysis.tools.library.base_components",
            "helmholtz.analysis.tools.library.base_components.action_potential_filter",
            "helmholtz.analysis.tools.library.base_components.multiplier",
            "helmholtz.analysis.tools.library.base_components.signals",
            "helmholtz.analysis.tools.library.complex_components",
            "helmholtz.analysis.tools.library.complex_components.complex_component",
            "helmholtz.analysis.tools.managers",
            "helmholtz.analysis.tools.managers.common",
            "helmholtz.analysis.tools.managers.django_manager",
            "helmholtz.annotation",
            "helmholtz.annotation.admin",
            "helmholtz.annotation.fields",
            "helmholtz.annotation.models",
            "helmholtz.bin",
            "helmholtz.bin.helmholtz-admin",
            "helmholtz.cells",
            "helmholtz.cells.admin",
            "helmholtz.cells.models",
            "helmholtz.chemistry",
            "helmholtz.chemistry.admin",
            "helmholtz.chemistry.models",
            "helmholtz.core",
            "helmholtz.core.context_processors",
            "helmholtz.core.decorators",
            "helmholtz.core.dependencies",
            "helmholtz.core.fields",
            "helmholtz.core.loggers",
            "helmholtz.core.management",
            "helmholtz.core.management.commands",
            "helmholtz.core.management.commands.populate_site",
            "helmholtz.core.management.commands.startproject",
            "helmholtz.core.models",
            "helmholtz.core.modules",
            "helmholtz.core.populate",
            "helmholtz.core.schema",
            "helmholtz.core.shortcuts",
            "helmholtz.drug_applications",
            "helmholtz.drug_applications.admin",
            "helmholtz.drug_applications.models",
            "helmholtz.editor",
            "helmholtz.editor.commands",
            "helmholtz.editor.form_generator",
            "helmholtz.editor.forms",
            "helmholtz.editor.forms.access_control",
            "helmholtz.editor.forms.access_request",
            "helmholtz.editor.forms.acquisition",
            "helmholtz.editor.forms.analysis",
            "helmholtz.editor.forms.annotation",
            "helmholtz.editor.forms.chemistry",
            "helmholtz.editor.forms.community",
            "helmholtz.editor.forms.drug_applications",
            "helmholtz.editor.forms.editor",
            "helmholtz.editor.forms.electrodes",
            "helmholtz.editor.forms.electrophysiology",
            "helmholtz.editor.forms.equipment",
            "helmholtz.editor.forms.experiment",
            "helmholtz.editor.forms.location",
            "helmholtz.editor.forms.measurements",
            "helmholtz.editor.forms.methods",
            "helmholtz.editor.forms.neural_structure",
            "helmholtz.editor.forms.neuralstructures",
            "helmholtz.editor.forms.people",
            "helmholtz.editor.forms.preparation",
            "helmholtz.editor.forms.preparations",
            "helmholtz.editor.forms.recording",
            "helmholtz.editor.forms.signal",
            "helmholtz.editor.forms.species",
            "helmholtz.editor.forms.stimuli",
            "helmholtz.editor.forms.storage",
            "helmholtz.editor.forms.trackers",
            "helmholtz.editor.forms.units",
            "helmholtz.editor.management",
            "helmholtz.editor.management.commands",
            "helmholtz.editor.management.commands.access_control_contraints",
            "helmholtz.editor.management.commands.analysis_constraints",
            "helmholtz.editor.management.commands.chemistry_constraints",
            "helmholtz.editor.management.commands.editor_constraints",
            "helmholtz.editor.management.commands.equipment_constraints",
            "helmholtz.editor.management.commands.experiment_constraints",
            "helmholtz.editor.management.commands.measurements_constraints",
            "helmholtz.editor.management.commands.neuralstructures_constraints",
            "helmholtz.editor.management.commands.people_constraints",
            "helmholtz.editor.management.commands.populate_editor",
            "helmholtz.editor.management.commands.preparations_constraints",
            "helmholtz.editor.management.commands.signals_constraints",
            "helmholtz.editor.management.commands.species_constraints",
            "helmholtz.editor.management.commands.stimulation_constraints",
            "helmholtz.editor.management.commands.storage_constraints",
            "helmholtz.editor.management.commands.trackers_constraints",
            "helmholtz.editor.models",
            "helmholtz.editor.receivers",
            "helmholtz.editor.shortcuts",
            "helmholtz.editor.templatetags",
            "helmholtz.editor.templatetags.markups",
            "helmholtz.editor.templatetags.stripwhitespaces",
            "helmholtz.editor.urls",
            "helmholtz.editor.view",
            "helmholtz.editor.views",
            "helmholtz.editor.views.editor",
            "helmholtz.editor.widgets",
            "helmholtz.electricalstimulation",
            "helmholtz.electricalstimulation.admin",
            "helmholtz.electricalstimulation.models",
            "helmholtz.electrophysiology",
            "helmholtz.electrophysiology.admin",
            "helmholtz.electrophysiology.fields",
            "helmholtz.electrophysiology.models",
            "helmholtz.equipment",
            "helmholtz.equipment.admin",
            "helmholtz.equipment.models",
            "helmholtz.experiment",
            "helmholtz.experiment.admin",
            "helmholtz.experiment.forms",
            "helmholtz.experiment.models",
            "helmholtz.experiment.templatetags",
            "helmholtz.experiment.templatetags.experiments",
            "helmholtz.experiment.urls",
            "helmholtz.experiment.views",
            "helmholtz.fields",
            "helmholtz.histochemistry",
            "helmholtz.histochemistry.admin",
            "helmholtz.histochemistry.models",
            "helmholtz.location",
            "helmholtz.location.admin",
            "helmholtz.location.models",
            "helmholtz.measurements",
            "helmholtz.measurements.admin",
            "helmholtz.measurements.models",
            "helmholtz.neuralstructures",
            "helmholtz.neuralstructures.admin",
            "helmholtz.neuralstructures.management",
            "helmholtz.neuralstructures.management.commands",
            "helmholtz.neuralstructures.management.commands.populate_atlases",
            "helmholtz.neuralstructures.management.commands.populate_brain_regions",
            "helmholtz.neuralstructures.management.commands.populate_cell_types",
            "helmholtz.neuralstructures.models",
            "helmholtz.optical_imaging",
            "helmholtz.optical_imaging.admin",
            "helmholtz.optical_imaging.models",
            "helmholtz.people",
            "helmholtz.people.admin",
            "helmholtz.people.fields",
            "helmholtz.people.forms",
            "helmholtz.people.management",
            "helmholtz.people.management.commands",
            "helmholtz.people.management.commands.populate_skill_types",
            "helmholtz.people.models",
            "helmholtz.people.templatetags",
            "helmholtz.people.templatetags.profiles",
            "helmholtz.people.urls",
            "helmholtz.people.views",
            "helmholtz.preparations",
            "helmholtz.preparations.admin",
            "helmholtz.preparations.models",
            "helmholtz.preparations.templatetags",
            "helmholtz.preparations.templatetags.preparations",
            "helmholtz.reconstruction",
            "helmholtz.reconstruction.admin",
            "helmholtz.reconstruction.models",
            "helmholtz.recording",
            "helmholtz.recording.admin",
            "helmholtz.recording.forms",
            "helmholtz.recording.models",
            "helmholtz.recording.templatetags",
            "helmholtz.recording.templatetags.recordings",
            "helmholtz.recording.templatetags.tags",
            "helmholtz.recording.tools",
            "helmholtz.recording.tools.filters",
            "helmholtz.recording.urls",
            "helmholtz.recording.views",
            "helmholtz.signals",
            "helmholtz.signals.admin",
            "helmholtz.signals.models",
            "helmholtz.species",
            "helmholtz.species.admin",
            "helmholtz.species.management",
            "helmholtz.species.management.commands",
            "helmholtz.species.management.commands.populate_species",
            "helmholtz.species.models",
            "helmholtz.stimulation",
            "helmholtz.stimulation.admin",
            "helmholtz.stimulation.models",
            "helmholtz.storage",
            "helmholtz.storage.admin",
            "helmholtz.storage.management",
            "helmholtz.storage.management.commands",
            "helmholtz.storage.management.commands.populate_communication_protocols",
            "helmholtz.storage.management.commands.populate_mimetypes",
            "helmholtz.storage.models",
            "helmholtz.trackers",
            "helmholtz.trackers.admin",
            "helmholtz.trackers.models",
            "helmholtz.trackers.urls",
            "helmholtz.trackers.views",
            "helmholtz.units",
            "helmholtz.units.admin",
            "helmholtz.units.fields",
            "helmholtz.units.management",
            "helmholtz.units.management.commands",
            "helmholtz.units.management.commands.populate_units",
            "helmholtz.units.models",
            "helmholtz.units.urls",
            "helmholtz.units.views",
            "helmholtz.urls",
            "helmholtz.views",
            "helmholtz.vision",
            "helmholtz.vision.admin",
            "helmholtz.vision.models",
            "helmholtz.visualstimulation",
            "helmholtz.visualstimulation.admin",
            "helmholtz.visualstimulation.models",
            "helmholtz.waveforms",
            "helmholtz.waveforms.admin",
            "helmholtz.waveforms.models"
        ],
        "version": "0.2.0"
    },
    "helot": {
        "cmdline": [],
        "modules": [
            "helot",
            "helot.common",
            "helot.configuration",
            "helot.datastreams",
            "helot.datastreams.datarow",
            "helot.datastreams.datatable",
            "helot.datastreams.filestream",
            "helot.datastreams.mysqlstream",
            "helot.datastreams.sqlitestream",
            "helot.enumerator"
        ],
        "version": "0.0.11"
    },
    "help": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "help-tokens": {
        "cmdline": [],
        "modules": [
            "help_tokens",
            "help_tokens.apps",
            "help_tokens.context_processor",
            "help_tokens.core",
            "help_tokens.models",
            "help_tokens.urls",
            "help_tokens.views"
        ],
        "version": "1.0.2"
    },
    "helper": {
        "cmdline": [],
        "modules": [
            "helper",
            "helper.config",
            "helper.controller",
            "helper.parser",
            "helper.setupext",
            "helper.unix",
            "helper.windows"
        ],
        "version": "2.4.2"
    },
    "helper-datetime": {
        "cmdline": [],
        "modules": [
            "helper_datetime"
        ],
        "version": "0.6"
    },
    "helper-functions": {
        "cmdline": [],
        "modules": [
            "helper_functions"
        ],
        "version": "2.0.11"
    },
    "helper-string": {
        "cmdline": [],
        "modules": [
            "helper_string"
        ],
        "version": "0.4"
    },
    "helper-uri": {
        "cmdline": [],
        "modules": [
            "helper_uri"
        ],
        "version": "0.4"
    },
    "helperlib": {
        "cmdline": [],
        "modules": [
            "helperlib",
            "helperlib.binary",
            "helperlib.exception",
            "helperlib.internal",
            "helperlib.lazy",
            "helperlib.logging",
            "helperlib.minimize",
            "helperlib.spinner",
            "helperlib.terminal"
        ],
        "version": "0.3.0"
    },
    "helperlibs": {
        "cmdline": [],
        "modules": [
            "helperlibs",
            "helperlibs.bio",
            "helperlibs.bio.featurematch",
            "helperlibs.bio.seqio",
            "helperlibs.tests",
            "helperlibs.tests.bio",
            "helperlibs.tests.bio.test_featurematch",
            "helperlibs.tests.bio.test_seqio",
            "helperlibs.tests.wrappers",
            "helperlibs.tests.wrappers.test_io",
            "helperlibs.wrappers",
            "helperlibs.wrappers.io"
        ],
        "version": "0.1.7"
    },
    "helpful": {
        "cmdline": [],
        "modules": [],
        "version": "0.8.1"
    },
    "helpful-site": {
        "cmdline": [],
        "modules": [
            "helpful_site",
            "helpful_site.cli"
        ],
        "version": "0.1.0"
    },
    "helpgen": {
        "cmdline": [],
        "modules": [
            "helpgen",
            "helpgen.decorators",
            "helpgen.parser"
        ],
        "version": "0.1"
    },
    "helpgen4android": {
        "cmdline": [],
        "modules": [
            "HelpGen4Android",
            "HelpGen4Android.config",
            "HelpGen4Android.downloadUtils",
            "HelpGen4Android.helpGen",
            "HelpGen4Android.parseUtils"
        ],
        "version": "0.3.5"
    },
    "helpme": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "helputils": {
        "cmdline": [],
        "modules": [
            "helputils",
            "helputils._version",
            "helputils.core",
            "helputils.defaultlog"
        ],
        "version": "1.2.2"
    },
    "helpy": {
        "cmdline": [],
        "modules": [
            "helpy",
            "helpy.app",
            "helpy.commands",
            "helpy.commands.pyhelp",
            "helpy.settings"
        ],
        "version": "1.0.1"
    },
    "helpyfuncs": {
        "cmdline": [],
        "modules": [
            "HelpyFuncs",
            "HelpyFuncs.DataFrames",
            "HelpyFuncs.Dicts",
            "HelpyFuncs.Geometry2D",
            "HelpyFuncs.Print",
            "HelpyFuncs.SymPy",
            "HelpyFuncs.Visualizations",
            "HelpyFuncs.zzz"
        ],
        "version": "0.0.1"
    },
    "helsonnester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.0"
    },
    "hem": {
        "cmdline": [],
        "modules": [
            "hem",
            "hem.config",
            "hem.db",
            "hem.interfaces",
            "hem.schemas",
            "hem.text"
        ],
        "version": "0.4.1"
    },
    "heman": {
        "cmdline": [],
        "modules": [
            "heman",
            "heman.api",
            "heman.api.cch",
            "heman.api.empowering",
            "heman.api.empowering.base",
            "heman.api.empowering.custom",
            "heman.api.empowering.ot101",
            "heman.api.empowering.ot103",
            "heman.api.empowering.ot201",
            "heman.api.empowering.ot401",
            "heman.api.form",
            "heman.app",
            "heman.auth",
            "heman.config",
            "heman.heman"
        ],
        "version": "0.3.0"
    },
    "hematite": {
        "cmdline": [],
        "modules": [
            "hematite",
            "hematite._redirects",
            "hematite.async",
            "hematite.client",
            "hematite.compat",
            "hematite.compat._py2_socketio",
            "hematite.compat.dictutils",
            "hematite.compat.tests",
            "hematite.constants",
            "hematite.cookies",
            "hematite.fields",
            "hematite.profile",
            "hematite.raw",
            "hematite.raw.core",
            "hematite.raw.datastructures",
            "hematite.raw.drivers",
            "hematite.raw.messages",
            "hematite.raw.parser",
            "hematite.raw.request",
            "hematite.raw.response",
            "hematite.raw.tests",
            "hematite.raw.tests.test_datastructures",
            "hematite.raw.tests.test_messages",
            "hematite.raw.tests.test_parser",
            "hematite.request",
            "hematite.response",
            "hematite.serdes",
            "hematite.tests",
            "hematite.tests.pytest_support",
            "hematite.tests.test_header_progress",
            "hematite.tests.test_request",
            "hematite.tests.test_response",
            "hematite.tests.test_serdes",
            "hematite.tests.test_url",
            "hematite.tests.test_url_w3c",
            "hematite.url"
        ],
        "version": "0.0.2"
    },
    "hemi": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.5"
    },
    "hemlock": {
        "cmdline": [],
        "modules": [
            "hemlock",
            "hemlock.clients",
            "hemlock.clients.file_types",
            "hemlock.clients.file_types.hcsv",
            "hemlock.clients.file_types.hdoc",
            "hemlock.clients.file_types.hgeneric",
            "hemlock.clients.file_types.hjson",
            "hemlock.clients.file_types.hpcap",
            "hemlock.clients.file_types.hpdf",
            "hemlock.clients.file_types.hppt",
            "hemlock.clients.file_types.htext",
            "hemlock.clients.file_types.hxls",
            "hemlock.clients.file_types.hxml",
            "hemlock.clients.hemlock_base",
            "hemlock.clients.hemlock_debugger",
            "hemlock.clients.hemlock_runner",
            "hemlock.clients.hfs",
            "hemlock.clients.hfs_old",
            "hemlock.clients.hhbase",
            "hemlock.clients.hhdfs",
            "hemlock.clients.hmongo",
            "hemlock.clients.hmysql",
            "hemlock.clients.hredis",
            "hemlock.clients.hrest",
            "hemlock.clients.hstream_odd",
            "hemlock.clients.test_hemlock_base",
            "hemlock.clients.test_hfs",
            "hemlock.clients.test_hhbase",
            "hemlock.clients.test_hhdfs",
            "hemlock.clients.test_hmongo",
            "hemlock.clients.test_hmysql",
            "hemlock.clients.test_hredis",
            "hemlock.clients.test_hrest",
            "hemlock.hemlock",
            "hemlock.hemlock_options_parser",
            "hemlock.hemlock_scheduler",
            "hemlock.load_scripts",
            "hemlock.load_scripts.csv_to_mysql",
            "hemlock.load_scripts.csv_to_redis_hash",
            "hemlock.load_scripts.doc_to_mongo",
            "hemlock.test_hemlock",
            "hemlock.www",
            "hemlock.www.hemlock_web"
        ],
        "version": "0.1.6"
    },
    "hemlock-rest": {
        "cmdline": [],
        "modules": [
            "hemlock_rest",
            "hemlock_rest.hemlock_rest",
            "hemlock_rest.test_hemlock_rest"
        ],
        "version": "0.1.6"
    },
    "hemp": {
        "cmdline": [],
        "modules": [
            "hemp",
            "hemp.api",
            "hemp.gitutils",
            "hemp.internal",
            "hemp.internal.hempfile",
            "hemp.internal.utils",
            "hemp.main",
            "hemp.release",
            "hemp.tasks",
            "hemp.tasks.stage",
            "hemp.workspace"
        ],
        "version": "0.1.6"
    },
    "hemvfunniest": {
        "cmdline": [],
        "modules": [
            "hemvfunniest",
            "hemvfunniest.text"
        ],
        "version": "0.0.3"
    },
    "hen": {
        "cmdline": [],
        "modules": [],
        "version": "1.4.1"
    },
    "henchman": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hendrix": {
        "cmdline": [],
        "modules": [
            "hendrix",
            "hendrix.contrib",
            "hendrix.contrib.async",
            "hendrix.contrib.async.messaging",
            "hendrix.contrib.async.resources",
            "hendrix.contrib.async.signals",
            "hendrix.contrib.cache",
            "hendrix.contrib.cache.backends",
            "hendrix.contrib.cache.backends.memory_cache",
            "hendrix.contrib.cache.backends.redis_cache",
            "hendrix.contrib.cache.resource",
            "hendrix.contrib.resources",
            "hendrix.contrib.resources.static",
            "hendrix.contrib.services",
            "hendrix.contrib.services.cache",
            "hendrix.contrib.ssl",
            "hendrix.defaults",
            "hendrix.deploy",
            "hendrix.deploy.base",
            "hendrix.deploy.cache",
            "hendrix.deploy.hybrid",
            "hendrix.deploy.ssl",
            "hendrix.experience",
            "hendrix.experience.crosstown_traffic",
            "hendrix.facilities",
            "hendrix.facilities.gather",
            "hendrix.facilities.protocols",
            "hendrix.facilities.resources",
            "hendrix.facilities.response",
            "hendrix.facilities.services",
            "hendrix.logger",
            "hendrix.management",
            "hendrix.management.commands",
            "hendrix.management.commands.hx",
            "hendrix.mechanics",
            "hendrix.mechanics.async",
            "hendrix.mechanics.async.decorators",
            "hendrix.mechanics.async.exceptions",
            "hendrix.options",
            "hendrix.resources",
            "hendrix.test",
            "hendrix.test.debug_test_application",
            "hendrix.test.flasky",
            "hendrix.test.resources",
            "hendrix.test.test_crosstown_traffic",
            "hendrix.test.test_deploy",
            "hendrix.test.test_resources",
            "hendrix.test.test_testing_utils",
            "hendrix.test.test_ux",
            "hendrix.test.testproject",
            "hendrix.test.testproject.settings",
            "hendrix.test.testproject.urls",
            "hendrix.test.testproject.wsgi",
            "hendrix.test.utils",
            "hendrix.test.wsgi",
            "hendrix.utils",
            "hendrix.utils.conf",
            "hendrix.utils.test_utils",
            "hendrix.ux"
        ],
        "version": "2.0.2"
    },
    "henon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "henson": {
        "cmdline": [],
        "modules": [
            "henson",
            "henson.base",
            "henson.cli",
            "henson.config",
            "henson.contrib",
            "henson.contrib.retry",
            "henson.contrib.sphinx",
            "henson.exceptions",
            "henson.extensions"
        ],
        "version": "1.1.0"
    },
    "henson-amqp": {
        "cmdline": [],
        "modules": [
            "henson_amqp"
        ],
        "version": "0.5.0"
    },
    "henson-database": {
        "cmdline": [],
        "modules": [
            "henson_database"
        ],
        "version": "0.4.0"
    },
    "henson-logging": {
        "cmdline": [],
        "modules": [
            "henson_logging",
            "henson_logging.processors"
        ],
        "version": "0.3.1"
    },
    "henson-s3": {
        "cmdline": [],
        "modules": [
            "henson_s3"
        ],
        "version": "0.1.0"
    },
    "henson-sentry": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.0"
    },
    "henson-sqs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hentry": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "heol-humanoid": {
        "cmdline": [],
        "modules": [
            "heol_humanoid",
            "heol_humanoid._version",
            "heol_humanoid.heol_humanoid",
            "heol_humanoid.primitives",
            "heol_humanoid.primitives.postures"
        ],
        "version": "0.2.1"
    },
    "hep-ml": {
        "cmdline": [],
        "modules": [
            "hep_ml",
            "hep_ml.commonutils",
            "hep_ml.experiments",
            "hep_ml.gradientboosting",
            "hep_ml.losses",
            "hep_ml.metrics",
            "hep_ml.metrics_utils",
            "hep_ml.nnet",
            "hep_ml.preprocessing",
            "hep_ml.reweight",
            "hep_ml.speedup",
            "hep_ml.splot",
            "hep_ml.tree",
            "hep_ml.uboost"
        ],
        "version": "0.4.0"
    },
    "hepcrawl": {
        "cmdline": [],
        "modules": [
            "hepcrawl",
            "hepcrawl.crawler2hep",
            "hepcrawl.dateutils",
            "hepcrawl.extensions",
            "hepcrawl.extractors",
            "hepcrawl.extractors.jats",
            "hepcrawl.extractors.nlm",
            "hepcrawl.inputs",
            "hepcrawl.items",
            "hepcrawl.loaders",
            "hepcrawl.mappings",
            "hepcrawl.middlewares",
            "hepcrawl.outputs",
            "hepcrawl.pipelines",
            "hepcrawl.settings",
            "hepcrawl.spiders",
            "hepcrawl.spiders.alpha_spider",
            "hepcrawl.spiders.aps_spider",
            "hepcrawl.spiders.arxiv_spider",
            "hepcrawl.spiders.base_spider",
            "hepcrawl.spiders.brown_spider",
            "hepcrawl.spiders.dnb_spider",
            "hepcrawl.spiders.edp_spider",
            "hepcrawl.spiders.elsevier_spider",
            "hepcrawl.spiders.hindawi_spider",
            "hepcrawl.spiders.infn_spider",
            "hepcrawl.spiders.iop_spider",
            "hepcrawl.spiders.magic_spider",
            "hepcrawl.spiders.mit_spider",
            "hepcrawl.spiders.phenix_spider",
            "hepcrawl.spiders.phil_spider",
            "hepcrawl.spiders.pos_spider",
            "hepcrawl.spiders.t2k_spider",
            "hepcrawl.spiders.wsp_spider",
            "hepcrawl.testlib",
            "hepcrawl.testlib.celery_monitor",
            "hepcrawl.testlib.fixtures",
            "hepcrawl.testlib.scrapyd_coverage_runner",
            "hepcrawl.testlib.tasks",
            "hepcrawl.testlib.utils",
            "hepcrawl.utils",
            "hepcrawl.version"
        ],
        "version": "0.3.18"
    },
    "hepdata": {
        "cmdline": [],
        "modules": [
            "hepdata",
            "hepdata.client",
            "hepdata.exceptions",
            "tests",
            "tests.test_client",
            "tests.test_exceptions"
        ],
        "version": "0.1.5"
    },
    "hepdata-converter": {
        "cmdline": [],
        "modules": [
            "hepdata_converter",
            "hepdata_converter.common",
            "hepdata_converter.parsers",
            "hepdata_converter.parsers.oldhepdata_parser",
            "hepdata_converter.parsers.yaml_parser",
            "hepdata_converter.testsuite",
            "hepdata_converter.testsuite.test_arraywriter",
            "hepdata_converter.testsuite.test_clitools",
            "hepdata_converter.testsuite.test_convert",
            "hepdata_converter.testsuite.test_csvwriter",
            "hepdata_converter.testsuite.test_getconcretesubclassmixin",
            "hepdata_converter.testsuite.test_oldhepdata",
            "hepdata_converter.testsuite.test_optioninitmixin",
            "hepdata_converter.testsuite.test_parser",
            "hepdata_converter.testsuite.test_rootwriter",
            "hepdata_converter.testsuite.test_writer",
            "hepdata_converter.testsuite.test_yamlparser",
            "hepdata_converter.testsuite.test_yamlwriter",
            "hepdata_converter.testsuite.test_yodawriter",
            "hepdata_converter.version",
            "hepdata_converter.writers",
            "hepdata_converter.writers.array_writer",
            "hepdata_converter.writers.csv_writer",
            "hepdata_converter.writers.root_writer",
            "hepdata_converter.writers.utils",
            "hepdata_converter.writers.yaml_writer",
            "hepdata_converter.writers.yoda_writer"
        ],
        "version": "0.1.30"
    },
    "hepdata-converter-ws": {
        "cmdline": [],
        "modules": [
            "hepdata_converter_ws",
            "hepdata_converter_ws.api",
            "hepdata_converter_ws.version"
        ],
        "version": "0.1.6"
    },
    "hepdata-converter-ws-client": {
        "cmdline": [],
        "modules": [
            "hepdata_converter_ws_client",
            "hepdata_converter_ws_client.version"
        ],
        "version": "0.1.3"
    },
    "hepdata-rootcnv": {
        "cmdline": [],
        "modules": [
            "hepdatarootcnv",
            "hepdatarootcnv.cli",
            "hepdatarootcnv.formatters"
        ],
        "version": "0.0.1"
    },
    "hepdata-validator": {
        "cmdline": [],
        "modules": [
            "hepdata_validator",
            "hepdata_validator.data_file_validator",
            "hepdata_validator.submission_file_validator",
            "hepdata_validator.version"
        ],
        "version": "0.1.15"
    },
    "hepigram": {
        "cmdline": [],
        "modules": [
            "hepigram",
            "hepigram.app",
            "hepigram.git_handler",
            "hepigram.linter",
            "hepigram.mkdocs",
            "hepigram.utils",
            "hepigram.yaml_parser"
        ],
        "version": "0.1"
    },
    "hepos": {
        "cmdline": [],
        "modules": [
            "hepos",
            "hepos.matfunc",
            "hepos.tests"
        ],
        "version": "0.1.0"
    },
    "heppi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heppy": {
        "cmdline": [],
        "modules": [
            "heppy",
            "heppy.Args",
            "heppy.Client",
            "heppy.Config",
            "heppy.Daemon",
            "heppy.Doc",
            "heppy.EPP",
            "heppy.Error",
            "heppy.Login",
            "heppy.Module",
            "heppy.Net",
            "heppy.RabbitMQ",
            "heppy.Request",
            "heppy.Response",
            "heppy.SignalHandler"
        ],
        "version": "0.0.2"
    },
    "hera": {
        "cmdline": [],
        "modules": [
            "hera",
            "hera.contrib",
            "hera.contrib.django_forms",
            "hera.contrib.django_utils",
            "hera.tests",
            "hera.tests.test_hera"
        ],
        "version": "0.1.2"
    },
    "heracles": {
        "cmdline": [],
        "modules": [
            "heracles",
            "heracles.base",
            "heracles.exceptions",
            "heracles.libs",
            "heracles.raw",
            "heracles.structs",
            "heracles.test",
            "heracles.test.memory",
            "heracles.test.test",
            "heracles.tree",
            "heracles.util"
        ],
        "version": "0.0.6"
    },
    "heractor": {
        "cmdline": [],
        "modules": [
            "heractor",
            "heractor.commands",
            "heractor.heract",
            "heractor.plugins",
            "heractor.plugins.blog",
            "heractor.plugins.breadcrumbs",
            "heractor.plugins.buildmenu",
            "heractor.plugins.include",
            "heractor.plugins.listviewdetail",
            "heractor.plugins.markdn",
            "heractor.plugins.paginator",
            "heractor.plugins.structure"
        ],
        "version": "1.05"
    },
    "herald": {
        "cmdline": [],
        "modules": [
            "herald",
            "herald.Client"
        ],
        "version": "0.4"
    },
    "heralding": {
        "cmdline": [
            "heralding"
        ],
        "modules": [
            "heralding",
            "heralding.capabilities",
            "heralding.capabilities.ftp",
            "heralding.capabilities.handlerbase",
            "heralding.capabilities.http",
            "heralding.capabilities.https",
            "heralding.capabilities.pop3",
            "heralding.capabilities.pop3s",
            "heralding.capabilities.shared",
            "heralding.capabilities.shared.shell",
            "heralding.capabilities.smtp",
            "heralding.capabilities.ssh",
            "heralding.capabilities.telnet",
            "heralding.honeypot",
            "heralding.misc",
            "heralding.misc.common",
            "heralding.misc.session",
            "heralding.misc.socket_names",
            "heralding.reporting",
            "heralding.reporting.base_logger",
            "heralding.reporting.file_logger",
            "heralding.reporting.reporting_relay",
            "heralding.reporting.syslog_logger",
            "heralding.reporting.zmq_logger",
            "heralding.tests",
            "heralding.tests.test_config",
            "heralding.tests.test_encoding",
            "heralding.tests.test_ftp",
            "heralding.tests.test_http",
            "heralding.tests.test_pop3",
            "heralding.tests.test_reporting_zmq",
            "heralding.tests.test_smtp",
            "heralding.tests.test_ssh",
            "heralding.tests.test_telnet"
        ],
        "version": "0.1.16"
    },
    "heraspy": {
        "cmdline": [],
        "modules": [
            "heraspy",
            "heraspy.callback",
            "heraspy.model"
        ],
        "version": "0.2"
    },
    "herbert": {
        "cmdline": [],
        "modules": [
            "herbert",
            "herbert.ast",
            "herbert.interpreter",
            "herbert.lexer",
            "herbert.main",
            "herbert.parser"
        ],
        "version": "0.2"
    },
    "hercule": {
        "cmdline": [],
        "modules": [
            "hercule",
            "hercule.hercule"
        ],
        "version": "1.1.1"
    },
    "hercules": {
        "cmdline": [],
        "modules": [
            "hercules",
            "hercules.decorators",
            "hercules.dict",
            "hercules.lazylist",
            "hercules.loop_interface",
            "hercules.stream",
            "hercules.tokentype",
            "hercules.trie",
            "hercules.utils"
        ],
        "version": "0.0"
    },
    "herculeum": {
        "cmdline": [
            "herculeum"
        ],
        "modules": [
            "herculeum",
            "herculeum.ai",
            "herculeum.ai.simple",
            "herculeum.ai.skeleton",
            "herculeum.application",
            "herculeum.config",
            "herculeum.config.config",
            "herculeum.config.levels",
            "herculeum.config.levels.configure_items",
            "herculeum.config.levels.creatures",
            "herculeum.config.levels.crimson_lair",
            "herculeum.config.levels.effects",
            "herculeum.config.levels.player_characters",
            "herculeum.ui",
            "herculeum.ui.controllers",
            "herculeum.ui.controllers.endscreen",
            "herculeum.ui.controllers.inventory",
            "herculeum.ui.controllers.moving",
            "herculeum.ui.controllers.startgame",
            "herculeum.ui.gui",
            "herculeum.ui.gui.animations",
            "herculeum.ui.gui.animations.animation",
            "herculeum.ui.gui.animations.attack",
            "herculeum.ui.gui.animations.counters",
            "herculeum.ui.gui.animations.damage",
            "herculeum.ui.gui.animations.death",
            "herculeum.ui.gui.animations.factory",
            "herculeum.ui.gui.animations.healing",
            "herculeum.ui.gui.animations.inventory",
            "herculeum.ui.gui.animations.moving",
            "herculeum.ui.gui.animations.perception",
            "herculeum.ui.gui.animations.poison",
            "herculeum.ui.gui.character",
            "herculeum.ui.gui.config",
            "herculeum.ui.gui.endscreen",
            "herculeum.ui.gui.eventdisplay",
            "herculeum.ui.gui.images",
            "herculeum.ui.gui.inventory",
            "herculeum.ui.gui.layers",
            "herculeum.ui.gui.mainwindow",
            "herculeum.ui.gui.map",
            "herculeum.ui.gui.menu",
            "herculeum.ui.gui.resources",
            "herculeum.ui.gui.startgame",
            "herculeum.ui.gui.surfaceManager",
            "herculeum.ui.gui.widgets",
            "herculeum.ui.text",
            "herculeum.ui.text.character",
            "herculeum.ui.text.config",
            "herculeum.ui.text.endscreen",
            "herculeum.ui.text.interface",
            "herculeum.ui.text.inventory",
            "herculeum.ui.text.main_window",
            "herculeum.ui.text.map",
            "herculeum.ui.text.start_game",
            "herculeum.ui.text.surface_manager",
            "pyherc",
            "pyherc.ai",
            "pyherc.ai.heapset",
            "pyherc.ai.pathfinding",
            "pyherc.ai.pyheapq",
            "pyherc.config",
            "pyherc.config.config",
            "pyherc.config.dsl",
            "pyherc.config.dsl.levelgeneratorfactory",
            "pyherc.config.dsl.roomgenerators",
            "pyherc.data",
            "pyherc.data.character",
            "pyherc.data.constants",
            "pyherc.data.dungeon",
            "pyherc.data.effects",
            "pyherc.data.effects.effectscollection",
            "pyherc.data.features",
            "pyherc.data.geometry",
            "pyherc.data.inventory",
            "pyherc.data.item",
            "pyherc.data.magic",
            "pyherc.data.magic.spell",
            "pyherc.data.magic.spellbook",
            "pyherc.data.model",
            "pyherc.data.portal",
            "pyherc.data.traps",
            "pyherc.data.traps.pit",
            "pyherc.events",
            "pyherc.generators",
            "pyherc.generators.item",
            "pyherc.generators.level",
            "pyherc.generators.level.creatures",
            "pyherc.generators.level.decorator",
            "pyherc.generators.level.decorator.basic",
            "pyherc.generators.level.generator",
            "pyherc.generators.level.item",
            "pyherc.generators.level.old_config",
            "pyherc.generators.level.partitioners",
            "pyherc.generators.level.partitioners.old_grid",
            "pyherc.generators.level.portal",
            "pyherc.generators.level.prototiles",
            "pyherc.generators.level.room",
            "pyherc.generators.level.room.catacombs",
            "pyherc.generators.level.room.corridor",
            "pyherc.generators.level.room.crimson_lair",
            "pyherc.generators.level.room.pillarroom",
            "pyherc.generators.level.room.squareroom",
            "pyherc.generators.spells",
            "pyherc.generators.utils",
            "pyherc.ports",
            "pyherc.ports.actions",
            "pyherc.rules",
            "pyherc.rules.combat",
            "pyherc.rules.combat.action",
            "pyherc.rules.combat.factories",
            "pyherc.rules.combat.interface",
            "pyherc.rules.combat.melee",
            "pyherc.rules.combat.ranged",
            "pyherc.rules.combat.unarmed",
            "pyherc.rules.constants",
            "pyherc.rules.consume",
            "pyherc.rules.consume.action",
            "pyherc.rules.consume.factories",
            "pyherc.rules.consume.interface",
            "pyherc.rules.digging",
            "pyherc.rules.ending",
            "pyherc.rules.engine",
            "pyherc.rules.factory",
            "pyherc.rules.inventory",
            "pyherc.rules.inventory.action",
            "pyherc.rules.inventory.equip",
            "pyherc.rules.inventory.factories",
            "pyherc.rules.inventory.interface",
            "pyherc.rules.inventory.unequip",
            "pyherc.rules.los",
            "pyherc.rules.magic",
            "pyherc.rules.magic.action",
            "pyherc.rules.magic.factories",
            "pyherc.rules.magic.interface",
            "pyherc.rules.public",
            "pyherc.rules.waiting",
            "pyherc.rules.waiting.action",
            "pyherc.rules.waiting.factories",
            "pyherc.rules.waiting.interface"
        ],
        "version": "0.15"
    },
    "herd": {
        "cmdline": [],
        "modules": [
            "herd",
            "herd.cluster",
            "herd.command",
            "herd.config",
            "herd.handler",
            "herd.herd",
            "herd.role",
            "herd.task"
        ],
        "version": "0.0.3.dev2"
    },
    "herder": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "here": {
        "cmdline": [],
        "modules": [
            "here",
            "here.here",
            "tests",
            "tests.test_here"
        ],
        "version": "0.1.0"
    },
    "hereby": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.0"
    },
    "hererocks": {
        "cmdline": [],
        "modules": [
            "hererocks"
        ],
        "version": "0.15.0"
    },
    "heresafe": {
        "cmdline": [],
        "modules": [
            "heresafe",
            "heresafe.heresafe"
        ],
        "version": "1.0.4"
    },
    "heretic": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "herit-from-base-class": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "herman": {
        "cmdline": [],
        "modules": [
            "playhouse",
            "playhouse.apsw_ext",
            "playhouse.berkeleydb",
            "playhouse.csv_loader",
            "playhouse.csv_utils",
            "playhouse.dataset",
            "playhouse.db_url",
            "playhouse.djpeewee",
            "playhouse.fields",
            "playhouse.flask_utils",
            "playhouse.gfk",
            "playhouse.hybrid",
            "playhouse.kv",
            "playhouse.migrate",
            "playhouse.pool",
            "playhouse.postgres_ext",
            "playhouse.read_slave",
            "playhouse.reflection",
            "playhouse.shortcuts",
            "playhouse.signals",
            "playhouse.sqlcipher_ext",
            "playhouse.sqlite_ext",
            "playhouse.sqlite_udf",
            "playhouse.sqliteq",
            "playhouse.test_utils"
        ],
        "version": "1.2.4"
    },
    "hermes": {
        "cmdline": [],
        "modules": [
            "hermes",
            "hermes.api",
            "hermes.chatroom",
            "hermes.log",
            "hermes.server"
        ],
        "version": "0.3.0"
    },
    "hermes-chat": {
        "cmdline": [],
        "modules": [
            "hermes",
            "hermes.chatserver",
            "hermes.database"
        ],
        "version": "0.2.2"
    },
    "hermes-parser": {
        "cmdline": [],
        "modules": [
            "hermes",
            "hermes.code",
            "hermes.factory",
            "hermes.grammar",
            "hermes.hermes_parser",
            "hermes.main"
        ],
        "version": "2.0rc6"
    },
    "hermes-pg": {
        "cmdline": [],
        "modules": [
            "hermes",
            "hermes.client",
            "hermes.components",
            "hermes.connectors",
            "hermes.exceptions",
            "hermes.listeners",
            "hermes.log",
            "hermes.strategies"
        ],
        "version": "0.3.1"
    },
    "hermes-pygments": {
        "cmdline": [],
        "modules": [
            "hermes_pygments",
            "hermes_pygments.hermes_lexer"
        ],
        "version": "0.1"
    },
    "hermescache": {
        "cmdline": [],
        "modules": [
            "hermes",
            "hermes.backend",
            "hermes.backend.dict",
            "hermes.backend.memcached",
            "hermes.backend.redis",
            "hermes.test",
            "hermes.test.abstract",
            "hermes.test.dict",
            "hermes.test.memcached",
            "hermes.test.redis"
        ],
        "version": "0.6.1"
    },
    "hermit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hero": {
        "cmdline": [
            "hero"
        ],
        "modules": [
            "lib",
            "lib.constants",
            "lib.interactive",
            "lib.prompter",
            "lib.pyhero",
            "lib.utils"
        ],
        "version": "0.3.2"
    },
    "hero-crawl": {
        "cmdline": [],
        "modules": [
            "vanko",
            "vanko.excel",
            "vanko.excel.base",
            "vanko.excel.csvwriter",
            "vanko.excel.openpyxl",
            "vanko.excel.xlsxwriter",
            "vanko.flask",
            "vanko.flask.admin",
            "vanko.flask.admin_pymongo",
            "vanko.flask.admin_redis",
            "vanko.flask.admin_sqla",
            "vanko.flask.compat",
            "vanko.flask.forms",
            "vanko.flask.ping",
            "vanko.flask.session",
            "vanko.flask.sqla",
            "vanko.flask.utils",
            "vanko.scrapy",
            "vanko.scrapy.crawl",
            "vanko.scrapy.defaults",
            "vanko.scrapy.downloader",
            "vanko.scrapy.fast_exit",
            "vanko.scrapy.helpers",
            "vanko.scrapy.httpcache",
            "vanko.scrapy.item_loader",
            "vanko.scrapy.mongo",
            "vanko.scrapy.mongo.connection",
            "vanko.scrapy.mongo.dupefilter",
            "vanko.scrapy.mongo.httpcache",
            "vanko.scrapy.mongo.queue",
            "vanko.scrapy.mongo.stats",
            "vanko.scrapy.pipelines",
            "vanko.scrapy.qt4",
            "vanko.scrapy.qt4.defs",
            "vanko.scrapy.qt4.filter",
            "vanko.scrapy.qt4.handlers",
            "vanko.scrapy.qt4.login",
            "vanko.scrapy.qt4.qt4webkit",
            "vanko.scrapy.qt4.test",
            "vanko.scrapy.qt4.utils",
            "vanko.scrapy.redis",
            "vanko.scrapy.redis.connection",
            "vanko.scrapy.redis.dupefilter",
            "vanko.scrapy.redis.httpcache",
            "vanko.scrapy.redis.pipelines",
            "vanko.scrapy.redis.queue",
            "vanko.scrapy.redis.spiders",
            "vanko.scrapy.redis.stats",
            "vanko.scrapy.redis.tests",
            "vanko.scrapy.reqser",
            "vanko.scrapy.restart_on",
            "vanko.scrapy.scheduler",
            "vanko.scrapy.settings",
            "vanko.scrapy.sftp_httpcache",
            "vanko.scrapy.sftp_store",
            "vanko.scrapy.show_ip",
            "vanko.scrapy.spider",
            "vanko.scrapy.spider_loader",
            "vanko.scrapy.stats",
            "vanko.scrapy.useragent",
            "vanko.scrapy.webdriver",
            "vanko.scrapy.webdriver.action_chains",
            "vanko.scrapy.webdriver.download",
            "vanko.scrapy.webdriver.http",
            "vanko.scrapy.webdriver.manager",
            "vanko.scrapy.webdriver.middlewares",
            "vanko.scrapy.webdriver.response",
            "vanko.scrapy.webdriver.selector",
            "vanko.scrapy.webdriver.spider",
            "vanko.scrapy.webdriver.wrapper",
            "vanko.utils",
            "vanko.utils.dates",
            "vanko.utils.decode",
            "vanko.utils.heroku",
            "vanko.utils.ipython",
            "vanko.utils.misc",
            "vanko.utils.multiprocessing",
            "vanko.utils.pdb",
            "vanko.utils.serialize",
            "vanko.utils.sftp",
            "vanko.utils.signal",
            "vanko.utils.watch_log",
            "vanko.utils.xvfb"
        ],
        "version": "0.1.4"
    },
    "heroesoflegend": {
        "cmdline": [],
        "modules": [
            "heroesoflegend",
            "heroesoflegend.heroesoflegend",
            "heroesoflegend.rolltables"
        ],
        "version": "0.2.0"
    },
    "heroin": {
        "cmdline": [],
        "modules": [
            "heroin",
            "heroin.test",
            "heroin.trial"
        ],
        "version": "0.0.2"
    },
    "herokal-settings": {
        "cmdline": [],
        "modules": [
            "herokal",
            "herokal.management",
            "herokal.management.commands",
            "herokal.management.commands.exportenv",
            "herokal.settings"
        ],
        "version": "0.0.1"
    },
    "heroku": {
        "cmdline": [],
        "modules": [
            "heroku",
            "heroku.api",
            "heroku.compat",
            "heroku.core",
            "heroku.helpers",
            "heroku.models",
            "heroku.structures"
        ],
        "version": "0.1.4"
    },
    "heroku-bouncer": {
        "cmdline": [],
        "modules": [],
        "version": "1.3"
    },
    "heroku-django-helpers": {
        "cmdline": [],
        "modules": [
            "heroku_django_helpers",
            "heroku_django_helpers.helpers",
            "heroku_django_helpers.middleware"
        ],
        "version": "0.3"
    },
    "heroku-syslog-parser": {
        "cmdline": [],
        "modules": [
            "heroku_syslog_parser",
            "heroku_syslog_parser.message",
            "heroku_syslog_parser.parser"
        ],
        "version": "0.0.4"
    },
    "heroku-tools": {
        "cmdline": [],
        "modules": [
            "heroku_tools",
            "heroku_tools.config",
            "heroku_tools.deploy",
            "heroku_tools.git",
            "heroku_tools.heroku",
            "heroku_tools.settings",
            "heroku_tools.tests",
            "heroku_tools.utils"
        ],
        "version": "0.3.3"
    },
    "heroku3": {
        "cmdline": [],
        "modules": [
            "heroku3",
            "heroku3.api",
            "heroku3.compat",
            "heroku3.core",
            "heroku3.examples",
            "heroku3.helpers",
            "heroku3.rendezvous",
            "heroku3.structures"
        ],
        "version": "3.3.0"
    },
    "herokufu": {
        "cmdline": [
            "hfu"
        ],
        "modules": [
            "herokufu"
        ],
        "version": "0.0.3"
    },
    "herokuslugignorehelper": {
        "cmdline": [],
        "modules": [
            "herokuslugignorehelper",
            "herokuslugignorehelper.cli"
        ],
        "version": "0.2"
    },
    "heron": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "heron-automation": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "herring": {
        "cmdline": [],
        "modules": [
            "herring",
            "herring.argument_helper",
            "herring.hack_sys_path",
            "herring.herring_app",
            "herring.herring_cli",
            "herring.herring_file",
            "herring.herring_loader",
            "herring.herring_main",
            "herring.herring_runner",
            "herring.herring_settings",
            "herring.parallelize",
            "herring.support",
            "herring.support.application_settings",
            "herring.support.comparable_mixin",
            "herring.support.graceful_interrupt_handler",
            "herring.support.list_helper",
            "herring.support.mkdir_p",
            "herring.support.path",
            "herring.support.safe_edit",
            "herring.support.simple_logger",
            "herring.support.terminalsize",
            "herring.support.toposort2",
            "herring.support.touch",
            "herring.support.utils",
            "herring.task_with_args"
        ],
        "version": "0.1.49"
    },
    "hes": {
        "cmdline": [],
        "modules": [
            "hes.hes"
        ],
        "version": "0.5"
    },
    "hescore-hpxml": {
        "cmdline": [],
        "modules": [
            "hescorehpxml",
            "hescorehpxml.create_all_example_json"
        ],
        "version": "3.0.0"
    },
    "hesiod53": {
        "cmdline": [],
        "modules": [
            "hesiod53",
            "hesiod53.ssh",
            "hesiod53.sync"
        ],
        "version": "0.1.0"
    },
    "hesiod53-jumpcloud": {
        "cmdline": [],
        "modules": [
            "jumpcloud",
            "jumpcloud.jumpcloud"
        ],
        "version": "0.1.2"
    },
    "hesitate": {
        "cmdline": [],
        "modules": [
            "django16",
            "django16.settings",
            "django16.urls",
            "django16.wsgi",
            "django17",
            "django17.settings",
            "django17.urls",
            "django17.wsgi",
            "hesitate",
            "hesitate.conf",
            "hesitate.driver",
            "hesitate.rewriter",
            "hesitate.wrappers",
            "hesitate.wrappers.django",
            "test_app",
            "test_app.migrations",
            "test_app.tests",
            "test_app.views",
            "tests",
            "tests.impl_docstring",
            "tests.impl_futureimport",
            "tests.impl_plain",
            "tests.test_rewriter"
        ],
        "version": "0.0.2"
    },
    "hessianfree": {
        "cmdline": [],
        "modules": [
            "hessianfree",
            "hessianfree.dataplotter",
            "hessianfree.demos",
            "hessianfree.ffnet",
            "hessianfree.gpu",
            "hessianfree.gpu.kernel_wrappers",
            "hessianfree.gpu.profiling",
            "hessianfree.loss_funcs",
            "hessianfree.nonlinearities",
            "hessianfree.optimizers",
            "hessianfree.rnnet",
            "hessianfree.test",
            "hessianfree.tests",
            "hessianfree.tests.test_demos",
            "hessianfree.tests.test_ffnet",
            "hessianfree.tests.test_gpu",
            "hessianfree.tests.test_optimizers",
            "hessianfree.tests.test_rnnet",
            "hessianfree.version"
        ],
        "version": "0.4.0"
    },
    "hessianpy": {
        "cmdline": [],
        "modules": [
            "hessian",
            "hessian.UTF8",
            "hessian.client",
            "hessian.common",
            "hessian.hello",
            "hessian.hessian",
            "hessian.lab",
            "hessian.secureServer",
            "hessian.server",
            "hessian.test",
            "hessian.test.UTF8Test",
            "hessian.test.test",
            "hessian.test.testSecure",
            "hessian.transports"
        ],
        "version": "1.0.4"
    },
    "hester-zqing": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hestia-api": {
        "cmdline": [],
        "modules": [
            "hestia",
            "hestia._version",
            "hestia.api"
        ],
        "version": "0.0.8"
    },
    "hestiaapi": {
        "cmdline": [],
        "modules": [
            "hestia",
            "hestia._version",
            "hestia.api"
        ],
        "version": "0.0.9"
    },
    "heteromotility": {
        "cmdline": [],
        "modules": [
            "heteromotility",
            "heteromotility.command_line",
            "heteromotility.dfa",
            "heteromotility.heteromotility",
            "heteromotility.hmdetail",
            "heteromotility.hmio",
            "heteromotility.hmplot",
            "heteromotility.hmsims",
            "heteromotility.hmstats",
            "heteromotility.hmtests",
            "heteromotility.hmtools",
            "heteromotility.hmtrack"
        ],
        "version": "0.1.3"
    },
    "hetio": {
        "cmdline": [],
        "modules": [
            "hetio",
            "hetio.abbreviation",
            "hetio.hetnet",
            "hetio.neo4j",
            "hetio.pathtools",
            "hetio.permute",
            "hetio.readwrite",
            "hetio.stats"
        ],
        "version": "0.2.6"
    },
    "hetzner": {
        "cmdline": [
            "hetznerctl"
        ],
        "modules": [
            "hetzner",
            "hetzner.robot",
            "hetzner.server"
        ],
        "version": "0.7.5"
    },
    "heuris": {
        "cmdline": [],
        "modules": [
            "heuris",
            "heuris.client",
            "heuris.message"
        ],
        "version": "0.4.0"
    },
    "hevea": {
        "cmdline": [],
        "modules": [
            "hevea",
            "hevea.handler"
        ],
        "version": "0.2"
    },
    "hewei": {
        "cmdline": [],
        "modules": [
            "hewei"
        ],
        "version": "1.1.0"
    },
    "hex-ocr": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hex-utils": {
        "cmdline": [],
        "modules": [
            "hex_utils",
            "hex_utils.asc",
            "hex_utils.asc2hasc",
            "hex_utils.csv2hasc",
            "hex_utils.hasc",
            "hex_utils.hasc2geojson",
            "hex_utils.hasc2gml",
            "hex_utils.parserExtent",
            "hex_utils.parserSurface",
            "hex_utils.raster",
            "hex_utils.surface2asc",
            "hex_utils.surface2hasc",
            "surfaces",
            "surfaces.channel",
            "surfaces.eat2",
            "surfaces.eat2Gaussian",
            "surfaces.eat2Hubbert",
            "surfaces.pit",
            "surfaces.pitGaussian",
            "surfaces.pitHubbert",
            "surfaces.surface",
            "tests",
            "tests.emptyValues"
        ],
        "version": "0.3"
    },
    "hex2dec": {
        "cmdline": [],
        "modules": [
            "hex2dec"
        ],
        "version": "1.0.0"
    },
    "hex2words": {
        "cmdline": [],
        "modules": [
            "hex2words",
            "hex2words.hex2words",
            "hex2words.input",
            "hex2words.program",
            "hex2words.version"
        ],
        "version": "0.1.0"
    },
    "hexadecimal": {
        "cmdline": [],
        "modules": [],
        "version": "0.51"
    },
    "hexagon": {
        "cmdline": [],
        "modules": [
            "hexagon",
            "hexagon.core",
            "hexagon.utils"
        ],
        "version": "0.1"
    },
    "hexagonit.decorators": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.decorators",
            "hexagonit.decorators.browser",
            "hexagonit.decorators.tests"
        ],
        "version": "0.2"
    },
    "hexagonit.form": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.form",
            "hexagonit.form.interfaces",
            "hexagonit.form.orderable",
            "hexagonit.form.tests"
        ],
        "version": "0.1"
    },
    "hexagonit.portletroles": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.portletroles",
            "hexagonit.portletroles.browser",
            "hexagonit.portletroles.browser.interfaces",
            "hexagonit.portletroles.tests",
            "hexagonit.portletroles.tests.base",
            "hexagonit.portletroles.tests.rolemap",
            "hexagonit.portletroles.tests.test_functional",
            "hexagonit.portletroles.tests.test_setup"
        ],
        "version": "1.0"
    },
    "hexagonit.portletstyle": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.portletstyle",
            "hexagonit.portletstyle.browser",
            "hexagonit.portletstyle.browser.controlpanel",
            "hexagonit.portletstyle.interfaces",
            "hexagonit.portletstyle.patcher",
            "hexagonit.portletstyle.tests",
            "hexagonit.portletstyle.tests.base",
            "hexagonit.portletstyle.tests.test_controlpanel",
            "hexagonit.portletstyle.tests.test_docstring",
            "hexagonit.portletstyle.tests.test_functional",
            "hexagonit.portletstyle.tests.test_portlets",
            "hexagonit.portletstyle.tests.test_setup",
            "hexagonit.portletstyle.tests.test_style_selection",
            "hexagonit.portletstyle.tests.test_vocabulary",
            "hexagonit.portletstyle.vocabulary"
        ],
        "version": "1.3.2"
    },
    "hexagonit.recipe.cmmi": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.recipe",
            "hexagonit.recipe.cmmi",
            "hexagonit.recipe.cmmi.tests"
        ],
        "version": "2.0"
    },
    "hexagonit.recipe.download": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.recipe",
            "hexagonit.recipe.download",
            "hexagonit.recipe.download.tests"
        ],
        "version": "1.7.1"
    },
    "hexagonit.socialbutton": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.socialbutton",
            "hexagonit.socialbutton.adapter",
            "hexagonit.socialbutton.adapter.dollar",
            "hexagonit.socialbutton.browser",
            "hexagonit.socialbutton.browser.interfaces",
            "hexagonit.socialbutton.browser.miscellaneous",
            "hexagonit.socialbutton.browser.template",
            "hexagonit.socialbutton.browser.viewlet",
            "hexagonit.socialbutton.config",
            "hexagonit.socialbutton.data",
            "hexagonit.socialbutton.interfaces",
            "hexagonit.socialbutton.tests",
            "hexagonit.socialbutton.tests.base",
            "hexagonit.socialbutton.tests.old",
            "hexagonit.socialbutton.tests.test_functional",
            "hexagonit.socialbutton.tests.test_setup",
            "hexagonit.socialbutton.tests.test_upgrades",
            "hexagonit.socialbutton.tests.test_viewlet",
            "hexagonit.socialbutton.upgrades",
            "hexagonit.socialbutton.utility",
            "hexagonit.socialbutton.vocabulary"
        ],
        "version": "0.11"
    },
    "hexagonit.swfheader": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.swfheader",
            "hexagonit.swfheader.tests"
        ],
        "version": "1.2"
    },
    "hexagonit.testing": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.testing",
            "hexagonit.testing.browser",
            "hexagonit.testing.date",
            "hexagonit.testing.mech",
            "hexagonit.testing.mime",
            "hexagonit.testing.tests",
            "hexagonit.testing.tests.base",
            "hexagonit.testing.tests.browser",
            "hexagonit.testing.tests.browser.template",
            "hexagonit.testing.tests.test_browser",
            "hexagonit.testing.tests.test_date",
            "hexagonit.testing.tests.test_datetime",
            "hexagonit.testing.tests.test_functional",
            "hexagonit.testing.tests.test_mechanize",
            "hexagonit.testing.tests.test_mime"
        ],
        "version": "1.2.2"
    },
    "hexagonit.virtualgallery": {
        "cmdline": [],
        "modules": [
            "hexagonit",
            "hexagonit.virtualgallery",
            "hexagonit.virtualgallery.browser",
            "hexagonit.virtualgallery.browser.data",
            "hexagonit.virtualgallery.browser.gallery",
            "hexagonit.virtualgallery.browser.interfaces",
            "hexagonit.virtualgallery.browser.settings",
            "hexagonit.virtualgallery.interfaces",
            "hexagonit.virtualgallery.schema",
            "hexagonit.virtualgallery.tests",
            "hexagonit.virtualgallery.tests.base",
            "hexagonit.virtualgallery.tests.test_data",
            "hexagonit.virtualgallery.tests.test_functional",
            "hexagonit.virtualgallery.tests.test_gallery_view",
            "hexagonit.virtualgallery.tests.test_setup"
        ],
        "version": "1.0"
    },
    "hexahexacontadecimal": {
        "cmdline": [],
        "modules": [
            "hexahexacontadecimal",
            "hexahexacontadecimal.num_encode_base64"
        ],
        "version": "2.1"
    },
    "hexahub": {
        "cmdline": [],
        "modules": [
            "hexahub",
            "hexahub.cmd",
            "hexahub.connection",
            "hexahub.exceptions",
            "hexahub.response",
            "hexahub.utils"
        ],
        "version": "1.0.9"
    },
    "hexaprime": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hexclient": {
        "cmdline": [
            "hex_client"
        ],
        "modules": [
            "hex_client",
            "hex_connection",
            "spellbook"
        ],
        "version": "0.1.2"
    },
    "hexconnector": {
        "cmdline": [],
        "modules": [
            "hexconnector",
            "hexconnector.connector",
            "hexconnector.version"
        ],
        "version": "0.1.1"
    },
    "hexdomain": {
        "cmdline": [],
        "modules": [
            "hexdomain"
        ],
        "version": "1.0.0"
    },
    "hexdump": {
        "cmdline": [],
        "modules": [
            "hexdump"
        ],
        "version": "3.3"
    },
    "hexeditor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hexencoder": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hexes": {
        "cmdline": [],
        "modules": [
            "hexes",
            "hexes.aiotextpad",
            "hexes.behaviors",
            "hexes.hexes",
            "hexes.utils",
            "tests",
            "tests.test_hexes",
            "tests.test_utils"
        ],
        "version": "0.4.0"
    },
    "hexfile": {
        "cmdline": [],
        "modules": [
            "hexfile",
            "hexfile.core"
        ],
        "version": "0.1.1"
    },
    "hexformat": {
        "cmdline": [],
        "modules": [
            "hexformat",
            "hexformat.base",
            "hexformat.fillpattern",
            "hexformat.hexdump",
            "hexformat.intelhex",
            "hexformat.multipartbuffer",
            "hexformat.srecord",
            "hexformat.tektronix",
            "tests",
            "tests.test_base",
            "tests.test_fillpattern",
            "tests.test_hexdump",
            "tests.test_intelhex",
            "tests.test_inttobytes",
            "tests.test_multipartbuffer",
            "tests.test_random",
            "tests.test_randomcontent",
            "tests.test_srec_encode",
            "tests.test_srecord",
            "tests.test_temp"
        ],
        "version": "0.2"
    },
    "hexgrid": {
        "cmdline": [],
        "modules": [
            "hexgrid"
        ],
        "version": "0.2.1"
    },
    "hexgrid-py": {
        "cmdline": [],
        "modules": [],
        "version": "1.2"
    },
    "hexgridgeo-py": {
        "cmdline": [],
        "modules": [],
        "version": "1.2"
    },
    "hexip": {
        "cmdline": [
            "hexip"
        ],
        "modules": [
            "hexip",
            "hexip.hexip"
        ],
        "version": "0.1"
    },
    "hexlet": {
        "cmdline": [],
        "modules": [
            "hexlet",
            "hexlet.cli",
            "hexlet.commands",
            "hexlet.commands.dist",
            "hexlet.commands.exercise",
            "hexlet.commands.lesson",
            "hexlet.commands.shared",
            "hexlet.exceptions",
            "hexlet.lesson_cli",
            "hexlet.logger",
            "hexlet.routes",
            "hexlet.utils"
        ],
        "version": "0.6.3"
    },
    "hexmap": {
        "cmdline": [],
        "modules": [
            "hexmap"
        ],
        "version": "0.1.0"
    },
    "hexocr": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hexomega": {
        "cmdline": [],
        "modules": [
            "HexOmega",
            "HexOmega.settings",
            "HexOmega.urls",
            "HexOmega.wsgi",
            "log",
            "log.Log",
            "log.admin",
            "log.apps",
            "log.migrations",
            "log.models",
            "log.parse_to_html",
            "log.tests",
            "log.urls",
            "log.views",
            "users",
            "users.Claudia",
            "users.Claudia.add_user_form",
            "users.Claudia.tests",
            "users.Claudia.user_form",
            "users.Claudia.views",
            "users.Xav",
            "users.Xav.add_leader_form",
            "users.Xav.user_context",
            "users.Xav.views",
            "users.admin",
            "users.apps",
            "users.backends",
            "users.filters",
            "users.forms",
            "users.forms.login_form",
            "users.forms.member_form",
            "users.forms.project_forms",
            "users.forms.task_forms",
            "users.login_form",
            "users.management",
            "users.management.commands",
            "users.management.commands.run_scheduled",
            "users.management.commands.setup_init",
            "users.migrations",
            "users.migrations.0001_initial",
            "users.migrations.0002_auto_20170327_1709",
            "users.migrations.0003_auto_20170405_1014",
            "users.models",
            "users.other",
            "users.tasks",
            "users.templatetags",
            "users.templatetags.del_tags",
            "users.tests",
            "users.urls",
            "users.utils",
            "users.views"
        ],
        "version": "0.3"
    },
    "hexrd": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hexs": {
        "cmdline": [],
        "modules": [
            "hexs",
            "hexs.hexs",
            "hexs.tests",
            "hexs.tests.test_hex"
        ],
        "version": "1.1.0"
    },
    "hexy-viewer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hey": {
        "cmdline": [],
        "modules": [
            "src",
            "src.compression",
            "src.copy",
            "src.directions",
            "src.download",
            "src.find",
            "src.go",
            "src.google",
            "src.push",
            "src.rename",
            "src.tell",
            "src.update",
            "src.what"
        ],
        "version": "0.1.2"
    },
    "hey-april": {
        "cmdline": [],
        "modules": [
            "hey_april",
            "hey_april.april"
        ],
        "version": "1.0.5"
    },
    "hey-dl": {
        "cmdline": [],
        "modules": [
            "hey_dl",
            "hey_dl.directory_localizer"
        ],
        "version": "1.0.1"
    },
    "hey-pgsqlexec": {
        "cmdline": [],
        "modules": [
            "hey_pgsqlexec",
            "hey_pgsqlexec.pgsqlexec"
        ],
        "version": "1.0.2"
    },
    "hey-rexec": {
        "cmdline": [],
        "modules": [
            "hey_rexec",
            "hey_rexec.rexec"
        ],
        "version": "1.0.0"
    },
    "heyathena": {
        "cmdline": [],
        "modules": [
            "athena",
            "athena.api_library",
            "athena.api_library.geo_info_api",
            "athena.api_library.ifttt_api",
            "athena.api_library.sms_text_api",
            "athena.api_library.user_api",
            "athena.api_library.voice_browse_api",
            "athena.apis",
            "athena.brain",
            "athena.classes",
            "athena.classes.api",
            "athena.classes.input_field",
            "athena.classes.module",
            "athena.classes.response",
            "athena.classes.task",
            "athena.config",
            "athena.log",
            "athena.mods",
            "athena.modules",
            "athena.modules.active",
            "athena.modules.active.athena_control",
            "athena.modules.active.conversation",
            "athena.modules.active.geo_info",
            "athena.modules.active.google",
            "athena.modules.active.hello_world",
            "athena.modules.active.music",
            "athena.modules.active.shop",
            "athena.modules.active.sms_text",
            "athena.modules.active.twitter",
            "athena.modules.active.uber",
            "athena.modules.active.voice_browse",
            "athena.modules.active.wolfram",
            "athena.modules.passive",
            "athena.settings",
            "athena.stt",
            "athena.tests",
            "athena.tests.dependencies_test",
            "athena.tests.input_test",
            "athena.tests.mic_test",
            "athena.tts"
        ],
        "version": "1.3.2"
    },
    "heynicepackage": {
        "cmdline": [],
        "modules": [
            "HeyNicePackage",
            "HeyNicePackage.HeyThere",
            "HeyNicePackage.HowYouDoing"
        ],
        "version": "0.1"
    },
    "heywatch": {
        "cmdline": [],
        "modules": [
            "heywatch",
            "heywatch.config",
            "heywatch.job"
        ],
        "version": "2.2.1"
    },
    "heywood": {
        "cmdline": [],
        "modules": [
            "heywood",
            "heywood.main",
            "heywood.manager",
            "heywood.watchdog"
        ],
        "version": "0.3"
    },
    "hezhong": {
        "cmdline": [],
        "modules": [
            "hezhong"
        ],
        "version": "1.0.0"
    },
    "hf-bi": {
        "cmdline": [],
        "modules": [
            "hf_bi.setup",
            "hf_bi.test"
        ],
        "version": "0.0.1"
    },
    "hf-jk-nester": {
        "cmdline": [],
        "modules": [
            "hf_jk_nester"
        ],
        "version": "1.4.0"
    },
    "hf-nester": {
        "cmdline": [],
        "modules": [
            "hf_nester"
        ],
        "version": "1.3.0"
    },
    "hf01": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hf2": {
        "cmdline": [],
        "modules": [
            "hf2"
        ],
        "version": "1.1.1"
    },
    "hf3lint": {
        "cmdline": [],
        "modules": [
            "hf3lint"
        ],
        "version": "0.1-rc"
    },
    "hfbpnester": {
        "cmdline": [],
        "modules": [
            "hfbpnester"
        ],
        "version": "1.4.2"
    },
    "hfc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hfcca": {
        "cmdline": [],
        "modules": [
            "lizard_ext",
            "lizard_ext.htmloutput",
            "lizard_ext.keywords",
            "lizard_ext.lizardcpre",
            "lizard_ext.lizarddependencycount",
            "lizard_ext.lizardexitcount",
            "lizard_ext.lizardignoreassert",
            "lizard_ext.lizardinternalrelationship",
            "lizard_ext.lizardmccabe",
            "lizard_ext.lizardoutside",
            "lizard_ext.lizardwordcount",
            "lizard_ext.xmloutput",
            "lizard_languages",
            "lizard_languages.clike",
            "lizard_languages.code_reader",
            "lizard_languages.java",
            "lizard_languages.javascript",
            "lizard_languages.js_style_regex_expression",
            "lizard_languages.objc",
            "lizard_languages.python",
            "lizard_languages.ruby",
            "lizard_languages.script_language",
            "lizard_languages.swift",
            "lizard_languages.tnsdl",
            "lizard_languages.ttcn"
        ],
        "version": "1.10.2"
    },
    "hfch1levi": {
        "cmdline": [],
        "modules": [
            "HfCh1Levi"
        ],
        "version": "1.0.0"
    },
    "hfch1levirefined": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hfch3levi": {
        "cmdline": [],
        "modules": [
            "HfCh3Levi"
        ],
        "version": "1.0.0"
    },
    "hfch3levirefined": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hfch4levi": {
        "cmdline": [],
        "modules": [
            "HfCh4Levi"
        ],
        "version": "1.0.0"
    },
    "hfch5levi": {
        "cmdline": [],
        "modules": [
            "HfCh5Levi"
        ],
        "version": "1.0.4"
    },
    "hfch6levi": {
        "cmdline": [],
        "modules": [
            "HfCh6Levi"
        ],
        "version": "1.0.5"
    },
    "hfch7levi": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "hfchlevimodel": {
        "cmdline": [],
        "modules": [
            "HfChLeviModel"
        ],
        "version": "1.0.1"
    },
    "hfilesize": {
        "cmdline": [],
        "modules": [
            "hfilesize",
            "hfilesize.hfilesize"
        ],
        "version": "0.1.0"
    },
    "hflags": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "hflossk": {
        "cmdline": [],
        "modules": [
            "hflossk",
            "hflossk.blueprints",
            "hflossk.cli",
            "hflossk.cli.openshift_utils",
            "hflossk.cli.util",
            "hflossk.participants",
            "hflossk.site",
            "hflossk.util",
            "hflossk.version",
            "tests",
            "tests.hflossk_tests"
        ],
        "version": "0.5.10"
    },
    "hfnester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hfo-py": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "hfofpython": {
        "cmdline": [],
        "modules": [
            "HFofPython"
        ],
        "version": "1.1.0"
    },
    "hfos": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hfp-nester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hfplesson1": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hfprintnestedlists": {
        "cmdline": [],
        "modules": [
            "hfprintnestedlists"
        ],
        "version": "1.0.0"
    },
    "hfpy2": {
        "cmdline": [],
        "modules": [
            "hfpy2"
        ],
        "version": "1.4.0"
    },
    "hfpython": {
        "cmdline": [],
        "modules": [
            "hfpython"
        ],
        "version": "1.0.0"
    },
    "hfpython-chapter1-nester": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "hfpython-nester": {
        "cmdline": [],
        "modules": [
            "hfpython_nester"
        ],
        "version": "1.4.0"
    },
    "hfpythonstudy": {
        "cmdline": [],
        "modules": [
            "print_help",
            "study_io_2"
        ],
        "version": "1.0.6"
    },
    "hfs": {
        "cmdline": [],
        "modules": [
            "hfs",
            "hfs.bottle",
            "hfs.constants",
            "hfs.core",
            "hfs.show_my_ip"
        ],
        "version": "0.6.0"
    },
    "hfsslib": {
        "cmdline": [],
        "modules": [
            "hfsslib",
            "hfsslib.constants",
            "hfsslib.hfss",
            "hfsslib.hfss_writer"
        ],
        "version": "0.0.0"
    },
    "hfst": {
        "cmdline": [],
        "modules": [
            "hfst",
            "hfst.exceptions",
            "hfst.sfst_rules",
            "hfst.xerox_rules",
            "libhfst"
        ],
        "version": "3.12.2.2b0"
    },
    "hft": {
        "cmdline": [],
        "modules": [
            "hft",
            "hft.forecast",
            "hft.metric",
            "hft.optimization",
            "hft.plot",
            "hft.portfolio",
            "hft.position",
            "hft.util",
            "test",
            "test.test_add_positions",
            "test.test_docstring",
            "test.test_forecast",
            "test.test_metric_math",
            "test.test_optimization",
            "test.test_plot_show",
            "test.test_portfolio_create",
            "test.test_portfolio_metrics",
            "test.test_portfolio_settings",
            "test.test_position_metrics",
            "test.test_scale"
        ],
        "version": "1.0.5"
    },
    "hft-dj": {
        "cmdline": [],
        "modules": [
            "HFT"
        ],
        "version": "1.0.0"
    },
    "hftools": {
        "cmdline": [],
        "modules": [
            "hftools",
            "hftools.hepdata",
            "hftools.plotting",
            "hftools.plotting.quickplot",
            "hftools.utils",
            "hftools.utils.parsexml"
        ],
        "version": "0.0.2"
    },
    "hfttools": {
        "cmdline": [],
        "modules": [
            "hfttools",
            "hfttools.core"
        ],
        "version": "0.0.2"
    },
    "hfut": {
        "cmdline": [],
        "modules": [
            "hfut",
            "hfut.exception",
            "hfut.interface",
            "hfut.log",
            "hfut.parser",
            "hfut.session",
            "hfut.shortcut",
            "hfut.util",
            "hfut.value",
            "tests",
            "tests.conftest",
            "tests.test_log",
            "tests.test_parser",
            "tests.test_session",
            "tests.test_shortcut",
            "tests.test_util"
        ],
        "version": "2.2.3"
    },
    "hg-api": {
        "cmdline": [],
        "modules": [
            "hg_api",
            "hg_api.api",
            "hg_api.utils"
        ],
        "version": "0.1.0"
    },
    "hg-autohooks": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hg-branchlog": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "hg-commit-sanity": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hg-config-reader": {
        "cmdline": [],
        "modules": [
            "hg_config_reader",
            "hg_config_reader.utils"
        ],
        "version": "0.0.1"
    },
    "hg-configexpress": {
        "cmdline": [],
        "modules": [
            "hgext3rd",
            "hgext3rd.configexpress"
        ],
        "version": "0.1.0"
    },
    "hg-delivery": {
        "cmdline": [],
        "modules": [
            "hg_delivery",
            "hg_delivery.models",
            "hg_delivery.nodes",
            "hg_delivery.predicates",
            "hg_delivery.scripts",
            "hg_delivery.scripts.initializedb",
            "hg_delivery.scripts.update_db",
            "hg_delivery.security",
            "hg_delivery.subscribers",
            "hg_delivery.tests",
            "hg_delivery.views"
        ],
        "version": "1.0.5"
    },
    "hg-diff": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hg-evolve": {
        "cmdline": [],
        "modules": [
            "hgext3rd",
            "hgext3rd.evolve",
            "hgext3rd.evolve.checkheads",
            "hgext3rd.evolve.debugcmd",
            "hgext3rd.evolve.exthelper",
            "hgext3rd.evolve.legacy",
            "hgext3rd.evolve.metadata",
            "hgext3rd.evolve.obscache",
            "hgext3rd.evolve.obsdiscovery",
            "hgext3rd.evolve.obsexchange",
            "hgext3rd.evolve.obshistory",
            "hgext3rd.evolve.safeguard",
            "hgext3rd.evolve.serveronly",
            "hgext3rd.evolve.stablerange",
            "hgext3rd.evolve.utility",
            "hgext3rd.topic",
            "hgext3rd.topic.constants",
            "hgext3rd.topic.destination",
            "hgext3rd.topic.discovery",
            "hgext3rd.topic.evolvebits",
            "hgext3rd.topic.revset",
            "hgext3rd.topic.stack",
            "hgext3rd.topic.topicmap"
        ],
        "version": "6.2.0"
    },
    "hg-fingerprint": {
        "cmdline": [],
        "modules": [
            "hg_fingerprint",
            "hg_fingerprint.test",
            "hg_fingerprint.test.test_fingerprint"
        ],
        "version": "0.1.3"
    },
    "hg-git": {
        "cmdline": [],
        "modules": [
            "hggit",
            "hggit._ssh",
            "hggit.compat",
            "hggit.git2hg",
            "hggit.git_handler",
            "hggit.gitdirstate",
            "hggit.gitrepo",
            "hggit.hg2git",
            "hggit.hgrepo",
            "hggit.overlay",
            "hggit.util",
            "hggit.verify"
        ],
        "version": "0.8.6"
    },
    "hg-github": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.5"
    },
    "hg-importfs": {
        "cmdline": [],
        "modules": [
            "importfs"
        ],
        "version": "1.3.2"
    },
    "hg-number": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.5"
    },
    "hg-request-pull": {
        "cmdline": [],
        "modules": [
            "hgext.request-pull",
            "request-pull"
        ],
        "version": "0.5.1"
    },
    "hg-versions": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.1"
    },
    "hg-webhooks": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hg-wiki": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hgallpaths": {
        "cmdline": [],
        "modules": [
            "hgallpaths"
        ],
        "version": "0.1"
    },
    "hgapi": {
        "cmdline": [],
        "modules": [
            "hgapi",
            "hgapi.hgapi",
            "hgapi.jython_in_practice",
            "hgapi.testhgapi"
        ],
        "version": "1.7.2"
    },
    "hgblog": {
        "cmdline": [],
        "modules": [
            "custom_fixers",
            "custom_fixers.fix_alt_unicode",
            "etree13",
            "etree13.ElementPath",
            "etree13.ElementTree",
            "etree13.HTMLTreeBuilder",
            "hgblog",
            "hgblog.generate_html",
            "hgblog.refresh",
            "hgblog.server",
            "hgblog.utils",
            "sphinx",
            "sphinx.addnodes",
            "sphinx.apidoc",
            "sphinx.application",
            "sphinx.builders",
            "sphinx.builders.changes",
            "sphinx.builders.devhelp",
            "sphinx.builders.epub",
            "sphinx.builders.gettext",
            "sphinx.builders.html",
            "sphinx.builders.htmlhelp",
            "sphinx.builders.latex",
            "sphinx.builders.linkcheck",
            "sphinx.builders.manpage",
            "sphinx.builders.qthelp",
            "sphinx.builders.texinfo",
            "sphinx.builders.text",
            "sphinx.builders.websupport",
            "sphinx.cmdline",
            "sphinx.config",
            "sphinx.directives",
            "sphinx.directives.code",
            "sphinx.directives.other",
            "sphinx.domains",
            "sphinx.domains.c",
            "sphinx.domains.cpp",
            "sphinx.domains.javascript",
            "sphinx.domains.python",
            "sphinx.domains.rst",
            "sphinx.domains.std",
            "sphinx.environment",
            "sphinx.errors",
            "sphinx.ext",
            "sphinx.ext.autodoc",
            "sphinx.ext.autosummary",
            "sphinx.ext.autosummary.generate",
            "sphinx.ext.coverage",
            "sphinx.ext.doctest",
            "sphinx.ext.extlinks",
            "sphinx.ext.graphviz",
            "sphinx.ext.ifconfig",
            "sphinx.ext.inheritance_diagram",
            "sphinx.ext.intersphinx",
            "sphinx.ext.jsmath",
            "sphinx.ext.mathbase",
            "sphinx.ext.mathjax",
            "sphinx.ext.oldcmarkup",
            "sphinx.ext.pngmath",
            "sphinx.ext.refcounting",
            "sphinx.ext.todo",
            "sphinx.ext.viewcode",
            "sphinx.highlighting",
            "sphinx.jinja2glue",
            "sphinx.locale",
            "sphinx.pycode",
            "sphinx.pycode.nodes",
            "sphinx.pycode.pgen2",
            "sphinx.pycode.pgen2.driver",
            "sphinx.pycode.pgen2.grammar",
            "sphinx.pycode.pgen2.literals",
            "sphinx.pycode.pgen2.parse",
            "sphinx.pycode.pgen2.pgen",
            "sphinx.pycode.pgen2.token",
            "sphinx.pycode.pgen2.tokenize",
            "sphinx.pygments_styles",
            "sphinx.quickstart",
            "sphinx.roles",
            "sphinx.search",
            "sphinx.search.en",
            "sphinx.search.ja",
            "sphinx.setup_command",
            "sphinx.theming",
            "sphinx.util",
            "sphinx.util.compat",
            "sphinx.util.console",
            "sphinx.util.docfields",
            "sphinx.util.docstrings",
            "sphinx.util.inspect",
            "sphinx.util.jsdump",
            "sphinx.util.jsonimpl",
            "sphinx.util.matching",
            "sphinx.util.nodes",
            "sphinx.util.osutil",
            "sphinx.util.png",
            "sphinx.util.pycompat",
            "sphinx.util.smartypants",
            "sphinx.util.stemmer",
            "sphinx.util.tags",
            "sphinx.util.texescape",
            "sphinx.util.websupport",
            "sphinx.versioning",
            "sphinx.websupport",
            "sphinx.websupport.errors",
            "sphinx.websupport.search",
            "sphinx.websupport.search.nullsearch",
            "sphinx.websupport.search.whooshsearch",
            "sphinx.websupport.search.xapiansearch",
            "sphinx.websupport.storage",
            "sphinx.websupport.storage.differ",
            "sphinx.websupport.storage.sqlalchemy_db",
            "sphinx.websupport.storage.sqlalchemystorage",
            "sphinx.writers",
            "sphinx.writers.html",
            "sphinx.writers.latex",
            "sphinx.writers.manpage",
            "sphinx.writers.texinfo",
            "sphinx.writers.text",
            "sphinx.writers.websupport"
        ],
        "version": "0.7.1"
    },
    "hgcampfire": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.2"
    },
    "hgcanttype": {
        "cmdline": [],
        "modules": [
            "hgcanttype"
        ],
        "version": "1.0.8"
    },
    "hgcp": {
        "cmdline": [],
        "modules": [
            "codeviking",
            "codeviking.hg",
            "codeviking.hg.hgcp",
            "codeviking.hg.hgcp.commands"
        ],
        "version": "0.12"
    },
    "hgdiffmetrics": {
        "cmdline": [],
        "modules": [
            "hgdiffmetrics",
            "hgdiffmetrics.hooks"
        ],
        "version": "1.0"
    },
    "hgdistver": {
        "cmdline": [],
        "modules": [],
        "version": "0.25"
    },
    "hgenvconfig": {
        "cmdline": [],
        "modules": [
            "hgext.envconfig"
        ],
        "version": "0.1.1"
    },
    "hgexternals": {
        "cmdline": [],
        "modules": [
            "hgexternals"
        ],
        "version": "0.2"
    },
    "hgf": {
        "cmdline": [],
        "modules": [
            "hgf",
            "hgf.app",
            "hgf.gui",
            "hgf.gui.base",
            "hgf.gui.image",
            "hgf.gui.menu",
            "hgf.gui.switch",
            "hgf.gui.text",
            "hgf.gui.window",
            "hgf.model",
            "hgf.util",
            "hgf.util.keys",
            "hgf.util.timer"
        ],
        "version": "0.1.1"
    },
    "hgflow": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hgforest-crew": {
        "cmdline": [],
        "modules": [
            "forest"
        ],
        "version": "dev"
    },
    "hgfs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hgftp": {
        "cmdline": [],
        "modules": [
            "hgftp"
        ],
        "version": "0.1.1"
    },
    "hggit2": {
        "cmdline": [],
        "modules": [
            "hggit2.hggitRun"
        ],
        "version": "0.1"
    },
    "hggit3": {
        "cmdline": [],
        "modules": [
            "hggit3.hggitRun"
        ],
        "version": "0.2"
    },
    "hgh-headfirst-test": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "hghooks": {
        "cmdline": [],
        "modules": [
            "hghooks",
            "hghooks.code",
            "hghooks.trachooks"
        ],
        "version": "0.7.0"
    },
    "hghudson": {
        "cmdline": [],
        "modules": [
            "hghudson",
            "hghudson.tests",
            "hghudson.tests.testhook"
        ],
        "version": "0.1.1dev"
    },
    "hgicommon": {
        "cmdline": [],
        "modules": [
            "hgicommon",
            "hgicommon.collections",
            "hgicommon.data_source",
            "hgicommon.data_source.basic",
            "hgicommon.data_source.common",
            "hgicommon.data_source.dynamic_from_file",
            "hgicommon.data_source.static_from_file",
            "hgicommon.decorators",
            "hgicommon.decorators.gotta_catchem_all",
            "hgicommon.docker",
            "hgicommon.docker.client",
            "hgicommon.docker.models",
            "hgicommon.enums",
            "hgicommon.helpers",
            "hgicommon.managers",
            "hgicommon.mixable",
            "hgicommon.mixable.listenable",
            "hgicommon.mixable.priority",
            "hgicommon.models",
            "hgicommon.testing",
            "hgicommon.tests",
            "hgicommon.tests._helpers",
            "hgicommon.tests._stubs",
            "hgicommon.tests.data_source",
            "hgicommon.tests.data_source._helpers",
            "hgicommon.tests.data_source._stubs",
            "hgicommon.tests.data_source.test_basic",
            "hgicommon.tests.data_source.test_dynamic_from_file",
            "hgicommon.tests.data_source.test_static_from_file",
            "hgicommon.tests.decorators",
            "hgicommon.tests.decorators.test_gotta_catchem_all",
            "hgicommon.tests.mixable",
            "hgicommon.tests.mixable.test_listenable",
            "hgicommon.tests.mixable.test_priority",
            "hgicommon.tests.test_collection",
            "hgicommon.tests.test_helpers",
            "hgicommon.tests.test_managers",
            "hgicommon.tests.test_models",
            "hgicommon.tests.test_testing",
            "hgicommon.tests.threading",
            "hgicommon.tests.threading.test_counting_lock",
            "hgicommon.threading",
            "hgicommon.threading.counting_lock"
        ],
        "version": "1.3.0"
    },
    "hgijson": {
        "cmdline": [],
        "modules": [
            "hgijson",
            "hgijson.json",
            "hgijson.json._converters",
            "hgijson.json._serialization",
            "hgijson.json._serializers",
            "hgijson.json.automatic",
            "hgijson.json.builders",
            "hgijson.json.interfaces",
            "hgijson.json.models",
            "hgijson.json.primitive",
            "hgijson.models",
            "hgijson.serialization",
            "hgijson.serializers",
            "hgijson.tests",
            "hgijson.tests._models",
            "hgijson.tests._serializers",
            "hgijson.tests._stubs",
            "hgijson.tests.json",
            "hgijson.tests.json._helpers",
            "hgijson.tests.json._mocks",
            "hgijson.tests.json._serializers",
            "hgijson.tests.json.test_automatic",
            "hgijson.tests.json.test_builders",
            "hgijson.tests.json.test_converters",
            "hgijson.tests.json.test_models",
            "hgijson.tests.json.test_primitive",
            "hgijson.tests.json.test_serialization",
            "hgijson.tests.test_models",
            "hgijson.tests.test_serialization",
            "hgijson.tests.test_serializers",
            "hgijson.types"
        ],
        "version": "1.4.3"
    },
    "hglist": {
        "cmdline": [],
        "modules": [
            "hglist",
            "hglist.filters",
            "hglist.list_files"
        ],
        "version": "0.3"
    },
    "hglock": {
        "cmdline": [],
        "modules": [
            "hglock",
            "hglock.pushkeyrpc",
            "hglock.unrepr"
        ],
        "version": "0.5.4"
    },
    "hgmonitor": {
        "cmdline": [],
        "modules": [
            "hgmonitor",
            "hgmonitor.hglib",
            "hgmonitor.hgmonlib"
        ],
        "version": "0.5"
    },
    "hgnested": {
        "cmdline": [],
        "modules": [
            "hgnested"
        ],
        "version": "0.8"
    },
    "hgpaste": {
        "cmdline": [],
        "modules": [
            "hgpaste",
            "hgpaste.factory"
        ],
        "version": "0.1.1"
    },
    "hgpasteapp": {
        "cmdline": [],
        "modules": [
            "hgpasteapp"
        ],
        "version": "0.1.3"
    },
    "hgrecipe": {
        "cmdline": [],
        "modules": [
            "hgrecipe",
            "hgrecipe.recipe",
            "hgrecipe.tests"
        ],
        "version": "0.9"
    },
    "hgreview": {
        "cmdline": [],
        "modules": [
            "hgreview"
        ],
        "version": "0.4"
    },
    "hgshelve": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hgspellcheck": {
        "cmdline": [],
        "modules": [],
        "version": "1.0rc2"
    },
    "hgsqs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hgstools": {
        "cmdline": [],
        "modules": [
            "hgsTools",
            "hgsTools.auxiliary",
            "hgsTools.auxiliary.s3tools",
            "hgsTools.messaging"
        ],
        "version": "0.2.71a1"
    },
    "hgsubversion": {
        "cmdline": [],
        "modules": [
            "hgsubversion",
            "hgsubversion.compathacks",
            "hgsubversion.editor",
            "hgsubversion.hooks",
            "hgsubversion.hooks.updatemeta",
            "hgsubversion.layouts",
            "hgsubversion.layouts.base",
            "hgsubversion.layouts.custom",
            "hgsubversion.layouts.single",
            "hgsubversion.layouts.standard",
            "hgsubversion.maps",
            "hgsubversion.pushmod",
            "hgsubversion.replay",
            "hgsubversion.stupid",
            "hgsubversion.svncommands",
            "hgsubversion.svnexternals",
            "hgsubversion.svnmeta",
            "hgsubversion.svnrepo",
            "hgsubversion.svnwrap",
            "hgsubversion.svnwrap.common",
            "hgsubversion.svnwrap.subvertpy_wrapper",
            "hgsubversion.svnwrap.svn_swig_wrapper",
            "hgsubversion.util",
            "hgsubversion.verify",
            "hgsubversion.wrappers"
        ],
        "version": "1.8.7"
    },
    "hgsvn": {
        "cmdline": [],
        "modules": [
            "hgsvn",
            "hgsvn.common",
            "hgsvn.errors",
            "hgsvn.hgclient",
            "hgsvn.run",
            "hgsvn.run.common",
            "hgsvn.run.hgimportsvn",
            "hgsvn.run.hgpullsvn",
            "hgsvn.run.hgpushsvn",
            "hgsvn.shell",
            "hgsvn.svnclient",
            "hgsvn.ui",
            "hgsvn.unittests",
            "hgsvn.unittests._test",
            "hgsvn.unittests.test_client_utf",
            "hgsvn.unittests.test_common",
            "hgsvn.unittests.test_hgclient",
            "hgsvn.unittests.test_hgclient_base",
            "hgsvn.unittests.test_svnclient"
        ],
        "version": "0.5.1"
    },
    "hgticket": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "hgtk": {
        "cmdline": [],
        "modules": [
            "hgtk",
            "hgtk.checker",
            "hgtk.const",
            "hgtk.exception",
            "hgtk.josa",
            "hgtk.letter",
            "hgtk.text"
        ],
        "version": "0.1.1"
    },
    "hgtools": {
        "cmdline": [],
        "modules": [
            "hgtools",
            "hgtools.managers",
            "hgtools.managers.base",
            "hgtools.managers.cmd",
            "hgtools.managers.library",
            "hgtools.managers.reentry",
            "hgtools.managers.subprocess",
            "hgtools.plugins",
            "hgtools.tests",
            "hgtools.tests.conftest",
            "hgtools.tests.test_git",
            "hgtools.tests.test_managers",
            "hgtools.tests.test_mercurial",
            "hgtools.tests.test_reentry",
            "hgtools.tests.test_versioning",
            "hgtools.util",
            "hgtools.versioning"
        ],
        "version": "6.5.2"
    },
    "hgversion": {
        "cmdline": [],
        "modules": [
            "hgversion",
            "hgversion.hgvers",
            "hgversion.hgversion"
        ],
        "version": "0.1.8"
    },
    "hgview": {
        "cmdline": [
            "hgview"
        ],
        "modules": [
            "hgext.hgview",
            "hgviewlib",
            "hgviewlib.__pkginfo__",
            "hgviewlib.application",
            "hgviewlib.config",
            "hgviewlib.decorators",
            "hgviewlib.hggraph",
            "hgviewlib.hgpatches",
            "hgviewlib.hgpatches.graphmod",
            "hgviewlib.hgpatches.mqsupport",
            "hgviewlib.hgpatches.phases",
            "hgviewlib.hgpatches.scmutil",
            "hgviewlib.hgviewhelp",
            "hgviewlib.inotify",
            "hgviewlib.util"
        ],
        "version": "1.9.0"
    },
    "hgvs": {
        "cmdline": [],
        "modules": [
            "hgvs",
            "hgvs.assemblymapper",
            "hgvs.config",
            "hgvs.dataproviders",
            "hgvs.dataproviders.interface",
            "hgvs.dataproviders.seqfetcher",
            "hgvs.dataproviders.uta",
            "hgvs.decorators",
            "hgvs.decorators.deprecated",
            "hgvs.decorators.lru_cache",
            "hgvs.edit",
            "hgvs.enums",
            "hgvs.exceptions",
            "hgvs.hgvsposition",
            "hgvs.intervalmapper",
            "hgvs.location",
            "hgvs.normalizer",
            "hgvs.parser",
            "hgvs.posedit",
            "hgvs.projector",
            "hgvs.sequencevariant",
            "hgvs.shell",
            "hgvs.transcriptmapper",
            "hgvs.utils",
            "hgvs.utils.PersistentDict",
            "hgvs.utils.altseq_to_hgvsp",
            "hgvs.utils.altseqbuilder",
            "hgvs.utils.context",
            "hgvs.utils.norm",
            "hgvs.utils.orderedenum",
            "hgvs.utils.validation",
            "hgvs.validator",
            "hgvs.variantmapper"
        ],
        "version": "1.0.0.post3"
    },
    "hgvs-lexicon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hgwatchman": {
        "cmdline": [],
        "modules": [
            "hgwatchman",
            "hgwatchman.client",
            "hgwatchman.pywatchman",
            "hgwatchman.state"
        ],
        "version": "0.5.4"
    },
    "hgwebcommit": {
        "cmdline": [],
        "modules": [
            "hgwebcommit",
            "hgwebcommit.actions",
            "hgwebcommit.actions.base",
            "hgwebcommit.actions.command",
            "hgwebcommit.actions.commit",
            "hgwebcommit.actions.decorators",
            "hgwebcommit.actions.hello",
            "hgwebcommit.actions.loaders",
            "hgwebcommit.forms",
            "hgwebcommit.hgcmd",
            "hgwebcommit.logger",
            "hgwebcommit.main",
            "hgwebcommit.repository",
            "hgwebcommit.repository.base",
            "hgwebcommit.repository.dummy",
            "hgwebcommit.repository.hg",
            "hgwebcommit.utils",
            "hgwebcommit.views",
            "tests",
            "tests.action_testcases"
        ],
        "version": "0.2"
    },
    "hgwebinit": {
        "cmdline": [],
        "modules": [
            "src",
            "src.hgwebinit"
        ],
        "version": "0.1.0"
    },
    "hgwin": {
        "cmdline": [],
        "modules": [
            "hgwin",
            "hgwin.hgwin",
            "hgwin.newconnectiondialog",
            "hgwin.serverlist",
            "hgwin.servers",
            "hgwin.taskbaricon"
        ],
        "version": "1.0d"
    },
    "hgx": {
        "cmdline": [],
        "modules": [
            "hgx",
            "hgx.accounting",
            "hgx.app",
            "hgx.bootstrapping",
            "hgx.comms",
            "hgx.config",
            "hgx.core",
            "hgx.daemon",
            "hgx.dispatch",
            "hgx.embed",
            "hgx.exceptions",
            "hgx.gao",
            "hgx.hypothetical",
            "hgx.inquisition",
            "hgx.ipc",
            "hgx.lawyer",
            "hgx.librarian",
            "hgx.logutils",
            "hgx.objproxy",
            "hgx.persistence",
            "hgx.postal",
            "hgx.privateer",
            "hgx.remotes",
            "hgx.rolodex",
            "hgx.service",
            "hgx.undertaker",
            "hgx.utils"
        ],
        "version": "0.1.0"
    },
    "hh": {
        "cmdline": [],
        "modules": [],
        "version": "2.0.0"
    },
    "hh-elastic2-doc-manager": {
        "cmdline": [],
        "modules": [
            "mongo_connector",
            "mongo_connector.doc_managers",
            "mongo_connector.doc_managers.formatters_proxy",
            "mongo_connector.doc_managers.hh_elastic2_doc_manager"
        ],
        "version": "0.1.0"
    },
    "hh-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4"
    },
    "hh-ssl-cert-check": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "hhcalcs": {
        "cmdline": [],
        "modules": [
            "hhcalcs",
            "hhcalcs.hydraulics"
        ],
        "version": "0.1"
    },
    "hhgkjif": {
        "cmdline": [],
        "modules": [
            "hhgkjif"
        ],
        "version": "0.0.1"
    },
    "hhh1": {
        "cmdline": [],
        "modules": [
            "hhh1"
        ],
        "version": "1.0.0"
    },
    "hhic": {
        "cmdline": [],
        "modules": [
            "hhic",
            "hhic.connector",
            "hhic.hh",
            "hhic.tools"
        ],
        "version": "1.0"
    },
    "hhnester": {
        "cmdline": [],
        "modules": [
            "hhnester"
        ],
        "version": "1.0.0"
    },
    "hhpp": {
        "cmdline": [],
        "modules": [
            "hhpp",
            "hhpp.llive",
            "hhpp.llive.fallbacks",
            "test",
            "test.llive",
            "test.llive.test_fallbacks"
        ],
        "version": "0.1"
    },
    "hhwnester": {
        "cmdline": [],
        "modules": [
            "hhwnester"
        ],
        "version": "1.3.3"
    },
    "hi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hiatus": {
        "cmdline": [],
        "modules": [
            "hiatus"
        ],
        "version": "0.0.1"
    },
    "hibget": {
        "cmdline": [],
        "modules": [
            "hibget",
            "hibget.requests_logging",
            "hibget.utils",
            "hibget.widgets"
        ],
        "version": "0.0.2"
    },
    "hibp": {
        "cmdline": [],
        "modules": [
            "hibp",
            "hibp.example",
            "hibp.hibp"
        ],
        "version": "0.0.5"
    },
    "hic": {
        "cmdline": [],
        "modules": [
            "hic",
            "hic.flow",
            "hic.initial",
            "hic.test",
            "hic.test.test_flow",
            "hic.test.test_initial"
        ],
        "version": "0.1.0"
    },
    "hic2cool": {
        "cmdline": [],
        "modules": [
            "hic2cool",
            "hic2cool._version",
            "hic2cool.hic2cool_utils"
        ],
        "version": "0.3.3"
    },
    "hicexplorer": {
        "cmdline": [
            "findRestSite",
            "hicBuildMatrix",
            "hicCompareMatrices",
            "hicCorrectMatrix",
            "hicCorrelate",
            "hicExport",
            "hicFindEnrichedContacts",
            "hicFindTADs",
            "hicInfo",
            "hicMergeMatrixBins",
            "hicPlotDistVsCounts",
            "hicPlotMatrix",
            "hicPlotTADs",
            "hicQC",
            "hicSumMatrices",
            "hicexplorer"
        ],
        "modules": [
            "hicexplorer",
            "hicexplorer.HiCMatrix",
            "hicexplorer._version",
            "hicexplorer.findRestSite",
            "hicexplorer.hicBuildMatrix",
            "hicexplorer.hicCompareMatrices",
            "hicexplorer.hicCorrectMatrix",
            "hicexplorer.hicCorrelate",
            "hicexplorer.hicExport",
            "hicexplorer.hicFindEnrichedContacts",
            "hicexplorer.hicFindEnrichedContacts_old_version",
            "hicexplorer.hicFindTADs",
            "hicexplorer.hicFindTADspectra",
            "hicexplorer.hicInfo",
            "hicexplorer.hicLog2Ratio",
            "hicexplorer.hicLoopCalling",
            "hicexplorer.hicMergeMatrixBins",
            "hicexplorer.hicMergeTADbins",
            "hicexplorer.hicPlotDistVsCounts",
            "hicexplorer.hicPlotMatrix",
            "hicexplorer.hicPlotTADs",
            "hicexplorer.hicPrepareQCreport",
            "hicexplorer.hicSumMatrices",
            "hicexplorer.iterativeCorrection",
            "hicexplorer.liberman_load",
            "hicexplorer.list_tools",
            "hicexplorer.mapReduce",
            "hicexplorer.parserCommon",
            "hicexplorer.readBed",
            "hicexplorer.reduceMatrix",
            "hicexplorer.trackPlot",
            "hicexplorer.utilities"
        ],
        "version": "1.7.2"
    },
    "hichao-test": {
        "cmdline": [],
        "modules": [
            "hichao_test",
            "hichao_test.conf",
            "hichao_test.curl_builder",
            "hichao_test.curl_reader",
            "hichao_test.decorator",
            "hichao_torn",
            "hichao_torn.main",
            "hichao_torn.test",
            "hichao_torn.test.runtests",
            "hichao_torn.test.test",
            "hichao_torn.test.util",
            "hichao_torn.views"
        ],
        "version": "0.2.2"
    },
    "hichao-thrift": {
        "cmdline": [],
        "modules": [
            "thrift",
            "thrift.TSCons",
            "thrift.TSerialization",
            "thrift.TTornado",
            "thrift.Thrift",
            "thrift.protocol",
            "thrift.protocol.TBase",
            "thrift.protocol.TBinaryProtocol",
            "thrift.protocol.TCompactProtocol",
            "thrift.protocol.TJSONProtocol",
            "thrift.protocol.TProtocol",
            "thrift.server",
            "thrift.server.THttpServer",
            "thrift.server.TNonblockingServer",
            "thrift.server.TProcessPoolServer",
            "thrift.server.TServer",
            "thrift.transport",
            "thrift.transport.THttpClient",
            "thrift.transport.TSSLSocket",
            "thrift.transport.TSocket",
            "thrift.transport.TTransport",
            "thrift.transport.TTwisted",
            "thrift.transport.TZlibTransport"
        ],
        "version": "1.0.1"
    },
    "hichipper": {
        "cmdline": [],
        "modules": [
            "hichipper",
            "hichipper.cli"
        ],
        "version": "0.6.0"
    },
    "hickle": {
        "cmdline": [],
        "modules": [
            "hickle",
            "hickle_legacy"
        ],
        "version": "2.1.0"
    },
    "hicore": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hicplotlib": {
        "cmdline": [],
        "modules": [
            "hicplotlib",
            "hicplotlib.GenomicIntervals",
            "hicplotlib.HiCParameters",
            "hicplotlib.HiCPlot"
        ],
        "version": "0.3"
    },
    "hictornadio2": {
        "cmdline": [],
        "modules": [
            "tornadio2",
            "tornadio2.conn",
            "tornadio2.flashserver",
            "tornadio2.gen",
            "tornadio2.periodic",
            "tornadio2.persistent",
            "tornadio2.polling",
            "tornadio2.preflight",
            "tornadio2.proto",
            "tornadio2.router",
            "tornadio2.server",
            "tornadio2.session",
            "tornadio2.sessioncontainer",
            "tornadio2.stats"
        ],
        "version": "0.1.2"
    },
    "hid": {
        "cmdline": [],
        "modules": [
            "hid"
        ],
        "version": "0.1.1"
    },
    "hidapi": {
        "cmdline": [],
        "modules": [],
        "version": "0.7.99.post20"
    },
    "hidapi-cffi": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.1"
    },
    "hidash": {
        "cmdline": [],
        "modules": [
            "hidash",
            "hidash.admin",
            "hidash.forms",
            "hidash.migrations",
            "hidash.migrations.0001_initial",
            "hidash.migrations.0002_auto_20160929_1312",
            "hidash.migrations.0003_auto_20161005_0715",
            "hidash.migrations.0004_auto_20161012_0739",
            "hidash.migrations.0005_auto_20161213_1214",
            "hidash.migrations.0006_auto_20161213_1238",
            "hidash.migrations.0007_auto_20170206_1206",
            "hidash.models",
            "hidash.router",
            "hidash.south_migrations",
            "hidash.south_migrations.0001_initial",
            "hidash.south_migrations.0002_auto__del_chartgroup",
            "hidash.south_migrations.0003_auto__add_group__add_chartgroup__add_chartparameter__add_field_chart_s",
            "hidash.south_migrations.0004_auto__add_field_scheduledreport_email_subject__add_field_scheduledrepo",
            "hidash.south_migrations.0005_auto__add_field_scheduledreportparam_is_parameter_value_sql_function",
            "hidash.south_migrations.0006_auto__add_field_scheduledreport_group__add_field_scheduledreport_templ",
            "hidash.south_migrations.0007_auto__chg_field_chart_name__chg_field_chart_height__chg_field_chart_di",
            "hidash.south_migrations.0008_auto__add_field_group_template",
            "hidash.views"
        ],
        "version": "0.2.29"
    },
    "hidden-markov": {
        "cmdline": [],
        "modules": [
            "hidden_markov",
            "hidden_markov.hmm_class"
        ],
        "version": "0.3.2"
    },
    "hiddev": {
        "cmdline": [
            "hiddevexplorer"
        ],
        "modules": [
            "hiddev",
            "hiddev.gui",
            "hiddev.monitorcontrol",
            "hiddev.usages"
        ],
        "version": "0.4.2"
    },
    "hide-code": {
        "cmdline": [],
        "modules": [
            "hide_code",
            "hide_code.hide_code",
            "hide_code.hide_code_config",
            "hide_code.hide_code_html_exporter",
            "hide_code.hide_code_pdf_exporter",
            "hide_code.hide_code_preprocessor",
            "hide_code.utils"
        ],
        "version": "0.4.0"
    },
    "hide-env": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hidi": {
        "cmdline": [],
        "modules": [
            "hidi",
            "hidi.clean",
            "hidi.examples",
            "hidi.examples.forking",
            "hidi.examples.simple",
            "hidi.forking",
            "hidi.inout",
            "hidi.linalg",
            "hidi.matrix",
            "hidi.pipeline",
            "hidi.transform"
        ],
        "version": "0.0.3"
    },
    "hidraw": {
        "cmdline": [],
        "modules": [
            "hidraw",
            "hidraw.hidraw"
        ],
        "version": "0.1"
    },
    "hidraw-pure": {
        "cmdline": [],
        "modules": [
            "hidraw"
        ],
        "version": "1.1"
    },
    "hidropy": {
        "cmdline": [],
        "modules": [
            "hidropy",
            "hidropy.calibration",
            "hidropy.calibration.smap",
            "hidropy.operational",
            "hidropy.preprocessing",
            "hidropy.preprocessing.compute_daily_pcp",
            "hidropy.preprocessing.compute_daily_temp",
            "hidropy.preprocessing.txt2npz",
            "hidropy.preprocessing.write_thiessen"
        ],
        "version": "0.1.4"
    },
    "hidx": {
        "cmdline": [],
        "modules": [
            "GUI",
            "GUI.Ui_aboutHiDX",
            "GUI.Ui_dbserver",
            "GUI.Ui_main",
            "GUI.Ui_webview",
            "GUI.aboutHiDX",
            "GUI.dbserver",
            "GUI.icons_rc",
            "GUI.main",
            "GUI.stats",
            "GUI.stats.explore",
            "GUI.viz",
            "GUI.viz.Ui_motionchart",
            "GUI.viz.icons_rc",
            "GUI.viz.motionchart",
            "GUI.viz.scatmat",
            "GUI.webview"
        ],
        "version": "0.5"
    },
    "hienoi": {
        "cmdline": [],
        "modules": [
            "hienoi",
            "hienoi._common",
            "hienoi._dynamicarray",
            "hienoi._kdtree",
            "hienoi._nani",
            "hienoi._numeric",
            "hienoi._orderedbuffer",
            "hienoi._vectors",
            "hienoi.application",
            "hienoi.dynamics",
            "hienoi.gui",
            "hienoi.renderer"
        ],
        "version": "0.1.0"
    },
    "hiera-py": {
        "cmdline": [],
        "modules": [
            "hiera",
            "hiera.client",
            "hiera.exc"
        ],
        "version": "0.0.1"
    },
    "hierapy": {
        "cmdline": [],
        "modules": [
            "hierapy",
            "tests.test_hiera_config"
        ],
        "version": "0.0.3"
    },
    "hierarchical": {
        "cmdline": [],
        "modules": [
            "hierarchical",
            "hierarchical.HierarchicalDict"
        ],
        "version": "0.0.9"
    },
    "hieratic": {
        "cmdline": [],
        "modules": [
            "hieratic",
            "hieratic.collection",
            "hieratic.engine",
            "hieratic.engine.memory",
            "hieratic.exceptions",
            "hieratic.index",
            "hieratic.item",
            "hieratic.service"
        ],
        "version": "0.0.7"
    },
    "hieratic-dynamodb": {
        "cmdline": [],
        "modules": [
            "hieratic_dynamodb",
            "hieratic_dynamodb.context"
        ],
        "version": "0.0.6"
    },
    "hiermat": {
        "cmdline": [],
        "modules": [
            "HierMat",
            "HierMat.block_cluster_tree",
            "HierMat.cluster",
            "HierMat.cluster_tree",
            "HierMat.cuboid",
            "HierMat.grid",
            "HierMat.hmat",
            "HierMat.rmat",
            "HierMat.splitable",
            "HierMat.utils"
        ],
        "version": "0.6.7"
    },
    "hiero": {
        "cmdline": [],
        "modules": [
            "hiero",
            "hiero.formatters",
            "hiero.formatters.htmlblock_formatter",
            "hiero.formatters.linebreaks",
            "hiero.formatters.markdown_formatter",
            "hiero.formatters.rst_formatter",
            "hiero.forms",
            "hiero.interfaces",
            "hiero.models",
            "hiero.models.blog",
            "hiero.models.page",
            "hiero.resources",
            "hiero.routes",
            "hiero.schemas",
            "hiero.schemas.blog",
            "hiero.tests",
            "hiero.tests.blog",
            "hiero.tests.blog.test_models",
            "hiero.tests.blog.test_views",
            "hiero.tests.models",
            "hiero.tests.test_interfaces",
            "hiero.tests.wsgi_demo",
            "hiero.views",
            "hiero.views.blog",
            "hiero.views.page"
        ],
        "version": "0.3.4"
    },
    "hieroglyph": {
        "cmdline": [],
        "modules": [
            "hieroglyph",
            "hieroglyph.builder",
            "hieroglyph.directives",
            "hieroglyph.html",
            "hieroglyph.quickstart",
            "hieroglyph.slides",
            "hieroglyph.tests",
            "hieroglyph.tests.test_builder",
            "hieroglyph.tests.test_directives",
            "hieroglyph.tests.test_event_handlers",
            "hieroglyph.tests.test_path_fixing",
            "hieroglyph.tests.test_slide_footer",
            "hieroglyph.tests.test_translator",
            "hieroglyph.tests.util",
            "hieroglyph.themes",
            "hieroglyph.writer"
        ],
        "version": "0.7.1"
    },
    "hierogram": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hieropt": {
        "cmdline": [],
        "modules": [
            "hieropt",
            "hieropt.OrderedDict",
            "hieropt.test",
            "hieropt.test.test_hieropt"
        ],
        "version": "0.3"
    },
    "hifive": {
        "cmdline": [],
        "modules": [
            "hifive",
            "hifive.commands",
            "hifive.commands.combine_fivec_replicates",
            "hifive.commands.combine_hic_replicates",
            "hifive.commands.complete_fivec_project",
            "hifive.commands.complete_hic_project",
            "hifive.commands.connect_files",
            "hifive.commands.create_fendset",
            "hifive.commands.create_fivec_dataset",
            "hifive.commands.create_fivec_heatmap",
            "hifive.commands.create_fivec_project",
            "hifive.commands.create_fragmentset",
            "hifive.commands.create_hic_dataset",
            "hifive.commands.create_hic_heatmap",
            "hifive.commands.create_hic_mrheatmap",
            "hifive.commands.create_hic_project",
            "hifive.commands.get_fivec_interval",
            "hifive.commands.get_hic_interval",
            "hifive.commands.normalize_fivec_project",
            "hifive.commands.normalize_hic_project",
            "hifive.fend",
            "hifive.fivec",
            "hifive.fivec_binning",
            "hifive.fivec_data",
            "hifive.fragment",
            "hifive.hic",
            "hifive.hic_binning",
            "hifive.hic_data",
            "hifive.hic_domains",
            "hifive.libraries",
            "hifive.libraries.hmm",
            "hifive.modeling",
            "hifive.peaks",
            "hifive.plotting",
            "hifive.version"
        ],
        "version": "1.3.2"
    },
    "higdon": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "higgins": {
        "cmdline": [
            "hn"
        ],
        "modules": [
            "higgins",
            "higgins.action",
            "higgins.cli",
            "higgins.config",
            "higgins.db",
            "higgins.utils",
            "higgins.web"
        ],
        "version": "0.4.3"
    },
    "high": {
        "cmdline": [],
        "modules": [
            "high"
        ],
        "version": "0.1.0"
    },
    "highered": {
        "cmdline": [],
        "modules": [
            "highered"
        ],
        "version": "0.2.1"
    },
    "highfield": {
        "cmdline": [],
        "modules": [
            "highfield",
            "highfield.application",
            "highfield.base_controller",
            "highfield.base_model",
            "highfield.build",
            "highfield.decorators",
            "highfield.defaults",
            "highfield.errors",
            "highfield.helpers",
            "highfield.helpers.encode",
            "highfield.helpers.random",
            "highfield.loading",
            "highfield.naming"
        ],
        "version": "1.0.21"
    },
    "highfive": {
        "cmdline": [],
        "modules": [
            "highfive",
            "highfive.jobs",
            "highfive.master",
            "highfive.worker"
        ],
        "version": "0.2"
    },
    "highlander": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "highlander-one": {
        "cmdline": [],
        "modules": [
            "highlander",
            "highlander.exceptions",
            "highlander.highlander"
        ],
        "version": "0.2.2"
    },
    "highrise": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hightea": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "highton": {
        "cmdline": [],
        "modules": [
            "highton",
            "highton.classes",
            "highton.classes.attachment",
            "highton.classes.case",
            "highton.classes.category",
            "highton.classes.company",
            "highton.classes.contact",
            "highton.classes.custom_field",
            "highton.classes.deal",
            "highton.classes.deletions",
            "highton.classes.email",
            "highton.classes.note",
            "highton.classes.person",
            "highton.classes.tag",
            "highton.classes.task",
            "highton.classes.tools",
            "highton.classes.user",
            "highton.custom_exceptions",
            "highton.highton"
        ],
        "version": "1.2.8"
    },
    "highway": {
        "cmdline": [],
        "modules": [
            "highway"
        ],
        "version": "0.1.0"
    },
    "hihimann": {
        "cmdline": [],
        "modules": [
            "hihimann"
        ],
        "version": "1.3.0"
    },
    "hiisi": {
        "cmdline": [],
        "modules": [
            "hiisi",
            "hiisi.hiisi",
            "hiisi.odim"
        ],
        "version": "0.0.4"
    },
    "hikecalc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hikikomori": {
        "cmdline": [],
        "modules": [
            "hikikomori",
            "hikikomori.check",
            "hikikomori.cli",
            "hikikomori.config",
            "hikikomori.daemon",
            "hikikomori.db",
            "hikikomori.gathering",
            "hikikomori.log",
            "hikikomori.torrent",
            "hikikomori.web",
            "hikikomori.web.app"
        ],
        "version": "0.0.0"
    },
    "hiku": {
        "cmdline": [],
        "modules": [
            "hiku",
            "hiku.builder",
            "hiku.compat",
            "hiku.console",
            "hiku.console.ui",
            "hiku.edn",
            "hiku.engine",
            "hiku.executors",
            "hiku.executors.asyncio",
            "hiku.executors.queue",
            "hiku.executors.sync",
            "hiku.executors.threads",
            "hiku.export",
            "hiku.export.protobuf",
            "hiku.export.simple",
            "hiku.expr",
            "hiku.expr.checker",
            "hiku.expr.compiler",
            "hiku.expr.core",
            "hiku.expr.nodes",
            "hiku.expr.refs",
            "hiku.graph",
            "hiku.protobuf",
            "hiku.protobuf.query_pb2",
            "hiku.query",
            "hiku.readers",
            "hiku.readers.graphql",
            "hiku.readers.protobuf",
            "hiku.readers.simple",
            "hiku.result",
            "hiku.sources",
            "hiku.sources.aiopg",
            "hiku.sources.graph",
            "hiku.sources.sqlalchemy",
            "hiku.typedef",
            "hiku.typedef.kinko",
            "hiku.typedef.types",
            "hiku.types",
            "hiku.utils",
            "hiku.validate",
            "hiku.validate.errors",
            "hiku.validate.graph",
            "hiku.validate.query",
            "hiku.writers",
            "hiku.writers.protobuf",
            "hiku.writers.simple"
        ],
        "version": "0.3.7"
    },
    "hikvision": {
        "cmdline": [],
        "modules": [
            "hikvision",
            "hikvision.api",
            "hikvision.constants",
            "hikvision.error"
        ],
        "version": "1.2"
    },
    "hikvision-client": {
        "cmdline": [
            "hikvision-client-gtk",
            "hikvision-client-tk"
        ],
        "modules": [
            "bin",
            "hikvision_client",
            "hikvision_client.config",
            "hikvision_client.config.ConfigParser",
            "hikvision_client.main",
            "hikvision_client.metadata",
            "hikvision_client.resources",
            "hikvision_client.tests",
            "hikvision_client.userinterface",
            "hikvision_client.userinterface.LoginGui",
            "hikvision_client.userinterface.MainGui"
        ],
        "version": "0.5"
    },
    "hikvisionapi": {
        "cmdline": [],
        "modules": [
            "hikvisionapi",
            "hikvisionapi.hikvisionapi"
        ],
        "version": "0.1.7"
    },
    "hil": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hilal": {
        "cmdline": [],
        "modules": [
            "djamaluddinconv",
            "hilal"
        ],
        "version": "1.0.1"
    },
    "hilbert": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hillmaker": {
        "cmdline": [],
        "modules": [
            "hillmaker",
            "hillmaker.bydatetime",
            "hillmaker.hills",
            "hillmaker.hmlib",
            "hillmaker.summarize"
        ],
        "version": "0.1.1"
    },
    "hillup": {
        "cmdline": [
            "hillup-seed.py"
        ],
        "modules": [
            "Hillup",
            "Hillup.data",
            "Hillup.data.NED100m",
            "Hillup.data.NED10m",
            "Hillup.data.NED1km",
            "Hillup.data.SRTM1",
            "Hillup.data.SRTM3",
            "Hillup.data.VFP",
            "Hillup.data.Worldwide",
            "Hillup.tiles"
        ],
        "version": "0.8.1"
    },
    "himawari": {
        "cmdline": [],
        "modules": [
            "himawari"
        ],
        "version": "0.0.1"
    },
    "hime.redist": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hinagiku": {
        "cmdline": [
            "hinagiku"
        ],
        "modules": [
            "hinagiku",
            "hinagiku.core"
        ],
        "version": "0.0.0"
    },
    "hindemith": {
        "cmdline": [],
        "modules": [
            "dev-examples",
            "dev-examples.optical_flow",
            "dev-examples.optical_flow.hs_cg",
            "dev-examples.optical_flow.hs_cg_numpy",
            "dev-examples.optical_flow.hs_jacobi",
            "dev-examples.optical_flow.hs_jacobi_multi",
            "dev-examples.optical_flow.hs_jacobi_numpy",
            "dev-examples.optical_flow.hs_jacobi_single",
            "dev-examples.optical_flow.hs_jacobi_webcam",
            "dev-examples.optical_flow.ik",
            "dev-examples.optical_flow.png_to_raw",
            "dev-examples.optical_flow.r5demo_capture",
            "dev-examples.optical_flow.r5demo_webcam",
            "dev-examples.optical_flow.riscv-demo",
            "dev-examples.optical_flow.riscv-demo.create_moving_bar",
            "dev-examples.optical_flow.riscv-demo.webcam_file",
            "dev-examples.optical_flow.sequence",
            "dev-examples.optical_flow.show_raw_images",
            "dev-examples.optical_flow.solver",
            "dev-examples.optical_flow.tvl1",
            "dev-examples.optical_flow.webcam",
            "dev-examples.py_tvl1",
            "dev-examples.tvl1",
            "examples-copy",
            "examples-copy.optical_flow",
            "examples-copy.optical_flow.hs_jacobi",
            "examples-copy.optical_flow.hs_jacobi_multi",
            "examples-copy.optical_flow.hs_jacobi_numpy",
            "examples-copy.optical_flow.hs_jacobi_single",
            "examples-copy.optical_flow.hs_jacobi_webcam",
            "examples-copy.optical_flow.ik",
            "examples-copy.optical_flow.png_to_raw",
            "examples-copy.optical_flow.r5demo_capture",
            "examples-copy.optical_flow.r5demo_webcam",
            "examples-copy.optical_flow.riscv-demo",
            "examples-copy.optical_flow.riscv-demo.create_moving_bar",
            "examples-copy.optical_flow.riscv-demo.webcam_file",
            "examples-copy.optical_flow.sequence",
            "examples-copy.optical_flow.show_raw_images",
            "examples-copy.optical_flow.solver",
            "examples-copy.optical_flow.tvl1",
            "examples-copy.optical_flow.webcam",
            "examples-riscv",
            "examples-riscv.optical_flow",
            "examples-riscv.optical_flow.hs_jacobi",
            "examples-riscv.optical_flow.hs_jacobi_c",
            "examples-riscv.optical_flow.hs_jacobi_multi",
            "examples-riscv.optical_flow.hs_jacobi_numpy",
            "examples-riscv.optical_flow.hs_jacobi_single",
            "examples-riscv.optical_flow.hs_jacobi_webcam",
            "examples-riscv.optical_flow.ik",
            "examples-riscv.optical_flow.png_to_raw",
            "examples-riscv.optical_flow.r5demo_capture",
            "examples-riscv.optical_flow.r5demo_display",
            "examples-riscv.optical_flow.r5demo_webcam",
            "examples-riscv.optical_flow.r5solver",
            "examples-riscv.optical_flow.riscv-demo",
            "examples-riscv.optical_flow.riscv-demo.create_moving_bar",
            "examples-riscv.optical_flow.riscv-demo.webcam_file",
            "examples-riscv.optical_flow.sequence",
            "examples-riscv.optical_flow.show_raw_images",
            "examples-riscv.optical_flow.solver",
            "examples-riscv.optical_flow.tvl1",
            "examples-riscv.optical_flow.webcam",
            "examples-riscv.tvl1",
            "hindemith",
            "hindemith.meta",
            "hindemith.meta.basic_blocks",
            "hindemith.meta.core",
            "hindemith.meta.liveness_analysis",
            "hindemith.meta.merge",
            "hindemith.meta.util",
            "hindemith.nodes",
            "hindemith.operations",
            "hindemith.operations.common",
            "hindemith.operations.gemm",
            "hindemith.operations.interp",
            "hindemith.operations.map",
            "hindemith.operations.reduce",
            "hindemith.operations.transform",
            "hindemith.operations.zip_with",
            "hindemith.types",
            "hindemith.types.hmarray",
            "hindemith.utils",
            "optical_flow",
            "optical_flow.hs_jacobi",
            "optical_flow.solver",
            "tests",
            "tests.test_meta",
            "tests.test_meta.array_add",
            "tests.test_meta.kernels",
            "tests.test_meta.simple_stencil",
            "tests.test_meta.test_basic_blocks",
            "tests.test_meta.test_core",
            "tests.test_meta.test_liveness_analysis",
            "tests.test_meta.test_util",
            "tests.test_operations",
            "tests.test_operations.base_test",
            "tests.test_operations.test_gemm",
            "tests.test_operations.test_interp",
            "tests.test_operations.test_map",
            "tests.test_operations.test_reduce",
            "tests.test_operations.test_sqrt",
            "tests.test_operations.test_square",
            "tests.test_operations.test_zip_with",
            "tests.test_types",
            "tests.test_types.test_array",
            "tests.test_types.test_c_array"
        ],
        "version": "0.1.1"
    },
    "hindsight": {
        "cmdline": [],
        "modules": [
            "hindsight",
            "hindsight.behave",
            "hindsight.cli"
        ],
        "version": "0.1.7"
    },
    "hinetpy": {
        "cmdline": [],
        "modules": [
            "HinetPy",
            "HinetPy.client",
            "HinetPy.header",
            "HinetPy.win32"
        ],
        "version": "0.4.0"
    },
    "hint": {
        "cmdline": [],
        "modules": [
            "hint",
            "hint.cli",
            "hint.detector",
            "hint.detector.error",
            "hint.detector.exxx",
            "hint.hint",
            "hint.parsing",
            "hint.utils"
        ],
        "version": "1.0.4"
    },
    "hip": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hip2slack-emoji": {
        "cmdline": [],
        "modules": [
            "hip2slack_emoji",
            "hip2slack_emoji.problem"
        ],
        "version": "0.2.0"
    },
    "hipachectl": {
        "cmdline": [],
        "modules": [
            "hipachectl",
            "hipachectl.api",
            "hipachectl.main",
            "hipachectl.utils",
            "hipachectl.version"
        ],
        "version": "0.3.0"
    },
    "hipack": {
        "cmdline": [],
        "modules": [],
        "version": "13"
    },
    "hipcat": {
        "cmdline": [],
        "modules": [
            "hipcat",
            "hipcat.cli"
        ],
        "version": "0.1.0"
    },
    "hipchat": {
        "cmdline": [],
        "modules": [
            "hipchat",
            "hipchat.commands",
            "hipchat.config",
            "hipchat.connection",
            "hipchat.room",
            "hipchat.user"
        ],
        "version": "0.0.1"
    },
    "hipchat-api": {
        "cmdline": [],
        "modules": [
            "hipchat",
            "hipchat.api",
            "hipchat.data",
            "hipchat.messages",
            "hipchat.rooms",
            "hipchat.users"
        ],
        "version": "0.0.2"
    },
    "hipchat-notif": {
        "cmdline": [],
        "modules": [
            "hipchat_notif",
            "hipchat_notif.error",
            "hipchat_notif.hipchat_notif"
        ],
        "version": "0.2.3"
    },
    "hipchat-notifications": {
        "cmdline": [],
        "modules": [
            "hipchat",
            "hipchat.compat",
            "hipchat.exceptions",
            "hipchat.logger",
            "hipchat.notifications",
            "hipchat.tests"
        ],
        "version": "0.3"
    },
    "hipchatpy": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.17"
    },
    "hipchav": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "hiphip": {
        "cmdline": [],
        "modules": [
            "hiphip",
            "hiphip.http",
            "hiphip.http.client",
            "hiphip.http.response"
        ],
        "version": "1.0.0a6"
    },
    "hipku": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hiplogging": {
        "cmdline": [],
        "modules": [
            "hiplogging"
        ],
        "version": "2.0.0"
    },
    "hipmob": {
        "cmdline": [],
        "modules": [
            "hipmob",
            "hipmob.version"
        ],
        "version": "0.5.0"
    },
    "hipnotify": {
        "cmdline": [],
        "modules": [
            "hipnotify",
            "hipnotify.hipnotify",
            "tests",
            "tests.conftest",
            "tests.test_hipnotify"
        ],
        "version": "1.0.8"
    },
    "hipochat": {
        "cmdline": [],
        "modules": [
            "hipochat",
            "hipochat.chat"
        ],
        "version": "0.1"
    },
    "hipparchos2-io": {
        "cmdline": [],
        "modules": [
            "hip2",
            "hip2.reader",
            "hip2.star",
            "hip2.writer"
        ],
        "version": "1.0.2"
    },
    "hippiehug": {
        "cmdline": [],
        "modules": [
            "hippiehug",
            "hippiehug.Chain",
            "hippiehug.Nodes",
            "hippiehug.RedisChain",
            "hippiehug.RedisStore",
            "hippiehug.S3Chain",
            "hippiehug.Tree"
        ],
        "version": "0.0.9"
    },
    "hippo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hippocket": {
        "cmdline": [],
        "modules": [
            "hip_pocket",
            "hip_pocket.constants",
            "hip_pocket.pocket",
            "hip_pocket.tasks",
            "hip_pocket.tests",
            "hip_pocket.tests.mapper",
            "hip_pocket.tests.test_apps",
            "hip_pocket.tests.test_apps.mapper"
        ],
        "version": "0.1.2a"
    },
    "hippodclient": {
        "cmdline": [],
        "modules": [
            "hippodclient",
            "hippodclient.hippodclient"
        ],
        "version": "1.3"
    },
    "hippodraw": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hippy": {
        "cmdline": [],
        "modules": [
            "hippy",
            "hippy.compiler",
            "hippy.error",
            "hippy.lexer",
            "hippy.parser"
        ],
        "version": "0.0.0"
    },
    "hippy-chat": {
        "cmdline": [],
        "modules": [
            "hippy_chat",
            "hippy_chat.exec",
            "hippy_chat.exec.demo",
            "hippy_chat.handler",
            "tests",
            "tests.test_handler"
        ],
        "version": "0.3.0"
    },
    "hippybot": {
        "cmdline": [],
        "modules": [
            "hippybot",
            "hippybot.bot",
            "hippybot.daemon",
            "hippybot.daemon.daemon",
            "hippybot.decorators",
            "hippybot.hipchat",
            "hippybot.plugins",
            "hippybot.plugins.hype",
            "hippybot.plugins.lockbot",
            "hippybot.plugins.plusplusbot",
            "hippybot.plugins.rot13",
            "hippybot.plugins.threaded_example",
            "hippybot.plugins.udefine",
            "hippybot.plugins.uptime",
            "hippybot.plugins.wave"
        ],
        "version": "1.2.7"
    },
    "hipsaint": {
        "cmdline": [],
        "modules": [
            "hipsaint",
            "hipsaint.bin",
            "hipsaint.bin.commands",
            "hipsaint.messages",
            "hipsaint.options",
            "hipsaint.templates"
        ],
        "version": "0.7"
    },
    "hipshot": {
        "cmdline": [
            "hipshot"
        ],
        "modules": [
            "hipshot",
            "hipshot.hipshot"
        ],
        "version": "1.0"
    },
    "hipsterplot": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hipy": {
        "cmdline": [],
        "modules": [
            "hipy",
            "hipy.parser"
        ],
        "version": "0.11"
    },
    "hipyschool": {
        "cmdline": [],
        "modules": [
            "hipyschool"
        ],
        "version": "1.0.7"
    },
    "hirakan": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hiredis": {
        "cmdline": [],
        "modules": [
            "hiredis",
            "hiredis.version"
        ],
        "version": "0.2.0"
    },
    "hirefire": {
        "cmdline": [],
        "modules": [
            "hirefire",
            "hirefire.contrib",
            "hirefire.contrib.django",
            "hirefire.contrib.django.middleware",
            "hirefire.contrib.flask",
            "hirefire.contrib.flask.blueprint",
            "hirefire.contrib.tornado",
            "hirefire.contrib.tornado.handlers",
            "hirefire.procs",
            "hirefire.procs.celery",
            "hirefire.procs.hotqueue",
            "hirefire.procs.huey",
            "hirefire.procs.queues",
            "hirefire.procs.rq",
            "hirefire.utils"
        ],
        "version": "0.5"
    },
    "hires": {
        "cmdline": [],
        "modules": [
            "hires",
            "hires.adduct_grouping",
            "hires.algorithms",
            "hires.feature_detector",
            "hires.feature_regrouper",
            "hires.shoulder_peak_remover"
        ],
        "version": "0.0.14"
    },
    "hirezpy": {
        "cmdline": [],
        "modules": [
            "hirezpy",
            "hirezpy.client",
            "hirezpy.endpoint",
            "hirezpy.language",
            "hirezpy.objects",
            "hirezpy.request"
        ],
        "version": "0.1.3"
    },
    "hiringpond": {
        "cmdline": [],
        "modules": [
            "hiringpond",
            "hiringpond.config",
            "hiringpond.config.app_cfg",
            "hiringpond.config.environment",
            "hiringpond.config.middleware",
            "hiringpond.controllers",
            "hiringpond.controllers.error",
            "hiringpond.controllers.root",
            "hiringpond.controllers.secure",
            "hiringpond.controllers.template",
            "hiringpond.lib",
            "hiringpond.lib.app_globals",
            "hiringpond.lib.base",
            "hiringpond.lib.helpers",
            "hiringpond.model",
            "hiringpond.model.auth",
            "hiringpond.templates",
            "hiringpond.tests",
            "hiringpond.tests.functional",
            "hiringpond.tests.functional.test_authentication",
            "hiringpond.tests.functional.test_root",
            "hiringpond.tests.models",
            "hiringpond.tests.models.test_auth",
            "hiringpond.websetup",
            "hiringpond.websetup.bootstrap",
            "hiringpond.websetup.schema",
            "migration",
            "migration.versions"
        ],
        "version": "0.1dev"
    },
    "hirlite": {
        "cmdline": [],
        "modules": [
            "hirlite",
            "hirlite.patch_conn",
            "hirlite.version"
        ],
        "version": "0.3.0"
    },
    "hiro": {
        "cmdline": [],
        "modules": [],
        "version": "0.3"
    },
    "hironsancorpus": {
        "cmdline": [],
        "modules": [
            "hironsan",
            "hironsan.corpus",
            "tests"
        ],
        "version": "0.1.2"
    },
    "hirosql": {
        "cmdline": [],
        "modules": [
            "hirosql",
            "hirosql.main"
        ],
        "version": "0.2"
    },
    "his.almanac": {
        "cmdline": [],
        "modules": [
            "almanac",
            "almanac.exceptions",
            "almanac.registry",
            "tests",
            "tests.test_registry"
        ],
        "version": "0.0.1"
    },
    "his2h5": {
        "cmdline": [],
        "modules": [
            "his2h5",
            "his2h5.fftfuncs",
            "his2h5.mandel",
            "his2h5.mockNDarray",
            "his2h5.readerHIS",
            "his2h5.tool"
        ],
        "version": "0.1dev"
    },
    "hiscore": {
        "cmdline": [],
        "modules": [
            "hiscore",
            "hiscore.engine",
            "hiscore.errors"
        ],
        "version": "1.3.0"
    },
    "hisp": {
        "cmdline": [],
        "modules": [
            "hisp",
            "hisp.doctypes",
            "hisp.exceptions",
            "hisp.libraries",
            "hisp.libraries.core",
            "hisp.libraries.django",
            "hisp.loaders",
            "hisp.loaders.compiled",
            "hisp.loaders.convert",
            "hisp.loaders.convert_first",
            "hisp.macros",
            "hisp.management",
            "hisp.management.commands",
            "hisp.management.commands.hisp_clean",
            "hisp.management.commands.hisp_convert",
            "hisp.nodes",
            "hisp.parse",
            "hisp.tables",
            "hisp.tables.lextab",
            "hisp.tables.parsetab",
            "hisp.tokenize"
        ],
        "version": "1.1.0a1"
    },
    "hisparc-sapphire": {
        "cmdline": [
            "extend_local_data",
            "generate_corsika_overview",
            "qsub_corsika",
            "qsub_store_corsika_data",
            "store_corsika_data",
            "update_local_data"
        ],
        "modules": [
            "sapphire",
            "sapphire.analysis",
            "sapphire.analysis.calibration",
            "sapphire.analysis.coincidence_queries",
            "sapphire.analysis.coincidences",
            "sapphire.analysis.core_reconstruction",
            "sapphire.analysis.direction_reconstruction",
            "sapphire.analysis.event_utils",
            "sapphire.analysis.find_mpv",
            "sapphire.analysis.landau",
            "sapphire.analysis.process_events",
            "sapphire.analysis.process_traces",
            "sapphire.analysis.reconstructions",
            "sapphire.analysis.time_deltas",
            "sapphire.api",
            "sapphire.clusters",
            "sapphire.corsika",
            "sapphire.corsika.blocks",
            "sapphire.corsika.corsika_queries",
            "sapphire.corsika.generate_corsika_overview",
            "sapphire.corsika.mergesort",
            "sapphire.corsika.particles",
            "sapphire.corsika.qsub_corsika",
            "sapphire.corsika.qsub_store_corsika_data",
            "sapphire.corsika.reader",
            "sapphire.corsika.store_corsika_data",
            "sapphire.corsika.units",
            "sapphire.data",
            "sapphire.data.extend_local_data",
            "sapphire.data.update_local_data",
            "sapphire.esd",
            "sapphire.kascade",
            "sapphire.publicdb",
            "sapphire.qsub",
            "sapphire.simulations",
            "sapphire.simulations.base",
            "sapphire.simulations.detector",
            "sapphire.simulations.gammas",
            "sapphire.simulations.groundparticles",
            "sapphire.simulations.ldf",
            "sapphire.simulations.showerfront",
            "sapphire.storage",
            "sapphire.tests",
            "sapphire.tests.analysis",
            "sapphire.tests.analysis.test_calibration",
            "sapphire.tests.analysis.test_coincidence_queries",
            "sapphire.tests.analysis.test_coincidences",
            "sapphire.tests.analysis.test_core_reconstruction",
            "sapphire.tests.analysis.test_direction_reconstruction",
            "sapphire.tests.analysis.test_event_utils",
            "sapphire.tests.analysis.test_find_mpv",
            "sapphire.tests.analysis.test_landau",
            "sapphire.tests.analysis.test_process_events",
            "sapphire.tests.analysis.test_process_traces",
            "sapphire.tests.analysis.test_reconstructions",
            "sapphire.tests.analysis.test_time_deltas",
            "sapphire.tests.corsika",
            "sapphire.tests.corsika.test_blocks",
            "sapphire.tests.corsika.test_corsika",
            "sapphire.tests.corsika.test_corsika_queries",
            "sapphire.tests.corsika.test_generate_corsika_overview",
            "sapphire.tests.corsika.test_particles",
            "sapphire.tests.corsika.test_qsub_corsika",
            "sapphire.tests.corsika.test_qsub_store_corsika_data",
            "sapphire.tests.corsika.test_store_corsika_data",
            "sapphire.tests.corsika.test_units",
            "sapphire.tests.esd_load_data",
            "sapphire.tests.simulations",
            "sapphire.tests.simulations.perform_simulation",
            "sapphire.tests.simulations.test_base_simulation",
            "sapphire.tests.simulations.test_detectors",
            "sapphire.tests.simulations.test_gammas",
            "sapphire.tests.simulations.test_groundparticles",
            "sapphire.tests.simulations.test_ldf",
            "sapphire.tests.simulations.test_simulation_acceptance",
            "sapphire.tests.test_api",
            "sapphire.tests.test_clusters",
            "sapphire.tests.test_clusters_acceptance",
            "sapphire.tests.test_esd",
            "sapphire.tests.test_kascade",
            "sapphire.tests.test_publicdb",
            "sapphire.tests.test_qsub",
            "sapphire.tests.test_time_util",
            "sapphire.tests.test_utils",
            "sapphire.tests.transformations",
            "sapphire.tests.transformations.test_angles",
            "sapphire.tests.transformations.test_axes",
            "sapphire.tests.transformations.test_base",
            "sapphire.tests.transformations.test_celestial",
            "sapphire.tests.transformations.test_clock",
            "sapphire.tests.validate_results",
            "sapphire.time_util",
            "sapphire.transformations",
            "sapphire.transformations.angles",
            "sapphire.transformations.axes",
            "sapphire.transformations.base",
            "sapphire.transformations.celestial",
            "sapphire.transformations.clock",
            "sapphire.transformations.geographic",
            "sapphire.utils"
        ],
        "version": "1.4.0"
    },
    "hispectralmodel": {
        "cmdline": [],
        "modules": [
            "hispectrum",
            "hispectrum.hi_profile",
            "hispectrum.test",
            "hispectrum.test.test_location",
            "hispectrum.test.test_utils"
        ],
        "version": "0.1.0"
    },
    "hiss": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hiss-repl": {
        "cmdline": [],
        "modules": [
            "hiss",
            "hiss.cli",
            "hiss.cli.config",
            "hiss.cli.magic",
            "hiss.cli.virtualenv"
        ],
        "version": "2.0.22"
    },
    "hiss-themes": {
        "cmdline": [],
        "modules": [
            "hiss",
            "hiss.themes",
            "hiss.themes.tomorrow"
        ],
        "version": "0.0.2"
    },
    "hist": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.6"
    },
    "histacom-docs-theme": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "histo": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "histogram": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "histogrammar": {
        "cmdline": [
            "hgwatch"
        ],
        "modules": [
            "histogrammar",
            "histogrammar.defs",
            "histogrammar.hgawk_grammar",
            "histogrammar.hgawk_grammar_table",
            "histogrammar.parsing",
            "histogrammar.plot",
            "histogrammar.plot.bokeh",
            "histogrammar.plot.matplotlib",
            "histogrammar.plot.root",
            "histogrammar.plot.vega",
            "histogrammar.plot.vega.jsontrans",
            "histogrammar.plot.vega.nodejs",
            "histogrammar.primitives",
            "histogrammar.primitives.average",
            "histogrammar.primitives.bag",
            "histogrammar.primitives.bin",
            "histogrammar.primitives.categorize",
            "histogrammar.primitives.centrallybin",
            "histogrammar.primitives.collection",
            "histogrammar.primitives.count",
            "histogrammar.primitives.deviate",
            "histogrammar.primitives.fraction",
            "histogrammar.primitives.irregularlybin",
            "histogrammar.primitives.minmax",
            "histogrammar.primitives.select",
            "histogrammar.primitives.sparselybin",
            "histogrammar.primitives.stack",
            "histogrammar.primitives.sum",
            "histogrammar.pycparser",
            "histogrammar.pycparser._ast_gen",
            "histogrammar.pycparser._build_tables",
            "histogrammar.pycparser.ast_transforms",
            "histogrammar.pycparser.c_ast",
            "histogrammar.pycparser.c_generator",
            "histogrammar.pycparser.c_lexer",
            "histogrammar.pycparser.c_parser",
            "histogrammar.pycparser.lextab",
            "histogrammar.pycparser.ply",
            "histogrammar.pycparser.ply.cpp",
            "histogrammar.pycparser.ply.ctokens",
            "histogrammar.pycparser.ply.lex",
            "histogrammar.pycparser.ply.yacc",
            "histogrammar.pycparser.ply.ygen",
            "histogrammar.pycparser.plyparser",
            "histogrammar.pycparser.yacctab",
            "histogrammar.python23_lex",
            "histogrammar.sparksql",
            "histogrammar.specialized",
            "histogrammar.tutorial",
            "histogrammar.tutorial.cmsdata",
            "histogrammar.util",
            "histogrammar.version",
            "tests",
            "tests.testbasic",
            "tests.testgpu",
            "tests.testnumpy",
            "tests.testrootcling",
            "tests.testspec"
        ],
        "version": "1.0.8"
    },
    "histogramy": {
        "cmdline": [],
        "modules": [
            "histogramy",
            "histogramy.demo",
            "histogramy.describer",
            "histogramy.loader",
            "histogramy.main",
            "histogramy.modulator",
            "histogramy.options",
            "histogramy.plotter",
            "histogramy.prefix",
            "histogramy.simulator",
            "histogramy.utils"
        ],
        "version": "0.1.5"
    },
    "historian": {
        "cmdline": [
            "read-history"
        ],
        "modules": [
            "historian_reader",
            "historian_reader.main",
            "historian_reader.shell"
        ],
        "version": "0.0.3"
    },
    "historical-ciphers": {
        "cmdline": [],
        "modules": [
            "historical_ciphers",
            "historical_ciphers.historical_ciphers",
            "historical_ciphers.tests"
        ],
        "version": "0.1"
    },
    "historist": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "history": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "history-exploiter": {
        "cmdline": [],
        "modules": [],
        "version": "1.20"
    },
    "historybash": {
        "cmdline": [],
        "modules": [
            "historybash"
        ],
        "version": "82"
    },
    "historydb": {
        "cmdline": [],
        "modules": [
            "historydb",
            "historydb.base_client",
            "historydb.gevent_client",
            "historydb.provider",
            "historydb.threading_client",
            "tests",
            "tests.base",
            "tests.base_async_test",
            "tests.server_runner",
            "tests.test_failures",
            "tests.test_gevent_support",
            "tests.test_historydb",
            "tests.test_threading_support"
        ],
        "version": "0.4.1"
    },
    "historydict": {
        "cmdline": [],
        "modules": [
            "historydict"
        ],
        "version": "1.1.0"
    },
    "historylink": {
        "cmdline": [],
        "modules": [
            "historylink",
            "historylink.management",
            "historylink.management.commands",
            "historylink.management.commands.historylink_sync",
            "historylink.manager",
            "historylink.middleware",
            "historylink.models"
        ],
        "version": "0.0.1"
    },
    "histutils": {
        "cmdline": [],
        "modules": [
            "histutils",
            "histutils.camclass",
            "histutils.cp_parents",
            "histutils.diric",
            "histutils.findnearest",
            "histutils.get1Dcut",
            "histutils.h5imgwriter",
            "histutils.hstxmlparse",
            "histutils.nans",
            "histutils.plots",
            "histutils.plotsimul",
            "histutils.rawDMCreader",
            "histutils.simulFrame",
            "histutils.sixteen2eight",
            "histutils.timedmc",
            "histutils.vid2h5"
        ],
        "version": "0.9.1"
    },
    "histview": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hitboxy": {
        "cmdline": [],
        "modules": [
            "hitboxy",
            "hitboxy.ChatClient",
            "hitboxy.MultiChannelChatClient"
        ],
        "version": "0.1.23"
    },
    "hitch": {
        "cmdline": [],
        "modules": [
            "hitch",
            "hitch.click",
            "hitch.click._bashcomplete",
            "hitch.click._compat",
            "hitch.click._termui_impl",
            "hitch.click._textwrap",
            "hitch.click.core",
            "hitch.click.decorators",
            "hitch.click.exceptions",
            "hitch.click.formatting",
            "hitch.click.globals",
            "hitch.click.parser",
            "hitch.click.termui",
            "hitch.click.testing",
            "hitch.click.types",
            "hitch.click.utils",
            "hitch.commandline",
            "hitch.hitchdir",
            "hitch.languagestrings"
        ],
        "version": "0.5.7"
    },
    "hitch-pip-tools": {
        "cmdline": [],
        "modules": [
            "piptools",
            "piptools._compat",
            "piptools._compat.contextlib",
            "piptools._compat.tempfile",
            "piptools.cache",
            "piptools.click",
            "piptools.exceptions",
            "piptools.io",
            "piptools.locations",
            "piptools.logging",
            "piptools.repositories",
            "piptools.repositories.base",
            "piptools.repositories.local",
            "piptools.repositories.pypi",
            "piptools.resolver",
            "piptools.scripts",
            "piptools.scripts.compile",
            "piptools.scripts.sync",
            "piptools.sync",
            "piptools.utils",
            "piptools.writer"
        ],
        "version": "1.8.3"
    },
    "hitchbuild": {
        "cmdline": [],
        "modules": [
            "hitch",
            "hitch.code_that_does_things",
            "hitch.key",
            "hitchbuild",
            "hitchbuild.build",
            "hitchbuild.build_path",
            "hitchbuild.bundle",
            "hitchbuild.condition",
            "hitchbuild.monitor",
            "hitchbuild.traits"
        ],
        "version": "0.1"
    },
    "hitchcelery": {
        "cmdline": [],
        "modules": [
            "hitchcelery",
            "hitchcelery.celery_service"
        ],
        "version": "0.2.1"
    },
    "hitchcli": {
        "cmdline": [],
        "modules": [
            "hitchcli",
            "hitchcli.command_line_steps"
        ],
        "version": "0.2.6"
    },
    "hitchcron": {
        "cmdline": [],
        "modules": [
            "hitchcron",
            "hitchcron.cron",
            "hitchcron.cron_service"
        ],
        "version": "0.2"
    },
    "hitchdjango": {
        "cmdline": [],
        "modules": [
            "hitchdjango",
            "hitchdjango.django_service"
        ],
        "version": "0.2"
    },
    "hitchdoc": {
        "cmdline": [],
        "modules": [
            "hitchdoc",
            "hitchdoc.database",
            "hitchdoc.documentation",
            "hitchdoc.exceptions",
            "hitchdoc.hitchstory",
            "hitchdoc.recorder"
        ],
        "version": "0.1.1"
    },
    "hitchelasticsearch": {
        "cmdline": [],
        "modules": [
            "hitchelasticsearch",
            "hitchelasticsearch.elastic_package",
            "hitchelasticsearch.elastic_service"
        ],
        "version": "0.2.4"
    },
    "hitchenvironment": {
        "cmdline": [],
        "modules": [
            "hitchenvironment",
            "hitchenvironment.environment"
        ],
        "version": "0.2"
    },
    "hitchhiker": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hitchhttp": {
        "cmdline": [],
        "modules": [
            "hitchhttp",
            "hitchhttp.commandline",
            "hitchhttp.config",
            "hitchhttp.http_request",
            "hitchhttp.http_server_service",
            "hitchhttp.main_request_handler",
            "hitchhttp.mock_rest_uri",
            "hitchhttp.monitor",
            "hitchhttp.status_codes",
            "hitchhttp.utils"
        ],
        "version": "0.4.2"
    },
    "hitchjson": {
        "cmdline": [],
        "modules": [
            "hitchjson",
            "hitchjson.utils"
        ],
        "version": "0.2.0"
    },
    "hitchkey": {
        "cmdline": [],
        "modules": [
            "hitchkey",
            "hitchkey.commandline",
            "hitchkey.languagestrings",
            "hitchkey.utils"
        ],
        "version": "0.1.1"
    },
    "hitchmemcache": {
        "cmdline": [],
        "modules": [
            "hitchmemcache",
            "hitchmemcache.memcache_package",
            "hitchmemcache.memcache_service"
        ],
        "version": "0.2.2"
    },
    "hitchmysql": {
        "cmdline": [],
        "modules": [
            "hitchmysql",
            "hitchmysql.mysql_package",
            "hitchmysql.mysql_service"
        ],
        "version": "0.2.6"
    },
    "hitchnode": {
        "cmdline": [],
        "modules": [
            "hitchnode",
            "hitchnode.node_package",
            "hitchnode.node_service",
            "hitchnode.static_serve"
        ],
        "version": "0.3.0"
    },
    "hitchpostgres": {
        "cmdline": [],
        "modules": [
            "hitchpostgres",
            "hitchpostgres.postgres_package",
            "hitchpostgres.postgres_service"
        ],
        "version": "0.7.0"
    },
    "hitchpython": {
        "cmdline": [],
        "modules": [
            "hitchpython",
            "hitchpython.celery_service",
            "hitchpython.django_service",
            "hitchpython.ipython_kernel_service",
            "hitchpython.ipython_step_library",
            "hitchpython.python_package",
            "hitchpython.python_service"
        ],
        "version": "0.5.3"
    },
    "hitchquickstart": {
        "cmdline": [],
        "modules": [
            "hitchquickstart",
            "hitchquickstart.commandline",
            "hitchquickstart.utils"
        ],
        "version": "0.1.4"
    },
    "hitchrabbit": {
        "cmdline": [],
        "modules": [
            "hitchrabbit",
            "hitchrabbit.rabbit_package",
            "hitchrabbit.rabbit_service"
        ],
        "version": "0.2.4"
    },
    "hitchredis": {
        "cmdline": [],
        "modules": [
            "hitchredis",
            "hitchredis.redis_package",
            "hitchredis.redis_service"
        ],
        "version": "0.4.6"
    },
    "hitchrun": {
        "cmdline": [],
        "modules": [
            "hitchrun",
            "hitchrun.commandline",
            "hitchrun.decorators",
            "hitchrun.key_file",
            "hitchrun.maintenance",
            "hitchrun.packages"
        ],
        "version": "0.2.1"
    },
    "hitchs3": {
        "cmdline": [],
        "modules": [
            "hitchs3",
            "hitchs3.s3server",
            "hitchs3.service"
        ],
        "version": "0.1"
    },
    "hitchselenium": {
        "cmdline": [],
        "modules": [
            "hitchselenium",
            "hitchselenium.director",
            "hitchselenium.exceptions",
            "hitchselenium.firefox_package",
            "hitchselenium.firefox_service",
            "hitchselenium.profile",
            "hitchselenium.selector",
            "hitchselenium.selenium_service",
            "hitchselenium.server",
            "hitchselenium.step_library",
            "hitchselenium.utils"
        ],
        "version": "0.6.6"
    },
    "hitchserve": {
        "cmdline": [],
        "modules": [
            "hitchserve",
            "hitchserve.hitch_dir",
            "hitchserve.hitch_exception",
            "hitchserve.hitch_service",
            "hitchserve.service_bundle",
            "hitchserve.service_engine",
            "hitchserve.service_handle",
            "hitchserve.service_logs",
            "hitchserve.test_engine",
            "hitchserve.utils"
        ],
        "version": "0.5.1"
    },
    "hitchsmtp": {
        "cmdline": [],
        "modules": [
            "hitchsmtp",
            "hitchsmtp.service",
            "hitchsmtp.smtp",
            "hitchsmtp.smtperrors"
        ],
        "version": "0.2.1"
    },
    "hitchstory": {
        "cmdline": [],
        "modules": [
            "hitchstory",
            "hitchstory.arguments",
            "hitchstory.engine",
            "hitchstory.exceptions",
            "hitchstory.result",
            "hitchstory.story",
            "hitchstory.story_collection",
            "hitchstory.utils"
        ],
        "version": "0.2.0"
    },
    "hitchsystem": {
        "cmdline": [],
        "modules": [
            "hitchsystem",
            "hitchsystem.commandline",
            "hitchsystem.utils"
        ],
        "version": "0.1.5"
    },
    "hitchtest": {
        "cmdline": [],
        "modules": [
            "hitchtest",
            "hitchtest.arguments",
            "hitchtest.commandline",
            "hitchtest.environment",
            "hitchtest.environment.checks",
            "hitchtest.environment.utils",
            "hitchtest.environment.verifier",
            "hitchtest.executionengine",
            "hitchtest.hitch_stacktrace",
            "hitchtest.modified",
            "hitchtest.module",
            "hitchtest.package",
            "hitchtest.result",
            "hitchtest.results",
            "hitchtest.scenario",
            "hitchtest.settings",
            "hitchtest.signal_manager",
            "hitchtest.snapdir",
            "hitchtest.step",
            "hitchtest.suite",
            "hitchtest.test",
            "hitchtest.utils"
        ],
        "version": "0.9.12"
    },
    "hitchtrigger": {
        "cmdline": [],
        "modules": [
            "hitchtrigger",
            "hitchtrigger.block",
            "hitchtrigger.condition",
            "hitchtrigger.exceptions",
            "hitchtrigger.monitor",
            "hitchtrigger.trigger"
        ],
        "version": "0.2"
    },
    "hitchvagrant": {
        "cmdline": [],
        "modules": [
            "hitchvagrant",
            "hitchvagrant.vagrant",
            "hitchvagrant.vagrant_service"
        ],
        "version": "0.1"
    },
    "hitchvm": {
        "cmdline": [],
        "modules": [
            "hitchvm",
            "hitchvm.boxes",
            "hitchvm.recipes",
            "hitchvm.utils",
            "hitchvm.vagrant"
        ],
        "version": "0.2.6"
    },
    "hitcpy": {
        "cmdline": [],
        "modules": [
            "hitcpy",
            "hitcpy.hitcpy",
            "hitcpy.version"
        ],
        "version": "0.1.1"
    },
    "hitman": {
        "cmdline": [],
        "modules": [],
        "version": "1.2b1"
    },
    "hitnrun": {
        "cmdline": [],
        "modules": [
            "hitnrun"
        ],
        "version": "0.3.1dev"
    },
    "hivclustering": {
        "cmdline": [],
        "modules": [
            "hivclustering",
            "hivclustering.mtnetwork",
            "hivclustering.networkbuild"
        ],
        "version": "1.2.6"
    },
    "hive": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hive-executor-py": {
        "cmdline": [],
        "modules": [
            "hive",
            "hive.exceptions",
            "hive.executor"
        ],
        "version": "1.0.9.dev1"
    },
    "hive-thrift-py": {
        "cmdline": [],
        "modules": [
            "fb303",
            "fb303.FacebookBase",
            "fb303.FacebookService",
            "fb303.constants",
            "fb303.ttypes",
            "fb303_scripts",
            "fb303_scripts.fb303_simple_mgmt",
            "hive_metastore",
            "hive_metastore.ThriftHiveMetastore",
            "hive_metastore.constants",
            "hive_metastore.ttypes",
            "hive_serde",
            "hive_serde.constants",
            "hive_serde.ttypes",
            "hive_service",
            "hive_service.ThriftHive",
            "hive_service.constants",
            "hive_service.ttypes",
            "queryplan",
            "queryplan.constants",
            "queryplan.ttypes",
            "thrift",
            "thrift.TSCons",
            "thrift.Thrift",
            "thrift.protocol",
            "thrift.protocol.TBinaryProtocol",
            "thrift.protocol.TProtocol",
            "thrift.reflection",
            "thrift.reflection.limited",
            "thrift.reflection.limited.constants",
            "thrift.reflection.limited.ttypes",
            "thrift.server",
            "thrift.server.THttpServer",
            "thrift.server.TNonblockingServer",
            "thrift.server.TServer",
            "thrift.transport",
            "thrift.transport.THttpClient",
            "thrift.transport.TSocket",
            "thrift.transport.TTransport",
            "thrift.transport.TTwisted"
        ],
        "version": "0.0.1"
    },
    "hive-utils": {
        "cmdline": [],
        "modules": [
            "hive_utils",
            "hive_utils.hive_client"
        ],
        "version": "0.0.1"
    },
    "hiveary-agent": {
        "cmdline": [],
        "modules": [
            "hiveary",
            "hiveary.controller",
            "hiveary.daemon",
            "hiveary.info",
            "hiveary.info.dmesg",
            "hiveary.info.logs",
            "hiveary.info.system",
            "hiveary.info.wincom",
            "hiveary.monitors",
            "hiveary.network",
            "hiveary.oauth_client",
            "hiveary.paths"
        ],
        "version": "1.4.0"
    },
    "hivectl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hived": {
        "cmdline": [],
        "modules": [
            "hived",
            "hived.conf",
            "hived.log",
            "hived.process",
            "hived.queue",
            "hived.run_module",
            "hived.trail",
            "hived.worker"
        ],
        "version": "0.9.0"
    },
    "hivefdw": {
        "cmdline": [],
        "modules": [
            "hivefdw"
        ],
        "version": "0.0.2"
    },
    "hiveplot": {
        "cmdline": [],
        "modules": [
            "hiveplot",
            "hiveplot.hiveplot",
            "hiveplot.test_hiveplot"
        ],
        "version": "2016.7.27"
    },
    "hiver": {
        "cmdline": [],
        "modules": [
            "hiver",
            "hiver.fb303",
            "hiver.fb303.FacebookBase",
            "hiver.fb303.FacebookService",
            "hiver.fb303.constants",
            "hiver.fb303.ttypes",
            "hiver.fb303_scripts",
            "hiver.fb303_scripts.fb303_simple_mgmt",
            "hiver.hive_metastore",
            "hiver.hive_metastore.ThriftHiveMetastore",
            "hiver.hive_metastore.constants",
            "hiver.hive_metastore.ttypes",
            "hiver.hive_serde",
            "hiver.hive_serde.constants",
            "hiver.hive_serde.ttypes",
            "hiver.hive_service",
            "hiver.hive_service.ThriftHive",
            "hiver.hive_service.constants",
            "hiver.hive_service.ttypes",
            "hiver.queryplan",
            "hiver.queryplan.constants",
            "hiver.queryplan.ttypes"
        ],
        "version": "0.2.1"
    },
    "hiverunner": {
        "cmdline": [],
        "modules": [
            "hiverunner"
        ],
        "version": "1.0.1"
    },
    "hivtrace": {
        "cmdline": [],
        "modules": [
            "hivtrace",
            "hivtrace.hivtrace",
            "hivtrace.hivtraceviz",
            "hivtrace.strip_drams"
        ],
        "version": "0.2.2"
    },
    "hivy": {
        "cmdline": [],
        "modules": [
            "hivy",
            "hivy.auth",
            "hivy.conf",
            "hivy.core",
            "hivy.logger",
            "hivy.node",
            "hivy.node.factory",
            "hivy.node.foundation",
            "hivy.reactor",
            "hivy.reactor.handler",
            "hivy.reactor.hooks",
            "hivy.reactor.hooks.utils",
            "hivy.reactor.reactor",
            "hivy.resources",
            "hivy.resources.node",
            "hivy.resources.system",
            "hivy.settings",
            "hivy.test",
            "hivy.utils"
        ],
        "version": "0.0.6"
    },
    "hiwi": {
        "cmdline": [],
        "modules": [
            "hiwi",
            "hiwi.hiwi",
            "hiwi.hiwierrors",
            "hiwi.main"
        ],
        "version": "0.1"
    },
    "hiworkflow": {
        "cmdline": [],
        "modules": [
            "workflowapp",
            "workflowapp.admin",
            "workflowapp.apps",
            "workflowapp.createflow",
            "workflowapp.migrations",
            "workflowapp.migrations.0001_initial",
            "workflowapp.migrations.0002_trigger",
            "workflowapp.migrations.0003_auto_20160308_0709",
            "workflowapp.migrations.0004_auto_20160308_0952",
            "workflowapp.migrations.0005_auto_20160308_1403",
            "workflowapp.migrations.0006_assignee_assigned_by",
            "workflowapp.migrations.0007_auto_20160309_1223",
            "workflowapp.migrations.0008_auto_20160309_1228",
            "workflowapp.migrations.0009_auto_20160310_1331",
            "workflowapp.migrations.0010_state_is_automated",
            "workflowapp.models",
            "workflowapp.tests",
            "workflowapp.views"
        ],
        "version": "3.0"
    },
    "hiworld": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hix": {
        "cmdline": [],
        "modules": [
            "hix",
            "hix.hi"
        ],
        "version": "1.0.1"
    },
    "hiyapyco": {
        "cmdline": [],
        "modules": [
            "hiyapyco",
            "hiyapyco.odyldo",
            "hiyapyco.version"
        ],
        "version": "0.4.10"
    },
    "hizashi-utils": {
        "cmdline": [],
        "modules": [
            "hizashi_utils",
            "hizashi_utils.modules",
            "hizashi_utils.utils"
        ],
        "version": "0.4.1"
    },
    "hjc-recursion": {
        "cmdline": [],
        "modules": [
            "recursion"
        ],
        "version": "1.0.0"
    },
    "hjexcel": {
        "cmdline": [],
        "modules": [
            "hjexcel",
            "hjexcel.todict",
            "hjexcel.tosqlite"
        ],
        "version": "1.1.2"
    },
    "hjplugin": {
        "cmdline": [],
        "modules": [
            "hjplugin",
            "hjplugin.NoseHjPlugin"
        ],
        "version": "1.2"
    },
    "hjs": {
        "cmdline": [],
        "modules": [
            "hjs",
            "hjs.tests",
            "hjs.tests.test_hjs"
        ],
        "version": "0.0.7"
    },
    "hjson": {
        "cmdline": [],
        "modules": [
            "hjson",
            "hjson.compat",
            "hjson.decoder",
            "hjson.encoder",
            "hjson.encoderH",
            "hjson.ordered_dict",
            "hjson.scanner",
            "hjson.tests",
            "hjson.tests.test_bigint_as_string",
            "hjson.tests.test_bitsize_int_as_string",
            "hjson.tests.test_check_circular",
            "hjson.tests.test_decimal",
            "hjson.tests.test_decode",
            "hjson.tests.test_default",
            "hjson.tests.test_dump",
            "hjson.tests.test_encode_basestring_ascii",
            "hjson.tests.test_errors",
            "hjson.tests.test_fail",
            "hjson.tests.test_float",
            "hjson.tests.test_for_json",
            "hjson.tests.test_hjson",
            "hjson.tests.test_indent",
            "hjson.tests.test_item_sort_key",
            "hjson.tests.test_namedtuple",
            "hjson.tests.test_pass1",
            "hjson.tests.test_pass2",
            "hjson.tests.test_pass3",
            "hjson.tests.test_recursion",
            "hjson.tests.test_scanstring",
            "hjson.tests.test_separators",
            "hjson.tests.test_tool",
            "hjson.tests.test_tuple",
            "hjson.tests.test_unicode",
            "hjson.tool"
        ],
        "version": "2.0.2"
    },
    "hjy-abc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hkdf": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "hkj": {
        "cmdline": [],
        "modules": [
            "hkj",
            "hkj.sample"
        ],
        "version": "1.0.0"
    },
    "hkobservatory": {
        "cmdline": [],
        "modules": [
            "hkobservatory"
        ],
        "version": "1.0.6"
    },
    "hkw": {
        "cmdline": [],
        "modules": [
            "hkw"
        ],
        "version": "1.1"
    },
    "hl-vt100": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hl.colours": {
        "cmdline": [],
        "modules": [
            "hl",
            "hl.colours"
        ],
        "version": "0.1.4"
    },
    "hl.pas.samlplugin": {
        "cmdline": [],
        "modules": [
            "hl",
            "hl.pas",
            "hl.pas.samlplugin",
            "hl.pas.samlplugin.browser",
            "hl.pas.samlplugin.browser.views",
            "hl.pas.samlplugin.client",
            "hl.pas.samlplugin.install",
            "hl.pas.samlplugin.interfaces",
            "hl.pas.samlplugin.plugin",
            "hl.pas.samlplugin.saml2",
            "hl.pas.samlplugin.saml2.assertion",
            "hl.pas.samlplugin.saml2.attribute_converter",
            "hl.pas.samlplugin.saml2.attribute_resolver",
            "hl.pas.samlplugin.saml2.attributemaps",
            "hl.pas.samlplugin.saml2.attributemaps.basic",
            "hl.pas.samlplugin.saml2.attributemaps.saml_uri",
            "hl.pas.samlplugin.saml2.attributemaps.shibboleth_uri",
            "hl.pas.samlplugin.saml2.authn",
            "hl.pas.samlplugin.saml2.authn_context",
            "hl.pas.samlplugin.saml2.authn_context.ippword",
            "hl.pas.samlplugin.saml2.authn_context.mobiletwofactor",
            "hl.pas.samlplugin.saml2.authn_context.ppt",
            "hl.pas.samlplugin.saml2.authn_context.pword",
            "hl.pas.samlplugin.saml2.authn_context.sslcert",
            "hl.pas.samlplugin.saml2.authn_context.timesync",
            "hl.pas.samlplugin.saml2.authn_context.types",
            "hl.pas.samlplugin.saml2.cache",
            "hl.pas.samlplugin.saml2.cipher",
            "hl.pas.samlplugin.saml2.client",
            "hl.pas.samlplugin.saml2.client_base",
            "hl.pas.samlplugin.saml2.config",
            "hl.pas.samlplugin.saml2.discovery",
            "hl.pas.samlplugin.saml2.ecp",
            "hl.pas.samlplugin.saml2.ecp_client",
            "hl.pas.samlplugin.saml2.entity",
            "hl.pas.samlplugin.saml2.entity_category",
            "hl.pas.samlplugin.saml2.entity_category.edugain",
            "hl.pas.samlplugin.saml2.entity_category.swamid",
            "hl.pas.samlplugin.saml2.eptid",
            "hl.pas.samlplugin.saml2.extension",
            "hl.pas.samlplugin.saml2.extension.dri",
            "hl.pas.samlplugin.saml2.extension.idpdisc",
            "hl.pas.samlplugin.saml2.extension.mdattr",
            "hl.pas.samlplugin.saml2.extension.mdrpi",
            "hl.pas.samlplugin.saml2.extension.mdui",
            "hl.pas.samlplugin.saml2.extension.shibmd",
            "hl.pas.samlplugin.saml2.extension.ui",
            "hl.pas.samlplugin.saml2.httpbase",
            "hl.pas.samlplugin.saml2.httputil",
            "hl.pas.samlplugin.saml2.ident",
            "hl.pas.samlplugin.saml2.mcache",
            "hl.pas.samlplugin.saml2.md",
            "hl.pas.samlplugin.saml2.mdbcache",
            "hl.pas.samlplugin.saml2.mdie",
            "hl.pas.samlplugin.saml2.mdstore",
            "hl.pas.samlplugin.saml2.metadata",
            "hl.pas.samlplugin.saml2.mongo_store",
            "hl.pas.samlplugin.saml2.pack",
            "hl.pas.samlplugin.saml2.population",
            "hl.pas.samlplugin.saml2.profile",
            "hl.pas.samlplugin.saml2.profile.ecp",
            "hl.pas.samlplugin.saml2.profile.paos",
            "hl.pas.samlplugin.saml2.request",
            "hl.pas.samlplugin.saml2.response",
            "hl.pas.samlplugin.saml2.s_utils",
            "hl.pas.samlplugin.saml2.saml",
            "hl.pas.samlplugin.saml2.samlp",
            "hl.pas.samlplugin.saml2.schema",
            "hl.pas.samlplugin.saml2.schema.soap",
            "hl.pas.samlplugin.saml2.schema.soapenv",
            "hl.pas.samlplugin.saml2.schema.wsdl",
            "hl.pas.samlplugin.saml2.sdb",
            "hl.pas.samlplugin.saml2.server",
            "hl.pas.samlplugin.saml2.sigver",
            "hl.pas.samlplugin.saml2.soap",
            "hl.pas.samlplugin.saml2.time_util",
            "hl.pas.samlplugin.saml2.validate",
            "hl.pas.samlplugin.saml2.virtual_org",
            "hl.pas.samlplugin.saml2.xmldsig",
            "hl.pas.samlplugin.saml2.xmlenc",
            "hl.pas.samlplugin.tests",
            "hl.pas.samlplugin.tests.base",
            "hl.pas.samlplugin.tests.mocks",
            "hl.pas.samlplugin.tests.test_properties",
            "hl.pas.samlplugin.tests.test_saml2",
            "hl.pas.samlplugin.util"
        ],
        "version": "1.3"
    },
    "hl.plone.boardnotifications": {
        "cmdline": [],
        "modules": [
            "hl",
            "hl.plone",
            "hl.plone.boardnotifications",
            "hl.plone.boardnotifications.browser",
            "hl.plone.boardnotifications.browser.mailin",
            "hl.plone.boardnotifications.browser.views",
            "hl.plone.boardnotifications.eventhandlers",
            "hl.plone.boardnotifications.interfaces",
            "hl.plone.boardnotifications.notify",
            "hl.plone.boardnotifications.subscribe",
            "hl.plone.boardnotifications.tests",
            "hl.plone.boardnotifications.tests.mocks",
            "hl.plone.boardnotifications.tests.test_notifier",
            "hl.plone.boardnotifications.tests.test_subscription",
            "hl.plone.boardnotifications.upgrades"
        ],
        "version": "1.1"
    },
    "hl7": {
        "cmdline": [],
        "modules": [
            "hl7",
            "hl7.accessor",
            "hl7.client",
            "hl7.compat",
            "hl7.containers",
            "hl7.datatypes",
            "hl7.parser",
            "hl7.util",
            "hl7.version",
            "tests",
            "tests.compat",
            "tests.samples",
            "tests.test_accessor",
            "tests.test_client",
            "tests.test_construction",
            "tests.test_containers",
            "tests.test_datetime",
            "tests.test_parse",
            "tests.test_util",
            "tests.test_version"
        ],
        "version": "0.3.4"
    },
    "hl7apy": {
        "cmdline": [
            "hl7apy_profile_parser"
        ],
        "modules": [
            "hl7apy",
            "hl7apy.base_datatypes",
            "hl7apy.consts",
            "hl7apy.core",
            "hl7apy.exceptions",
            "hl7apy.factories",
            "hl7apy.mllp",
            "hl7apy.parser",
            "hl7apy.utils",
            "hl7apy.v2_2",
            "hl7apy.v2_2.datatypes",
            "hl7apy.v2_2.fields",
            "hl7apy.v2_2.groups",
            "hl7apy.v2_2.messages",
            "hl7apy.v2_2.segments",
            "hl7apy.v2_3",
            "hl7apy.v2_3.datatypes",
            "hl7apy.v2_3.fields",
            "hl7apy.v2_3.groups",
            "hl7apy.v2_3.messages",
            "hl7apy.v2_3.segments",
            "hl7apy.v2_3_1",
            "hl7apy.v2_3_1.datatypes",
            "hl7apy.v2_3_1.fields",
            "hl7apy.v2_3_1.groups",
            "hl7apy.v2_3_1.messages",
            "hl7apy.v2_3_1.segments",
            "hl7apy.v2_3_1.tables",
            "hl7apy.v2_4",
            "hl7apy.v2_4.datatypes",
            "hl7apy.v2_4.fields",
            "hl7apy.v2_4.groups",
            "hl7apy.v2_4.messages",
            "hl7apy.v2_4.segments",
            "hl7apy.v2_4.tables",
            "hl7apy.v2_5",
            "hl7apy.v2_5.datatypes",
            "hl7apy.v2_5.fields",
            "hl7apy.v2_5.groups",
            "hl7apy.v2_5.messages",
            "hl7apy.v2_5.segments",
            "hl7apy.v2_5.tables",
            "hl7apy.v2_5_1",
            "hl7apy.v2_5_1.datatypes",
            "hl7apy.v2_5_1.fields",
            "hl7apy.v2_5_1.groups",
            "hl7apy.v2_5_1.messages",
            "hl7apy.v2_5_1.segments",
            "hl7apy.v2_5_1.tables",
            "hl7apy.v2_6",
            "hl7apy.v2_6.base_datatypes",
            "hl7apy.v2_6.datatypes",
            "hl7apy.v2_6.fields",
            "hl7apy.v2_6.groups",
            "hl7apy.v2_6.messages",
            "hl7apy.v2_6.segments",
            "hl7apy.v2_6.tables",
            "hl7apy.validation"
        ],
        "version": "1.2.0"
    },
    "hl7parser": {
        "cmdline": [],
        "modules": [
            "hl7parser",
            "hl7parser.hl7",
            "hl7parser.hl7_data_types",
            "hl7parser.hl7_segments",
            "hl7parser.tests",
            "hl7parser.tests.test_parse"
        ],
        "version": "0.5.11"
    },
    "hl7py": {
        "cmdline": [],
        "modules": [
            "HL7py",
            "HL7py.constants",
            "HL7py.hl7_test",
            "HL7py.hl7fields",
            "HL7py.parser",
            "HL7py.test_messages"
        ],
        "version": "1.01"
    },
    "hl7tersely": {
        "cmdline": [],
        "modules": [
            "hl7tersely",
            "hl7tersely.hl7dict",
            "hl7tersely.hl7parser"
        ],
        "version": "1.2"
    },
    "hla-genotyper": {
        "cmdline": [],
        "modules": [
            "hla",
            "hla.genotyper",
            "hla.genotyper.bkk",
            "hla.genotyper.test",
            "hla.version"
        ],
        "version": "0.4.2b1"
    },
    "hladny-matfyzak": {
        "cmdline": [],
        "modules": [
            "hladnymatfyzak"
        ],
        "version": "0.0.7.0"
    },
    "hlc": {
        "cmdline": [],
        "modules": [
            "hlc",
            "hlc._meta",
            "hlc.cli",
            "hlc.helpers",
            "hlc.hostlist"
        ],
        "version": "0.3.0"
    },
    "hll": {
        "cmdline": [],
        "modules": [],
        "version": "1.1"
    },
    "hls-ingestion": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hls-playlist": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hls2dash": {
        "cmdline": [],
        "modules": [
            "hls2dash",
            "hls2dash.debug",
            "hls2dash.lib",
            "hls2dash.lib.MPD",
            "hls2dash.lib.MPDAdaptationSet",
            "hls2dash.lib.MPDRepresentation",
            "hls2dash.lib.TS",
            "hls2dash.lib.TSRemux",
            "hls2dash.lib.util",
            "hls2dash.tsremux"
        ],
        "version": "0.2.1"
    },
    "hlsclient": {
        "cmdline": [],
        "modules": [
            "hlsclient",
            "hlsclient.atomic",
            "hlsclient.balancer",
            "hlsclient.cleaner",
            "hlsclient.combine",
            "hlsclient.consumer",
            "hlsclient.crypto",
            "hlsclient.discover",
            "hlsclient.helpers",
            "hlsclient.lock",
            "hlsclient.pkcs7",
            "hlsclient.transcode",
            "hlsclient.workers",
            "hlsclient.workers.master",
            "hlsclient.workers.playlist"
        ],
        "version": "0.5.3"
    },
    "hlsdownload": {
        "cmdline": [],
        "modules": [
            "hlsdownload",
            "hlsdownload.debug",
            "hlsdownload.downloader"
        ],
        "version": "0.0.12"
    },
    "hlsorigin": {
        "cmdline": [],
        "modules": [
            "hlsorigin",
            "hlsorigin.capture",
            "hlsorigin.debug",
            "hlsorigin.startover",
            "hlsorigin.util"
        ],
        "version": "0.0.15"
    },
    "hlsrelay": {
        "cmdline": [],
        "modules": [
            "hlsrelay"
        ],
        "version": "0.0.1"
    },
    "hlsvdpro": {
        "cmdline": [],
        "modules": [
            "hlsvdpro",
            "hlsvdpro.hlsvd"
        ],
        "version": "1.0.1"
    },
    "hlupik": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.4"
    },
    "hm-test1": {
        "cmdline": [],
        "modules": [
            "hm_test1"
        ],
        "version": "1.1.0"
    },
    "hmac": {
        "cmdline": [],
        "modules": [],
        "version": "20101005"
    },
    "hmac-authentication": {
        "cmdline": [],
        "modules": [
            "hmac_authentication",
            "hmac_authentication.hmacauth"
        ],
        "version": "1.0.0"
    },
    "hmac-cli": {
        "cmdline": [],
        "modules": [
            "hmac_cli"
        ],
        "version": "0.0.0"
    },
    "hmako": {
        "cmdline": [],
        "modules": [
            "builder",
            "builder.builders",
            "builder.util",
            "hmako",
            "hmako._ast_util",
            "hmako.ast",
            "hmako.cache",
            "hmako.codegen",
            "hmako.compat",
            "hmako.exceptions",
            "hmako.ext",
            "hmako.ext.autohandler",
            "hmako.ext.babelplugin",
            "hmako.ext.beaker_cache",
            "hmako.ext.preprocessors",
            "hmako.ext.pygmentplugin",
            "hmako.ext.turbogears",
            "hmako.filters",
            "hmako.lexer",
            "hmako.lookup",
            "hmako.parsetree",
            "hmako.pygen",
            "hmako.pyparser",
            "hmako.runtime",
            "hmako.template",
            "hmako.util",
            "templatetags",
            "templatetags.bench",
            "test",
            "test.foo",
            "test.foo.test_ns",
            "test.sample_module_namespace",
            "test.test_ast",
            "test.test_babelplugin",
            "test.test_block",
            "test.test_cache",
            "test.test_call",
            "test.test_decorators",
            "test.test_def",
            "test.test_exceptions",
            "test.test_filters",
            "test.test_inheritance",
            "test.test_lexer",
            "test.test_lookup",
            "test.test_loop",
            "test.test_lru",
            "test.test_namespace",
            "test.test_pygen",
            "test.test_template",
            "test.test_tgplugin",
            "test.test_util",
            "test.util"
        ],
        "version": "1.16"
    },
    "hmc": {
        "cmdline": [],
        "modules": [
            "hmc",
            "hmc.datasets",
            "hmc.exceptions",
            "hmc.hmc",
            "hmc.metrics"
        ],
        "version": "0.3"
    },
    "hmc-loss": {
        "cmdline": [],
        "modules": [
            "hmc_loss",
            "hmc_loss.hmc_loss"
        ],
        "version": "1.0.0"
    },
    "hmc.theme": {
        "cmdline": [],
        "modules": [
            "hmc",
            "hmc.theme",
            "hmc.theme.tests"
        ],
        "version": "0.1.1"
    },
    "hmcrestclient": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hmda-tools": {
        "cmdline": [
            "hmda_create_schemas",
            "hmda_extract_geo_data",
            "hmda_load_cbsa",
            "hmda_load_code_sheet",
            "hmda_load_geo"
        ],
        "modules": [
            "hmda_tools",
            "hmda_tools.data",
            "hmda_tools.data.cbsa",
            "hmda_tools.data.geo",
            "hmda_tools.data.schemas",
            "hmda_tools.unicode_csv"
        ],
        "version": "0.1.4"
    },
    "hmeta": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hmf": {
        "cmdline": [
            "hmf",
            "hmf-fit"
        ],
        "modules": [
            "hmf",
            "hmf._cache",
            "hmf._framework",
            "hmf._utils",
            "hmf.cosmo",
            "hmf.filters",
            "hmf.fitting",
            "hmf.fitting.cli_tools",
            "hmf.fitting.fit",
            "hmf.fitting_functions",
            "hmf.functional",
            "hmf.growth_factor",
            "hmf.halofit",
            "hmf.hmf",
            "hmf.integrate_hmf",
            "hmf.sample",
            "hmf.transfer",
            "hmf.transfer_models",
            "hmf.wdm"
        ],
        "version": "2.0.5"
    },
    "hmfcalc": {
        "cmdline": [],
        "modules": [
            "HMFcalc",
            "HMFcalc.forms",
            "HMFcalc.tasks",
            "HMFcalc.templatetags",
            "HMFcalc.templatetags.hmf_version",
            "HMFcalc.tests",
            "HMFcalc.utils",
            "HMFcalc.views"
        ],
        "version": "1.0.5"
    },
    "hml-equation-parser": {
        "cmdline": [],
        "modules": [
            "hml_equation_parser",
            "hml_equation_parser.hmlParser",
            "hml_equation_parser.hulkEqParser",
            "hml_equation_parser.hulkReplaceMethod"
        ],
        "version": "1.0.12"
    },
    "hmm": {
        "cmdline": [],
        "modules": [
            "hmm",
            "hmm.hmm"
        ],
        "version": "0.0.1"
    },
    "hmm001": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hmmerclust": {
        "cmdline": [],
        "modules": [
            "demo",
            "demo.settings",
            "example",
            "example.settings",
            "hmmerclust",
            "hmmerclust.hmmerclust"
        ],
        "version": "0.0.1.dev5"
    },
    "hmmlearn": {
        "cmdline": [],
        "modules": [
            "hmmlearn",
            "hmmlearn.base",
            "hmmlearn.hmm",
            "hmmlearn.tests",
            "hmmlearn.tests.test_base",
            "hmmlearn.tests.test_gaussian_hmm",
            "hmmlearn.tests.test_gmm_hmm",
            "hmmlearn.tests.test_multinomial_hmm",
            "hmmlearn.tests.test_utils",
            "hmmlearn.utils"
        ],
        "version": "0.2.0"
    },
    "hmms": {
        "cmdline": [],
        "modules": [
            "hmms",
            "hmms.art",
            "hmms.train"
        ],
        "version": "0.1"
    },
    "hmmus": {
        "cmdline": [
            "hmm-backward",
            "hmm-demo",
            "hmm-forward",
            "hmm-fwdbwd-alldisk",
            "hmm-fwdbwd-somedisk",
            "hmm-od",
            "hmm-posterior",
            "hmm-regression-test"
        ],
        "modules": [
            "hmmus",
            "hmmus.demo",
            "hmmus.estimation",
            "hmmus.hmm",
            "hmmus.hmmhelper",
            "hmmus.progress"
        ],
        "version": "0.3.1"
    },
    "hmpty": {
        "cmdline": [],
        "modules": [
            "HMpTy",
            "HMpTy.__version__",
            "HMpTy.cl_utils",
            "HMpTy.commonutils",
            "HMpTy.commonutils.getpackagepath",
            "HMpTy.htm",
            "HMpTy.htm._htmcCode",
            "HMpTy.htm.htm",
            "HMpTy.htm.sets",
            "HMpTy.htm.tests",
            "HMpTy.htm.tests.test_htm",
            "HMpTy.htm.tests.test_sets",
            "HMpTy.mysql",
            "HMpTy.mysql.add_htm_ids_to_mysql_database_table",
            "HMpTy.mysql.conesearch",
            "HMpTy.mysql.tests",
            "HMpTy.mysql.tests.test_add_htm_ids_to_mysql_database_table",
            "HMpTy.mysql.tests.test_conesearch",
            "HMpTy.utKit"
        ],
        "version": "1.3.3"
    },
    "hms-base": {
        "cmdline": [],
        "modules": [
            "hms_base",
            "hms_base.client",
            "hms_base.decorators",
            "hms_base.tests",
            "hms_base.tests.test_client",
            "hms_base.tests.test_decorators"
        ],
        "version": "2.0"
    },
    "hms0729": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hmx-helpers": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hn": {
        "cmdline": [],
        "modules": [
            "yc",
            "yc.cli",
            "yc.core",
            "yc.thriftdb",
            "yc.times"
        ],
        "version": "0.2.2"
    },
    "hn-cli": {
        "cmdline": [],
        "modules": [
            "hn",
            "hn.cli"
        ],
        "version": "1.0.0"
    },
    "hn2016-falwa": {
        "cmdline": [],
        "modules": [
            "hn2016_falwa",
            "hn2016_falwa.Solve_URef_noslip_hemisphere",
            "hn2016_falwa.api",
            "hn2016_falwa.barotropic_lwa",
            "hn2016_falwa.eqv_lat",
            "hn2016_falwa.lwa",
            "hn2016_falwa.qgpv",
            "hn2016_falwa.qgpv_lwa",
            "hn2016_falwa.static_stability",
            "hn2016_falwa.theta_lwa"
        ],
        "version": "0.1.7"
    },
    "hnbex": {
        "cmdline": [],
        "modules": [
            "hnbex"
        ],
        "version": "0.0.1"
    },
    "hnc": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.50dev"
    },
    "hnc-forms-ext": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.04"
    },
    "hncapiclient": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.7dev"
    },
    "hncforms": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.6dev"
    },
    "hncli": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hncomments": {
        "cmdline": [
            "commentfromurl.py"
        ],
        "modules": [
            "hncomments",
            "hncomments.test",
            "hncomments.utils"
        ],
        "version": "0.1.1"
    },
    "hnctools": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.6dev"
    },
    "hnester": {
        "cmdline": [],
        "modules": [
            "hnester"
        ],
        "version": "1.1.4"
    },
    "hnfb": {
        "cmdline": [],
        "modules": [
            "hnfb",
            "hnfb.main",
            "hnfb.utils"
        ],
        "version": "0.2"
    },
    "hng": {
        "cmdline": [
            "hng"
        ],
        "modules": [
            "hng",
            "hng.import_data",
            "hng.tf_ae"
        ],
        "version": "0.3"
    },
    "hngoption": {
        "cmdline": [],
        "modules": [
            "hngoption",
            "hngoption.hngoption"
        ],
        "version": "1.6"
    },
    "hnmp": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.1"
    },
    "hntool": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hntop": {
        "cmdline": [],
        "modules": [
            "hnapi",
            "hnapi.hnapi",
            "hnapi.hnitem"
        ],
        "version": "0.0.10"
    },
    "hnv": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hoard": {
        "cmdline": [],
        "modules": [
            "hoard",
            "hoard.api",
            "hoard.frontend",
            "hoard.main"
        ],
        "version": "1.1.1"
    },
    "hoarder": {
        "cmdline": [],
        "modules": [
            "hoarder",
            "hoarder.backends",
            "hoarder.ga",
            "hoarder.middleware",
            "hoarder.models",
            "hoarder.mongo",
            "hoarder.tasks",
            "hoarder.templatetags",
            "hoarder.templatetags.hoarder_tags",
            "hoarder.tests",
            "hoarder.views"
        ],
        "version": "0.0.6"
    },
    "hob": {
        "cmdline": [],
        "modules": [
            "hob",
            "hob._js",
            "hob._rst",
            "hob._xmlgen",
            "hob.cmd",
            "hob.extension",
            "hob.parser",
            "hob.proto",
            "hob.script",
            "hob.template",
            "hob.ui",
            "hob.utils"
        ],
        "version": "0.3.3"
    },
    "hobo": {
        "cmdline": [],
        "modules": [
            "hobo",
            "hobo.api",
            "hobo.cli",
            "hobo.command",
            "hobo.libvirt",
            "hobo.net",
            "hobo.tests",
            "hobo.util"
        ],
        "version": "0.1.1"
    },
    "hoboken": {
        "cmdline": [],
        "modules": [
            "hoboken",
            "hoboken._version",
            "hoboken.application",
            "hoboken.conditions",
            "hoboken.exceptions",
            "hoboken.ext",
            "hoboken.helpers",
            "hoboken.matchers",
            "hoboken.objects",
            "hoboken.six",
            "hoboken.tests",
            "hoboken.tests.helpers",
            "hoboken.tests.test_HobokenApplication",
            "hoboken.tests.test_beforeafter",
            "hoboken.tests.test_conditions",
            "hoboken.tests.test_ext",
            "hoboken.tests.test_helpers",
            "hoboken.tests.test_matchers",
            "hoboken.tests.test_request_response",
            "hoboken.tests.test_routing"
        ],
        "version": "0.5.1"
    },
    "hobonickels": {
        "cmdline": [],
        "modules": [
            "hobonickels",
            "hobonickels.hobonickels_api",
            "hobonickels.hobonickels_utils"
        ],
        "version": "1.0.2"
    },
    "hocapontas": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hockeyapp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hockeyapp-utils": {
        "cmdline": [],
        "modules": [
            "hockeyapp-utils.build_utils",
            "hockeyapp-utils.ci-assemble-and-publish",
            "hockeyapp-utils.general_utils",
            "hockeyapp-utils.git_utils",
            "hockeyapp-utils.hockeyapp_utils",
            "hockeyapp-utils.logger",
            "hockeyapp-utils.sync-branch"
        ],
        "version": "1.0.0"
    },
    "hockeylib": {
        "cmdline": [],
        "modules": [
            "hockeylib",
            "hockeylib.api",
            "hockeylib.app",
            "hockeylib.crash",
            "hockeylib.version"
        ],
        "version": "1.0.0"
    },
    "hockeystreams": {
        "cmdline": [],
        "modules": [
            "hockeystreams",
            "hockeystreams.api",
            "hockeystreams.hsutil",
            "hockeystreams.models"
        ],
        "version": "0.2.4"
    },
    "hocr": {
        "cmdline": [],
        "modules": [
            "hocr",
            "hocr.commands",
            "hocr.meta",
            "hocr.overlay",
            "hocr.page",
            "hocr.parser"
        ],
        "version": "0.2.11"
    },
    "hocr-spec": {
        "cmdline": [],
        "modules": [
            "hocr_spec",
            "hocr_spec.spec",
            "hocr_spec.validate"
        ],
        "version": "0.0.5"
    },
    "hocr-tools": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "hodge": {
        "cmdline": [],
        "modules": [
            "hodge",
            "hodge.utils"
        ],
        "version": "0.1"
    },
    "hodor": {
        "cmdline": [],
        "modules": [],
        "version": "1!0"
    },
    "hodor-py": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hodorlive": {
        "cmdline": [],
        "modules": [
            "hodor"
        ],
        "version": "1.2.4"
    },
    "hoedown": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.3"
    },
    "hoep": {
        "cmdline": [],
        "modules": [
            "test",
            "test.custom_renderer",
            "test.extensions",
            "test.markdown",
            "test.render_flags",
            "test.smartypants",
            "test.test_hoep",
            "test.unicode"
        ],
        "version": "1.0.2"
    },
    "hoerapi": {
        "cmdline": [],
        "modules": [
            "hoerapi",
            "hoerapi.errors",
            "hoerapi.get_deleted",
            "hoerapi.get_podcast_data",
            "hoerapi.get_podcast_episodes",
            "hoerapi.get_podcast_live",
            "hoerapi.get_podcasts",
            "hoerapi.lowlevel",
            "hoerapi.parser",
            "hoerapi.util"
        ],
        "version": "2.0"
    },
    "hog": {
        "cmdline": [],
        "modules": [
            "hog",
            "hog.hog"
        ],
        "version": "0.1.7"
    },
    "hogabi-nester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hoggle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hoggorm": {
        "cmdline": [],
        "modules": [
            "hoggorm",
            "hoggorm.cross_val",
            "hoggorm.pca",
            "hoggorm.pcr",
            "hoggorm.plsr",
            "hoggorm.statTools",
            "hoggorm.version"
        ],
        "version": "0.9.0"
    },
    "hoggormplot": {
        "cmdline": [],
        "modules": [
            "hoggormplot",
            "hoggormplot.TEST_pca",
            "hoggormplot.TEST_pcr",
            "hoggormplot.TEST_pls1",
            "hoggormplot.TEST_pls2",
            "hoggormplot.data",
            "hoggormplot.resPlotting",
            "hoggormplot.version"
        ],
        "version": "0.9.0"
    },
    "hogprop": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hogwatch": {
        "cmdline": [],
        "modules": [
            "hogwatch",
            "hogwatch.server",
            "hogwatch.server.models",
            "hogwatch.server.watchdogs",
            "hogwatch.server.watchdogs.nethogs",
            "hogwatch.server.web_service"
        ],
        "version": "0.1.8"
    },
    "hoho": {
        "cmdline": [],
        "modules": [
            "hoho"
        ],
        "version": "1.0.0"
    },
    "hohoxiaoke": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "hoiio": {
        "cmdline": [],
        "modules": [
            "hoiio",
            "hoiio.exceptions",
            "hoiio.service",
            "hoiio.service.account",
            "hoiio.service.fax",
            "hoiio.service.ivr",
            "hoiio.service.number",
            "hoiio.service.sms",
            "hoiio.service.voice",
            "hoiio.utils"
        ],
        "version": "0.1.5"
    },
    "hokusai": {
        "cmdline": [
            "hokusai"
        ],
        "modules": [
            "hokusai",
            "hokusai.common",
            "hokusai.config",
            "hokusai.representers"
        ],
        "version": "0.1"
    },
    "hokuyolx": {
        "cmdline": [],
        "modules": [
            "hokuyolx",
            "hokuyolx.exceptions",
            "hokuyolx.hokuyo",
            "hokuyolx.statuses"
        ],
        "version": "0.9.0"
    },
    "hola-mundo": {
        "cmdline": [],
        "modules": [
            "hola_mundo",
            "hola_mundo.el_grito",
            "hola_mundo.el_mundo",
            "hola_mundo.main",
            "hola_mundo/util",
            "hola_mundo/util.config_loader"
        ],
        "version": "0.0.3"
    },
    "holcrawl": {
        "cmdline": [],
        "modules": [
            "holcrawl",
            "holcrawl._version",
            "holcrawl.compound_cmd",
            "holcrawl.dataset",
            "holcrawl.imdb_crawl",
            "holcrawl.metacritic_crawl",
            "holcrawl.shared",
            "holcrawl.wiki_crawl",
            "scripts",
            "scripts.dataset_cli",
            "scripts.holcrawl_cli",
            "scripts.imdb_cli",
            "scripts.meta_cli",
            "scripts.shared_options",
            "scripts.wiki_cli"
        ],
        "version": "1.0.1"
    },
    "hold": {
        "cmdline": [],
        "modules": [
            "hold"
        ],
        "version": "0.1.0"
    },
    "hold-up": {
        "cmdline": [],
        "modules": [],
        "version": "0.0"
    },
    "holder": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "holdmybeer": {
        "cmdline": [],
        "modules": [
            "holdmybeer",
            "holdmybeer.complex",
            "holdmybeer.core",
            "holdmybeer.exceptions",
            "holdmybeer.operations",
            "holdmybeer.util"
        ],
        "version": "0.0.2"
    },
    "holdup": {
        "cmdline": [],
        "modules": [
            "holdup",
            "holdup.cli"
        ],
        "version": "1.4.0"
    },
    "holecardhandicapper": {
        "cmdline": [],
        "modules": [
            "holecardhandicapper",
            "holecardhandicapper.model",
            "holecardhandicapper.model.const",
            "holecardhandicapper.model.model_builder",
            "holecardhandicapper.model.neuralnet",
            "holecardhandicapper.model.utils"
        ],
        "version": "1.2.1"
    },
    "holepunch": {
        "cmdline": [],
        "modules": [
            "holepunch",
            "holepunch.version"
        ],
        "version": "0.1.0"
    },
    "holiday": {
        "cmdline": [],
        "modules": [
            "holiday",
            "holiday._compat",
            "holiday.core",
            "holiday.exceptions",
            "tests",
            "tests.test_holiday"
        ],
        "version": "1.0.0"
    },
    "holidays": {
        "cmdline": [],
        "modules": [
            "holidays"
        ],
        "version": "0.8.1"
    },
    "holidays-jp": {
        "cmdline": [],
        "modules": [
            "holidays_jp",
            "holidays_jp.countries",
            "holidays_jp.countries.jp",
            "holidays_jp.countries.us",
            "holidays_jp.tests"
        ],
        "version": "1.0.0"
    },
    "hollowpoint": {
        "cmdline": [],
        "modules": [
            "hollowpoint"
        ],
        "version": "0.1"
    },
    "hollywood": {
        "cmdline": [],
        "modules": [
            "hollywood"
        ],
        "version": "0.0.1"
    },
    "holmes": {
        "cmdline": [],
        "modules": [
            "holmes",
            "holmes.cache",
            "holmes.cli",
            "holmes.config",
            "holmes.error_handlers",
            "holmes.error_handlers.sentry",
            "holmes.event_bus",
            "holmes.facters",
            "holmes.facters.body",
            "holmes.facters.css",
            "holmes.facters.google_analytics",
            "holmes.facters.head",
            "holmes.facters.heading_hierarchy",
            "holmes.facters.images",
            "holmes.facters.js",
            "holmes.facters.last_modified",
            "holmes.facters.links",
            "holmes.facters.meta_tags",
            "holmes.facters.robots",
            "holmes.facters.sitemap",
            "holmes.facters.title",
            "holmes.handlers",
            "holmes.handlers.auth",
            "holmes.handlers.bus",
            "holmes.handlers.domains",
            "holmes.handlers.domains_violations_prefs",
            "holmes.handlers.limiter",
            "holmes.handlers.page",
            "holmes.handlers.request",
            "holmes.handlers.review",
            "holmes.handlers.search",
            "holmes.handlers.users",
            "holmes.handlers.users_violations_prefs",
            "holmes.handlers.violation",
            "holmes.material",
            "holmes.models",
            "holmes.models.domain",
            "holmes.models.domains_violations_prefs",
            "holmes.models.fact",
            "holmes.models.keys",
            "holmes.models.keys_category",
            "holmes.models.limiter",
            "holmes.models.page",
            "holmes.models.request",
            "holmes.models.review",
            "holmes.models.user",
            "holmes.models.users_violations_prefs",
            "holmes.models.violation",
            "holmes.reviewer",
            "holmes.search",
            "holmes.search_providers",
            "holmes.search_providers.authnz_elastic",
            "holmes.search_providers.elastic",
            "holmes.search_providers.noexternal",
            "holmes.server",
            "holmes.utils",
            "holmes.validators",
            "holmes.validators.anchor_without_any_text",
            "holmes.validators.base",
            "holmes.validators.blacklist",
            "holmes.validators.body",
            "holmes.validators.css_requests",
            "holmes.validators.domain_canonicalization",
            "holmes.validators.google_analytics",
            "holmes.validators.heading_hierarchy",
            "holmes.validators.image_alt",
            "holmes.validators.img_requests",
            "holmes.validators.js_requests",
            "holmes.validators.last_modified",
            "holmes.validators.link_crawler",
            "holmes.validators.link_with_redirect",
            "holmes.validators.link_with_rel_canonical",
            "holmes.validators.links_with_rel_nofollow",
            "holmes.validators.meta_robots",
            "holmes.validators.meta_tags",
            "holmes.validators.open_graph",
            "holmes.validators.required_meta_tags",
            "holmes.validators.robots",
            "holmes.validators.schema_org_item_type",
            "holmes.validators.sitemap",
            "holmes.validators.title",
            "holmes.validators.total_requests",
            "holmes.validators.url_with_underscore",
            "holmes.worker"
        ],
        "version": "0.16.0-alpha1"
    },
    "holmesalf": {
        "cmdline": [],
        "modules": [
            "holmesalf",
            "holmesalf.version",
            "holmesalf.wrapper",
            "tests",
            "tests.base",
            "tests.test_version",
            "tests.test_wrapper"
        ],
        "version": "0.1.3"
    },
    "holmium.core": {
        "cmdline": [],
        "modules": [
            "holmium",
            "holmium.core",
            "holmium.core._version",
            "holmium.core.conditions",
            "holmium.core.config",
            "holmium.core.cucumber",
            "holmium.core.deprecated",
            "holmium.core.enhancers",
            "holmium.core.env",
            "holmium.core.facets",
            "holmium.core.logger",
            "holmium.core.noseplugin",
            "holmium.core.pageobject",
            "holmium.core.testcase",
            "holmium.core.version"
        ],
        "version": "0.8.5"
    },
    "holocron": {
        "cmdline": [],
        "modules": [
            "holocron",
            "holocron.app",
            "holocron.content",
            "holocron.ext",
            "holocron.ext.abc",
            "holocron.ext.commands",
            "holocron.ext.commands.build",
            "holocron.ext.commands.init",
            "holocron.ext.commands.serve",
            "holocron.ext.feed",
            "holocron.ext.index",
            "holocron.ext.markdown",
            "holocron.ext.restructuredtext",
            "holocron.ext.sitemap",
            "holocron.ext.tags",
            "holocron.ext.user_theme",
            "holocron.main",
            "holocron.utils",
            "tests",
            "tests.ext",
            "tests.ext.commands",
            "tests.ext.commands.test_build",
            "tests.ext.commands.test_init",
            "tests.ext.commands.test_serve",
            "tests.ext.test_feed",
            "tests.ext.test_index",
            "tests.ext.test_markdown",
            "tests.ext.test_restructuredtext",
            "tests.ext.test_sitemap",
            "tests.ext.test_tags",
            "tests.test_app",
            "tests.test_content",
            "tests.test_main",
            "tests.test_utils"
        ],
        "version": "0.3.0"
    },
    "holocron-clear-theme": {
        "cmdline": [],
        "modules": [
            "holocron_clear_theme"
        ],
        "version": "1.0.0"
    },
    "holocron-creole": {
        "cmdline": [],
        "modules": [
            "holocron_creole",
            "holocron_creole.converter",
            "tests",
            "tests.test_creole",
            "tests.test_holocron"
        ],
        "version": "1.0.0"
    },
    "holodeck": {
        "cmdline": [],
        "modules": [
            "holodeck",
            "holodeck.admin",
            "holodeck.api",
            "holodeck.conf",
            "holodeck.conf.defaults",
            "holodeck.context_processors",
            "holodeck.decorators",
            "holodeck.django_settings",
            "holodeck.forms",
            "holodeck.logan_runner",
            "holodeck.management",
            "holodeck.management.commands",
            "holodeck.management.commands.upgrade",
            "holodeck.migrations",
            "holodeck.migrations.0001_initial",
            "holodeck.migrations.0002_auto__add_field_dashboard_share_key",
            "holodeck.migrations.0003_auto__add_field_metric_position",
            "holodeck.migrations.0004_auto__add_unique_sample_timestamp_metric_string_value",
            "holodeck.models",
            "holodeck.settings",
            "holodeck.templatetags",
            "holodeck.templatetags.holodeck_inclusion_tags",
            "holodeck.urls",
            "holodeck.utils",
            "holodeck.views",
            "holodeck.widgets",
            "holodeck.wsgi"
        ],
        "version": "0.1.1"
    },
    "hologram-python": {
        "cmdline": [
            "cellular_receive",
            "e303_receive",
            "hologram_receive",
            "hologram_send",
            "hologram_sms",
            "iota_receive",
            "ms2131_receive"
        ],
        "modules": [
            "Hologram",
            "Hologram.Authentication",
            "Hologram.Authentication.Authentication",
            "Hologram.Authentication.CSRPSKAuthentication",
            "Hologram.Authentication.HologramAuthentication",
            "Hologram.Cloud",
            "Hologram.CustomCloud",
            "Hologram.Event",
            "Hologram.Event.Event",
            "Hologram.HologramCloud",
            "Hologram.Network",
            "Hologram.Network.BLE",
            "Hologram.Network.Cellular",
            "Hologram.Network.Ethernet",
            "Hologram.Network.Modem",
            "Hologram.Network.Modem.E303",
            "Hologram.Network.Modem.IModem",
            "Hologram.Network.Modem.IOTA",
            "Hologram.Network.Modem.MS2131",
            "Hologram.Network.Modem.MockModem",
            "Hologram.Network.Modem.Modem",
            "Hologram.Network.Modem.ModemMode",
            "Hologram.Network.Modem.ModemMode.IPPP",
            "Hologram.Network.Modem.ModemMode.ISerial",
            "Hologram.Network.Modem.ModemMode.MockPPP",
            "Hologram.Network.Modem.ModemMode.MockSerial",
            "Hologram.Network.Modem.ModemMode.ModemMode",
            "Hologram.Network.Modem.ModemMode.PPP",
            "Hologram.Network.Modem.ModemMode.Serial",
            "Hologram.Network.Modem.ModemMode.pppd",
            "Hologram.Network.Modem.chatscripts",
            "Hologram.Network.Network",
            "Hologram.Network.NetworkManager",
            "Hologram.Network.Wifi"
        ],
        "version": "0.5.4"
    },
    "holoviews": {
        "cmdline": [],
        "modules": [
            "holoviews",
            "holoviews.core",
            "holoviews.core.boundingregion",
            "holoviews.core.data",
            "holoviews.core.data.array",
            "holoviews.core.data.dask",
            "holoviews.core.data.dictionary",
            "holoviews.core.data.grid",
            "holoviews.core.data.image",
            "holoviews.core.data.interface",
            "holoviews.core.data.iris",
            "holoviews.core.data.ndelement",
            "holoviews.core.data.pandas",
            "holoviews.core.data.xarray",
            "holoviews.core.dimension",
            "holoviews.core.element",
            "holoviews.core.io",
            "holoviews.core.layout",
            "holoviews.core.ndmapping",
            "holoviews.core.operation",
            "holoviews.core.options",
            "holoviews.core.overlay",
            "holoviews.core.pprint",
            "holoviews.core.sheetcoords",
            "holoviews.core.spaces",
            "holoviews.core.traversal",
            "holoviews.core.tree",
            "holoviews.core.util",
            "holoviews.element",
            "holoviews.element.annotation",
            "holoviews.element.chart",
            "holoviews.element.chart3d",
            "holoviews.element.comparison",
            "holoviews.element.path",
            "holoviews.element.raster",
            "holoviews.element.tabular",
            "holoviews.element.util",
            "holoviews.interface",
            "holoviews.interface.collector",
            "holoviews.interface.pandas",
            "holoviews.interface.seaborn",
            "holoviews.ipython",
            "holoviews.ipython.archive",
            "holoviews.ipython.display_hooks",
            "holoviews.ipython.magics",
            "holoviews.ipython.parser",
            "holoviews.ipython.widgets",
            "holoviews.operation",
            "holoviews.operation.datashader",
            "holoviews.operation.element",
            "holoviews.operation.normalization",
            "holoviews.operation.timeseries",
            "holoviews.plotting",
            "holoviews.plotting.bokeh",
            "holoviews.plotting.bokeh.annotation",
            "holoviews.plotting.bokeh.callbacks",
            "holoviews.plotting.bokeh.chart",
            "holoviews.plotting.bokeh.element",
            "holoviews.plotting.bokeh.path",
            "holoviews.plotting.bokeh.plot",
            "holoviews.plotting.bokeh.raster",
            "holoviews.plotting.bokeh.renderer",
            "holoviews.plotting.bokeh.tabular",
            "holoviews.plotting.bokeh.util",
            "holoviews.plotting.bokeh.widgets",
            "holoviews.plotting.comms",
            "holoviews.plotting.mpl",
            "holoviews.plotting.mpl.annotation",
            "holoviews.plotting.mpl.chart",
            "holoviews.plotting.mpl.chart3d",
            "holoviews.plotting.mpl.comms",
            "holoviews.plotting.mpl.element",
            "holoviews.plotting.mpl.hooks",
            "holoviews.plotting.mpl.pandas",
            "holoviews.plotting.mpl.path",
            "holoviews.plotting.mpl.plot",
            "holoviews.plotting.mpl.raster",
            "holoviews.plotting.mpl.renderer",
            "holoviews.plotting.mpl.seaborn",
            "holoviews.plotting.mpl.tabular",
            "holoviews.plotting.mpl.util",
            "holoviews.plotting.mpl.widgets",
            "holoviews.plotting.plot",
            "holoviews.plotting.plotly",
            "holoviews.plotting.plotly.chart",
            "holoviews.plotting.plotly.chart3d",
            "holoviews.plotting.plotly.element",
            "holoviews.plotting.plotly.plot",
            "holoviews.plotting.plotly.raster",
            "holoviews.plotting.plotly.renderer",
            "holoviews.plotting.plotly.tabular",
            "holoviews.plotting.plotly.util",
            "holoviews.plotting.plotly.widgets",
            "holoviews.plotting.renderer",
            "holoviews.plotting.util",
            "holoviews.plotting.widgets",
            "holoviews.streams",
            "holoviews.util"
        ],
        "version": "1.7.0"
    },
    "holster": {
        "cmdline": [],
        "modules": [
            "holster",
            "holster.emitter",
            "holster.enum",
            "holster.errors",
            "holster.filters",
            "holster.flask_ext",
            "holster.interface",
            "holster.log",
            "holster.responses",
            "holster.scheduler",
            "holster.session",
            "holster.tasks",
            "holster.threadlocal",
            "holster.tokens",
            "holster.util"
        ],
        "version": "1.0.15"
    },
    "holviapi": {
        "cmdline": [],
        "modules": [
            "holviapi",
            "holviapi.categories",
            "holviapi.checkout",
            "holviapi.connection",
            "holviapi.contacts",
            "holviapi.errors",
            "holviapi.invoicing",
            "holviapi.products",
            "holviapi.utils"
        ],
        "version": "0.2.20170129"
    },
    "holy": {
        "cmdline": [
            "holy"
        ],
        "modules": [
            "holy",
            "holy.Holy",
            "holy.test",
            "holy.test.test_ruby"
        ],
        "version": "0.0.2"
    },
    "holy-crypt": {
        "cmdline": [],
        "modules": [
            "holy_crypt",
            "holy_crypt.holy_crypt"
        ],
        "version": "1.1"
    },
    "holydate": {
        "cmdline": [],
        "modules": [
            "holydate",
            "holydate.cli",
            "holydate.holydate",
            "holydate.menology",
            "holydate.paschalion",
            "holydate.search_feasts",
            "holydate.tests",
            "holydate.tests.test_holydate",
            "holydate.tests.test_search_feasts",
            "holydate.tests.test_utils",
            "holydate.utils"
        ],
        "version": "0.2b3"
    },
    "holygrail": {
        "cmdline": [],
        "modules": [
            "holygrail",
            "holygrail.holygrail",
            "holygrail.holygrail_exceptions",
            "holygrail.test_holygrail"
        ],
        "version": "0.2.1.Perceval"
    },
    "holyhandgrenade": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "holytransaction": {
        "cmdline": [],
        "modules": [
            "holytransaction",
            "holytransaction.config",
            "holytransaction.tests"
        ],
        "version": "0.1"
    },
    "holyview": {
        "cmdline": [
            "holyview"
        ],
        "modules": [],
        "version": "0.1"
    },
    "hom4pspy": {
        "cmdline": [],
        "modules": [
            "hom4pspy"
        ],
        "version": "1.0"
    },
    "home": {
        "cmdline": [],
        "modules": [
            "home",
            "home.collect",
            "home.collect.handlers",
            "home.collect.loop",
            "home.config",
            "home.dash",
            "home.dash.admin",
            "home.dash.api",
            "home.dash.models",
            "home.dash.web",
            "home.exceptions",
            "home.ts",
            "home.ts.graph",
            "home.ts.models",
            "home.ts.redis",
            "home.util",
            "home.webcam",
            "home.webcam.loop",
            "home.webcam.models"
        ],
        "version": "0.3.4"
    },
    "home-electric-usage-recommendation-modules": {
        "cmdline": [],
        "modules": [
            "home_electric_usage_recommendation_modules",
            "home_electric_usage_recommendation_modules.modules",
            "home_electric_usage_recommendation_modules.utils",
            "tests",
            "tests.run_modules",
            "tests.test_modules"
        ],
        "version": "0.0.3"
    },
    "home-habitat": {
        "cmdline": [],
        "modules": [
            "habitat",
            "habitat.connstring",
            "habitat.habitat",
            "habitat.package",
            "habitat.packagefactory",
            "habitat.remote",
            "habitat.remotefactory",
            "habitat.ssh",
            "habitat.test_habitat",
            "habitat.transfermanager"
        ],
        "version": "0.3.1"
    },
    "homeapi": {
        "cmdline": [],
        "modules": [
            "homeapi"
        ],
        "version": "0.1.0"
    },
    "homeassistant": {
        "cmdline": [],
        "modules": [
            "homeassistant",
            "homeassistant.bootstrap",
            "homeassistant.components",
            "homeassistant.components.alarm_control_panel",
            "homeassistant.components.alarm_control_panel.alarmdecoder",
            "homeassistant.components.alarm_control_panel.alarmdotcom",
            "homeassistant.components.alarm_control_panel.concord232",
            "homeassistant.components.alarm_control_panel.demo",
            "homeassistant.components.alarm_control_panel.envisalink",
            "homeassistant.components.alarm_control_panel.manual",
            "homeassistant.components.alarm_control_panel.mqtt",
            "homeassistant.components.alarm_control_panel.nx584",
            "homeassistant.components.alarm_control_panel.simplisafe",
            "homeassistant.components.alarm_control_panel.totalconnect",
            "homeassistant.components.alarm_control_panel.verisure",
            "homeassistant.components.alarm_control_panel.wink",
            "homeassistant.components.alarmdecoder",
            "homeassistant.components.alert",
            "homeassistant.components.alexa",
            "homeassistant.components.android_ip_webcam",
            "homeassistant.components.apcupsd",
            "homeassistant.components.api",
            "homeassistant.components.apiai",
            "homeassistant.components.arduino",
            "homeassistant.components.automation",
            "homeassistant.components.automation.event",
            "homeassistant.components.automation.homeassistant",
            "homeassistant.components.automation.litejet",
            "homeassistant.components.automation.mqtt",
            "homeassistant.components.automation.numeric_state",
            "homeassistant.components.automation.state",
            "homeassistant.components.automation.sun",
            "homeassistant.components.automation.template",
            "homeassistant.components.automation.time",
            "homeassistant.components.automation.zone",
            "homeassistant.components.bbb_gpio",
            "homeassistant.components.binary_sensor",
            "homeassistant.components.binary_sensor.alarmdecoder",
            "homeassistant.components.binary_sensor.android_ip_webcam",
            "homeassistant.components.binary_sensor.apcupsd",
            "homeassistant.components.binary_sensor.arest",
            "homeassistant.components.binary_sensor.aurora",
            "homeassistant.components.binary_sensor.bbb_gpio",
            "homeassistant.components.binary_sensor.blink",
            "homeassistant.components.binary_sensor.bloomsky",
            "homeassistant.components.binary_sensor.command_line",
            "homeassistant.components.binary_sensor.concord232",
            "homeassistant.components.binary_sensor.demo",
            "homeassistant.components.binary_sensor.digital_ocean",
            "homeassistant.components.binary_sensor.ecobee",
            "homeassistant.components.binary_sensor.eight_sleep",
            "homeassistant.components.binary_sensor.enocean",
            "homeassistant.components.binary_sensor.envisalink",
            "homeassistant.components.binary_sensor.ffmpeg_motion",
            "homeassistant.components.binary_sensor.ffmpeg_noise",
            "homeassistant.components.binary_sensor.flic",
            "homeassistant.components.binary_sensor.hikvision",
            "homeassistant.components.binary_sensor.homematic",
            "homeassistant.components.binary_sensor.insteon_plm",
            "homeassistant.components.binary_sensor.iss",
            "homeassistant.components.binary_sensor.isy994",
            "homeassistant.components.binary_sensor.knx",
            "homeassistant.components.binary_sensor.maxcube",
            "homeassistant.components.binary_sensor.modbus",
            "homeassistant.components.binary_sensor.mqtt",
            "homeassistant.components.binary_sensor.mysensors",
            "homeassistant.components.binary_sensor.nest",
            "homeassistant.components.binary_sensor.netatmo",
            "homeassistant.components.binary_sensor.nx584",
            "homeassistant.components.binary_sensor.octoprint",
            "homeassistant.components.binary_sensor.pilight",
            "homeassistant.components.binary_sensor.ping",
            "homeassistant.components.binary_sensor.rest",
            "homeassistant.components.binary_sensor.ring",
            "homeassistant.components.binary_sensor.rpi_gpio",
            "homeassistant.components.binary_sensor.sleepiq",
            "homeassistant.components.binary_sensor.tcp",
            "homeassistant.components.binary_sensor.template",
            "homeassistant.components.binary_sensor.threshold",
            "homeassistant.components.binary_sensor.trend",
            "homeassistant.components.binary_sensor.vera",
            "homeassistant.components.binary_sensor.volvooncall",
            "homeassistant.components.binary_sensor.wemo",
            "homeassistant.components.binary_sensor.wink",
            "homeassistant.components.binary_sensor.workday",
            "homeassistant.components.binary_sensor.zha",
            "homeassistant.components.binary_sensor.zigbee",
            "homeassistant.components.binary_sensor.zwave",
            "homeassistant.components.blink",
            "homeassistant.components.bloomsky",
            "homeassistant.components.browser",
            "homeassistant.components.calendar",
            "homeassistant.components.calendar.demo",
            "homeassistant.components.calendar.google",
            "homeassistant.components.camera",
            "homeassistant.components.camera.amcrest",
            "homeassistant.components.camera.blink",
            "homeassistant.components.camera.bloomsky",
            "homeassistant.components.camera.demo",
            "homeassistant.components.camera.ffmpeg",
            "homeassistant.components.camera.foscam",
            "homeassistant.components.camera.generic",
            "homeassistant.components.camera.local_file",
            "homeassistant.components.camera.mjpeg",
            "homeassistant.components.camera.mqtt",
            "homeassistant.components.camera.neato",
            "homeassistant.components.camera.nest",
            "homeassistant.components.camera.netatmo",
            "homeassistant.components.camera.rpi_camera",
            "homeassistant.components.camera.synology",
            "homeassistant.components.camera.uvc",
            "homeassistant.components.camera.verisure",
            "homeassistant.components.camera.zoneminder",
            "homeassistant.components.climate",
            "homeassistant.components.climate.demo",
            "homeassistant.components.climate.ecobee",
            "homeassistant.components.climate.eq3btsmart",
            "homeassistant.components.climate.generic_thermostat",
            "homeassistant.components.climate.heatmiser",
            "homeassistant.components.climate.homematic",
            "homeassistant.components.climate.honeywell",
            "homeassistant.components.climate.knx",
            "homeassistant.components.climate.maxcube",
            "homeassistant.components.climate.mysensors",
            "homeassistant.components.climate.nest",
            "homeassistant.components.climate.netatmo",
            "homeassistant.components.climate.oem",
            "homeassistant.components.climate.proliphix",
            "homeassistant.components.climate.radiotherm",
            "homeassistant.components.climate.sensibo",
            "homeassistant.components.climate.tado",
            "homeassistant.components.climate.vera",
            "homeassistant.components.climate.wink",
            "homeassistant.components.climate.zwave",
            "homeassistant.components.config",
            "homeassistant.components.config.core",
            "homeassistant.components.config.group",
            "homeassistant.components.config.hassbian",
            "homeassistant.components.config.zwave",
            "homeassistant.components.configurator",
            "homeassistant.components.conversation",
            "homeassistant.components.cover",
            "homeassistant.components.cover.command_line",
            "homeassistant.components.cover.demo",
            "homeassistant.components.cover.garadget",
            "homeassistant.components.cover.homematic",
            "homeassistant.components.cover.isy994",
            "homeassistant.components.cover.mqtt",
            "homeassistant.components.cover.myq",
            "homeassistant.components.cover.mysensors",
            "homeassistant.components.cover.opengarage",
            "homeassistant.components.cover.rfxtrx",
            "homeassistant.components.cover.rpi_gpio",
            "homeassistant.components.cover.scsgate",
            "homeassistant.components.cover.tellduslive",
            "homeassistant.components.cover.vera",
            "homeassistant.components.cover.wink",
            "homeassistant.components.cover.zwave",
            "homeassistant.components.demo",
            "homeassistant.components.device_sun_light_trigger",
            "homeassistant.components.device_tracker",
            "homeassistant.components.device_tracker.actiontec",
            "homeassistant.components.device_tracker.aruba",
            "homeassistant.components.device_tracker.asuswrt",
            "homeassistant.components.device_tracker.automatic",
            "homeassistant.components.device_tracker.bbox",
            "homeassistant.components.device_tracker.bluetooth_le_tracker",
            "homeassistant.components.device_tracker.bluetooth_tracker",
            "homeassistant.components.device_tracker.bt_home_hub_5",
            "homeassistant.components.device_tracker.cisco_ios",
            "homeassistant.components.device_tracker.ddwrt",
            "homeassistant.components.device_tracker.demo",
            "homeassistant.components.device_tracker.fritz",
            "homeassistant.components.device_tracker.gpslogger",
            "homeassistant.components.device_tracker.icloud",
            "homeassistant.components.device_tracker.linksys_ap",
            "homeassistant.components.device_tracker.locative",
            "homeassistant.components.device_tracker.luci",
            "homeassistant.components.device_tracker.mikrotik",
            "homeassistant.components.device_tracker.mqtt",
            "homeassistant.components.device_tracker.mqtt_json",
            "homeassistant.components.device_tracker.mysensors",
            "homeassistant.components.device_tracker.netgear",
            "homeassistant.components.device_tracker.nmap_tracker",
            "homeassistant.components.device_tracker.owntracks",
            "homeassistant.components.device_tracker.ping",
            "homeassistant.components.device_tracker.sky_hub",
            "homeassistant.components.device_tracker.snmp",
            "homeassistant.components.device_tracker.swisscom",
            "homeassistant.components.device_tracker.tado",
            "homeassistant.components.device_tracker.thomson",
            "homeassistant.components.device_tracker.tomato",
            "homeassistant.components.device_tracker.tplink",
            "homeassistant.components.device_tracker.trackr",
            "homeassistant.components.device_tracker.ubus",
            "homeassistant.components.device_tracker.unifi",
            "homeassistant.components.device_tracker.upc_connect",
            "homeassistant.components.device_tracker.volvooncall",
            "homeassistant.components.device_tracker.xiaomi",
            "homeassistant.components.digital_ocean",
            "homeassistant.components.discovery",
            "homeassistant.components.downloader",
            "homeassistant.components.dweet",
            "homeassistant.components.ecobee",
            "homeassistant.components.eight_sleep",
            "homeassistant.components.emoncms_history",
            "homeassistant.components.emulated_hue",
            "homeassistant.components.emulated_hue.hue_api",
            "homeassistant.components.emulated_hue.upnp",
            "homeassistant.components.enocean",
            "homeassistant.components.envisalink",
            "homeassistant.components.fan",
            "homeassistant.components.fan.demo",
            "homeassistant.components.fan.isy994",
            "homeassistant.components.fan.mqtt",
            "homeassistant.components.fan.wink",
            "homeassistant.components.feedreader",
            "homeassistant.components.ffmpeg",
            "homeassistant.components.foursquare",
            "homeassistant.components.frontend",
            "homeassistant.components.frontend.version",
            "homeassistant.components.google",
            "homeassistant.components.graphite",
            "homeassistant.components.group",
            "homeassistant.components.hassio",
            "homeassistant.components.hdmi_cec",
            "homeassistant.components.history",
            "homeassistant.components.homematic",
            "homeassistant.components.http",
            "homeassistant.components.http.auth",
            "homeassistant.components.http.ban",
            "homeassistant.components.http.const",
            "homeassistant.components.http.static",
            "homeassistant.components.http.util",
            "homeassistant.components.ifttt",
            "homeassistant.components.image_processing",
            "homeassistant.components.image_processing.demo",
            "homeassistant.components.image_processing.dlib_face_detect",
            "homeassistant.components.image_processing.dlib_face_identify",
            "homeassistant.components.image_processing.microsoft_face_detect",
            "homeassistant.components.image_processing.microsoft_face_identify",
            "homeassistant.components.image_processing.openalpr_cloud",
            "homeassistant.components.image_processing.openalpr_local",
            "homeassistant.components.image_processing.opencv",
            "homeassistant.components.influxdb",
            "homeassistant.components.input_boolean",
            "homeassistant.components.input_select",
            "homeassistant.components.input_slider",
            "homeassistant.components.insteon_hub",
            "homeassistant.components.insteon_local",
            "homeassistant.components.insteon_plm",
            "homeassistant.components.introduction",
            "homeassistant.components.ios",
            "homeassistant.components.isy994",
            "homeassistant.components.joaoapps_join",
            "homeassistant.components.keyboard",
            "homeassistant.components.keyboard_remote",
            "homeassistant.components.knx",
            "homeassistant.components.light",
            "homeassistant.components.light.avion",
            "homeassistant.components.light.blinksticklight",
            "homeassistant.components.light.blinkt",
            "homeassistant.components.light.decora",
            "homeassistant.components.light.demo",
            "homeassistant.components.light.enocean",
            "homeassistant.components.light.flux_led",
            "homeassistant.components.light.homematic",
            "homeassistant.components.light.hue",
            "homeassistant.components.light.hyperion",
            "homeassistant.components.light.insteon_hub",
            "homeassistant.components.light.insteon_local",
            "homeassistant.components.light.insteon_plm",
            "homeassistant.components.light.isy994",
            "homeassistant.components.light.knx",
            "homeassistant.components.light.lifx",
            "homeassistant.components.light.lifx.effects",
            "homeassistant.components.light.lifx_legacy",
            "homeassistant.components.light.limitlessled",
            "homeassistant.components.light.litejet",
            "homeassistant.components.light.lutron",
            "homeassistant.components.light.lutron_caseta",
            "homeassistant.components.light.mqtt",
            "homeassistant.components.light.mqtt_json",
            "homeassistant.components.light.mqtt_template",
            "homeassistant.components.light.mysensors",
            "homeassistant.components.light.mystrom",
            "homeassistant.components.light.osramlightify",
            "homeassistant.components.light.piglow",
            "homeassistant.components.light.qwikswitch",
            "homeassistant.components.light.rflink",
            "homeassistant.components.light.rfxtrx",
            "homeassistant.components.light.rpi_gpio_pwm",
            "homeassistant.components.light.scsgate",
            "homeassistant.components.light.sensehat",
            "homeassistant.components.light.tellduslive",
            "homeassistant.components.light.tellstick",
            "homeassistant.components.light.tikteck",
            "homeassistant.components.light.tradfri",
            "homeassistant.components.light.vera",
            "homeassistant.components.light.wemo",
            "homeassistant.components.light.wink",
            "homeassistant.components.light.x10",
            "homeassistant.components.light.yeelight",
            "homeassistant.components.light.yeelightsunflower",
            "homeassistant.components.light.zengge",
            "homeassistant.components.light.zha",
            "homeassistant.components.light.zigbee",
            "homeassistant.components.light.zwave",
            "homeassistant.components.lirc",
            "homeassistant.components.litejet",
            "homeassistant.components.lock",
            "homeassistant.components.lock.demo",
            "homeassistant.components.lock.isy994",
            "homeassistant.components.lock.lockitron",
            "homeassistant.components.lock.mqtt",
            "homeassistant.components.lock.nuki",
            "homeassistant.components.lock.vera",
            "homeassistant.components.lock.verisure",
            "homeassistant.components.lock.volvooncall",
            "homeassistant.components.lock.wink",
            "homeassistant.components.lock.zwave",
            "homeassistant.components.logbook",
            "homeassistant.components.logentries",
            "homeassistant.components.logger",
            "homeassistant.components.lutron",
            "homeassistant.components.lutron_caseta",
            "homeassistant.components.maxcube",
            "homeassistant.components.media_player",
            "homeassistant.components.media_player.anthemav",
            "homeassistant.components.media_player.apple_tv",
            "homeassistant.components.media_player.aquostv",
            "homeassistant.components.media_player.braviatv",
            "homeassistant.components.media_player.cast",
            "homeassistant.components.media_player.clementine",
            "homeassistant.components.media_player.cmus",
            "homeassistant.components.media_player.demo",
            "homeassistant.components.media_player.denon",
            "homeassistant.components.media_player.denonavr",
            "homeassistant.components.media_player.directv",
            "homeassistant.components.media_player.dunehd",
            "homeassistant.components.media_player.emby",
            "homeassistant.components.media_player.firetv",
            "homeassistant.components.media_player.frontier_silicon",
            "homeassistant.components.media_player.gpmdp",
            "homeassistant.components.media_player.gstreamer",
            "homeassistant.components.media_player.hdmi_cec",
            "homeassistant.components.media_player.itunes",
            "homeassistant.components.media_player.kodi",
            "homeassistant.components.media_player.lg_netcast",
            "homeassistant.components.media_player.liveboxplaytv",
            "homeassistant.components.media_player.mpchc",
            "homeassistant.components.media_player.mpd",
            "homeassistant.components.media_player.nad",
            "homeassistant.components.media_player.onkyo",
            "homeassistant.components.media_player.openhome",
            "homeassistant.components.media_player.panasonic_viera",
            "homeassistant.components.media_player.pandora",
            "homeassistant.components.media_player.philips_js",
            "homeassistant.components.media_player.pioneer",
            "homeassistant.components.media_player.plex",
            "homeassistant.components.media_player.roku",
            "homeassistant.components.media_player.russound_rnet",
            "homeassistant.components.media_player.samsungtv",
            "homeassistant.components.media_player.snapcast",
            "homeassistant.components.media_player.sonos",
            "homeassistant.components.media_player.soundtouch",
            "homeassistant.components.media_player.spotify",
            "homeassistant.components.media_player.squeezebox",
            "homeassistant.components.media_player.universal",
            "homeassistant.components.media_player.vlc",
            "homeassistant.components.media_player.volumio",
            "homeassistant.components.media_player.webostv",
            "homeassistant.components.media_player.yamaha",
            "homeassistant.components.microsoft_face",
            "homeassistant.components.mochad",
            "homeassistant.components.modbus",
            "homeassistant.components.mqtt",
            "homeassistant.components.mqtt.discovery",
            "homeassistant.components.mqtt.server",
            "homeassistant.components.mqtt_eventstream",
            "homeassistant.components.mysensors",
            "homeassistant.components.neato",
            "homeassistant.components.nest",
            "homeassistant.components.netatmo",
            "homeassistant.components.notify",
            "homeassistant.components.notify.apns",
            "homeassistant.components.notify.aws_lambda",
            "homeassistant.components.notify.aws_sns",
            "homeassistant.components.notify.aws_sqs",
            "homeassistant.components.notify.ciscospark",
            "homeassistant.components.notify.command_line",
            "homeassistant.components.notify.demo",
            "homeassistant.components.notify.discord",
            "homeassistant.components.notify.ecobee",
            "homeassistant.components.notify.facebook",
            "homeassistant.components.notify.file",
            "homeassistant.components.notify.free_mobile",
            "homeassistant.components.notify.gntp",
            "homeassistant.components.notify.group",
            "homeassistant.components.notify.html5",
            "homeassistant.components.notify.instapush",
            "homeassistant.components.notify.ios",
            "homeassistant.components.notify.joaoapps_join",
            "homeassistant.components.notify.kodi",
            "homeassistant.components.notify.lannouncer",
            "homeassistant.components.notify.llamalab_automate",
            "homeassistant.components.notify.mailgun",
            "homeassistant.components.notify.matrix",
            "homeassistant.components.notify.message_bird",
            "homeassistant.components.notify.mysensors",
            "homeassistant.components.notify.nfandroidtv",
            "homeassistant.components.notify.nma",
            "homeassistant.components.notify.pushbullet",
            "homeassistant.components.notify.pushetta",
            "homeassistant.components.notify.pushover",
            "homeassistant.components.notify.pushsafer",
            "homeassistant.components.notify.rest",
            "homeassistant.components.notify.sendgrid",
            "homeassistant.components.notify.simplepush",
            "homeassistant.components.notify.slack",
            "homeassistant.components.notify.smtp",
            "homeassistant.components.notify.syslog",
            "homeassistant.components.notify.telegram",
            "homeassistant.components.notify.telstra",
            "homeassistant.components.notify.twilio_call",
            "homeassistant.components.notify.twilio_sms",
            "homeassistant.components.notify.twitter",
            "homeassistant.components.notify.webostv",
            "homeassistant.components.notify.xmpp",
            "homeassistant.components.nuimo_controller",
            "homeassistant.components.octoprint",
            "homeassistant.components.opencv",
            "homeassistant.components.panel_custom",
            "homeassistant.components.panel_iframe",
            "homeassistant.components.persistent_notification",
            "homeassistant.components.pilight",
            "homeassistant.components.plant",
            "homeassistant.components.proximity",
            "homeassistant.components.qwikswitch",
            "homeassistant.components.recorder",
            "homeassistant.components.recorder.const",
            "homeassistant.components.recorder.migration",
            "homeassistant.components.recorder.models",
            "homeassistant.components.recorder.purge",
            "homeassistant.components.recorder.util",
            "homeassistant.components.remote",
            "homeassistant.components.remote.demo",
            "homeassistant.components.remote.harmony",
            "homeassistant.components.remote.itach",
            "homeassistant.components.rest_command",
            "homeassistant.components.rflink",
            "homeassistant.components.rfxtrx",
            "homeassistant.components.ring",
            "homeassistant.components.rpi_gpio",
            "homeassistant.components.rss_feed_template",
            "homeassistant.components.scene",
            "homeassistant.components.scene.homeassistant",
            "homeassistant.components.scene.hunterdouglas_powerview",
            "homeassistant.components.scene.lifx_cloud",
            "homeassistant.components.scene.litejet",
            "homeassistant.components.scene.wink",
            "homeassistant.components.script",
            "homeassistant.components.scsgate",
            "homeassistant.components.sensor",
            "homeassistant.components.sensor.alarmdecoder",
            "homeassistant.components.sensor.amcrest",
            "homeassistant.components.sensor.android_ip_webcam",
            "homeassistant.components.sensor.apcupsd",
            "homeassistant.components.sensor.api_streams",
            "homeassistant.components.sensor.arduino",
            "homeassistant.components.sensor.arest",
            "homeassistant.components.sensor.arwn",
            "homeassistant.components.sensor.bbox",
            "homeassistant.components.sensor.bitcoin",
            "homeassistant.components.sensor.blink",
            "homeassistant.components.sensor.bloomsky",
            "homeassistant.components.sensor.bom",
            "homeassistant.components.sensor.broadlink",
            "homeassistant.components.sensor.cert_expiry",
            "homeassistant.components.sensor.coinmarketcap",
            "homeassistant.components.sensor.comed_hourly_pricing",
            "homeassistant.components.sensor.command_line",
            "homeassistant.components.sensor.cpuspeed",
            "homeassistant.components.sensor.crimereports",
            "homeassistant.components.sensor.cups",
            "homeassistant.components.sensor.currencylayer",
            "homeassistant.components.sensor.darksky",
            "homeassistant.components.sensor.demo",
            "homeassistant.components.sensor.deutsche_bahn",
            "homeassistant.components.sensor.dht",
            "homeassistant.components.sensor.dnsip",
            "homeassistant.components.sensor.dovado",
            "homeassistant.components.sensor.dsmr",
            "homeassistant.components.sensor.dte_energy_bridge",
            "homeassistant.components.sensor.dublin_bus_transport",
            "homeassistant.components.sensor.dweet",
            "homeassistant.components.sensor.ebox",
            "homeassistant.components.sensor.ecobee",
            "homeassistant.components.sensor.eddystone_temperature",
            "homeassistant.components.sensor.efergy",
            "homeassistant.components.sensor.eight_sleep",
            "homeassistant.components.sensor.eliqonline",
            "homeassistant.components.sensor.emoncms",
            "homeassistant.components.sensor.enocean",
            "homeassistant.components.sensor.envirophat",
            "homeassistant.components.sensor.envisalink",
            "homeassistant.components.sensor.fastdotcom",
            "homeassistant.components.sensor.fedex",
            "homeassistant.components.sensor.fido",
            "homeassistant.components.sensor.fitbit",
            "homeassistant.components.sensor.fixer",
            "homeassistant.components.sensor.fritzbox_callmonitor",
            "homeassistant.components.sensor.fritzbox_netmonitor",
            "homeassistant.components.sensor.glances",
            "homeassistant.components.sensor.google_travel_time",
            "homeassistant.components.sensor.gpsd",
            "homeassistant.components.sensor.gtfs",
            "homeassistant.components.sensor.haveibeenpwned",
            "homeassistant.components.sensor.hddtemp",
            "homeassistant.components.sensor.history_stats",
            "homeassistant.components.sensor.homematic",
            "homeassistant.components.sensor.hp_ilo",
            "homeassistant.components.sensor.hydroquebec",
            "homeassistant.components.sensor.imap",
            "homeassistant.components.sensor.imap_email_content",
            "homeassistant.components.sensor.influxdb",
            "homeassistant.components.sensor.ios",
            "homeassistant.components.sensor.isy994",
            "homeassistant.components.sensor.knx",
            "homeassistant.components.sensor.kwb",
            "homeassistant.components.sensor.lastfm",
            "homeassistant.components.sensor.linux_battery",
            "homeassistant.components.sensor.loopenergy",
            "homeassistant.components.sensor.lyft",
            "homeassistant.components.sensor.metoffice",
            "homeassistant.components.sensor.mfi",
            "homeassistant.components.sensor.mhz19",
            "homeassistant.components.sensor.miflora",
            "homeassistant.components.sensor.min_max",
            "homeassistant.components.sensor.modbus",
            "homeassistant.components.sensor.modem_callerid",
            "homeassistant.components.sensor.mold_indicator",
            "homeassistant.components.sensor.moon",
            "homeassistant.components.sensor.mqtt",
            "homeassistant.components.sensor.mqtt_room",
            "homeassistant.components.sensor.mvglive",
            "homeassistant.components.sensor.mysensors",
            "homeassistant.components.sensor.neato",
            "homeassistant.components.sensor.nest",
            "homeassistant.components.sensor.netatmo",
            "homeassistant.components.sensor.netdata",
            "homeassistant.components.sensor.neurio_energy",
            "homeassistant.components.sensor.nut",
            "homeassistant.components.sensor.nzbget",
            "homeassistant.components.sensor.octoprint",
            "homeassistant.components.sensor.ohmconnect",
            "homeassistant.components.sensor.onewire",
            "homeassistant.components.sensor.openevse",
            "homeassistant.components.sensor.openexchangerates",
            "homeassistant.components.sensor.opensky",
            "homeassistant.components.sensor.openweathermap",
            "homeassistant.components.sensor.pi_hole",
            "homeassistant.components.sensor.pilight",
            "homeassistant.components.sensor.plex",
            "homeassistant.components.sensor.pocketcasts",
            "homeassistant.components.sensor.pushbullet",
            "homeassistant.components.sensor.pvoutput",
            "homeassistant.components.sensor.qnap",
            "homeassistant.components.sensor.random",
            "homeassistant.components.sensor.rest",
            "homeassistant.components.sensor.rflink",
            "homeassistant.components.sensor.rfxtrx",
            "homeassistant.components.sensor.ring",
            "homeassistant.components.sensor.sabnzbd",
            "homeassistant.components.sensor.scrape",
            "homeassistant.components.sensor.sensehat",
            "homeassistant.components.sensor.serial_pm",
            "homeassistant.components.sensor.skybeacon",
            "homeassistant.components.sensor.sleepiq",
            "homeassistant.components.sensor.sma",
            "homeassistant.components.sensor.snmp",
            "homeassistant.components.sensor.sonarr",
            "homeassistant.components.sensor.speedtest",
            "homeassistant.components.sensor.statistics",
            "homeassistant.components.sensor.steam_online",
            "homeassistant.components.sensor.supervisord",
            "homeassistant.components.sensor.swiss_hydrological_data",
            "homeassistant.components.sensor.swiss_public_transport",
            "homeassistant.components.sensor.synologydsm",
            "homeassistant.components.sensor.systemmonitor",
            "homeassistant.components.sensor.tado",
            "homeassistant.components.sensor.tcp",
            "homeassistant.components.sensor.ted5000",
            "homeassistant.components.sensor.tellduslive",
            "homeassistant.components.sensor.tellstick",
            "homeassistant.components.sensor.temper",
            "homeassistant.components.sensor.template",
            "homeassistant.components.sensor.thinkingcleaner",
            "homeassistant.components.sensor.time_date",
            "homeassistant.components.sensor.torque",
            "homeassistant.components.sensor.transmission",
            "homeassistant.components.sensor.twitch",
            "homeassistant.components.sensor.uber",
            "homeassistant.components.sensor.ups",
            "homeassistant.components.sensor.usps",
            "homeassistant.components.sensor.vasttrafik",
            "homeassistant.components.sensor.vera",
            "homeassistant.components.sensor.verisure",
            "homeassistant.components.sensor.volvooncall",
            "homeassistant.components.sensor.waqi",
            "homeassistant.components.sensor.wink",
            "homeassistant.components.sensor.worldclock",
            "homeassistant.components.sensor.wsdot",
            "homeassistant.components.sensor.wunderground",
            "homeassistant.components.sensor.xbox_live",
            "homeassistant.components.sensor.yahoo_finance",
            "homeassistant.components.sensor.yr",
            "homeassistant.components.sensor.yweather",
            "homeassistant.components.sensor.zabbix",
            "homeassistant.components.sensor.zamg",
            "homeassistant.components.sensor.zha",
            "homeassistant.components.sensor.zigbee",
            "homeassistant.components.sensor.zoneminder",
            "homeassistant.components.sensor.zwave",
            "homeassistant.components.shell_command",
            "homeassistant.components.sleepiq",
            "homeassistant.components.splunk",
            "homeassistant.components.statsd",
            "homeassistant.components.sun",
            "homeassistant.components.switch",
            "homeassistant.components.switch.acer_projector",
            "homeassistant.components.switch.android_ip_webcam",
            "homeassistant.components.switch.anel_pwrctrl",
            "homeassistant.components.switch.arduino",
            "homeassistant.components.switch.arest",
            "homeassistant.components.switch.bbb_gpio",
            "homeassistant.components.switch.broadlink",
            "homeassistant.components.switch.command_line",
            "homeassistant.components.switch.demo",
            "homeassistant.components.switch.digital_ocean",
            "homeassistant.components.switch.digitalloggers",
            "homeassistant.components.switch.dlink",
            "homeassistant.components.switch.edimax",
            "homeassistant.components.switch.enocean",
            "homeassistant.components.switch.flux",
            "homeassistant.components.switch.fritzdect",
            "homeassistant.components.switch.hdmi_cec",
            "homeassistant.components.switch.hikvisioncam",
            "homeassistant.components.switch.homematic",
            "homeassistant.components.switch.hook",
            "homeassistant.components.switch.insteon_local",
            "homeassistant.components.switch.insteon_plm",
            "homeassistant.components.switch.isy994",
            "homeassistant.components.switch.kankun",
            "homeassistant.components.switch.knx",
            "homeassistant.components.switch.litejet",
            "homeassistant.components.switch.lutron_caseta",
            "homeassistant.components.switch.mfi",
            "homeassistant.components.switch.mochad",
            "homeassistant.components.switch.modbus",
            "homeassistant.components.switch.mqtt",
            "homeassistant.components.switch.mysensors",
            "homeassistant.components.switch.mystrom",
            "homeassistant.components.switch.neato",
            "homeassistant.components.switch.netio",
            "homeassistant.components.switch.orvibo",
            "homeassistant.components.switch.pilight",
            "homeassistant.components.switch.pulseaudio_loopback",
            "homeassistant.components.switch.qwikswitch",
            "homeassistant.components.switch.rest",
            "homeassistant.components.switch.rflink",
            "homeassistant.components.switch.rfxtrx",
            "homeassistant.components.switch.rpi_gpio",
            "homeassistant.components.switch.rpi_rf",
            "homeassistant.components.switch.scsgate",
            "homeassistant.components.switch.tellduslive",
            "homeassistant.components.switch.tellstick",
            "homeassistant.components.switch.template",
            "homeassistant.components.switch.thinkingcleaner",
            "homeassistant.components.switch.tplink",
            "homeassistant.components.switch.transmission",
            "homeassistant.components.switch.vera",
            "homeassistant.components.switch.verisure",
            "homeassistant.components.switch.volvooncall",
            "homeassistant.components.switch.wake_on_lan",
            "homeassistant.components.switch.wemo",
            "homeassistant.components.switch.wink",
            "homeassistant.components.switch.zha",
            "homeassistant.components.switch.zigbee",
            "homeassistant.components.switch.zoneminder",
            "homeassistant.components.switch.zwave",
            "homeassistant.components.tado",
            "homeassistant.components.telegram_bot",
            "homeassistant.components.telegram_bot.polling",
            "homeassistant.components.telegram_bot.webhooks",
            "homeassistant.components.tellduslive",
            "homeassistant.components.tellstick",
            "homeassistant.components.thingspeak",
            "homeassistant.components.tradfri",
            "homeassistant.components.tts",
            "homeassistant.components.tts.amazon_polly",
            "homeassistant.components.tts.demo",
            "homeassistant.components.tts.google",
            "homeassistant.components.tts.marytts",
            "homeassistant.components.tts.picotts",
            "homeassistant.components.tts.voicerss",
            "homeassistant.components.tts.yandextts",
            "homeassistant.components.twilio",
            "homeassistant.components.updater",
            "homeassistant.components.upnp",
            "homeassistant.components.vera",
            "homeassistant.components.verisure",
            "homeassistant.components.volvooncall",
            "homeassistant.components.weather",
            "homeassistant.components.weather.bom",
            "homeassistant.components.weather.demo",
            "homeassistant.components.weather.metoffice",
            "homeassistant.components.weather.openweathermap",
            "homeassistant.components.weather.zamg",
            "homeassistant.components.weblink",
            "homeassistant.components.websocket_api",
            "homeassistant.components.wemo",
            "homeassistant.components.wink",
            "homeassistant.components.zabbix",
            "homeassistant.components.zeroconf",
            "homeassistant.components.zha",
            "homeassistant.components.zha.const",
            "homeassistant.components.zigbee",
            "homeassistant.components.zone",
            "homeassistant.components.zoneminder",
            "homeassistant.components.zwave",
            "homeassistant.components.zwave.const",
            "homeassistant.components.zwave.discovery_schemas",
            "homeassistant.components.zwave.node_entity",
            "homeassistant.components.zwave.util",
            "homeassistant.components.zwave.workaround",
            "homeassistant.config",
            "homeassistant.const",
            "homeassistant.core",
            "homeassistant.exceptions",
            "homeassistant.helpers",
            "homeassistant.helpers.aiohttp_client",
            "homeassistant.helpers.condition",
            "homeassistant.helpers.config_validation",
            "homeassistant.helpers.deprecation",
            "homeassistant.helpers.discovery",
            "homeassistant.helpers.dispatcher",
            "homeassistant.helpers.entity",
            "homeassistant.helpers.entity_component",
            "homeassistant.helpers.entity_values",
            "homeassistant.helpers.event",
            "homeassistant.helpers.location",
            "homeassistant.helpers.restore_state",
            "homeassistant.helpers.script",
            "homeassistant.helpers.service",
            "homeassistant.helpers.signal",
            "homeassistant.helpers.state",
            "homeassistant.helpers.template",
            "homeassistant.helpers.typing",
            "homeassistant.loader",
            "homeassistant.remote",
            "homeassistant.scripts",
            "homeassistant.scripts.check_config",
            "homeassistant.scripts.db_migrator",
            "homeassistant.scripts.ensure_config",
            "homeassistant.scripts.influxdb_import",
            "homeassistant.scripts.influxdb_migrator",
            "homeassistant.scripts.keyring",
            "homeassistant.scripts.macos",
            "homeassistant.setup",
            "homeassistant.util",
            "homeassistant.util.async",
            "homeassistant.util.color",
            "homeassistant.util.distance",
            "homeassistant.util.dt",
            "homeassistant.util.location",
            "homeassistant.util.logging",
            "homeassistant.util.package",
            "homeassistant.util.temperature",
            "homeassistant.util.unit_system",
            "homeassistant.util.yaml"
        ],
        "version": "0.44.1"
    },
    "homebrew": {
        "cmdline": [],
        "modules": [
            "homebrew",
            "homebrew.command_line",
            "homebrew.homebrew",
            "homebrew.logger"
        ],
        "version": "0.0.19"
    },
    "homebrew-pypi-poet": {
        "cmdline": [],
        "modules": [
            "poet",
            "poet.lint",
            "poet.poet",
            "poet.templates",
            "poet.util",
            "poet.version"
        ],
        "version": "0.9.0"
    },
    "homecon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "homefiles": {
        "cmdline": [],
        "modules": [
            "homefiles",
            "homefiles.git",
            "homefiles.main",
            "homefiles.utils",
            "homefiles.version",
            "tests",
            "tests.unit",
            "tests.unit.test_utils"
        ],
        "version": "2.0.6"
    },
    "homegate": {
        "cmdline": [],
        "modules": [
            "homegate",
            "homegate.homegate"
        ],
        "version": "0.0.2"
    },
    "homekeeper": {
        "cmdline": [],
        "modules": [
            "homekeeper",
            "homekeeper.config",
            "homekeeper.config_test",
            "homekeeper.test",
            "homekeeper.testing",
            "homekeeper.util",
            "homekeeper.util_test"
        ],
        "version": "3.2.0"
    },
    "homely": {
        "cmdline": [],
        "modules": [
            "homely",
            "homely._asyncioutils",
            "homely._cli",
            "homely._engine2",
            "homely._errors",
            "homely._ui",
            "homely._utils",
            "homely._vcs",
            "homely._vcs.git",
            "homely._vcs.testhandler",
            "homely.files",
            "homely.general",
            "homely.install",
            "homely.pipinstall",
            "homely.powerline",
            "homely.system",
            "homely.ui"
        ],
        "version": "0.15.2"
    },
    "homematicip": {
        "cmdline": [],
        "modules": [
            "homematicip",
            "homematicip.HomeMaticIPObject",
            "homematicip.auth",
            "homematicip.device",
            "homematicip.group",
            "homematicip.home",
            "homematicip.securityEvent"
        ],
        "version": "0.5.1"
    },
    "homepdu": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "homer": {
        "cmdline": [],
        "modules": [
            "homer",
            "homer.homer"
        ],
        "version": "0.0.1"
    },
    "homevent": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "homewatcher": {
        "cmdline": [
            "hwconf.py",
            "hwdaemon.py",
            "hwresolve.py",
            "hwversion.py"
        ],
        "modules": [
            "homewatcher",
            "homewatcher.alarm",
            "homewatcher.configuration",
            "homewatcher.configurator",
            "homewatcher.contexthandlers",
            "homewatcher.ensurepyknx",
            "homewatcher.linknxuserfile",
            "homewatcher.plugin",
            "homewatcher.plugins",
            "homewatcher.plugins.coreplugin",
            "homewatcher.sensor",
            "homewatcher.timer"
        ],
        "version": "1.2.1"
    },
    "homework": {
        "cmdline": [],
        "modules": [
            "homework"
        ],
        "version": "0.1.0"
    },
    "homework-cli": {
        "cmdline": [],
        "modules": [
            "cli",
            "cli.action",
            "cli.action.Action",
            "cli.config",
            "cli.driver",
            "cli.utils"
        ],
        "version": "0.1"
    },
    "homework-qingcloud-cli": {
        "cmdline": [],
        "modules": [
            "cli",
            "cli.action",
            "cli.action.Action",
            "cli.config",
            "cli.driver",
            "cli.utils"
        ],
        "version": "1.1"
    },
    "homie": {
        "cmdline": [],
        "modules": [
            "homie",
            "homie.main",
            "homie.mqtt",
            "homie.node",
            "homie.timer"
        ],
        "version": "0.2.1"
    },
    "homogenpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "homophony": {
        "cmdline": [],
        "modules": [
            "homophony"
        ],
        "version": "0.1.7.1"
    },
    "homu": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "homunculus": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "homunculus-cli": {
        "cmdline": [],
        "modules": [
            "homunculus_cli"
        ],
        "version": "0.9"
    },
    "homunculus-instancetools": {
        "cmdline": [],
        "modules": [
            "homunculus_config",
            "homunculus_instancetools"
        ],
        "version": "0.0.4"
    },
    "homunculus-server": {
        "cmdline": [],
        "modules": [
            "homunculus_server",
            "homunculus_server.controller",
            "homunculus_server.handlers",
            "homunculus_server.handlers.apache",
            "homunculus_server.handlers.general",
            "homunculus_server.handlers.mediadir",
            "homunculus_server.handlers.memcached",
            "homunculus_server.handlers.mysql",
            "homunculus_server.handlers.sqlite",
            "homunculus_server.handlers.wsgi",
            "homunculus_server.helpers",
            "homunculus_server.model"
        ],
        "version": "0.2.0"
    },
    "homura": {
        "cmdline": [],
        "modules": [
            "homura"
        ],
        "version": "0.1.5"
    },
    "honcho": {
        "cmdline": [],
        "modules": [
            "honcho",
            "honcho.colour",
            "honcho.command",
            "honcho.compat",
            "honcho.environ",
            "honcho.export",
            "honcho.export.base",
            "honcho.export.runit",
            "honcho.export.supervisord",
            "honcho.export.upstart",
            "honcho.manager",
            "honcho.printer",
            "honcho.process"
        ],
        "version": "1.0.1"
    },
    "honcho-export-systemd": {
        "cmdline": [],
        "modules": [
            "honcho_export_systemd",
            "honcho_export_systemd.export_systemd"
        ],
        "version": "1.0.0"
    },
    "honey": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "honeybadger": {
        "cmdline": [],
        "modules": [
            "honeybadger",
            "honeybadger.config",
            "honeybadger.connection",
            "honeybadger.core",
            "honeybadger.middleware",
            "honeybadger.payload",
            "honeybadger.utils",
            "honeybadger.version"
        ],
        "version": "0.0.6"
    },
    "honeycomb": {
        "cmdline": [],
        "modules": [
            "honeycomb",
            "honeycomb.base",
            "honeycomb.cache",
            "honeycomb.hashs",
            "honeycomb.lists",
            "honeycomb.sets",
            "honeycomb.sortedset"
        ],
        "version": "0.2.3"
    },
    "honeymilk": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "honeywell-thermostat": {
        "cmdline": [],
        "modules": [
            "honeywell_thermostat",
            "honeywell_thermostat.main",
            "honeywell_thermostat.thermostat"
        ],
        "version": "1.5"
    },
    "hongzhen-nester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hook": {
        "cmdline": [],
        "modules": [
            "hook",
            "hook.model",
            "hook.parser",
            "hook.receiver"
        ],
        "version": "0.0.2"
    },
    "hookbox": {
        "cmdline": [],
        "modules": [
            "hookbox",
            "hookbox.admin",
            "hookbox.admin.admin",
            "hookbox.channel",
            "hookbox.config",
            "hookbox.errors",
            "hookbox.log",
            "hookbox.output_wrapper",
            "hookbox.protocol",
            "hookbox.rest",
            "hookbox.server",
            "hookbox.start",
            "hookbox.tests",
            "hookbox.tests.test_hookbox_config",
            "hookbox.user",
            "hookbox.version"
        ],
        "version": "0.3.3"
    },
    "hookbox-dax": {
        "cmdline": [],
        "modules": [
            "hookbox",
            "hookbox.admin",
            "hookbox.admin.admin",
            "hookbox.api",
            "hookbox.api.client",
            "hookbox.api.internal",
            "hookbox.api.web",
            "hookbox.channel",
            "hookbox.config",
            "hookbox.errors",
            "hookbox.log",
            "hookbox.output_wrapper",
            "hookbox.protocol",
            "hookbox.server",
            "hookbox.start",
            "hookbox.tests",
            "hookbox.tests.test_hookbox_config",
            "hookbox.user"
        ],
        "version": "0.3.4a1"
    },
    "hookd": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hooke": {
        "cmdline": [
            "hk.py"
        ],
        "modules": [
            "hooke",
            "hooke.command",
            "hooke.command_stack",
            "hooke.compat",
            "hooke.compat.odict",
            "hooke.config",
            "hooke.curve",
            "hooke.driver",
            "hooke.driver.csvdriver",
            "hooke.driver.hdf5",
            "hooke.driver.hemingway",
            "hooke.driver.jpk",
            "hooke.driver.mcs",
            "hooke.driver.mfp1d",
            "hooke.driver.mfp1dexport",
            "hooke.driver.mfp3d",
            "hooke.driver.picoforce",
            "hooke.driver.tutorial",
            "hooke.driver.wtk",
            "hooke.engine",
            "hooke.hooke",
            "hooke.interaction",
            "hooke.license",
            "hooke.playlist",
            "hooke.plugin",
            "hooke.plugin.autopeak",
            "hooke.plugin.command_stack",
            "hooke.plugin.config",
            "hooke.plugin.convfilt",
            "hooke.plugin.curve",
            "hooke.plugin.cut",
            "hooke.plugin.debug",
            "hooke.plugin.engine",
            "hooke.plugin.fclamp",
            "hooke.plugin.flatfilt",
            "hooke.plugin.jumpstat",
            "hooke.plugin.license",
            "hooke.plugin.massanalysis",
            "hooke.plugin.multidistance",
            "hooke.plugin.multifit",
            "hooke.plugin.note",
            "hooke.plugin.pcluster",
            "hooke.plugin.playlist",
            "hooke.plugin.playlists",
            "hooke.plugin.plotmanip",
            "hooke.plugin.polymer_fit",
            "hooke.plugin.review",
            "hooke.plugin.showconvoluted",
            "hooke.plugin.superimpose",
            "hooke.plugin.system",
            "hooke.plugin.tccd",
            "hooke.plugin.tutorial",
            "hooke.plugin.vclamp",
            "hooke.ui",
            "hooke.ui.commandline",
            "hooke.ui.gui",
            "hooke.ui.gui.dialog",
            "hooke.ui.gui.dialog.points",
            "hooke.ui.gui.dialog.save_file",
            "hooke.ui.gui.dialog.selection",
            "hooke.ui.gui.dialog.string",
            "hooke.ui.gui.dialog.text",
            "hooke.ui.gui.handler",
            "hooke.ui.gui.handler.boolean",
            "hooke.ui.gui.handler.float",
            "hooke.ui.gui.handler.selection",
            "hooke.ui.gui.handler.string",
            "hooke.ui.gui.interface",
            "hooke.ui.gui.menu",
            "hooke.ui.gui.navbar",
            "hooke.ui.gui.panel",
            "hooke.ui.gui.panel.commands",
            "hooke.ui.gui.panel.note",
            "hooke.ui.gui.panel.notebook",
            "hooke.ui.gui.panel.output",
            "hooke.ui.gui.panel.playlist",
            "hooke.ui.gui.panel.plot",
            "hooke.ui.gui.panel.propertyeditor",
            "hooke.ui.gui.panel.propertyeditor-propgrid",
            "hooke.ui.gui.panel.selection",
            "hooke.ui.gui.panel.welcome",
            "hooke.ui.gui.statusbar",
            "hooke.util",
            "hooke.util.calculus",
            "hooke.util.callback",
            "hooke.util.caller",
            "hooke.util.convert",
            "hooke.util.encoding",
            "hooke.util.fft",
            "hooke.util.fit",
            "hooke.util.graph",
            "hooke.util.igorbinarywave",
            "hooke.util.itertools",
            "hooke.util.peak",
            "hooke.util.pluggable",
            "hooke.util.quickhull",
            "hooke.util.si",
            "hooke.util.singleton",
            "hooke.util.util",
            "hooke.util.yaml"
        ],
        "version": "1.0.0.alpha (Ninken)"
    },
    "hooked": {
        "cmdline": [],
        "modules": [
            "hooked",
            "hooked.server"
        ],
        "version": "0.3"
    },
    "hookit": {
        "cmdline": [],
        "modules": [
            "hookit"
        ],
        "version": "0.9.1"
    },
    "hooklib": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.2"
    },
    "hookman": {
        "cmdline": [],
        "modules": [
            "hookman",
            "hookman.hookman",
            "hookman.hookman.args_manage",
            "hookman.hookman.settings",
            "hookman.hookman.webs",
            "hookman.hookman.webs.event_tasks",
            "hookman.hookman.webs.weblistener",
            "hookman.manage",
            "running_tests",
            "running_tests.test_config_setting",
            "running_tests.test_envents",
            "running_tests.test_run",
            "running_tests.test_run_and_stop",
            "web_tests",
            "web_tests.test_weblistener_basic",
            "web_tests.test_weblistener_events"
        ],
        "version": "0.1.2"
    },
    "hooks": {
        "cmdline": [],
        "modules": [
            "hooks",
            "hooks.commands",
            "hooks.githooks",
            "hooks.main"
        ],
        "version": "0.1.1"
    },
    "hookswitch": {
        "cmdline": [
            "hookswitch-example-controller",
            "hookswitch-nfq",
            "hookswitch-of13"
        ],
        "modules": [
            "hookswitch",
            "hookswitch.cli",
            "hookswitch.cli.example_controller",
            "hookswitch.cli.nfq",
            "hookswitch.cli.of13",
            "hookswitch.internal",
            "hookswitch.internal.common",
            "hookswitch.internal.nfq",
            "hookswitch.internal.zmqclient",
            "hookswitch.nfq",
            "hookswitch.openflow"
        ],
        "version": "0.0.2"
    },
    "hooktest": {
        "cmdline": [],
        "modules": [
            "HookTest",
            "HookTest.build",
            "HookTest.capitains_units",
            "HookTest.capitains_units.cts",
            "HookTest.cmd",
            "HookTest.test",
            "HookTest.units",
            "tests",
            "tests.test_build",
            "tests.test_finder",
            "tests.test_run",
            "tests.test_test",
            "tests.test_units"
        ],
        "version": "1.0.2"
    },
    "hooktools": {
        "cmdline": [],
        "modules": [
            "hooktools",
            "hooktools.version"
        ],
        "version": "0.1"
    },
    "hooktrigger": {
        "cmdline": [],
        "modules": [
            "hooktrigger",
            "hooktrigger.hooktrigger"
        ],
        "version": "0.1.3"
    },
    "hookworker": {
        "cmdline": [],
        "modules": [
            "HookWorker",
            "HookWorker.api",
            "HookWorker.cmd",
            "HookWorker.worker"
        ],
        "version": "0.0.6"
    },
    "hooky": {
        "cmdline": [],
        "modules": [
            "hooky"
        ],
        "version": "0.5.0"
    },
    "hoon": {
        "cmdline": [],
        "modules": [],
        "version": "0.6.0"
    },
    "hooover": {
        "cmdline": [],
        "modules": [
            "hooover",
            "hooover.exceptions",
            "hooover.handlers",
            "hooover.hooover_sample",
            "hooover.input",
            "hooover.session",
            "hooover.utils"
        ],
        "version": "0.0.1"
    },
    "hoover": {
        "cmdline": [],
        "modules": [
            "hoover",
            "hoover.exceptions",
            "hoover.handlers",
            "hoover.input",
            "hoover.session",
            "hoover.utils",
            "hoover.version"
        ],
        "version": "0.6.0"
    },
    "hop": {
        "cmdline": [],
        "modules": [
            "hop",
            "hop.builder",
            "hop.constants",
            "hop.helper",
            "hop.tags",
            "hop.tags.basic",
            "hop.tags.form",
            "hop.tags.table",
            "hop.utils"
        ],
        "version": "1.5.2"
    },
    "hopak": {
        "cmdline": [],
        "modules": [
            "hopak",
            "hopak.controllers",
            "hopak.ds",
            "hopak.ds.base",
            "hopak.ds.mongo",
            "hopak.exceptions",
            "hopak.fields",
            "hopak.forms",
            "hopak.loader",
            "hopak.models",
            "hopak.registry",
            "hopak.utils",
            "hopak.widgets"
        ],
        "version": "0.5.1"
    },
    "hopcroftkarp": {
        "cmdline": [],
        "modules": [
            "hopcroftkarp",
            "test",
            "test.test_hopcroftkarp"
        ],
        "version": "1.2.4"
    },
    "hope": {
        "cmdline": [],
        "modules": [
            "examples",
            "examples.hope_arrays",
            "examples.hope_calls",
            "examples.hope_class",
            "examples.hope_conditions",
            "examples.hope_datatypes",
            "examples.hope_loops",
            "examples.hope_numpy",
            "examples.hope_operators",
            "examples.hope_optimize",
            "hope",
            "hope._ast",
            "hope._cache",
            "hope._const",
            "hope._dump",
            "hope._generator",
            "hope._library",
            "hope._optimizer",
            "hope._tosource",
            "hope._transformer",
            "hope._wrapper",
            "hope.config",
            "hope.exceptions",
            "hope.exp",
            "hope.jit",
            "hope.options",
            "hope.serialization",
            "test",
            "test.test_Parser",
            "test.test_blocks",
            "test.test_call",
            "test.test_cast",
            "test.test_comparison",
            "test.test_control_structures",
            "test.test_dump",
            "test.test_functions",
            "test.test_jit",
            "test.test_object",
            "test.test_op_binary",
            "test.test_op_bool",
            "test.test_op_div",
            "test.test_op_minus",
            "test.test_op_mult",
            "test.test_op_plus",
            "test.test_op_pow",
            "test.test_operators",
            "test.test_optimize",
            "test.test_options",
            "test.test_pycosmo",
            "test.test_rangecheck",
            "test.test_return",
            "test.test_serialization",
            "test.test_slice",
            "test.test_slice_negative",
            "test.test_tosource",
            "test.test_ufig",
            "test.test_wrapper",
            "test.utilities"
        ],
        "version": "0.6.1"
    },
    "hope-of-ropes": {
        "cmdline": [],
        "modules": [
            "hope_of_ropes",
            "hope_of_ropes.elastic",
            "hope_of_ropes.enemy",
            "hope_of_ropes.light",
            "hope_of_ropes.light_simul",
            "hope_of_ropes.main_menu",
            "hope_of_ropes.music",
            "hope_of_ropes.number",
            "hope_of_ropes.platforms",
            "hope_of_ropes.player",
            "hope_of_ropes.rope",
            "hope_of_ropes.signals",
            "hope_of_ropes.tests",
            "hope_of_ropes.tests.test_documentation",
            "hope_of_ropes.tests.test_hope_of_ropes"
        ],
        "version": "0.2.8"
    },
    "hopfield": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hopla": {
        "cmdline": [],
        "modules": [
            "hopla",
            "hopla.converter",
            "hopla.info",
            "hopla.scheduler",
            "hopla.signals",
            "hopla.workers"
        ],
        "version": "1.0.1"
    },
    "hopper": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hoppmcmc": {
        "cmdline": [],
        "modules": [
            "hoppMCMC",
            "hoppMCMC/__init__"
        ],
        "version": "0.5"
    },
    "horae.app": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.app",
            "horae.app.app",
            "horae.app.tests",
            "horae.app.tests.test_horae",
            "horae.app.tests.tests"
        ],
        "version": "1.0a1"
    },
    "horae.attachments": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.attachments",
            "horae.attachments.attachments",
            "horae.attachments.extenders",
            "horae.attachments.interfaces",
            "horae.attachments.views"
        ],
        "version": "1.0a1"
    },
    "horae.auth": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.auth",
            "horae.auth.auth",
            "horae.auth.events",
            "horae.auth.interfaces",
            "horae.auth.permissions",
            "horae.auth.roles",
            "horae.auth.securitypolicy",
            "horae.auth.utils",
            "horae.auth.viewlets",
            "horae.auth.views",
            "horae.auth.vocabulary"
        ],
        "version": "1.0a1"
    },
    "horae.autocomplete": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.autocomplete",
            "horae.autocomplete.fields",
            "horae.autocomplete.interfaces",
            "horae.autocomplete.providers",
            "horae.autocomplete.resource",
            "horae.autocomplete.widgets"
        ],
        "version": "1.0a1"
    },
    "horae.cache": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.cache",
            "horae.cache.cache",
            "horae.cache.interfaces",
            "horae.cache.request",
            "horae.cache.vocabulary"
        ],
        "version": "1.0a1"
    },
    "horae.calendar": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.calendar",
            "horae.calendar.interfaces",
            "horae.calendar.resource",
            "horae.calendar.views"
        ],
        "version": "1.0a1"
    },
    "horae.core": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.core",
            "horae.core.configuration",
            "horae.core.container",
            "horae.core.currency",
            "horae.core.deferred",
            "horae.core.idmanager",
            "horae.core.interfaces",
            "horae.core.location",
            "horae.core.service",
            "horae.core.size",
            "horae.core.upgrade",
            "horae.core.utils",
            "horae.core.vocabulary"
        ],
        "version": "1.0a1"
    },
    "horae.dashboard": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.dashboard",
            "horae.dashboard.dashboard",
            "horae.dashboard.interfaces",
            "horae.dashboard.latest",
            "horae.dashboard.notification",
            "horae.dashboard.reports",
            "horae.dashboard.resource",
            "horae.dashboard.resources",
            "horae.dashboard.ticketing",
            "horae.dashboard.traversal",
            "horae.dashboard.viewlets",
            "horae.dashboard.views"
        ],
        "version": "1.0a1"
    },
    "horae.datetime": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.datetime",
            "horae.datetime.resource",
            "horae.datetime.widget"
        ],
        "version": "1.0a1"
    },
    "horae.groupselect": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.groupselect",
            "horae.groupselect.field",
            "horae.groupselect.interfaces",
            "horae.groupselect.widgets"
        ],
        "version": "1.0a1"
    },
    "horae.js.jqplot": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.js",
            "horae.js.jqplot",
            "horae.js.jqplot.resource"
        ],
        "version": "1.0.0b2"
    },
    "horae.layout": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.layout",
            "horae.layout.interfaces",
            "horae.layout.layout",
            "horae.layout.navigation",
            "horae.layout.objects",
            "horae.layout.resource",
            "horae.layout.soupselect",
            "horae.layout.table",
            "horae.layout.viewlets",
            "horae.layout.views",
            "horae.layout.widgets"
        ],
        "version": "1.0a1"
    },
    "horae.lifecycle": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.lifecycle",
            "horae.lifecycle.interfaces",
            "horae.lifecycle.latest",
            "horae.lifecycle.lifecycle",
            "horae.lifecycle.viewlets"
        ],
        "version": "1.0a1"
    },
    "horae.notification": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.notification",
            "horae.notification.interfaces",
            "horae.notification.notification",
            "horae.notification.resource",
            "horae.notification.subscription",
            "horae.notification.viewlets",
            "horae.notification.views"
        ],
        "version": "1.0a1"
    },
    "horae.planning": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.planning",
            "horae.planning.calculation",
            "horae.planning.calendaring",
            "horae.planning.catalog",
            "horae.planning.events",
            "horae.planning.execution",
            "horae.planning.extenders",
            "horae.planning.interfaces",
            "horae.planning.notification",
            "horae.planning.permissions",
            "horae.planning.planning",
            "horae.planning.properties",
            "horae.planning.resource",
            "horae.planning.upgrade",
            "horae.planning.viewlets",
            "horae.planning.views"
        ],
        "version": "1.0a1"
    },
    "horae.properties": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.properties",
            "horae.properties.configuration",
            "horae.properties.interfaces",
            "horae.properties.propertied",
            "horae.properties.properties",
            "horae.properties.views",
            "horae.properties.vocabulary",
            "horae.properties.widgets"
        ],
        "version": "1.0a1"
    },
    "horae.reports": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.reports",
            "horae.reports.interfaces",
            "horae.reports.reports",
            "horae.reports.traversal",
            "horae.reports.viewlets",
            "horae.reports.views",
            "horae.reports.vocabulary"
        ],
        "version": "1.0a1"
    },
    "horae.resources": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.resources",
            "horae.resources.extenders",
            "horae.resources.interfaces",
            "horae.resources.properties",
            "horae.resources.resources",
            "horae.resources.utils",
            "horae.resources.views",
            "horae.resources.vocabulary"
        ],
        "version": "1.0a1"
    },
    "horae.search": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.search",
            "horae.search.catalog",
            "horae.search.interfaces",
            "horae.search.properties",
            "horae.search.search",
            "horae.search.traversal",
            "horae.search.upgrade",
            "horae.search.utils",
            "horae.search.viewlets",
            "horae.search.vocabulary"
        ],
        "version": "1.0a1"
    },
    "horae.sphinx.grok": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.sphinx",
            "horae.sphinx.grok"
        ],
        "version": "1.0a1"
    },
    "horae.subscription": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.subscription",
            "horae.subscription.interfaces",
            "horae.subscription.permissions",
            "horae.subscription.subscription",
            "horae.subscription.viewlets"
        ],
        "version": "1.0a1"
    },
    "horae.ticketing": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.ticketing",
            "horae.ticketing.configuration",
            "horae.ticketing.events",
            "horae.ticketing.extenders",
            "horae.ticketing.interfaces",
            "horae.ticketing.properties",
            "horae.ticketing.ticketing",
            "horae.ticketing.user",
            "horae.ticketing.utils",
            "horae.ticketing.viewlets",
            "horae.ticketing.views",
            "horae.ticketing.vocabulary"
        ],
        "version": "1.0a1"
    },
    "horae.timeaware": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.timeaware",
            "horae.timeaware.interfaces",
            "horae.timeaware.tests",
            "horae.timeaware.timeaware",
            "horae.timeaware.vocabulary"
        ],
        "version": "1.0a1"
    },
    "horae.usersandgroups": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.usersandgroups",
            "horae.usersandgroups.group",
            "horae.usersandgroups.interfaces",
            "horae.usersandgroups.providers",
            "horae.usersandgroups.user",
            "horae.usersandgroups.views"
        ],
        "version": "1.0a1"
    },
    "horae.workflow": {
        "cmdline": [],
        "modules": [
            "horae",
            "horae.workflow",
            "horae.workflow.interfaces",
            "horae.workflow.properties",
            "horae.workflow.utils",
            "horae.workflow.views",
            "horae.workflow.vocabulary",
            "horae.workflow.workflow"
        ],
        "version": "1.0a1"
    },
    "horas": {
        "cmdline": [],
        "modules": [
            "horas",
            "horas.horas"
        ],
        "version": "0.0.1a4"
    },
    "horble-reports": {
        "cmdline": [],
        "modules": [
            "horble_reports",
            "horble_reports.horble_report"
        ],
        "version": "1.0.2"
    },
    "horde": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "horetu": {
        "cmdline": [],
        "modules": [
            "funmap",
            "horetu",
            "horetu.config",
            "horetu.exceptions",
            "horetu.input",
            "horetu.input._cli",
            "horetu.input._django",
            "horetu.input._wsgi",
            "horetu.input.lib",
            "horetu.lib",
            "horetu.output",
            "horetu.render",
            "horetu.render.argparse",
            "horetu.render.argparse.one",
            "horetu.render.argparse.options",
            "horetu.render.cli",
            "horetu.render.doc",
            "horetu.render.wsgi",
            "horetu.signature",
            "horetu.templates",
            "horetu.types",
            "horetu.util",
            "triedict",
            "triedict.test_"
        ],
        "version": "0.3.2"
    },
    "horizon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "horizon-api-mask": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1.post2"
    },
    "horizon-benchmark-dashboard": {
        "cmdline": [],
        "modules": [
            "benchmark_dashboard",
            "benchmark_dashboard.api",
            "benchmark_dashboard.api.db",
            "benchmark_dashboard.api.db.base",
            "benchmark_dashboard.api.db.deployments",
            "benchmark_dashboard.api.db.tasks",
            "benchmark_dashboard.api.loader",
            "benchmark_dashboard.dashboard",
            "benchmark_dashboard.deployments",
            "benchmark_dashboard.deployments.forms",
            "benchmark_dashboard.deployments.panel",
            "benchmark_dashboard.deployments.tables",
            "benchmark_dashboard.deployments.urls",
            "benchmark_dashboard.deployments.views",
            "benchmark_dashboard.models",
            "benchmark_dashboard.tasks",
            "benchmark_dashboard.tasks.forms",
            "benchmark_dashboard.tasks.panel",
            "benchmark_dashboard.tasks.tables",
            "benchmark_dashboard.tasks.urls",
            "benchmark_dashboard.tasks.utils",
            "benchmark_dashboard.tasks.views",
            "benchmark_dashboard.utils",
            "benchmark_dashboard.utils.async",
            "benchmark_dashboard.utils.rally",
            "benchmark_dashboard.utils.widgets"
        ],
        "version": "1.0.0"
    },
    "horizon-billing": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "horizon-bsn": {
        "cmdline": [],
        "modules": [],
        "version": "20153.37.4"
    },
    "horizon-cisco-ui": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "horizon-contrib": {
        "cmdline": [],
        "modules": [],
        "version": "2016.9.5"
    },
    "horizon-hpe-storage-ui": {
        "cmdline": [],
        "modules": [
            "horizon_hpe_storage",
            "horizon_hpe_storage.api",
            "horizon_hpe_storage.api.barbican_api",
            "horizon_hpe_storage.api.cinderClient",
            "horizon_hpe_storage.api.cinderClient.client",
            "horizon_hpe_storage.api.cinderClient.http",
            "horizon_hpe_storage.api.cinder_api",
            "horizon_hpe_storage.api.common",
            "horizon_hpe_storage.api.common.exceptions",
            "horizon_hpe_storage.api.common.http",
            "horizon_hpe_storage.api.hpSSMCclient",
            "horizon_hpe_storage.api.hpSSMCclient.client",
            "horizon_hpe_storage.api.hpSSMCclient.http",
            "horizon_hpe_storage.api.hp_ssmc_api",
            "horizon_hpe_storage.api.keystoneClient",
            "horizon_hpe_storage.api.keystoneClient.client",
            "horizon_hpe_storage.api.keystoneClient.http",
            "horizon_hpe_storage.api.keystone_api",
            "horizon_hpe_storage.overrides",
            "horizon_hpe_storage.storage_panel",
            "horizon_hpe_storage.storage_panel.config",
            "horizon_hpe_storage.storage_panel.config.forms",
            "horizon_hpe_storage.storage_panel.config.software_tests",
            "horizon_hpe_storage.storage_panel.config.software_tests.forms",
            "horizon_hpe_storage.storage_panel.config.software_tests.tables",
            "horizon_hpe_storage.storage_panel.config.software_tests.urls",
            "horizon_hpe_storage.storage_panel.config.software_tests.views",
            "horizon_hpe_storage.storage_panel.config.tables",
            "horizon_hpe_storage.storage_panel.config.urls",
            "horizon_hpe_storage.storage_panel.config.views",
            "horizon_hpe_storage.storage_panel.diags",
            "horizon_hpe_storage.storage_panel.diags.forms",
            "horizon_hpe_storage.storage_panel.diags.tables",
            "horizon_hpe_storage.storage_panel.diags.tabs",
            "horizon_hpe_storage.storage_panel.diags.test_results_tables",
            "horizon_hpe_storage.storage_panel.diags.urls",
            "horizon_hpe_storage.storage_panel.diags.views",
            "horizon_hpe_storage.storage_panel.lun_tool",
            "horizon_hpe_storage.storage_panel.lun_tool.diff_tables",
            "horizon_hpe_storage.storage_panel.lun_tool.forms",
            "horizon_hpe_storage.storage_panel.lun_tool.tables",
            "horizon_hpe_storage.storage_panel.lun_tool.tabs",
            "horizon_hpe_storage.storage_panel.lun_tool.urls",
            "horizon_hpe_storage.storage_panel.lun_tool.views",
            "horizon_hpe_storage.storage_panel.lun_tool.volume_path_tables",
            "horizon_hpe_storage.storage_panel.overview",
            "horizon_hpe_storage.storage_panel.overview.panel",
            "horizon_hpe_storage.storage_panel.overview.tables",
            "horizon_hpe_storage.storage_panel.overview.urls",
            "horizon_hpe_storage.storage_panel.overview.views",
            "horizon_hpe_storage.storage_panel.panel",
            "horizon_hpe_storage.storage_panel.storage_arrays",
            "horizon_hpe_storage.storage_panel.storage_arrays.capability_tables",
            "horizon_hpe_storage.storage_panel.storage_arrays.license_tables",
            "horizon_hpe_storage.storage_panel.storage_arrays.openstack_features_tables",
            "horizon_hpe_storage.storage_panel.storage_arrays.sched_stat_tables",
            "horizon_hpe_storage.storage_panel.storage_arrays.tables",
            "horizon_hpe_storage.storage_panel.storage_arrays.tabs",
            "horizon_hpe_storage.storage_panel.storage_arrays.urls",
            "horizon_hpe_storage.storage_panel.storage_arrays.views",
            "horizon_hpe_storage.storage_panel.tabs",
            "horizon_hpe_storage.storage_panel.urls",
            "horizon_hpe_storage.storage_panel.version",
            "horizon_hpe_storage.storage_panel.views",
            "horizon_hpe_storage.test_engine",
            "horizon_hpe_storage.test_engine.node_test"
        ],
        "version": "2.4.2"
    },
    "horizon-overrides-plugin": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "horizon-sensu-dashboard": {
        "cmdline": [],
        "modules": [
            "horizon_monitoring",
            "horizon_monitoring.aggregates",
            "horizon_monitoring.aggregates.panel",
            "horizon_monitoring.aggregates.tables",
            "horizon_monitoring.aggregates.urls",
            "horizon_monitoring.aggregates.views",
            "horizon_monitoring.api",
            "horizon_monitoring.api.base",
            "horizon_monitoring.api.kedb",
            "horizon_monitoring.api.sensu",
            "horizon_monitoring.checks",
            "horizon_monitoring.checks.forms",
            "horizon_monitoring.checks.panel",
            "horizon_monitoring.checks.tables",
            "horizon_monitoring.checks.urls",
            "horizon_monitoring.checks.views",
            "horizon_monitoring.clients",
            "horizon_monitoring.clients.panel",
            "horizon_monitoring.clients.tables",
            "horizon_monitoring.clients.urls",
            "horizon_monitoring.clients.views",
            "horizon_monitoring.dashboard",
            "horizon_monitoring.errors",
            "horizon_monitoring.errors.const",
            "horizon_monitoring.errors.forms",
            "horizon_monitoring.errors.panel",
            "horizon_monitoring.errors.tables",
            "horizon_monitoring.errors.urls",
            "horizon_monitoring.errors.views",
            "horizon_monitoring.events",
            "horizon_monitoring.events.forms",
            "horizon_monitoring.events.panel",
            "horizon_monitoring.events.tables",
            "horizon_monitoring.events.tabs",
            "horizon_monitoring.events.urls",
            "horizon_monitoring.events.views",
            "horizon_monitoring.info",
            "horizon_monitoring.info.panel",
            "horizon_monitoring.info.tables",
            "horizon_monitoring.info.urls",
            "horizon_monitoring.info.views",
            "horizon_monitoring.models",
            "horizon_monitoring.stashes",
            "horizon_monitoring.stashes.panel",
            "horizon_monitoring.stashes.tables",
            "horizon_monitoring.stashes.urls",
            "horizon_monitoring.stashes.views",
            "horizon_monitoring.templatetags",
            "horizon_monitoring.templatetags.math",
            "horizon_monitoring.templatetags.tables",
            "horizon_monitoring.templatetags.unit",
            "horizon_monitoring.utils",
            "horizon_monitoring.utils.actions",
            "horizon_monitoring.utils.settings",
            "horizon_monitoring.views",
            "horizon_monitoring.workarounds",
            "horizon_monitoring.workarounds.forms",
            "horizon_monitoring.workarounds.panel",
            "horizon_monitoring.workarounds.tables",
            "horizon_monitoring.workarounds.urls",
            "horizon_monitoring.workarounds.views"
        ],
        "version": "0.0.6"
    },
    "horizonjpl": {
        "cmdline": [],
        "modules": [
            "horizon",
            "horizon.config",
            "horizon.interface",
            "horizon.request_handler",
            "horizon.test",
            "horizon.test.test_horizon"
        ],
        "version": "0.1.7"
    },
    "horizont": {
        "cmdline": [],
        "modules": [
            "horizont",
            "horizont.lda",
            "horizont.metrics",
            "horizont.random",
            "horizont.tests",
            "horizont.tests.base",
            "horizont.tests.test_lda_ap",
            "horizont.tests.test_lda_strips",
            "horizont.tests.test_logistic_normal",
            "horizont.tests.test_metrics",
            "horizont.tests.test_polya_gamma",
            "horizont.tests.test_utils",
            "horizont.utils"
        ],
        "version": "0.0.5"
    },
    "horn": {
        "cmdline": [],
        "modules": [
            "horn"
        ],
        "version": "0.01"
    },
    "hornet": {
        "cmdline": [],
        "modules": [
            "hornet",
            "hornet.hornet",
            "hornet.nest",
            "hornet.tests",
            "hornet.tests.test_hornet"
        ],
        "version": "0.1.1"
    },
    "horntell": {
        "cmdline": [],
        "modules": [
            "horntell",
            "horntell.app",
            "horntell.campaign",
            "horntell.card",
            "horntell.errors",
            "horntell.event",
            "horntell.horn",
            "horntell.http",
            "horntell.http.client",
            "horntell.http.request",
            "horntell.http.response",
            "horntell.profile"
        ],
        "version": "0.3.0"
    },
    "horoscope": {
        "cmdline": [],
        "modules": [
            "horoscope",
            "horoscope.pyhoroscope",
            "horoscope.test"
        ],
        "version": "1.0.5"
    },
    "horoscopegenerator": {
        "cmdline": [],
        "modules": [
            "horoscope_generator",
            "horoscope_generator.HoroscopeGenerator"
        ],
        "version": "0.1.8"
    },
    "horror": {
        "cmdline": [],
        "modules": [
            "horror"
        ],
        "version": "0.1.0"
    },
    "horse": {
        "cmdline": [],
        "modules": [
            "horse",
            "horse.bridles",
            "horse.bridles.base",
            "horse.bridles.core",
            "horse.bridles.core.channels",
            "horse.bridles.core.help",
            "horse.bridles.core.uptime",
            "horse.bridles.examples",
            "horse.bridles.examples.persistence",
            "horse.bridles.examples.simple_command",
            "horse.bridles.examples.simple_event",
            "horse.bridles.examples.simple_listener",
            "horse.bridles.examples.simple_webhook",
            "horse.config",
            "horse.database",
            "horse.ext",
            "horse.jockey",
            "horse.models",
            "horse.servers",
            "horse.servers.http",
            "horse.servers.socket",
            "horse.slack",
            "horse.utils",
            "horse.utils.google",
            "horse.utils.google.url",
            "horse.utils.images2gif",
            "horse.utils.imgur"
        ],
        "version": "0.2.17"
    },
    "horse-forecastio": {
        "cmdline": [],
        "modules": [
            "horse_forecastio",
            "horse_forecastio.graphs"
        ],
        "version": "0.1.0"
    },
    "horse-google": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "horse-lastfm": {
        "cmdline": [],
        "modules": [
            "horse_lastfm",
            "horse_lastfm.bridles",
            "horse_lastfm.models"
        ],
        "version": "0.1.3"
    },
    "horse-nonsense": {
        "cmdline": [],
        "modules": [
            "horse_nonsense",
            "horse_nonsense.flashy",
            "horse_nonsense.gifs",
            "horse_nonsense.hodor"
        ],
        "version": "0.1.4"
    },
    "horsejax": {
        "cmdline": [],
        "modules": [
            "horsejax",
            "horsejax.api"
        ],
        "version": "0.1.2"
    },
    "horsemeat": {
        "cmdline": [
            "make-frippery-project"
        ],
        "modules": [
            "horsemeat",
            "horsemeat.configwrapper",
            "horsemeat.model",
            "horsemeat.model.newsmessage",
            "horsemeat.model.session",
            "horsemeat.model.user",
            "horsemeat.tests",
            "horsemeat.tests.test_configwrapper",
            "horsemeat.version",
            "horsemeat.webapp",
            "horsemeat.webapp.bogusrequest",
            "horsemeat.webapp.dispatcher",
            "horsemeat.webapp.framework_templates",
            "horsemeat.webapp.frameworkhandlers",
            "horsemeat.webapp.handler",
            "horsemeat.webapp.request",
            "horsemeat.webapp.response",
            "horsemeat.webapp.scrubber"
        ],
        "version": "2.12.14"
    },
    "horsephrase": {
        "cmdline": [],
        "modules": [
            "horsephrase",
            "horsephrase._guess_guess",
            "horsephrase._implementation"
        ],
        "version": "0.5.0"
    },
    "horseshit": {
        "cmdline": [],
        "modules": [
            "horseshit",
            "horseshit.main",
            "horseshit.version"
        ],
        "version": "0.0.5"
    },
    "horsetailmatching": {
        "cmdline": [],
        "modules": [
            "horsetailmatching"
        ],
        "version": "0.1"
    },
    "horton": {
        "cmdline": [],
        "modules": [
            "horton",
            "horton.conway",
            "horton.grid",
            "horton.render",
            "horton.render.pg"
        ],
        "version": "0.1.1"
    },
    "horus": {
        "cmdline": [],
        "modules": [
            "horus",
            "horus.events",
            "horus.exceptions",
            "horus.forms",
            "horus.horus_demo",
            "horus.httpexceptions",
            "horus.interfaces",
            "horus.lib",
            "horus.models",
            "horus.resources",
            "horus.routes",
            "horus.schemas",
            "horus.scripts",
            "horus.scripts.scaffold",
            "horus.strings",
            "horus.tests",
            "horus.tests.models",
            "horus.tests.schemas",
            "horus.tests.test_init",
            "horus.tests.test_integration",
            "horus.tests.test_interfaces",
            "horus.tests.test_models",
            "horus.tests.test_resources",
            "horus.tests.test_schemas",
            "horus.tests.test_views",
            "horus.views",
            "horus.views.admin"
        ],
        "version": "0.9.15"
    },
    "hose": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hospital": {
        "cmdline": [],
        "modules": [
            "hospital",
            "hospital.api",
            "hospital.assertions",
            "hospital.assertions.http",
            "hospital.assertions.networking",
            "hospital.assertions.packaging",
            "hospital.cli",
            "hospital.core",
            "hospital.healthchecks",
            "hospital.healthchecks.packaging",
            "hospital.healthchecks.predictable",
            "hospital.loading",
            "hospital.pytest_plugin",
            "hospital.utils",
            "hospital.utils.networking",
            "hospital.utils.packaging",
            "hospital.wsgi"
        ],
        "version": "0.9"
    },
    "host": {
        "cmdline": [],
        "modules": [
            "host"
        ],
        "version": "0.0.1"
    },
    "host-pool": {
        "cmdline": [],
        "modules": [
            "host_pool"
        ],
        "version": "0.2"
    },
    "host-profiler": {
        "cmdline": [
            "runbench"
        ],
        "modules": [
            "host_profiler",
            "host_profiler.bench",
            "host_profiler.benchproc"
        ],
        "version": "0.7"
    },
    "hostage": {
        "cmdline": [],
        "modules": [
            "hostage",
            "hostage.core",
            "hostage.evaluator",
            "hostage.evaluators",
            "hostage.evaluators.base",
            "hostage.evaluators.editor",
            "hostage.evaluators.git",
            "hostage.evaluators.github",
            "hostage.evaluators.gradle",
            "hostage.evaluators.http",
            "hostage.evaluators.playstore",
            "hostage.evaluators.slack",
            "hostage.handlers",
            "hostage.handlers.base"
        ],
        "version": "0.6.3"
    },
    "hostb-client": {
        "cmdline": [
            "hostb_client"
        ],
        "modules": [
            "hostb_client",
            "hostb_client.form",
            "hostb_client.utils"
        ],
        "version": "6"
    },
    "hostery": {
        "cmdline": [
            "hostery"
        ],
        "modules": [
            "hostery",
            "hostery.Connection",
            "hostery.git",
            "hostery.utils"
        ],
        "version": "0.1.4"
    },
    "hostexpand": {
        "cmdline": [],
        "modules": [
            "hostexpand",
            "hostexpand.HostExpander"
        ],
        "version": "1.0.2"
    },
    "hostinfo": {
        "cmdline": [
            "hostinfoserver.py"
        ],
        "modules": [
            "hostinfo",
            "hostinfo.Info",
            "hostinfo.qr_code",
            "hostinfo.version"
        ],
        "version": "0.5.1"
    },
    "hostlist": {
        "cmdline": [],
        "modules": [
            "hostlist",
            "hostlist.addhost",
            "hostlist.buildfiles",
            "hostlist.cnamelist",
            "hostlist.config",
            "hostlist.daemon",
            "hostlist.dnsvs",
            "hostlist.dnsvs.sync",
            "hostlist.host",
            "hostlist.hostlist",
            "hostlist.output_services"
        ],
        "version": "1.3.2"
    },
    "hostlists": {
        "cmdline": [],
        "modules": [
            "hostlists",
            "hostlists.decorators",
            "hostlists.hostlists",
            "hostlists.plugins",
            "hostlists.plugins.dns",
            "hostlists.plugins.dnsip",
            "hostlists.plugins.file",
            "hostlists.plugins.haproxy",
            "hostlists.plugins.plugintype",
            "hostlists.plugins.range"
        ],
        "version": "0.7.94"
    },
    "hostman": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hostout.centos": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hostout.cloud": {
        "cmdline": [],
        "modules": [
            "hostout",
            "hostout.cloud",
            "hostout.cloud.fabfile",
            "hostout.cloud.tests"
        ],
        "version": "1.0a5"
    },
    "hostout.overridedeploy": {
        "cmdline": [],
        "modules": [
            "hostout",
            "hostout.overridedeploy",
            "hostout.overridedeploy.fabfile"
        ],
        "version": "1.0.1"
    },
    "hostout.supervisor": {
        "cmdline": [],
        "modules": [
            "hostout",
            "hostout.supervisor",
            "hostout.supervisor.fabfile",
            "hostout.supervisor.tests"
        ],
        "version": "1.0a5"
    },
    "hostout.ubuntu": {
        "cmdline": [],
        "modules": [
            "hostout",
            "hostout.ubuntu",
            "hostout.ubuntu.fabfile",
            "hostout.ubuntu.tests"
        ],
        "version": "1.0a3"
    },
    "hostproof-auth": {
        "cmdline": [],
        "modules": [
            "hostproof_auth",
            "hostproof_auth.auth",
            "hostproof_auth.models",
            "hostproof_auth.urls",
            "hostproof_auth.utils",
            "hostproof_auth.views"
        ],
        "version": "0.1.1"
    },
    "hosts": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hostscli": {
        "cmdline": [],
        "modules": [
            "hostscli",
            "hostscli.cli",
            "hostscli.constants",
            "hostscli.errors",
            "hostscli.utils",
            "hostscli.websites",
            "hostscli.websites.cloudflare",
            "hostscli.websites.diply",
            "hostscli.websites.facebook",
            "hostscli.websites.google",
            "hostscli.websites.instagram",
            "hostscli.websites.linkedin",
            "hostscli.websites.list_ads",
            "hostscli.websites.list_malwares",
            "hostscli.websites.list_misc",
            "hostscli.websites.microsoft",
            "hostscli.websites.pintrest",
            "hostscli.websites.plus_google",
            "hostscli.websites.test",
            "hostscli.websites.twitter",
            "hostscli.websites.whatsapp",
            "hostscli.websites.youtube"
        ],
        "version": "1.1.2"
    },
    "hostsed": {
        "cmdline": [],
        "modules": [
            "hosts",
            "hosts.editor"
        ],
        "version": "0.1.3"
    },
    "hostsman": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hot": {
        "cmdline": [],
        "modules": [
            "hot",
            "hot.lint",
            "hot.shell",
            "hot.tests",
            "hot.tests.fab",
            "hot.tests.script",
            "hot.utils",
            "hot.utils.auth",
            "hot.utils.files",
            "hot.utils.hosts",
            "hot.utils.repo",
            "hot.utils.string",
            "hot.utils.test",
            "hot.utils.timeout",
            "hot.utils.token",
            "hot.utils.yaml"
        ],
        "version": "0.5.9"
    },
    "hot-redis": {
        "cmdline": [],
        "modules": [
            "hot_redis",
            "hot_redis.client",
            "hot_redis.tests",
            "hot_redis.types"
        ],
        "version": "0.3"
    },
    "hot-reload": {
        "cmdline": [],
        "modules": [
            "hot_reload"
        ],
        "version": "0.2"
    },
    "hotbot": {
        "cmdline": [],
        "modules": [
            "hotbot",
            "hotbot.jsonconf"
        ],
        "version": "1.0.1"
    },
    "hotchocolate": {
        "cmdline": [],
        "modules": [
            "hotchocolate",
            "hotchocolate.cli",
            "hotchocolate.css",
            "hotchocolate.logging",
            "hotchocolate.markdown",
            "hotchocolate.plugins",
            "hotchocolate.readers",
            "hotchocolate.settings",
            "hotchocolate.utils",
            "hotchocolate.writers"
        ],
        "version": "2.0.4"
    },
    "hotcidr": {
        "cmdline": [],
        "modules": [
            "hotcidr",
            "hotcidr.apply",
            "hotcidr.audit",
            "hotcidr.deleteexpired",
            "hotcidr.fetch",
            "hotcidr.notifyemail",
            "hotcidr.ports",
            "hotcidr.state",
            "hotcidr.test",
            "hotcidr.test.test_expiration",
            "hotcidr.test.test_validation",
            "hotcidr.util",
            "hotcidr.validation"
        ],
        "version": "0.1.0"
    },
    "hotdate": {
        "cmdline": [],
        "modules": [
            "hotdate"
        ],
        "version": "0.4.5"
    },
    "hotdoc": {
        "cmdline": [
            "hotdoc",
            "hotdoc_dep_printer"
        ],
        "modules": [
            "hotdoc",
            "hotdoc.core",
            "hotdoc.core.comment",
            "hotdoc.core.config",
            "hotdoc.core.database",
            "hotdoc.core.exceptions",
            "hotdoc.core.extension",
            "hotdoc.core.filesystem",
            "hotdoc.core.formatter",
            "hotdoc.core.inclusions",
            "hotdoc.core.links",
            "hotdoc.core.project",
            "hotdoc.core.symbols",
            "hotdoc.core.tests",
            "hotdoc.core.tests.test_config_parser",
            "hotdoc.core.tests.test_doc_tree",
            "hotdoc.core.tests.test_extension",
            "hotdoc.core.tests.test_inclusions",
            "hotdoc.core.tests.test_links",
            "hotdoc.core.tests.test_page",
            "hotdoc.core.tests.test_project",
            "hotdoc.core.tree",
            "hotdoc.extensions",
            "hotdoc.extensions.devhelp",
            "hotdoc.extensions.devhelp.devhelp_extension",
            "hotdoc.extensions.edit_on_github",
            "hotdoc.extensions.edit_on_github.edit_on_github_extension",
            "hotdoc.extensions.git_upload",
            "hotdoc.extensions.git_upload.git_upload_extension",
            "hotdoc.extensions.license",
            "hotdoc.extensions.license.license_extension",
            "hotdoc.extensions.search",
            "hotdoc.extensions.search.create_index",
            "hotdoc.extensions.search.search_extension",
            "hotdoc.extensions.search.trie",
            "hotdoc.extensions.syntax_highlighting",
            "hotdoc.extensions.syntax_highlighting.syntax_extension",
            "hotdoc.extensions.tags",
            "hotdoc.extensions.tags.tag_extension",
            "hotdoc.parsers",
            "hotdoc.parsers.cmark_utils",
            "hotdoc.parsers.gtk_doc",
            "hotdoc.parsers.sitemap",
            "hotdoc.parsers.tests",
            "hotdoc.parsers.tests.test_cmark_parser",
            "hotdoc.parsers.tests.test_standalone_parser",
            "hotdoc.run_hotdoc",
            "hotdoc.tests",
            "hotdoc.tests.fixtures",
            "hotdoc.tests.test_hotdoc",
            "hotdoc.utils",
            "hotdoc.utils.alchemy",
            "hotdoc.utils.configurable",
            "hotdoc.utils.loggable",
            "hotdoc.utils.setup_utils",
            "hotdoc.utils.signals",
            "hotdoc.utils.tests",
            "hotdoc.utils.tests.test_loggable",
            "hotdoc.utils.utils"
        ],
        "version": "0.8.92"
    },
    "hotdoc-c-extension": {
        "cmdline": [
            "hotdoc_gtk_doc_porter",
            "hotdoc_gtk_doc_scan_parser"
        ],
        "modules": [
            "hotdoc_c_extension",
            "hotdoc_c_extension.c_comment_scanner",
            "hotdoc_c_extension.c_extension",
            "hotdoc_c_extension.clang",
            "hotdoc_c_extension.clang.cindex",
            "hotdoc_c_extension.clang.enumerations",
            "hotdoc_c_extension.extensions",
            "hotdoc_c_extension.fundamentals",
            "hotdoc_c_extension.gi_annotation_parser",
            "hotdoc_c_extension.gi_extension",
            "hotdoc_c_extension.gi_formatter",
            "hotdoc_c_extension.templates",
            "hotdoc_c_extension.transition_scripts",
            "hotdoc_c_extension.utils",
            "hotdoc_c_extension.utils.setup_utils"
        ],
        "version": "0.8.90"
    },
    "hotdoc-cmark-extension": {
        "cmdline": [],
        "modules": [
            "hotdoc_cmark_extension",
            "utils",
            "utils.setupsubmodules"
        ],
        "version": "0.0.1"
    },
    "hotdoc-dbus-extension": {
        "cmdline": [],
        "modules": [
            "hotdoc_dbus_extension",
            "hotdoc_dbus_extension.dbus_extension"
        ],
        "version": "0.8.90"
    },
    "hotdoc-devhelp-extension": {
        "cmdline": [],
        "modules": [
            "hotdoc_devhelp_extension",
            "hotdoc_devhelp_extension.devhelp_extension"
        ],
        "version": "0.7.11"
    },
    "hotdoc-gi-extension": {
        "cmdline": [
            "hotdoc_gtk_doc_porter",
            "hotdoc_gtk_doc_scan_parser"
        ],
        "modules": [
            "hotdoc_gi_extension",
            "hotdoc_gi_extension.fundamentals",
            "hotdoc_gi_extension.gi_annotation_parser",
            "hotdoc_gi_extension.gi_extension",
            "hotdoc_gi_extension.gi_html_formatter",
            "hotdoc_gi_extension.templates",
            "hotdoc_gi_extension.transition_scripts"
        ],
        "version": "0.7.11.1"
    },
    "hotdoc-license-extension": {
        "cmdline": [],
        "modules": [
            "hotdoc_license_extension",
            "hotdoc_license_extension.license_extension"
        ],
        "version": "0.7.10"
    },
    "hotdoc-python-extension": {
        "cmdline": [],
        "modules": [
            "hotdoc_python_extension",
            "hotdoc_python_extension.napoleon",
            "hotdoc_python_extension.napoleon.docstring",
            "hotdoc_python_extension.napoleon.iterators",
            "hotdoc_python_extension.python_doc_parser",
            "hotdoc_python_extension.python_extension",
            "hotdoc_python_extension.python_formatter",
            "hotdoc_python_extension.templates"
        ],
        "version": "0.8.90"
    },
    "hotdoc-search-extension": {
        "cmdline": [],
        "modules": [
            "hotdoc_search_extension",
            "hotdoc_search_extension.create_index",
            "hotdoc_search_extension.demo",
            "hotdoc_search_extension.demo.setup",
            "hotdoc_search_extension.query_index",
            "hotdoc_search_extension.search_extension",
            "hotdoc_search_extension.trie",
            "hotdoc_search_extension.utils"
        ],
        "version": "0.7.10.5.1"
    },
    "hotdoc-syntax-highlighting-extension": {
        "cmdline": [],
        "modules": [
            "hotdoc_syntax_highlighting_extension",
            "hotdoc_syntax_highlighting_extension.syntax_extension"
        ],
        "version": "0.7.9.4.2"
    },
    "hotdoc-tag-extension": {
        "cmdline": [],
        "modules": [
            "hotdoc_tag_extension",
            "hotdoc_tag_extension.tag_extension"
        ],
        "version": "0.7.9"
    },
    "hotdog": {
        "cmdline": [],
        "modules": [
            "hotdog",
            "hotdog.BaseDriver",
            "hotdog.BaseElement",
            "hotdog.BaseElements",
            "hotdog.BasePage",
            "hotdog.BaseTest",
            "hotdog.Conditions",
            "hotdog.Config",
            "hotdog.Elements",
            "hotdog.Elements.Checkbox",
            "hotdog.FilePath",
            "hotdog.FindEither",
            "hotdog.Mustard",
            "hotdog.Results",
            "hotdog.Retry",
            "hotdog.TestStep",
            "hotdog.Testcase"
        ],
        "version": "1.7.3"
    },
    "hotel-elasticsearch": {
        "cmdline": [],
        "modules": [
            "hotel_elasticsearch",
            "hotel_elasticsearch.app",
            "hotel_elasticsearch.backup",
            "hotel_elasticsearch.cluster",
            "hotel_elasticsearch.configuration",
            "hotel_elasticsearch.dist_locks",
            "hotel_elasticsearch.dynamodb",
            "hotel_elasticsearch.monitoring",
            "hotel_elasticsearch.service"
        ],
        "version": "0.2.0"
    },
    "hotfilefinder": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hotfix": {
        "cmdline": [],
        "modules": [
            "hotfix",
            "hotfix.urls",
            "hotfix.utils"
        ],
        "version": "1.0.4"
    },
    "hotfn": {
        "cmdline": [],
        "modules": [
            "hotfn",
            "hotfn.http",
            "hotfn.http.request",
            "hotfn.http.response"
        ],
        "version": "0.0.2"
    },
    "hotline": {
        "cmdline": [],
        "modules": [
            "hotline",
            "hotline.app",
            "hotline.config",
            "hotline.contexts",
            "hotline.contexts.basiccontext",
            "hotline.contexts.context",
            "hotline.contexts.mayacontext",
            "hotline.contexts.nukecontext",
            "hotline.history",
            "hotline.messages",
            "hotline.shout",
            "hotline.store",
            "hotline.ui",
            "hotline.ui.highlighter",
            "hotline.ui.mayaui",
            "hotline.ui.resource",
            "hotline.ui.ui",
            "hotline.utils"
        ],
        "version": "0.5.2"
    },
    "hotmic": {
        "cmdline": [],
        "modules": [
            "hotmic",
            "hotmic.polynomials"
        ],
        "version": "0.1.1"
    },
    "hotplate": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "hotpotato": {
        "cmdline": [],
        "modules": [
            "hotpotato",
            "hotpotato.profile",
            "hotpotato.profile.default"
        ],
        "version": "0.1.0"
    },
    "hotqueue": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.7"
    },
    "hotrc": {
        "cmdline": [],
        "modules": [
            "hotrc",
            "hotrc.hotrc",
            "tests",
            "tests.test_hotrc"
        ],
        "version": "0.2.2"
    },
    "hotspot": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hotspotd": {
        "cmdline": [
            "hotspotd"
        ],
        "modules": [
            "hotspotd",
            "hotspotd.cli",
            "hotspotd.main"
        ],
        "version": "0.1.4"
    },
    "hotswap": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hotswappy": {
        "cmdline": [],
        "modules": [
            "hotswappy",
            "hotswappy.hotswappy"
        ],
        "version": "0.0.2"
    },
    "hotsyk": {
        "cmdline": [],
        "modules": [
            "hotsyk",
            "hotsyk.hotsyk",
            "tests",
            "tests.test_hotsyk"
        ],
        "version": "0.1.1"
    },
    "hottamale": {
        "cmdline": [],
        "modules": [
            "hottamale"
        ],
        "version": "0.1.1"
    },
    "hottie": {
        "cmdline": [],
        "modules": [
            "hottie"
        ],
        "version": "0.1.0"
    },
    "hotwatch": {
        "cmdline": [],
        "modules": [
            "hotwatch",
            "hotwatch.cli",
            "hotwatch.query"
        ],
        "version": "0.1.2"
    },
    "hotwire": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hotword-detection": {
        "cmdline": [
            "checkHotword.py",
            "trainHotword.py"
        ],
        "modules": [
            "hotword_detection",
            "hotword_detection.dtw",
            "hotword_detection.hwDetector",
            "hotword_detection.mfcc",
            "hotword_detection.wordRecorder"
        ],
        "version": "1.2"
    },
    "hotworker": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "houder": {
        "cmdline": [],
        "modules": [
            "houder",
            "houder.big",
            "houder.genees",
            "houder.version"
        ],
        "version": "1"
    },
    "houdini": {
        "cmdline": [],
        "modules": [
            "houdini"
        ],
        "version": "0.0.1"
    },
    "houdini-lexers": {
        "cmdline": [],
        "modules": [
            "houdini_lexers",
            "houdini_lexers.vex"
        ],
        "version": "1.2"
    },
    "houdini.py": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hour": {
        "cmdline": [],
        "modules": [
            "hour"
        ],
        "version": "0.0.1"
    },
    "hourglass": {
        "cmdline": [],
        "modules": [
            "hourglass",
            "hourglass.clock",
            "hourglass.job",
            "hourglass.schedule",
            "hourglass.version"
        ],
        "version": "0.2"
    },
    "housecanary": {
        "cmdline": [],
        "modules": [
            "housecanary",
            "housecanary.apiclient",
            "housecanary.authentication",
            "housecanary.constants",
            "housecanary.excel",
            "housecanary.excel.analytics_data_excel",
            "housecanary.excel.utilities",
            "housecanary.exceptions",
            "housecanary.hc_api_excel_concat",
            "housecanary.hc_api_excel_concat.hc_api_excel_concat",
            "housecanary.hc_api_export",
            "housecanary.hc_api_export.hc_api_export",
            "housecanary.object",
            "housecanary.output",
            "housecanary.requestclient",
            "housecanary.response",
            "housecanary.utilities"
        ],
        "version": "0.7.1"
    },
    "househunt": {
        "cmdline": [],
        "modules": [
            "househunt",
            "househunt.househunt",
            "househunt.searchresults"
        ],
        "version": "0.6.4"
    },
    "housekeeper": {
        "cmdline": [],
        "modules": [
            "housekeeper",
            "housekeeper.archive",
            "housekeeper.archive.cli",
            "housekeeper.archive.core",
            "housekeeper.archive.utils",
            "housekeeper.cli",
            "housekeeper.cli.base",
            "housekeeper.cli.core",
            "housekeeper.cli.utils",
            "housekeeper.compile",
            "housekeeper.compile.cli",
            "housekeeper.compile.core",
            "housekeeper.compile.restore",
            "housekeeper.compile.tar",
            "housekeeper.compile.utils",
            "housekeeper.constants",
            "housekeeper.deliver",
            "housekeeper.deliver.rsync",
            "housekeeper.exc",
            "housekeeper.export",
            "housekeeper.initiate",
            "housekeeper.parsemip",
            "housekeeper.pipelines",
            "housekeeper.pipelines.cli",
            "housekeeper.pipelines.general",
            "housekeeper.pipelines.general.add",
            "housekeeper.pipelines.general.commit",
            "housekeeper.pipelines.mip",
            "housekeeper.pipelines.mip.build",
            "housekeeper.pipelines.mip.core",
            "housekeeper.pipelines.mip.meta",
            "housekeeper.pipelines.mip.parse",
            "housekeeper.pipelines.mip.prepare",
            "housekeeper.pipelines.mip2",
            "housekeeper.pipelines.mip2.core",
            "housekeeper.pipelines.mip2.prepare",
            "housekeeper.pipelines.mip38",
            "housekeeper.pipelines.mip38.core",
            "housekeeper.pipelines.mip4",
            "housekeeper.pipelines.mip4.core",
            "housekeeper.pipelines.mip4.madeline",
            "housekeeper.pipelines.mip4.meta",
            "housekeeper.pipelines.mip4.parse",
            "housekeeper.pipelines.mip4.prepare",
            "housekeeper.pipelines.mip4.scout",
            "housekeeper.pipelines.miparchive",
            "housekeeper.pipelines.miparchive.core",
            "housekeeper.pipelines.miparchive.prepare",
            "housekeeper.server",
            "housekeeper.server.admin",
            "housekeeper.server.app",
            "housekeeper.store",
            "housekeeper.store.api",
            "housekeeper.store.cli",
            "housekeeper.store.migrate",
            "housekeeper.store.models",
            "housekeeper.store.utils"
        ],
        "version": "1.2.0"
    },
    "houserock": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "houston": {
        "cmdline": [],
        "modules": [
            "houston",
            "houston.cli",
            "houston.controller",
            "houston.files",
            "houston.utils"
        ],
        "version": "0.3.0"
    },
    "hover-ip-updater": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hovercraft": {
        "cmdline": [],
        "modules": [
            "hovercraft",
            "hovercraft.generate",
            "hovercraft.parse",
            "hovercraft.position",
            "hovercraft.template",
            "hovercraft.tests",
            "hovercraft.tests.test_data",
            "hovercraft.tests.test_docs",
            "hovercraft.tests.test_generator",
            "hovercraft.tests.test_hovercraft",
            "hovercraft.tests.test_parse",
            "hovercraft.tests.test_position",
            "hovercraft.tests.test_template"
        ],
        "version": "2.3"
    },
    "hoverpy": {
        "cmdline": [],
        "modules": [
            "hoverpy",
            "hoverpy.config",
            "hoverpy.decorators",
            "hoverpy.hp",
            "hoverpy.lib",
            "hoverpy.lib.tor",
            "hoverpy.testing"
        ],
        "version": "0.2.2"
    },
    "howabout": {
        "cmdline": [],
        "modules": [
            "howabout",
            "howabout.version"
        ],
        "version": "1.1"
    },
    "howbig": {
        "cmdline": [
            "howbig"
        ],
        "modules": [],
        "version": "0.1.0"
    },
    "howdoi": {
        "cmdline": [],
        "modules": [
            "howdoi",
            "howdoi.howdoi"
        ],
        "version": "1.1.9"
    },
    "howdou": {
        "cmdline": [],
        "modules": [
            "howdou",
            "howdou.howdou",
            "howdou.tests"
        ],
        "version": "3.0.6"
    },
    "howl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "howlermonkey": {
        "cmdline": [],
        "modules": [
            "howlermonkey",
            "howlermonkey.client",
            "howlermonkey.server"
        ],
        "version": "1.0.2"
    },
    "howlong": {
        "cmdline": [],
        "modules": [
            "HowLong",
            "HowLong.HowLong"
        ],
        "version": "0.0.2"
    },
    "howmanypeoplearearound": {
        "cmdline": [],
        "modules": [
            "howmanypeoplearearound",
            "howmanypeoplearearound.analysis",
            "howmanypeoplearearound.oui",
            "howmanypeoplearearound.plotlyjs"
        ],
        "version": "0.3.1"
    },
    "howto": {
        "cmdline": [],
        "modules": [
            "howto",
            "howto.howto"
        ],
        "version": "0.2.2"
    },
    "hp-darwinpush": {
        "cmdline": [],
        "modules": [
            "darwinpush",
            "darwinpush.client",
            "darwinpush.ftp",
            "darwinpush.listener",
            "darwinpush.messagefactories",
            "darwinpush.messagefactories.xml",
            "darwinpush.messagefactories.xml.ScheduleXMLMessageFactory",
            "darwinpush.messagefactories.xml.TrainStatusXMLMessageFactory",
            "darwinpush.messages",
            "darwinpush.messages.AlarmMessage",
            "darwinpush.messages.AssociationMessage",
            "darwinpush.messages.BaseMessage",
            "darwinpush.messages.DeactivatedMessage",
            "darwinpush.messages.ScheduleMessage",
            "darwinpush.messages.StationMessage",
            "darwinpush.messages.TrackingIdMessage",
            "darwinpush.messages.TrainAlertMessage",
            "darwinpush.messages.TrainOrderMessage",
            "darwinpush.messages.TrainStatusMessage",
            "darwinpush.parser",
            "darwinpush.utils",
            "darwinpush.xb",
            "darwinpush.xb.alm",
            "darwinpush.xb.binding",
            "darwinpush.xb.binding_",
            "darwinpush.xb.ct",
            "darwinpush.xb.fc",
            "darwinpush.xb.pushport",
            "darwinpush.xb.raw",
            "darwinpush.xb.raw.alm",
            "darwinpush.xb.raw.binding",
            "darwinpush.xb.raw.binding_",
            "darwinpush.xb.raw.ct",
            "darwinpush.xb.raw.fc",
            "darwinpush.xb.raw.pushport",
            "darwinpush.xb.raw.sch",
            "darwinpush.xb.raw.sm",
            "darwinpush.xb.raw.status",
            "darwinpush.xb.raw.ta",
            "darwinpush.xb.raw.td",
            "darwinpush.xb.raw.tor",
            "darwinpush.xb.sch",
            "darwinpush.xb.sm",
            "darwinpush.xb.status",
            "darwinpush.xb.ta",
            "darwinpush.xb.td",
            "darwinpush.xb.tor"
        ],
        "version": "0.0.5"
    },
    "hp-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "hp-sdn-client": {
        "cmdline": [],
        "modules": [
            "hpsdnclient",
            "hpsdnclient.api",
            "hpsdnclient.apibase",
            "hpsdnclient.auth",
            "hpsdnclient.core",
            "hpsdnclient.datatypes",
            "hpsdnclient.error",
            "hpsdnclient.net",
            "hpsdnclient.of",
            "hpsdnclient.rest",
            "hpsdnclient.tests",
            "hpsdnclient.tests.base",
            "hpsdnclient.tests.data",
            "hpsdnclient.tests.functional",
            "hpsdnclient.tests.functional.test_coremixin",
            "hpsdnclient.tests.functional.test_netmixin",
            "hpsdnclient.tests.functional.test_ofmixin",
            "hpsdnclient.tests.unit",
            "hpsdnclient.tests.unit.test_apibase",
            "hpsdnclient.tests.unit.test_auth",
            "hpsdnclient.tests.unit.test_client",
            "hpsdnclient.tests.unit.test_datatypes",
            "hpsdnclient.tests.unit.test_errors",
            "hpsdnclient.tests.unit.test_rest",
            "hpsdnclient.tests.unit.test_utils",
            "hpsdnclient.utils",
            "hpsdnclient.version"
        ],
        "version": "1.1.1"
    },
    "hp3478a": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hp3parclient": {
        "cmdline": [],
        "modules": [
            "hp3parclient",
            "hp3parclient.client",
            "hp3parclient.exceptions",
            "hp3parclient.file_client",
            "hp3parclient.http",
            "hp3parclient.ssh",
            "hp3parclient.tcl_parser",
            "test",
            "test.HP3ParClient_base",
            "test.HP3ParMockServer_flask",
            "test.HP3ParMockServer_ssh",
            "test.test_HP3ParClient_CPG",
            "test.test_HP3ParClient_Exception",
            "test.test_HP3ParClient_FilePersona",
            "test.test_HP3ParClient_FilePersona_Mock",
            "test.test_HP3ParClient_HostSet",
            "test.test_HP3ParClient_MockSSH",
            "test.test_HP3ParClient_Stats",
            "test.test_HP3ParClient_VLUN",
            "test.test_HP3ParClient_host",
            "test.test_HP3ParClient_ports",
            "test.test_HP3ParClient_retry",
            "test.test_HP3ParClient_system",
            "test.test_HP3ParClient_volume"
        ],
        "version": "3.3.2"
    },
    "hp54111d": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hpack": {
        "cmdline": [],
        "modules": [
            "hpack",
            "hpack.compat",
            "hpack.exceptions",
            "hpack.hpack",
            "hpack.huffman",
            "hpack.huffman_constants",
            "hpack.huffman_table",
            "hpack.struct",
            "hpack.table"
        ],
        "version": "3.0.0"
    },
    "hpc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hpcc-i-spark": {
        "cmdline": [],
        "modules": [
            "hpcc_i_spark",
            "hpcc_i_spark.cli",
            "hpcc_i_spark.find_record_structure",
            "hpcc_i_spark.get_content",
            "tests",
            "tests.test_hpcc_i_spark"
        ],
        "version": "0.1.1"
    },
    "hpcdo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hpcloud-auth-openstack": {
        "cmdline": [],
        "modules": [
            "hpcloud_auth_openstack",
            "hpcloud_auth_openstack.plugin"
        ],
        "version": "1.0"
    },
    "hpcloud-client": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hpcm": {
        "cmdline": [],
        "modules": [
            "hpcm",
            "hpcm.hpcm"
        ],
        "version": "0.2.1"
    },
    "hpcplot": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hpcprocinfo": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hpd-20": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "hpd20": {
        "cmdline": [],
        "modules": [
            "hpd20",
            "hpd20.chain",
            "hpd20.ethnic_scales",
            "hpd20.hpd20",
            "hpd20.hpd20wx",
            "hpd20.instrumentname",
            "hpd20.kit",
            "hpd20.melodypadpattern",
            "hpd20.memoryops",
            "hpd20.memoryops_unittests",
            "hpd20.pad",
            "hpd20.ratios",
            "hpd20.read_scl",
            "hpd20.scaledialog",
            "hpd20.scales",
            "hpd20.scales_unittests"
        ],
        "version": "0.0.8"
    },
    "hpdr": {
        "cmdline": [],
        "modules": [
            "hpdr",
            "hpdr.api",
            "hpdr.enums",
            "hpdr.models",
            "hpdr.parse",
            "hpdr.utils",
            "tests",
            "tests.test_all",
            "tests.test_large",
            "tests.test_parse",
            "tests.test_steps"
        ],
        "version": "1.0.0"
    },
    "hpeixoto-letsencrypt-route53": {
        "cmdline": [],
        "modules": [
            "letsencrypt_route53",
            "letsencrypt_route53.authenticator"
        ],
        "version": "0.1.4"
    },
    "hpelm": {
        "cmdline": [],
        "modules": [
            "hpelm",
            "hpelm.elm",
            "hpelm.hp_elm",
            "hpelm.modules",
            "hpelm.modules.hdf5_tools",
            "hpelm.modules.mrsr",
            "hpelm.modules.mrsr2",
            "hpelm.modules.rbf_param",
            "hpelm.mss_cv",
            "hpelm.mss_loo",
            "hpelm.mss_v",
            "hpelm.nnets",
            "hpelm.nnets.slfn",
            "hpelm.nnets.slfn_python",
            "hpelm.nnets.slfn_skcuda",
            "hpelm.tests",
            "hpelm.tests.test_acceptance",
            "hpelm.tests.test_corr_hpelm",
            "hpelm.tests.test_correctness",
            "hpelm.tests.unittest_elm",
            "hpelm.tests.unittest_hpelm"
        ],
        "version": "1.0.4"
    },
    "hpfeeds": {
        "cmdline": [
            "hpfeeds-client"
        ],
        "modules": [
            "hpfeeds"
        ],
        "version": "1.0"
    },
    "hpfeeds-logger": {
        "cmdline": [],
        "modules": [
            "hpfeedslogger",
            "hpfeedslogger.formatters",
            "hpfeedslogger.formatters.arcsight",
            "hpfeedslogger.formatters.json_formatter",
            "hpfeedslogger.formatters.splunk",
            "hpfeedslogger.processors"
        ],
        "version": "0.0.7.2"
    },
    "hpfeeds-threatstream": {
        "cmdline": [
            "hpfeeds-client"
        ],
        "modules": [
            "hpfeeds"
        ],
        "version": "1.1"
    },
    "hpicsp": {
        "cmdline": [],
        "modules": [
            "hpICsp",
            "hpICsp.buildPlans",
            "hpICsp.cfg",
            "hpICsp.common",
            "hpICsp.connection",
            "hpICsp.connectionHPOneView",
            "hpICsp.deviceGroups",
            "hpICsp.exceptions",
            "hpICsp.facility",
            "hpICsp.jobs",
            "hpICsp.ogfsScripts",
            "hpICsp.packages",
            "hpICsp.serverScripts",
            "hpICsp.servers",
            "hpICsp.settings"
        ],
        "version": "1.0.2"
    },
    "hpimon": {
        "cmdline": [],
        "modules": [
            "hpimon",
            "hpimon.FieldTrip",
            "hpimon.config",
            "hpimon.elekta",
            "hpimon.hpimon",
            "hpimon.rt_server",
            "hpimon.utils"
        ],
        "version": "0.12.6"
    },
    "hpitclient": {
        "cmdline": [],
        "modules": [
            "hpitclient",
            "hpitclient.exceptions",
            "hpitclient.message_sender_mixin",
            "hpitclient.plugin",
            "hpitclient.requests_mixin",
            "hpitclient.tutor"
        ],
        "version": "0.36"
    },
    "hplawson": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hplefthandclient": {
        "cmdline": [],
        "modules": [
            "hplefthandclient",
            "hplefthandclient.client",
            "hplefthandclient.exceptions",
            "hplefthandclient.http"
        ],
        "version": "1.1.0"
    },
    "hpn-utilities": {
        "cmdline": [],
        "modules": [
            "HPN_Utilities",
            "HPN_Utilities.TelnetHandler"
        ],
        "version": "1.0.9"
    },
    "hpoliced": {
        "cmdline": [],
        "modules": [
            "hpoliced",
            "hpoliced.cli"
        ],
        "version": "0.0.4"
    },
    "hponeview": {
        "cmdline": [],
        "modules": [
            "hpOneView",
            "hpOneView.activity",
            "hpOneView.common",
            "hpOneView.connection",
            "hpOneView.exceptions",
            "hpOneView.facilities",
            "hpOneView.fcsans",
            "hpOneView.image_streamer",
            "hpOneView.image_streamer.image_streamer_client",
            "hpOneView.image_streamer.resources",
            "hpOneView.image_streamer.resources.artifact_bundles",
            "hpOneView.image_streamer.resources.build_plans",
            "hpOneView.image_streamer.resources.deployment_groups",
            "hpOneView.image_streamer.resources.deployment_plans",
            "hpOneView.image_streamer.resources.golden_images",
            "hpOneView.image_streamer.resources.os_volumes",
            "hpOneView.image_streamer.resources.plan_scripts",
            "hpOneView.metrics",
            "hpOneView.networking",
            "hpOneView.oneview_client",
            "hpOneView.profile",
            "hpOneView.resources",
            "hpOneView.resources.activity",
            "hpOneView.resources.activity.alerts",
            "hpOneView.resources.activity.events",
            "hpOneView.resources.activity.tasks",
            "hpOneView.resources.data_services",
            "hpOneView.resources.data_services.metric_streaming",
            "hpOneView.resources.facilities",
            "hpOneView.resources.facilities.datacenters",
            "hpOneView.resources.facilities.power_devices",
            "hpOneView.resources.facilities.racks",
            "hpOneView.resources.fc_sans",
            "hpOneView.resources.fc_sans.endpoints",
            "hpOneView.resources.fc_sans.managed_sans",
            "hpOneView.resources.fc_sans.san_managers",
            "hpOneView.resources.networking",
            "hpOneView.resources.networking.connection_templates",
            "hpOneView.resources.networking.ethernet_networks",
            "hpOneView.resources.networking.fabrics",
            "hpOneView.resources.networking.fc_networks",
            "hpOneView.resources.networking.fcoe_networks",
            "hpOneView.resources.networking.interconnect_link_topologies",
            "hpOneView.resources.networking.interconnect_types",
            "hpOneView.resources.networking.interconnects",
            "hpOneView.resources.networking.internal_link_sets",
            "hpOneView.resources.networking.logical_downlinks",
            "hpOneView.resources.networking.logical_interconnect_groups",
            "hpOneView.resources.networking.logical_interconnects",
            "hpOneView.resources.networking.logical_switch_groups",
            "hpOneView.resources.networking.logical_switches",
            "hpOneView.resources.networking.network_sets",
            "hpOneView.resources.networking.sas_interconnect_types",
            "hpOneView.resources.networking.sas_interconnects",
            "hpOneView.resources.networking.sas_logical_interconnect_groups",
            "hpOneView.resources.networking.sas_logical_interconnects",
            "hpOneView.resources.networking.switch_types",
            "hpOneView.resources.networking.switches",
            "hpOneView.resources.networking.uplink_sets",
            "hpOneView.resources.resource",
            "hpOneView.resources.search",
            "hpOneView.resources.search.labels",
            "hpOneView.resources.security",
            "hpOneView.resources.security.certificate_authority",
            "hpOneView.resources.security.certificate_rabbitmq",
            "hpOneView.resources.servers",
            "hpOneView.resources.servers.connections",
            "hpOneView.resources.servers.enclosure_groups",
            "hpOneView.resources.servers.enclosures",
            "hpOneView.resources.servers.id_pools",
            "hpOneView.resources.servers.id_pools_ipv4_ranges",
            "hpOneView.resources.servers.id_pools_ipv4_subnets",
            "hpOneView.resources.servers.id_pools_ranges",
            "hpOneView.resources.servers.logical_enclosures",
            "hpOneView.resources.servers.migratable_vc_domains",
            "hpOneView.resources.servers.server_hardware",
            "hpOneView.resources.servers.server_hardware_types",
            "hpOneView.resources.servers.server_profile_templates",
            "hpOneView.resources.servers.server_profiles",
            "hpOneView.resources.settings",
            "hpOneView.resources.settings.appliance_time_and_locale_configuration",
            "hpOneView.resources.settings.backups",
            "hpOneView.resources.settings.firmware_bundles",
            "hpOneView.resources.settings.firmware_drivers",
            "hpOneView.resources.settings.restores",
            "hpOneView.resources.settings.scopes",
            "hpOneView.resources.storage",
            "hpOneView.resources.storage.drive_enclosures",
            "hpOneView.resources.storage.sas_logical_jbod_attachments",
            "hpOneView.resources.storage.sas_logical_jbods",
            "hpOneView.resources.storage.storage_pools",
            "hpOneView.resources.storage.storage_systems",
            "hpOneView.resources.storage.storage_volume_attachments",
            "hpOneView.resources.storage.storage_volume_templates",
            "hpOneView.resources.storage.volumes",
            "hpOneView.resources.task_monitor",
            "hpOneView.resources.uncategorized",
            "hpOneView.resources.uncategorized.os_deployment_plans",
            "hpOneView.resources.uncategorized.os_deployment_servers",
            "hpOneView.resources.uncategorized.roles",
            "hpOneView.resources.uncategorized.unmanaged_devices",
            "hpOneView.search",
            "hpOneView.security",
            "hpOneView.servers",
            "hpOneView.settings",
            "hpOneView.storage",
            "hpOneView.uncategorized"
        ],
        "version": "3.2.1"
    },
    "hpoo": {
        "cmdline": [],
        "modules": [
            "hpoo",
            "hpoo.core"
        ],
        "version": "0.0.3"
    },
    "hpp2plantuml": {
        "cmdline": [],
        "modules": [
            "hpp2plantuml",
            "hpp2plantuml.hpp2plantuml"
        ],
        "version": "0.2"
    },
    "hpppm": {
        "cmdline": [
            "hpppm_demand_management.py"
        ],
        "modules": [
            "hpppm",
            "hpppm.demand_management",
            "hpppm.error_handler",
            "hpppm.ez_setup",
            "hpppm.field_parser"
        ],
        "version": "0.1"
    },
    "hpproj": {
        "cmdline": [],
        "modules": [
            "hpproj",
            "hpproj.cutsky",
            "hpproj.hp_helper",
            "hpproj.visu"
        ],
        "version": "0.6.1"
    },
    "hppy": {
        "cmdline": [],
        "modules": [
            "hppy",
            "hppy._hyphyinterface",
            "hppy._hyphymap"
        ],
        "version": "0.9.8"
    },
    "hprof2flamegraph": {
        "cmdline": [
            "flamegraph.pl"
        ],
        "modules": [
            "stackcollapse_hpl",
            "stackcollapse_hprof"
        ],
        "version": "0.0.6"
    },
    "hprose": {
        "cmdline": [],
        "modules": [
            "fpconst",
            "hprose",
            "hprose.client",
            "hprose.common",
            "hprose.httpclient",
            "hprose.httpserver",
            "hprose.io",
            "hprose.server"
        ],
        "version": "1.4.3"
    },
    "hpsspy": {
        "cmdline": [],
        "modules": [
            "hpsspy",
            "hpsspy.os",
            "hpsspy.os._os",
            "hpsspy.os.path",
            "hpsspy.scan",
            "hpsspy.test",
            "hpsspy.test.hpsspy_test_suite",
            "hpsspy.test.test_data",
            "hpsspy.test.test_os",
            "hpsspy.test.test_scan",
            "hpsspy.test.test_top_level",
            "hpsspy.test.test_util",
            "hpsspy.util"
        ],
        "version": "0.3.0"
    },
    "hptcad": {
        "cmdline": [],
        "modules": [
            "hptcad"
        ],
        "version": "0.0.1"
    },
    "hpx-bitly": {
        "cmdline": [],
        "modules": [
            "bitly",
            "bitly.bitly"
        ],
        "version": "0.1"
    },
    "hpx-insightly": {
        "cmdline": [],
        "modules": [
            "insightly",
            "insightly.insightly"
        ],
        "version": "2.2.7"
    },
    "hpy": {
        "cmdline": [
            "hpython"
        ],
        "modules": [
            "hpy",
            "hpy.hebrew",
            "hpy.htokenize"
        ],
        "version": "0.2"
    },
    "hq": {
        "cmdline": [],
        "modules": [
            "hq",
            "hq.config",
            "hq.hq",
            "hq.hquery",
            "hq.hquery.axis",
            "hq.hquery.computed_constructors",
            "hq.hquery.computed_constructors.hash_key_value",
            "hq.hquery.computed_constructors.html_attribute",
            "hq.hquery.computed_constructors.html_element",
            "hq.hquery.computed_constructors.json_array",
            "hq.hquery.computed_constructors.json_hash",
            "hq.hquery.equality_operators",
            "hq.hquery.evaluation_error",
            "hq.hquery.evaluation_in_context",
            "hq.hquery.expression_context",
            "hq.hquery.flwor",
            "hq.hquery.function_support",
            "hq.hquery.functions",
            "hq.hquery.functions.core_boolean",
            "hq.hquery.functions.core_node_set",
            "hq.hquery.functions.core_number",
            "hq.hquery.functions.core_string",
            "hq.hquery.functions.extend_node_set",
            "hq.hquery.functions.extend_string",
            "hq.hquery.hquery_processor",
            "hq.hquery.location_path",
            "hq.hquery.node_test",
            "hq.hquery.object_type",
            "hq.hquery.relational_operators",
            "hq.hquery.string_interpolation",
            "hq.hquery.syntax_error",
            "hq.hquery.tokens",
            "hq.hquery.variables",
            "hq.output",
            "hq.soup_util",
            "hq.string_util",
            "hq.verbosity",
            "hquery",
            "hquery.hquery_test_util",
            "hquery.test_arithmetic_operators",
            "hquery.test_axes",
            "hquery.test_computed_html_construction",
            "hquery.test_computed_json_construction",
            "hquery.test_core_functions",
            "hquery.test_equality_operators",
            "hquery.test_expressions",
            "hquery.test_extended_functions",
            "hquery.test_flwor",
            "hquery.test_if_then_else",
            "hquery.test_interpolated_strings",
            "hquery.test_location_paths",
            "hquery.test_name_tests",
            "hquery.test_node_tests",
            "hquery.test_relational_operators",
            "hquery.test_sequences_and_ranges",
            "hquery.test_strings",
            "hquery.test_xpath1_abbreviated_samples",
            "hquery.test_xpath1_unabbreviated_samples"
        ],
        "version": "0.0.3"
    },
    "hqueue": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "hr": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hrdns": {
        "cmdline": [],
        "modules": [
            "hrdns",
            "hrdns.commands",
            "hrdns.service"
        ],
        "version": "dev"
    },
    "hre": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.4"
    },
    "hrf-estimation": {
        "cmdline": [],
        "modules": [
            "hrf_estimation",
            "hrf_estimation.data",
            "hrf_estimation.hrf",
            "hrf_estimation.rank_one_",
            "hrf_estimation.savitzky_golay",
            "hrf_estimation.utils"
        ],
        "version": "1.1"
    },
    "hrlo": {
        "cmdline": [
            "HRauth",
            "HRcompany",
            "HRday",
            "HRget",
            "HRlo",
            "HRphone",
            "HRpresence",
            "HRscripts",
            "HRtotalizator",
            "HRutils",
            "accaerralo"
        ],
        "modules": [
            "HRlo",
            "HRlo.HRauth",
            "HRlo.HRcompany",
            "HRlo.HRday",
            "HRlo.HRdayList",
            "HRlo.HRget",
            "HRlo.HRlo",
            "HRlo.HRphone",
            "HRlo.HRpresence",
            "HRlo.HRscripts",
            "HRlo.HRtotalizator",
            "HRlo.HRutils",
            "HRlo.color",
            "HRlo.config",
            "HRlo.list_presents",
            "HRlo.utils",
            "HRlo/logs",
            "HRlo/logs.config",
            "HRlo/logs.daylog",
            "HRlo/logs.dayloglist",
            "HRlo/logs.logs",
            "HRlo/logs.test",
            "HRlo/logs.test_main",
            "HRlo/logs/dayutils",
            "HRlo/logs/dayutils.dayutils",
            "HRlo/scripts",
            "HRlo/scripts.dump_presents",
            "HRlo/scripts.monitor",
            "HRlo/scripts.report",
            "HRlo/scripts.scripts_utils"
        ],
        "version": "0.7.11"
    },
    "hrm": {
        "cmdline": [],
        "modules": [
            "employee",
            "employee.employee",
            "tests"
        ],
        "version": "0.0.1"
    },
    "hroute": {
        "cmdline": [
            "hroute"
        ],
        "modules": [
            "hroute",
            "hroute.app",
            "hroute.config",
            "hroute.lookup",
            "hroute.proxy",
            "hroute.rewrite",
            "hroute.util"
        ],
        "version": "0.2.0"
    },
    "hrs": {
        "cmdline": [],
        "modules": [
            "hrs",
            "hrs.aperture",
            "hrs.calibration",
            "hrs.frame",
            "hrs.logtable",
            "song",
            "song.ccdproc_mod",
            "song.eg_check_xdrift",
            "song.eg_extract1dspec",
            "song.extract",
            "song.master",
            "song.measure_xdrift",
            "song.measure_ydrift",
            "song.song",
            "song.test_script2",
            "song.utils",
            "twodspec",
            "twodspec.aperture",
            "twodspec.ccdproc_mod",
            "twodspec.config",
            "twodspec.normalization",
            "twodspec/extern",
            "twodspec/extern.interpolate",
            "twodspec/extern.polynomial"
        ],
        "version": "1.2.2"
    },
    "hrt": {
        "cmdline": [
            "hrt"
        ],
        "modules": [
            "hrt",
            "hrt.base",
            "hrt.cli",
            "hrt.input_handler",
            "hrt.interface",
            "hrt.plugin_manager",
            "hrt.script",
            "hrt.templates",
            "hrt.templates.bash",
            "hrt.templates.php",
            "hrt.templates.python",
            "hrt.templates.ruby",
            "hrt.translator",
            "hrt.url",
            "hrt.util"
        ],
        "version": "0.1.0"
    },
    "hrv": {
        "cmdline": [],
        "modules": [
            "hrv",
            "hrv.classical",
            "hrv.utils"
        ],
        "version": "0.1.3.dev0"
    },
    "hs-dbus-signature": {
        "cmdline": [],
        "modules": [
            "hs_dbus_signature",
            "hs_dbus_signature._signature",
            "hs_dbus_signature._version"
        ],
        "version": "0.5"
    },
    "hs-restclient": {
        "cmdline": [],
        "modules": [
            "hs_restclient",
            "hs_restclient.compat",
            "hs_restclient.endpoints",
            "hs_restclient.endpoints.resources",
            "hs_restclient.exceptions",
            "hs_restclient.generators",
            "hs_restclient.util"
        ],
        "version": "1.2.8"
    },
    "hs3sh": {
        "cmdline": [],
        "modules": [
            "hs3sh",
            "hs3sh.cmd",
            "hs3sh.conf",
            "hs3sh.init",
            "hs3sh.parse",
            "hs3sh.s3config",
            "hs3sh.test_aclcleanup"
        ],
        "version": "0.2.0"
    },
    "hsalf": {
        "cmdline": [],
        "modules": [
            "hsalf",
            "hsalf.swf",
            "hsalf.test_swf"
        ],
        "version": "0.0.1"
    },
    "hsaudiotag": {
        "cmdline": [],
        "modules": [
            "hsaudiotag",
            "hsaudiotag.aiff",
            "hsaudiotag.auto",
            "hsaudiotag.flac",
            "hsaudiotag.genres",
            "hsaudiotag.id3v1",
            "hsaudiotag.id3v2",
            "hsaudiotag.mp4",
            "hsaudiotag.mpeg",
            "hsaudiotag.ogg",
            "hsaudiotag.util",
            "hsaudiotag.wma"
        ],
        "version": "1.1.1"
    },
    "hsaudiotag3k": {
        "cmdline": [],
        "modules": [
            "hsaudiotag",
            "hsaudiotag.aiff",
            "hsaudiotag.auto",
            "hsaudiotag.flac",
            "hsaudiotag.genres",
            "hsaudiotag.id3v1",
            "hsaudiotag.id3v2",
            "hsaudiotag.mp4",
            "hsaudiotag.mpeg",
            "hsaudiotag.ogg",
            "hsaudiotag.util",
            "hsaudiotag.wma"
        ],
        "version": "1.1.3"
    },
    "hsbcore": {
        "cmdline": [],
        "modules": [
            "betcore",
            "betcore.browser",
            "betcore.exception",
            "betcore.horse",
            "betcore.horse.AA",
            "betcore.horse.AA_Admin",
            "betcore.horse.DB",
            "betcore.horse.DB_Admin",
            "betcore.horse.LW",
            "betcore.horse.LW_Admin",
            "betcore.horse.config",
            "betcore.util"
        ],
        "version": "1.0.0"
    },
    "hscacheutils": {
        "cmdline": [],
        "modules": [
            "hscacheutils",
            "hscacheutils.generational_cache",
            "hscacheutils.raw_cache",
            "hscacheutils.setting_wrappers",
            "hscacheutils.simple_memory_cache"
        ],
        "version": "0.1.8"
    },
    "hsdata": {
        "cmdline": [],
        "modules": [
            "hsdata",
            "hsdata.core",
            "hsdata.hearthstats",
            "hsdata.hsbox",
            "hsdata.utils"
        ],
        "version": "0.2.16"
    },
    "hsep-automation": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hsh": {
        "cmdline": [],
        "modules": [
            "hsh",
            "hsh.app",
            "hsh.library",
            "hsh.library.hash",
            "hsh.settings"
        ],
        "version": "1.1.0"
    },
    "hsize": {
        "cmdline": [],
        "modules": [
            "hsize",
            "hsize.hsize",
            "hsize.tests"
        ],
        "version": "0.0.2"
    },
    "hslog": {
        "cmdline": [],
        "modules": [
            "hslog",
            "hslog.exceptions",
            "hslog.export",
            "hslog.packets",
            "hslog.parser",
            "hslog.player",
            "hslog.tokens",
            "hslog.utils",
            "tests",
            "tests.data",
            "tests.test_main"
        ],
        "version": "1.0.0"
    },
    "hsluv": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "hsm": {
        "cmdline": [],
        "modules": [
            "hsm",
            "hsm.actor",
            "hsm.runtime_actor",
            "hsm.runtime_queue",
            "hsm.test",
            "hsm.test.test_actor",
            "hsm.test.test_actor2",
            "hsm.test.test_actor3",
            "hsm.test.test_iomonitor"
        ],
        "version": "0.1.9"
    },
    "hsme": {
        "cmdline": [],
        "modules": [
            "fsm",
            "fsm.core",
            "fsm.parsers",
            "tests",
            "tests.charts",
            "tests.charts.rules",
            "tests.test_parsers",
            "tests.test_process"
        ],
        "version": "0.3"
    },
    "hsmtranquillity": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hspellpy": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.4"
    },
    "hspfbintoolbox": {
        "cmdline": [],
        "modules": [
            "hspfbintoolbox",
            "hspfbintoolbox.hspfbintoolbox"
        ],
        "version": "1.4.8.0"
    },
    "hspicefile": {
        "cmdline": [],
        "modules": [
            "hspicefile"
        ],
        "version": "1.01"
    },
    "hspy": {
        "cmdline": [],
        "modules": [
            "marketplace",
            "marketplace.decorators",
            "marketplace.logger",
            "marketplace.middleware",
            "marketplace.middleware.anchor_fix",
            "marketplace.middleware.auth",
            "marketplace.middleware.debug_mode_logging",
            "marketplace.middleware.error_goggles",
            "marketplace.middleware.mock",
            "marketplace.request_supplement"
        ],
        "version": "1.6.4"
    },
    "hsq": {
        "cmdline": [],
        "modules": [
            "hsq",
            "hsq.hsq"
        ],
        "version": "1.0.2"
    },
    "hsreplay": {
        "cmdline": [],
        "modules": [
            "hsreplay",
            "hsreplay.document",
            "hsreplay.dumper",
            "hsreplay.elements",
            "hsreplay.utils"
        ],
        "version": "1.4.3"
    },
    "hssa": {
        "cmdline": [],
        "modules": [
            "hssa",
            "hssa.AP",
            "hssa.HS",
            "hssa.HSFrame",
            "hssa.HSSA",
            "hssa.anisodiff"
        ],
        "version": "0.4.1"
    },
    "hst": {
        "cmdline": [],
        "modules": [
            "hst",
            "hst.hst",
            "hst.indexer",
            "hst.levenshtein",
            "hst.matcher"
        ],
        "version": "0.1.11"
    },
    "hstore-field": {
        "cmdline": [],
        "modules": [
            "hstore_field",
            "hstore_field.fields",
            "hstore_field.forms",
            "hstore_field.query"
        ],
        "version": "1.0.3"
    },
    "hstore-field-caseinsensitive": {
        "cmdline": [],
        "modules": [
            "hstore_field",
            "hstore_field.fields",
            "hstore_field.forms",
            "hstore_field.query"
        ],
        "version": "1.0.2"
    },
    "hstsim": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hstspreload": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hsub": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hszinc": {
        "cmdline": [],
        "modules": [
            "hszinc",
            "hszinc.datatypes",
            "hszinc.dumper",
            "hszinc.grammar",
            "hszinc.grid",
            "hszinc.metadata",
            "hszinc.parser",
            "hszinc.pintutil",
            "hszinc.sortabledict",
            "hszinc.zoneinfo",
            "tests",
            "tests.pint_units",
            "tests.test_acid",
            "tests.test_datatype",
            "tests.test_dumper",
            "tests.test_import",
            "tests.test_parser",
            "tests.test_parser_pint",
            "tests.test_pint"
        ],
        "version": "0.1.1"
    },
    "ht": {
        "cmdline": [],
        "modules": [
            "ht",
            "ht.air_cooler",
            "ht.boiling_flow",
            "ht.boiling_nucleic",
            "ht.condensation",
            "ht.conduction",
            "ht.conv_external",
            "ht.conv_free_immersed",
            "ht.conv_internal",
            "ht.conv_jacket",
            "ht.conv_packed_bed",
            "ht.conv_supercritical",
            "ht.conv_tube_bank",
            "ht.conv_two_phase",
            "ht.core",
            "ht.hx",
            "ht.insulation",
            "ht.radiation",
            "ht.vectorized"
        ],
        "version": "0.1.49"
    },
    "ht-nester": {
        "cmdline": [],
        "modules": [
            "HT_nester"
        ],
        "version": "1.0.0"
    },
    "htables": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.1"
    },
    "htail": {
        "cmdline": [],
        "modules": [],
        "version": "1.2"
    },
    "htblowfishstoreplugin": {
        "cmdline": [],
        "modules": [
            "htblowfishstore",
            "htblowfishstore.htblowfishstore"
        ],
        "version": "0.1"
    },
    "htc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "htconsole": {
        "cmdline": [],
        "modules": [
            "htconsole",
            "htconsole.command",
            "htconsole.evalcontext",
            "htconsole.extrabuiltins",
            "htconsole.htmlrepr",
            "htconsole.sitepage",
            "htconsole.web",
            "htconsole.web.index",
            "htconsole.wsgiapp"
        ],
        "version": "0.2"
    },
    "htdataredirector": {
        "cmdline": [],
        "modules": [
            "htdataredirector",
            "htdataredirector.client",
            "htdataredirector.publishers",
            "htdataredirector.publishers.httppublisher",
            "htdataredirector.units",
            "htdataredirector.units.rfd21733",
            "htdataredirector.units.rfd21733.reader",
            "htdataredirector.units.rfd21733.registry",
            "htdataredirector.utils"
        ],
        "version": "0.3.1"
    },
    "htg": {
        "cmdline": [],
        "modules": [
            "htg",
            "htg.classes",
            "htg.classes.clean",
            "htg.classes.config",
            "htg.classes.index",
            "htg.classes.json",
            "htg.classes.resize",
            "htg.classes.resize_simple",
            "htg.classes.serve",
            "htg.commands",
            "htg.commands.album",
            "htg.commands.config",
            "htg.commands.groom",
            "htg.commands.index",
            "htg.commands.json",
            "htg.commands.resize",
            "htg.commands.util",
            "htg.defaults",
            "htg.htg",
            "htg.imaging",
            "htg.imaging.average",
            "htg.imaging.resize_im",
            "htg.imaging.resize_pil",
            "htg.imaging.resize_sips",
            "htg.meta_example",
            "htg.migrate",
            "htg.migrate.in2ex",
            "htg.models",
            "htg.utils",
            "htg.utils.aliased_group",
            "htg.utils.groom",
            "htg.utils.validate"
        ],
        "version": "0.6.0-beta"
    },
    "htk-io": {
        "cmdline": [
            "htk_io_get_label_map_leaf_macro_id_to_leaf_index.py",
            "htk_io_map_alignment_files.py",
            "htk_io_map_alignment_files_label_sublabel_to_leaf_macro_id.py"
        ],
        "modules": [
            "htk_io",
            "htk_io.alignment",
            "htk_io.base",
            "htk_io.hmgens_pdf",
            "htk_io.misc",
            "htk_io.ques",
            "htk_io.test_alignment",
            "htk_io.test_base",
            "htk_io.tree",
            "htk_io.vecseq"
        ],
        "version": "0.5"
    },
    "htmd": {
        "cmdline": [],
        "modules": [
            "htmd",
            "htmd.cli",
            "htmd.config",
            "htmd.site"
        ],
        "version": "1.5.0"
    },
    "htmdpro": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "html": {
        "cmdline": [],
        "modules": [
            "html"
        ],
        "version": "1.16"
    },
    "html-auto": {
        "cmdline": [],
        "modules": [
            "HTML",
            "HTML.Auto"
        ],
        "version": "0.0.3"
    },
    "html-codec": {
        "cmdline": [],
        "modules": [
            "html_codec"
        ],
        "version": "1.0.0"
    },
    "html-diff-wrapper": {
        "cmdline": [],
        "modules": [
            "html_diff_wrapper",
            "html_diff_wrapper.htmldiff",
            "html_diff_wrapper.htmldiff.htmldiff",
            "html_diff_wrapper.testing",
            "html_diff_wrapper.tests",
            "html_diff_wrapper.tests.test_htmldiff_wrapper"
        ],
        "version": "1.0"
    },
    "html-json-forms": {
        "cmdline": [],
        "modules": [
            "html_json_forms",
            "html_json_forms.serializers",
            "html_json_forms.utils"
        ],
        "version": "1.0.0"
    },
    "html-jumping": {
        "cmdline": [],
        "modules": [
            "html_jumping"
        ],
        "version": "0.2.4"
    },
    "html-linter": {
        "cmdline": [
            "html_lint.py"
        ],
        "modules": [
            "html_linter"
        ],
        "version": "0.4.0"
    },
    "html-minifier": {
        "cmdline": [],
        "modules": [
            "html_minifier",
            "html_minifier.minify",
            "html_minifier.test"
        ],
        "version": "0.0.4"
    },
    "html-nested-tables": {
        "cmdline": [],
        "modules": [
            "html_nested_tables",
            "html_nested_tables.base"
        ],
        "version": "0.2.0"
    },
    "html-parser": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "html-purifier": {
        "cmdline": [],
        "modules": [
            "purifier",
            "purifier.forms",
            "purifier.models",
            "purifier.purifier",
            "purifier.test"
        ],
        "version": "0.1.9"
    },
    "html-purifier3": {
        "cmdline": [],
        "modules": [
            "purifier",
            "purifier.forms",
            "purifier.models",
            "purifier.purifier",
            "purifier.test",
            "purifier.whitelist"
        ],
        "version": "2.1.0"
    },
    "html-sanitizer": {
        "cmdline": [],
        "modules": [
            "html_sanitizer",
            "html_sanitizer.django",
            "html_sanitizer.sanitizer",
            "html_sanitizer.tests"
        ],
        "version": "1.1.4"
    },
    "html-sanitizer-with-iframe": {
        "cmdline": [],
        "modules": [
            "html_sanitizer_with_iframe"
        ],
        "version": "0.1.0"
    },
    "html-table-extractor": {
        "cmdline": [],
        "modules": [
            "html_table_extractor",
            "html_table_extractor.extractor"
        ],
        "version": "1.3.0"
    },
    "html-table-parser": {
        "cmdline": [],
        "modules": [
            "html_table_parser",
            "html_table_parser.parser_functions",
            "html_table_parser.tests",
            "html_table_parser.tests.test_html_table_parser"
        ],
        "version": "0.1.0"
    },
    "html-telegraph-poster": {
        "cmdline": [],
        "modules": [
            "html_telegraph_poster",
            "html_telegraph_poster.html_to_telegraph"
        ],
        "version": "0.0.10"
    },
    "html-testrunner": {
        "cmdline": [],
        "modules": [
            "HtmlTestRunner",
            "HtmlTestRunner.result",
            "HtmlTestRunner.runner"
        ],
        "version": "1.0.3"
    },
    "html-text": {
        "cmdline": [],
        "modules": [
            "html_text",
            "html_text.html_text"
        ],
        "version": "0.1.1"
    },
    "html-to-text": {
        "cmdline": [],
        "modules": [
            "html_to_text",
            "html_to_text.parser"
        ],
        "version": "1.0.0"
    },
    "html-tree-diff": {
        "cmdline": [],
        "modules": [
            "htmltreediff",
            "htmltreediff.changes",
            "htmltreediff.cli",
            "htmltreediff.diff_core",
            "htmltreediff.edit_script_runner",
            "htmltreediff.html",
            "htmltreediff.test_html",
            "htmltreediff.test_main",
            "htmltreediff.test_text",
            "htmltreediff.test_util",
            "htmltreediff.test_xml",
            "htmltreediff.tests",
            "htmltreediff.text",
            "htmltreediff.util"
        ],
        "version": "0.1.2"
    },
    "html-wrapper": {
        "cmdline": [],
        "modules": [
            "html_wrapper",
            "html_wrapper.wrapper"
        ],
        "version": "0.1.3"
    },
    "html.py": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "html2bbcode": {
        "cmdline": [
            "html2bbcode"
        ],
        "modules": [
            "html2bbcode",
            "html2bbcode.parser"
        ],
        "version": "2.3.3"
    },
    "html2data": {
        "cmdline": [],
        "modules": [
            "html2data",
            "tests",
            "tests.test_parse",
            "tests.test_tree"
        ],
        "version": "0.4.3"
    },
    "html2docbook": {
        "cmdline": [],
        "modules": [
            "html2docbook",
            "html2docbook.tests",
            "html2docbook.tests.test_transformation"
        ],
        "version": "0.1"
    },
    "html2dt": {
        "cmdline": [],
        "modules": [
            "html2dt"
        ],
        "version": "1.1"
    },
    "html2hamlpy": {
        "cmdline": [],
        "modules": [
            "html2hamlpy",
            "html2hamlpy.html"
        ],
        "version": "0.11.3"
    },
    "html2json": {
        "cmdline": [],
        "modules": [
            "html2json",
            "html2json.html2json"
        ],
        "version": "0.1"
    },
    "html2latex": {
        "cmdline": [],
        "modules": [
            "html2latex",
            "html2latex.html2latex",
            "html2latex.setup_texenv",
            "html2latex.tests",
            "html2latex.tests.utils",
            "html2latex.tests.utils.images",
            "html2latex.tests.utils.test_image",
            "html2latex.tests.utils.test_spellchecker",
            "html2latex.tests.utils.test_text",
            "html2latex.tests.utils.test_text1",
            "html2latex.utils",
            "html2latex.utils.html_table",
            "html2latex.utils.image",
            "html2latex.utils.output_message",
            "html2latex.utils.spellchecker",
            "html2latex.utils.text",
            "html2latex.utils.unpack_merged_cells_in_table",
            "html2latex.webkit2png"
        ],
        "version": "0.0.76"
    },
    "html2list": {
        "cmdline": [],
        "modules": [
            "html2list",
            "html2list.html2list"
        ],
        "version": "0.1.6"
    },
    "html2markdown": {
        "cmdline": [],
        "modules": [
            "html2markdown"
        ],
        "version": "0.1.5"
    },
    "html2md": {
        "cmdline": [],
        "modules": [
            "html2md",
            "html2md.logbook",
            "html2md.main",
            "html2md.mobilizers",
            "html2md.mobilizers.instapaper",
            "html2md.mobilizers.mobilizer",
            "html2md.mobilizers.original"
        ],
        "version": "0.1.3"
    },
    "html2pdf": {
        "cmdline": [],
        "modules": [
            "html2pdf",
            "html2pdf.main",
            "html2pdf.tests"
        ],
        "version": "0.1"
    },
    "html2pdf-server": {
        "cmdline": [
            "html2pdfd.py"
        ],
        "modules": [
            "html2pdfd"
        ],
        "version": "1.2.2"
    },
    "html2rest": {
        "cmdline": [
            "html2rest"
        ],
        "modules": [
            "html2rest"
        ],
        "version": "0.2.2"
    },
    "html2shpaml": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "html2text": {
        "cmdline": [],
        "modules": [
            "html2text",
            "html2text.cli",
            "html2text.compat",
            "html2text.config",
            "html2text.utils",
            "test",
            "test.test_html2text",
            "test.test_memleak"
        ],
        "version": "2016.9.19"
    },
    "html2textile": {
        "cmdline": [],
        "modules": [
            "html2textile",
            "test"
        ],
        "version": "0.2"
    },
    "html5": {
        "cmdline": [],
        "modules": [
            "html5lib",
            "html5lib._ihatexml",
            "html5lib._inputstream",
            "html5lib._tokenizer",
            "html5lib._trie",
            "html5lib._trie._base",
            "html5lib._trie.datrie",
            "html5lib._trie.py",
            "html5lib._utils",
            "html5lib.constants",
            "html5lib.filters",
            "html5lib.filters.alphabeticalattributes",
            "html5lib.filters.base",
            "html5lib.filters.inject_meta_charset",
            "html5lib.filters.lint",
            "html5lib.filters.optionaltags",
            "html5lib.filters.sanitizer",
            "html5lib.filters.whitespace",
            "html5lib.html5parser",
            "html5lib.serializer",
            "html5lib.tests",
            "html5lib.tests.conftest",
            "html5lib.tests.sanitizer",
            "html5lib.tests.support",
            "html5lib.tests.test_encoding",
            "html5lib.tests.test_meta",
            "html5lib.tests.test_optionaltags_filter",
            "html5lib.tests.test_parser2",
            "html5lib.tests.test_sanitizer",
            "html5lib.tests.test_serializer",
            "html5lib.tests.test_stream",
            "html5lib.tests.test_treeadapters",
            "html5lib.tests.test_treewalkers",
            "html5lib.tests.test_whitespace_filter",
            "html5lib.tests.tokenizer",
            "html5lib.tests.tokenizertotree",
            "html5lib.tests.tree_construction",
            "html5lib.treeadapters",
            "html5lib.treeadapters.genshi",
            "html5lib.treeadapters.sax",
            "html5lib.treebuilders",
            "html5lib.treebuilders.base",
            "html5lib.treebuilders.dom",
            "html5lib.treebuilders.etree",
            "html5lib.treebuilders.etree_lxml",
            "html5lib.treewalkers",
            "html5lib.treewalkers.base",
            "html5lib.treewalkers.dom",
            "html5lib.treewalkers.etree",
            "html5lib.treewalkers.etree_lxml",
            "html5lib.treewalkers.genshi"
        ],
        "version": "0.0.9"
    },
    "html5charref": {
        "cmdline": [],
        "modules": [
            "html5charref"
        ],
        "version": "0.1.0"
    },
    "html5ever": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "html5forms": {
        "cmdline": [],
        "modules": [
            "html5forms",
            "html5forms.fields",
            "html5forms.models",
            "html5forms.tests",
            "html5forms.util",
            "html5forms.views",
            "html5forms.widgets"
        ],
        "version": "0.0.3"
    },
    "html5lib": {
        "cmdline": [],
        "modules": [
            "html5lib",
            "html5lib._ihatexml",
            "html5lib._inputstream",
            "html5lib._tokenizer",
            "html5lib._trie",
            "html5lib._trie._base",
            "html5lib._trie.datrie",
            "html5lib._trie.py",
            "html5lib._utils",
            "html5lib.constants",
            "html5lib.filters",
            "html5lib.filters.alphabeticalattributes",
            "html5lib.filters.base",
            "html5lib.filters.inject_meta_charset",
            "html5lib.filters.lint",
            "html5lib.filters.optionaltags",
            "html5lib.filters.sanitizer",
            "html5lib.filters.whitespace",
            "html5lib.html5parser",
            "html5lib.serializer",
            "html5lib.tests",
            "html5lib.tests.conftest",
            "html5lib.tests.sanitizer",
            "html5lib.tests.support",
            "html5lib.tests.test_encoding",
            "html5lib.tests.test_meta",
            "html5lib.tests.test_optionaltags_filter",
            "html5lib.tests.test_parser2",
            "html5lib.tests.test_sanitizer",
            "html5lib.tests.test_serializer",
            "html5lib.tests.test_stream",
            "html5lib.tests.test_treeadapters",
            "html5lib.tests.test_treewalkers",
            "html5lib.tests.test_whitespace_filter",
            "html5lib.tests.tokenizer",
            "html5lib.tests.tokenizertotree",
            "html5lib.tests.tree_construction",
            "html5lib.treeadapters",
            "html5lib.treeadapters.genshi",
            "html5lib.treeadapters.sax",
            "html5lib.treebuilders",
            "html5lib.treebuilders.base",
            "html5lib.treebuilders.dom",
            "html5lib.treebuilders.etree",
            "html5lib.treebuilders.etree_lxml",
            "html5lib.treewalkers",
            "html5lib.treewalkers.base",
            "html5lib.treewalkers.dom",
            "html5lib.treewalkers.etree",
            "html5lib.treewalkers.etree_lxml",
            "html5lib.treewalkers.genshi"
        ],
        "version": "1.0b10"
    },
    "html5lib-truncation": {
        "cmdline": [],
        "modules": [
            "html5lib_truncation",
            "html5lib_truncation.filters",
            "html5lib_truncation.shortcuts",
            "html5lib_truncation.utils",
            "tests",
            "tests.conftest",
            "tests.test_filters",
            "tests.test_utils"
        ],
        "version": "0.1.0"
    },
    "html5print": {
        "cmdline": [],
        "modules": [
            "html5print",
            "html5print.cssprint",
            "html5print.html5print",
            "html5print.jsprint",
            "html5print.utils"
        ],
        "version": "0.1.2"
    },
    "html5tidy": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "html5validator": {
        "cmdline": [],
        "modules": [
            "html5validator",
            "html5validator.cli",
            "html5validator.validator",
            "vnujar"
        ],
        "version": "0.2.7"
    },
    "html5witch": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.1"
    },
    "htmlark": {
        "cmdline": [],
        "modules": [
            "htmlark"
        ],
        "version": "1.0.0"
    },
    "htmlcolor": {
        "cmdline": [],
        "modules": [
            "htmlcolor",
            "htmlcolor.generate_names",
            "htmlcolor.names",
            "htmlcolor.parser"
        ],
        "version": "0.1"
    },
    "htmlcontact": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "htmlcssinclude": {
        "cmdline": [],
        "modules": [
            "HtmlCssInclude"
        ],
        "version": "0.1.2"
    },
    "htmlcutstr": {
        "cmdline": [],
        "modules": [
            "htmlcutstr"
        ],
        "version": "1.2.1"
    },
    "htmlcutstring": {
        "cmdline": [],
        "modules": [
            "htmlcutstring"
        ],
        "version": "1.1"
    },
    "htmldata": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "htmldeps": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "htmldiagnose": {
        "cmdline": [
            "HtmlDiagnose",
            "HtmlDiagnose.bat"
        ],
        "modules": [
            "HtmlDiagnose",
            "HtmlDiagnose.HtmlDiagnose"
        ],
        "version": "0.0.1"
    },
    "htmldiff": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "htmldom": {
        "cmdline": [],
        "modules": [
            "htmldom",
            "htmldom.htmldom"
        ],
        "version": "2.0"
    },
    "htmlement": {
        "cmdline": [],
        "modules": [
            "htmlement"
        ],
        "version": "0.2.3"
    },
    "htmlentities": {
        "cmdline": [],
        "modules": [
            "htmlentities",
            "tests",
            "tests.test_decoding",
            "tests.test_encoding"
        ],
        "version": "0.2.1"
    },
    "htmlentitiesdecode": {
        "cmdline": [
            "decodehtmlentities"
        ],
        "modules": [
            "htmlentitiesdecode"
        ],
        "version": "0.1.1"
    },
    "htmlentity2ascii": {
        "cmdline": [],
        "modules": [
            "htmlentity2ascii"
        ],
        "version": "1.0"
    },
    "htmlfilter": {
        "cmdline": [],
        "modules": [
            "htmlfilter",
            "htmlfilter.rules"
        ],
        "version": "0.2"
    },
    "htmlfun": {
        "cmdline": [],
        "modules": [
            "htmlfun",
            "htmlfun.core",
            "htmlfun.elements"
        ],
        "version": "0.1.0"
    },
    "htmlgen": {
        "cmdline": [],
        "modules": [
            "htmlgen",
            "htmlgen.attribute",
            "htmlgen.block",
            "htmlgen.document",
            "htmlgen.element",
            "htmlgen.form",
            "htmlgen.generator",
            "htmlgen.image",
            "htmlgen.inline",
            "htmlgen.link",
            "htmlgen.list",
            "htmlgen.structure",
            "htmlgen.table",
            "htmlgen.time",
            "htmlgen.timeutil",
            "test_htmlgen",
            "test_htmlgen.attribute",
            "test_htmlgen.block",
            "test_htmlgen.document",
            "test_htmlgen.element",
            "test_htmlgen.form",
            "test_htmlgen.generator",
            "test_htmlgen.image",
            "test_htmlgen.inline",
            "test_htmlgen.link",
            "test_htmlgen.list",
            "test_htmlgen.structure",
            "test_htmlgen.table",
            "test_htmlgen.time",
            "test_htmlgen.util"
        ],
        "version": "0.9"
    },
    "htmlgenerate": {
        "cmdline": [],
        "modules": [
            "htmlgenerate"
        ],
        "version": "0.01"
    },
    "htmlgrab": {
        "cmdline": [],
        "modules": [
            "htmlgrab",
            "htmlgrab.bin",
            "htmlgrab.bin.html-grab",
            "htmlgrab.core"
        ],
        "version": "0.0.3-alpha"
    },
    "htmlize": {
        "cmdline": [],
        "modules": [
            "htmlize",
            "htmlize.command",
            "htmlize.compat",
            "htmlize.tests",
            "htmlize.tests.test_detect"
        ],
        "version": "0.2.2"
    },
    "htmllaundry": {
        "cmdline": [],
        "modules": [
            "htmllaundry",
            "htmllaundry.cleaners",
            "htmllaundry.tests",
            "htmllaundry.utils",
            "htmllaundry.z3cform"
        ],
        "version": "2.1"
    },
    "htmllintbear": {
        "cmdline": [],
        "modules": [
            "coalaHTMLLintBear",
            "coalaHTMLLintBear.HTMLLintBear"
        ],
        "version": "0.10.0"
    },
    "htmllist": {
        "cmdline": [
            "htmlist"
        ],
        "modules": [
            "htmllist",
            "htmllist.algo_dict",
            "htmllist.break_html_page",
            "htmllist.break_html_page2",
            "htmllist.break_page_base",
            "htmllist.break_page_seq",
            "htmllist.htmllist_base",
            "htmllist.htmllist_break",
            "htmllist.htmllist_demo",
            "htmllist.htmllist_summary",
            "htmllist.pattern_quality",
            "htmllist.pysuffix_tools",
            "htmllist.repeat_pattern",
            "htmllist.repeat_pattern2",
            "htmllist.repeat_pattern3",
            "htmllist.repeat_pattern_base",
            "htmllist.repeat_pattern_suffix",
            "htmllist.repeat_title",
            "htmllist.tag_tools",
            "htmllist.test",
            "htmllist.test.profile",
            "htmllist.test.regression_tests",
            "htmllist.utills"
        ],
        "version": "2.2.2"
    },
    "htmlmaker": {
        "cmdline": [],
        "modules": [
            "htmlmaker"
        ],
        "version": "0.0.1.dev0"
    },
    "htmlmeta-hub": {
        "cmdline": [],
        "modules": [
            "htmlmeta_hub",
            "htmlmeta_hub.pylons_helpers",
            "htmlmeta_hub.pyramid_helpers"
        ],
        "version": "0.1.2"
    },
    "htmlmin": {
        "cmdline": [],
        "modules": [
            "htmlmin",
            "htmlmin.command",
            "htmlmin.decorator",
            "htmlmin.escape",
            "htmlmin.main",
            "htmlmin.middleware",
            "htmlmin.parser"
        ],
        "version": "0.1.10"
    },
    "htmlminifier": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "htmlnode": {
        "cmdline": [],
        "modules": [
            "html_node",
            "html_node.tags",
            "html_node.templates",
            "html_node.tests",
            "html_node.utils"
        ],
        "version": "0.1.8"
    },
    "htmlol": {
        "cmdline": [],
        "modules": [
            "htmlol"
        ],
        "version": "1.0"
    },
    "htmloverpdf": {
        "cmdline": [],
        "modules": [
            "htmloverpdf"
        ],
        "version": "0.0.1b2"
    },
    "htmlparser": {
        "cmdline": [],
        "modules": [
            "HTMLParser"
        ],
        "version": "0.0.2"
    },
    "htmlpetrol": {
        "cmdline": [],
        "modules": [
            "htmlpetrol",
            "htmlpetrol.render"
        ],
        "version": "0.3-2"
    },
    "htmlpretty": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "htmlpurifier": {
        "cmdline": [],
        "modules": [
            "htmlpurifier",
            "htmlpurifier.__version__",
            "htmlpurifier.fields",
            "htmlpurifier.models",
            "htmlpurifier.purify",
            "htmlpurifier.tests",
            "htmlpurifier.views"
        ],
        "version": "1.0.1"
    },
    "htmlpy": {
        "cmdline": [],
        "modules": [
            "htmlPy",
            "htmlPy.app_gui",
            "htmlPy.base_gui",
            "htmlPy.descriptors",
            "htmlPy.gui_helper",
            "htmlPy.settings",
            "htmlPy.web_app_gui"
        ],
        "version": "2.0.3"
    },
    "htmlpyever": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0.post3"
    },
    "htmls": {
        "cmdline": [],
        "modules": [
            "htmls"
        ],
        "version": "1.0.0"
    },
    "htmlserver": {
        "cmdline": [],
        "modules": [
            "htmlserver",
            "htmlserver._README",
            "htmlserver.main"
        ],
        "version": "2010.02.07.appengine"
    },
    "htmltag": {
        "cmdline": [],
        "modules": [
            "htmltag"
        ],
        "version": "1.7"
    },
    "htmltemplate": {
        "cmdline": [],
        "modules": [
            "htmltemplate"
        ],
        "version": "2.2.0"
    },
    "htmltestrunner": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "htmltopdf": {
        "cmdline": [],
        "modules": [
            "htmltopdf",
            "htmltopdf.wkhtmltopdf",
            "tests",
            "tests.test_htmltopdf"
        ],
        "version": "0.1.1"
    },
    "htmltotext": {
        "cmdline": [],
        "modules": [
            "configutils",
            "configutils.build",
            "configutils.config",
            "test",
            "test.test"
        ],
        "version": "0.7.3"
    },
    "htmltoword": {
        "cmdline": [],
        "modules": [
            "HtmlToWord",
            "HtmlToWord.elements",
            "HtmlToWord.elements.Base",
            "HtmlToWord.elements.Headings",
            "HtmlToWord.elements.List",
            "HtmlToWord.elements.Misc",
            "HtmlToWord.elements.Specials",
            "HtmlToWord.elements.Table",
            "HtmlToWord.elements.Text",
            "HtmlToWord.elements.styles",
            "HtmlToWord.groups",
            "HtmlToWord.parser"
        ],
        "version": "0.6.1"
    },
    "htmltransform": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "htmlutils": {
        "cmdline": [],
        "modules": [
            "htmlutils",
            "htmlutils.html"
        ],
        "version": "0.1.2"
    },
    "htmlwrite": {
        "cmdline": [],
        "modules": [
            "htmlwrite"
        ],
        "version": "0.5.0"
    },
    "htmq": {
        "cmdline": [
            "ez_setup.py"
        ],
        "modules": [
            "htmq",
            "htmq.html_parser",
            "htmq.html_parser_debugger",
            "htmq.html_query",
            "htmq.stack",
            "htmq.version"
        ],
        "version": "1.0.0"
    },
    "htop": {
        "cmdline": [],
        "modules": [
            "htop",
            "htop.htop",
            "htop.test",
            "htop.test.htop-tests"
        ],
        "version": "1.0"
    },
    "htp-client": {
        "cmdline": [],
        "modules": [
            "htpclient",
            "htpclient.htp_controller",
            "htpclient.main",
            "htpclient.test_engine",
            "htpclient.web_client"
        ],
        "version": "0.5.3"
    },
    "htpasswd": {
        "cmdline": [],
        "modules": [
            "htpasswd",
            "htpasswd.basic",
            "htpasswd.group"
        ],
        "version": "2.3"
    },
    "htpasswd-cli": {
        "cmdline": [],
        "modules": [
            "htpasswdcli",
            "htpasswdcli.cli"
        ],
        "version": "0.1.3"
    },
    "htpc-launcher": {
        "cmdline": [],
        "modules": [
            "htpclauncher",
            "htpclauncher.app",
            "htpclauncher.command",
            "htpclauncher.config",
            "htpclauncher.irreader",
            "htpclauncher.ostools",
            "htpclauncher.processManager",
            "htpclauncher.socketreader"
        ],
        "version": "1.1.0"
    },
    "htpicker": {
        "cmdline": [],
        "modules": [
            "htpicker",
            "htpicker.browser",
            "htpicker.config",
            "htpicker.handler",
            "htpicker.inotify",
            "htpicker.joystick",
            "htpicker.lirc"
        ],
        "version": "0.1.3"
    },
    "htptimeclient": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "htpwd": {
        "cmdline": [],
        "modules": [
            "htpwd",
            "htpwd.htpwd",
            "htpwd.tests",
            "htpwd.tests.functional_tests",
            "htpwd.tests.unittests"
        ],
        "version": "0.1.2a"
    },
    "htq": {
        "cmdline": [],
        "modules": [
            "htq",
            "htq.api",
            "htq.db",
            "htq.service",
            "htq.utils"
        ],
        "version": "0.1.0"
    },
    "htrc": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.22"
    },
    "htrc-feature-reader": {
        "cmdline": [],
        "modules": [
            "htrc_features",
            "htrc_features.feature_downloader",
            "htrc_features.feature_reader",
            "htrc_features.representations",
            "htrc_features.utils"
        ],
        "version": "1.92"
    },
    "htredirect": {
        "cmdline": [],
        "modules": [
            "htredirect",
            "htredirect.htredirect"
        ],
        "version": "0.01"
    },
    "hts": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hts-engine-python": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hts-waterworks": {
        "cmdline": [],
        "modules": [
            "hts_waterworks",
            "hts_waterworks.annotation",
            "hts_waterworks.bootstrap",
            "hts_waterworks.call_peaks",
            "hts_waterworks.clip_seq",
            "hts_waterworks.mapping",
            "hts_waterworks.motif_discovery",
            "hts_waterworks.pas_seq",
            "hts_waterworks.preprocessing",
            "hts_waterworks.visualize"
        ],
        "version": "0.1"
    },
    "htsengine": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.4"
    },
    "htseq": {
        "cmdline": [],
        "modules": [
            "HTSeq",
            "HTSeq._HTSeq_internal",
            "HTSeq._version",
            "HTSeq.scripts",
            "HTSeq.scripts.count",
            "HTSeq.scripts.qa"
        ],
        "version": "0.7.2"
    },
    "htseq-arm-linux": {
        "cmdline": [],
        "modules": [
            "HTSeq",
            "HTSeq.StepVector",
            "HTSeq._HTSeq",
            "HTSeq._HTSeq_internal",
            "HTSeq._StepVector",
            "HTSeq._version",
            "HTSeq.scripts",
            "HTSeq.scripts.count",
            "HTSeq.scripts.qa"
        ],
        "version": "0.6.1"
    },
    "htsget": {
        "cmdline": [],
        "modules": [
            "htsget",
            "htsget._version",
            "htsget.cli",
            "htsget.exceptions",
            "htsget.io",
            "htsget.protocol"
        ],
        "version": "0.1.2"
    },
    "htsint": {
        "cmdline": [],
        "modules": [
            "htsint",
            "htsint.AssembleDistances",
            "htsint.Configure",
            "htsint.GeneDistances",
            "htsint.GeneOntology",
            "htsint.GeneSet",
            "htsint.GeneSetCollection",
            "htsint.InnerJoinExample",
            "htsint.RunSubprocess",
            "htsint.TaxaSummary",
            "htsint.TermDistances",
            "htsint.basedir",
            "htsint.version"
        ],
        "version": "0.5.2"
    },
    "htsql": {
        "cmdline": [],
        "modules": [
            "htsql",
            "htsql.core",
            "htsql.core.adapter",
            "htsql.core.addon",
            "htsql.core.application",
            "htsql.core.cache",
            "htsql.core.classify",
            "htsql.core.cmd",
            "htsql.core.cmd.act",
            "htsql.core.cmd.command",
            "htsql.core.cmd.embed",
            "htsql.core.cmd.fetch",
            "htsql.core.cmd.summon",
            "htsql.core.connect",
            "htsql.core.context",
            "htsql.core.domain",
            "htsql.core.entity",
            "htsql.core.error",
            "htsql.core.fmt",
            "htsql.core.fmt.accept",
            "htsql.core.fmt.emit",
            "htsql.core.fmt.format",
            "htsql.core.fmt.html",
            "htsql.core.fmt.json",
            "htsql.core.fmt.tabular",
            "htsql.core.fmt.text",
            "htsql.core.fmt.xml",
            "htsql.core.introspect",
            "htsql.core.model",
            "htsql.core.split_sql",
            "htsql.core.syn",
            "htsql.core.syn.decode",
            "htsql.core.syn.grammar",
            "htsql.core.syn.parse",
            "htsql.core.syn.scan",
            "htsql.core.syn.syntax",
            "htsql.core.syn.token",
            "htsql.core.tr",
            "htsql.core.tr.assemble",
            "htsql.core.tr.bind",
            "htsql.core.tr.binding",
            "htsql.core.tr.coerce",
            "htsql.core.tr.compile",
            "htsql.core.tr.decorate",
            "htsql.core.tr.dump",
            "htsql.core.tr.encode",
            "htsql.core.tr.flow",
            "htsql.core.tr.fn",
            "htsql.core.tr.fn.assemble",
            "htsql.core.tr.fn.bind",
            "htsql.core.tr.fn.dump",
            "htsql.core.tr.fn.encode",
            "htsql.core.tr.fn.reduce",
            "htsql.core.tr.fn.rewrite",
            "htsql.core.tr.fn.signature",
            "htsql.core.tr.frame",
            "htsql.core.tr.lookup",
            "htsql.core.tr.plan",
            "htsql.core.tr.reduce",
            "htsql.core.tr.rewrite",
            "htsql.core.tr.signature",
            "htsql.core.tr.stitch",
            "htsql.core.tr.term",
            "htsql.core.util",
            "htsql.core.validator",
            "htsql.core.wsgi",
            "htsql.ctl",
            "htsql.ctl.default",
            "htsql.ctl.error",
            "htsql.ctl.extension",
            "htsql.ctl.help",
            "htsql.ctl.option",
            "htsql.ctl.regress",
            "htsql.ctl.request",
            "htsql.ctl.routine",
            "htsql.ctl.script",
            "htsql.ctl.server",
            "htsql.ctl.shell",
            "htsql.ctl.version",
            "htsql.tweak",
            "htsql.tweak.autolimit",
            "htsql.tweak.autolimit.encode",
            "htsql.tweak.cors",
            "htsql.tweak.cors.wsgi",
            "htsql.tweak.csrf",
            "htsql.tweak.csrf.wsgi",
            "htsql.tweak.django",
            "htsql.tweak.django.connect",
            "htsql.tweak.django.introspect",
            "htsql.tweak.etl",
            "htsql.tweak.etl.cmd",
            "htsql.tweak.etl.cmd.command",
            "htsql.tweak.etl.cmd.delete",
            "htsql.tweak.etl.cmd.do",
            "htsql.tweak.etl.cmd.insert",
            "htsql.tweak.etl.cmd.merge",
            "htsql.tweak.etl.cmd.summon",
            "htsql.tweak.etl.cmd.truncate",
            "htsql.tweak.etl.cmd.update",
            "htsql.tweak.etl.tr",
            "htsql.tweak.etl.tr.dump",
            "htsql.tweak.filedb",
            "htsql.tweak.filedb.connect",
            "htsql.tweak.filedb.introspect",
            "htsql.tweak.gateway",
            "htsql.tweak.gateway.command",
            "htsql.tweak.hello",
            "htsql.tweak.inet",
            "htsql.tweak.inet.bind",
            "htsql.tweak.inet.coerce",
            "htsql.tweak.inet.domain",
            "htsql.tweak.inet.encode",
            "htsql.tweak.inet.signature",
            "htsql.tweak.meta",
            "htsql.tweak.meta.command",
            "htsql.tweak.meta.slave",
            "htsql.tweak.meta.slave.connect",
            "htsql.tweak.override",
            "htsql.tweak.override.classify",
            "htsql.tweak.override.introspect",
            "htsql.tweak.override.pattern",
            "htsql.tweak.pool",
            "htsql.tweak.pool.connect",
            "htsql.tweak.resource",
            "htsql.tweak.resource.locate",
            "htsql.tweak.resource.wsgi",
            "htsql.tweak.shell",
            "htsql.tweak.shell.command",
            "htsql.tweak.shell.default",
            "htsql.tweak.shell.default.act",
            "htsql.tweak.shell.locate",
            "htsql.tweak.sqlalchemy",
            "htsql.tweak.sqlalchemy.connect",
            "htsql.tweak.sqlalchemy.introspect",
            "htsql.tweak.system",
            "htsql.tweak.timeout",
            "htsql_sqlite",
            "htsql_sqlite.core",
            "htsql_sqlite.core.connect",
            "htsql_sqlite.core.introspect",
            "htsql_sqlite.core.split_sql",
            "htsql_sqlite.core.tr",
            "htsql_sqlite.core.tr.compile",
            "htsql_sqlite.core.tr.dump",
            "htsql_sqlite.core.tr.signature",
            "sphinxcontrib",
            "sphinxcontrib.htsqldoc",
            "sphinxcontrib.texdiag"
        ],
        "version": "2.3.3"
    },
    "htsql-django": {
        "cmdline": [],
        "modules": [
            "htsql_django",
            "htsql_django.urls",
            "htsql_django.views"
        ],
        "version": "2.3.3"
    },
    "htsql-excel": {
        "cmdline": [],
        "modules": [
            "htsql_excel"
        ],
        "version": "0.1.1"
    },
    "htsql-mssql": {
        "cmdline": [],
        "modules": [
            "htsql_mssql",
            "htsql_mssql.core",
            "htsql_mssql.core.connect",
            "htsql_mssql.core.introspect",
            "htsql_mssql.core.split_sql",
            "htsql_mssql.core.tr",
            "htsql_mssql.core.tr.compile",
            "htsql_mssql.core.tr.dump",
            "htsql_mssql.core.tr.encode",
            "htsql_mssql.core.tr.reduce"
        ],
        "version": "2.3.3"
    },
    "htsql-mysql": {
        "cmdline": [],
        "modules": [
            "htsql_mysql",
            "htsql_mysql.core",
            "htsql_mysql.core.connect",
            "htsql_mysql.core.introspect",
            "htsql_mysql.core.split_sql",
            "htsql_mysql.core.tr",
            "htsql_mysql.core.tr.compile",
            "htsql_mysql.core.tr.dump",
            "htsql_mysql.core.tr.reduce",
            "htsql_mysql.core.tr.signature"
        ],
        "version": "2.3.3"
    },
    "htsql-oracle": {
        "cmdline": [],
        "modules": [
            "htsql_oracle",
            "htsql_oracle.core",
            "htsql_oracle.core.connect",
            "htsql_oracle.core.introspect",
            "htsql_oracle.core.split_sql",
            "htsql_oracle.core.tr",
            "htsql_oracle.core.tr.compile",
            "htsql_oracle.core.tr.dump",
            "htsql_oracle.core.tr.lookup",
            "htsql_oracle.core.tr.reduce",
            "htsql_oracle.core.tr.rewrite",
            "htsql_oracle.core.tr.signature"
        ],
        "version": "2.3.3"
    },
    "htsql-pgsql": {
        "cmdline": [],
        "modules": [
            "htsql_pgsql",
            "htsql_pgsql.core",
            "htsql_pgsql.core.connect",
            "htsql_pgsql.core.introspect",
            "htsql_pgsql.core.split_sql",
            "htsql_pgsql.core.tr",
            "htsql_pgsql.core.tr.dump",
            "htsql_pgsql.tweak",
            "htsql_pgsql.tweak.inet",
            "htsql_pgsql.tweak.inet.dump",
            "htsql_pgsql.tweak.inet.introspect",
            "htsql_pgsql.tweak.system",
            "htsql_pgsql.tweak.system.introspect",
            "htsql_pgsql.tweak.timeout",
            "htsql_pgsql.tweak.timeout.connect"
        ],
        "version": "2.3.3"
    },
    "httm": {
        "cmdline": [
            "electron_flux_single_ccd_ffi_to_simulated_raw",
            "raw_single_ccd_ffi_to_calibrated_electron_flux"
        ],
        "modules": [
            "httm",
            "httm.data_structures",
            "httm.data_structures.common",
            "httm.data_structures.documentation",
            "httm.data_structures.electron_flux_converter",
            "httm.data_structures.metadata",
            "httm.data_structures.raw_converter",
            "httm.fits_utilities",
            "httm.fits_utilities.electron_flux_fits",
            "httm.fits_utilities.header_tools",
            "httm.fits_utilities.raw_fits",
            "httm.resource_utilities",
            "httm.system",
            "httm.system.command_line",
            "httm.system.command_line.metadata",
            "httm.system.config_file",
            "httm.transformations",
            "httm.transformations.common",
            "httm.transformations.constants",
            "httm.transformations.electron_flux_converters_to_raw",
            "httm.transformations.electron_flux_slices_to_raw",
            "httm.transformations.metadata",
            "httm.transformations.raw_converters_to_calibrated",
            "httm.transformations.raw_slices_to_calibrated"
        ],
        "version": "0.2.2"
    },
    "httmock": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.6"
    },
    "http": {
        "cmdline": [],
        "modules": [
            "http",
            "http.date",
            "http.exception",
            "http.headers",
            "http.request",
            "http.response",
            "http.url"
        ],
        "version": "0.02"
    },
    "http-api-exporter": {
        "cmdline": [],
        "modules": [
            "http_api_exporter",
            "http_api_exporter.Handler",
            "http_api_exporter.Log_helper"
        ],
        "version": "0.1.4"
    },
    "http-butler": {
        "cmdline": [],
        "modules": [
            "butler",
            "butler.__version__",
            "butler.butler",
            "butler.butler_function",
            "butler.client",
            "butler.server"
        ],
        "version": "0.4.0"
    },
    "http-checks": {
        "cmdline": [],
        "modules": [
            "httpchecks",
            "httpchecks.httpcheck"
        ],
        "version": "0.2.0"
    },
    "http-cmd": {
        "cmdline": [],
        "modules": [
            "httpcmd",
            "httpcmd.app",
            "httpcmd.cli",
            "httpcmd.cmd"
        ],
        "version": "0.1"
    },
    "http-crawler": {
        "cmdline": [],
        "modules": [
            "http_crawler"
        ],
        "version": "0.1.5"
    },
    "http-dumper": {
        "cmdline": [
            "http_dumper"
        ],
        "modules": [
            "http_dumper",
            "http_dumper.wsgi"
        ],
        "version": "0.4"
    },
    "http-ece": {
        "cmdline": [],
        "modules": [
            "http_ece"
        ],
        "version": "1.0.1"
    },
    "http-here": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "http-hmac-python": {
        "cmdline": [],
        "modules": [
            "httphmac",
            "httphmac.base_signer",
            "httphmac.compat",
            "httphmac.request",
            "httphmac.v1",
            "httphmac.v2"
        ],
        "version": "2.4.0"
    },
    "http-lazy-headers": {
        "cmdline": [],
        "modules": [
            "http_lazy_headers",
            "http_lazy_headers.collections_",
            "http_lazy_headers.exceptions",
            "http_lazy_headers.fields",
            "http_lazy_headers.fields.accept",
            "http_lazy_headers.fields.accept_charset",
            "http_lazy_headers.fields.accept_encoding",
            "http_lazy_headers.fields.accept_language",
            "http_lazy_headers.fields.accept_ranges",
            "http_lazy_headers.fields.age",
            "http_lazy_headers.fields.allow",
            "http_lazy_headers.fields.authorization",
            "http_lazy_headers.fields.cache_control",
            "http_lazy_headers.fields.connection",
            "http_lazy_headers.fields.content_disposition",
            "http_lazy_headers.fields.content_encoding",
            "http_lazy_headers.fields.content_language",
            "http_lazy_headers.fields.content_length",
            "http_lazy_headers.fields.content_location",
            "http_lazy_headers.fields.content_range",
            "http_lazy_headers.fields.content_type",
            "http_lazy_headers.fields.cookie",
            "http_lazy_headers.fields.custom",
            "http_lazy_headers.fields.date",
            "http_lazy_headers.fields.etag",
            "http_lazy_headers.fields.expect",
            "http_lazy_headers.fields.expires",
            "http_lazy_headers.fields.from_",
            "http_lazy_headers.fields.host",
            "http_lazy_headers.fields.if_match",
            "http_lazy_headers.fields.if_modified_since",
            "http_lazy_headers.fields.if_none_match",
            "http_lazy_headers.fields.if_range",
            "http_lazy_headers.fields.if_unmodified_since",
            "http_lazy_headers.fields.last_modified",
            "http_lazy_headers.fields.location",
            "http_lazy_headers.fields.max_forwards",
            "http_lazy_headers.fields.pragma",
            "http_lazy_headers.fields.range",
            "http_lazy_headers.fields.referer",
            "http_lazy_headers.fields.retry_after",
            "http_lazy_headers.fields.server",
            "http_lazy_headers.fields.set_cookie",
            "http_lazy_headers.fields.te",
            "http_lazy_headers.fields.trailer",
            "http_lazy_headers.fields.transfer_encoding",
            "http_lazy_headers.fields.upgrade",
            "http_lazy_headers.fields.user_agent",
            "http_lazy_headers.fields.vary",
            "http_lazy_headers.fields.via",
            "http_lazy_headers.fields.warning",
            "http_lazy_headers.fields.www_authenticate",
            "http_lazy_headers.settings",
            "http_lazy_headers.shared",
            "http_lazy_headers.shared.ascii_tools",
            "http_lazy_headers.shared.bases",
            "http_lazy_headers.shared.checkers",
            "http_lazy_headers.shared.cleaners",
            "http_lazy_headers.shared.constraints",
            "http_lazy_headers.shared.cookies",
            "http_lazy_headers.shared.dates",
            "http_lazy_headers.shared.helpers",
            "http_lazy_headers.shared.language_tags",
            "http_lazy_headers.shared.parameters",
            "http_lazy_headers.shared.parsers",
            "http_lazy_headers.shared.quality",
            "http_lazy_headers.shared.values",
            "http_lazy_headers.shared.values.charsets",
            "http_lazy_headers.shared.values.disposition",
            "http_lazy_headers.shared.values.encodings",
            "http_lazy_headers.shared.values.media_types",
            "http_lazy_headers.shared.values.methods",
            "http_lazy_headers.shared.values.ranges",
            "http_lazy_headers.wsgi",
            "tests",
            "tests.tests_fields"
        ],
        "version": "0.1.dev0"
    },
    "http-parser": {
        "cmdline": [],
        "modules": [
            "http_parser",
            "http_parser._socketio",
            "http_parser.http",
            "http_parser.pyparser",
            "http_parser.reader",
            "http_parser.util"
        ],
        "version": "0.8.3"
    },
    "http-prompt": {
        "cmdline": [],
        "modules": [
            "http_prompt",
            "http_prompt.cli",
            "http_prompt.completer",
            "http_prompt.completion",
            "http_prompt.config",
            "http_prompt.context",
            "http_prompt.context.transform",
            "http_prompt.contextio",
            "http_prompt.defaultconfig",
            "http_prompt.execution",
            "http_prompt.lexer",
            "http_prompt.options",
            "http_prompt.ordereddict",
            "http_prompt.output",
            "http_prompt.tree",
            "http_prompt.utils",
            "http_prompt.xdg"
        ],
        "version": "0.10.1"
    },
    "http-request": {
        "cmdline": [],
        "modules": [
            "http_request"
        ],
        "version": "1.2"
    },
    "http-request-randomizer": {
        "cmdline": [],
        "modules": [
            "http_request_randomizer",
            "http_request_randomizer.requests",
            "http_request_randomizer.requests.errors",
            "http_request_randomizer.requests.errors.ParserExceptions",
            "http_request_randomizer.requests.errors.ProxyListException",
            "http_request_randomizer.requests.parsers",
            "http_request_randomizer.requests.parsers.FreeProxyParser",
            "http_request_randomizer.requests.parsers.ProxyForEuParser",
            "http_request_randomizer.requests.parsers.RebroWeeblyParser",
            "http_request_randomizer.requests.parsers.SamairProxyParser",
            "http_request_randomizer.requests.parsers.UrlParser",
            "http_request_randomizer.requests.proxy",
            "http_request_randomizer.requests.proxy.requestProxy",
            "http_request_randomizer.requests.useragent",
            "http_request_randomizer.requests.useragent.userAgent",
            "http_request_randomizer.rest",
            "http_request_randomizer.rest.proxylist"
        ],
        "version": "1.0.4"
    },
    "http-server-livereload": {
        "cmdline": [],
        "modules": [
            "http_server_livereload"
        ],
        "version": "1.1.0"
    },
    "http-signature": {
        "cmdline": [],
        "modules": [
            "http_signature",
            "http_signature._version",
            "http_signature.requests_auth",
            "http_signature.sign",
            "http_signature.utils"
        ],
        "version": "0.1.4"
    },
    "http-status": {
        "cmdline": [],
        "modules": [
            "http_status",
            "http_status.six",
            "http_status.test_http_status"
        ],
        "version": "1.0.0"
    },
    "http1": {
        "cmdline": [],
        "modules": [
            "http1",
            "http1.http1",
            "http1.test_http1"
        ],
        "version": "1.0.1"
    },
    "http11": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "http2": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "http4store": {
        "cmdline": [],
        "modules": [
            "HTTP4Store",
            "HTTP4Store.HTTP4Store",
            "HTTP4Store.sparql_response",
            "HTTP4Store.utils"
        ],
        "version": "0.3.1"
    },
    "httpagentparser": {
        "cmdline": [],
        "modules": [
            "httpagentparser",
            "httpagentparser.more"
        ],
        "version": "1.7.8"
    },
    "httpappengine": {
        "cmdline": [],
        "modules": [
            "httpappengine",
            "httpappengine.aetest",
            "httpappengine.decorator",
            "httpappengine.engine",
            "httpappengine.engine.config",
            "httpappengine.engine.debug",
            "httpappengine.engine.driver",
            "httpappengine.engine.driver.engine_default",
            "httpappengine.engine.driver.engine_werkzeug",
            "httpappengine.engine.driver.parser_default",
            "httpappengine.engine.driver.router_default",
            "httpappengine.engine.interface",
            "httpappengine.engine.parser",
            "httpappengine.engine.router",
            "httpappengine.engine.scheduler",
            "httpappengine.engine.server",
            "httpappengine.engine.signaler",
            "httpappengine.engine.support",
            "httpappengine.engine.util",
            "httpappengine.helper",
            "httpappengine.util"
        ],
        "version": "0.3.4"
    },
    "httpauth": {
        "cmdline": [],
        "modules": [
            "httpauth"
        ],
        "version": "0.3"
    },
    "httpbenchmark": {
        "cmdline": [],
        "modules": [
            "httpbenchmark",
            "httpbenchmark.benchmark",
            "httpbenchmark.fake"
        ],
        "version": "0.5"
    },
    "httpbin": {
        "cmdline": [],
        "modules": [
            "httpbin",
            "httpbin.core",
            "httpbin.filters",
            "httpbin.helpers",
            "httpbin.structures",
            "httpbin.utils"
        ],
        "version": "0.5.0"
    },
    "httpbl": {
        "cmdline": [],
        "modules": [
            "httpbl",
            "httpbl.httpbl"
        ],
        "version": "0.0.3"
    },
    "httpcache": {
        "cmdline": [],
        "modules": [
            "httpcache",
            "httpcache.adapter",
            "httpcache.cache",
            "httpcache.compat",
            "httpcache.structures",
            "httpcache.utils"
        ],
        "version": "0.1.3"
    },
    "httpcachepurger": {
        "cmdline": [],
        "modules": [
            "httpcachepurger",
            "httpcachepurger.cmdline",
            "httpcachepurger.purger"
        ],
        "version": "0.2"
    },
    "httpcap": {
        "cmdline": [],
        "modules": [
            "httpcap",
            "httpcap.cleanups",
            "httpcap.config",
            "httpcap.constant",
            "httpcap.content_utils",
            "httpcap.httpparser",
            "httpcap.link_layer",
            "httpcap.live_cap",
            "httpcap.packet_parser",
            "httpcap.parse_pcap",
            "httpcap.pcap",
            "httpcap.pcap_wrapper",
            "httpcap.pcapng",
            "httpcap.printer",
            "httpcap.reader",
            "httpcap.tcp_assembly",
            "pcappy_port",
            "pcappy_port.constants",
            "pcappy_port.functions",
            "pcappy_port.types"
        ],
        "version": "0.7.9"
    },
    "httpcat": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "httpcli": {
        "cmdline": [],
        "modules": [
            "httpcli",
            "httpcli.cli",
            "httpcli.client",
            "httpcli.content",
            "httpcli.core",
            "httpcli.output"
        ],
        "version": "1.3.0"
    },
    "httpclient": {
        "cmdline": [],
        "modules": [
            "httpclient",
            "httpclient.httpclient",
            "httpclient.httpcore",
            "httpclient_test",
            "httpclient_test.functionaltest",
            "httpclient_test.functionaltest.httpclient_test",
            "httpclient_test.functionaltest.server",
            "httpclient_test.unittest",
            "httpclient_test.unittest.httpclient_test",
            "httpclient_test.unittest.httpcore_test"
        ],
        "version": "0.0.2"
    },
    "httpcode": {
        "cmdline": [],
        "modules": [
            "httpcode"
        ],
        "version": "0.6"
    },
    "httpd-echo": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "httpdebug": {
        "cmdline": [],
        "modules": [
            "httpdebug"
        ],
        "version": "30"
    },
    "httpdec": {
        "cmdline": [],
        "modules": [
            "httpdec",
            "httpdec.decode",
            "httpdec.main"
        ],
        "version": "0.0.4"
    },
    "httpdns": {
        "cmdline": [],
        "modules": [
            "httpdns"
        ],
        "version": "0.1.0"
    },
    "httpdo": {
        "cmdline": [],
        "modules": [],
        "version": "0.3"
    },
    "httpdrun": {
        "cmdline": [],
        "modules": [
            "httpdrun",
            "httpdrun.install_service",
            "httpdrun.uninstall_service",
            "httpdrun.win",
            "httpdrun.win.services",
            "httpdrun.yaptu"
        ],
        "version": "0.2.2"
    },
    "httpeek": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "httpencode": {
        "cmdline": [],
        "modules": [
            "httpencode",
            "httpencode.api",
            "httpencode.bsoupfilter",
            "httpencode.etree",
            "httpencode.form",
            "httpencode.format",
            "httpencode.http",
            "httpencode.json",
            "httpencode.lxmlformat",
            "httpencode.registry",
            "httpencode.wrappers"
        ],
        "version": "0.1"
    },
    "httperfpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "httpexceptor": {
        "cmdline": [],
        "modules": [
            "httpexceptor"
        ],
        "version": "1.4.0"
    },
    "httpext": {
        "cmdline": [],
        "modules": [
            "httpext"
        ],
        "version": "0.1.4"
    },
    "httpforge": {
        "cmdline": [
            "httpextract",
            "httpforge",
            "httpsend"
        ],
        "modules": [
            "httpforgelib"
        ],
        "version": "11.02.01"
    },
    "httpheader": {
        "cmdline": [],
        "modules": [
            "httpheader"
        ],
        "version": "1.1"
    },
    "httphq": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.6"
    },
    "httpie": {
        "cmdline": [],
        "modules": [
            "httpie",
            "httpie.cli",
            "httpie.client",
            "httpie.compat",
            "httpie.config",
            "httpie.context",
            "httpie.core",
            "httpie.downloads",
            "httpie.input",
            "httpie.models",
            "httpie.output",
            "httpie.output.formatters",
            "httpie.output.formatters.colors",
            "httpie.output.formatters.headers",
            "httpie.output.formatters.json",
            "httpie.output.processing",
            "httpie.output.streams",
            "httpie.plugins",
            "httpie.plugins.base",
            "httpie.plugins.builtin",
            "httpie.plugins.manager",
            "httpie.sessions",
            "httpie.utils"
        ],
        "version": "0.9.9"
    },
    "httpie-akamai": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.5"
    },
    "httpie-api-auth": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.0"
    },
    "httpie-asap-auth": {
        "cmdline": [],
        "modules": [
            "httpie_asap_auth"
        ],
        "version": "0.0.1"
    },
    "httpie-aws-auth": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "httpie-aws-authv4": {
        "cmdline": [],
        "modules": [
            "httpie_aws_authv4"
        ],
        "version": "0.1.1"
    },
    "httpie-dag": {
        "cmdline": [],
        "modules": [
            "httpie_dag",
            "httpie_dag.auth",
            "httpie_dag.auth_v4"
        ],
        "version": "0.1.0"
    },
    "httpie-django-auth": {
        "cmdline": [],
        "modules": [
            "httpie_django_auth"
        ],
        "version": "0.1.1"
    },
    "httpie-edgegrid": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.4"
    },
    "httpie-ems-auth": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.2"
    },
    "httpie-ems-auth-p3": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.3"
    },
    "httpie-escher-auth": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "httpie-f5-auth": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "httpie-hmac-auth": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.3"
    },
    "httpie-http2": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "httpie-image": {
        "cmdline": [],
        "modules": [
            "httpie_image"
        ],
        "version": "1.0.0"
    },
    "httpie-jwt-auth": {
        "cmdline": [],
        "modules": [
            "httpie_jwt_auth"
        ],
        "version": "0.3.0"
    },
    "httpie-msgpack": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "httpie-negotiate": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "httpie-ntlm": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "httpie-oauth": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "httpie-odps-auth": {
        "cmdline": [],
        "modules": [
            "httpie_odps_auth"
        ],
        "version": "0.2.1"
    },
    "httpie-plex": {
        "cmdline": [],
        "modules": [
            "httpie_plex"
        ],
        "version": "1.0.1"
    },
    "httpie-svb-auth": {
        "cmdline": [],
        "modules": [
            "httpie_svb_auth"
        ],
        "version": "1.0.4"
    },
    "httpie-token-auth": {
        "cmdline": [],
        "modules": [
            "httpie_token_auth"
        ],
        "version": "0.1.7"
    },
    "httpie-unixsocket": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "httpie-wsse-auth": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "httpie-zign": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "httping": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "httpio": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "httpkie": {
        "cmdline": [],
        "modules": [
            "httpkie"
        ],
        "version": "1.1.0"
    },
    "httpkit": {
        "cmdline": [],
        "modules": [
            "httpkit",
            "httpkit.helper",
            "httpkit.helper.cookie",
            "httpkit.helper.response",
            "httpkit.service",
            "httpkit.service.input",
            "httpkit.service.not_found",
            "httpkit.service.query",
            "httpkit.service.response"
        ],
        "version": "0.2.1"
    },
    "httplib2": {
        "cmdline": [],
        "modules": [
            "httplib2",
            "httplib2.iri2uri"
        ],
        "version": "0.10.3"
    },
    "httplib2-ss": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "httplib2.ca-certs-locater": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "httplib2.system-ca-certs-locater": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "httplib2shim": {
        "cmdline": [],
        "modules": [
            "httplib2shim",
            "httplib2shim.test",
            "httplib2shim.test.httplib2_test"
        ],
        "version": "0.0.2"
    },
    "httplibfix": {
        "cmdline": [],
        "modules": [
            "httplibfix",
            "httplibfix.patch"
        ],
        "version": "1.0"
    },
    "httplog": {
        "cmdline": [],
        "modules": [
            "httplog",
            "httplog.base",
            "httplog.decorators",
            "httplog.filters",
            "httplog.middleware",
            "httplog.serializers",
            "httplog.services",
            "httplog.tasks",
            "httplog.urls",
            "httplog.views"
        ],
        "version": "1.2.0"
    },
    "httpmeter": {
        "cmdline": [],
        "modules": [
            "httpmeter",
            "httpmeter.cli",
            "httpmeter.net",
            "httpmeter.stats",
            "httpmeter.utils"
        ],
        "version": "0.1.0"
    },
    "httpmultipart": {
        "cmdline": [],
        "modules": [
            "httpmultipart",
            "httpmultipart.main"
        ],
        "version": "0.2.0"
    },
    "httpnext": {
        "cmdline": [],
        "modules": [
            "httpnext"
        ],
        "version": "0.0.1"
    },
    "httpobs-cli": {
        "cmdline": [],
        "modules": [
            "httpobscli",
            "httpobscli.cli"
        ],
        "version": "1.0.2"
    },
    "httpolice": {
        "cmdline": [],
        "modules": [
            "httpolice",
            "httpolice.__metadata__",
            "httpolice.blackboard",
            "httpolice.citation",
            "httpolice.cli",
            "httpolice.codings",
            "httpolice.exchange",
            "httpolice.framing1",
            "httpolice.header",
            "httpolice.helpers",
            "httpolice.inputs",
            "httpolice.inputs.common",
            "httpolice.inputs.har",
            "httpolice.inputs.streams",
            "httpolice.known",
            "httpolice.known.alt_svc_param",
            "httpolice.known.auth_scheme",
            "httpolice.known.base",
            "httpolice.known.cache_directive",
            "httpolice.known.content_coding",
            "httpolice.known.header",
            "httpolice.known.hsts_directive",
            "httpolice.known.media_type",
            "httpolice.known.method",
            "httpolice.known.preference",
            "httpolice.known.product",
            "httpolice.known.range_unit",
            "httpolice.known.relation_type",
            "httpolice.known.status_code",
            "httpolice.known.transfer_coding",
            "httpolice.known.upgrade_token",
            "httpolice.known.warn_code",
            "httpolice.message",
            "httpolice.notice",
            "httpolice.parse",
            "httpolice.reports",
            "httpolice.reports.common",
            "httpolice.reports.html",
            "httpolice.reports.text",
            "httpolice.request",
            "httpolice.response",
            "httpolice.structure",
            "httpolice.syntax",
            "httpolice.syntax.common",
            "httpolice.syntax.internal",
            "httpolice.syntax.rfc2616",
            "httpolice.syntax.rfc3986",
            "httpolice.syntax.rfc4647",
            "httpolice.syntax.rfc5646",
            "httpolice.syntax.rfc5789",
            "httpolice.syntax.rfc5987",
            "httpolice.syntax.rfc5988",
            "httpolice.syntax.rfc6266",
            "httpolice.syntax.rfc6749",
            "httpolice.syntax.rfc6797",
            "httpolice.syntax.rfc6838",
            "httpolice.syntax.rfc7230",
            "httpolice.syntax.rfc7231",
            "httpolice.syntax.rfc7232",
            "httpolice.syntax.rfc7233",
            "httpolice.syntax.rfc7234",
            "httpolice.syntax.rfc7235",
            "httpolice.syntax.rfc7240",
            "httpolice.syntax.rfc7540",
            "httpolice.syntax.rfc7838",
            "httpolice.util",
            "httpolice.util.data",
            "httpolice.util.moves",
            "httpolice.util.ordered_enum",
            "httpolice.util.text"
        ],
        "version": "0.5.2"
    },
    "httpony": {
        "cmdline": [],
        "modules": [
            "httpony",
            "httpony.application",
            "httpony.server"
        ],
        "version": "0.2"
    },
    "httpparser": {
        "cmdline": [],
        "modules": [
            "httpparser"
        ],
        "version": "0.1.3"
    },
    "httpproxy": {
        "cmdline": [],
        "modules": [
            "httpproxy",
            "httpproxy.cache",
            "httpproxy.crawler",
            "httpproxy.data",
            "httpproxy.ping",
            "httpproxy.settings"
        ],
        "version": "0.5"
    },
    "httpreplay": {
        "cmdline": [],
        "modules": [
            "httpreplay",
            "httpreplay.cobweb",
            "httpreplay.cut",
            "httpreplay.exceptions",
            "httpreplay.main",
            "httpreplay.misc",
            "httpreplay.reader",
            "httpreplay.shoddy",
            "httpreplay.smegma"
        ],
        "version": "0.2"
    },
    "httpretty": {
        "cmdline": [],
        "modules": [
            "httpretty",
            "httpretty.compat",
            "httpretty.core",
            "httpretty.errors",
            "httpretty.http",
            "httpretty.utils",
            "tests",
            "tests.functional",
            "tests.functional.base",
            "tests.functional.test_bypass",
            "tests.functional.test_debug",
            "tests.functional.test_decorator",
            "tests.functional.test_httplib2",
            "tests.functional.test_requests",
            "tests.functional.test_urllib2",
            "tests.functional.testserver",
            "tests.unit",
            "tests.unit.test_core",
            "tests.unit.test_http",
            "tests.unit.test_httpretty",
            "tests.unit.test_main"
        ],
        "version": "0.8.14"
    },
    "httpretty-fixtures": {
        "cmdline": [],
        "modules": [
            "httpretty_fixtures",
            "httpretty_fixtures.test",
            "httpretty_fixtures.test.test"
        ],
        "version": "2.1.1"
    },
    "httpreverse": {
        "cmdline": [],
        "modules": [
            "httpreverse",
            "httpreverse.httpreverse",
            "httpreverse.util"
        ],
        "version": "0.4.0"
    },
    "httpripper": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "httproxy": {
        "cmdline": [],
        "modules": [],
        "version": "0.9.0"
    },
    "httprpclib": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "https": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "https-everywhere-checker": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "https-filesystem": {
        "cmdline": [],
        "modules": [
            "HTTPS_filesystem.sync_client",
            "HTTPS_filesystem.sync_server"
        ],
        "version": "1.1"
    },
    "httpserver": {
        "cmdline": [],
        "modules": [
            "httpserver",
            "httpserver.httpserver",
            "tests",
            "tests.test_httpserver",
            "tests.test_selenium"
        ],
        "version": "1.1.0"
    },
    "httpshell": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "httpsig": {
        "cmdline": [],
        "modules": [
            "httpsig",
            "httpsig._version",
            "httpsig.requests_auth",
            "httpsig.sign",
            "httpsig.tests",
            "httpsig.tests.test_signature",
            "httpsig.tests.test_utils",
            "httpsig.tests.test_verify",
            "httpsig.utils",
            "httpsig.verify"
        ],
        "version": "1.1.2"
    },
    "httpsig-cffi": {
        "cmdline": [],
        "modules": [
            "httpsig_cffi",
            "httpsig_cffi._version",
            "httpsig_cffi.requests_auth",
            "httpsig_cffi.sign",
            "httpsig_cffi.tests",
            "httpsig_cffi.tests.test_signature",
            "httpsig_cffi.tests.test_utils",
            "httpsig_cffi.tests.test_verify",
            "httpsig_cffi.utils",
            "httpsig_cffi.verify"
        ],
        "version": "15.0.0"
    },
    "httpsproxy-urllib2": {
        "cmdline": [],
        "modules": [
            "httplib",
            "urllib2"
        ],
        "version": "1.0"
    },
    "httpsqs": {
        "cmdline": [],
        "modules": [
            "httpsqs"
        ],
        "version": "1.4"
    },
    "httpsrv": {
        "cmdline": [],
        "modules": [
            "httpsrv",
            "httpsrv.httpsrv"
        ],
        "version": "1.0b1"
    },
    "httpsrvvcr": {
        "cmdline": [],
        "modules": [
            "httpsrvvcr",
            "httpsrvvcr.player",
            "httpsrvvcr.recorder"
        ],
        "version": "0.1.9"
    },
    "httpstan": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "httpstat": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.1"
    },
    "httpstatus35": {
        "cmdline": [],
        "modules": [
            "httpstatus"
        ],
        "version": "0.0.1"
    },
    "httpstream": {
        "cmdline": [],
        "modules": [
            "httpstream",
            "httpstream.http",
            "httpstream.jsonencoder",
            "httpstream.numbers",
            "httpstream.packages",
            "httpstream.packages.urimagic",
            "httpstream.packages.urimagic.kvlist",
            "httpstream.packages.urimagic.rfc3986",
            "httpstream.packages.urimagic.rfc6570",
            "httpstream.packages.urimagic.util",
            "httpstream.watch"
        ],
        "version": "1.3.0"
    },
    "httptestserver": {
        "cmdline": [],
        "modules": [
            "httptestserver",
            "httptestserver._compat",
            "httptestserver.http_server",
            "httptestserver.smtp_server",
            "httptestserver.testing"
        ],
        "version": "0.3.1"
    },
    "httptools": {
        "cmdline": [],
        "modules": [
            "httptools",
            "httptools.parser",
            "httptools.parser.errors"
        ],
        "version": "0.0.9"
    },
    "httputil": {
        "cmdline": [],
        "modules": [
            "httputil",
            "httputil.httputil",
            "httputil.request_engines",
            "httputil.request_engines.async",
            "httputil.request_engines.base",
            "httputil.request_engines.errors",
            "httputil.request_engines.sync"
        ],
        "version": "0.6.7"
    },
    "httputils": {
        "cmdline": [],
        "modules": [
            "httputils",
            "httputils.httputils"
        ],
        "version": "0.1b"
    },
    "httpwatcher": {
        "cmdline": [],
        "modules": [
            "httpwatcher",
            "httpwatcher.cmdline",
            "httpwatcher.errors",
            "httpwatcher.filesystem",
            "httpwatcher.server"
        ],
        "version": "0.5.0"
    },
    "httpx": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "httpxo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "httpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "httq": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "httrack-py": {
        "cmdline": [],
        "modules": [],
        "version": "0.6.1"
    },
    "httrcss-nester": {
        "cmdline": [],
        "modules": [
            "httrcss_nester"
        ],
        "version": "1.3.0"
    },
    "httreplay": {
        "cmdline": [],
        "modules": [
            "httreplay",
            "httreplay.context",
            "httreplay.patch",
            "httreplay.recording",
            "httreplay.replay_settings",
            "httreplay.stubs",
            "httreplay.stubs.base",
            "httreplay.stubs.requests_stubs",
            "httreplay.stubs.urllib3_stubs",
            "httreplay.utils"
        ],
        "version": "0.2.0"
    },
    "httsleep": {
        "cmdline": [],
        "modules": [
            "httsleep",
            "httsleep._compat",
            "httsleep.exceptions",
            "httsleep.main"
        ],
        "version": "0.2.0"
    },
    "httxlib": {
        "cmdline": [],
        "modules": [
            "httxlib",
            "httxlib.httxauth",
            "httxlib.httxauthcache",
            "httxlib.httxbase",
            "httxlib.httxcertificates",
            "httxlib.httxcompression",
            "httxlib.httxcompressionset",
            "httxlib.httxconnection",
            "httxlib.httxcookiejar",
            "httxlib.httxerror",
            "httxlib.httxmanager",
            "httxlib.httxnetlocation",
            "httxlib.httxobject",
            "httxlib.httxoptions",
            "httxlib.httxpassmanager",
            "httxlib.httxrequest",
            "httxlib.httxresponse",
            "httxlib.httxs",
            "httxlib.httxutil",
            "httxlib.version"
        ],
        "version": "1.0.4"
    },
    "htwkimn.theme": {
        "cmdline": [],
        "modules": [
            "htwkimn",
            "htwkimn.theme",
            "htwkimn.theme.tests"
        ],
        "version": "1.0.10"
    },
    "hua-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.0"
    },
    "huaban-exporter": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "huang": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "huanghama": {
        "cmdline": [],
        "modules": [
            "huanghama"
        ],
        "version": "1.0.00"
    },
    "huaqiao": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "huaula": {
        "cmdline": [],
        "modules": [
            "huaula",
            "huaula.dunder_main",
            "huaula.github",
            "huaula.github_import",
            "huaula.meu_xml"
        ],
        "version": "0.2"
    },
    "huaula-lsilva": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "huawei-3g": {
        "cmdline": [],
        "modules": [
            "huawei_3g",
            "huawei_3g.datastructures",
            "huawei_3g.huawei_e303",
            "huawei_3g.modem",
            "huawei_3g.test_modem"
        ],
        "version": "0.1.0"
    },
    "huawei-b593-status": {
        "cmdline": [],
        "modules": [
            "huawei_b593_status"
        ],
        "version": "0.0.2"
    },
    "hub": {
        "cmdline": [],
        "modules": [],
        "version": "2.0"
    },
    "hub-pip": {
        "cmdline": [],
        "modules": [
            "hub_pip",
            "hub_pip.BlackDuckConfig",
            "hub_pip.BlackDuckCore",
            "hub_pip.BlackDuckPackage",
            "hub_pip.BlackDuckPlugin",
            "hub_pip.BlackDuckSerializer",
            "hub_pip.FileHandler",
            "hub_pip.LogHandler",
            "hub_pip.Main",
            "hub_pip.TreeHandler",
            "hub_pip.api",
            "hub_pip.api.AuthenticationDataService",
            "hub_pip.api.CodeLocationsDataService",
            "hub_pip.api.HubServerConfig",
            "hub_pip.api.LinkedDataDataService",
            "hub_pip.api.ProjectDataService",
            "hub_pip.api.RestConnection",
            "hub_pip.api.ScanSummaryDataService",
            "hub_pip.api.VersionBomPolicyDataService",
            "hub_pip.api.WaitingDataService",
            "hub_pip.api.model",
            "hub_pip.api.model.CodeLocationView",
            "hub_pip.api.model.MetadataView",
            "hub_pip.api.model.NameValuePair",
            "hub_pip.api.model.PagedCodeLocationView",
            "hub_pip.api.model.PagedProjectVersionView",
            "hub_pip.api.model.PagedProjectView",
            "hub_pip.api.model.PagedScanSummaryView",
            "hub_pip.api.model.ProjectVersionView",
            "hub_pip.api.model.ProjectView",
            "hub_pip.api.model.ScanSummaryView",
            "hub_pip.api.model.VersionBomPolicyStatusView",
            "hub_pip.bdio",
            "hub_pip.bdio.Bdio",
            "hub_pip.bdio.BdioComponent",
            "hub_pip.bdio.BdioExternalIdentifier",
            "hub_pip.bdio.BdioProject",
            "hub_pip.bdio.BdioRelationship",
            "hub_pip.bdio.BillOfMaterials",
            "hub_pip.tests",
            "hub_pip.tests.helper",
            "hub_pip.tests.test_bdio",
            "hub_pip.tests.test_config",
            "hub_pip.tests.test_flat_list",
            "hub_pip.tests.test_tree"
        ],
        "version": "1.0.1"
    },
    "hub-toolbox": {
        "cmdline": [],
        "modules": [
            "hub_toolbox",
            "hub_toolbox.Centering",
            "hub_toolbox.Distances",
            "hub_toolbox.GoodmanKruskal",
            "hub_toolbox.Hubness",
            "hub_toolbox.HubnessAnalysis",
            "hub_toolbox.Hubness_parallel",
            "hub_toolbox.IO",
            "hub_toolbox.IntrinsicDim",
            "hub_toolbox.KnnClassification",
            "hub_toolbox.LocalScaling",
            "hub_toolbox.Logging",
            "hub_toolbox.MutualProximity",
            "hub_toolbox.MutualProximity_parallel",
            "hub_toolbox.SharedNN",
            "tests",
            "tests.centering_test",
            "tests.distances_test",
            "tests.goodmankruskal_test",
            "tests.hubness_test",
            "tests.hubnessanalysis_test",
            "tests.hubnessparallel_test",
            "tests.intrinsicdim_test",
            "tests.io_test",
            "tests.knn_test",
            "tests.localscaling_test",
            "tests.logging_test",
            "tests.mpparallel_test",
            "tests.mutualproximity_test",
            "tests.sharednn_test"
        ],
        "version": "2.3.1"
    },
    "hub2lab-hook": {
        "cmdline": [],
        "modules": [
            "hub2labhook"
        ],
        "version": "0.0.1"
    },
    "hubarcode": {
        "cmdline": [],
        "modules": [
            "hubarcode",
            "hubarcode.code128",
            "hubarcode.code128.code128test",
            "hubarcode.code128.encoding",
            "hubarcode.code128.generate_test",
            "hubarcode.code128.renderer",
            "hubarcode.code128.textencoder",
            "hubarcode.datamatrix",
            "hubarcode.datamatrix.matrixtest",
            "hubarcode.datamatrix.placement",
            "hubarcode.datamatrix.reedsolomon",
            "hubarcode.datamatrix.renderer",
            "hubarcode.datamatrix.textencoder",
            "hubarcode.ean13",
            "hubarcode.ean13.eantest",
            "hubarcode.ean13.encoding",
            "hubarcode.ean13.generate_test",
            "hubarcode.ean13.renderer",
            "hubarcode.qrcode",
            "hubarcode.qrcode.isodata",
            "hubarcode.qrcode.qrcodetest",
            "hubarcode.qrcode.qrdata",
            "hubarcode.qrcode.qrdata.fr1",
            "hubarcode.qrcode.qrdata.fr10",
            "hubarcode.qrcode.qrdata.fr11",
            "hubarcode.qrcode.qrdata.fr12",
            "hubarcode.qrcode.qrdata.fr13",
            "hubarcode.qrcode.qrdata.fr14",
            "hubarcode.qrcode.qrdata.fr15",
            "hubarcode.qrcode.qrdata.fr16",
            "hubarcode.qrcode.qrdata.fr17",
            "hubarcode.qrcode.qrdata.fr18",
            "hubarcode.qrcode.qrdata.fr19",
            "hubarcode.qrcode.qrdata.fr2",
            "hubarcode.qrcode.qrdata.fr20",
            "hubarcode.qrcode.qrdata.fr21",
            "hubarcode.qrcode.qrdata.fr22",
            "hubarcode.qrcode.qrdata.fr23",
            "hubarcode.qrcode.qrdata.fr24",
            "hubarcode.qrcode.qrdata.fr25",
            "hubarcode.qrcode.qrdata.fr26",
            "hubarcode.qrcode.qrdata.fr27",
            "hubarcode.qrcode.qrdata.fr28",
            "hubarcode.qrcode.qrdata.fr29",
            "hubarcode.qrcode.qrdata.fr3",
            "hubarcode.qrcode.qrdata.fr30",
            "hubarcode.qrcode.qrdata.fr31",
            "hubarcode.qrcode.qrdata.fr32",
            "hubarcode.qrcode.qrdata.fr33",
            "hubarcode.qrcode.qrdata.fr34",
            "hubarcode.qrcode.qrdata.fr35",
            "hubarcode.qrcode.qrdata.fr36",
            "hubarcode.qrcode.qrdata.fr37",
            "hubarcode.qrcode.qrdata.fr38",
            "hubarcode.qrcode.qrdata.fr39",
            "hubarcode.qrcode.qrdata.fr4",
            "hubarcode.qrcode.qrdata.fr40",
            "hubarcode.qrcode.qrdata.fr5",
            "hubarcode.qrcode.qrdata.fr6",
            "hubarcode.qrcode.qrdata.fr7",
            "hubarcode.qrcode.qrdata.fr8",
            "hubarcode.qrcode.qrdata.fr9",
            "hubarcode.qrcode.qrdata.qrv10_0",
            "hubarcode.qrcode.qrdata.qrv10_1",
            "hubarcode.qrcode.qrdata.qrv10_2",
            "hubarcode.qrcode.qrdata.qrv10_3",
            "hubarcode.qrcode.qrdata.qrv11_0",
            "hubarcode.qrcode.qrdata.qrv11_1",
            "hubarcode.qrcode.qrdata.qrv11_2",
            "hubarcode.qrcode.qrdata.qrv11_3",
            "hubarcode.qrcode.qrdata.qrv12_0",
            "hubarcode.qrcode.qrdata.qrv12_1",
            "hubarcode.qrcode.qrdata.qrv12_2",
            "hubarcode.qrcode.qrdata.qrv12_3",
            "hubarcode.qrcode.qrdata.qrv13_0",
            "hubarcode.qrcode.qrdata.qrv13_1",
            "hubarcode.qrcode.qrdata.qrv13_2",
            "hubarcode.qrcode.qrdata.qrv13_3",
            "hubarcode.qrcode.qrdata.qrv14_0",
            "hubarcode.qrcode.qrdata.qrv14_1",
            "hubarcode.qrcode.qrdata.qrv14_2",
            "hubarcode.qrcode.qrdata.qrv14_3",
            "hubarcode.qrcode.qrdata.qrv15_0",
            "hubarcode.qrcode.qrdata.qrv15_1",
            "hubarcode.qrcode.qrdata.qrv15_2",
            "hubarcode.qrcode.qrdata.qrv15_3",
            "hubarcode.qrcode.qrdata.qrv16_0",
            "hubarcode.qrcode.qrdata.qrv16_1",
            "hubarcode.qrcode.qrdata.qrv16_2",
            "hubarcode.qrcode.qrdata.qrv16_3",
            "hubarcode.qrcode.qrdata.qrv17_0",
            "hubarcode.qrcode.qrdata.qrv17_1",
            "hubarcode.qrcode.qrdata.qrv17_2",
            "hubarcode.qrcode.qrdata.qrv17_3",
            "hubarcode.qrcode.qrdata.qrv18_0",
            "hubarcode.qrcode.qrdata.qrv18_1",
            "hubarcode.qrcode.qrdata.qrv18_2",
            "hubarcode.qrcode.qrdata.qrv18_3",
            "hubarcode.qrcode.qrdata.qrv19_0",
            "hubarcode.qrcode.qrdata.qrv19_1",
            "hubarcode.qrcode.qrdata.qrv19_2",
            "hubarcode.qrcode.qrdata.qrv19_3",
            "hubarcode.qrcode.qrdata.qrv1_0",
            "hubarcode.qrcode.qrdata.qrv1_1",
            "hubarcode.qrcode.qrdata.qrv1_2",
            "hubarcode.qrcode.qrdata.qrv1_3",
            "hubarcode.qrcode.qrdata.qrv20_0",
            "hubarcode.qrcode.qrdata.qrv20_1",
            "hubarcode.qrcode.qrdata.qrv20_2",
            "hubarcode.qrcode.qrdata.qrv20_3",
            "hubarcode.qrcode.qrdata.qrv21_0",
            "hubarcode.qrcode.qrdata.qrv21_1",
            "hubarcode.qrcode.qrdata.qrv21_2",
            "hubarcode.qrcode.qrdata.qrv21_3",
            "hubarcode.qrcode.qrdata.qrv22_0",
            "hubarcode.qrcode.qrdata.qrv22_1",
            "hubarcode.qrcode.qrdata.qrv22_2",
            "hubarcode.qrcode.qrdata.qrv22_3",
            "hubarcode.qrcode.qrdata.qrv23_0",
            "hubarcode.qrcode.qrdata.qrv23_1",
            "hubarcode.qrcode.qrdata.qrv23_2",
            "hubarcode.qrcode.qrdata.qrv23_3",
            "hubarcode.qrcode.qrdata.qrv24_0",
            "hubarcode.qrcode.qrdata.qrv24_1",
            "hubarcode.qrcode.qrdata.qrv24_2",
            "hubarcode.qrcode.qrdata.qrv24_3",
            "hubarcode.qrcode.qrdata.qrv25_0",
            "hubarcode.qrcode.qrdata.qrv25_1",
            "hubarcode.qrcode.qrdata.qrv25_2",
            "hubarcode.qrcode.qrdata.qrv25_3",
            "hubarcode.qrcode.qrdata.qrv26_0",
            "hubarcode.qrcode.qrdata.qrv26_1",
            "hubarcode.qrcode.qrdata.qrv26_2",
            "hubarcode.qrcode.qrdata.qrv26_3",
            "hubarcode.qrcode.qrdata.qrv27_0",
            "hubarcode.qrcode.qrdata.qrv27_1",
            "hubarcode.qrcode.qrdata.qrv27_2",
            "hubarcode.qrcode.qrdata.qrv27_3",
            "hubarcode.qrcode.qrdata.qrv28_0",
            "hubarcode.qrcode.qrdata.qrv28_1",
            "hubarcode.qrcode.qrdata.qrv28_2",
            "hubarcode.qrcode.qrdata.qrv28_3",
            "hubarcode.qrcode.qrdata.qrv29_0",
            "hubarcode.qrcode.qrdata.qrv29_1",
            "hubarcode.qrcode.qrdata.qrv29_2",
            "hubarcode.qrcode.qrdata.qrv29_3",
            "hubarcode.qrcode.qrdata.qrv2_0",
            "hubarcode.qrcode.qrdata.qrv2_1",
            "hubarcode.qrcode.qrdata.qrv2_2",
            "hubarcode.qrcode.qrdata.qrv2_3",
            "hubarcode.qrcode.qrdata.qrv30_0",
            "hubarcode.qrcode.qrdata.qrv30_1",
            "hubarcode.qrcode.qrdata.qrv30_2",
            "hubarcode.qrcode.qrdata.qrv30_3",
            "hubarcode.qrcode.qrdata.qrv31_0",
            "hubarcode.qrcode.qrdata.qrv31_1",
            "hubarcode.qrcode.qrdata.qrv31_2",
            "hubarcode.qrcode.qrdata.qrv31_3",
            "hubarcode.qrcode.qrdata.qrv32_0",
            "hubarcode.qrcode.qrdata.qrv32_1",
            "hubarcode.qrcode.qrdata.qrv32_2",
            "hubarcode.qrcode.qrdata.qrv32_3",
            "hubarcode.qrcode.qrdata.qrv33_0",
            "hubarcode.qrcode.qrdata.qrv33_1",
            "hubarcode.qrcode.qrdata.qrv33_2",
            "hubarcode.qrcode.qrdata.qrv33_3",
            "hubarcode.qrcode.qrdata.qrv34_0",
            "hubarcode.qrcode.qrdata.qrv34_1",
            "hubarcode.qrcode.qrdata.qrv34_2",
            "hubarcode.qrcode.qrdata.qrv34_3",
            "hubarcode.qrcode.qrdata.qrv35_0",
            "hubarcode.qrcode.qrdata.qrv35_1",
            "hubarcode.qrcode.qrdata.qrv35_2",
            "hubarcode.qrcode.qrdata.qrv35_3",
            "hubarcode.qrcode.qrdata.qrv36_0",
            "hubarcode.qrcode.qrdata.qrv36_1",
            "hubarcode.qrcode.qrdata.qrv36_2",
            "hubarcode.qrcode.qrdata.qrv36_3",
            "hubarcode.qrcode.qrdata.qrv37_0",
            "hubarcode.qrcode.qrdata.qrv37_1",
            "hubarcode.qrcode.qrdata.qrv37_2",
            "hubarcode.qrcode.qrdata.qrv37_3",
            "hubarcode.qrcode.qrdata.qrv38_0",
            "hubarcode.qrcode.qrdata.qrv38_1",
            "hubarcode.qrcode.qrdata.qrv38_2",
            "hubarcode.qrcode.qrdata.qrv38_3",
            "hubarcode.qrcode.qrdata.qrv39_0",
            "hubarcode.qrcode.qrdata.qrv39_1",
            "hubarcode.qrcode.qrdata.qrv39_2",
            "hubarcode.qrcode.qrdata.qrv39_3",
            "hubarcode.qrcode.qrdata.qrv3_0",
            "hubarcode.qrcode.qrdata.qrv3_1",
            "hubarcode.qrcode.qrdata.qrv3_2",
            "hubarcode.qrcode.qrdata.qrv3_3",
            "hubarcode.qrcode.qrdata.qrv40_0",
            "hubarcode.qrcode.qrdata.qrv40_1",
            "hubarcode.qrcode.qrdata.qrv40_2",
            "hubarcode.qrcode.qrdata.qrv40_3",
            "hubarcode.qrcode.qrdata.qrv4_0",
            "hubarcode.qrcode.qrdata.qrv4_1",
            "hubarcode.qrcode.qrdata.qrv4_2",
            "hubarcode.qrcode.qrdata.qrv4_3",
            "hubarcode.qrcode.qrdata.qrv5_0",
            "hubarcode.qrcode.qrdata.qrv5_1",
            "hubarcode.qrcode.qrdata.qrv5_2",
            "hubarcode.qrcode.qrdata.qrv5_3",
            "hubarcode.qrcode.qrdata.qrv6_0",
            "hubarcode.qrcode.qrdata.qrv6_1",
            "hubarcode.qrcode.qrdata.qrv6_2",
            "hubarcode.qrcode.qrdata.qrv6_3",
            "hubarcode.qrcode.qrdata.qrv7_0",
            "hubarcode.qrcode.qrdata.qrv7_1",
            "hubarcode.qrcode.qrdata.qrv7_2",
            "hubarcode.qrcode.qrdata.qrv7_3",
            "hubarcode.qrcode.qrdata.qrv8_0",
            "hubarcode.qrcode.qrdata.qrv8_1",
            "hubarcode.qrcode.qrdata.qrv8_2",
            "hubarcode.qrcode.qrdata.qrv8_3",
            "hubarcode.qrcode.qrdata.qrv9_0",
            "hubarcode.qrcode.qrdata.qrv9_1",
            "hubarcode.qrcode.qrdata.qrv9_2",
            "hubarcode.qrcode.qrdata.qrv9_3",
            "hubarcode.qrcode.qrdata.rsc10",
            "hubarcode.qrcode.qrdata.rsc13",
            "hubarcode.qrcode.qrdata.rsc15",
            "hubarcode.qrcode.qrdata.rsc16",
            "hubarcode.qrcode.qrdata.rsc17",
            "hubarcode.qrcode.qrdata.rsc18",
            "hubarcode.qrcode.qrdata.rsc20",
            "hubarcode.qrcode.qrdata.rsc22",
            "hubarcode.qrcode.qrdata.rsc24",
            "hubarcode.qrcode.qrdata.rsc26",
            "hubarcode.qrcode.qrdata.rsc28",
            "hubarcode.qrcode.qrdata.rsc30",
            "hubarcode.qrcode.qrdata.rsc7",
            "hubarcode.qrcode.renderer",
            "hubarcode.qrcode.textencoder"
        ],
        "version": "1.0.0"
    },
    "hubble": {
        "cmdline": [],
        "modules": [
            "hubble",
            "hubble.config",
            "hubble.keys",
            "hubble.shell"
        ],
        "version": "1.1.6"
    },
    "hubblesim": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hubbub": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hubby": {
        "cmdline": [],
        "modules": [
            "hubby",
            "hubby._version",
            "hubby.cli",
            "hubby.git_wrapper",
            "tests",
            "tests.conftest",
            "tests.test_assignees",
            "tests.test_core",
            "tests.test_git_wrapper",
            "tests.test_pull_requests"
        ],
        "version": "0.3.0"
    },
    "hubbypy": {
        "cmdline": [],
        "modules": [
            "hubbypy",
            "hubbypy.contact_properties",
            "hubbypy.hub_api"
        ],
        "version": "0.1.8"
    },
    "hubcli": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hubcrypt": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hubd": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hubdns": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "hublib": {
        "cmdline": [],
        "modules": [
            "hublib",
            "hublib.rappture",
            "hublib.rappture.curve",
            "hublib.rappture.hist",
            "hublib.rappture.image",
            "hublib.rappture.integer",
            "hublib.rappture.loader",
            "hublib.rappture.node",
            "hublib.rappture.number",
            "hublib.rappture.rappture",
            "hublib.rappture.structure",
            "hublib.rappture.tool",
            "hublib.rappture.util",
            "hublib.tool",
            "hublib.ui",
            "hublib.ui.editor",
            "hublib.ui.formvalue",
            "hublib.ui.group",
            "hublib.ui.numvalue",
            "hublib.ui.upload",
            "hublib.uq",
            "hublib.use"
        ],
        "version": "0.6.7"
    },
    "hubot-hangups": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hubot-python": {
        "cmdline": [],
        "modules": [
            "pybot",
            "pybot.adapter",
            "pybot.adapters",
            "pybot.adapters.shell",
            "pybot.events",
            "pybot.listener",
            "pybot.matchers",
            "pybot.messages",
            "pybot.response",
            "pybot.robot",
            "pybot.user"
        ],
        "version": "0.1.1"
    },
    "hubs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hubspot": {
        "cmdline": [],
        "modules": [
            "hubspot",
            "hubspot.blog",
            "hubspot.contacts",
            "hubspot.files",
            "hubspot.forms",
            "hubspot.hsapi",
            "hubspot.pages",
            "hubspot.properties",
            "hubspot.templates",
            "hubspot.utilities"
        ],
        "version": "0.1.14dev"
    },
    "hubspot-conn": {
        "cmdline": [],
        "modules": [
            "hubspot",
            "hubspot.connection",
            "hubspot.connection._validators",
            "hubspot.connection.exc",
            "hubspot.connection.testing",
            "hubspot.connection.webhook"
        ],
        "version": "1.1"
    },
    "hubspot-connection": {
        "cmdline": [],
        "modules": [
            "hubspot",
            "hubspot.connection",
            "hubspot.connection._validators",
            "hubspot.connection.exc",
            "hubspot.connection.testing"
        ],
        "version": "1.0rc8.post0"
    },
    "hubspot-contacts": {
        "cmdline": [],
        "modules": [
            "hubspot",
            "hubspot.contacts",
            "hubspot.contacts._constants",
            "hubspot.contacts._data_retrieval",
            "hubspot.contacts._property_utils",
            "hubspot.contacts._schemas",
            "hubspot.contacts._schemas._validators",
            "hubspot.contacts._schemas.contacts",
            "hubspot.contacts._schemas.lists",
            "hubspot.contacts._schemas.properties",
            "hubspot.contacts.exc",
            "hubspot.contacts.generic_utils",
            "hubspot.contacts.lists",
            "hubspot.contacts.properties",
            "hubspot.contacts.property_groups",
            "hubspot.contacts.request_data_formatters",
            "hubspot.contacts.request_data_formatters.contacts",
            "hubspot.contacts.request_data_formatters.properties",
            "hubspot.contacts.request_data_formatters.property_groups",
            "hubspot.contacts.testing"
        ],
        "version": "1.0"
    },
    "hubspot-oauth2client": {
        "cmdline": [],
        "modules": [
            "hubspot_oauth2client",
            "hubspot_oauth2client.client"
        ],
        "version": "0.1"
    },
    "hubspot3": {
        "cmdline": [],
        "modules": [
            "hubspot3",
            "hubspot3.base",
            "hubspot3.blog",
            "hubspot3.broadcast",
            "hubspot3.companies",
            "hubspot3.contact_lists",
            "hubspot3.contacts",
            "hubspot3.deals",
            "hubspot3.engagements",
            "hubspot3.error",
            "hubspot3.forms",
            "hubspot3.keywords",
            "hubspot3.leads",
            "hubspot3.logging_helper",
            "hubspot3.mixins",
            "hubspot3.mixins.threading",
            "hubspot3.prospects",
            "hubspot3.settings",
            "hubspot3.utils"
        ],
        "version": "3.0.1"
    },
    "hubstorage": {
        "cmdline": [],
        "modules": [
            "hubstorage",
            "hubstorage.activity",
            "hubstorage.batchuploader",
            "hubstorage.client",
            "hubstorage.collectionsrt",
            "hubstorage.frontier",
            "hubstorage.job",
            "hubstorage.jobq",
            "hubstorage.project",
            "hubstorage.resourcetype",
            "hubstorage.serialization",
            "hubstorage.utils",
            "tests",
            "tests.hstestcase",
            "tests.test_activity",
            "tests.test_batchuploader",
            "tests.test_client",
            "tests.test_collections",
            "tests.test_frontier",
            "tests.test_jobq",
            "tests.test_jobsmeta",
            "tests.test_project",
            "tests.test_retry",
            "tests.test_system",
            "tests.testutil"
        ],
        "version": "0.23.6"
    },
    "hubstorage-frontera": {
        "cmdline": [],
        "modules": [
            "hcf_backend"
        ],
        "version": "0.1"
    },
    "hubsync": {
        "cmdline": [],
        "modules": [
            "hubsync",
            "hubsync.config",
            "hubsync.github",
            "hubsync.sync",
            "hubsync.workspace"
        ],
        "version": "0.2.9"
    },
    "hubtools": {
        "cmdline": [],
        "modules": [
            "hub",
            "hub.appliances",
            "hub.backups",
            "hub.formatter",
            "hub.keypacket",
            "hub.servers",
            "hub.utils"
        ],
        "version": "2011.8.11"
    },
    "hubugs": {
        "cmdline": [],
        "modules": [
            "hubugs",
            "hubugs._version",
            "hubugs.i18n",
            "hubugs.models",
            "hubugs.template",
            "hubugs.utils",
            "tests",
            "tests.test_template",
            "tests.test_utils",
            "tests.utils"
        ],
        "version": "0.18.0"
    },
    "hubward": {
        "cmdline": [],
        "modules": [
            "hubward",
            "hubward.generate_config_from_schema",
            "hubward.liftover",
            "hubward.log",
            "hubward.models",
            "hubward.utils",
            "hubward.version",
            "tests",
            "tests.test_hubward"
        ],
        "version": "0.2.2"
    },
    "huck": {
        "cmdline": [
            "huck"
        ],
        "modules": [
            "huck",
            "huck.autoreload",
            "huck.http",
            "huck.locale",
            "huck.mail",
            "huck.template",
            "huck.utils",
            "huck.web"
        ],
        "version": "0.2.0"
    },
    "huckle": {
        "cmdline": [],
        "modules": [
            "huckle",
            "huckle.config",
            "huckle.hclinav",
            "huckle.huckle",
            "huckle.utils"
        ],
        "version": "0.3.0"
    },
    "hud": {
        "cmdline": [],
        "modules": [
            "hud",
            "hud.elements",
            "hud.eventHandler",
            "hud.hud"
        ],
        "version": "0.3b2"
    },
    "huddle": {
        "cmdline": [],
        "modules": [
            "huddle",
            "huddle.manage",
            "huddle.repo",
            "huddle.util"
        ],
        "version": "0.1.4"
    },
    "hudjango": {
        "cmdline": [],
        "modules": [
            "hudjango",
            "hudjango.auth",
            "hudjango.auth.backends",
            "hudjango.auth.decorators",
            "hudjango.decorators",
            "hudjango.fields",
            "hudjango.fields.couchdbfield",
            "hudjango.fields.defaulting",
            "hudjango.fields.scalingimagefield",
            "hudjango.fields.testdefaulting",
            "hudjango.fields.testscalingimagefield",
            "hudjango.forms",
            "hudjango.management",
            "hudjango.management.commands",
            "hudjango.management.commands.blame",
            "hudjango.management.commands.couchdb-designs",
            "hudjango.management.commands.couchdb-drop",
            "hudjango.management.commands.couchdb-init",
            "hudjango.management.commands.couchdb-validate-documents",
            "hudjango.middleware",
            "hudjango.middleware.clienttrack",
            "hudjango.middleware.testthreadlocals",
            "hudjango.middleware.threadlocals",
            "hudjango.serializers",
            "hudjango.storage",
            "hudjango.storage.CouchDBStorage",
            "hudjango.storage.ImageServerStorage",
            "hudjango.storage.dedupingS3storage",
            "hudjango.templateloaders",
            "hudjango.templateloaders.couchdbloader",
            "hudjango.templatetags",
            "hudjango.templatetags.hudjango",
            "hudjango.validators",
            "tests",
            "tests.regressiontests",
            "tests.regressiontests.auth_backends",
            "tests.regressiontests.auth_backends.models",
            "tests.regressiontests.auth_backends.tests",
            "tests.regressiontests.auth_decorators",
            "tests.regressiontests.auth_decorators.models",
            "tests.regressiontests.auth_decorators.tests",
            "tests.regressiontests.auth_decorators.views",
            "tests.regressiontests.logger",
            "tests.regressiontests.logger.models",
            "tests.regressiontests.logger.tests",
            "tests.regressiontests.serializers",
            "tests.regressiontests.serializers.models",
            "tests.regressiontests.serializers.tests",
            "tests.runtests",
            "tests.settings_tests",
            "tests.urls"
        ],
        "version": "0.95p1"
    },
    "hudsucker": {
        "cmdline": [],
        "modules": [
            "hudsucker",
            "hudsucker._version",
            "hudsucker.industries",
            "hudsucker.proxy"
        ],
        "version": "0.2.1"
    },
    "hue": {
        "cmdline": [],
        "modules": [
            "hue",
            "hue.hue"
        ],
        "version": "0.1.0"
    },
    "hue-plus": {
        "cmdline": [],
        "modules": [
            "hue_plus",
            "hue_plus.hue",
            "hue_plus.hue_gui",
            "hue_plus.hue_ui",
            "hue_plus.picker",
            "hue_plus.previous",
            "hue_plus.webcolors"
        ],
        "version": "1.1.8"
    },
    "hue7jip8": {
        "cmdline": [],
        "modules": [
            "\u532f\u5165\u5230\u81fa\u7063\u8a00\u8a9e\u8cc7\u6599\u5eab",
            "\u532f\u5165\u5230\u81fa\u7063\u8a00\u8a9e\u8cc7\u6599\u5eab.apps",
            "\u532f\u5165\u5230\u81fa\u7063\u8a00\u8a9e\u8cc7\u6599\u5eab.management",
            "\u532f\u5165\u5230\u81fa\u7063\u8a00\u8a9e\u8cc7\u6599\u5eab.management.commands",
            "\u532f\u5165\u5230\u81fa\u7063\u8a00\u8a9e\u8cc7\u6599\u5eab.management.commands.\u6559\u5178\u97f3\u6a940\u4e0b\u8f09",
            "\u532f\u5165\u5230\u81fa\u7063\u8a00\u8a9e\u8cc7\u6599\u5eab.management.commands.\u6559\u5178\u97f3\u6a941\u8f49\u6a94",
            "\u532f\u5165\u5230\u81fa\u7063\u8a00\u8a9e\u8cc7\u6599\u5eab.management.commands.\u6559\u5178\u97f3\u6a942\u532f\u5165",
            "\u532f\u5165\u5230\u81fa\u7063\u8a00\u8a9e\u8cc7\u6599\u5eab.management.commands.\u65b0\u5317\u5e02900\u4f8b\u53e5",
            "\u532f\u5165\u5230\u81fa\u7063\u8a00\u8a9e\u8cc7\u6599\u5eab.management.commands.\u65cf\u8a9e\u8fad\u51780\u4e0b\u8f09",
            "\u532f\u5165\u5230\u81fa\u7063\u8a00\u8a9e\u8cc7\u6599\u5eab.management.commands.\u65cf\u8a9e\u8fad\u51781\u8f49\u6a94",
            "\u532f\u5165\u5230\u81fa\u7063\u8a00\u8a9e\u8cc7\u6599\u5eab.management.commands.\u65cf\u8a9e\u8fad\u51782\u532f\u5165",
            "\u532f\u5165\u5230\u81fa\u7063\u8a00\u8a9e\u8cc7\u6599\u5eab.migrations",
            "\u532f\u5165\u5230\u81fa\u7063\u8a00\u8a9e\u8cc7\u6599\u5eab.\u65cf\u8a9e\u8fad\u5178"
        ],
        "version": "0.0.4"
    },
    "hueber": {
        "cmdline": [],
        "modules": [
            "hueber",
            "hueber.api",
            "hueber.api._common",
            "hueber.api.config",
            "hueber.api.groups",
            "hueber.api.lights",
            "hueber.lib",
            "hueber.lib.statebuilder"
        ],
        "version": "0.1.1"
    },
    "huectl": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "huelsenbeck": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hueman": {
        "cmdline": [],
        "modules": [
            "hueman",
            "hueman.entities",
            "hueman.groups",
            "hueman.plugins",
            "hueman.test",
            "hueman.test.test_bridge",
            "hueman.test.test_hueman",
            "hueman.test.test_light",
            "hueman.test.test_plugins",
            "hueman.util"
        ],
        "version": "dev"
    },
    "huemidi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hues": {
        "cmdline": [],
        "modules": [
            "hues",
            "hues.colortable",
            "hues.console",
            "hues.dpda",
            "hues.huestr"
        ],
        "version": "0.2.2"
    },
    "huest": {
        "cmdline": [],
        "modules": [
            "huest",
            "huest.hounsfield_estimate"
        ],
        "version": "0.2.0"
    },
    "huey": {
        "cmdline": [
            "huey_consumer.py"
        ],
        "modules": [
            "huey",
            "huey.api",
            "huey.bin",
            "huey.bin.huey_consumer",
            "huey.constants",
            "huey.consumer",
            "huey.consumer_options",
            "huey.contrib",
            "huey.contrib.djhuey",
            "huey.contrib.djhuey.management",
            "huey.contrib.djhuey.management.commands",
            "huey.contrib.djhuey.management.commands.run_huey",
            "huey.contrib.djhuey.models",
            "huey.contrib.sqlitedb",
            "huey.exceptions",
            "huey.registry",
            "huey.storage",
            "huey.tests",
            "huey.tests.base",
            "huey.tests.test_consumer",
            "huey.tests.test_crontab",
            "huey.tests.test_queue",
            "huey.tests.test_registry",
            "huey.tests.test_sqlite",
            "huey.tests.test_storage",
            "huey.tests.test_utils",
            "huey.tests.test_wrapper",
            "huey.utils",
            "huey.wrapper"
        ],
        "version": "1.3.1"
    },
    "hufflepuff": {
        "cmdline": [],
        "modules": [
            "hufflepuff",
            "hufflepuff.cli",
            "hufflepuff.comms",
            "hufflepuff.search"
        ],
        "version": "1.1"
    },
    "huffman": {
        "cmdline": [],
        "modules": [
            "huffman",
            "huffman.heapqo",
            "huffman.huffman"
        ],
        "version": "0.1.2"
    },
    "huffman-compression": {
        "cmdline": [],
        "modules": [
            "huffman_compression.binary_tree",
            "huffman_compression.decode",
            "huffman_compression.encode"
        ],
        "version": "0.1"
    },
    "huffman-encoder-decoder": {
        "cmdline": [],
        "modules": [
            "huffman",
            "huffman.huff"
        ],
        "version": "0.3"
    },
    "hug": {
        "cmdline": [],
        "modules": [
            "hug",
            "hug._async",
            "hug._empty",
            "hug._version",
            "hug.api",
            "hug.authentication",
            "hug.decorators",
            "hug.defaults",
            "hug.development_runner",
            "hug.directives",
            "hug.exceptions",
            "hug.format",
            "hug.input_format",
            "hug.interface",
            "hug.introspect",
            "hug.middleware",
            "hug.output_format",
            "hug.redirect",
            "hug.route",
            "hug.routing",
            "hug.store",
            "hug.test",
            "hug.transform",
            "hug.types",
            "hug.use",
            "hug.validate"
        ],
        "version": "2.3.0"
    },
    "hug-apispec": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hug-authentication-ldap": {
        "cmdline": [],
        "modules": [
            "hug_authentication_ldap",
            "hug_authentication_ldap._version",
            "hug_authentication_ldap.authentication"
        ],
        "version": "1.0.3"
    },
    "hug-explainable": {
        "cmdline": [],
        "modules": [
            "hug_explainable",
            "hug_explainable._version",
            "hug_explainable.context_manager",
            "hug_explainable.directive"
        ],
        "version": "0.0.3"
    },
    "hug-middleware-cors": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hug-peewee": {
        "cmdline": [],
        "modules": [
            "hug_peewee",
            "hug_peewee._version",
            "hug_peewee.connection"
        ],
        "version": "0.0.2"
    },
    "hug-peewee-connect": {
        "cmdline": [],
        "modules": [
            "hug_peewee_connect",
            "hug_peewee_connect.manage",
            "tests",
            "tests.test_manage"
        ],
        "version": "0.0.2"
    },
    "hug-raven": {
        "cmdline": [],
        "modules": [
            "hug_raven",
            "hug_raven.hug_raven"
        ],
        "version": "1.1.0"
    },
    "hug-sentry": {
        "cmdline": [],
        "modules": [
            "hug_sentry",
            "hug_sentry.sentry_handler"
        ],
        "version": "0.0.2"
    },
    "hug-store-redis": {
        "cmdline": [],
        "modules": [
            "hug_store_redis",
            "hug_store_redis.redis_store"
        ],
        "version": "1.0.0"
    },
    "hug-yaml": {
        "cmdline": [],
        "modules": [
            "hug_yaml",
            "hug_yaml._version",
            "hug_yaml.input_format",
            "hug_yaml.not_found",
            "hug_yaml.output_format"
        ],
        "version": "1.1.0"
    },
    "hugophotoswipe": {
        "cmdline": [
            "hps"
        ],
        "modules": [
            "hugophotoswipe",
            "hugophotoswipe.album",
            "hugophotoswipe.conf",
            "hugophotoswipe.hugophotoswipe",
            "hugophotoswipe.photo",
            "hugophotoswipe.ui",
            "hugophotoswipe.utils"
        ],
        "version": "0.0.14"
    },
    "hugpee": {
        "cmdline": [],
        "modules": [
            "hugpee"
        ],
        "version": "0.1"
    },
    "huimages": {
        "cmdline": [],
        "modules": [
            "demo",
            "demo.imageserver_import",
            "demo.imagestuff",
            "demo.manage",
            "demo.middleware",
            "demo.settings",
            "demo.urls",
            "huimages",
            "huimages.imagebrowser",
            "huimages.imagebrowser.forms",
            "huimages.imagebrowser.models",
            "huimages.imagebrowser.urls",
            "huimages.imagebrowser.views",
            "huimages.server"
        ],
        "version": "2.2p3"
    },
    "huisarts": {
        "cmdline": [],
        "modules": [
            "huisarts",
            "huisarts.big",
            "huisarts.genees",
            "huisarts.strafrecht",
            "huisarts.version"
        ],
        "version": "28"
    },
    "huivo-thrift": {
        "cmdline": [],
        "modules": [
            "huivo",
            "huivo.thrift",
            "huivo.thrift.client",
            "huivo.thrift.client.Client",
            "huivo.thrift.client.ClientFactory",
            "huivo.thrift.client.Configurator",
            "huivo.thrift.client.ConnectionPool",
            "huivo.thrift.client.ReadWriteLock",
            "huivo.thrift.client.ZkRegistry",
            "huivo.thrift.common",
            "huivo.thrift.common.constants",
            "huivo.thrift.common.ttypes",
            "huivo.thrift.test",
            "huivo.thrift.test.Test",
            "huivo.thrift.test.TestService",
            "huivo.thrift.test.constants",
            "huivo.thrift.test.ttypes",
            "test",
            "test.constants",
            "test.ttypes"
        ],
        "version": "1.0.0"
    },
    "hulihutu": {
        "cmdline": [],
        "modules": [
            "hulihutu",
            "hulihutu.generate_game",
            "hulihutu.mdp",
            "hulihutu.network",
            "hulihutu.testBoard",
            "hulihutu.test_tictac",
            "hulihutu.tictac"
        ],
        "version": "1.0.5"
    },
    "hulk": {
        "cmdline": [],
        "modules": [
            "hulk",
            "hulk.application",
            "hulk.exceptions",
            "hulk.handler",
            "hulk.monkey",
            "hulk.name",
            "hulk.utils",
            "hulk.version"
        ],
        "version": "0.2.2"
    },
    "hulkify": {
        "cmdline": [],
        "modules": [
            "hulkify",
            "hulkify.hulkify"
        ],
        "version": "0.0.9"
    },
    "hulu": {
        "cmdline": [],
        "modules": [
            "hulu",
            "hulu.api",
            "hulu.compat",
            "hulu.exceptions"
        ],
        "version": "0.1.0"
    },
    "human": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "human-curl": {
        "cmdline": [],
        "modules": [
            "human_curl",
            "human_curl.async",
            "human_curl.auth",
            "human_curl.compat",
            "human_curl.core",
            "human_curl.exceptions",
            "human_curl.methods",
            "human_curl.utils"
        ],
        "version": "0.2.0"
    },
    "human-dates": {
        "cmdline": [],
        "modules": [
            "human_dates"
        ],
        "version": "0.2.0"
    },
    "human-datetimedelta": {
        "cmdline": [],
        "modules": [
            "human"
        ],
        "version": "0.3.1"
    },
    "human-names": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "human-time-formatter": {
        "cmdline": [],
        "modules": [
            "human_time_formatter",
            "human_time_formatter._version",
            "human_time_formatter.human_time_formatter"
        ],
        "version": "1.0.0.5"
    },
    "humanapi": {
        "cmdline": [],
        "modules": [
            "humanapi",
            "humanapi.api"
        ],
        "version": "0.1.10"
    },
    "humancrypto": {
        "cmdline": [],
        "modules": [
            "humancrypto",
            "humancrypto.cli",
            "humancrypto.error",
            "humancrypto.pki",
            "humancrypto.pwutil",
            "humancrypto.randomutil",
            "humancrypto.y2016",
            "humancrypto.y44bc",
            "humancrypto.yearutil"
        ],
        "version": "0.5.0"
    },
    "humanencoding": {
        "cmdline": [],
        "modules": [
            "humanencoding",
            "humanencoding.encoder",
            "humanencoding.wordlist_v1",
            "tests",
            "tests.test_encoder"
        ],
        "version": "0.1"
    },
    "humanfriendly": {
        "cmdline": [],
        "modules": [
            "humanfriendly",
            "humanfriendly.cli",
            "humanfriendly.compat",
            "humanfriendly.prompts",
            "humanfriendly.sphinx",
            "humanfriendly.tables",
            "humanfriendly.terminal",
            "humanfriendly.tests",
            "humanfriendly.text",
            "humanfriendly.usage"
        ],
        "version": "3.2"
    },
    "humanfuture": {
        "cmdline": [],
        "modules": [
            "humanfuture"
        ],
        "version": "0.2"
    },
    "humanhash": {
        "cmdline": [],
        "modules": [
            "humanhash"
        ],
        "version": "0.0.1"
    },
    "humanhash3": {
        "cmdline": [],
        "modules": [
            "humanhash"
        ],
        "version": "0.0.6"
    },
    "humanize": {
        "cmdline": [],
        "modules": [
            "humanize",
            "humanize.compat",
            "humanize.filesize",
            "humanize.i18n",
            "humanize.number",
            "humanize.time"
        ],
        "version": "0.5.1"
    },
    "humanize-flask": {
        "cmdline": [],
        "modules": [
            "flask_humanize",
            "flask_humanize.compat"
        ],
        "version": "0.2.0"
    },
    "humann2": {
        "cmdline": [],
        "modules": [
            "humann2",
            "humann2.check",
            "humann2.config",
            "humann2.humann2",
            "humann2.maintenance",
            "humann2.maintenance.Build_mapping_Pathways_Uniprot",
            "humann2.maintenance.Build_mapping_Uniref_Citations",
            "humann2.maintenance.Map_Pathway_Or_Reaction_To_Organism_from_Extract",
            "humann2.maintenance.Map_Pathway_To_Organism",
            "humann2.maintenance.Reaction_to_Uniref5090",
            "humann2.maintenance.ReadSwissprot",
            "humann2.maintenance.ReadUniref",
            "humann2.maintenance.UniProt_mapping",
            "humann2.maintenance.chocophlan_hardlen",
            "humann2.maintenance.create_metacyc_structured_pathways_database",
            "humann2.maintenance.create_uniref_database",
            "humann2.maintenance.filter_pathways",
            "humann2.maintenance.filter_uniref_ec_list",
            "humann2.maintenance.make_map_ec_name",
            "humann2.maintenance.make_map_eggnog_name",
            "humann2.maintenance.make_map_go_name",
            "humann2.maintenance.make_map_ko_name",
            "humann2.maintenance.make_map_metacyc-pwy_name",
            "humann2.maintenance.make_map_metacyc-pwy_taxonomy",
            "humann2.maintenance.make_map_pfam_name",
            "humann2.maintenance.make_map_transporter_uniref50",
            "humann2.maintenance.make_map_uniprot_name",
            "humann2.maintenance.make_map_uniref50_go",
            "humann2.maintenance.make_uniref-tol-lca",
            "humann2.maintenance.make_utility_mapping",
            "humann2.maintenance.map_ECs_to_Uniref50_90",
            "humann2.maintenance.map_reactions_to_uniprot",
            "humann2.maintenance.metacyc2mcpc",
            "humann2.quantify",
            "humann2.quantify.MinPath12hmp",
            "humann2.quantify.chi2cdf",
            "humann2.quantify.families",
            "humann2.quantify.modules",
            "humann2.quantify.xipe",
            "humann2.search",
            "humann2.search.blastx_coverage",
            "humann2.search.nucleotide",
            "humann2.search.pick_frames",
            "humann2.search.prescreen",
            "humann2.search.translated",
            "humann2.store",
            "humann2.tests",
            "humann2.tests.advanced_tests_blastx_coverage",
            "humann2.tests.advanced_tests_nucleotide_search",
            "humann2.tests.advanced_tests_quantify_families",
            "humann2.tests.advanced_tests_quantify_modules",
            "humann2.tests.advanced_tests_store",
            "humann2.tests.advanced_tests_translated_search",
            "humann2.tests.advanced_tests_utilities",
            "humann2.tests.basic_tests_nucleotide_search",
            "humann2.tests.basic_tests_quantify_modules",
            "humann2.tests.basic_tests_store",
            "humann2.tests.basic_tests_utilities",
            "humann2.tests.cfg",
            "humann2.tests.functional_tests_biom_humann2",
            "humann2.tests.functional_tests_biom_tools",
            "humann2.tests.functional_tests_humann2",
            "humann2.tests.functional_tests_tools",
            "humann2.tests.humann2_test",
            "humann2.tests.utils",
            "humann2.tools",
            "humann2.tools.build_custom_database",
            "humann2.tools.genefamilies_genus_level",
            "humann2.tools.humann2_associate",
            "humann2.tools.humann2_barplot",
            "humann2.tools.humann2_benchmark",
            "humann2.tools.humann2_config",
            "humann2.tools.humann2_databases",
            "humann2.tools.humann2_expand_results_taxonomy",
            "humann2.tools.humann2_humann1_kegg",
            "humann2.tools.infer_taxonomy",
            "humann2.tools.join_tables",
            "humann2.tools.merge_abundance",
            "humann2.tools.reduce_table",
            "humann2.tools.regroup_table",
            "humann2.tools.rename_table",
            "humann2.tools.renorm_table",
            "humann2.tools.rna_dna_norm",
            "humann2.tools.split_stratified_table",
            "humann2.tools.split_table",
            "humann2.tools.strain_profiler",
            "humann2.tools.util",
            "humann2.utilities"
        ],
        "version": "0.11.1"
    },
    "humanrandom": {
        "cmdline": [],
        "modules": [
            "HumanRandom"
        ],
        "version": "1.1b"
    },
    "humanreadablebinaryconverter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "humans": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "humansize": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "humanstxt": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "humble": {
        "cmdline": [],
        "modules": [
            "humble",
            "humble.cli",
            "humble.core"
        ],
        "version": "0.1.2"
    },
    "humblebee": {
        "cmdline": [],
        "modules": [
            "humblebee",
            "humblebee.bing",
            "humblebee.cfg",
            "humblebee.cli",
            "humblebee.dbguy",
            "humblebee.dirscanner",
            "humblebee.entrypoint",
            "humblebee.importer",
            "humblebee.logger",
            "humblebee.mediainfo",
            "humblebee.parser",
            "humblebee.quality",
            "humblebee.renaming",
            "humblebee.texceptions",
            "humblebee.tvdbwrapper",
            "humblebee.tvregexes",
            "humblebee.unrarman",
            "humblebee.util",
            "humblebee.virtualfs"
        ],
        "version": "1.101"
    },
    "humblebundle": {
        "cmdline": [],
        "modules": [
            "humblebundle",
            "humblebundle.client",
            "humblebundle.decorators",
            "humblebundle.exceptions",
            "humblebundle.handlers",
            "humblebundle.models"
        ],
        "version": "0.1.1"
    },
    "humbleclient": {
        "cmdline": [
            "humblec"
        ],
        "modules": [
            "humble"
        ],
        "version": "0.1.3"
    },
    "humbledb": {
        "cmdline": [],
        "modules": [
            "humbledb",
            "humbledb._version",
            "humbledb.array",
            "humbledb.cursor",
            "humbledb.document",
            "humbledb.errors",
            "humbledb.helpers",
            "humbledb.index",
            "humbledb.maps",
            "humbledb.mongo",
            "humbledb.report",
            "test_humbledb",
            "test_humbledb.test_array",
            "test_humbledb.test_cursor",
            "test_humbledb.test_document",
            "test_humbledb.test_helpers",
            "test_humbledb.test_index",
            "test_humbledb.test_maps",
            "test_humbledb.test_mongo",
            "test_humbledb.test_report"
        ],
        "version": "5.6.1"
    },
    "humblematch": {
        "cmdline": [],
        "modules": [
            "humblematch",
            "humblematch.runtests",
            "humblematch.wrap_obj"
        ],
        "version": "0.1.1"
    },
    "humblesetuptools": {
        "cmdline": [],
        "modules": [
            "_markerlib",
            "_markerlib.markers",
            "setuptools",
            "setuptools.archive_util",
            "setuptools.command",
            "setuptools.command.alias",
            "setuptools.command.bdist_egg",
            "setuptools.command.bdist_rpm",
            "setuptools.command.bdist_wininst",
            "setuptools.command.build_ext",
            "setuptools.command.build_py",
            "setuptools.command.develop",
            "setuptools.command.easy_install",
            "setuptools.command.egg_info",
            "setuptools.command.install",
            "setuptools.command.install_egg_info",
            "setuptools.command.install_lib",
            "setuptools.command.install_scripts",
            "setuptools.command.register",
            "setuptools.command.rotate",
            "setuptools.command.saveopts",
            "setuptools.command.sdist",
            "setuptools.command.setopt",
            "setuptools.command.test",
            "setuptools.command.upload_docs",
            "setuptools.compat",
            "setuptools.depends",
            "setuptools.dist",
            "setuptools.extension",
            "setuptools.lib2to3_ex",
            "setuptools.package_index",
            "setuptools.py26compat",
            "setuptools.py27compat",
            "setuptools.py31compat",
            "setuptools.sandbox",
            "setuptools.script template",
            "setuptools.script template (dev)",
            "setuptools.site-patch",
            "setuptools.ssl_support",
            "setuptools.svn_utils",
            "setuptools.tests",
            "setuptools.tests.doctest",
            "setuptools.tests.environment",
            "setuptools.tests.py26compat",
            "setuptools.tests.script-with-bom",
            "setuptools.tests.server",
            "setuptools.tests.test_bdist_egg",
            "setuptools.tests.test_build_ext",
            "setuptools.tests.test_develop",
            "setuptools.tests.test_dist_info",
            "setuptools.tests.test_easy_install",
            "setuptools.tests.test_egg_info",
            "setuptools.tests.test_find_packages",
            "setuptools.tests.test_markerlib",
            "setuptools.tests.test_packageindex",
            "setuptools.tests.test_resources",
            "setuptools.tests.test_sandbox",
            "setuptools.tests.test_sdist",
            "setuptools.tests.test_svn",
            "setuptools.tests.test_test",
            "setuptools.tests.test_upload_docs",
            "setuptools.version"
        ],
        "version": "3.4.5"
    },
    "humblewx": {
        "cmdline": [],
        "modules": [
            "humblewx"
        ],
        "version": "0.2.1"
    },
    "humboldt.cmfbibliographyat": {
        "cmdline": [],
        "modules": [
            "humboldt",
            "humboldt.cmfbibliographyat",
            "humboldt.cmfbibliographyat.adapters",
            "humboldt.cmfbibliographyat.adapters.adapters",
            "humboldt.cmfbibliographyat.bibliographicitemextensions",
            "humboldt.cmfbibliographyat.browser",
            "humboldt.cmfbibliographyat.browser.sfx",
            "humboldt.cmfbibliographyat.config",
            "humboldt.cmfbibliographyat.content",
            "humboldt.cmfbibliographyat.interfaces",
            "humboldt.cmfbibliographyat.patches",
            "humboldt.cmfbibliographyat.portlets",
            "humboldt.cmfbibliographyat.setuphandlers",
            "humboldt.cmfbibliographyat.tests",
            "humboldt.cmfbibliographyat.tests.base",
            "humboldt.cmfbibliographyat.tests.test_doctest"
        ],
        "version": "0.2.5.3"
    },
    "humbug-forensics": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "humfrey": {
        "cmdline": [],
        "modules": [
            "humfrey",
            "humfrey.analytics",
            "humfrey.analytics.context_processors",
            "humfrey.archive",
            "humfrey.archive.models",
            "humfrey.archive.tasks",
            "humfrey.base",
            "humfrey.base.middleware",
            "humfrey.base.models",
            "humfrey.ckan",
            "humfrey.ckan.models",
            "humfrey.ckan.tasks",
            "humfrey.desc",
            "humfrey.desc.models",
            "humfrey.desc.query",
            "humfrey.desc.rdf_processors",
            "humfrey.desc.templatetags",
            "humfrey.desc.templatetags.humfrey_desc",
            "humfrey.desc.tests",
            "humfrey.desc.urls",
            "humfrey.desc.views",
            "humfrey.elasticsearch",
            "humfrey.elasticsearch.admin",
            "humfrey.elasticsearch.forms",
            "humfrey.elasticsearch.models",
            "humfrey.elasticsearch.tasks",
            "humfrey.elasticsearch.templatetags",
            "humfrey.elasticsearch.templatetags.humfrey_elasticsearch",
            "humfrey.elasticsearch.tests",
            "humfrey.elasticsearch.update",
            "humfrey.elasticsearch.views",
            "humfrey.graphviz",
            "humfrey.graphviz.models",
            "humfrey.graphviz.templatetags",
            "humfrey.graphviz.templatetags.humfrey_graphviz",
            "humfrey.graphviz.views",
            "humfrey.linkeddata",
            "humfrey.linkeddata.mappingconf",
            "humfrey.linkeddata.models",
            "humfrey.linkeddata.resource",
            "humfrey.linkeddata.tests",
            "humfrey.linkeddata.uri",
            "humfrey.linkeddata.views",
            "humfrey.manage",
            "humfrey.manage.views",
            "humfrey.misc",
            "humfrey.misc.models",
            "humfrey.misc.views",
            "humfrey.pingback",
            "humfrey.pingback.admin",
            "humfrey.pingback.extraction",
            "humfrey.pingback.middleware",
            "humfrey.pingback.models",
            "humfrey.pingback.rdf_processors",
            "humfrey.pingback.tasks",
            "humfrey.pingback.urls",
            "humfrey.pingback.urls.admin",
            "humfrey.pingback.urls.public",
            "humfrey.pingback.views",
            "humfrey.results",
            "humfrey.results.models",
            "humfrey.results.tests",
            "humfrey.results.views",
            "humfrey.results.views.feed",
            "humfrey.results.views.geospatial",
            "humfrey.results.views.spreadsheet",
            "humfrey.results.views.standard",
            "humfrey.settings",
            "humfrey.settings.common",
            "humfrey.sparql",
            "humfrey.sparql.admin",
            "humfrey.sparql.endpoint",
            "humfrey.sparql.forms",
            "humfrey.sparql.models",
            "humfrey.sparql.results",
            "humfrey.sparql.urls",
            "humfrey.sparql.urls.admin",
            "humfrey.sparql.urls.simple",
            "humfrey.sparql.utils",
            "humfrey.sparql.views",
            "humfrey.sparql.views.admin",
            "humfrey.sparql.views.core",
            "humfrey.sparql.views.misc",
            "humfrey.streaming",
            "humfrey.streaming.models",
            "humfrey.streaming.ntriples",
            "humfrey.streaming.rdfxml",
            "humfrey.streaming.srx",
            "humfrey.streaming.tests",
            "humfrey.tests",
            "humfrey.tests.hosts",
            "humfrey.tests.runners",
            "humfrey.tests.settings",
            "humfrey.tests.stubs",
            "humfrey.tests.urls",
            "humfrey.tests.urls.empty",
            "humfrey.tests.urls.main",
            "humfrey.thumbnail",
            "humfrey.thumbnail.encoding",
            "humfrey.thumbnail.templatetags",
            "humfrey.thumbnail.templatetags.humfrey_thumbnail",
            "humfrey.thumbnail.views",
            "humfrey.update",
            "humfrey.update.admin",
            "humfrey.update.forms",
            "humfrey.update.models",
            "humfrey.update.tasks",
            "humfrey.update.tasks.retrieve",
            "humfrey.update.tasks.run_dependents",
            "humfrey.update.tasks.update",
            "humfrey.update.templatetags",
            "humfrey.update.templatetags.humfrey_update",
            "humfrey.update.tests",
            "humfrey.update.tests.spreadsheet",
            "humfrey.update.transform",
            "humfrey.update.transform.base",
            "humfrey.update.transform.construct",
            "humfrey.update.transform.html",
            "humfrey.update.transform.local_file",
            "humfrey.update.transform.normalize",
            "humfrey.update.transform.retrieve",
            "humfrey.update.transform.sparql_filter",
            "humfrey.update.transform.spreadsheet",
            "humfrey.update.transform.union",
            "humfrey.update.transform.upload",
            "humfrey.update.transform.vocabularies",
            "humfrey.update.transform.xslt",
            "humfrey.update.uploader",
            "humfrey.update.urls",
            "humfrey.update.utils",
            "humfrey.update.views",
            "humfrey.urls",
            "humfrey.utils",
            "humfrey.utils.namespaces",
            "humfrey.utils.query",
            "humfrey.utils.views"
        ],
        "version": "0.3.9"
    },
    "humilis": {
        "cmdline": [],
        "modules": [
            "humilis",
            "humilis.cli",
            "humilis.config",
            "humilis.environment",
            "humilis.exceptions",
            "humilis.j2",
            "humilis.layer",
            "humilis.reference",
            "humilis.utils",
            "tests"
        ],
        "version": "1.3.6"
    },
    "humilis-asg": {
        "cmdline": [],
        "modules": [
            "humilis_asg",
            "humilis_asg.plugin"
        ],
        "version": "0.3.7"
    },
    "humilis-elasticache": {
        "cmdline": [],
        "modules": [
            "humilis_elasticache",
            "humilis_elasticache.plugin"
        ],
        "version": "0.0.4"
    },
    "humilis-es": {
        "cmdline": [],
        "modules": [
            "humilis_es",
            "humilis_es.plugin"
        ],
        "version": "0.0.6"
    },
    "humilis-firehose": {
        "cmdline": [],
        "modules": [
            "humilis_firehose",
            "humilis_firehose.plugin"
        ],
        "version": "0.1.7"
    },
    "humilis-kinesis-mapper": {
        "cmdline": [],
        "modules": [
            "humilis_kinesis_mapper",
            "humilis_kinesis_mapper.lambda_function",
            "humilis_kinesis_mapper.lambda_function.handler",
            "humilis_kinesis_mapper.lambda_function.handler.processor",
            "humilis_kinesis_mapper.lambda_function.handler.processor.core",
            "humilis_kinesis_mapper.lambda_function.handler.processor.exceptions",
            "humilis_kinesis_mapper.lambda_function.handler.processor.main",
            "humilis_kinesis_mapper.lambda_function.setup",
            "humilis_kinesis_mapper.plugin"
        ],
        "version": "0.1.1"
    },
    "humilis-kinesis-processor": {
        "cmdline": [],
        "modules": [
            "humilis_kinesis_processor",
            "humilis_kinesis_processor.lambda_function",
            "humilis_kinesis_processor.lambda_function.handler",
            "humilis_kinesis_processor.lambda_function.handler.processor",
            "humilis_kinesis_processor.lambda_function.setup",
            "humilis_kinesis_processor.plugin"
        ],
        "version": "1.0.1"
    },
    "humilis-kinesis-proxy": {
        "cmdline": [],
        "modules": [
            "humilis_kinesis_proxy",
            "humilis_kinesis_proxy.plugin"
        ],
        "version": "0.0.2"
    },
    "humilis-microservice": {
        "cmdline": [],
        "modules": [
            "humilis_microservice",
            "humilis_microservice.lambda_function",
            "humilis_microservice.lambda_function.handler",
            "humilis_microservice.lambda_function.setup",
            "humilis_microservice.plugin"
        ],
        "version": "0.0.5"
    },
    "humilis-push-processor": {
        "cmdline": [],
        "modules": [
            "humilis_push_processor",
            "humilis_push_processor.lambda_function",
            "humilis_push_processor.lambda_function.handler",
            "humilis_push_processor.lambda_function.handler.processor",
            "humilis_push_processor.lambda_function.setup",
            "humilis_push_processor.plugin"
        ],
        "version": "0.0.8"
    },
    "humilis-sam": {
        "cmdline": [],
        "modules": [
            "humilis_sam",
            "humilis_sam.lambda_function",
            "humilis_sam.lambda_function.handler",
            "humilis_sam.lambda_function.setup",
            "humilis_sam.plugin"
        ],
        "version": "0.0.9"
    },
    "humilis-sam2": {
        "cmdline": [],
        "modules": [
            "humilis_sam",
            "humilis_sam.lambda_function",
            "humilis_sam.lambda_function.handler",
            "humilis_sam.lambda_function.setup",
            "humilis_sam.plugin"
        ],
        "version": "0.0.9"
    },
    "humilis-secrets-vault": {
        "cmdline": [],
        "modules": [
            "humilis_secrets_vault",
            "humilis_secrets_vault.metadata"
        ],
        "version": "0.2.4"
    },
    "humilis-security": {
        "cmdline": [],
        "modules": [
            "humilis_security",
            "humilis_security.plugin"
        ],
        "version": "0.0.5"
    },
    "humilis-streams": {
        "cmdline": [],
        "modules": [
            "humilis_streams",
            "humilis_streams.metadata"
        ],
        "version": "0.0.5"
    },
    "humilis-vpc": {
        "cmdline": [],
        "modules": [
            "humilis_vpc",
            "humilis_vpc.plugin"
        ],
        "version": "0.2.4"
    },
    "hummingbird": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hummus": {
        "cmdline": [],
        "modules": [
            "hummus",
            "hummus.document",
            "hummus.font",
            "hummus.meta",
            "hummus.stream"
        ],
        "version": "0.3.17"
    },
    "humongolus": {
        "cmdline": [],
        "modules": [
            "humongolus",
            "humongolus.field",
            "humongolus.mongo",
            "humongolus.settings",
            "humongolus.widget",
            "tests",
            "tests.objects",
            "tests.states",
            "tests.test_field"
        ],
        "version": "1.0.7"
    },
    "humongous": {
        "cmdline": [],
        "modules": [
            "humongous",
            "humongous.plugin"
        ],
        "version": "1.3.0"
    },
    "humor": {
        "cmdline": [],
        "modules": [
            "humor"
        ],
        "version": "0.1.0"
    },
    "humphree": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "humphrey": {
        "cmdline": [],
        "modules": [
            "humphrey",
            "humphrey.humphrey"
        ],
        "version": "0.5.0"
    },
    "humpty": {
        "cmdline": [],
        "modules": [
            "dist2",
            "dist2.plugins",
            "dist2.plugins.builtin",
            "extension_dist"
        ],
        "version": "0.1"
    },
    "humpy": {
        "cmdline": [],
        "modules": [
            "humpy"
        ],
        "version": "0.1.2"
    },
    "humu-download": {
        "cmdline": [],
        "modules": [
            "humu_download",
            "humu_download.main"
        ],
        "version": "1.1.5"
    },
    "humus": {
        "cmdline": [],
        "modules": [
            "humus",
            "humus.commands",
            "humus.core",
            "humus.exceptions",
            "tests",
            "tests.core_tests"
        ],
        "version": "0.4.3"
    },
    "hunester": {
        "cmdline": [],
        "modules": [
            "hunester"
        ],
        "version": "1.3.0"
    },
    "hungarian": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.3"
    },
    "hungry": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hunk": {
        "cmdline": [],
        "modules": [
            "hunk",
            "hunk._compat",
            "hunk.production",
            "hunk.resource",
            "hunk.server",
            "tests",
            "tests._compat",
            "tests.test_demo"
        ],
        "version": "0.1.0"
    },
    "hunspell": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.1"
    },
    "hunspell-cffi": {
        "cmdline": [],
        "modules": [
            "hunspell_cffi",
            "hunspell_cffi.build"
        ],
        "version": "1.1.1"
    },
    "hunt": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hunter": {
        "cmdline": [],
        "modules": [
            "hunter",
            "hunter.actions",
            "hunter.const",
            "hunter.event",
            "hunter.predicates",
            "hunter.tracer",
            "hunter.util"
        ],
        "version": "1.4.1"
    },
    "hunter-nester": {
        "cmdline": [],
        "modules": [
            "hunter_nester"
        ],
        "version": "1.0.0"
    },
    "huobi-client": {
        "cmdline": [
            "huobi"
        ],
        "modules": [
            "huobi_client",
            "huobi_client.client",
            "huobi_client.socketIO_client",
            "huobi_client.socketIO_client.exceptions",
            "huobi_client.socketIO_client.symmetries",
            "huobi_client.socketIO_client.tests",
            "huobi_client.socketIO_client.transports",
            "huobi_client.streaming_client"
        ],
        "version": "0.3.1"
    },
    "hupili": {
        "cmdline": [],
        "modules": [
            "hupili",
            "hupili.mq",
            "hupili.pltime"
        ],
        "version": "0.2.0"
    },
    "hupper": {
        "cmdline": [],
        "modules": [
            "hupper",
            "hupper.cli",
            "hupper.compat",
            "hupper.interfaces",
            "hupper.ipc",
            "hupper.polling",
            "hupper.reloader",
            "hupper.watchdog",
            "hupper.winapi",
            "hupper.worker"
        ],
        "version": "1.0"
    },
    "hupwatch": {
        "cmdline": [],
        "modules": [
            "hupwatch",
            "hupwatch.args_parser",
            "hupwatch.command",
            "hupwatch.service"
        ],
        "version": "0.0.3"
    },
    "hurl": {
        "cmdline": [],
        "modules": [
            "hurl"
        ],
        "version": "2.1"
    },
    "hurler": {
        "cmdline": [],
        "modules": [
            "hurler",
            "hurler.callbacks",
            "hurler.filters",
            "hurler.test_callbacks",
            "hurler.test_example",
            "hurler.test_filters"
        ],
        "version": "0.1.0"
    },
    "hurm.db": {
        "cmdline": [],
        "modules": [
            "db",
            "db.entities",
            "db.entities.activity",
            "db.entities.activitypayload",
            "db.entities.availability",
            "db.entities.duty",
            "db.entities.dutypayload",
            "db.entities.edition",
            "db.entities.location",
            "db.entities.person",
            "db.entities.personactivity",
            "db.entities.task",
            "db.tables",
            "db.tables.activities",
            "db.tables.activitypayloads",
            "db.tables.availabilities",
            "db.tables.domains",
            "db.tables.duties",
            "db.tables.dutypayloads",
            "db.tables.editions",
            "db.tables.locations",
            "db.tables.personactivities",
            "db.tables.persons",
            "db.tables.tasks",
            "db.utils"
        ],
        "version": "0.10"
    },
    "hurm.fe": {
        "cmdline": [],
        "modules": [
            "fe",
            "fe.i18n",
            "fe.printouts",
            "fe.printouts.calendar",
            "fe.printouts.edition",
            "fe.printouts.location",
            "fe.printouts.person",
            "fe.views",
            "fe.views.activities",
            "fe.views.auth",
            "fe.views.availabilities",
            "fe.views.countries",
            "fe.views.download",
            "fe.views.duties",
            "fe.views.editions",
            "fe.views.locations",
            "fe.views.payloads",
            "fe.views.persons",
            "fe.views.subcountries",
            "fe.views.tasks"
        ],
        "version": "0.10"
    },
    "huron": {
        "cmdline": [],
        "modules": [
            "huron",
            "huron.blog",
            "huron.blog.admin",
            "huron.blog.feeds",
            "huron.blog.models",
            "huron.blog.sitemaps",
            "huron.blog.tests",
            "huron.blog.urls",
            "huron.blog.views",
            "huron.contact_form",
            "huron.contact_form.forms",
            "huron.contact_form.models",
            "huron.contact_form.tests",
            "huron.contact_form.urls",
            "huron.contact_form.views",
            "huron.menus_manager",
            "huron.menus_manager.admin",
            "huron.menus_manager.admin_views",
            "huron.menus_manager.models",
            "huron.menus_manager.tests",
            "huron.menus_manager.urls",
            "huron.menus_manager.views",
            "huron.pages",
            "huron.pages.admin",
            "huron.pages.models",
            "huron.pages.tests",
            "huron.pages.urls",
            "huron.pages.views",
            "huron.settings",
            "huron.settings.admin",
            "huron.settings.context_processors",
            "huron.settings.models",
            "huron.settings.templatetags",
            "huron.settings.templatetags.settings_custom",
            "huron.settings.tests",
            "huron.settings.views",
            "huron.simple_medias_manager",
            "huron.simple_medias_manager.admin",
            "huron.simple_medias_manager.admin_views",
            "huron.simple_medias_manager.models",
            "huron.simple_medias_manager.tests",
            "huron.simple_medias_manager.urls",
            "huron.simple_medias_manager.views",
            "huron.simple_news",
            "huron.simple_news.admin",
            "huron.simple_news.feeds",
            "huron.simple_news.models",
            "huron.simple_news.sitemaps",
            "huron.simple_news.tests",
            "huron.simple_news.urls",
            "huron.simple_news.views",
            "huron.slider",
            "huron.slider.admin",
            "huron.slider.models",
            "huron.slider.tests",
            "huron.slider.views",
            "huron.utils",
            "huron.utils.admin",
            "huron.utils.image",
            "huron.utils.models",
            "huron.utils.tests",
            "huron.utils.views",
            "tests",
            "tests.manage",
            "tests.settings",
            "tests.urls"
        ],
        "version": "0.5.4"
    },
    "hurr-durr": {
        "cmdline": [],
        "modules": [
            "hurr_durr",
            "hurr_durr.handlers",
            "hurr_durr.watcher"
        ],
        "version": "0.2.2"
    },
    "hurricane": {
        "cmdline": [],
        "modules": [
            "demos",
            "demos.chat",
            "demos.chat.run",
            "demos.chat.settings",
            "demos.spritzer",
            "demos.spritzer.run",
            "demos.spritzer.settings",
            "demos.spritzer.spritzer_handler",
            "hurricane",
            "hurricane.base",
            "hurricane.handlers",
            "hurricane.handlers.base",
            "hurricane.handlers.comet",
            "hurricane.handlers.logging",
            "hurricane.handlers.printing",
            "hurricane.handlers.random_data",
            "hurricane.handlers.twitter",
            "hurricane.managers",
            "hurricane.managers.base",
            "hurricane.managers.ipc",
            "hurricane.managers.stompqueue",
            "hurricane.runner",
            "hurricane.utils"
        ],
        "version": "0.1"
    },
    "hurricane-factory": {
        "cmdline": [
            "hcf"
        ],
        "modules": [
            "hurricane_factory",
            "hurricane_factory.commands"
        ],
        "version": "0.1.5"
    },
    "hurricane-web": {
        "cmdline": [],
        "modules": [],
        "version": "0.1a1"
    },
    "hurricanedns": {
        "cmdline": [
            "hurricanedns"
        ],
        "modules": [
            "HurricaneDNS"
        ],
        "version": "1.0.1"
    },
    "hurriyetlog": {
        "cmdline": [],
        "modules": [
            "hurriyetlog",
            "hurriyetlog.RabbitMQHandler",
            "hurriyetlog.RabbitMQTornadoHandler",
            "hurriyetlog.hurriyetlog"
        ],
        "version": "0.16"
    },
    "hurry.custom": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.custom",
            "hurry.custom.core",
            "hurry.custom.interfaces",
            "hurry.custom.jsont",
            "hurry.custom.testing",
            "hurry.custom.tests",
            "hurry.custom.zcml"
        ],
        "version": "0.6.2"
    },
    "hurry.datalink": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.datalink",
            "hurry.datalink.tests"
        ],
        "version": "0.1"
    },
    "hurry.datatables": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.datatables",
            "hurry.datatables.tests"
        ],
        "version": "1.7.6"
    },
    "hurry.explorer": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.explorer",
            "hurry.explorer.explorer"
        ],
        "version": "0.2"
    },
    "hurry.extjs": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.extjs",
            "hurry.extjs.extjs",
            "hurry.extjs.tests"
        ],
        "version": "2.2.1"
    },
    "hurry.file": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.file",
            "hurry.file.browser",
            "hurry.file.browser.tests",
            "hurry.file.browser.widget",
            "hurry.file.file",
            "hurry.file.interfaces",
            "hurry.file.schema",
            "hurry.file.tests"
        ],
        "version": "1.2.1"
    },
    "hurry.filesize": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.filesize",
            "hurry.filesize.filesize",
            "hurry.filesize.tests"
        ],
        "version": "0.9"
    },
    "hurry.jgrowl": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jgrowl",
            "hurry.jgrowl.tests"
        ],
        "version": "1.2.4"
    },
    "hurry.jqgrid": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jqgrid",
            "hurry.jqgrid.tests"
        ],
        "version": "3.6.2.0"
    },
    "hurry.jqplot": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jqplot",
            "hurry.jqplot._lib",
            "hurry.jqplot.prepare",
            "hurry.jqplot.tests"
        ],
        "version": "0.9.7.2"
    },
    "hurry.jquery": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jquery",
            "hurry.jquery._lib",
            "hurry.jquery.prepare",
            "hurry.jquery.tests"
        ],
        "version": "1.4.3.1"
    },
    "hurry.jqueryform": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jqueryform",
            "hurry.jqueryform.tests"
        ],
        "version": "2.47.1"
    },
    "hurry.jquerylayout": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jquerylayout",
            "hurry.jquerylayout.tests"
        ],
        "version": "1.2.0.2"
    },
    "hurry.jquerytools": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jquerytools",
            "hurry.jquerytools.prepare",
            "hurry.jquerytools.tests"
        ],
        "version": "1.2.5.1"
    },
    "hurry.jqueryui": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jqueryui",
            "hurry.jqueryui._themes",
            "hurry.jqueryui.prepare",
            "hurry.jqueryui.tests"
        ],
        "version": "1.8.5.1"
    },
    "hurry.jqueryutils": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jqueryutils",
            "hurry.jqueryutils._lib",
            "hurry.jqueryutils.tests"
        ],
        "version": "0.8.5.1"
    },
    "hurry.jstree": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.jstree",
            "hurry.jstree.tests"
        ],
        "version": "1.0rc2.1"
    },
    "hurry.query": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.query",
            "hurry.query.interfaces",
            "hurry.query.query",
            "hurry.query.set",
            "hurry.query.tests",
            "hurry.query.value"
        ],
        "version": "2.3"
    },
    "hurry.qunit": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.qunit",
            "hurry.qunit._lib",
            "hurry.qunit.tests"
        ],
        "version": "0.5"
    },
    "hurry.raphael": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.raphael",
            "hurry.raphael._lib",
            "hurry.raphael.prepare",
            "hurry.raphael.tests"
        ],
        "version": "1.4.3.2"
    },
    "hurry.resource": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.resource",
            "hurry.resource.core",
            "hurry.resource.interfaces",
            "hurry.resource.tests",
            "hurry.resource.wsgi",
            "hurry.resource.zca"
        ],
        "version": "0.10"
    },
    "hurry.slimbox": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.slimbox",
            "hurry.slimbox.prepare",
            "hurry.slimbox.tests"
        ],
        "version": "2.03"
    },
    "hurry.tinymce": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.tinymce",
            "hurry.tinymce.download",
            "hurry.tinymce.prepare",
            "hurry.tinymce.tests",
            "hurry.tinymce.tinymce"
        ],
        "version": "3.3.9.4"
    },
    "hurry.workflow": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.workflow",
            "hurry.workflow.interfaces",
            "hurry.workflow.tests",
            "hurry.workflow.workflow"
        ],
        "version": "0.13.1"
    },
    "hurry.yui": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.yui",
            "hurry.yui.depend",
            "hurry.yui.download",
            "hurry.yui.prepare",
            "hurry.yui.tests",
            "hurry.yui.yui"
        ],
        "version": "2.7.0.1"
    },
    "hurry.zoperesource": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hurry.zopetinymce": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.zopetinymce"
        ],
        "version": "0.1"
    },
    "hurry.zopeyui": {
        "cmdline": [],
        "modules": [
            "hurry",
            "hurry.zopeyui"
        ],
        "version": "0.1"
    },
    "hurt": {
        "cmdline": [],
        "modules": [
            "hurt",
            "hurt.middleware",
            "hurt.router"
        ],
        "version": "1.0.0"
    },
    "hurumap": {
        "cmdline": [],
        "modules": [
            "census",
            "census.admin",
            "census.context_processors",
            "census.management",
            "census.management.commands",
            "census.management.commands.cache_to_s3",
            "census.management.commands.taxonify_table_metadata",
            "census.models",
            "census.profile",
            "census.templatetags",
            "census.templatetags.comparatives",
            "census.templatetags.lookup",
            "census.templatetags.madlibs",
            "census.templatetags.partition",
            "census.templatetags.sumlevs",
            "census.templatetags.tabletags",
            "census.tests",
            "census.topics",
            "census.urls",
            "census.utils",
            "census.views",
            "hurumap",
            "hurumap.apps",
            "hurumap.context_processors",
            "hurumap.data",
            "hurumap.data.base",
            "hurumap.data.download",
            "hurumap.data.tables",
            "hurumap.data.utils",
            "hurumap.geo",
            "hurumap.middleware",
            "hurumap.migrations",
            "hurumap.migrations.0001_initial",
            "hurumap.migrations.0002_geography_long_name",
            "hurumap.migrations.0003_remove_geography_osm_area_id",
            "hurumap.migrations.0004_auto_20160302_1645",
            "hurumap.models",
            "hurumap.profiles",
            "hurumap.settings",
            "hurumap.templatetags",
            "hurumap.templatetags.jsonify",
            "hurumap.templatetags.stats",
            "hurumap.tests",
            "hurumap.tests.data",
            "hurumap.tests.data.test_utils",
            "hurumap.tests.support",
            "hurumap.urls",
            "hurumap.views",
            "hurumap.wsgi"
        ],
        "version": "0.7.8"
    },
    "husband": {
        "cmdline": [],
        "modules": [
            "husband"
        ],
        "version": "0.1.0"
    },
    "husk": {
        "cmdline": [],
        "modules": [
            "husk",
            "husk.commands",
            "husk.commands.add",
            "husk.commands.info",
            "husk.commands.init",
            "husk.commands.move",
            "husk.commands.remove",
            "husk.commands.workon",
            "husk.config",
            "husk.constants",
            "husk.decorators",
            "husk.exceptions",
            "husk.note",
            "husk.repo",
            "tests",
            "tests.cli"
        ],
        "version": "0.1.2"
    },
    "husky": {
        "cmdline": [],
        "modules": [
            "Husky",
            "Husky.class_husky",
            "Husky.dict_husky",
            "Husky.function_husky",
            "Husky.generator_husky",
            "Husky.instance_husky",
            "Husky.iterable_husky",
            "Husky.module_husky",
            "Husky.type_husky",
            "Husky.wrap"
        ],
        "version": "0.1.7"
    },
    "husl": {
        "cmdline": [],
        "modules": [],
        "version": "4.0.3"
    },
    "husoftm": {
        "cmdline": [],
        "modules": [
            "husoftm",
            "husoftm.artikel",
            "husoftm.auftraege",
            "husoftm.bestaende",
            "husoftm.bestellungen",
            "husoftm.connection",
            "husoftm.connection2",
            "husoftm.fields",
            "husoftm.kunden",
            "husoftm.lagerschnittstelle",
            "husoftm.lieferanten",
            "husoftm.lieferscheine",
            "husoftm.misc",
            "husoftm.mock_as400",
            "husoftm.preise_ek",
            "husoftm.rechnungen",
            "husoftm.sachbearbeiter",
            "husoftm.softmtables",
            "husoftm.stapelschnittstelle",
            "husoftm.stapelschnittstelle_const",
            "husoftm.tools",
            "husoftm.versandart"
        ],
        "version": "0.65p2"
    },
    "hust": {
        "cmdline": [],
        "modules": [
            "hust",
            "hust.cli",
            "hust.temp",
            "hust.utils"
        ],
        "version": "0.0.2"
    },
    "hutools": {
        "cmdline": [],
        "modules": [
            "huTools",
            "huTools.NetStringIO",
            "huTools.ReReadingConfigParser",
            "huTools._decorator",
            "huTools._jsonlib",
            "huTools.aggregation",
            "huTools.async",
            "huTools.bank",
            "huTools.cache",
            "huTools.calendar",
            "huTools.calendar.count_weekends",
            "huTools.calendar.formats",
            "huTools.calendar.tools",
            "huTools.calendar.workdays",
            "huTools.checksumming",
            "huTools.couch",
            "huTools.daemon",
            "huTools.decorators",
            "huTools.fmtp",
            "huTools.fs",
            "huTools.http",
            "huTools.http._httplib2",
            "huTools.http._httplib2.iri2uri",
            "huTools.http.engine_appengine",
            "huTools.http.engine_httplib2",
            "huTools.http.exceptions",
            "huTools.http.poster_encode",
            "huTools.http.test",
            "huTools.http.tools",
            "huTools.huLint",
            "huTools.hujson",
            "huTools.humessaging",
            "huTools.luids",
            "huTools.monetary",
            "huTools.obfuscation",
            "huTools.postmark",
            "huTools.printing",
            "huTools.protocols",
            "huTools.pyjasper",
            "huTools.rest",
            "huTools.robusttypecasts",
            "huTools.structured",
            "huTools.unicode",
            "huTools.world",
            "huTools.xmltools"
        ],
        "version": "0.63"
    },
    "hux": {
        "cmdline": [],
        "modules": [
            "print_log"
        ],
        "version": "1.4.1"
    },
    "huxley": {
        "cmdline": [],
        "modules": [
            "huxley",
            "huxley.cmdline",
            "huxley.consts",
            "huxley.errors",
            "huxley.images",
            "huxley.integration",
            "huxley.main",
            "huxley.run",
            "huxley.steps",
            "huxley.threadpool",
            "huxley.version"
        ],
        "version": "0.5"
    },
    "huzhifeng": {
        "cmdline": [],
        "modules": [
            "huzhifeng",
            "huzhifeng.lib"
        ],
        "version": "0.1.1"
    },
    "huzzer": {
        "cmdline": [],
        "modules": [
            "huzzer",
            "huzzer.code_gen",
            "huzzer.expressions",
            "huzzer.function_generator",
            "huzzer.huzz",
            "huzzer.namers",
            "huzzer.namers.default_namer",
            "huzzer.tokenizing",
            "huzzer.tokenizing.SubHaskellLexer",
            "huzzer.tokenizing.SubHaskellListener",
            "huzzer.tokenizing.SubHaskellParser",
            "huzzer.tokenizing.SubHaskellVisitor",
            "huzzer.tokenizing.tokenize"
        ],
        "version": "0.1.0"
    },
    "hv": {
        "cmdline": [],
        "modules": [
            "hv",
            "hv.datastore",
            "hv.entity",
            "hv.util"
        ],
        "version": "0.1.1"
    },
    "hv-uploader": {
        "cmdline": [],
        "modules": [
            "hv_uploader"
        ],
        "version": "2017.2.16"
    },
    "hvac": {
        "cmdline": [],
        "modules": [
            "hvac",
            "hvac.exceptions",
            "hvac.tests",
            "hvac.tests.test_integration",
            "hvac.tests.util",
            "hvac.v1"
        ],
        "version": "0.2.17"
    },
    "hvsi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hw": {
        "cmdline": [],
        "modules": [
            "hw"
        ],
        "version": "1.0.0"
    },
    "hw-lvrui": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hw.python.nester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hw2507-nester": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hw2while": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hwd": {
        "cmdline": [],
        "modules": [
            "hwd",
            "hwd.network",
            "hwd.storage",
            "hwd.udev",
            "hwd.wrapper"
        ],
        "version": "0.3"
    },
    "hwffd": {
        "cmdline": [],
        "modules": [
            "hwffd",
            "hwffd.hwffd",
            "tests",
            "tests.test_hwffd"
        ],
        "version": "0.1"
    },
    "hwformatter": {
        "cmdline": [
            "format_HW"
        ],
        "modules": [
            "HWFormatter",
            "HWFormatter.formatter"
        ],
        "version": "0.4"
    },
    "hwiopy": {
        "cmdline": [],
        "modules": [
            "hwiopy",
            "hwiopy.core",
            "hwiopy.core.core",
            "hwiopy.platforms",
            "hwiopy.platforms.beagle",
            "hwiopy.systems",
            "hwiopy.systems.cortexA8"
        ],
        "version": "0.1.1"
    },
    "hwit-core": {
        "cmdline": [],
        "modules": [
            "hwit",
            "hwit.checks",
            "hwit.checks.common",
            "hwit.checks.test",
            "hwit.checks.test.test_typertest",
            "hwit.core",
            "hwit.core.about",
            "hwit.core.console",
            "hwit.core.context",
            "hwit.core.doc",
            "hwit.core.doc.conf",
            "hwit.core.generator",
            "hwit.core.model",
            "hwit.core.parser",
            "hwit.core.settings",
            "hwit.core.test",
            "hwit.core.test.test_console",
            "hwit.core.test.test_container",
            "hwit.core.test.test_context",
            "hwit.core.test.test_generator",
            "hwit.core.utils",
            "hwit.core.utils.cluster",
            "hwit.core.utils.happenstance",
            "hwit.core.utils.hwit_console",
            "hwit.core.utils.ingest",
            "hwit.core.utils.triage"
        ],
        "version": "0.02-r00672"
    },
    "hwit-edit": {
        "cmdline": [],
        "modules": [
            "hwit",
            "hwit.edit",
            "hwit.edit.about",
            "hwit.edit.app",
            "hwit.edit.doc",
            "hwit.edit.doc.conf",
            "hwit.edit.editors",
            "hwit.edit.main",
            "hwit.edit.resources",
            "hwit.edit.test",
            "hwit.edit.test.test_widget",
            "hwit.edit.widgets"
        ],
        "version": "0.01-r00662"
    },
    "hwit-examples": {
        "cmdline": [],
        "modules": [
            "hwit",
            "hwit.examples",
            "hwit.examples.about",
            "hwit.examples.common",
            "hwit.examples.doc",
            "hwit.examples.doc.conf"
        ],
        "version": "0.01-r00018"
    },
    "hwk": {
        "cmdline": [],
        "modules": [
            "hwk",
            "hwk.block",
            "hwk.cpu",
            "hwk.gpu",
            "hwk.memory",
            "hwk.net",
            "hwk.topology",
            "hwk.udev",
            "hwk.units",
            "hwk.utils"
        ],
        "version": "0.1"
    },
    "hwm": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hwmasfoy": {
        "cmdline": [],
        "modules": [
            "hwmasfoy"
        ],
        "version": "1.1.0"
    },
    "hwpythonnester": {
        "cmdline": [],
        "modules": [
            "hwpythonnester"
        ],
        "version": "1.0.0"
    },
    "hwrapper": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hwrt": {
        "cmdline": [],
        "modules": [
            "hwrt",
            "hwrt.HandwrittenData",
            "hwrt.analyze_data",
            "hwrt.classify",
            "hwrt.create_model",
            "hwrt.create_pfiles",
            "hwrt.data_analyzation_metrics",
            "hwrt.data_multiplication",
            "hwrt.datasets",
            "hwrt.datasets.crohme_eval",
            "hwrt.datasets.expressmatch",
            "hwrt.datasets.inkml",
            "hwrt.datasets.mathbrush",
            "hwrt.datasets.mfrdb",
            "hwrt.datasets.mfrdb_eval",
            "hwrt.datasets.mfrdb_import",
            "hwrt.datasets.scg_ink",
            "hwrt.download",
            "hwrt.features",
            "hwrt.features_plugin",
            "hwrt.geometry",
            "hwrt.latex",
            "hwrt.partitions",
            "hwrt.preprocess_dataset",
            "hwrt.preprocessing",
            "hwrt.segmentation",
            "hwrt.selfcheck",
            "hwrt.serve",
            "hwrt.utils",
            "hwrt.view",
            "tests",
            "tests.HandwrittenData_test",
            "tests.analyze_data_test",
            "tests.create_model_test",
            "tests.create_pfiles_test",
            "tests.data_analyzation_test",
            "tests.data_multiplication_test",
            "tests.download_test",
            "tests.feature_extraction_test",
            "tests.feature_test",
            "tests.geometry_test",
            "tests.hwrt_tests",
            "tests.preprocess_dataset_test",
            "tests.preprocessing_test",
            "tests.selfcheck_test",
            "tests.serve_test",
            "tests.testhelper",
            "tests.utils_test",
            "tests.view_test"
        ],
        "version": "0.1.221"
    },
    "hwt": {
        "cmdline": [],
        "modules": [
            "hwt",
            "hwt.bitmask",
            "hwt.code",
            "hwt.hdlObjects",
            "hwt.hdlObjects.architecture",
            "hwt.hdlObjects.assignment",
            "hwt.hdlObjects.constants",
            "hwt.hdlObjects.entity",
            "hwt.hdlObjects.expr",
            "hwt.hdlObjects.function",
            "hwt.hdlObjects.functionContainer",
            "hwt.hdlObjects.hdlContext",
            "hwt.hdlObjects.operator",
            "hwt.hdlObjects.operatorDefs",
            "hwt.hdlObjects.package",
            "hwt.hdlObjects.portItem",
            "hwt.hdlObjects.process",
            "hwt.hdlObjects.reference",
            "hwt.hdlObjects.statements",
            "hwt.hdlObjects.typeShortcuts",
            "hwt.hdlObjects.types",
            "hwt.hdlObjects.types.array",
            "hwt.hdlObjects.types.arrayVal",
            "hwt.hdlObjects.types.bitValFunctions",
            "hwt.hdlObjects.types.bitVal_bitOpsVldMask",
            "hwt.hdlObjects.types.bits",
            "hwt.hdlObjects.types.bitsConversions",
            "hwt.hdlObjects.types.bitsVal",
            "hwt.hdlObjects.types.boolean",
            "hwt.hdlObjects.types.booleanConversions",
            "hwt.hdlObjects.types.booleanVal",
            "hwt.hdlObjects.types.defs",
            "hwt.hdlObjects.types.enum",
            "hwt.hdlObjects.types.enumVal",
            "hwt.hdlObjects.types.eventCapableVal",
            "hwt.hdlObjects.types.hdlType",
            "hwt.hdlObjects.types.integer",
            "hwt.hdlObjects.types.integerConversions",
            "hwt.hdlObjects.types.integerVal",
            "hwt.hdlObjects.types.slice",
            "hwt.hdlObjects.types.sliceVal",
            "hwt.hdlObjects.types.stream",
            "hwt.hdlObjects.types.string",
            "hwt.hdlObjects.types.stringConversions",
            "hwt.hdlObjects.types.stringVal",
            "hwt.hdlObjects.types.struct",
            "hwt.hdlObjects.types.structUtils",
            "hwt.hdlObjects.types.typeCast",
            "hwt.hdlObjects.value",
            "hwt.hdlObjects.variables",
            "hwt.interfaces",
            "hwt.interfaces.agents",
            "hwt.interfaces.agents.bramPort",
            "hwt.interfaces.agents.clk",
            "hwt.interfaces.agents.fifo",
            "hwt.interfaces.agents.handshaked",
            "hwt.interfaces.agents.rdSynced",
            "hwt.interfaces.agents.regCntrl",
            "hwt.interfaces.agents.rst",
            "hwt.interfaces.agents.signal",
            "hwt.interfaces.agents.vldSynced",
            "hwt.interfaces.all",
            "hwt.interfaces.differential",
            "hwt.interfaces.signalOps",
            "hwt.interfaces.std",
            "hwt.interfaces.tristate",
            "hwt.interfaces.utils",
            "hwt.intfLvl",
            "hwt.pyUtils",
            "hwt.pyUtils.arrayQuery",
            "hwt.pyUtils.bytePlay",
            "hwt.pyUtils.dictHelpers",
            "hwt.pyUtils.fileHelpers",
            "hwt.pyUtils.nonRedefDict",
            "hwt.pyUtils.optCodes",
            "hwt.pyUtils.parseOptCodes",
            "hwt.pyUtils.stringUtils",
            "hwt.pyUtils.unparse",
            "hwt.serializer",
            "hwt.serializer.constants",
            "hwt.serializer.exceptions",
            "hwt.serializer.ipCoreWrapper",
            "hwt.serializer.ip_packager",
            "hwt.serializer.ip_packager.busInterface",
            "hwt.serializer.ip_packager.component",
            "hwt.serializer.ip_packager.exprSerializer",
            "hwt.serializer.ip_packager.helpers",
            "hwt.serializer.ip_packager.interfaces",
            "hwt.serializer.ip_packager.interfaces.intfConfig",
            "hwt.serializer.ip_packager.interfaces.std",
            "hwt.serializer.ip_packager.model",
            "hwt.serializer.ip_packager.otherXmlObjs",
            "hwt.serializer.ip_packager.packager",
            "hwt.serializer.ip_packager.port",
            "hwt.serializer.ip_packager.tclGuiBuilder",
            "hwt.serializer.nameScope",
            "hwt.serializer.serializerClases",
            "hwt.serializer.serializerClases.mapExpr",
            "hwt.serializer.serializerClases.portMap",
            "hwt.serializer.simModel",
            "hwt.serializer.simModel.ops",
            "hwt.serializer.simModel.serializer",
            "hwt.serializer.simModel.types",
            "hwt.serializer.simModel.value",
            "hwt.serializer.utils",
            "hwt.serializer.verilog",
            "hwt.serializer.verilog.serializer",
            "hwt.serializer.vhdl",
            "hwt.serializer.vhdl.formater",
            "hwt.serializer.vhdl.ops",
            "hwt.serializer.vhdl.serializer",
            "hwt.serializer.vhdl.statements",
            "hwt.serializer.vhdl.types",
            "hwt.serializer.vhdl.utils",
            "hwt.serializer.vhdl.value",
            "hwt.simulator",
            "hwt.simulator.agentBase",
            "hwt.simulator.agentConnector",
            "hwt.simulator.configVhdlTestbench",
            "hwt.simulator.exceptions",
            "hwt.simulator.hdlSimConfig",
            "hwt.simulator.hdlSimulator",
            "hwt.simulator.shortcuts",
            "hwt.simulator.simModel",
            "hwt.simulator.simSignal",
            "hwt.simulator.simSignalProxy",
            "hwt.simulator.simTestCase",
            "hwt.simulator.simulatorCore",
            "hwt.simulator.types",
            "hwt.simulator.types.simBits",
            "hwt.simulator.types.simBitsConversions",
            "hwt.simulator.types.simInt",
            "hwt.simulator.types.simIntConversions",
            "hwt.simulator.utils",
            "hwt.simulator.vcdHdlSimConfig",
            "hwt.simulator.vcdWritter",
            "hwt.synthesizer",
            "hwt.synthesizer.andReducedContainer",
            "hwt.synthesizer.assigRenderer",
            "hwt.synthesizer.assigRendererContainers",
            "hwt.synthesizer.exceptions",
            "hwt.synthesizer.interfaceLevel",
            "hwt.synthesizer.interfaceLevel.emptyUnit",
            "hwt.synthesizer.interfaceLevel.interface",
            "hwt.synthesizer.interfaceLevel.interfaceUtils",
            "hwt.synthesizer.interfaceLevel.interfaceUtils.array",
            "hwt.synthesizer.interfaceLevel.interfaceUtils.directionFns",
            "hwt.synthesizer.interfaceLevel.interfaceUtils.hdlExtraction",
            "hwt.synthesizer.interfaceLevel.interfaceUtils.utils",
            "hwt.synthesizer.interfaceLevel.mainBases",
            "hwt.synthesizer.interfaceLevel.propDeclrCollector",
            "hwt.synthesizer.interfaceLevel.unit",
            "hwt.synthesizer.interfaceLevel.unitImplHelpers",
            "hwt.synthesizer.interfaceLevel.unitUtils",
            "hwt.synthesizer.param",
            "hwt.synthesizer.rtlLevel",
            "hwt.synthesizer.rtlLevel.mainBases",
            "hwt.synthesizer.rtlLevel.memory",
            "hwt.synthesizer.rtlLevel.netlist",
            "hwt.synthesizer.rtlLevel.optimalizator",
            "hwt.synthesizer.rtlLevel.rtlSignal",
            "hwt.synthesizer.rtlLevel.signalUtils",
            "hwt.synthesizer.rtlLevel.signalUtils.cmp",
            "hwt.synthesizer.rtlLevel.signalUtils.exceptions",
            "hwt.synthesizer.rtlLevel.signalUtils.ops",
            "hwt.synthesizer.rtlLevel.signalUtils.walkers",
            "hwt.synthesizer.rtlLevel.utils",
            "hwt.synthesizer.shortcuts",
            "hwt.synthesizer.termUsageResolver",
            "hwt.synthesizer.uniqList",
            "hwt.synthesizer.vectorUtils",
            "hwt.synthesizer.vhdlCodeWrap"
        ],
        "version": "1.5"
    },
    "hwtlib": {
        "cmdline": [],
        "modules": [
            "hwtLib",
            "hwtLib.abstract",
            "hwtLib.abstract.addrSpace",
            "hwtLib.abstract.busConverter",
            "hwtLib.abstract.denseMemory",
            "hwtLib.abstract.discoverAddressSpace",
            "hwtLib.abstract.streamBuilder",
            "hwtLib.amba",
            "hwtLib.amba.ace",
            "hwtLib.amba.aceLite",
            "hwtLib.amba.axi3",
            "hwtLib.amba.axi4",
            "hwtLib.amba.axi4_rDatapump",
            "hwtLib.amba.axi4_rDatapump_test",
            "hwtLib.amba.axi4_streamToMem",
            "hwtLib.amba.axi4_wDatapump",
            "hwtLib.amba.axi4_wDatapump_test",
            "hwtLib.amba.axiDatapumpIntf",
            "hwtLib.amba.axiLite",
            "hwtLib.amba.axiLite_comp",
            "hwtLib.amba.axiLite_comp.structEndpoint",
            "hwtLib.amba.axiLite_comp.structEndpoint_test",
            "hwtLib.amba.axi_datapump_base",
            "hwtLib.amba.axi_datapump_utils",
            "hwtLib.amba.axi_intf_common",
            "hwtLib.amba.axi_test",
            "hwtLib.amba.axis",
            "hwtLib.amba.axis_comp",
            "hwtLib.amba.axis_comp.append",
            "hwtLib.amba.axis_comp.append_test",
            "hwtLib.amba.axis_comp.base",
            "hwtLib.amba.axis_comp.binder",
            "hwtLib.amba.axis_comp.builder",
            "hwtLib.amba.axis_comp.en",
            "hwtLib.amba.axis_comp.en_test",
            "hwtLib.amba.axis_comp.extractor",
            "hwtLib.amba.axis_comp.fifo",
            "hwtLib.amba.axis_comp.fork",
            "hwtLib.amba.axis_comp.frameForge",
            "hwtLib.amba.axis_comp.frameForge_test",
            "hwtLib.amba.axis_comp.frameGen",
            "hwtLib.amba.axis_comp.frameGen_test",
            "hwtLib.amba.axis_comp.frameLinkConv",
            "hwtLib.amba.axis_comp.frameParser",
            "hwtLib.amba.axis_comp.measuringFifo",
            "hwtLib.amba.axis_comp.measuringFifo_test",
            "hwtLib.amba.axis_comp.mux",
            "hwtLib.amba.axis_comp.prefixer",
            "hwtLib.amba.axis_comp.reg",
            "hwtLib.amba.axis_comp.resizer",
            "hwtLib.amba.axis_comp.resizer_test",
            "hwtLib.amba.axis_comp.storedBurst",
            "hwtLib.amba.constants",
            "hwtLib.amba.fullDuplexAxiStream",
            "hwtLib.amba.interconnect",
            "hwtLib.amba.interconnect.axiInterconnectbase",
            "hwtLib.amba.interconnect.rStricOrder",
            "hwtLib.amba.interconnect.rStrictOrder_test",
            "hwtLib.amba.interconnect.wStrictOrder",
            "hwtLib.amba.interconnect.wStrictOrderComplex_test",
            "hwtLib.amba.interconnect.wStrictOrder_test",
            "hwtLib.amba.sim",
            "hwtLib.amba.sim.agentCommon",
            "hwtLib.amba.sim.axi3DenseMem",
            "hwtLib.amba.sim.axiMemSpaceMaster",
            "hwtLib.clocking",
            "hwtLib.clocking.clkBuilder",
            "hwtLib.clocking.clkDivider",
            "hwtLib.clocking.timers",
            "hwtLib.handshaked",
            "hwtLib.handshaked.builder",
            "hwtLib.handshaked.compBase",
            "hwtLib.handshaked.fifo",
            "hwtLib.handshaked.fifo_test",
            "hwtLib.handshaked.fork",
            "hwtLib.handshaked.fork_test",
            "hwtLib.handshaked.join",
            "hwtLib.handshaked.joinFair",
            "hwtLib.handshaked.joinFair_test",
            "hwtLib.handshaked.join_test",
            "hwtLib.handshaked.mux",
            "hwtLib.handshaked.ramAsHs",
            "hwtLib.handshaked.ramAsHs_test",
            "hwtLib.handshaked.ramReader",
            "hwtLib.handshaked.reg",
            "hwtLib.handshaked.reg_test",
            "hwtLib.handshaked.resizer",
            "hwtLib.handshaked.streamNode",
            "hwtLib.i2c",
            "hwtLib.i2c.master",
            "hwtLib.i2c.masterBitCntrl",
            "hwtLib.i2c.masterBitCntrl_test",
            "hwtLib.img",
            "hwtLib.img.charToBitmap",
            "hwtLib.interfaces",
            "hwtLib.interfaces.addrDataHs",
            "hwtLib.interfaces.frameLink",
            "hwtLib.interfaces.ipif",
            "hwtLib.interfaces.mi32",
            "hwtLib.interfaces.peripheral",
            "hwtLib.interfaces.trimmed",
            "hwtLib.io",
            "hwtLib.io.iobuf",
            "hwtLib.ipif",
            "hwtLib.ipif.ipif_reg",
            "hwtLib.ipif.structEndpoint",
            "hwtLib.logic",
            "hwtLib.logic.binToOneHot",
            "hwtLib.logic.cntrGray",
            "hwtLib.logic.crc",
            "hwtLib.logic.crcPoly",
            "hwtLib.logic.lsfr",
            "hwtLib.logic.oneHotToBin",
            "hwtLib.logic.oneHotToBin_test",
            "hwtLib.mem",
            "hwtLib.mem.atomic",
            "hwtLib.mem.atomic.flipCntr",
            "hwtLib.mem.atomic.flipCntr_test",
            "hwtLib.mem.atomic.flipRam",
            "hwtLib.mem.atomic.flipRamReader",
            "hwtLib.mem.atomic.flipRam_test",
            "hwtLib.mem.atomic.flipReg",
            "hwtLib.mem.atomic.flipReg_test",
            "hwtLib.mem.bramStructEndpoint",
            "hwtLib.mem.cam",
            "hwtLib.mem.cam_test",
            "hwtLib.mem.clkSynchronizer",
            "hwtLib.mem.clkSynchronizer_test",
            "hwtLib.mem.fifo",
            "hwtLib.mem.fifoAsync",
            "hwtLib.mem.fifo_test",
            "hwtLib.mem.lutRam",
            "hwtLib.mem.lutRam_test",
            "hwtLib.mem.ram",
            "hwtLib.mem.ram_test",
            "hwtLib.mem.regArray",
            "hwtLib.samples",
            "hwtLib.samples.iLvl",
            "hwtLib.samples.iLvl.arithmetic",
            "hwtLib.samples.iLvl.arithmetic.cntr",
            "hwtLib.samples.iLvl.arithmetic.cntr_test",
            "hwtLib.samples.iLvl.arithmetic.selfRefCntr",
            "hwtLib.samples.iLvl.arithmetic.selfRefCntr_test",
            "hwtLib.samples.iLvl.arithmetic.twoCntrs",
            "hwtLib.samples.iLvl.arithmetic.twoCntrs_test",
            "hwtLib.samples.iLvl.arithmetic.widthCasting",
            "hwtLib.samples.iLvl.axi",
            "hwtLib.samples.iLvl.axi.simpleAxiRam",
            "hwtLib.samples.iLvl.axi.simpleAxiRegs",
            "hwtLib.samples.iLvl.axi.simpleAxiRegs_test",
            "hwtLib.samples.iLvl.builders",
            "hwtLib.samples.iLvl.builders.handshakedSimple",
            "hwtLib.samples.iLvl.cameraToAxiStream",
            "hwtLib.samples.iLvl.emptyUnitWithSpi",
            "hwtLib.samples.iLvl.errors",
            "hwtLib.samples.iLvl.errors.errorsTestCase",
            "hwtLib.samples.iLvl.errors.inconsistentIntfDirection",
            "hwtLib.samples.iLvl.errors.invalidTypeConnetion",
            "hwtLib.samples.iLvl.errors.multipleDriversOfChildNet",
            "hwtLib.samples.iLvl.errors.unusedSubunit",
            "hwtLib.samples.iLvl.hdlComments",
            "hwtLib.samples.iLvl.hdlComments_test",
            "hwtLib.samples.iLvl.hierarchy",
            "hwtLib.samples.iLvl.hierarchy.groupOfBlockrams",
            "hwtLib.samples.iLvl.hierarchy.netFilter",
            "hwtLib.samples.iLvl.hierarchy.simpleSubunit",
            "hwtLib.samples.iLvl.hierarchy.simpleSubunit2",
            "hwtLib.samples.iLvl.hierarchy.simpleSubunit3",
            "hwtLib.samples.iLvl.hierarchy.simpleSubunit_test",
            "hwtLib.samples.iLvl.hierarchy.unitToUnitConnection",
            "hwtLib.samples.iLvl.intfArray",
            "hwtLib.samples.iLvl.intfArray.interfaceArray0",
            "hwtLib.samples.iLvl.intfArray.interfaceArray1",
            "hwtLib.samples.iLvl.intfArray.interfaceArray2",
            "hwtLib.samples.iLvl.ipCoreCompatibleWrap",
            "hwtLib.samples.iLvl.ipCoreCompatibleWrap_test",
            "hwtLib.samples.iLvl.ipif",
            "hwtLib.samples.iLvl.ipif.simpleRegs",
            "hwtLib.samples.iLvl.mem",
            "hwtLib.samples.iLvl.mem.ram",
            "hwtLib.samples.iLvl.mem.ram_test",
            "hwtLib.samples.iLvl.mem.reg",
            "hwtLib.samples.iLvl.mem.reg_test",
            "hwtLib.samples.iLvl.mem.rom",
            "hwtLib.samples.iLvl.mem.rom_test",
            "hwtLib.samples.iLvl.operators",
            "hwtLib.samples.iLvl.operators.concat",
            "hwtLib.samples.iLvl.operators.concat_test",
            "hwtLib.samples.iLvl.operators.indexing",
            "hwtLib.samples.iLvl.operators.indexing_test",
            "hwtLib.samples.iLvl.simple",
            "hwtLib.samples.iLvl.simple2withNonDirectIntConnection",
            "hwtLib.samples.iLvl.simple4",
            "hwtLib.samples.iLvl.simpleAxiStream",
            "hwtLib.samples.iLvl.simpleAxiStream_test",
            "hwtLib.samples.iLvl.simpleWithNonDirectIntConncetion",
            "hwtLib.samples.iLvl.simpleWithParam",
            "hwtLib.samples.iLvl.simpleWithTristate",
            "hwtLib.samples.iLvl.simple_test",
            "hwtLib.samples.iLvl.statements",
            "hwtLib.samples.iLvl.statements.constDriver",
            "hwtLib.samples.iLvl.statements.constDriver_test",
            "hwtLib.samples.iLvl.statements.forLoopCntrl",
            "hwtLib.samples.iLvl.statements.forLoopCntrl_test",
            "hwtLib.samples.iLvl.statements.fsm",
            "hwtLib.samples.iLvl.statements.fsm_test",
            "hwtLib.samples.iLvl.statements.ifStm",
            "hwtLib.samples.iLvl.statements.ifStm2",
            "hwtLib.samples.iLvl.statements.ifStm_test",
            "hwtLib.samples.iLvl.statements.nopVal",
            "hwtLib.samples.iLvl.statements.switchStm",
            "hwtLib.samples.iLvl.statements.switchStm_test",
            "hwtLib.samples.iLvl.statements.vldMaskConflictsResolving",
            "hwtLib.samples.iLvl.statements.vldMaskConflictsResolving_test",
            "hwtLib.samples.iLvl.timers",
            "hwtLib.samples.rtlLvl",
            "hwtLib.samples.rtlLvl.arithmetic",
            "hwtLib.samples.rtlLvl.arithmetic.counter",
            "hwtLib.samples.rtlLvl.arithmetic.leadingZero",
            "hwtLib.samples.rtlLvl.axiReaderCore",
            "hwtLib.samples.rtlLvl.complexConditions",
            "hwtLib.samples.rtlLvl.indexOps",
            "hwtLib.samples.rtlLvl.netlistToRtl",
            "hwtLib.samples.rtlLvl.rtlLvl_test",
            "hwtLib.samples.rtlLvl.simpleEnum",
            "hwtLib.samples.rtlLvl.simpleRegister",
            "hwtLib.samples.rtlLvl.simpleWhile",
            "hwtLib.samples.rtlLvl.switchStatement",
            "hwtLib.sim",
            "hwtLib.sim.abstractMemSpaceMaster",
            "hwtLib.spi",
            "hwtLib.spi.controller",
            "hwtLib.structManipulators",
            "hwtLib.structManipulators.arrayBuff_writer",
            "hwtLib.structManipulators.arrayBuff_writer_test",
            "hwtLib.structManipulators.arrayItemGetter",
            "hwtLib.structManipulators.arrayItemGetter_test",
            "hwtLib.structManipulators.cLinkedListReader",
            "hwtLib.structManipulators.cLinkedListReader_test",
            "hwtLib.structManipulators.cLinkedListWriter",
            "hwtLib.structManipulators.cLinkedListWriter_test",
            "hwtLib.structManipulators.mmu2pageLvl_test",
            "hwtLib.structManipulators.mmu_1pageLvl",
            "hwtLib.structManipulators.mmu_2pageLvl",
            "hwtLib.structManipulators.structReader",
            "hwtLib.structManipulators.structWriter",
            "hwtLib.structManipulators.structWriter_test",
            "hwtLib.tests",
            "hwtLib.tests.all",
            "hwtLib.tests.operators",
            "hwtLib.tests.statementTrees",
            "hwtLib.tests.statementTreesInternal",
            "hwtLib.tests.statements",
            "hwtLib.tests.synthesizer",
            "hwtLib.tests.synthesizer.interfaceLevel",
            "hwtLib.tests.synthesizer.interfaceLevel.baseSynthesizerTC",
            "hwtLib.tests.synthesizer.interfaceLevel.interfaceSynthesizerTC",
            "hwtLib.tests.synthesizer.interfaceLevel.subunitsSynthesisTC",
            "hwtLib.tests.synthesizer.rtlLevel",
            "hwtLib.tests.synthesizer.rtlLevel.optimalizator",
            "hwtLib.tests.synthesizer.rtlLevel.synthesis",
            "hwtLib.tests.synthesizer.value",
            "hwtLib.types",
            "hwtLib.types.ctypes",
            "hwtLib.types.net",
            "hwtLib.types.net.dpdk",
            "hwtLib.types.net.eth",
            "hwtLib.types.net.icmp",
            "hwtLib.types.net.ip",
            "hwtLib.types.net.udp",
            "hwtLib.uart",
            "hwtLib.uart.rx",
            "hwtLib.uart.rx_test",
            "hwtLib.uart.tx",
            "hwtLib.uart.tx_rx_test",
            "hwtLib.uart.tx_test"
        ],
        "version": "1.5"
    },
    "hxl": {
        "cmdline": [],
        "modules": [],
        "version": "0.3"
    },
    "hxl-proxy": {
        "cmdline": [],
        "modules": [
            "hxl_proxy",
            "hxl_proxy.auth",
            "hxl_proxy.controllers",
            "hxl_proxy.dao",
            "hxl_proxy.default_config",
            "hxl_proxy.exceptions",
            "hxl_proxy.filters",
            "hxl_proxy.preview",
            "hxl_proxy.util",
            "hxl_proxy.validate"
        ],
        "version": "1.0"
    },
    "hxsd": {
        "cmdline": [],
        "modules": [
            "hxsd"
        ],
        "version": "0.1.0"
    },
    "hxx-nester1": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "hy": {
        "cmdline": [],
        "modules": [
            "hy",
            "hy._compat",
            "hy.cmdline",
            "hy.compiler",
            "hy.completer",
            "hy.contrib",
            "hy.core",
            "hy.errors",
            "hy.extra",
            "hy.importer",
            "hy.lex",
            "hy.lex.exceptions",
            "hy.lex.lexer",
            "hy.lex.parser",
            "hy.macros",
            "hy.models",
            "hy.models.complex",
            "hy.models.cons",
            "hy.models.dict",
            "hy.models.expression",
            "hy.models.float",
            "hy.models.integer",
            "hy.models.keyword",
            "hy.models.list",
            "hy.models.set",
            "hy.models.string",
            "hy.models.symbol",
            "hy.version"
        ],
        "version": "0.12.1"
    },
    "hy-coverage-plugin": {
        "cmdline": [],
        "modules": [
            "hy_coverage_plugin",
            "hy_coverage_plugin.hy_coverage"
        ],
        "version": "0.0.4"
    },
    "hy-kernel": {
        "cmdline": [],
        "modules": [
            "hy_kernel",
            "hy_kernel.hy_kernel",
            "hy_kernel.hy_setup",
            "hy_kernel.tests",
            "hy_kernel.tests.test_input",
            "hy_kernel.tests.test_notebook",
            "hy_kernel.version"
        ],
        "version": "0.3.0"
    },
    "hy-nester": {
        "cmdline": [],
        "modules": [
            "hy_nester"
        ],
        "version": "1.3.0"
    },
    "hy454": {
        "cmdline": [],
        "modules": [
            "hy454",
            "hy454._annotate",
            "hy454._basefont",
            "hy454._codonaligner",
            "hy454._common",
            "hy454._compensatory",
            "hy454._divestimator",
            "hy454._fel",
            "hy454._graph",
            "hy454._mdr_variants",
            "hy454._preprocessing",
            "hy454._rate_class_neb",
            "hy454._region_extract",
            "hy454._reporter",
            "hy454._resistance",
            "hy454._server",
            "hy454._variants"
        ],
        "version": "0.4.4"
    },
    "hyapi": {
        "cmdline": [],
        "modules": [
            "hyapi",
            "hyapi.api",
            "hyapi.auth",
            "hyapi.error",
            "hyapi.pkcs7"
        ],
        "version": "0.1.0"
    },
    "hybrid": {
        "cmdline": [],
        "modules": [
            "hybrid",
            "hybrid.commands",
            "hybrid.exceptions",
            "hybrid.metaclass",
            "hybrid.middlewares",
            "hybrid.skeleton",
            "hybrid.skeleton.project",
            "hybrid.skeleton.project.controllers",
            "hybrid.skeleton.project.controllers.base_handler",
            "hybrid.skeleton.project.controllers.example_of_tornado_handlers",
            "hybrid.skeleton.project.modules",
            "hybrid.skeleton.project.settings",
            "hybrid.skeleton.project.views",
            "hybrid.skeleton.project.wsgi",
            "hybrid.tests",
            "hybrid.tests.test_convert",
            "hybrid.util",
            "hybrid.util.db",
            "hybrid.util.simple_convert",
            "hybrid.util.test_wsgi",
            "hybrid.wsgi_app",
            "hybrid.wsgi_app.base_wsgi",
            "hybrid.wsgi_app.flask_wsgi",
            "hybrid.wsgi_app.tornado_wsgi"
        ],
        "version": "1.2.3"
    },
    "hybrid-attributes": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hybrid-crypto": {
        "cmdline": [],
        "modules": [
            "hybrid_crypto",
            "hybrid_crypto.aes",
            "hybrid_crypto.crypto",
            "hybrid_crypto.utils"
        ],
        "version": "0.1.0-dev"
    },
    "hybridizer": {
        "cmdline": [],
        "modules": [
            "hybridizer",
            "hybridizer.hybridizer"
        ],
        "version": "1.07"
    },
    "hybridjaccard": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "hybridlfpy": {
        "cmdline": [],
        "modules": [
            "hybridLFPy",
            "hybridLFPy.cachednetworks",
            "hybridLFPy.csd",
            "hybridLFPy.gdf",
            "hybridLFPy.helpers",
            "hybridLFPy.population",
            "hybridLFPy.postproc",
            "hybridLFPy.testing"
        ],
        "version": "0.1.3"
    },
    "hybridspi": {
        "cmdline": [],
        "modules": [
            "spi",
            "spi.binary",
            "spi.binary.bands",
            "spi.xml"
        ],
        "version": "0.1.1"
    },
    "hycc": {
        "cmdline": [],
        "modules": [
            "activate_hycc"
        ],
        "version": "0.0.2"
    },
    "hyde": {
        "cmdline": [],
        "modules": [
            "ext",
            "ext.banner",
            "ext.test_auto_extend",
            "ext.test_blockdown",
            "ext.test_combine",
            "ext.test_depends",
            "ext.test_drafts",
            "ext.test_flattener",
            "ext.test_grouper",
            "ext.test_images",
            "ext.test_less",
            "ext.test_markings",
            "ext.test_meta",
            "ext.test_optipng",
            "ext.test_paginator",
            "ext.test_requirejs",
            "ext.test_sass",
            "ext.test_scss",
            "ext.test_sorter",
            "ext.test_stylus",
            "ext.test_syntext",
            "ext.test_tagger",
            "ext.test_textlinks",
            "ext.test_uglify",
            "ext.test_urlcleaner",
            "hyde",
            "hyde.engine",
            "hyde.exceptions",
            "hyde.ext",
            "hyde.ext.plugins",
            "hyde.ext.plugins.blog",
            "hyde.ext.plugins.css",
            "hyde.ext.plugins.depends",
            "hyde.ext.plugins.images",
            "hyde.ext.plugins.js",
            "hyde.ext.plugins.languages",
            "hyde.ext.plugins.meta",
            "hyde.ext.plugins.sphinx",
            "hyde.ext.plugins.structure",
            "hyde.ext.plugins.text",
            "hyde.ext.plugins.urls",
            "hyde.ext.plugins.vcs",
            "hyde.ext.publishers",
            "hyde.ext.publishers.dvcs",
            "hyde.ext.publishers.pyfs",
            "hyde.ext.publishers.pypi",
            "hyde.ext.publishers.ssh",
            "hyde.ext.templates",
            "hyde.ext.templates.jinja",
            "hyde.generator",
            "hyde.layout",
            "hyde.lib",
            "hyde.lib.pygments",
            "hyde.lib.pygments.rst_directive",
            "hyde.main",
            "hyde.model",
            "hyde.plugin",
            "hyde.publisher",
            "hyde.server",
            "hyde.site",
            "hyde.template",
            "hyde.util",
            "hyde.version"
        ],
        "version": "0.8.9"
    },
    "hyde-gzipper": {
        "cmdline": [],
        "modules": [
            "gzipper",
            "gzipper.version"
        ],
        "version": "1.0"
    },
    "hyde-slimmer": {
        "cmdline": [],
        "modules": [
            "hyde_slimmer",
            "hyde_slimmer.site_post_processors"
        ],
        "version": "0.0.1"
    },
    "hyde-zipper": {
        "cmdline": [],
        "modules": [
            "zipper",
            "zipper.site_post_processors"
        ],
        "version": "0.0.3"
    },
    "hydedown": {
        "cmdline": [],
        "modules": [
            "hydedown",
            "hydedown.passthrough",
            "hydedown.sections",
            "hydedown.tests",
            "hydedown.tests.test_extensions"
        ],
        "version": "0.1.2"
    },
    "hydiomatic": {
        "cmdline": [],
        "modules": [
            "hydiomatic",
            "hydiomatic.rulesets"
        ],
        "version": "0.1.1"
    },
    "hydna": {
        "cmdline": [],
        "modules": [
            "hydna",
            "hydna.core",
            "hydna.exceptions",
            "hydna.push"
        ],
        "version": "0.1.5"
    },
    "hydna-cli": {
        "cmdline": [
            "hydna"
        ],
        "modules": [],
        "version": "0.1"
    },
    "hydra": {
        "cmdline": [],
        "modules": [
            "hydra"
        ],
        "version": "2.5"
    },
    "hydra-device-manager": {
        "cmdline": [],
        "modules": [
            "devicemanager",
            "devicemanager.devicemanager",
            "devicemanager.main",
            "devicemanager.version"
        ],
        "version": "0.6"
    },
    "hydra-fa": {
        "cmdline": [],
        "modules": [
            "automationserver",
            "automationserver.main",
            "automationserver.server",
            "cli",
            "cli.client",
            "cli.main",
            "fieldagent",
            "fieldagent.common",
            "fieldagent.devicemanager",
            "fieldagent.main",
            "fieldagent.rpc",
            "fieldagent.version"
        ],
        "version": "0.10"
    },
    "hydra-platform": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hydra-sdk": {
        "cmdline": [],
        "modules": [
            "hydra",
            "hydra.base",
            "hydra.challenge",
            "hydra.clients",
            "hydra.hydra",
            "hydra.jwk",
            "hydra.oauth2"
        ],
        "version": "0.1.dev1"
    },
    "hydrachain": {
        "cmdline": [],
        "modules": [
            "hydrachain",
            "hydrachain.app",
            "hydrachain.consensus",
            "hydrachain.consensus.base",
            "hydrachain.consensus.contract",
            "hydrachain.consensus.manager",
            "hydrachain.consensus.protocol",
            "hydrachain.consensus.simulation",
            "hydrachain.consensus.synchronizer",
            "hydrachain.consensus.utils",
            "hydrachain.examples",
            "hydrachain.examples.native",
            "hydrachain.examples.native.fungible",
            "hydrachain.examples.native.fungible.fungible_contract",
            "hydrachain.examples.native.fungible.test_fungible_contract",
            "hydrachain.examples.native.fungible.test_iou_contract",
            "hydrachain.hdc_service",
            "hydrachain.native_contracts",
            "hydrachain.nc_utils",
            "hydrachain.utils"
        ],
        "version": "0.3.2"
    },
    "hydrajzlol": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hydrant": {
        "cmdline": [],
        "modules": [
            "hydrant",
            "hydrant.cli"
        ],
        "version": "0.3.0"
    },
    "hydrapy": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "hydrat": {
        "cmdline": [],
        "modules": [
            "hydrat",
            "hydrat.browser",
            "hydrat.browser.browser_config",
            "hydrat.browser.common",
            "hydrat.browser.dataset",
            "hydrat.browser.display",
            "hydrat.browser.result",
            "hydrat.browser.spaces",
            "hydrat.browser.task",
            "hydrat.classifier",
            "hydrat.classifier.NLTK",
            "hydrat.classifier.SVM",
            "hydrat.classifier.WingBaldridge",
            "hydrat.classifier.abstract",
            "hydrat.classifier.baseline",
            "hydrat.classifier.common",
            "hydrat.classifier.flann",
            "hydrat.classifier.knn",
            "hydrat.classifier.liblinear",
            "hydrat.classifier.libsvm",
            "hydrat.classifier.maxent",
            "hydrat.classifier.meta",
            "hydrat.classifier.meta.binary",
            "hydrat.classifier.meta.featurestacking",
            "hydrat.classifier.meta.prototype",
            "hydrat.classifier.meta.repeat",
            "hydrat.classifier.meta.replicate",
            "hydrat.classifier.meta.stacking",
            "hydrat.classifier.meta.stratified",
            "hydrat.classifier.meta.unknown",
            "hydrat.classifier.meta.weighted",
            "hydrat.classifier.naivebayes",
            "hydrat.classifier.nearest_prototype",
            "hydrat.classifier.neuralnet",
            "hydrat.classifier.nnstrategy",
            "hydrat.classifier.ordinal",
            "hydrat.classifier.rainbow",
            "hydrat.classifier.scikits_learn",
            "hydrat.classifier.sequence",
            "hydrat.classifier.sequence.crf",
            "hydrat.classifier.sequence.markov",
            "hydrat.classifier.tree",
            "hydrat.classifier.tree.ClassTree",
            "hydrat.classifier.tree.ClassTreeClassifier",
            "hydrat.classifier.vowpalwabbit",
            "hydrat.classifier.weka",
            "hydrat.cli",
            "hydrat.common",
            "hydrat.common.PorterStemmer",
            "hydrat.common.bootstrap",
            "hydrat.common.counter",
            "hydrat.common.decorators",
            "hydrat.common.discretize",
            "hydrat.common.diskdict",
            "hydrat.common.disklist",
            "hydrat.common.distance_metrics",
            "hydrat.common.enumerator",
            "hydrat.common.extractors",
            "hydrat.common.filedict",
            "hydrat.common.filelock",
            "hydrat.common.fleiss",
            "hydrat.common.invert_dict",
            "hydrat.common.mapmatrix",
            "hydrat.common.markup",
            "hydrat.common.metadata",
            "hydrat.common.pb",
            "hydrat.common.prototype",
            "hydrat.common.richcomp",
            "hydrat.common.sampling",
            "hydrat.common.sequence",
            "hydrat.common.stringtools",
            "hydrat.common.timer",
            "hydrat.common.tokenizers",
            "hydrat.common.weight",
            "hydrat.configuration",
            "hydrat.corpora",
            "hydrat.corpora.bupa",
            "hydrat.corpora.dummy",
            "hydrat.corpora.langid",
            "hydrat.corpora.langid.UDHR",
            "hydrat.corpora.langid.acl2011",
            "hydrat.corpora.langid.acquis",
            "hydrat.corpora.langid.altw2010",
            "hydrat.corpora.langid.clueweb",
            "hydrat.corpora.langid.debian",
            "hydrat.corpora.langid.emea",
            "hydrat.corpora.langid.europarl",
            "hydrat.corpora.langid.langdomain",
            "hydrat.corpora.langid.naacl2010",
            "hydrat.corpora.langid.rcv2",
            "hydrat.corpora.langid.twitter",
            "hydrat.corpora.langid.wikiraw",
            "hydrat.corpora.langid.wikitweets",
            "hydrat.corpora.reuters",
            "hydrat.datamodel",
            "hydrat.dataset",
            "hydrat.dataset.abstract",
            "hydrat.dataset.encoded",
            "hydrat.dataset.iso639",
            "hydrat.dataset.split",
            "hydrat.dataset.text",
            "hydrat.dataset.tokenstream",
            "hydrat.dataset.words",
            "hydrat.display",
            "hydrat.display.graphs",
            "hydrat.display.html",
            "hydrat.display.latex",
            "hydrat.display.markup",
            "hydrat.display.mediawiki",
            "hydrat.display.plot_intervals",
            "hydrat.display.sparklines",
            "hydrat.display.store",
            "hydrat.display.summary_fns",
            "hydrat.display.tsr",
            "hydrat.experiment",
            "hydrat.external",
            "hydrat.external.treetaggerwrapper",
            "hydrat.inducer",
            "hydrat.online",
            "hydrat.preprocessor",
            "hydrat.preprocessor.model",
            "hydrat.preprocessor.model.arff",
            "hydrat.preprocessor.tokenstream",
            "hydrat.preprocessor.tokenstream.porterstem",
            "hydrat.proxy",
            "hydrat.result",
            "hydrat.result.interpreter",
            "hydrat.result.result",
            "hydrat.result.stats",
            "hydrat.result.tasksetresult",
            "hydrat.store",
            "hydrat.summary",
            "hydrat.task",
            "hydrat.task.concat",
            "hydrat.task.featureincrement",
            "hydrat.task.incremental",
            "hydrat.task.sampler",
            "hydrat.task.task",
            "hydrat.task.taskset",
            "hydrat.task.transform",
            "hydrat.text",
            "hydrat.text.interface",
            "hydrat.text.langid",
            "hydrat.text.langid.bing",
            "hydrat.text.langid.chromecld",
            "hydrat.text.langid.google",
            "hydrat.text.langid.langdetect",
            "hydrat.text.langid.langiddotpy",
            "hydrat.text.langid.langidnet",
            "hydrat.text.langid.lastrings",
            "hydrat.text.langid.libtextcat",
            "hydrat.text.langid.textcatlg",
            "hydrat.tools",
            "hydrat.tools.merge_resulttables",
            "hydrat.tools.model_info",
            "hydrat.tools.pickle2csv",
            "hydrat.tools.result_delete_bymetadata",
            "hydrat.tools.result_list",
            "hydrat.transformer",
            "hydrat.transformer.abstract",
            "hydrat.transformer.featureselect",
            "hydrat.transformer.featureweight",
            "hydrat.transformer.lda",
            "hydrat.transformer.transform",
            "hydrat.wrapper",
            "hydrat.wrapper.GibbsLDA",
            "hydrat.wrapper.binglangid",
            "hydrat.wrapper.genia",
            "hydrat.wrapper.googlelangid",
            "hydrat.wrapper.langdetect",
            "hydrat.wrapper.langidnet",
            "hydrat.wrapper.textcat",
            "hydrat.wrapper.treetagger"
        ],
        "version": "0.9.5"
    },
    "hydrate-spf": {
        "cmdline": [
            "hydrate-spf"
        ],
        "modules": [
            "hydrate_spf",
            "hydrate_spf.hydrate_spf"
        ],
        "version": "0.2.0"
    },
    "hydratk": {
        "cmdline": [],
        "modules": [
            "dbconfig",
            "hydratk",
            "hydratk.core",
            "hydratk.core.bootstrapper",
            "hydratk.core.commandopt",
            "hydratk.core.commands",
            "hydratk.core.const",
            "hydratk.core.corehead",
            "hydratk.core.dbconfig",
            "hydratk.core.debugger",
            "hydratk.core.dependencies",
            "hydratk.core.event",
            "hydratk.core.eventhandler",
            "hydratk.core.events",
            "hydratk.core.extension",
            "hydratk.core.extensions",
            "hydratk.core.hookhead",
            "hydratk.core.hsignal",
            "hydratk.core.logger",
            "hydratk.core.masterhead",
            "hydratk.core.message",
            "hydratk.core.messagehead",
            "hydratk.core.messagerouter",
            "hydratk.core.parallel",
            "hydratk.core.profiler",
            "hydratk.core.propertyhead",
            "hydratk.core.servicehead",
            "hydratk.core.template",
            "hydratk.core.testhead",
            "hydratk.extensions",
            "hydratk.extensions.benchmark",
            "hydratk.extensions.benchmark.benchmark",
            "hydratk.extensions.benchmark.translation",
            "hydratk.extensions.benchmark.translation.cs",
            "hydratk.extensions.benchmark.translation.cs.help",
            "hydratk.extensions.benchmark.translation.cs.messages",
            "hydratk.extensions.benchmark.translation.en",
            "hydratk.extensions.benchmark.translation.en.help",
            "hydratk.extensions.benchmark.translation.en.messages",
            "hydratk.extensions.benchmark.translation.info",
            "hydratk.lib",
            "hydratk.lib.array",
            "hydratk.lib.array.multidict",
            "hydratk.lib.array.operation",
            "hydratk.lib.compat",
            "hydratk.lib.compat.types",
            "hydratk.lib.compat.utils",
            "hydratk.lib.console",
            "hydratk.lib.console.cmdoptparser",
            "hydratk.lib.console.commandlinetool",
            "hydratk.lib.console.interactive",
            "hydratk.lib.cycles",
            "hydratk.lib.cycles.loop",
            "hydratk.lib.data",
            "hydratk.lib.data.share",
            "hydratk.lib.data.shmm",
            "hydratk.lib.database",
            "hydratk.lib.database.dbo",
            "hydratk.lib.database.dbo.dbo",
            "hydratk.lib.database.dbo.dbodriver",
            "hydratk.lib.database.dbo.drivers",
            "hydratk.lib.database.dbo.drivers.sqlite",
            "hydratk.lib.database.dbo.drivers.sqlite.driver",
            "hydratk.lib.debugging",
            "hydratk.lib.debugging.firepot",
            "hydratk.lib.debugging.simpledebug",
            "hydratk.lib.dynamic",
            "hydratk.lib.dynamic.callback",
            "hydratk.lib.exceptions",
            "hydratk.lib.exceptions.dependencyerror",
            "hydratk.lib.exceptions.inputerror",
            "hydratk.lib.messaging",
            "hydratk.lib.messaging.native",
            "hydratk.lib.messaging.native.queue",
            "hydratk.lib.messaging.queue",
            "hydratk.lib.messaging.zmq",
            "hydratk.lib.messaging.zmq.queue",
            "hydratk.lib.number",
            "hydratk.lib.number.conversion",
            "hydratk.lib.profiling",
            "hydratk.lib.profiling.profiler",
            "hydratk.lib.string",
            "hydratk.lib.string.operation",
            "hydratk.lib.string.prettify",
            "hydratk.lib.system",
            "hydratk.lib.system.auth",
            "hydratk.lib.system.fs",
            "hydratk.lib.system.io",
            "hydratk.lib.system.mtime",
            "hydratk.lib.system.utils",
            "hydratk.lib.translation",
            "hydratk.lib.translation.translator",
            "hydratk.lib.translator",
            "hydratk.translation",
            "hydratk.translation.config",
            "hydratk.translation.core",
            "hydratk.translation.core.cs",
            "hydratk.translation.core.cs.help",
            "hydratk.translation.core.cs.messages",
            "hydratk.translation.core.en",
            "hydratk.translation.core.en.help",
            "hydratk.translation.core.en.messages",
            "hydratk.translation.core.info",
            "hydratk.translation.info",
            "hydratk.translation.lib",
            "install",
            "install.command",
            "install.config",
            "install.post_install",
            "install.pre_install"
        ],
        "version": "0.4.0"
    },
    "hydratk-ext-datagen": {
        "cmdline": [],
        "modules": [
            "datagen",
            "datagen.serialization",
            "hydratk",
            "hydratk.extensions",
            "hydratk.extensions.datagen",
            "hydratk.extensions.datagen.asn1",
            "hydratk.extensions.datagen.asn1.asn1",
            "hydratk.extensions.datagen.asn1.asn1.ASN1",
            "hydratk.extensions.datagen.asn1.asn1.BER",
            "hydratk.extensions.datagen.asn1.asn1.PER",
            "hydratk.extensions.datagen.asn1.asn1.parsers",
            "hydratk.extensions.datagen.asn1.asn1.processor",
            "hydratk.extensions.datagen.asn1.asn1.utils",
            "hydratk.extensions.datagen.asn1.core",
            "hydratk.extensions.datagen.asn1.core.element",
            "hydratk.extensions.datagen.asn1.core.shar",
            "hydratk.extensions.datagen.asn1.core.shtr",
            "hydratk.extensions.datagen.asn1.utils",
            "hydratk.extensions.datagen.asn1.utils.IntEncoder",
            "hydratk.extensions.datagen.asn1.utils.repr",
            "hydratk.extensions.datagen.asn1codec",
            "hydratk.extensions.datagen.bootstrapper",
            "hydratk.extensions.datagen.datagen",
            "hydratk.extensions.datagen.jsongen",
            "hydratk.extensions.datagen.serializer",
            "hydratk.extensions.datagen.translation",
            "hydratk.extensions.datagen.translation.cs",
            "hydratk.extensions.datagen.translation.cs.help",
            "hydratk.extensions.datagen.translation.cs.messages",
            "hydratk.extensions.datagen.translation.en",
            "hydratk.extensions.datagen.translation.en.help",
            "hydratk.extensions.datagen.translation.en.messages",
            "hydratk.extensions.datagen.translation.info",
            "hydratk.extensions.datagen.xmlgen"
        ],
        "version": "0.1.1"
    },
    "hydratk-ext-testenv": {
        "cmdline": [],
        "modules": [
            "hydratk",
            "hydratk.extensions",
            "hydratk.extensions.testenv",
            "hydratk.extensions.testenv.bootstrapper",
            "hydratk.extensions.testenv.db_handler",
            "hydratk.extensions.testenv.db_int",
            "hydratk.extensions.testenv.entities",
            "hydratk.extensions.testenv.helpers",
            "hydratk.extensions.testenv.rest_handler",
            "hydratk.extensions.testenv.rest_int",
            "hydratk.extensions.testenv.soap_handler",
            "hydratk.extensions.testenv.soap_int",
            "hydratk.extensions.testenv.testenv",
            "hydratk.extensions.testenv.translation",
            "hydratk.extensions.testenv.translation.cs",
            "hydratk.extensions.testenv.translation.cs.help",
            "hydratk.extensions.testenv.translation.cs.messages",
            "hydratk.extensions.testenv.translation.en",
            "hydratk.extensions.testenv.translation.en.help",
            "hydratk.extensions.testenv.translation.en.messages",
            "hydratk.extensions.testenv.translation.info",
            "hydratk.extensions.testenv.web_server"
        ],
        "version": "0.2.1"
    },
    "hydratk-ext-trackapps": {
        "cmdline": [],
        "modules": [
            "hydratk",
            "hydratk.extensions",
            "hydratk.extensions.trackapps",
            "hydratk.extensions.trackapps.bootstrapper",
            "hydratk.extensions.trackapps.bugzilla",
            "hydratk.extensions.trackapps.jira",
            "hydratk.extensions.trackapps.mantis",
            "hydratk.extensions.trackapps.qc",
            "hydratk.extensions.trackapps.testlink",
            "hydratk.extensions.trackapps.trac",
            "hydratk.extensions.trackapps.trackapps",
            "hydratk.extensions.trackapps.translation",
            "hydratk.extensions.trackapps.translation.cs",
            "hydratk.extensions.trackapps.translation.cs.help",
            "hydratk.extensions.trackapps.translation.cs.messages",
            "hydratk.extensions.trackapps.translation.en",
            "hydratk.extensions.trackapps.translation.en.help",
            "hydratk.extensions.trackapps.translation.en.messages",
            "hydratk.extensions.trackapps.translation.info",
            "trackapps"
        ],
        "version": "0.1.1"
    },
    "hydratk-ext-yoda": {
        "cmdline": [],
        "modules": [
            "hydratk",
            "hydratk.extensions",
            "hydratk.extensions.yoda",
            "hydratk.extensions.yoda.bootstrapper",
            "hydratk.extensions.yoda.testengine",
            "hydratk.extensions.yoda.testobject",
            "hydratk.extensions.yoda.testresults",
            "hydratk.extensions.yoda.testresults.handlers",
            "hydratk.extensions.yoda.testresults.handlers.console",
            "hydratk.extensions.yoda.testresults.handlers.html",
            "hydratk.extensions.yoda.testresults.handlers.text",
            "hydratk.extensions.yoda.testresults.testresults",
            "hydratk.extensions.yoda.translation",
            "hydratk.extensions.yoda.translation.cs",
            "hydratk.extensions.yoda.translation.cs.help",
            "hydratk.extensions.yoda.translation.cs.messages",
            "hydratk.extensions.yoda.translation.en",
            "hydratk.extensions.yoda.translation.en.help",
            "hydratk.extensions.yoda.translation.en.messages",
            "hydratk.extensions.yoda.translation.info",
            "hydratk.extensions.yoda.util",
            "hydratk.extensions.yoda.util.check",
            "hydratk.extensions.yoda.util.data",
            "hydratk.extensions.yoda.yoda",
            "install",
            "install.command",
            "install.config",
            "install.post_install",
            "install.pre_install",
            "yoda",
            "yoda.tscript",
            "yodahelpers",
            "yodalib"
        ],
        "version": "0.2.2"
    },
    "hydratk-lib-network": {
        "cmdline": [],
        "modules": [
            "hydratk",
            "hydratk.lib",
            "hydratk.lib.bridge",
            "hydratk.lib.bridge.java",
            "hydratk.lib.bridge.selen",
            "hydratk.lib.data",
            "hydratk.lib.data.loader",
            "hydratk.lib.data.xml",
            "hydratk.lib.database",
            "hydratk.lib.database.dbo",
            "hydratk.lib.database.dbo.drivers",
            "hydratk.lib.database.dbo.drivers.mysql",
            "hydratk.lib.database.dbo.drivers.oracle",
            "hydratk.lib.database.dbo.drivers.pgsql",
            "hydratk.lib.database.dbo.drivers.pgsql.driver",
            "hydratk.lib.network",
            "hydratk.lib.network.dbi",
            "hydratk.lib.network.dbi.client",
            "hydratk.lib.network.dbi.jdbc_client",
            "hydratk.lib.network.dbi.mssql_client",
            "hydratk.lib.network.dbi.mysql_client",
            "hydratk.lib.network.dbi.nosql",
            "hydratk.lib.network.dbi.nosql.cassandra_client",
            "hydratk.lib.network.dbi.nosql.mongodb_client",
            "hydratk.lib.network.dbi.nosql.redis_client",
            "hydratk.lib.network.dbi.oracle_client",
            "hydratk.lib.network.dbi.postgresql_client",
            "hydratk.lib.network.dbi.sqlite_client",
            "hydratk.lib.network.email",
            "hydratk.lib.network.email.client",
            "hydratk.lib.network.email.imap_client",
            "hydratk.lib.network.email.pop_client",
            "hydratk.lib.network.email.smtp_client",
            "hydratk.lib.network.ftp",
            "hydratk.lib.network.ftp.client",
            "hydratk.lib.network.ftp.ftp_client",
            "hydratk.lib.network.ftp.sftp_client",
            "hydratk.lib.network.ftp.tftp_client",
            "hydratk.lib.network.inet",
            "hydratk.lib.network.inet.client",
            "hydratk.lib.network.inet.packet",
            "hydratk.lib.network.jms",
            "hydratk.lib.network.jms.amqp_client",
            "hydratk.lib.network.jms.client",
            "hydratk.lib.network.jms.jms_client",
            "hydratk.lib.network.jms.mqtt_client",
            "hydratk.lib.network.jms.simplejms",
            "hydratk.lib.network.jms.stomp_client",
            "hydratk.lib.network.ldap",
            "hydratk.lib.network.ldap.client",
            "hydratk.lib.network.rest",
            "hydratk.lib.network.rest.client",
            "hydratk.lib.network.rpc",
            "hydratk.lib.network.rpc.client",
            "hydratk.lib.network.rpc.jsonrpc_client",
            "hydratk.lib.network.rpc.rmi_client",
            "hydratk.lib.network.rpc.xmlrpc_client",
            "hydratk.lib.network.soap",
            "hydratk.lib.network.soap.client",
            "hydratk.lib.network.soap.simplesoap",
            "hydratk.lib.network.term",
            "hydratk.lib.network.term.client",
            "hydratk.lib.network.term.ssh_client",
            "hydratk.lib.network.term.telnet_client",
            "hydratk.translation",
            "hydratk.translation.lib",
            "hydratk.translation.lib.bridge",
            "hydratk.translation.lib.bridge.java",
            "hydratk.translation.lib.bridge.java.cs",
            "hydratk.translation.lib.bridge.java.cs.messages",
            "hydratk.translation.lib.bridge.java.en",
            "hydratk.translation.lib.bridge.java.en.messages",
            "hydratk.translation.lib.bridge.selen",
            "hydratk.translation.lib.bridge.selen.cs",
            "hydratk.translation.lib.bridge.selen.cs.messages",
            "hydratk.translation.lib.bridge.selen.en",
            "hydratk.translation.lib.bridge.selen.en.messages",
            "hydratk.translation.lib.network",
            "hydratk.translation.lib.network.dbi",
            "hydratk.translation.lib.network.dbi.client",
            "hydratk.translation.lib.network.dbi.client.cs",
            "hydratk.translation.lib.network.dbi.client.cs.messages",
            "hydratk.translation.lib.network.dbi.client.en",
            "hydratk.translation.lib.network.dbi.client.en.messages",
            "hydratk.translation.lib.network.email",
            "hydratk.translation.lib.network.email.client",
            "hydratk.translation.lib.network.email.client.cs",
            "hydratk.translation.lib.network.email.client.cs.messages",
            "hydratk.translation.lib.network.email.client.en",
            "hydratk.translation.lib.network.email.client.en.messages",
            "hydratk.translation.lib.network.ftp",
            "hydratk.translation.lib.network.ftp.client",
            "hydratk.translation.lib.network.ftp.client.cs",
            "hydratk.translation.lib.network.ftp.client.cs.messages",
            "hydratk.translation.lib.network.ftp.client.en",
            "hydratk.translation.lib.network.ftp.client.en.messages",
            "hydratk.translation.lib.network.inet",
            "hydratk.translation.lib.network.inet.client",
            "hydratk.translation.lib.network.inet.client.cs",
            "hydratk.translation.lib.network.inet.client.cs.messages",
            "hydratk.translation.lib.network.inet.client.en",
            "hydratk.translation.lib.network.inet.client.en.messages",
            "hydratk.translation.lib.network.inet.packet",
            "hydratk.translation.lib.network.inet.packet.cs",
            "hydratk.translation.lib.network.inet.packet.cs.messages",
            "hydratk.translation.lib.network.inet.packet.en",
            "hydratk.translation.lib.network.inet.packet.en.messages",
            "hydratk.translation.lib.network.jms",
            "hydratk.translation.lib.network.jms.client",
            "hydratk.translation.lib.network.jms.client.cs",
            "hydratk.translation.lib.network.jms.client.cs.messages",
            "hydratk.translation.lib.network.jms.client.en",
            "hydratk.translation.lib.network.jms.client.en.messages",
            "hydratk.translation.lib.network.ldap",
            "hydratk.translation.lib.network.ldap.client",
            "hydratk.translation.lib.network.ldap.client.cs",
            "hydratk.translation.lib.network.ldap.client.cs.messages",
            "hydratk.translation.lib.network.ldap.client.en",
            "hydratk.translation.lib.network.ldap.client.en.messages",
            "hydratk.translation.lib.network.rest",
            "hydratk.translation.lib.network.rest.client",
            "hydratk.translation.lib.network.rest.client.cs",
            "hydratk.translation.lib.network.rest.client.cs.messages",
            "hydratk.translation.lib.network.rest.client.en",
            "hydratk.translation.lib.network.rest.client.en.messages",
            "hydratk.translation.lib.network.rpc",
            "hydratk.translation.lib.network.rpc.client",
            "hydratk.translation.lib.network.rpc.client.cs",
            "hydratk.translation.lib.network.rpc.client.cs.messages",
            "hydratk.translation.lib.network.rpc.client.en",
            "hydratk.translation.lib.network.rpc.client.en.messages",
            "hydratk.translation.lib.network.soap",
            "hydratk.translation.lib.network.soap.client",
            "hydratk.translation.lib.network.soap.client.cs",
            "hydratk.translation.lib.network.soap.client.cs.messages",
            "hydratk.translation.lib.network.soap.client.en",
            "hydratk.translation.lib.network.soap.client.en.messages",
            "hydratk.translation.lib.network.term",
            "hydratk.translation.lib.network.term.client",
            "hydratk.translation.lib.network.term.client.cs",
            "hydratk.translation.lib.network.term.client.cs.messages",
            "hydratk.translation.lib.network.term.client.en",
            "hydratk.translation.lib.network.term.client.en.messages",
            "install",
            "install.command",
            "install.config",
            "install.post_install",
            "install.pre_install",
            "network",
            "network.ftp",
            "network.ftp.tftp",
            "network.inet",
            "network.inet.udp"
        ],
        "version": "0.2.0"
    },
    "hydraulics": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hydro": {
        "cmdline": [],
        "modules": [
            "complex_plan",
            "complex_plan.conf",
            "complex_plan.optimizer",
            "complex_plan.sample_topology",
            "geo_queries",
            "geo_queries.conf",
            "geo_queries.geo_widget_topology",
            "geo_queries.optimizer",
            "hydro",
            "hydro.base_classes",
            "hydro.cache",
            "hydro.cache.base_classes",
            "hydro.cache.in_memory",
            "hydro.cache.mysql_cache",
            "hydro.cache.test_in_memory",
            "hydro.common",
            "hydro.common.configurator",
            "hydro.common.execution_plan",
            "hydro.common.logger",
            "hydro.common.test_execution_plan",
            "hydro.common.utils",
            "hydro.conf",
            "hydro.conf.logger",
            "hydro.conf.settings",
            "hydro.conf.settings_base",
            "hydro.conf.settings_dev",
            "hydro.connector_factory",
            "hydro.connectors",
            "hydro.connectors.base_classes",
            "hydro.connectors.check_connections",
            "hydro.connectors.mysql",
            "hydro.connectors.static",
            "hydro.connectors.test_conncetor_base",
            "hydro.connectors.test_hydro_cluster",
            "hydro.connectors.test_vertica",
            "hydro.connectors.vertica",
            "hydro.exceptions",
            "hydro.hydro_cli",
            "hydro.hydro_cluster",
            "hydro.query_engine",
            "hydro.query_engine_factory",
            "hydro.stats_engine",
            "hydro.test_base_classes",
            "hydro.test_transformers",
            "hydro.topology",
            "hydro.topology.conf",
            "hydro.topology.optimizer",
            "hydro.topology.test_topology_base",
            "hydro.topology_base",
            "hydro.transformers",
            "hydro.types",
            "topology_injection",
            "topology_injection.conf",
            "topology_injection.optimizer",
            "topology_injection.topology_injection_topology"
        ],
        "version": "0.1.7"
    },
    "hydroffice.soundspeed": {
        "cmdline": [],
        "modules": [
            "sis",
            "sis.controlpanel",
            "sis.kmbase",
            "sis.mainwin",
            "sis.process",
            "sis.replaythread",
            "sis.run",
            "sis.svpthread",
            "soundspeed",
            "soundspeed.appdirs",
            "soundspeed.appdirs.appdirs",
            "soundspeed.atlas",
            "soundspeed.atlas.abstract",
            "soundspeed.atlas.atlases",
            "soundspeed.atlas.ftp",
            "soundspeed.atlas.rtofs",
            "soundspeed.atlas.rtofs.rtofs",
            "soundspeed.atlas.woa09",
            "soundspeed.atlas.woa09.woa09",
            "soundspeed.atlas.woa13",
            "soundspeed.atlas.woa13.woa13",
            "soundspeed.base",
            "soundspeed.base.basedb",
            "soundspeed.base.callbacks",
            "soundspeed.base.callbacks.abstract_callbacks",
            "soundspeed.base.callbacks.cli_callbacks",
            "soundspeed.base.callbacks.test_callbacks",
            "soundspeed.base.gdal_aux",
            "soundspeed.base.geodesy",
            "soundspeed.base.helper",
            "soundspeed.base.progress",
            "soundspeed.base.progress.abstract_progress",
            "soundspeed.base.progress.cli_progress",
            "soundspeed.base.setup",
            "soundspeed.base.setup_db",
            "soundspeed.base.setup_sql",
            "soundspeed.base.testing",
            "soundspeed.client",
            "soundspeed.client.client",
            "soundspeed.client.clientlist",
            "soundspeed.db",
            "soundspeed.db.db",
            "soundspeed.db.export",
            "soundspeed.db.plot",
            "soundspeed.db.point",
            "soundspeed.formats",
            "soundspeed.formats.abstract",
            "soundspeed.formats.km",
            "soundspeed.formats.readers",
            "soundspeed.formats.readers.abstract",
            "soundspeed.formats.readers.aoml",
            "soundspeed.formats.readers.asvp",
            "soundspeed.formats.readers.caris",
            "soundspeed.formats.readers.castaway",
            "soundspeed.formats.readers.coordinates",
            "soundspeed.formats.readers.digibarpro",
            "soundspeed.formats.readers.digibars",
            "soundspeed.formats.readers.elac",
            "soundspeed.formats.readers.idronaut",
            "soundspeed.formats.readers.iss",
            "soundspeed.formats.readers.mvp",
            "soundspeed.formats.readers.oceanscience",
            "soundspeed.formats.readers.regex_helpers",
            "soundspeed.formats.readers.saiv",
            "soundspeed.formats.readers.seabird",
            "soundspeed.formats.readers.simrad",
            "soundspeed.formats.readers.sippican",
            "soundspeed.formats.readers.sonardyne",
            "soundspeed.formats.readers.turo",
            "soundspeed.formats.readers.unb",
            "soundspeed.formats.readers.valeport",
            "soundspeed.formats.writers",
            "soundspeed.formats.writers.abstract",
            "soundspeed.formats.writers.asvp",
            "soundspeed.formats.writers.calc",
            "soundspeed.formats.writers.caris",
            "soundspeed.formats.writers.csv",
            "soundspeed.formats.writers.elac",
            "soundspeed.formats.writers.hypack",
            "soundspeed.formats.writers.ixblue",
            "soundspeed.formats.writers.ncei",
            "soundspeed.formats.writers.qps",
            "soundspeed.formats.writers.sonardyne",
            "soundspeed.formats.writers.unb",
            "soundspeed.listener",
            "soundspeed.listener.abstract",
            "soundspeed.listener.listeners",
            "soundspeed.listener.mvp",
            "soundspeed.listener.mvp.mvp",
            "soundspeed.listener.seacat",
            "soundspeed.listener.seacat.sbe_serialcomms",
            "soundspeed.listener.sippican",
            "soundspeed.listener.sippican.sippican",
            "soundspeed.listener.sis",
            "soundspeed.listener.sis.sis",
            "soundspeed.logging",
            "soundspeed.logging.filters",
            "soundspeed.logging.sqlitehandler",
            "soundspeed.logging.sqlitelogging",
            "soundspeed.logging.test_logging",
            "soundspeed.profile",
            "soundspeed.profile.dicts",
            "soundspeed.profile.metadata",
            "soundspeed.profile.more",
            "soundspeed.profile.oceanography",
            "soundspeed.profile.profile",
            "soundspeed.profile.profilelist",
            "soundspeed.profile.ray_tracing",
            "soundspeed.profile.ray_tracing.ray_path",
            "soundspeed.profile.ray_tracing.ray_tracing",
            "soundspeed.profile.samples",
            "soundspeed.server",
            "soundspeed.server.server",
            "soundspeed.soundspeed",
            "soundspeed.temp",
            "soundspeedmanager",
            "soundspeedmanager.dialogs",
            "soundspeedmanager.dialogs.dialog",
            "soundspeedmanager.dialogs.export_multi_profile_dialog",
            "soundspeedmanager.dialogs.export_profile_metadata_dialog",
            "soundspeedmanager.dialogs.export_single_profile_dialog",
            "soundspeedmanager.dialogs.import_data_dialog",
            "soundspeedmanager.dialogs.import_multi_profile_dialog",
            "soundspeedmanager.dialogs.import_single_profile_dialog",
            "soundspeedmanager.dialogs.metadata_dialog",
            "soundspeedmanager.dialogs.plot_multi_profile_dialog",
            "soundspeedmanager.dialogs.plot_profiles_dialog",
            "soundspeedmanager.dialogs.proc_data_model",
            "soundspeedmanager.dialogs.project_new_dialog",
            "soundspeedmanager.dialogs.project_rename_dialog",
            "soundspeedmanager.dialogs.project_switch_dialog",
            "soundspeedmanager.dialogs.raw_data_model",
            "soundspeedmanager.dialogs.receive_dialog",
            "soundspeedmanager.dialogs.reference_dialog",
            "soundspeedmanager.dialogs.sis_data_model",
            "soundspeedmanager.dialogs.spreadsheet_dialog",
            "soundspeedmanager.dialogs.text_editor",
            "soundspeedmanager.dialogs.text_editor_dialog",
            "soundspeedmanager.gui",
            "soundspeedmanager.mainwin",
            "soundspeedmanager.qt_callbacks",
            "soundspeedmanager.qt_progress",
            "soundspeedmanager.widgets",
            "soundspeedmanager.widgets.database",
            "soundspeedmanager.widgets.dataplots",
            "soundspeedmanager.widgets.editor",
            "soundspeedmanager.widgets.info",
            "soundspeedmanager.widgets.navtoolbar",
            "soundspeedmanager.widgets.refraction",
            "soundspeedmanager.widgets.seacat",
            "soundspeedmanager.widgets.server",
            "soundspeedmanager.widgets.settings",
            "soundspeedmanager.widgets.widget",
            "soundspeedsettings",
            "soundspeedsettings.gui",
            "soundspeedsettings.mainwin",
            "soundspeedsettings.widgets",
            "soundspeedsettings.widgets.general",
            "soundspeedsettings.widgets.input",
            "soundspeedsettings.widgets.listeners",
            "soundspeedsettings.widgets.main",
            "soundspeedsettings.widgets.output",
            "soundspeedsettings.widgets.widget"
        ],
        "version": "2017.0.0"
    },
    "hydrofunctions": {
        "cmdline": [],
        "modules": [
            "hydrofunctions",
            "hydrofunctions.exceptions",
            "hydrofunctions.hydrofunctions",
            "hydrofunctions.station",
            "hydrofunctions.typing",
            "tests",
            "tests.test_exceptions",
            "tests.test_hydrofunctions",
            "tests.test_online_resources",
            "tests.test_station",
            "tests.test_typing"
        ],
        "version": "0.1.4"
    },
    "hydropy": {
        "cmdline": [],
        "modules": [
            "hydropy",
            "hydropy.baseflow",
            "hydropy.exceptions",
            "hydropy.flowanalysis",
            "hydropy.ipython",
            "hydropy.old_tests",
            "hydropy.reading_third_party_data",
            "hydropy.storm"
        ],
        "version": "0.1.2"
    },
    "hydroshare": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyena": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyfnester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.0"
    },
    "hygdas": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyhyhy": {
        "cmdline": [],
        "modules": [
            "lib"
        ],
        "version": "1.1.9"
    },
    "hying": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyke": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyla": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hylax": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyleg": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hym": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hymagic": {
        "cmdline": [],
        "modules": [
            "hymagic"
        ],
        "version": "0.1"
    },
    "hyml": {
        "cmdline": [],
        "modules": [
            "hyml",
            "hyml.ext"
        ],
        "version": "v0.2.11"
    },
    "hymm": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hymn": {
        "cmdline": [],
        "modules": [
            "hymn"
        ],
        "version": "0.6"
    },
    "hyne": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyo.bag": {
        "cmdline": [],
        "modules": [
            "bag",
            "bag.bag",
            "bag.base",
            "bag.bbox",
            "bag.density",
            "bag.elevation",
            "bag.helper",
            "bag.meta",
            "bag.tools",
            "bag.tools.bag_bbox",
            "bag.tools.bag_elevation",
            "bag.tools.bag_metadata",
            "bag.tools.bag_tracklist",
            "bag.tools.bag_uncertainty",
            "bag.tools.bag_validate",
            "bag.tracklist",
            "bag.uncertainty"
        ],
        "version": "0.5.3"
    },
    "hyo.bagexplorer": {
        "cmdline": [],
        "modules": [
            "bagexplorer",
            "bagexplorer.explorer",
            "bagexplorer.frame",
            "bagexplorer.gui",
            "bagexplorer.gui.mainwin",
            "bagexplorer.text_ctrl"
        ],
        "version": "0.5.1"
    },
    "hyo.soundspeed": {
        "cmdline": [],
        "modules": [
            "sis",
            "sis.controlpanel",
            "sis.kmbase",
            "sis.mainwin",
            "sis.process",
            "sis.replaythread",
            "sis.run",
            "sis.svpthread",
            "soundspeed",
            "soundspeed.appdirs",
            "soundspeed.appdirs.appdirs",
            "soundspeed.atlas",
            "soundspeed.atlas.abstract",
            "soundspeed.atlas.atlases",
            "soundspeed.atlas.ftp",
            "soundspeed.atlas.rtofs",
            "soundspeed.atlas.rtofs.rtofs",
            "soundspeed.atlas.woa09",
            "soundspeed.atlas.woa09.woa09",
            "soundspeed.atlas.woa13",
            "soundspeed.atlas.woa13.woa13",
            "soundspeed.base",
            "soundspeed.base.basedb",
            "soundspeed.base.callbacks",
            "soundspeed.base.callbacks.abstract_callbacks",
            "soundspeed.base.callbacks.cli_callbacks",
            "soundspeed.base.callbacks.test_callbacks",
            "soundspeed.base.gdal_aux",
            "soundspeed.base.geodesy",
            "soundspeed.base.helper",
            "soundspeed.base.progress",
            "soundspeed.base.progress.abstract_progress",
            "soundspeed.base.progress.cli_progress",
            "soundspeed.base.setup",
            "soundspeed.base.setup_db",
            "soundspeed.base.setup_sql",
            "soundspeed.base.testing",
            "soundspeed.client",
            "soundspeed.client.client",
            "soundspeed.client.clientlist",
            "soundspeed.db",
            "soundspeed.db.db",
            "soundspeed.db.export",
            "soundspeed.db.plot",
            "soundspeed.db.point",
            "soundspeed.formats",
            "soundspeed.formats.abstract",
            "soundspeed.formats.km",
            "soundspeed.formats.readers",
            "soundspeed.formats.readers.abstract",
            "soundspeed.formats.readers.aoml",
            "soundspeed.formats.readers.asvp",
            "soundspeed.formats.readers.caris",
            "soundspeed.formats.readers.castaway",
            "soundspeed.formats.readers.digibarpro",
            "soundspeed.formats.readers.digibars",
            "soundspeed.formats.readers.elac",
            "soundspeed.formats.readers.idronaut",
            "soundspeed.formats.readers.iss",
            "soundspeed.formats.readers.mvp",
            "soundspeed.formats.readers.oceanscience",
            "soundspeed.formats.readers.saiv",
            "soundspeed.formats.readers.seabird",
            "soundspeed.formats.readers.simrad",
            "soundspeed.formats.readers.sippican",
            "soundspeed.formats.readers.sonardyne",
            "soundspeed.formats.readers.turo",
            "soundspeed.formats.readers.unb",
            "soundspeed.formats.readers.valeport",
            "soundspeed.formats.writers",
            "soundspeed.formats.writers.abstract",
            "soundspeed.formats.writers.asvp",
            "soundspeed.formats.writers.calc",
            "soundspeed.formats.writers.caris",
            "soundspeed.formats.writers.csv",
            "soundspeed.formats.writers.elac",
            "soundspeed.formats.writers.hypack",
            "soundspeed.formats.writers.ixblue",
            "soundspeed.formats.writers.ncei",
            "soundspeed.formats.writers.qps",
            "soundspeed.formats.writers.sonardyne",
            "soundspeed.formats.writers.unb",
            "soundspeed.listener",
            "soundspeed.listener.abstract",
            "soundspeed.listener.listeners",
            "soundspeed.listener.mvp",
            "soundspeed.listener.mvp.mvp",
            "soundspeed.listener.seacat",
            "soundspeed.listener.seacat.sbe_serialcomms",
            "soundspeed.listener.sippican",
            "soundspeed.listener.sippican.sippican",
            "soundspeed.listener.sis",
            "soundspeed.listener.sis.sis",
            "soundspeed.logging",
            "soundspeed.logging.filters",
            "soundspeed.logging.sqlitehandler",
            "soundspeed.logging.sqlitelogging",
            "soundspeed.logging.test_logging",
            "soundspeed.profile",
            "soundspeed.profile.dicts",
            "soundspeed.profile.metadata",
            "soundspeed.profile.more",
            "soundspeed.profile.oceanography",
            "soundspeed.profile.profile",
            "soundspeed.profile.profilelist",
            "soundspeed.profile.ray_tracing",
            "soundspeed.profile.ray_tracing.ray_path",
            "soundspeed.profile.ray_tracing.ray_tracing",
            "soundspeed.profile.samples",
            "soundspeed.server",
            "soundspeed.server.server",
            "soundspeed.soundspeed",
            "soundspeed.temp",
            "soundspeed.temp.coordinates",
            "soundspeed.temp.regex_helpers",
            "soundspeedmanager",
            "soundspeedmanager.dialogs",
            "soundspeedmanager.dialogs.dialog",
            "soundspeedmanager.dialogs.export_multi_profile_dialog",
            "soundspeedmanager.dialogs.export_profile_metadata_dialog",
            "soundspeedmanager.dialogs.export_single_profile_dialog",
            "soundspeedmanager.dialogs.import_data_dialog",
            "soundspeedmanager.dialogs.import_multi_profile_dialog",
            "soundspeedmanager.dialogs.import_single_profile_dialog",
            "soundspeedmanager.dialogs.metadata_dialog",
            "soundspeedmanager.dialogs.plot_multi_profile_dialog",
            "soundspeedmanager.dialogs.plot_profiles_dialog",
            "soundspeedmanager.dialogs.proc_data_model",
            "soundspeedmanager.dialogs.project_new_dialog",
            "soundspeedmanager.dialogs.project_rename_dialog",
            "soundspeedmanager.dialogs.project_switch_dialog",
            "soundspeedmanager.dialogs.raw_data_model",
            "soundspeedmanager.dialogs.receive_dialog",
            "soundspeedmanager.dialogs.reference_dialog",
            "soundspeedmanager.dialogs.sis_data_model",
            "soundspeedmanager.dialogs.spreadsheet_dialog",
            "soundspeedmanager.dialogs.text_editor",
            "soundspeedmanager.dialogs.text_editor_dialog",
            "soundspeedmanager.gui",
            "soundspeedmanager.mainwin",
            "soundspeedmanager.qt_callbacks",
            "soundspeedmanager.qt_progress",
            "soundspeedmanager.widgets",
            "soundspeedmanager.widgets.database",
            "soundspeedmanager.widgets.dataplots",
            "soundspeedmanager.widgets.editor",
            "soundspeedmanager.widgets.info",
            "soundspeedmanager.widgets.navtoolbar",
            "soundspeedmanager.widgets.refraction",
            "soundspeedmanager.widgets.seacat",
            "soundspeedmanager.widgets.server",
            "soundspeedmanager.widgets.settings",
            "soundspeedmanager.widgets.widget",
            "soundspeedsettings",
            "soundspeedsettings.gui",
            "soundspeedsettings.mainwin",
            "soundspeedsettings.widgets",
            "soundspeedsettings.widgets.general",
            "soundspeedsettings.widgets.input",
            "soundspeedsettings.widgets.listeners",
            "soundspeedsettings.widgets.main",
            "soundspeedsettings.widgets.output",
            "soundspeedsettings.widgets.widget"
        ],
        "version": "2017.3.0"
    },
    "hyoid": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyou": {
        "cmdline": [
            "generate_oauth2_credentials.py"
        ],
        "modules": [
            "hyou",
            "hyou.client",
            "hyou.schema",
            "hyou.schema.drive_v2",
            "hyou.schema.sheets_v4",
            "hyou.util"
        ],
        "version": "3.0b2"
    },
    "hyp": {
        "cmdline": [],
        "modules": [
            "hyp",
            "hyp.adapters",
            "hyp.adapters.base",
            "hyp.adapters.marshmallow",
            "hyp.adapters.schematics",
            "hyp.responder"
        ],
        "version": "1.0.0"
    },
    "hyp-server": {
        "cmdline": [],
        "modules": [
            "hyp",
            "hyp.hyp"
        ],
        "version": "1.2.0"
    },
    "hypatia": {
        "cmdline": [],
        "modules": [
            "benchmark",
            "benchmark.benchmark",
            "benchmark.hs-tool",
            "benchmark.intersection",
            "benchmark.mhindex",
            "benchmark.sortbench",
            "benchmark.wordstats",
            "hypatia",
            "hypatia._compat",
            "hypatia.catalog",
            "hypatia.catalog.tests",
            "hypatia.compat",
            "hypatia.exc",
            "hypatia.exc.tests",
            "hypatia.facet",
            "hypatia.facet.tests",
            "hypatia.field",
            "hypatia.field.tests",
            "hypatia.interfaces",
            "hypatia.keyword",
            "hypatia.keyword.interfaces",
            "hypatia.keyword.tests",
            "hypatia.nbest",
            "hypatia.nbest.interfaces",
            "hypatia.nbest.tests",
            "hypatia.query",
            "hypatia.query.tests",
            "hypatia.tests",
            "hypatia.tests.test_functional",
            "hypatia.text",
            "hypatia.text.baseindex",
            "hypatia.text.cosineindex",
            "hypatia.text.htmlsplitter",
            "hypatia.text.interfaces",
            "hypatia.text.lexicon",
            "hypatia.text.okapiindex",
            "hypatia.text.parsetree",
            "hypatia.text.queryparser",
            "hypatia.text.ricecode",
            "hypatia.text.setops",
            "hypatia.text.stopdict",
            "hypatia.text.tests",
            "hypatia.text.tests.test_baseindex",
            "hypatia.text.tests.test_cosineindex",
            "hypatia.text.tests.test_htmlsplitter",
            "hypatia.text.tests.test_index",
            "hypatia.text.tests.test_lexicon",
            "hypatia.text.tests.test_okapiindex",
            "hypatia.text.tests.test_parsetree",
            "hypatia.text.tests.test_queryengine",
            "hypatia.text.tests.test_queryparser",
            "hypatia.text.tests.test_setops",
            "hypatia.text.tests.test_textindex",
            "hypatia.text.tests.test_textindexwrapper",
            "hypatia.text.tests.test_widcode",
            "hypatia.text.widcode",
            "hypatia.util",
            "hypatia.util.tests"
        ],
        "version": "0.3"
    },
    "hypatia-engine": {
        "cmdline": [],
        "modules": [
            "hypatia",
            "hypatia.actor",
            "hypatia.animatedsprite",
            "hypatia.constants",
            "hypatia.controllers",
            "hypatia.dialog",
            "hypatia.game",
            "hypatia.physics",
            "hypatia.player",
            "hypatia.render",
            "hypatia.resources",
            "hypatia.sound",
            "hypatia.sprites",
            "hypatia.tiles"
        ],
        "version": "0.3.6"
    },
    "hypchat": {
        "cmdline": [],
        "modules": [
            "hypchat",
            "hypchat.requests",
            "hypchat.restobject"
        ],
        "version": "0.21"
    },
    "hype": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hypem-python": {
        "cmdline": [],
        "modules": [
            "hypem",
            "hypem.models"
        ],
        "version": "1.0"
    },
    "hypem.py": {
        "cmdline": [],
        "modules": [
            "HypeM"
        ],
        "version": "1.1.0"
    },
    "hyper": {
        "cmdline": [],
        "modules": [
            "hyper",
            "hyper.cli",
            "hyper.common",
            "hyper.common.bufsocket",
            "hyper.common.connection",
            "hyper.common.decoder",
            "hyper.common.exceptions",
            "hyper.common.headers",
            "hyper.common.util",
            "hyper.compat",
            "hyper.contrib",
            "hyper.http11",
            "hyper.http11.connection",
            "hyper.http11.parser",
            "hyper.http11.response",
            "hyper.http20",
            "hyper.http20.connection",
            "hyper.http20.errors",
            "hyper.http20.exceptions",
            "hyper.http20.response",
            "hyper.http20.stream",
            "hyper.http20.util",
            "hyper.http20.window",
            "hyper.httplib_compat",
            "hyper.packages",
            "hyper.packages.rfc3986",
            "hyper.packages.rfc3986.api",
            "hyper.packages.rfc3986.compat",
            "hyper.packages.rfc3986.exceptions",
            "hyper.packages.rfc3986.misc",
            "hyper.packages.rfc3986.normalizers",
            "hyper.packages.rfc3986.parseresult",
            "hyper.packages.rfc3986.uri",
            "hyper.ssl_compat",
            "hyper.tls"
        ],
        "version": "0.7.0"
    },
    "hyper-compose": {
        "cmdline": [],
        "modules": [
            "hypercompose",
            "hypercompose.api",
            "hypercompose.cmd",
            "hypercompose.requests_aws4auth",
            "hypercompose.requests_aws4auth.aws4auth",
            "hypercompose.requests_aws4auth.aws4signingkey",
            "hypercompose.requests_aws4auth.exceptions",
            "hypercompose.requests_aws4auth.service_parameters",
            "hypercompose.requests_aws4auth.six"
        ],
        "version": "0.1.4"
    },
    "hyper-sh": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.6"
    },
    "hyperas": {
        "cmdline": [],
        "modules": [
            "hyperas",
            "hyperas.distributions",
            "hyperas.ensemble",
            "hyperas.optim",
            "hyperas.utils"
        ],
        "version": "0.3"
    },
    "hyperbmp": {
        "cmdline": [],
        "modules": [
            "hyperbmp",
            "hyperbmp.edit",
            "hyperbmp.lib",
            "hyperbmp.props",
            "hyperbmp.read",
            "hyperbmp.wsgi"
        ],
        "version": "0.2"
    },
    "hyperboard": {
        "cmdline": [],
        "modules": [
            "hyperboard",
            "hyperboard.agent",
            "hyperboard.hyperboard_run",
            "hyperboard.recorder",
            "hyperboard.server"
        ],
        "version": "0.1.1"
    },
    "hyperbola": {
        "cmdline": [],
        "modules": [
            "hyperbola",
            "hyperbola._version",
            "hyperbola.hyperblurb",
            "hyperbola.hyperbola_model",
            "hyperbola.hyperbola_theme",
            "hyperbola.hyperbola_view",
            "hyperbola.ihyperbola",
            "hyperbola.publicpage",
            "hyperbola.rss",
            "hyperbola.test",
            "hyperbola.test.acceptance",
            "hyperbola.test.acceptance.blog",
            "hyperbola.test.historic",
            "hyperbola.test.historic.stub_publicPresence1to2",
            "hyperbola.test.historic.test_publicPresence1to2",
            "hyperbola.test.livetest_view",
            "hyperbola.test.test_hyperbola",
            "hyperbola.test.test_javascript",
            "hyperbola.test.test_rendering",
            "hyperbola.test.test_theme",
            "hyperbola.test.test_view",
            "hyperbola.test.util"
        ],
        "version": "0.0.3"
    },
    "hyperbole": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hypercat.py": {
        "cmdline": [],
        "modules": [
            "hypercat",
            "hypercat.hypercat"
        ],
        "version": "0.1.2"
    },
    "hyperchamber": {
        "cmdline": [],
        "modules": [
            "hyperchamber",
            "hyperchamber.config",
            "hyperchamber.io",
            "hyperchamber.selector"
        ],
        "version": "0.2.8"
    },
    "hypercode": {
        "cmdline": [],
        "modules": [],
        "version": "0.2a5"
    },
    "hypercouch": {
        "cmdline": [],
        "modules": [
            "hypercouch",
            "hypercouch.index",
            "tests",
            "tests.attr_test",
            "tests.basic_test",
            "tests.common",
            "tests.highlight_test",
            "tests.multi_db_test",
            "tests.multi_design_test",
            "tests.order_test",
            "tests.unicode_test"
        ],
        "version": "0.3"
    },
    "hypercube": {
        "cmdline": [],
        "modules": [
            "hypercube",
            "hypercube.array_factory",
            "hypercube.base_cube",
            "hypercube.dims",
            "hypercube.tests",
            "hypercube.tests.run_tests",
            "hypercube.tests.test_cube",
            "hypercube.util",
            "hypercube.version"
        ],
        "version": "0.3.3"
    },
    "hyperd": {
        "cmdline": [],
        "modules": [
            "hyperd",
            "hyperd.types_pb2",
            "hyperd.types_pb2_grpc"
        ],
        "version": "0.1.0"
    },
    "hyperdns-flask": {
        "cmdline": [],
        "modules": [
            "hyperdns.flask",
            "hyperdns.flask.api",
            "hyperdns.flask.auth",
            "hyperdns.flask.result",
            "hyperdns.flask.sql"
        ],
        "version": "0.9.4"
    },
    "hyperdns-hal": {
        "cmdline": [],
        "modules": [
            "hyperdns.hal",
            "hyperdns.hal.navigator",
            "hyperdns.hal.render",
            "restnavigator",
            "restnavigator.exc",
            "restnavigator.halnav",
            "restnavigator.registry",
            "restnavigator.utils"
        ],
        "version": "0.9.1"
    },
    "hyperdns-netdns": {
        "cmdline": [],
        "modules": [
            "hyperdns.netdns",
            "hyperdns.netdns.cli",
            "hyperdns.netdns.cli.merge",
            "hyperdns.netdns.cli.query",
            "hyperdns.netdns.cli.serve",
            "hyperdns.netdns.cli.validate",
            "hyperdns.netdns.cli.xlate",
            "hyperdns.netdns.config",
            "hyperdns.netdns.names",
            "hyperdns.netdns.query",
            "hyperdns.netdns.querycodes",
            "hyperdns.netdns.recordclass",
            "hyperdns.netdns.recordpool",
            "hyperdns.netdns.recordset",
            "hyperdns.netdns.recordspec",
            "hyperdns.netdns.recordtype",
            "hyperdns.netdns.resolver",
            "hyperdns.netdns.wire",
            "hyperdns.netdns.zonefiles"
        ],
        "version": "0.9.0"
    },
    "hyperestraier": {
        "cmdline": [],
        "modules": [
            "hyperestraier"
        ],
        "version": "0.10.10"
    },
    "hyperframe": {
        "cmdline": [],
        "modules": [
            "hyperframe",
            "hyperframe.exceptions",
            "hyperframe.flags",
            "hyperframe.frame"
        ],
        "version": "5.1.0"
    },
    "hypergan": {
        "cmdline": [
            "hypergan"
        ],
        "modules": [
            "hypergan",
            "hypergan.cli",
            "hypergan.config",
            "hypergan.discriminators.",
            "hypergan.discriminators..minibatch_discriminator",
            "hypergan.discriminators..pyramid_discriminator",
            "hypergan.encoders.",
            "hypergan.encoders..categories_encoder",
            "hypergan.encoders..uniform_encoder",
            "hypergan.gan",
            "hypergan.generators.",
            "hypergan.generators..resize_conv_generator",
            "hypergan.graph.",
            "hypergan.graph..graph",
            "hypergan.loaders.",
            "hypergan.loaders..audio_loader",
            "hypergan.loaders..image_loader",
            "hypergan.loaders..resize_audio_patch",
            "hypergan.loaders..resize_image_patch",
            "hypergan.losses.",
            "hypergan.losses..category_loss",
            "hypergan.losses..lamb_gan_loss",
            "hypergan.losses..lsgan_loss",
            "hypergan.losses..standard_gan_loss",
            "hypergan.losses..supervised_loss",
            "hypergan.losses..unrolled_gan_loss",
            "hypergan.losses..wgan_loss",
            "hypergan.samplers.",
            "hypergan.samplers..audio_sampler",
            "hypergan.samplers..batch_sampler",
            "hypergan.samplers..common",
            "hypergan.samplers..grid_sampler",
            "hypergan.samplers..progressive_enhancement_sampler",
            "hypergan.samplers..static_batch_sampler",
            "hypergan.trainers.",
            "hypergan.trainers..adam_trainer",
            "hypergan.trainers..common",
            "hypergan.trainers..momentum_trainer",
            "hypergan.trainers..rmsprop_d_adam_g_trainer",
            "hypergan.trainers..rmsprop_trainer",
            "hypergan.trainers..sgd_adam_trainer",
            "hypergan.trainers..sgd_trainer",
            "hypergan.util.",
            "hypergan.util..gan_server",
            "hypergan.util..hc_tf",
            "hypergan.util..ops",
            "hypergan.util..wavegan",
            "hypergan.vendor.",
            "hypergan.vendor..inception_loader",
            "hypergan.vendor..vggnet_loader",
            "hypergan.vendor..wavenet"
        ],
        "version": "0.8.8"
    },
    "hyperglyph": {
        "cmdline": [],
        "modules": [
            "hyperglyph",
            "hyperglyph.data",
            "hyperglyph.encoding",
            "hyperglyph.resource",
            "hyperglyph.resource.base",
            "hyperglyph.resource.handler",
            "hyperglyph.resource.persistent",
            "hyperglyph.resource.router",
            "hyperglyph.resource.transient",
            "hyperglyph.server"
        ],
        "version": "0.9-20140421"
    },
    "hypergolix": {
        "cmdline": [],
        "modules": [
            "hypergolix",
            "hypergolix.accounting",
            "hypergolix.app",
            "hypergolix.bootstrapping",
            "hypergolix.cli",
            "hypergolix.comms",
            "hypergolix.config",
            "hypergolix.core",
            "hypergolix.daemon",
            "hypergolix.dispatch",
            "hypergolix.embed",
            "hypergolix.exceptions",
            "hypergolix.gao",
            "hypergolix.hypothetical",
            "hypergolix.inquisition",
            "hypergolix.ipc",
            "hypergolix.lawyer",
            "hypergolix.librarian",
            "hypergolix.logutils",
            "hypergolix.objproxy",
            "hypergolix.persistence",
            "hypergolix.postal",
            "hypergolix.privateer",
            "hypergolix.remotes",
            "hypergolix.rolodex",
            "hypergolix.service",
            "hypergolix.undertaker",
            "hypergolix.utils",
            "hypergolix.winpath"
        ],
        "version": "0.1.0"
    },
    "hyperion": {
        "cmdline": [
            "hyperion",
            "hyperion2fits"
        ],
        "modules": [
            "hyperion",
            "hyperion.conf",
            "hyperion.conf.conf_files",
            "hyperion.conf.tests",
            "hyperion.conf.tests.test_conf_io",
            "hyperion.conf.tests.test_image_conf",
            "hyperion.conf.tests.test_peeled_image_conf",
            "hyperion.conf.tests.test_run_conf",
            "hyperion.conftest",
            "hyperion.densities",
            "hyperion.densities.alpha_disk",
            "hyperion.densities.ambient_medium",
            "hyperion.densities.bipolar_cavity",
            "hyperion.densities.core",
            "hyperion.densities.flared_disk",
            "hyperion.densities.power_law_envelope",
            "hyperion.densities.tests",
            "hyperion.densities.tests.test_densities",
            "hyperion.densities.ulrich_envelope",
            "hyperion.dust",
            "hyperion.dust.dust_type",
            "hyperion.dust.emissivities",
            "hyperion.dust.mean_opacities",
            "hyperion.dust.optical_properties",
            "hyperion.dust.tests",
            "hyperion.dust.tests.test_dust",
            "hyperion.dust.tests.test_emissivities",
            "hyperion.dust.tests.test_mean_opacities",
            "hyperion.dust.tests.test_optical_properties",
            "hyperion.filter",
            "hyperion.filter.filter",
            "hyperion.filter.tests",
            "hyperion.filter.tests.test_filter",
            "hyperion.grid",
            "hyperion.grid.amr_grid",
            "hyperion.grid.cartesian_grid",
            "hyperion.grid.cylindrical_polar_grid",
            "hyperion.grid.grid_helpers",
            "hyperion.grid.grid_on_disk",
            "hyperion.grid.octree_grid",
            "hyperion.grid.spherical_polar_grid",
            "hyperion.grid.tests",
            "hyperion.grid.tests.test_grid",
            "hyperion.grid.tests.test_grid_on_disk",
            "hyperion.grid.tests.test_io",
            "hyperion.grid.tests.test_views",
            "hyperion.grid.tests.test_voronoi",
            "hyperion.grid.tests.test_yt",
            "hyperion.grid.tests.yt_compat",
            "hyperion.grid.voronoi_grid",
            "hyperion.grid.voronoi_helpers",
            "hyperion.grid.yt2_wrappers",
            "hyperion.grid.yt3_wrappers",
            "hyperion.grid.yt_wrappers",
            "hyperion.importers",
            "hyperion.importers.orion",
            "hyperion.importers.sph",
            "hyperion.importers.tests",
            "hyperion.importers.tests.test_sph",
            "hyperion.model",
            "hyperion.model.analytical_yso_model",
            "hyperion.model.helpers",
            "hyperion.model.image",
            "hyperion.model.model",
            "hyperion.model.model_output",
            "hyperion.model.sed",
            "hyperion.model.tests",
            "hyperion.model.tests.test_amr_checks",
            "hyperion.model.tests.test_analytical_yso",
            "hyperion.model.tests.test_bit_level",
            "hyperion.model.tests.test_filters",
            "hyperion.model.tests.test_fortran",
            "hyperion.model.tests.test_get_quantities",
            "hyperion.model.tests.test_helpers",
            "hyperion.model.tests.test_image",
            "hyperion.model.tests.test_minimum_energy",
            "hyperion.model.tests.test_misc",
            "hyperion.model.tests.test_model",
            "hyperion.model.tests.test_model_copy_link",
            "hyperion.model.tests.test_model_io",
            "hyperion.model.tests.test_mono",
            "hyperion.model.tests.test_mrw",
            "hyperion.model.tests.test_output_physical",
            "hyperion.model.tests.test_propagation",
            "hyperion.model.tests.test_sed",
            "hyperion.model.tests.test_specific_energy_type",
            "hyperion.model.tests.test_use_grid_from_disk",
            "hyperion.model.tests.test_use_previous",
            "hyperion.sources",
            "hyperion.sources.source",
            "hyperion.sources.tests",
            "hyperion.sources.tests.test_source",
            "hyperion.sources.tests.test_source_io",
            "hyperion.sphinx",
            "hyperion.sphinx.ext",
            "hyperion.sphinx.ext.docscrape",
            "hyperion.sphinx.ext.docscrape_sphinx",
            "hyperion.sphinx.ext.numpydoc",
            "hyperion.testing",
            "hyperion.testing.helper",
            "hyperion.util",
            "hyperion.util.constants",
            "hyperion.util.convenience",
            "hyperion.util.decorator",
            "hyperion.util.functions",
            "hyperion.util.integrate",
            "hyperion.util.interpolate",
            "hyperion.util.meshgrid",
            "hyperion.util.nans",
            "hyperion.util.otf_hdf5",
            "hyperion.util.parfile",
            "hyperion.util.polyhedra",
            "hyperion.util.tests",
            "hyperion.util.tests.test_functions",
            "hyperion.util.tests.test_integrate",
            "hyperion.util.tests.test_interpolate",
            "hyperion.util.validator",
            "hyperion.version"
        ],
        "version": "0.9.8"
    },
    "hyperion-dust": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "hyperion2boblight": {
        "cmdline": [],
        "modules": [
            "hyperion2boblight",
            "hyperion2boblight.main"
        ],
        "version": "2.0.0"
    },
    "hyperkit": {
        "cmdline": [],
        "modules": [
            "hyperkit",
            "hyperkit.cloudinit",
            "hyperkit.command",
            "hyperkit.distro",
            "hyperkit.distro.cirros",
            "hyperkit.distro.distro",
            "hyperkit.distro.fedora",
            "hyperkit.distro.ubuntu",
            "hyperkit.error",
            "hyperkit.hypervisor",
            "hyperkit.hypervisor.command",
            "hyperkit.hypervisor.machine",
            "hyperkit.hypervisor.qemu_img",
            "hyperkit.hypervisor.vbox",
            "hyperkit.hypervisor.vboxmanage",
            "hyperkit.hypervisor.vmrun",
            "hyperkit.hypervisor.vmware",
            "hyperkit.spec",
            "hyperkit.spec.auth",
            "hyperkit.spec.hardware",
            "hyperkit.spec.image",
            "hyperkit.spec.spec",
            "hyperkit.test",
            "hyperkit.test.test_cloudinit",
            "hyperkit.test.test_distro",
            "hyperkit.test.test_hypervisor_command",
            "hyperkit.test.test_hypervisor_machine",
            "hyperkit.test.test_hypervisor_vbox",
            "hyperkit.test.test_hypervisor_vmware",
            "hyperkit.test.test_spec"
        ],
        "version": "0.2"
    },
    "hyperkitty": {
        "cmdline": [],
        "modules": [
            "hyperkitty",
            "hyperkitty.api",
            "hyperkitty.api.email",
            "hyperkitty.api.mailinglist",
            "hyperkitty.api.sender",
            "hyperkitty.api.tag",
            "hyperkitty.api.thread",
            "hyperkitty.api.utils",
            "hyperkitty.context_processors",
            "hyperkitty.jobs",
            "hyperkitty.jobs.empty_threads",
            "hyperkitty.jobs.orphan_emails",
            "hyperkitty.jobs.sync_mailman",
            "hyperkitty.jobs.thread_order_depth",
            "hyperkitty.jobs.update_and_clean_index",
            "hyperkitty.jobs.update_index",
            "hyperkitty.lib",
            "hyperkitty.lib.analysis",
            "hyperkitty.lib.cache",
            "hyperkitty.lib.compat",
            "hyperkitty.lib.incoming",
            "hyperkitty.lib.mailman",
            "hyperkitty.lib.mockup",
            "hyperkitty.lib.paginator",
            "hyperkitty.lib.posting",
            "hyperkitty.lib.scrub",
            "hyperkitty.lib.signals",
            "hyperkitty.lib.utils",
            "hyperkitty.lib.view_helpers",
            "hyperkitty.management",
            "hyperkitty.management.commands",
            "hyperkitty.management.commands.hyperkitty_import",
            "hyperkitty.management.commands.mailman2_download",
            "hyperkitty.management.commands.mailman_sync",
            "hyperkitty.management.utils",
            "hyperkitty.middleware",
            "hyperkitty.migrations",
            "hyperkitty.migrations.0001_initial",
            "hyperkitty.migrations.0002_auto_20150311_0913",
            "hyperkitty.migrations.0003_thread_starting_email",
            "hyperkitty.models",
            "hyperkitty.search_indexes",
            "hyperkitty.south_migrations",
            "hyperkitty.south_migrations.0001_initial",
            "hyperkitty.south_migrations.0002_add_indexes",
            "hyperkitty.south_migrations.0003_auto__add_unique_attachment_email_counter__add_unique_thread_mailingli",
            "hyperkitty.south_migrations.0004_auto__add_index_email_in_reply_to",
            "hyperkitty.south_migrations.0005_auto__add_field_thread_starting_email",
            "hyperkitty.templatetags",
            "hyperkitty.templatetags.hk_generic",
            "hyperkitty.templatetags.hk_haystack",
            "hyperkitty.tests",
            "hyperkitty.tests._test_caching",
            "hyperkitty.tests.commands",
            "hyperkitty.tests.commands.test_import",
            "hyperkitty.tests.jobs",
            "hyperkitty.tests.jobs.test_update_index",
            "hyperkitty.tests.lib",
            "hyperkitty.tests.lib.test_analysis",
            "hyperkitty.tests.lib.test_incoming",
            "hyperkitty.tests.lib.test_mailman",
            "hyperkitty.tests.lib.test_paginator",
            "hyperkitty.tests.lib.test_posting",
            "hyperkitty.tests.lib.test_scrub",
            "hyperkitty.tests.lib.test_signals",
            "hyperkitty.tests.lib.test_utils",
            "hyperkitty.tests.lib.test_view_helpers",
            "hyperkitty.tests.settings_test",
            "hyperkitty.tests.test_middleware",
            "hyperkitty.tests.test_models",
            "hyperkitty.tests.test_search_index",
            "hyperkitty.tests.test_templatetags",
            "hyperkitty.tests.utils",
            "hyperkitty.tests.views",
            "hyperkitty.tests.views.test_accounts",
            "hyperkitty.tests.views.test_archives",
            "hyperkitty.tests.views.test_compat",
            "hyperkitty.tests.views.test_index",
            "hyperkitty.tests.views.test_message",
            "hyperkitty.tests.views.test_search",
            "hyperkitty.tests.views.test_thread",
            "hyperkitty.urls",
            "hyperkitty.views",
            "hyperkitty.views.accounts",
            "hyperkitty.views.categories",
            "hyperkitty.views.compat",
            "hyperkitty.views.forms",
            "hyperkitty.views.index",
            "hyperkitty.views.mailman",
            "hyperkitty.views.message",
            "hyperkitty.views.mlist",
            "hyperkitty.views.search",
            "hyperkitty.views.tags",
            "hyperkitty.views.thread",
            "hyperkitty.views.users"
        ],
        "version": "1.0.3"
    },
    "hyperledger": {
        "cmdline": [],
        "modules": [
            "hyperledger",
            "hyperledger.api",
            "hyperledger.api.block",
            "hyperledger.api.blockchain",
            "hyperledger.api.chaincode",
            "hyperledger.api.network",
            "hyperledger.api.registrar",
            "hyperledger.api.transaction",
            "hyperledger.auth",
            "hyperledger.auth.auth",
            "hyperledger.client",
            "hyperledger.constants",
            "hyperledger.errors",
            "hyperledger.ssladapter",
            "hyperledger.ssladapter.ssl_match_hostname",
            "hyperledger.ssladapter.ssladapter",
            "hyperledger.tls",
            "hyperledger.utils",
            "hyperledger.utils.decorators",
            "hyperledger.utils.types",
            "hyperledger.utils.utils",
            "hyperledger.version"
        ],
        "version": "0.1.5"
    },
    "hyperledger-py": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyperlink": {
        "cmdline": [],
        "modules": [
            "hyperlink",
            "hyperlink._url",
            "hyperlink.test",
            "hyperlink.test.test_url"
        ],
        "version": "17.1.1"
    },
    "hyperloglog": {
        "cmdline": [],
        "modules": [
            "hyperloglog",
            "hyperloglog.compat",
            "hyperloglog.const",
            "hyperloglog.hll",
            "hyperloglog.shll",
            "hyperloglog.test",
            "hyperloglog.test.test_hll",
            "hyperloglog.test.test_shll"
        ],
        "version": "0.0.11"
    },
    "hyperloglogdb": {
        "cmdline": [],
        "modules": [
            "hyperloglogdb",
            "hyperloglogdb.hll",
            "hyperloglogdb.hlldb",
            "hyperloglogdb.test",
            "hyperloglogdb.test.test_hll",
            "hyperloglogdb.test.test_hlldb"
        ],
        "version": "0.1.0"
    },
    "hyperloglogs": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hypermark": {
        "cmdline": [],
        "modules": [
            "hypermark",
            "hypermark.api",
            "hypermark.bootstrap",
            "hypermark.core",
            "hypermark.filters",
            "hypermark.session"
        ],
        "version": "0.0.1"
    },
    "hypermedia": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hypermedia-resource": {
        "cmdline": [],
        "modules": [
            "hypermedia_resource",
            "hypermedia_resource.adapters",
            "hypermedia_resource.adapters.hal_json",
            "hypermedia_resource.adapters.hale_json",
            "hypermedia_resource.attributes",
            "hypermedia_resource.base",
            "hypermedia_resource.contrib",
            "hypermedia_resource.contrib.browser",
            "hypermedia_resource.contrib.maze_xml",
            "hypermedia_resource.dom",
            "hypermedia_resource.inputs",
            "hypermedia_resource.media_types",
            "hypermedia_resource.resource",
            "hypermedia_resource.translator",
            "hypermedia_resource.utils",
            "hypermedia_resource.wrappers"
        ],
        "version": "0.2.0"
    },
    "hyperml": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hypernova": {
        "cmdline": [],
        "modules": [
            "hypernova",
            "hypernova.plugins",
            "hypernova.plugins.dev_mode"
        ],
        "version": "0.0.3"
    },
    "hyperop": {
        "cmdline": [],
        "modules": [
            "hyperop",
            "hyperop._version",
            "hyperop.hyperop"
        ],
        "version": "1.1"
    },
    "hyperopt": {
        "cmdline": [],
        "modules": [
            "hyperopt",
            "hyperopt.algobase",
            "hyperopt.anneal",
            "hyperopt.base",
            "hyperopt.criteria",
            "hyperopt.exceptions",
            "hyperopt.fmin",
            "hyperopt.graphviz",
            "hyperopt.hp",
            "hyperopt.ipy",
            "hyperopt.main",
            "hyperopt.mix",
            "hyperopt.mongoexp",
            "hyperopt.plotting",
            "hyperopt.pyll",
            "hyperopt.pyll.base",
            "hyperopt.pyll.stochastic",
            "hyperopt.pyll.tests",
            "hyperopt.pyll.tests.test_base",
            "hyperopt.pyll.tests.test_stochastic",
            "hyperopt.pyll_utils",
            "hyperopt.rand",
            "hyperopt.rdists",
            "hyperopt.tests",
            "hyperopt.tests.test_anneal",
            "hyperopt.tests.test_base",
            "hyperopt.tests.test_criteria",
            "hyperopt.tests.test_domains",
            "hyperopt.tests.test_fmin",
            "hyperopt.tests.test_ipy",
            "hyperopt.tests.test_mongoexp",
            "hyperopt.tests.test_pchoice",
            "hyperopt.tests.test_plotting",
            "hyperopt.tests.test_pyll_utils",
            "hyperopt.tests.test_rand",
            "hyperopt.tests.test_rdists",
            "hyperopt.tests.test_tpe",
            "hyperopt.tests.test_utils",
            "hyperopt.tests.test_vectorize",
            "hyperopt.tests.test_webpage",
            "hyperopt.tpe",
            "hyperopt.utils",
            "hyperopt.vectorize"
        ],
        "version": "0.1"
    },
    "hyperscan-python": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hypersearch": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyperspace": {
        "cmdline": [],
        "modules": [
            "hyperspace",
            "hyperspace.affordances",
            "hyperspace.html",
            "hyperspace.hydra",
            "hyperspace.turtle"
        ],
        "version": "0.1.0"
    },
    "hyperspectral": {
        "cmdline": [],
        "modules": [
            "hyperspectral",
            "hyperspectral.axes",
            "hyperspectral.hyperspectral_cube"
        ],
        "version": "0.1.8"
    },
    "hyperspy": {
        "cmdline": [],
        "modules": [
            "hyperspy",
            "hyperspy.Release",
            "hyperspy._components",
            "hyperspy._components.arctan",
            "hyperspy._components.bleasdale",
            "hyperspy._components.eels_cl_edge",
            "hyperspy._components.eels_double_power_law",
            "hyperspy._components.eels_vignetting",
            "hyperspy._components.error_function",
            "hyperspy._components.exponential",
            "hyperspy._components.expression",
            "hyperspy._components.gaussian",
            "hyperspy._components.gaussian2d",
            "hyperspy._components.gaussianhf",
            "hyperspy._components.heaviside",
            "hyperspy._components.logistic",
            "hyperspy._components.lorentzian",
            "hyperspy._components.offset",
            "hyperspy._components.pes_core_line_shape",
            "hyperspy._components.pes_see",
            "hyperspy._components.polynomial",
            "hyperspy._components.power_law",
            "hyperspy._components.rc",
            "hyperspy._components.scalable_fixed_pattern",
            "hyperspy._components.voigt",
            "hyperspy._components.volume_plasmon_drude",
            "hyperspy._lazy_signals",
            "hyperspy._signals",
            "hyperspy._signals.common_signal1d",
            "hyperspy._signals.common_signal2d",
            "hyperspy._signals.complex_signal",
            "hyperspy._signals.complex_signal1d",
            "hyperspy._signals.complex_signal2d",
            "hyperspy._signals.dielectric_function",
            "hyperspy._signals.eds",
            "hyperspy._signals.eds_sem",
            "hyperspy._signals.eds_tem",
            "hyperspy._signals.eels",
            "hyperspy._signals.hologram_image",
            "hyperspy._signals.lazy",
            "hyperspy._signals.signal1d",
            "hyperspy._signals.signal2d",
            "hyperspy.api",
            "hyperspy.axes",
            "hyperspy.component",
            "hyperspy.components1d",
            "hyperspy.components2d",
            "hyperspy.conftest",
            "hyperspy.datasets",
            "hyperspy.datasets.example_signals",
            "hyperspy.decorators",
            "hyperspy.defaults_parser",
            "hyperspy.docstrings",
            "hyperspy.docstrings.plot",
            "hyperspy.docstrings.signal",
            "hyperspy.drawing",
            "hyperspy.drawing._markers",
            "hyperspy.drawing._markers.horizontal_line",
            "hyperspy.drawing._markers.horizontal_line_segment",
            "hyperspy.drawing._markers.line_segment",
            "hyperspy.drawing._markers.point",
            "hyperspy.drawing._markers.rectangle",
            "hyperspy.drawing._markers.text",
            "hyperspy.drawing._markers.vertical_line",
            "hyperspy.drawing._markers.vertical_line_segment",
            "hyperspy.drawing._widgets",
            "hyperspy.drawing._widgets.circle",
            "hyperspy.drawing._widgets.horizontal_line",
            "hyperspy.drawing._widgets.label",
            "hyperspy.drawing._widgets.line2d",
            "hyperspy.drawing._widgets.range",
            "hyperspy.drawing._widgets.rectangles",
            "hyperspy.drawing._widgets.scalebar",
            "hyperspy.drawing._widgets.vertical_line",
            "hyperspy.drawing.figure",
            "hyperspy.drawing.image",
            "hyperspy.drawing.marker",
            "hyperspy.drawing.mpl_he",
            "hyperspy.drawing.mpl_hie",
            "hyperspy.drawing.mpl_hse",
            "hyperspy.drawing.signal",
            "hyperspy.drawing.signal1d",
            "hyperspy.drawing.tiles",
            "hyperspy.drawing.utils",
            "hyperspy.drawing.widget",
            "hyperspy.drawing.widgets",
            "hyperspy.events",
            "hyperspy.exceptions",
            "hyperspy.external",
            "hyperspy.external.astroML",
            "hyperspy.external.astroML.bayesian_blocks",
            "hyperspy.external.astroML.histtools",
            "hyperspy.external.mpfit",
            "hyperspy.external.mpfit.mpfit",
            "hyperspy.external.mpfit.mpfitexpr",
            "hyperspy.external.mpfit.test_mpfit",
            "hyperspy.external.progressbar",
            "hyperspy.external.tifffile",
            "hyperspy.gui",
            "hyperspy.gui.axes",
            "hyperspy.gui.eds",
            "hyperspy.gui.eels",
            "hyperspy.gui.egerton_quantification",
            "hyperspy.gui.messages",
            "hyperspy.gui.preferences",
            "hyperspy.gui.tools",
            "hyperspy.interactive",
            "hyperspy.io",
            "hyperspy.io_plugins",
            "hyperspy.io_plugins.bcf",
            "hyperspy.io_plugins.blockfile",
            "hyperspy.io_plugins.dens",
            "hyperspy.io_plugins.digital_micrograph",
            "hyperspy.io_plugins.edax",
            "hyperspy.io_plugins.emd",
            "hyperspy.io_plugins.fei",
            "hyperspy.io_plugins.hdf5",
            "hyperspy.io_plugins.image",
            "hyperspy.io_plugins.mrc",
            "hyperspy.io_plugins.msa",
            "hyperspy.io_plugins.netcdf",
            "hyperspy.io_plugins.protochips",
            "hyperspy.io_plugins.ripple",
            "hyperspy.io_plugins.semper_unf",
            "hyperspy.io_plugins.tiff",
            "hyperspy.learn",
            "hyperspy.learn.mlpca",
            "hyperspy.learn.mva",
            "hyperspy.learn.onmf",
            "hyperspy.learn.rpca",
            "hyperspy.learn.svd_pca",
            "hyperspy.logger",
            "hyperspy.misc",
            "hyperspy.misc.array_tools",
            "hyperspy.misc.config_dir",
            "hyperspy.misc.date_time_tools",
            "hyperspy.misc.eds",
            "hyperspy.misc.eds.ffast_mac",
            "hyperspy.misc.eds.utils",
            "hyperspy.misc.eels",
            "hyperspy.misc.eels.base_gos",
            "hyperspy.misc.eels.eelsdb",
            "hyperspy.misc.eels.effective_angle",
            "hyperspy.misc.eels.hartree_slater_gos",
            "hyperspy.misc.eels.hydrogenic_gos",
            "hyperspy.misc.eels.tools",
            "hyperspy.misc.elements",
            "hyperspy.misc.example_signals_loading",
            "hyperspy.misc.export_dictionary",
            "hyperspy.misc.holography",
            "hyperspy.misc.holography.reconstruct",
            "hyperspy.misc.io",
            "hyperspy.misc.io.tools",
            "hyperspy.misc.io.ttols",
            "hyperspy.misc.io.utils_readfile",
            "hyperspy.misc.ipython_tools",
            "hyperspy.misc.machine_learning",
            "hyperspy.misc.machine_learning.import_sklearn",
            "hyperspy.misc.machine_learning.orthomax",
            "hyperspy.misc.machine_learning.tools",
            "hyperspy.misc.material",
            "hyperspy.misc.math_tools",
            "hyperspy.misc.physical_constants",
            "hyperspy.misc.physics_tools",
            "hyperspy.misc.rgb_tools",
            "hyperspy.misc.signal_tools",
            "hyperspy.misc.slicing",
            "hyperspy.misc.test_utils",
            "hyperspy.misc.tv_denoise",
            "hyperspy.misc.utils",
            "hyperspy.model",
            "hyperspy.models",
            "hyperspy.models.edsmodel",
            "hyperspy.models.edssemmodel",
            "hyperspy.models.edstemmodel",
            "hyperspy.models.eelsmodel",
            "hyperspy.models.model1d",
            "hyperspy.models.model2d",
            "hyperspy.roi",
            "hyperspy.samfire",
            "hyperspy.samfire_utils",
            "hyperspy.samfire_utils.fit_tests",
            "hyperspy.samfire_utils.global_strategies",
            "hyperspy.samfire_utils.goodness_of_fit_tests",
            "hyperspy.samfire_utils.goodness_of_fit_tests.information_theory",
            "hyperspy.samfire_utils.goodness_of_fit_tests.red_chisq",
            "hyperspy.samfire_utils.goodness_of_fit_tests.test_general",
            "hyperspy.samfire_utils.local_strategies",
            "hyperspy.samfire_utils.samfire_kernel",
            "hyperspy.samfire_utils.samfire_pool",
            "hyperspy.samfire_utils.samfire_worker",
            "hyperspy.samfire_utils.segmenters",
            "hyperspy.samfire_utils.segmenters.histogram",
            "hyperspy.samfire_utils.strategy",
            "hyperspy.samfire_utils.weights",
            "hyperspy.samfire_utils.weights.red_chisq",
            "hyperspy.signal",
            "hyperspy.signals",
            "hyperspy.tests",
            "hyperspy.tests.axes",
            "hyperspy.tests.axes.test_axes_manager",
            "hyperspy.tests.axes.test_data_axis",
            "hyperspy.tests.component",
            "hyperspy.tests.component.test_component_active_array",
            "hyperspy.tests.component.test_component_set_parameters",
            "hyperspy.tests.component.test_gaussianhf",
            "hyperspy.tests.datasets",
            "hyperspy.tests.datasets.test_eelsdb",
            "hyperspy.tests.drawing",
            "hyperspy.tests.drawing.test_figure_title",
            "hyperspy.tests.drawing.test_mpl_testing_setup",
            "hyperspy.tests.drawing.test_plot_markers",
            "hyperspy.tests.drawing.test_plot_signal",
            "hyperspy.tests.drawing.test_plot_signal1d",
            "hyperspy.tests.drawing.test_plot_signal2d",
            "hyperspy.tests.drawing.test_utils",
            "hyperspy.tests.io",
            "hyperspy.tests.io.generate_dm_testing_files",
            "hyperspy.tests.io.test_bcf",
            "hyperspy.tests.io.test_blockfile",
            "hyperspy.tests.io.test_dens",
            "hyperspy.tests.io.test_dm3",
            "hyperspy.tests.io.test_dm_stackbuilder_plugin",
            "hyperspy.tests.io.test_edax",
            "hyperspy.tests.io.test_emd",
            "hyperspy.tests.io.test_fei",
            "hyperspy.tests.io.test_hdf5",
            "hyperspy.tests.io.test_msa",
            "hyperspy.tests.io.test_protochips",
            "hyperspy.tests.io.test_ripple",
            "hyperspy.tests.io.test_semper_unf",
            "hyperspy.tests.io.test_tiff",
            "hyperspy.tests.misc",
            "hyperspy.tests.misc.test_arraytools",
            "hyperspy.tests.misc.test_date_time_tools",
            "hyperspy.tests.misc.test_image_tools",
            "hyperspy.tests.misc.test_math_tools",
            "hyperspy.tests.misc.test_rgbtools",
            "hyperspy.tests.misc.test_test_utils",
            "hyperspy.tests.model",
            "hyperspy.tests.model.test_chi_squared",
            "hyperspy.tests.model.test_component",
            "hyperspy.tests.model.test_components",
            "hyperspy.tests.model.test_components2D",
            "hyperspy.tests.model.test_edsmodel",
            "hyperspy.tests.model.test_eelsmodel",
            "hyperspy.tests.model.test_fancy_indexing",
            "hyperspy.tests.model.test_fit_component",
            "hyperspy.tests.model.test_model",
            "hyperspy.tests.model.test_model_as_dictionary",
            "hyperspy.tests.model.test_model_selection_criteria",
            "hyperspy.tests.model.test_model_storing",
            "hyperspy.tests.model.test_parameter",
            "hyperspy.tests.model.test_set_parameter_state",
            "hyperspy.tests.model.test_set_parameter_value",
            "hyperspy.tests.mva",
            "hyperspy.tests.mva.test_bss",
            "hyperspy.tests.mva.test_decomposition",
            "hyperspy.tests.mva.test_export",
            "hyperspy.tests.mva.test_onmf",
            "hyperspy.tests.mva.test_rpca",
            "hyperspy.tests.samfire",
            "hyperspy.tests.samfire.test_goodness_of_fit_tests",
            "hyperspy.tests.samfire.test_histogram_segmenter",
            "hyperspy.tests.samfire.test_red_chisq_weight",
            "hyperspy.tests.samfire.test_samfire",
            "hyperspy.tests.samfire.test_strategy",
            "hyperspy.tests.samfire.test_strategy_list",
            "hyperspy.tests.samfire.test_utils",
            "hyperspy.tests.signal",
            "hyperspy.tests.signal.test_1D_tools",
            "hyperspy.tests.signal.test_2D_tools",
            "hyperspy.tests.signal.test_assign_subclass",
            "hyperspy.tests.signal.test_binned",
            "hyperspy.tests.signal.test_complex_signal",
            "hyperspy.tests.signal.test_complex_signal2d",
            "hyperspy.tests.signal.test_eds_sem",
            "hyperspy.tests.signal.test_eds_tem",
            "hyperspy.tests.signal.test_eels",
            "hyperspy.tests.signal.test_fancy_indexing",
            "hyperspy.tests.signal.test_find_peaks1D_ohaver",
            "hyperspy.tests.signal.test_folding",
            "hyperspy.tests.signal.test_hologram_image",
            "hyperspy.tests.signal.test_image",
            "hyperspy.tests.signal.test_integrate_in_range",
            "hyperspy.tests.signal.test_kramers_kronig_transform",
            "hyperspy.tests.signal.test_lazy",
            "hyperspy.tests.signal.test_map_method",
            "hyperspy.tests.signal.test_remove_background",
            "hyperspy.tests.signal.test_rgb",
            "hyperspy.tests.signal.test_signal_operators",
            "hyperspy.tests.signal.test_signal_subclass_conversion",
            "hyperspy.tests.signal.test_spectrum",
            "hyperspy.tests.signal.test_tools",
            "hyperspy.tests.test_dictionary_tree_browser",
            "hyperspy.tests.test_events",
            "hyperspy.tests.test_interactive",
            "hyperspy.tests.utils",
            "hyperspy.tests.utils.test_attrsetter",
            "hyperspy.tests.utils.test_eds",
            "hyperspy.tests.utils.test_material",
            "hyperspy.tests.utils.test_roi",
            "hyperspy.tests.utils.test_slugify",
            "hyperspy.tests.utils.test_stack",
            "hyperspy.utils",
            "hyperspy.utils.eds",
            "hyperspy.utils.markers",
            "hyperspy.utils.material",
            "hyperspy.utils.model",
            "hyperspy.utils.model_selection",
            "hyperspy.utils.parallel_pool",
            "hyperspy.utils.plot",
            "hyperspy.utils.roi",
            "hyperspy.utils.samfire"
        ],
        "version": "1.2"
    },
    "hyperspyui": {
        "cmdline": [
            "hyperspyui_install.py"
        ],
        "modules": [
            "hyperspyui",
            "hyperspyui._elements",
            "hyperspyui._tools",
            "hyperspyui._tools.figuretool",
            "hyperspyui._tools.gaussiantool",
            "hyperspyui._tools.hometool",
            "hyperspyui._tools.linetool",
            "hyperspyui._tools.multiselectiontool",
            "hyperspyui._tools.pointertool",
            "hyperspyui._tools.selectiontool",
            "hyperspyui._tools.signalfiguretool",
            "hyperspyui._tools.tool",
            "hyperspyui._tools.zoompan",
            "hyperspyui.actionable",
            "hyperspyui.advancedaction",
            "hyperspyui.bindinglist",
            "hyperspyui.exceptions",
            "hyperspyui.hooksignal",
            "hyperspyui.hooktraitsui",
            "hyperspyui.info",
            "hyperspyui.log",
            "hyperspyui.mainwindow",
            "hyperspyui.mainwindowbase",
            "hyperspyui.mainwindowhyperspy",
            "hyperspyui.mainwindowutillayer",
            "hyperspyui.mdi_mpl_backend",
            "hyperspyui.modelwrapper",
            "hyperspyui.overrides",
            "hyperspyui.plugincreator",
            "hyperspyui.pluginmanager",
            "hyperspyui.plugins",
            "hyperspyui.plugins.align",
            "hyperspyui.plugins.axesconf",
            "hyperspyui.plugins.axesorderwidget",
            "hyperspyui.plugins.basicsignal",
            "hyperspyui.plugins.basicspectrum",
            "hyperspyui.plugins.cmappicker",
            "hyperspyui.plugins.croptool",
            "hyperspyui.plugins.dataastext",
            "hyperspyui.plugins.dmannotations",
            "hyperspyui.plugins.eelsdb",
            "hyperspyui.plugins.fft",
            "hyperspyui.plugins.fitting",
            "hyperspyui.plugins.gaussianfilter",
            "hyperspyui.plugins.gitgetter",
            "hyperspyui.plugins.imagerotation",
            "hyperspyui.plugins.linemeasure",
            "hyperspyui.plugins.metadataeditor",
            "hyperspyui.plugins.mirrorplot",
            "hyperspyui.plugins.moviesaver",
            "hyperspyui.plugins.mva",
            "hyperspyui.plugins.plotutils",
            "hyperspyui.plugins.plugin",
            "hyperspyui.plugins.rebin",
            "hyperspyui.plugins.recorderwidget",
            "hyperspyui.plugins.segmentation",
            "hyperspyui.plugins.tightlayout",
            "hyperspyui.plugins.virtual_aperture",
            "hyperspyui.recorder",
            "hyperspyui.settings",
            "hyperspyui.signalwrapper",
            "hyperspyui.singleapplication",
            "hyperspyui.smartcolorsvgiconengine",
            "hyperspyui.threaded",
            "hyperspyui.tools",
            "hyperspyui.uiprogressbar",
            "hyperspyui.util",
            "hyperspyui.widgets",
            "hyperspyui.widgets._editor_server",
            "hyperspyui.widgets.axespicker",
            "hyperspyui.widgets.consolewidget",
            "hyperspyui.widgets.contrastwidget",
            "hyperspyui.widgets.dataviewwidget",
            "hyperspyui.widgets.editorwidget",
            "hyperspyui.widgets.elementpicker",
            "hyperspyui.widgets.extendedqwidgets",
            "hyperspyui.widgets.periodictable",
            "hyperspyui.widgets.pickxsignals",
            "hyperspyui.widgets.pluginmanagerwidget",
            "hyperspyui.widgets.settingsdialog",
            "hyperspyui.widgets.signallist",
            "hyperspyui.widgets.stringinput",
            "hyperspyui.widgets.traitswidget"
        ],
        "version": "1.0.1"
    },
    "hypertable": {
        "cmdline": [],
        "modules": [
            "hypertable",
            "hypertable.thriftclient",
            "hyperthrift",
            "hyperthrift.gen",
            "hyperthrift.gen.ClientService",
            "hyperthrift.gen.constants",
            "hyperthrift.gen.ttypes",
            "hyperthrift.gen2",
            "hyperthrift.gen2.HqlService",
            "hyperthrift.gen2.constants",
            "hyperthrift.gen2.ttypes",
            "thrift",
            "thrift.TMultiplexedProcessor",
            "thrift.TSCons",
            "thrift.TSerialization",
            "thrift.TTornado",
            "thrift.Thrift",
            "thrift.protocol",
            "thrift.protocol.TBase",
            "thrift.protocol.TBinaryProtocol",
            "thrift.protocol.TCompactProtocol",
            "thrift.protocol.TJSONProtocol",
            "thrift.protocol.TMultiplexedProtocol",
            "thrift.protocol.TProtocol",
            "thrift.protocol.TProtocolDecorator",
            "thrift.server",
            "thrift.server.THttpServer",
            "thrift.server.TNonblockingServer",
            "thrift.server.TProcessPoolServer",
            "thrift.server.TServer",
            "thrift.transport",
            "thrift.transport.THttpClient",
            "thrift.transport.TSSLSocket",
            "thrift.transport.TSocket",
            "thrift.transport.TTransport",
            "thrift.transport.TTwisted",
            "thrift.transport.TZlibTransport"
        ],
        "version": "0.9.8.10"
    },
    "hypertext": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hypertools": {
        "cmdline": [],
        "modules": [
            "hypertools",
            "hypertools._externals",
            "hypertools._externals.ppca",
            "hypertools._externals.srm",
            "hypertools._shared",
            "hypertools._shared.helpers",
            "hypertools.plot",
            "hypertools.plot.animate",
            "hypertools.plot.plot",
            "hypertools.plot.static",
            "hypertools.tools",
            "hypertools.tools.align",
            "hypertools.tools.cluster",
            "hypertools.tools.describe_pca",
            "hypertools.tools.df2mat",
            "hypertools.tools.load",
            "hypertools.tools.missing_inds",
            "hypertools.tools.normalize",
            "hypertools.tools.procrustes",
            "hypertools.tools.reduce"
        ],
        "version": "0.1.7"
    },
    "hypertrack": {
        "cmdline": [],
        "modules": [
            "hypertrack",
            "hypertrack.exceptions",
            "hypertrack.resource",
            "hypertrack.test",
            "hypertrack.test.helper",
            "hypertrack.test.test_exceptions",
            "hypertrack.test.test_resource",
            "hypertrack.util",
            "hypertrack.version"
        ],
        "version": "1.0.3"
    },
    "hypervisor-admin-tools": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "hyperwallet-sdk": {
        "cmdline": [],
        "modules": [
            "hyperwallet",
            "hyperwallet.api",
            "hyperwallet.config",
            "hyperwallet.exceptions",
            "hyperwallet.tests",
            "hyperwallet.tests.test_api",
            "hyperwallet.tests.test_ssl",
            "hyperwallet.utils",
            "hyperwallet.utils.apiclient"
        ],
        "version": "0.2.0"
    },
    "hyphenate": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "hyphenate-finnish": {
        "cmdline": [],
        "modules": [
            "hyphenate_finnish",
            "hyphenate_finnish.hyphenate_finnish"
        ],
        "version": "1.3.0"
    },
    "hyphenation": {
        "cmdline": [],
        "modules": [
            "hyphenation",
            "hyphenation.core"
        ],
        "version": "2.0"
    },
    "hyphenator": {
        "cmdline": [],
        "modules": [
            "hyphenator"
        ],
        "version": "0.5.1"
    },
    "hyphy": {
        "cmdline": [],
        "modules": [
            "HyPhy"
        ],
        "version": "0.1.3"
    },
    "hyphy-helper": {
        "cmdline": [],
        "modules": [
            "hppy",
            "hppy._hyphyinterface",
            "hppy._hyphymap"
        ],
        "version": "0.9.8"
    },
    "hyphy-python": {
        "cmdline": [],
        "modules": [
            "HyPhy"
        ],
        "version": "0.1.6"
    },
    "hypnoapnswrapper": {
        "cmdline": [],
        "modules": [
            "APNSWrapper"
        ],
        "version": "0.3-7"
    },
    "hypnobox-django": {
        "cmdline": [],
        "modules": [
            "hypnobox",
            "hypnobox.admin",
            "hypnobox.forms",
            "hypnobox.migrations",
            "hypnobox.migrations.0001_initial",
            "hypnobox.migrations.0002_auto_20160909_1835",
            "hypnobox.migrations.0003_auto_20160913_1040",
            "hypnobox.migrations.0004_lead_product_description",
            "hypnobox.migrations.0005_auto_20161121_1735",
            "hypnobox.models",
            "hypnobox.settings",
            "hypnobox.specs",
            "hypnobox.templatetags",
            "hypnobox.templatetags.hypnobox_tags",
            "hypnobox.urls",
            "hypnobox.views"
        ],
        "version": "0.4.1"
    },
    "hypnocube": {
        "cmdline": [],
        "modules": [
            "hypnocube",
            "hypnocube.animations",
            "hypnocube.animations.color_sorting",
            "hypnocube.animations.cube_traversal",
            "hypnocube.animations.random_animation",
            "hypnocube.animations.season_lights",
            "hypnocube.cube_animator",
            "hypnocube.cube_connector",
            "hypnocube.cube_model",
            "hypnocube.demo_runner",
            "hypnocube.example"
        ],
        "version": "0.1.2"
    },
    "hypo": {
        "cmdline": [],
        "modules": [
            "hypo"
        ],
        "version": "0.1.0"
    },
    "hypo-schema": {
        "cmdline": [],
        "modules": [
            "hyposchema",
            "hyposchema.hypo_schema",
            "hyposchema.regex"
        ],
        "version": "0.2.3"
    },
    "hyposchema": {
        "cmdline": [],
        "modules": [
            "hyposchema",
            "hyposchema.hypo_schema",
            "hyposchema.regex"
        ],
        "version": "0.2.3"
    },
    "hypothesis": {
        "cmdline": [],
        "modules": [
            "hypothesis",
            "hypothesis._settings",
            "hypothesis.configuration",
            "hypothesis.control",
            "hypothesis.core",
            "hypothesis.database",
            "hypothesis.errors",
            "hypothesis.executors",
            "hypothesis.extra",
            "hypothesis.extra.datetime",
            "hypothesis.extra.django",
            "hypothesis.extra.django.models",
            "hypothesis.extra.fakefactory",
            "hypothesis.extra.numpy",
            "hypothesis.extra.pytestplugin",
            "hypothesis.internal",
            "hypothesis.internal.charmap",
            "hypothesis.internal.classmap",
            "hypothesis.internal.compat",
            "hypothesis.internal.conjecture",
            "hypothesis.internal.conjecture.data",
            "hypothesis.internal.conjecture.engine",
            "hypothesis.internal.conjecture.minimizer",
            "hypothesis.internal.conjecture.utils",
            "hypothesis.internal.deferredformat",
            "hypothesis.internal.detection",
            "hypothesis.internal.escalation",
            "hypothesis.internal.floats",
            "hypothesis.internal.intervalsets",
            "hypothesis.internal.reflection",
            "hypothesis.reporting",
            "hypothesis.searchstrategy",
            "hypothesis.searchstrategy.collections",
            "hypothesis.searchstrategy.deferred",
            "hypothesis.searchstrategy.fixed",
            "hypothesis.searchstrategy.flatmapped",
            "hypothesis.searchstrategy.misc",
            "hypothesis.searchstrategy.numbers",
            "hypothesis.searchstrategy.recursive",
            "hypothesis.searchstrategy.reprwrapper",
            "hypothesis.searchstrategy.shared",
            "hypothesis.searchstrategy.strategies",
            "hypothesis.searchstrategy.streams",
            "hypothesis.searchstrategy.strings",
            "hypothesis.searchstrategy.wrappers",
            "hypothesis.stateful",
            "hypothesis.statistics",
            "hypothesis.strategies",
            "hypothesis.strategytests",
            "hypothesis.tools",
            "hypothesis.tools.mergedbs",
            "hypothesis.types",
            "hypothesis.utils",
            "hypothesis.utils.conventions",
            "hypothesis.utils.dynamicvariables",
            "hypothesis.vendor",
            "hypothesis.vendor.pretty",
            "hypothesis.version"
        ],
        "version": "3.8.5"
    },
    "hypothesis-datetime": {
        "cmdline": [],
        "modules": [
            "hypothesisdatetime"
        ],
        "version": "2.0.0"
    },
    "hypothesis-django": {
        "cmdline": [],
        "modules": [
            "hypothesisdjango"
        ],
        "version": "2.0.0"
    },
    "hypothesis-fakefactory": {
        "cmdline": [],
        "modules": [
            "hypothesisfakefactory"
        ],
        "version": "2.0.0"
    },
    "hypothesis-numpy": {
        "cmdline": [],
        "modules": [
            "hypothesisnumpy"
        ],
        "version": "2.0.0"
    },
    "hypothesis-protobuf": {
        "cmdline": [],
        "modules": [
            "hypothesis_protobuf",
            "hypothesis_protobuf._version",
            "hypothesis_protobuf.strategies",
            "hypothesis_protobuf.tests"
        ],
        "version": "0.1.0.post1"
    },
    "hypothesis-pytest": {
        "cmdline": [],
        "modules": [
            "hypothesispytest"
        ],
        "version": "0.19.0"
    },
    "hypothesis-regex": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "hypothesislegacysupport": {
        "cmdline": [],
        "modules": [
            "hypothesislegacysupport",
            "hypothesislegacysupport.compat",
            "hypothesislegacysupport.version"
        ],
        "version": "3.4.2"
    },
    "hyppy": {
        "cmdline": [],
        "modules": [
            "hyppy",
            "hyppy.func",
            "hyppy.hapi",
            "hyppy.parse"
        ],
        "version": "0.1.1"
    },
    "hypr": {
        "cmdline": [],
        "modules": [
            "hypr",
            "hypr.app",
            "hypr.config",
            "hypr.converters",
            "hypr.ext",
            "hypr.ext.models",
            "hypr.ext.providers",
            "hypr.globals",
            "hypr.helpers",
            "hypr.helpers.mini_dsl",
            "hypr.models",
            "hypr.models.exc",
            "hypr.models.sqlite",
            "hypr.providers",
            "hypr.providers.crud",
            "hypr.providers.security",
            "hypr.request",
            "hypr.router",
            "hypr.serializers",
            "hypr.serializers.accept",
            "hypr.serializers.json_serializer",
            "hypr.testing",
            "hypr.web_exceptions"
        ],
        "version": "0.8.4"
    },
    "hypr-sqlalchemy": {
        "cmdline": [],
        "modules": [
            "hypr",
            "hypr.sqlalchemy"
        ],
        "version": "0.2.1"
    },
    "hypua2jamo": {
        "cmdline": [],
        "modules": [
            "hypua2jamo",
            "hypua2jamo.composed",
            "hypua2jamo.decomposed"
        ],
        "version": "0.3"
    },
    "hypy": {
        "cmdline": [],
        "modules": [
            "hypy",
            "hypy.copyright",
            "hypy.lib",
            "hypy.test_lib"
        ],
        "version": "0.8.5.1"
    },
    "hyrepl": {
        "cmdline": [
            "hyrepl"
        ],
        "modules": [
            "HyREPL"
        ],
        "version": "0.1.1"
    },
    "hyuki-cvs-graph": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.7"
    },
    "hz-class": {
        "cmdline": [],
        "modules": [
            "hz_class"
        ],
        "version": "1.0.1"
    },
    "hz-nester": {
        "cmdline": [],
        "modules": [
            "hz_nester"
        ],
        "version": "1.0.3"
    },
    "hzc-nester": {
        "cmdline": [],
        "modules": [
            "hzc_nester"
        ],
        "version": "1.3.0"
    },
    "hzf-lib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    }
}