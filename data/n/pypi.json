{
    "n": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "n1": {
        "cmdline": [],
        "modules": [
            "n1"
        ],
        "version": "1.4.1"
    },
    "n123ester": {
        "cmdline": [],
        "modules": [
            "n123ester"
        ],
        "version": "3.1.3"
    },
    "n26": {
        "cmdline": [],
        "modules": [
            "n26",
            "n26.api",
            "n26.cli",
            "n26.config"
        ],
        "version": "0.1.3"
    },
    "n2cw": {
        "cmdline": [],
        "modules": [
            "n2cw",
            "n2cw.aws",
            "n2cw.cli",
            "n2cw.metrics"
        ],
        "version": "0.1.2"
    },
    "n3d": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.4"
    },
    "n8henrie": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "naakh": {
        "cmdline": [],
        "modules": [
            "naakh",
            "naakh.api_client",
            "naakh.apis",
            "naakh.apis.languages_api",
            "naakh.apis.oauth_api",
            "naakh.apis.tones_api",
            "naakh.apis.topics_api",
            "naakh.apis.translate_api",
            "naakh.apis.translatedtext_api",
            "naakh.apis.translation_api",
            "naakh.configuration",
            "naakh.models",
            "naakh.models.access_token_creation_payload",
            "naakh.models.access_token_response_payload",
            "naakh.models.error",
            "naakh.models.language",
            "naakh.models.languages_resource",
            "naakh.models.meta",
            "naakh.models.metadata",
            "naakh.models.naakh_error",
            "naakh.models.simple_translation_request",
            "naakh.models.tone",
            "naakh.models.tones_resource",
            "naakh.models.topic",
            "naakh.models.topics_resource",
            "naakh.models.translated_text",
            "naakh.models.translated_text_update_payload",
            "naakh.models.translation_progress",
            "naakh.models.translation_request",
            "naakh.models.translation_request_creation_payload",
            "naakh.rest"
        ],
        "version": "0.0.4"
    },
    "naarad": {
        "cmdline": [],
        "modules": [
            "naarad",
            "naarad.graphing",
            "naarad.graphing.dygraphs",
            "naarad.graphing.matplotlib_naarad",
            "naarad.graphing.plot_data",
            "naarad.graphing.pygal_naarad",
            "naarad.httpdownload",
            "naarad.metrics",
            "naarad.metrics.cluster_metric",
            "naarad.metrics.gc_metric",
            "naarad.metrics.innotop_metric",
            "naarad.metrics.jmeter_metric",
            "naarad.metrics.linkedin_android_rum_metric",
            "naarad.metrics.metric",
            "naarad.metrics.netstat_metric",
            "naarad.metrics.procinterrupts_metric",
            "naarad.metrics.procmeminfo_metric",
            "naarad.metrics.procvmstat_metric",
            "naarad.metrics.proczoneinfo_metric",
            "naarad.metrics.sar_metric",
            "naarad.metrics.top_metric",
            "naarad.naarad_constants",
            "naarad.naarad_imports",
            "naarad.reporting",
            "naarad.reporting.diff",
            "naarad.reporting.report",
            "naarad.resources",
            "naarad.run_steps",
            "naarad.run_steps.local_cmd",
            "naarad.run_steps.run_step",
            "naarad.sla",
            "naarad.utils"
        ],
        "version": "1.0.16"
    },
    "nabazpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nac": {
        "cmdline": [],
        "modules": [
            "nac",
            "nac.client",
            "nac.config",
            "nac.game",
            "nac.server"
        ],
        "version": "0.1.0"
    },
    "nacculator": {
        "cmdline": [],
        "modules": [
            "nacc",
            "nacc.redcap2nacc",
            "nacc.uds2",
            "nacc.uds2.ivp",
            "nacc.uds2.ivp.forms",
            "nacc.uds3",
            "nacc.uds3.blanks",
            "nacc.uds3.ivp",
            "nacc.uds3.ivp.forms",
            "nacc.uds3.ivp.packet"
        ],
        "version": "0.1.4"
    },
    "nacelle": {
        "cmdline": [],
        "modules": [
            "nacelle",
            "nacelle.app",
            "nacelle.conf",
            "nacelle.conf.default_settings",
            "nacelle.contrib",
            "nacelle.contrib.lockdown",
            "nacelle.contrib.lockdown.decorators",
            "nacelle.contrib.lockdown.dispatcher",
            "nacelle.contrib.lockdown.mixins",
            "nacelle.contrib.lockdown.tests",
            "nacelle.contrib.lockdown.utils",
            "nacelle.contrib.mail",
            "nacelle.contrib.mail.handlers",
            "nacelle.contrib.mail.interface",
            "nacelle.contrib.mail.routes",
            "nacelle.contrib.mail.tests",
            "nacelle.contrib.mail.utils",
            "nacelle.core",
            "nacelle.core.decorators",
            "nacelle.core.dispatcher",
            "nacelle.core.exception_handlers",
            "nacelle.core.routes",
            "nacelle.core.sessions",
            "nacelle.core.sessions.models",
            "nacelle.core.sessions.utils",
            "nacelle.core.template",
            "nacelle.core.template.renderers",
            "nacelle.core.utils",
            "nacelle.core.utils.crypto",
            "nacelle.core.utils.encoder",
            "nacelle.core.utils.exceptions",
            "nacelle.core.utils.i18n",
            "nacelle.core.utils.memoize",
            "nacelle.test",
            "nacelle.test.environ",
            "nacelle.test.runner",
            "nacelle.test.testcases"
        ],
        "version": "0.4.1"
    },
    "nacha": {
        "cmdline": [],
        "modules": [
            "nacha",
            "nacha.packages",
            "nacha.packages.bryl"
        ],
        "version": "0.1.1"
    },
    "nacho": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nacl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "naclautomake": {
        "cmdline": [],
        "modules": [
            "naclautomake",
            "naclautomake.common",
            "naclautomake.define",
            "naclautomake.main",
            "naclautomake.makefile",
            "naclautomake.project",
            "naclautomake.setting",
            "naclautomake.solution"
        ],
        "version": "0.0.1"
    },
    "nada": {
        "cmdline": [],
        "modules": [
            "nada",
            "nada.api",
            "nada.common",
            "nada.database",
            "nada.downloader",
            "nada.menu",
            "nada.player",
            "nada.singleton",
            "nada.ui"
        ],
        "version": "1.0.1"
    },
    "nadamq": {
        "cmdline": [],
        "modules": [
            "nadamq",
            "nadamq.command_proxy"
        ],
        "version": "0.8.post1"
    },
    "nadej": {
        "cmdline": [],
        "modules": [
            "nadej",
            "nadej.htmlout",
            "nadej.nadej",
            "nadej.templates"
        ],
        "version": "0.0.12"
    },
    "nadex": {
        "cmdline": [
            "cancel-all-orders",
            "create-order",
            "get-balance",
            "get-contracts",
            "get-markets",
            "get-orders",
            "get-positions",
            "get-quote",
            "get-timeseries",
            "streamer"
        ],
        "modules": [
            "nadex",
            "nadex.api",
            "nadex.connection",
            "nadex.constants",
            "nadex.daemon",
            "nadex.exceptions",
            "nadex.lightstreamer",
            "nadex.rest_api",
            "nadex.rest_exceptions",
            "nadex.stream_api",
            "nadex.version"
        ],
        "version": "0.0.1"
    },
    "naeutils": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "naf": {
        "cmdline": [
            "naf"
        ],
        "modules": [
            "naf",
            "naf.settings"
        ],
        "version": "0.3.2"
    },
    "naftawayh": {
        "cmdline": [],
        "modules": [
            "naftawayh",
            "naftawayh.affix_const",
            "naftawayh.ar_ctype",
            "naftawayh.ar_stopwords",
            "naftawayh.ar_stowords",
            "naftawayh.arabic_const",
            "naftawayh.create_verbstamp",
            "naftawayh.specialwords",
            "naftawayh.stopwords",
            "naftawayh.verb_dictionary",
            "naftawayh.verb_stamp",
            "naftawayh.wordtag"
        ],
        "version": "0.2"
    },
    "naga": {
        "cmdline": [],
        "modules": [
            "naga",
            "naga.lazy_seq",
            "naga.precompyled",
            "naga.tools",
            "naga.utils"
        ],
        "version": "0.2.6.5"
    },
    "nagaconda": {
        "cmdline": [],
        "modules": [
            "NagAconda",
            "NagAconda.Plugin"
        ],
        "version": "0.2.1"
    },
    "nagalib": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nagaram": {
        "cmdline": [],
        "modules": [
            "nagaram",
            "nagaram.anagrams",
            "nagaram.cmdline",
            "nagaram.scrabble"
        ],
        "version": "0.3.8"
    },
    "nagare": {
        "cmdline": [],
        "modules": [
            "conf",
            "nagare",
            "nagare.admin",
            "nagare.admin.admin_app",
            "nagare.admin.create",
            "nagare.admin.create_rules",
            "nagare.admin.db",
            "nagare.admin.info",
            "nagare.admin.interface",
            "nagare.admin.interface.applications",
            "nagare.admin.interface.info",
            "nagare.admin.main",
            "nagare.admin.reloader",
            "nagare.admin.serve",
            "nagare.admin.serve_module",
            "nagare.admin.shell",
            "nagare.admin.util",
            "nagare.ajax",
            "nagare.callbacks",
            "nagare.comet",
            "nagare.component",
            "nagare.config",
            "nagare.database",
            "nagare.doc",
            "nagare.doc.code_block",
            "nagare.doc.setuplib",
            "nagare.editor",
            "nagare.i18n",
            "nagare.local",
            "nagare.log",
            "nagare.namespaces",
            "nagare.namespaces.common",
            "nagare.namespaces.esi",
            "nagare.namespaces.test",
            "nagare.namespaces.test.test_xhtmlns",
            "nagare.namespaces.test.test_xmlns",
            "nagare.namespaces.test.test_xslns",
            "nagare.namespaces.xhtml",
            "nagare.namespaces.xhtml5",
            "nagare.namespaces.xhtml_base",
            "nagare.namespaces.xml",
            "nagare.namespaces.xsl",
            "nagare.presentation",
            "nagare.publishers",
            "nagare.publishers.common",
            "nagare.publishers.concurrence",
            "nagare.publishers.concurrence.buffered",
            "nagare.publishers.concurrence.publisher",
            "nagare.publishers.concurrence.socket",
            "nagare.publishers.concurrence.wsgi",
            "nagare.publishers.concurrence_publisher",
            "nagare.publishers.eventlet_publisher",
            "nagare.publishers.fapws_publisher",
            "nagare.publishers.fcgi_publisher",
            "nagare.publishers.standalone_publisher",
            "nagare.publishers.syncless_publisher",
            "nagare.publishers.tasklet_local",
            "nagare.pyjs",
            "nagare.security",
            "nagare.security.basic_auth",
            "nagare.security.common",
            "nagare.security.digest_auth",
            "nagare.security.dummy_manager",
            "nagare.security.form_auth",
            "nagare.serializer",
            "nagare.sessions",
            "nagare.sessions.common",
            "nagare.sessions.dummy_sessions",
            "nagare.sessions.lru_dict",
            "nagare.sessions.memcached_sessions",
            "nagare.sessions.memory_sessions",
            "nagare.state",
            "nagare.test",
            "nagare.test.test_database",
            "nagare.test.test_form",
            "nagare.test.test_i18n",
            "nagare.test.test_mvc",
            "nagare.test.test_wsgi",
            "nagare.top",
            "nagare.util",
            "nagare.validator",
            "nagare.var",
            "nagare.wsgi",
            "static"
        ],
        "version": "0.4.1"
    },
    "nagare-jquery": {
        "cmdline": [],
        "modules": [
            "nagare",
            "nagare.contrib",
            "nagare.contrib.jquery",
            "nagare.contrib.jquery.namespaces",
            "nagare.contrib.jquery.namespaces.xhtml5",
            "nagare.contrib.jquery.wsgi"
        ],
        "version": "0.0.2a1"
    },
    "nagare.examples": {
        "cmdline": [],
        "modules": [
            "conf",
            "data",
            "nagare",
            "nagare.examples",
            "nagare.examples.calculator",
            "nagare.examples.chat",
            "nagare.examples.color",
            "nagare.examples.counter",
            "nagare.examples.demo",
            "nagare.examples.form",
            "nagare.examples.gallery",
            "nagare.examples.gallery.gallery",
            "nagare.examples.gallery.gallery1",
            "nagare.examples.gallery.gallery10",
            "nagare.examples.gallery.gallery2",
            "nagare.examples.gallery.gallery3",
            "nagare.examples.gallery.gallery4",
            "nagare.examples.gallery.gallery5",
            "nagare.examples.gallery.gallery6",
            "nagare.examples.gallery.gallery7",
            "nagare.examples.gallery.gallery8",
            "nagare.examples.gallery.gallery9",
            "nagare.examples.gallery.gallerydata",
            "nagare.examples.gallery.gallerydata2",
            "nagare.examples.gallery.gallerydeclarative",
            "nagare.examples.gallery.gallerysqlalchemy",
            "nagare.examples.gallery.thumb",
            "nagare.examples.img",
            "nagare.examples.jewels",
            "nagare.examples.number",
            "nagare.examples.portal",
            "nagare.examples.portal.calculator",
            "nagare.examples.portal.counter",
            "nagare.examples.portal.html",
            "nagare.examples.portal.portal",
            "nagare.examples.portal.source_viewer",
            "nagare.examples.portal.tictactoe",
            "nagare.examples.tictactoe",
            "nagare.examples.widgets",
            "nagare.examples.wiki",
            "nagare.examples.wiki.wiki",
            "nagare.examples.wiki.wiki1",
            "nagare.examples.wiki.wiki10",
            "nagare.examples.wiki.wiki11",
            "nagare.examples.wiki.wiki12",
            "nagare.examples.wiki.wiki13",
            "nagare.examples.wiki.wiki14",
            "nagare.examples.wiki.wiki15",
            "nagare.examples.wiki.wiki16",
            "nagare.examples.wiki.wiki17",
            "nagare.examples.wiki.wiki18",
            "nagare.examples.wiki.wiki2",
            "nagare.examples.wiki.wiki3",
            "nagare.examples.wiki.wiki4",
            "nagare.examples.wiki.wiki5",
            "nagare.examples.wiki.wiki6",
            "nagare.examples.wiki.wiki7",
            "nagare.examples.wiki.wiki8",
            "nagare.examples.wiki.wiki9",
            "nagare.examples.wiki.wikialchemy",
            "nagare.examples.wiki.wikidata",
            "nagare.examples.wiki.wikideclarative",
            "static"
        ],
        "version": "0.3.0"
    },
    "nagare.ide": {
        "cmdline": [],
        "modules": [
            "conf",
            "nagare",
            "nagare.ide",
            "nagare.ide.admin",
            "nagare.ide.app",
            "nagare.ide.bespin_editor",
            "nagare.ide.error",
            "nagare.ide.log",
            "nagare.ide.memory_sessions",
            "nagare.ide.security",
            "nagare.ide.tree",
            "nagare.ide.workspace",
            "static"
        ],
        "version": "0.2.0"
    },
    "nagato": {
        "cmdline": [],
        "modules": [
            "nagato"
        ],
        "version": "0.4.0"
    },
    "nagator": {
        "cmdline": [],
        "modules": [
            "nagator",
            "nagator.core",
            "nagator.usage"
        ],
        "version": "0.1.0"
    },
    "naghni": {
        "cmdline": [
            "naghni"
        ],
        "modules": [
            "naghni",
            "naghni.backend",
            "naghni.backend.dialog",
            "naghni.backend.font",
            "naghni.backend.genericbackend",
            "naghni.backend.locals",
            "naghni.backend.pygamebackend",
            "naghni.backend.surfacepattern",
            "naghni.backend.vectorgraphics",
            "naghni.external",
            "naghni.external.rsvgwrapper",
            "naghni.generalinformation",
            "naghni.level",
            "naghni.object",
            "naghni.object.genericobject",
            "naghni.object.shapes",
            "naghni.object.solids",
            "naghni.object.solidtypes",
            "naghni.statusprinter",
            "naghni.various",
            "naghni.world"
        ],
        "version": "0.1"
    },
    "nagi": {
        "cmdline": [
            "nagi"
        ],
        "modules": [
            "nagi",
            "nagi.bencode"
        ],
        "version": "0.1"
    },
    "nagifo": {
        "cmdline": [],
        "modules": [
            "nagifo",
            "nagifo.nagacknowledge",
            "nagifo.nagifo"
        ],
        "version": "0.2.0"
    },
    "nagii": {
        "cmdline": [],
        "modules": [
            "nagii"
        ],
        "version": "0.1.3"
    },
    "nagios": {
        "cmdline": [],
        "modules": [
            "nagios",
            "nagios.exceptions",
            "nagios.perf",
            "nagios.plugin",
            "nagios.status"
        ],
        "version": "0.0.8"
    },
    "nagios-api": {
        "cmdline": [
            "nagios-api",
            "nagios-cli"
        ],
        "modules": [
            "nagios",
            "nagios.core"
        ],
        "version": "1.2.2"
    },
    "nagios-audit": {
        "cmdline": [],
        "modules": [
            "nagios_audit",
            "nagios_audit.cli",
            "nagios_audit.core",
            "nagios_audit.presentation"
        ],
        "version": "1.0.6"
    },
    "nagios-check-hddtemp": {
        "cmdline": [],
        "modules": [],
        "version": "0.8.2"
    },
    "nagios-check-supervisord": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.1"
    },
    "nagios-cloudwatch-plugin": {
        "cmdline": [
            "check_cloudwatch.py"
        ],
        "modules": [],
        "version": "0.2.6"
    },
    "nagios-elasticsearch": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.4"
    },
    "nagios-filecount-plugin": {
        "cmdline": [
            "check_filecount.py"
        ],
        "modules": [],
        "version": "0.1"
    },
    "nagios-gearman-plugin": {
        "cmdline": [
            "check_gearman.py"
        ],
        "modules": [],
        "version": "0.1"
    },
    "nagios-graphite": {
        "cmdline": [],
        "modules": [
            "nagios_graphite",
            "nagios_graphite.main",
            "nagios_graphite.metadata"
        ],
        "version": "0.5.0"
    },
    "nagios-load-per-core": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "nagios-mesos": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.6"
    },
    "nagios-mesos-service-check": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.0"
    },
    "nagios-notification-google-calendar": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.1"
    },
    "nagios-notification-jabber": {
        "cmdline": [],
        "modules": [],
        "version": "0.8.0"
    },
    "nagios-nsca": {
        "cmdline": [],
        "modules": [
            "nagios",
            "nagios.log"
        ],
        "version": "1.1.1"
    },
    "nagios-nvidia-smi-plugin": {
        "cmdline": [
            "check_nvidiasmi.py"
        ],
        "modules": [],
        "version": "0.4.0"
    },
    "nagios-plugin-elasticsearch": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "nagios-rabbitmq-plugin": {
        "cmdline": [
            "check_rabbitmq.py"
        ],
        "modules": [],
        "version": "0.1"
    },
    "nagios-sentry": {
        "cmdline": [],
        "modules": [
            "nagios_sentry",
            "nagios_sentry.management",
            "nagios_sentry.management.commands",
            "nagios_sentry.management.commands.count_of_groups",
            "nagios_sentry.management.commands.count_of_messages"
        ],
        "version": "0.3.1"
    },
    "nagios-taskserver-plugin": {
        "cmdline": [],
        "modules": [
            "nagios_taskserver_plugin",
            "nagios_taskserver_plugin.cmdline",
            "nagios_taskserver_plugin.commands",
            "nagios_taskserver_plugin.exceptions",
            "nagios_taskserver_plugin.output",
            "nagios_taskserver_plugin.utils"
        ],
        "version": "0.5.3"
    },
    "nagios.responsetime": {
        "cmdline": [],
        "modules": [
            "nagios",
            "nagios.responsetime",
            "nagios.responsetime.check",
            "nagios.responsetime.logfile",
            "nagios.responsetime.tests",
            "nagios.responsetime.tests.test_check",
            "nagios.responsetime.tests.test_logfile",
            "nagios.responsetime.util"
        ],
        "version": "1.0.4"
    },
    "nagios2trac": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.1"
    },
    "nagioscheck": {
        "cmdline": [],
        "modules": [
            "nagioscheck"
        ],
        "version": "0.1.6"
    },
    "nagioscli": {
        "cmdline": [
            "CLI.cfg",
            "function_map.py",
            "ldapAuth.py",
            "ldapVerify.py",
            "nagios.cmd",
            "nagios_cli.log",
            "nagios_cli.py",
            "printf",
            "template.txt"
        ],
        "modules": [],
        "version": "0.7"
    },
    "nagiosctl": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "nagiosharder": {
        "cmdline": [],
        "modules": [
            "nagiosharder",
            "nagiosharder.html",
            "nagiosharder.parse"
        ],
        "version": "0.2.5"
    },
    "nagiosplugin": {
        "cmdline": [],
        "modules": [
            "nagiosplugin",
            "nagiosplugin.check",
            "nagiosplugin.compat",
            "nagiosplugin.context",
            "nagiosplugin.cookie",
            "nagiosplugin.error",
            "nagiosplugin.examples",
            "nagiosplugin.examples.check_haproxy_log",
            "nagiosplugin.examples.check_load",
            "nagiosplugin.examples.check_users",
            "nagiosplugin.examples.check_world",
            "nagiosplugin.logtail",
            "nagiosplugin.metric",
            "nagiosplugin.multiarg",
            "nagiosplugin.output",
            "nagiosplugin.performance",
            "nagiosplugin.platform",
            "nagiosplugin.platform.nt",
            "nagiosplugin.platform.posix",
            "nagiosplugin.range",
            "nagiosplugin.resource",
            "nagiosplugin.result",
            "nagiosplugin.runtime",
            "nagiosplugin.state",
            "nagiosplugin.summary",
            "nagiosplugin.tests",
            "nagiosplugin.tests.test_check",
            "nagiosplugin.tests.test_context",
            "nagiosplugin.tests.test_cookie",
            "nagiosplugin.tests.test_examples",
            "nagiosplugin.tests.test_logtail",
            "nagiosplugin.tests.test_metric",
            "nagiosplugin.tests.test_multiarg",
            "nagiosplugin.tests.test_output",
            "nagiosplugin.tests.test_performance",
            "nagiosplugin.tests.test_platform",
            "nagiosplugin.tests.test_range",
            "nagiosplugin.tests.test_result",
            "nagiosplugin.tests.test_runtime",
            "nagiosplugin.tests.test_state",
            "nagiosplugin.tests.test_summary"
        ],
        "version": "1.2.4"
    },
    "naglib": {
        "cmdline": [],
        "modules": [
            "naglib",
            "naglib.base",
            "naglib.base.a00",
            "naglib.base.a02",
            "naglib.base.c02",
            "naglib.base.c05",
            "naglib.base.c06",
            "naglib.base.c09",
            "naglib.base.d01",
            "naglib.base.d02",
            "naglib.base.d03",
            "naglib.base.d04",
            "naglib.base.d05",
            "naglib.base.d06",
            "naglib.base.e01",
            "naglib.base.e02",
            "naglib.base.e04",
            "naglib.base.e05",
            "naglib.base.f01",
            "naglib.base.f02",
            "naglib.base.f03",
            "naglib.base.f04",
            "naglib.base.f06",
            "naglib.base.f07",
            "naglib.base.f08",
            "naglib.base.f11",
            "naglib.base.f12",
            "naglib.base.f16",
            "naglib.base.g01",
            "naglib.base.g02",
            "naglib.base.g03",
            "naglib.base.g04",
            "naglib.base.g05",
            "naglib.base.g07",
            "naglib.base.g08",
            "naglib.base.g10",
            "naglib.base.g11",
            "naglib.base.g12",
            "naglib.base.g13",
            "naglib.base.h02",
            "naglib.base.h03",
            "naglib.base.m01",
            "naglib.base.s",
            "naglib.base.util",
            "naglib.base.x01",
            "naglib.base.x02",
            "naglib.base.x04",
            "naglib.naglib",
            "tests",
            "tests.test_naglib"
        ],
        "version": "0.1.3"
    },
    "nago": {
        "cmdline": [],
        "modules": [
            "nago",
            "nago.core",
            "nago.extensions",
            "nago.extensions.agent",
            "nago.extensions.checkresults",
            "nago.extensions.facts",
            "nago.extensions.info",
            "nago.extensions.nodes",
            "nago.extensions.plugins",
            "nago.extensions.settings",
            "nago.protocols",
            "nago.protocols.httpserver",
            "nago.settings"
        ],
        "version": "1.7"
    },
    "nagobah": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nagobah-with-server": {
        "cmdline": [],
        "modules": [
            "dagobah",
            "dagobah.backend",
            "dagobah.backend.base",
            "dagobah.backend.mongo",
            "dagobah.core",
            "dagobah.core.components",
            "dagobah.core.core",
            "dagobah.daemon",
            "dagobah.daemon.api",
            "dagobah.daemon.app",
            "dagobah.daemon.auth",
            "dagobah.daemon.daemon",
            "dagobah.daemon.util",
            "dagobah.daemon.views",
            "dagobah.email",
            "dagobah.email.basic",
            "dagobah.email.common",
            "dagobah.email.text",
            "dagobah.functions",
            "dagobah.nagobah"
        ],
        "version": "0.0.3"
    },
    "nagparser": {
        "cmdline": [],
        "modules": [
            "nagparser",
            "nagparser.Client",
            "nagparser.Model",
            "nagparser.Model.Base",
            "nagparser.Model.Host",
            "nagparser.Model.Nag",
            "nagparser.Model.NagCommands",
            "nagparser.Model.NagConfig",
            "nagparser.Model.NagList",
            "nagparser.Model.Service",
            "nagparser.Model.ServiceGroup",
            "nagparser.Services",
            "nagparser.Services.nagfactory",
            "nagparser.Services.nicetime",
            "nagparser.Tests",
            "nagparser.Tests.BaseTests",
            "nagparser.Tests.NagConfigTests",
            "nagparser.Tests.expectedresults",
            "nagparser.Tests.nagfactoryTests"
        ],
        "version": "0.0.31"
    },
    "nagplug": {
        "cmdline": [],
        "modules": [
            "nagplug"
        ],
        "version": "1.1"
    },
    "nagpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nagpyrc": {
        "cmdline": [],
        "modules": [
            "nagpyrc",
            "nagpyrc.nagpyrc"
        ],
        "version": "0.2"
    },
    "nahpackpy": {
        "cmdline": [],
        "modules": [
            "nahpackpy",
            "nahpackpy.compat",
            "nahpackpy.decode",
            "nahpackpy.encode",
            "nahpackpy.error",
            "nahpackpy.ffi"
        ],
        "version": "0.1.0"
    },
    "nahum-debug-utils": {
        "cmdline": [],
        "modules": [
            "debug_utils",
            "debug_utils.debugger"
        ],
        "version": "1.0.5"
    },
    "naiad": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nailbox": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "nailer": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "nailgun": {
        "cmdline": [],
        "modules": [
            "nailgun",
            "nailgun.client",
            "nailgun.config",
            "nailgun.entities",
            "nailgun.entity_fields",
            "nailgun.entity_mixins",
            "nailgun.signals",
            "tests",
            "tests.test_client",
            "tests.test_config",
            "tests.test_entities",
            "tests.test_entity_fields",
            "tests.test_entity_mixins",
            "tests.test_signals"
        ],
        "version": "0.29.0"
    },
    "nailgun-net-check": {
        "cmdline": [],
        "modules": [
            "dhcp_checker",
            "dhcp_checker.api",
            "dhcp_checker.cli",
            "dhcp_checker.commands",
            "dhcp_checker.utils",
            "network_checker",
            "network_checker.api",
            "network_checker.cli",
            "network_checker.config",
            "network_checker.daemon",
            "network_checker.multicast",
            "network_checker.multicast.api",
            "network_checker.net_check",
            "network_checker.net_check.api",
            "network_checker.net_check.utils",
            "network_checker.tests",
            "network_checker.tests.simple",
            "network_checker.tests.test_multicast",
            "network_checker.tests.test_net_check",
            "network_checker.xmlrpc"
        ],
        "version": "8.0.17.dev3869"
    },
    "naima": {
        "cmdline": [],
        "modules": [
            "astropy_helpers",
            "astropy_helpers.commands",
            "astropy_helpers.commands._dummy",
            "astropy_helpers.commands._test_compat",
            "astropy_helpers.commands.build_ext",
            "astropy_helpers.commands.build_py",
            "astropy_helpers.commands.build_sphinx",
            "astropy_helpers.commands.install",
            "astropy_helpers.commands.install_lib",
            "astropy_helpers.commands.register",
            "astropy_helpers.commands.setup_package",
            "astropy_helpers.commands.test",
            "astropy_helpers.compat",
            "astropy_helpers.compat._subprocess_py2",
            "astropy_helpers.compat.subprocess",
            "astropy_helpers.distutils_helpers",
            "astropy_helpers.git_helpers",
            "astropy_helpers.setup_helpers",
            "astropy_helpers.sphinx",
            "astropy_helpers.sphinx.conf",
            "astropy_helpers.sphinx.ext",
            "astropy_helpers.sphinx.ext.astropyautosummary",
            "astropy_helpers.sphinx.ext.autodoc_enhancements",
            "astropy_helpers.sphinx.ext.automodapi",
            "astropy_helpers.sphinx.ext.automodsumm",
            "astropy_helpers.sphinx.ext.changelog_links",
            "astropy_helpers.sphinx.ext.comment_eater",
            "astropy_helpers.sphinx.ext.compiler_unparse",
            "astropy_helpers.sphinx.ext.docscrape",
            "astropy_helpers.sphinx.ext.docscrape_sphinx",
            "astropy_helpers.sphinx.ext.doctest",
            "astropy_helpers.sphinx.ext.edit_on_github",
            "astropy_helpers.sphinx.ext.numpydoc",
            "astropy_helpers.sphinx.ext.phantom_import",
            "astropy_helpers.sphinx.ext.smart_resolver",
            "astropy_helpers.sphinx.ext.tests",
            "astropy_helpers.sphinx.ext.tests.test_autodoc_enhancements",
            "astropy_helpers.sphinx.ext.tests.test_automodapi",
            "astropy_helpers.sphinx.ext.tests.test_automodsumm",
            "astropy_helpers.sphinx.ext.tests.test_docscrape",
            "astropy_helpers.sphinx.ext.tests.test_utils",
            "astropy_helpers.sphinx.ext.tocdepthfix",
            "astropy_helpers.sphinx.ext.traitsdoc",
            "astropy_helpers.sphinx.ext.utils",
            "astropy_helpers.sphinx.setup_package",
            "astropy_helpers.test_helpers",
            "astropy_helpers.tests",
            "astropy_helpers.tests.test_ah_bootstrap",
            "astropy_helpers.tests.test_git_helpers",
            "astropy_helpers.tests.test_setup_helpers",
            "astropy_helpers.tests.test_utils",
            "astropy_helpers.utils",
            "astropy_helpers.version",
            "astropy_helpers.version_helpers",
            "naima",
            "naima._astropy_init",
            "naima.analysis",
            "naima.conftest",
            "naima.core",
            "naima.extern",
            "naima.extern.interruptible_pool",
            "naima.extern.minimize",
            "naima.extern.validator",
            "naima.model_fitter",
            "naima.model_utils",
            "naima.models",
            "naima.plot",
            "naima.radiative",
            "naima.setup_package",
            "naima.sherpa_models",
            "naima.tests",
            "naima.tests.setup_package",
            "naima.tests.test_functionfit",
            "naima.tests.test_interactive",
            "naima.tests.test_models",
            "naima.tests.test_plotting",
            "naima.tests.test_saveread",
            "naima.tests.test_sherpamod",
            "naima.tests.test_utils",
            "naima.utils",
            "naima.version"
        ],
        "version": "0.8"
    },
    "naive": {
        "cmdline": [],
        "modules": [
            "naive"
        ],
        "version": "0.0.3"
    },
    "naive-bayes": {
        "cmdline": [],
        "modules": [
            "naivebayes"
        ],
        "version": "0.1.1"
    },
    "naivebayes": {
        "cmdline": [],
        "modules": [
            "NaiveBayes"
        ],
        "version": "1.0.0"
    },
    "naivebayesclassifier": {
        "cmdline": [],
        "modules": [
            "naiveBayesClassifier",
            "naiveBayesClassifier.ExceptionNotSeen",
            "naiveBayesClassifier.classifier",
            "naiveBayesClassifier.tokenizer",
            "naiveBayesClassifier.trainedData",
            "naiveBayesClassifier.trainer"
        ],
        "version": "0.1.3"
    },
    "naivede": {
        "cmdline": [],
        "modules": [
            "NaiveDE",
            "NaiveDE.base",
            "NaiveDE.faux_fold_change"
        ],
        "version": "1.1.1"
    },
    "naivetcp": {
        "cmdline": [],
        "modules": [
            "naivetcp",
            "naivetcp.client",
            "naivetcp.server"
        ],
        "version": "0.4"
    },
    "naja": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "najdisi-sms": {
        "cmdline": [],
        "modules": [
            "najdisi_sms",
            "najdisi_sms.api",
            "najdisi_sms.cli",
            "najdisi_sms.utils",
            "tests"
        ],
        "version": "1.0.1"
    },
    "nakadi-end2end": {
        "cmdline": [],
        "modules": [
            "end2end",
            "end2end.connectors",
            "end2end.connectors.factory",
            "end2end.connectors.nakadi",
            "end2end.connectors.registry",
            "end2end.main",
            "end2end.metric",
            "end2end.security",
            "end2end.server"
        ],
        "version": "0.9.9"
    },
    "naked": {
        "cmdline": [],
        "modules": [
            "Naked",
            "Naked.app",
            "Naked.commandline",
            "Naked.commands",
            "Naked.commands.args",
            "Naked.commands.build",
            "Naked.commands.classifier",
            "Naked.commands.dist",
            "Naked.commands.help",
            "Naked.commands.locate",
            "Naked.commands.make",
            "Naked.commands.profile",
            "Naked.commands.pyh",
            "Naked.commands.test",
            "Naked.commands.usage",
            "Naked.commands.version",
            "Naked.scratchpad",
            "Naked.settings",
            "Naked.templates",
            "Naked.templates.app_file",
            "Naked.templates.licenses",
            "Naked.templates.manifest_in_file",
            "Naked.templates.profiler_file",
            "Naked.templates.pypush_file",
            "Naked.templates.readme_md_file",
            "Naked.templates.settings_file",
            "Naked.templates.setup_cfg_file",
            "Naked.templates.setup_py_file",
            "Naked.toolshed",
            "Naked.toolshed.benchmarking",
            "Naked.toolshed.c",
            "Naked.toolshed.c.setup",
            "Naked.toolshed.casts",
            "Naked.toolshed.file",
            "Naked.toolshed.ink",
            "Naked.toolshed.iter",
            "Naked.toolshed.network",
            "Naked.toolshed.python",
            "Naked.toolshed.shell",
            "Naked.toolshed.state",
            "Naked.toolshed.system",
            "Naked.toolshed.types"
        ],
        "version": "0.1.31"
    },
    "nakedplanning": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nakedrequests": {
        "cmdline": [
            "NakedRequests"
        ],
        "modules": [],
        "version": "0.0.1"
    },
    "namae": {
        "cmdline": [],
        "modules": [
            "namae",
            "namae.go"
        ],
        "version": "0.1"
    },
    "namalizer": {
        "cmdline": [],
        "modules": [
            "namalizer"
        ],
        "version": "0.1.1"
    },
    "naman": {
        "cmdline": [],
        "modules": [
            "naman",
            "naman.core",
            "naman.core.admin",
            "naman.core.backend",
            "naman.core.management",
            "naman.core.management.commands",
            "naman.core.management.commands.sync_vlans",
            "naman.core.mappings",
            "naman.core.mappings.vlan_actions",
            "naman.core.mappings.vlan_conditions",
            "naman.core.models",
            "naman.core.pypelib",
            "naman.core.pypelib.Condition",
            "naman.core.pypelib.Rule",
            "naman.core.pypelib.RuleTable",
            "naman.core.pypelib.parsing",
            "naman.core.pypelib.parsing.ParseEngine",
            "naman.core.pypelib.parsing.drivers",
            "naman.core.pypelib.parsing.drivers.RegexParser",
            "naman.core.pypelib.persistence",
            "naman.core.pypelib.persistence.PersistenceEngine",
            "naman.core.pypelib.persistence.backends",
            "naman.core.pypelib.persistence.backends.django",
            "naman.core.pypelib.persistence.backends.django.Django",
            "naman.core.pypelib.persistence.backends.django.RuleModel",
            "naman.core.pypelib.persistence.backends.django.RuleTableModel",
            "naman.core.pypelib.persistence.backends.rawfile",
            "naman.core.pypelib.persistence.backends.rawfile.RAWFile",
            "naman.core.pypelib.resolver",
            "naman.core.pypelib.resolver.Resolver",
            "naman.core.pypelib.rules",
            "naman.core.pypelib.utils",
            "naman.core.pypelib.utils.Exceptions",
            "naman.core.serializers",
            "naman.core.tests",
            "naman.core.tools",
            "naman.core.tools.varios",
            "naman.core.tools.views",
            "naman.core.views",
            "naman.web",
            "naman.web.forms",
            "naman.web.settings",
            "naman.web.templatetags",
            "naman.web.templatetags.forms",
            "naman.web.templatetags.iface",
            "naman.web.tests",
            "naman.web.urls",
            "naman.web.views",
            "naman.web.views_conflicting_ip",
            "naman.web.views_iface",
            "naman.web.views_js",
            "naman.web.views_machine",
            "naman.web.views_service",
            "naman.web.views_vlanconfig"
        ],
        "version": "2.2"
    },
    "namara": {
        "cmdline": [],
        "modules": [
            "namara"
        ],
        "version": "0.1.1"
    },
    "namaste": {
        "cmdline": [],
        "modules": [],
        "version": "0.4"
    },
    "name-cgf": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "name-cleaver": {
        "cmdline": [],
        "modules": [
            "name_cleaver",
            "name_cleaver.cleaver",
            "name_cleaver.exception",
            "name_cleaver.names",
            "name_cleaver.nicknames",
            "name_cleaver.test_name_cleaver"
        ],
        "version": "0.6.0"
    },
    "name-me": {
        "cmdline": [],
        "modules": [
            "nameme",
            "nameme.adjectives",
            "nameme.nouns"
        ],
        "version": "0.1.0"
    },
    "name-meaning": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "name-of-thrones": {
        "cmdline": [],
        "modules": [
            "game_of_thrones",
            "game_of_thrones.main"
        ],
        "version": "0.2.7"
    },
    "name-suggestor": {
        "cmdline": [],
        "modules": [
            "name_suggestor",
            "name_suggestor.name",
            "name_suggestor.name_file"
        ],
        "version": "0.2.0"
    },
    "name-tools": {
        "cmdline": [],
        "modules": [
            "name_tools",
            "name_tools.affixes",
            "name_tools.forms",
            "name_tools.match",
            "name_tools.split"
        ],
        "version": "0.1.3"
    },
    "name2time": {
        "cmdline": [
            "name2timestamp"
        ],
        "modules": [
            "name2time",
            "name2time.parsers"
        ],
        "version": "0.2"
    },
    "namealizer": {
        "cmdline": [],
        "modules": [
            "namealizer",
            "namealizer.namealizer",
            "namealizer.test_namealizer"
        ],
        "version": "0.6"
    },
    "namebot": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "namecheap": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "namecheapapi": {
        "cmdline": [],
        "modules": [
            "namecheapapi",
            "namecheapapi.api",
            "namecheapapi.api.commands",
            "namecheapapi.api.domains",
            "namecheapapi.api.exceptions",
            "namecheapapi.api.session"
        ],
        "version": "0.2.1"
    },
    "named-bitfield": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "named-constants": {
        "cmdline": [],
        "modules": [
            "named_constants"
        ],
        "version": "1.0"
    },
    "named-dates": {
        "cmdline": [],
        "modules": [
            "named_dates",
            "named_dates.named_dates",
            "named_dates.work"
        ],
        "version": "0.1"
    },
    "named-decorator": {
        "cmdline": [],
        "modules": [
            "five",
            "named_decorator"
        ],
        "version": "0.1.4"
    },
    "namedatomiclock": {
        "cmdline": [],
        "modules": [
            "NamedAtomicLock"
        ],
        "version": "1.1.0"
    },
    "namedentities": {
        "cmdline": [],
        "modules": [
            "namedentities",
            "namedentities.core",
            "namedentities.version"
        ],
        "version": "1.9.3"
    },
    "namedlist": {
        "cmdline": [],
        "modules": [
            "namedlist"
        ],
        "version": "1.7"
    },
    "namedmaps": {
        "cmdline": [],
        "modules": [
            "namedmaps",
            "namedmaps.editmap",
            "namedmaps.namededitmap",
            "namedmaps.namedmap",
            "namedmaps.utils"
        ],
        "version": "0.1.0"
    },
    "namedmatrix": {
        "cmdline": [],
        "modules": [
            "namedmatrix",
            "namedmatrix.._NamedMatrix",
            "namedmatrix..___init__",
            "namedmatrix.NamedMatrix"
        ],
        "version": "0.95dev"
    },
    "namedout": {
        "cmdline": [],
        "modules": [
            "namedout",
            "namedout.dbglibnames",
            "namedout.test"
        ],
        "version": "1.1"
    },
    "namedparser": {
        "cmdline": [],
        "modules": [
            "namedparser",
            "namedparser._actions",
            "namedparser.parser",
            "namedparser.structures",
            "namedparser.testsuite",
            "namedparser.testsuite.helper",
            "namedparser.testsuite.test_parser",
            "namedparser.testsuite.test_suite_for_myserver"
        ],
        "version": "0.0.3"
    },
    "namedropper": {
        "cmdline": [],
        "modules": [
            "namedropper",
            "namedropper.scripts",
            "namedropper.spotlight",
            "namedropper.util",
            "namedropper.viaf",
            "test",
            "test.fixtures",
            "test.fixtures.hobsbaum_annotations",
            "test.fixtures.ilnnames_annotations",
            "test.test_spotlight",
            "test.test_util"
        ],
        "version": "0.3.1"
    },
    "namedspace": {
        "cmdline": [],
        "modules": [
            "namedspace",
            "tests",
            "tests.test_namedspace_whitebox"
        ],
        "version": "1.2.1"
    },
    "namedstruct": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "namedtuple2": {
        "cmdline": [],
        "modules": [
            "namedtuple2"
        ],
        "version": "1.0"
    },
    "namedtupled": {
        "cmdline": [],
        "modules": [
            "namedtupled",
            "namedtupled.integrations",
            "namedtupled.namedtupled"
        ],
        "version": "0.3.3"
    },
    "nameforbash": {
        "cmdline": [],
        "modules": [
            "nameForBash"
        ],
        "version": "1.0"
    },
    "namegen": {
        "cmdline": [],
        "modules": [
            "namegen",
            "namegen.namegen",
            "namegen.names"
        ],
        "version": "1.0.0"
    },
    "namegenerator": {
        "cmdline": [],
        "modules": [
            "namegenerator",
            "namegenerator.adjetives",
            "namegenerator.adjetives.common",
            "namegenerator.nouns",
            "namegenerator.nouns.science"
        ],
        "version": "1.0"
    },
    "nameko": {
        "cmdline": [],
        "modules": [
            "nameko",
            "nameko.amqp",
            "nameko.cli",
            "nameko.cli.actions",
            "nameko.cli.backdoor",
            "nameko.cli.commands",
            "nameko.cli.main",
            "nameko.cli.run",
            "nameko.cli.shell",
            "nameko.constants",
            "nameko.containers",
            "nameko.contextdata",
            "nameko.dependency_providers",
            "nameko.events",
            "nameko.exceptions",
            "nameko.extensions",
            "nameko.log_helpers",
            "nameko.messaging",
            "nameko.rpc",
            "nameko.runners",
            "nameko.standalone",
            "nameko.standalone.events",
            "nameko.standalone.rpc",
            "nameko.testing",
            "nameko.testing.pytest",
            "nameko.testing.rabbit",
            "nameko.testing.services",
            "nameko.testing.utils",
            "nameko.testing.waiting",
            "nameko.testing.websocket",
            "nameko.timer",
            "nameko.utils",
            "nameko.utils.retry",
            "nameko.web",
            "nameko.web.handlers",
            "nameko.web.server",
            "nameko.web.websocket"
        ],
        "version": "2.6.0"
    },
    "nameko-amqp-retry": {
        "cmdline": [],
        "modules": [
            "nameko_amqp_retry",
            "nameko_amqp_retry.backoff",
            "nameko_amqp_retry.constants",
            "nameko_amqp_retry.decorators",
            "nameko_amqp_retry.events",
            "nameko_amqp_retry.messaging",
            "nameko_amqp_retry.rpc"
        ],
        "version": "0.3.3"
    },
    "nameko-bayeux-client": {
        "cmdline": [],
        "modules": [
            "nameko_bayeux_client",
            "nameko_bayeux_client.channels",
            "nameko_bayeux_client.client",
            "nameko_bayeux_client.constants",
            "nameko_bayeux_client.exceptions"
        ],
        "version": "0.0.1"
    },
    "nameko-cacheback": {
        "cmdline": [],
        "modules": [
            "nameko_cacheback"
        ],
        "version": "0.5.0"
    },
    "nameko-cloudant": {
        "cmdline": [],
        "modules": [
            "nameko_cloudant",
            "nameko_cloudant.database_session"
        ],
        "version": "0.1.7"
    },
    "nameko-django": {
        "cmdline": [],
        "modules": [
            "nameko_django",
            "nameko_django.admin",
            "nameko_django.apps",
            "nameko_django.consumer",
            "nameko_django.events_consumer",
            "nameko_django.management",
            "nameko_django.management.commands",
            "nameko_django.management.commands.nd_consume",
            "nameko_django.migrations",
            "nameko_django.models",
            "nameko_django.rpc_consumer",
            "nameko_django.tests",
            "nameko_django.views"
        ],
        "version": "0.1.3"
    },
    "nameko-logstash": {
        "cmdline": [],
        "modules": [
            "nameko_logstash"
        ],
        "version": "0.4"
    },
    "nameko-neo4j": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "nameko-nova-compat": {
        "cmdline": [],
        "modules": [
            "nameko_nova_compat",
            "nameko_nova_compat.channelhandler",
            "nameko_nova_compat.common",
            "nameko_nova_compat.context",
            "nameko_nova_compat.decorators",
            "nameko_nova_compat.extensions",
            "nameko_nova_compat.kombu_helpers",
            "nameko_nova_compat.nova",
            "nameko_nova_compat.proxy",
            "nameko_nova_compat.responses",
            "nameko_nova_compat.testing"
        ],
        "version": "0.0.2"
    },
    "nameko-objectstorage": {
        "cmdline": [],
        "modules": [
            "nameko_objectstorage",
            "nameko_objectstorage.object_storage"
        ],
        "version": "0.1.3"
    },
    "nameko-opentsdb-py": {
        "cmdline": [],
        "modules": [
            "nameko_opentsdb",
            "nameko_opentsdb.opentsdb_providers"
        ],
        "version": "0.0.1"
    },
    "nameko-query": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nameko-redis": {
        "cmdline": [],
        "modules": [
            "nameko_redis"
        ],
        "version": "1.1.0"
    },
    "nameko-rethinkdb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nameko-sentry": {
        "cmdline": [],
        "modules": [
            "nameko_sentry"
        ],
        "version": "0.0.5"
    },
    "nameko-slack": {
        "cmdline": [],
        "modules": [
            "nameko_slack",
            "nameko_slack.rtm"
        ],
        "version": "0.0.2"
    },
    "nameko-socket-server": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "nameko-sqlalchemy": {
        "cmdline": [],
        "modules": [
            "nameko_sqlalchemy",
            "nameko_sqlalchemy.database_session",
            "nameko_sqlalchemy.pytest_fixtures"
        ],
        "version": "0.1.0"
    },
    "nameko-wamp": {
        "cmdline": [],
        "modules": [
            "nameko_wamp",
            "nameko_wamp.constants",
            "nameko_wamp.extensions",
            "nameko_wamp.extensions.dependencies",
            "nameko_wamp.extensions.entrypoints",
            "nameko_wamp.messages",
            "nameko_wamp.testing",
            "nameko_wamp.testing.utils"
        ],
        "version": "0.1.1"
    },
    "nameko-zipkin": {
        "cmdline": [],
        "modules": [
            "nameko_zipkin",
            "nameko_zipkin.constants",
            "nameko_zipkin.provider",
            "nameko_zipkin.transport"
        ],
        "version": "0.0.1"
    },
    "nameless": {
        "cmdline": [],
        "modules": [
            "nameless"
        ],
        "version": "1.0.0"
    },
    "nameless-minimal": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "namely": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "namemapping": {
        "cmdline": [],
        "modules": [
            "namemapping"
        ],
        "version": "0.1.0.dev1"
    },
    "namemod": {
        "cmdline": [],
        "modules": [
            "mg_nm",
            "mg_nm.actions",
            "mg_nm.actions.actions",
            "mg_nm.actions.events",
            "mg_nm.args",
            "mg_nm.args.appargs",
            "mg_nm.exceptions",
            "mg_nm.exceptions.exceptions",
            "mg_nm.processors",
            "mg_nm.processors.processors",
            "mg_nm.registry",
            "namemod"
        ],
        "version": "0.1.1"
    },
    "nameparser": {
        "cmdline": [],
        "modules": [
            "nameparser",
            "nameparser.config",
            "nameparser.config.capitalization",
            "nameparser.config.conjunctions",
            "nameparser.config.prefixes",
            "nameparser.config.regexes",
            "nameparser.config.suffixes",
            "nameparser.config.titles",
            "nameparser.parser",
            "nameparser.util"
        ],
        "version": "0.5.2"
    },
    "nameparts": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.8"
    },
    "names": {
        "cmdline": [],
        "modules": [
            "names",
            "names.main"
        ],
        "version": "0.3.0"
    },
    "namesake": {
        "cmdline": [],
        "modules": [
            "namesake"
        ],
        "version": "0.1"
    },
    "namesilo": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "namespace": {
        "cmdline": [],
        "modules": [
            "namespace"
        ],
        "version": "0.0.1"
    },
    "namespaces": {
        "cmdline": [],
        "modules": [
            "namespaces",
            "namespaces.frozennamespace",
            "namespaces.namespace",
            "namespaces.utils"
        ],
        "version": "4.2.0"
    },
    "namespacetrie": {
        "cmdline": [],
        "modules": [
            "namespacetrie",
            "namespacetrie.nstrie",
            "tests",
            "tests.nstrie_test"
        ],
        "version": "0.1"
    },
    "namesparser": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "namestand": {
        "cmdline": [],
        "modules": [
            "namestand",
            "namestand.converters",
            "namestand.patterns",
            "namestand.utils"
        ],
        "version": "0.1.0"
    },
    "namestyle": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0.1"
    },
    "namesync": {
        "cmdline": [],
        "modules": [
            "namesync",
            "namesync.backends",
            "namesync.backends.base",
            "namesync.backends.cloudflare",
            "namesync.config",
            "namesync.exceptions",
            "namesync.main",
            "namesync.packages",
            "namesync.packages.six",
            "namesync.records"
        ],
        "version": "0.4"
    },
    "namethatcolor": {
        "cmdline": [
            "NameThatColor.py"
        ],
        "modules": [
            "namethatcolor",
            "namethatcolor.NameThatColor"
        ],
        "version": "1.0.3"
    },
    "nametrans": {
        "cmdline": [],
        "modules": [
            "nametrans",
            "nametrans.callbacks",
            "nametrans.digitstring",
            "nametrans.filepathtrans",
            "nametrans.fs",
            "nametrans.io",
            "nametrans.main",
            "nametrans.nametransformer"
        ],
        "version": "0.2.4"
    },
    "naming": {
        "cmdline": [],
        "modules": [
            "naming",
            "naming.base"
        ],
        "version": "0.1.3"
    },
    "nams": {
        "cmdline": [],
        "modules": [
            "bin",
            "bin.tester_2mols",
            "bin.tester_chirality",
            "bin.tester_doubleb_e_z",
            "bin.tester_nams",
            "nams",
            "nams.chirality",
            "nams.doubleb_e_z",
            "nams.heuristic",
            "nams.nams"
        ],
        "version": "0.9.2"
    },
    "namu-wiki-extractor": {
        "cmdline": [],
        "modules": [
            "namuwiki",
            "namuwiki._syntax",
            "namuwiki.extractor"
        ],
        "version": "0.2.1"
    },
    "nana": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.6"
    },
    "nanester": {
        "cmdline": [],
        "modules": [
            "nanester"
        ],
        "version": "1.3.0"
    },
    "nanfengyouyi-nester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nani": {
        "cmdline": [],
        "modules": [
            "nani"
        ],
        "version": "0.2.0"
    },
    "nannou": {
        "cmdline": [],
        "modules": [
            "nannou"
        ],
        "version": "0.7.1"
    },
    "nano": {
        "cmdline": [],
        "modules": [
            "nano",
            "nano.activation",
            "nano.activation.admin",
            "nano.activation.apps",
            "nano.activation.forms",
            "nano.activation.models",
            "nano.activation.signals",
            "nano.activation.tests",
            "nano.activation.urls",
            "nano.activation.views",
            "nano.badge",
            "nano.badge.admin",
            "nano.badge.apps",
            "nano.badge.models",
            "nano.badge.templatetags",
            "nano.badge.templatetags.badge_tags",
            "nano.badge.tests",
            "nano.badge.urls",
            "nano.badge.views",
            "nano.blog",
            "nano.blog.admin",
            "nano.blog.apps",
            "nano.blog.models",
            "nano.blog.settings",
            "nano.blog.tests",
            "nano.blog.tools",
            "nano.blog.urls",
            "nano.blog.views",
            "nano.chunk",
            "nano.chunk.admin",
            "nano.chunk.apps",
            "nano.chunk.loader",
            "nano.chunk.loaders",
            "nano.chunk.models",
            "nano.chunk.tests",
            "nano.comments",
            "nano.comments.admin",
            "nano.comments.apps",
            "nano.comments.forms",
            "nano.comments.models",
            "nano.comments.templatetags",
            "nano.comments.templatetags.comments_tags",
            "nano.comments.tests",
            "nano.comments.urls",
            "nano.comments.views",
            "nano.countries",
            "nano.countries.admin",
            "nano.countries.apps",
            "nano.countries.models",
            "nano.countries.tests",
            "nano.faq",
            "nano.faq.admin",
            "nano.faq.apps",
            "nano.faq.models",
            "nano.faq.tests",
            "nano.faq.urls",
            "nano.faq.views",
            "nano.link",
            "nano.link.admin",
            "nano.link.apps",
            "nano.link.models",
            "nano.link.tests",
            "nano.mark",
            "nano.mark.admin",
            "nano.mark.apps",
            "nano.mark.managers",
            "nano.mark.models",
            "nano.mark.templatetags",
            "nano.mark.templatetags.nano_mark_tags",
            "nano.mark.tests",
            "nano.mark.urls",
            "nano.mark.views",
            "nano.privmsg",
            "nano.privmsg.admin",
            "nano.privmsg.apps",
            "nano.privmsg.forms",
            "nano.privmsg.models",
            "nano.privmsg.tests",
            "nano.privmsg.urls",
            "nano.privmsg.views",
            "nano.tests",
            "nano.tests.settings",
            "nano.tools",
            "nano.tools.apps",
            "nano.tools.middleware",
            "nano.tools.models",
            "nano.tools.templatetags",
            "nano.tools.templatetags.nano_tags",
            "nano.tools.tests",
            "nano.user",
            "nano.user.apps",
            "nano.user.forms",
            "nano.user.tests",
            "nano.user.urls",
            "nano.user.views"
        ],
        "version": "1.0-alpha3"
    },
    "nano-assault": {
        "cmdline": [],
        "modules": [
            "nanoassault",
            "nanoassault.actor",
            "nanoassault.animation",
            "nanoassault.animations",
            "nanoassault.bullet",
            "nanoassault.bullets",
            "nanoassault.collectible",
            "nanoassault.collectibles",
            "nanoassault.constants",
            "nanoassault.dungeon",
            "nanoassault.enemies",
            "nanoassault.enemy",
            "nanoassault.gameobject",
            "nanoassault.level",
            "nanoassault.levels",
            "nanoassault.player",
            "nanoassault.run_dungeon",
            "nanoassault.run_level",
            "nanoassault.wall"
        ],
        "version": "1.0"
    },
    "nano-restore": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nanoca": {
        "cmdline": [
            "nanoca"
        ],
        "modules": [
            "nanoca"
        ],
        "version": "0.9"
    },
    "nanocap": {
        "cmdline": [
            "nanocap"
        ],
        "modules": [
            "nanocap",
            "nanocap.clib",
            "nanocap.clib.clib_interface",
            "nanocap.core",
            "nanocap.core.calculateschlegel",
            "nanocap.core.config",
            "nanocap.core.constructdual",
            "nanocap.core.forcefield",
            "nanocap.core.globals",
            "nanocap.core.input",
            "nanocap.core.minimasearch",
            "nanocap.core.minimisation",
            "nanocap.core.output",
            "nanocap.core.points",
            "nanocap.core.ringcalculator",
            "nanocap.core.structuredata",
            "nanocap.core.structurelog",
            "nanocap.core.triangulation",
            "nanocap.core.util",
            "nanocap.core.version",
            "nanocap.db",
            "nanocap.db.database",
            "nanocap.ext",
            "nanocap.ext.edip",
            "nanocap.ext.edip.interface",
            "nanocap.gui",
            "nanocap.gui.aboutwindow",
            "nanocap.gui.bottomdock",
            "nanocap.gui.common",
            "nanocap.gui.dbviewer",
            "nanocap.gui.dock",
            "nanocap.gui.exportstructurewindow",
            "nanocap.gui.forms",
            "nanocap.gui.frozencoltablewidget",
            "nanocap.gui.gui",
            "nanocap.gui.helpwindow",
            "nanocap.gui.listitemdelegate",
            "nanocap.gui.loadfromfilewindow",
            "nanocap.gui.mainwindow",
            "nanocap.gui.menubar",
            "nanocap.gui.minimiserinputoptions",
            "nanocap.gui.preferenceswindow",
            "nanocap.gui.progresswidget",
            "nanocap.gui.renderwindow",
            "nanocap.gui.renderwindow.QVTKRenderWindowInteractor",
            "nanocap.gui.renderwindow.saveimageoptionswindow",
            "nanocap.gui.renderwindow.saveimagerotationoptionswindow",
            "nanocap.gui.renderwindow.vtkqtframe",
            "nanocap.gui.settings",
            "nanocap.gui.singlestructuregenwindow",
            "nanocap.gui.structuregenwindow",
            "nanocap.gui.structureinputoptions",
            "nanocap.gui.structurelist",
            "nanocap.gui.structureoptionswindow",
            "nanocap.gui.structuretable",
            "nanocap.gui.tablebuttondelegate",
            "nanocap.gui.threadmanager",
            "nanocap.gui.toolbar",
            "nanocap.gui.widgets",
            "nanocap.help",
            "nanocap.help.docs",
            "nanocap.main",
            "nanocap.rendering",
            "nanocap.rendering.bonds",
            "nanocap.rendering.defaults",
            "nanocap.rendering.pointset",
            "nanocap.rendering.polygon",
            "nanocap.rendering.renderwidgets",
            "nanocap.rendering.structureactors",
            "nanocap.rendering.vtkqtrenderwidgets",
            "nanocap.resources",
            "nanocap.resources.Resources",
            "nanocap.structures",
            "nanocap.structures.cap",
            "nanocap.structures.cappednanotube",
            "nanocap.structures.fullerene",
            "nanocap.structures.nanotube",
            "nanocap.structures.onion",
            "nanocap.structures.structure"
        ],
        "version": "1.0b15"
    },
    "nanodb": {
        "cmdline": [],
        "modules": [
            "client",
            "client.cli",
            "client.commandparser",
            "server",
            "server.interface",
            "server.loader",
            "server.nanocube",
            "server.node",
            "server.querybuilder",
            "server.serializer",
            "server.server",
            "server.timeserietable"
        ],
        "version": "0.4.3"
    },
    "nanodb-driver": {
        "cmdline": [],
        "modules": [
            "nanodb_driver",
            "nanodb_driver.driver"
        ],
        "version": "0.0.3"
    },
    "nanodlna": {
        "cmdline": [],
        "modules": [
            "nanodlna",
            "nanodlna.cli",
            "nanodlna.devices",
            "nanodlna.dlna",
            "nanodlna.streaming"
        ],
        "version": "0.1.5"
    },
    "nanogen": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "nanohttp": {
        "cmdline": [],
        "modules": [
            "nanohttp",
            "nanohttp.application",
            "nanohttp.cli",
            "nanohttp.configuration",
            "nanohttp.constants",
            "nanohttp.contexts",
            "nanohttp.controllers",
            "nanohttp.cookies",
            "nanohttp.decorators",
            "nanohttp.exceptions",
            "nanohttp.helpers",
            "nanohttp.tests",
            "nanohttp.tests.helpers",
            "nanohttp.tests.stuff",
            "nanohttp.tests.stuff.module_for_test_bootstrapping",
            "nanohttp.tests.stuff.package_for_test_bootstrapping",
            "nanohttp.tests.test_bootstrap",
            "nanohttp.tests.test_context",
            "nanohttp.tests.test_cookie",
            "nanohttp.tests.test_dispatcher",
            "nanohttp.tests.test_exceptions",
            "nanohttp.tests.test_forms",
            "nanohttp.tests.test_hooks",
            "nanohttp.tests.test_http_headers",
            "nanohttp.tests.test_json",
            "nanohttp.tests.test_main",
            "nanohttp.tests.test_query_string",
            "nanohttp.tests.test_quickstart",
            "nanohttp.tests.test_redirect",
            "nanohttp.tests.test_static_file"
        ],
        "version": "0.7.1"
    },
    "nanolp": {
        "cmdline": [
            "lprc",
            "nlp.py"
        ],
        "modules": [
            "nanolp",
            "nanolp.commands",
            "nanolp.core",
            "nanolp.handlers",
            "nanolp.lp",
            "nanolp.lpcompat3",
            "nanolp.parsers",
            "nanolp.tests",
            "nanolp.utils"
        ],
        "version": "1.0i"
    },
    "nanomongo": {
        "cmdline": [],
        "modules": [
            "nanomongo",
            "nanomongo.document",
            "nanomongo.errors",
            "nanomongo.field",
            "nanomongo.util"
        ],
        "version": "0.4.1"
    },
    "nanomsg": {
        "cmdline": [],
        "modules": [
            "_nanomsg_ctypes",
            "nanomsg",
            "nanomsg.version",
            "nanomsg.wrapper",
            "nanomsg_wrappers"
        ],
        "version": "1.0"
    },
    "nanonispy": {
        "cmdline": [],
        "modules": [
            "nanonispy",
            "nanonispy.read",
            "nanonispy.tests",
            "nanonispy.tests.test_read"
        ],
        "version": "1.0.4"
    },
    "nanopb-helpers": {
        "cmdline": [],
        "modules": [
            "nanopb_helpers",
            "nanopb_helpers.bin"
        ],
        "version": "0.4.post1"
    },
    "nanoplayboard": {
        "cmdline": [],
        "modules": [
            "nanoplayboard",
            "nanoplayboard.nano_constants",
            "nanoplayboard.nano_pymata_core",
            "nanoplayboard.nanoplayboard"
        ],
        "version": "0.0.1"
    },
    "nanoraw": {
        "cmdline": [],
        "modules": [
            "nanoraw",
            "nanoraw.analyze_coverage",
            "nanoraw.correct_raw",
            "nanoraw.nanoraw_helper",
            "nanoraw.option_parsers",
            "nanoraw.plot_commands"
        ],
        "version": "0.3.1"
    },
    "nanorm": {
        "cmdline": [],
        "modules": [
            "nanorm",
            "nanorm_test"
        ],
        "version": "1.8.5"
    },
    "nanoscope": {
        "cmdline": [],
        "modules": [
            "nanoscope",
            "nanoscope.error",
            "nanoscope.image",
            "nanoscope.nanoscope",
            "nanoscope.parameter"
        ],
        "version": "0.12.0"
    },
    "nanoservice": {
        "cmdline": [],
        "modules": [
            "nanoservice",
            "nanoservice.config",
            "nanoservice.core",
            "nanoservice.crypto",
            "nanoservice.encoder",
            "nanoservice.error",
            "nanoservice.pubsub",
            "nanoservice.reqrep"
        ],
        "version": "0.7.2"
    },
    "nanosim-h": {
        "cmdline": [],
        "modules": [
            "nanosimh",
            "nanosimh.besthit_to_histogram",
            "nanosimh.get_besthit",
            "nanosimh.head_align_tail_dist",
            "nanosimh.misc",
            "nanosimh.mixed_models",
            "nanosimh.simulate",
            "nanosimh.train",
            "nanosimh.version"
        ],
        "version": "1.1.0.3"
    },
    "nanosimpy": {
        "cmdline": [],
        "modules": [
            "nanosimpy",
            "nanosimpy.correlation_methods",
            "nanosimpy.equations_to_fit",
            "nanosimpy.extra_fn",
            "nanosimpy.input_and_output",
            "nanosimpy.setup",
            "nanosimpy.simulation_methods"
        ],
        "version": "0.0.1"
    },
    "nanosite": {
        "cmdline": [],
        "modules": [
            "nanosite",
            "nanosite.build",
            "nanosite.nanosite_tests",
            "nanosite.packages",
            "nanosite.server",
            "nanosite.templates",
            "nanosite.util"
        ],
        "version": "0.1.10"
    },
    "nanosphere": {
        "cmdline": [],
        "modules": [
            "nanosphere",
            "nanosphere.cli",
            "nanosphere.service",
            "nanosphere.service.auth",
            "nanosphere.service.push",
            "nanosphere.service.sms",
            "nanosphere.util",
            "tests",
            "tests.test_nanosphere"
        ],
        "version": "0.1.0"
    },
    "nanostream": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "nanote": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.4"
    },
    "nanotest": {
        "cmdline": [
            "nanotest-py"
        ],
        "modules": [
            "nanotest",
            "nanotest.core",
            "nanotest.injection"
        ],
        "version": "2.1.0"
    },
    "nanotime": {
        "cmdline": [],
        "modules": [
            "nanotime"
        ],
        "version": "0.5.2"
    },
    "nanotube": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nanoweb": {
        "cmdline": [],
        "modules": [
            "nanoweb"
        ],
        "version": "1.0"
    },
    "nanpy": {
        "cmdline": [],
        "modules": [
            "nanpy",
            "nanpy.TLC5947",
            "nanpy.ad9850",
            "nanpy.arduinoapi",
            "nanpy.arduinoboard",
            "nanpy.arduinocore",
            "nanpy.arduinopin",
            "nanpy.arduinotree",
            "nanpy.bmp180",
            "nanpy.capacitivesensor",
            "nanpy.classinfo",
            "nanpy.counter",
            "nanpy.dallastemperature",
            "nanpy.define",
            "nanpy.dht",
            "nanpy.eeprom",
            "nanpy.examples",
            "nanpy.examples.blink",
            "nanpy.examples.blink_2boards",
            "nanpy.examples.boottime",
            "nanpy.examples.checkspeed",
            "nanpy.examples.clock",
            "nanpy.examples.counterdemo",
            "nanpy.examples.dallastemperature",
            "nanpy.examples.dds",
            "nanpy.examples.dht",
            "nanpy.examples.dump",
            "nanpy.examples.eepromread",
            "nanpy.examples.highfreqpwm",
            "nanpy.examples.i2c_scanner",
            "nanpy.examples.i2c_send",
            "nanpy.examples.lcd_autoscroll",
            "nanpy.examples.lcd_createchar",
            "nanpy.examples.lcd_hello",
            "nanpy.examples.melody",
            "nanpy.examples.pressure",
            "nanpy.examples.ramdump",
            "nanpy.examples.reset",
            "nanpy.examples.servo",
            "nanpy.examples.stepper",
            "nanpy.fwinfo",
            "nanpy.i2c",
            "nanpy.lcd",
            "nanpy.lcd_i2c",
            "nanpy.memo",
            "nanpy.mock",
            "nanpy.mock.mockconnection",
            "nanpy.mock.mockeeprom",
            "nanpy.mock.mockinfo",
            "nanpy.mock.mockobject",
            "nanpy.mock.mockram",
            "nanpy.mock.mockservo",
            "nanpy.mock.mockstepper",
            "nanpy.nullconnection",
            "nanpy.onewire",
            "nanpy.pwm",
            "nanpy.ram",
            "nanpy.register",
            "nanpy.serialmanager",
            "nanpy.servo",
            "nanpy.shiftout",
            "nanpy.stepper",
            "nanpy.tone",
            "nanpy.vcc",
            "nanpy.watchdog",
            "nanpy.wire",
            "tests",
            "tests.util"
        ],
        "version": "0.9.6"
    },
    "nanshe": {
        "cmdline": [],
        "modules": [
            "nanshe",
            "nanshe._version",
            "nanshe.box",
            "nanshe.box.spams_sandbox",
            "nanshe.converter",
            "nanshe.imp",
            "nanshe.imp.filters",
            "nanshe.imp.filters.masks",
            "nanshe.imp.filters.noise",
            "nanshe.imp.filters.wavelet",
            "nanshe.imp.registration",
            "nanshe.imp.renorm",
            "nanshe.imp.segment",
            "nanshe.io",
            "nanshe.io.hdf5",
            "nanshe.io.hdf5.record",
            "nanshe.io.hdf5.search",
            "nanshe.io.hdf5.serializers",
            "nanshe.io.xjson",
            "nanshe.io.xtiff",
            "nanshe.learner",
            "nanshe.misc",
            "nanshe.misc.neuron_matplotlib_viewer",
            "nanshe.misc.random_dictionary_learning_data",
            "nanshe.registerer",
            "nanshe.syn",
            "nanshe.syn.data",
            "nanshe.util",
            "nanshe.util.iters",
            "nanshe.util.prof",
            "nanshe.util.wrappers",
            "nanshe.util.xglob",
            "nanshe.util.xnumpy"
        ],
        "version": "0.1.0a54"
    },
    "nanstats": {
        "cmdline": [],
        "modules": [
            "nanigans",
            "nanigans.api",
            "nanigans.api.events",
            "nanigans.api.facebook",
            "nanigans.api.multichannel",
            "nanigans.api.publishers",
            "nanigans.auth",
            "nanigans.config",
            "nanigans.models",
            "nanigans.structures",
            "nanigans.tests",
            "nanigans.tests.api_tests",
            "nanigans.tests.models_tests",
            "nanigans.tests.structures_tests",
            "nanigans.tests.utils_tests",
            "nanigans.utils"
        ],
        "version": "0.0.1"
    },
    "nantic-activity": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nantic-party-relationship": {
        "cmdline": [],
        "modules": [
            "trytond.modules.party_relationship",
            "trytond.modules.party_relationship.party",
            "trytond.modules.party_relationship.tests",
            "trytond.modules.party_relationship.tests.test_party_relationship"
        ],
        "version": "3.0.0"
    },
    "nanyetian-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nao": {
        "cmdline": [],
        "modules": [
            "nao",
            "nao._remove_config",
            "nao._yaml",
            "nao.data",
            "nao.logging",
            "nao.od_backport",
            "nao.orm",
            "nao.utils"
        ],
        "version": "0.1.9"
    },
    "naobot": {
        "cmdline": [],
        "modules": [
            "naobot",
            "naobot.agent",
            "naobot.behavior",
            "naobot.kinematics",
            "naobot.sensors",
            "naobot.vision",
            "naobot.vision.detectors",
            "naobot.vision.image",
            "naobot.world_model",
            "naobot.world_model.model",
            "naobot.world_model.objects",
            "tests",
            "tests.test_naobot"
        ],
        "version": "0.1.1"
    },
    "nap": {
        "cmdline": [],
        "modules": [
            "nap",
            "nap.url"
        ],
        "version": "2.0.0"
    },
    "napa": {
        "cmdline": [],
        "modules": [
            "napa",
            "napa.analyze",
            "napa.analyze.aln_mut_pairs",
            "napa.analyze.net_analysis",
            "napa.analyze.phylo_mut_pairs",
            "napa.mutpair",
            "napa.mutpair.aln",
            "napa.mutpair.phylo",
            "napa.net",
            "napa.net.community",
            "napa.net.community_louvain",
            "napa.net.net",
            "napa.phylo",
            "napa.phylo.edge",
            "napa.phylo.tree",
            "napa.run_napa",
            "napa.seq",
            "napa.seq.bioseq",
            "napa.seq.format",
            "napa.seq.parse",
            "napa.utils",
            "napa.utils.config",
            "napa.utils.io",
            "napa.utils.serials"
        ],
        "version": "1.1"
    },
    "napalm": {
        "cmdline": [],
        "modules": [
            "napalm"
        ],
        "version": "1.2.0"
    },
    "napalm-base": {
        "cmdline": [],
        "modules": [
            "napalm_base",
            "napalm_base.base",
            "napalm_base.clitools",
            "napalm_base.clitools.cl_napalm_configure",
            "napalm_base.clitools.cl_napalm_test",
            "napalm_base.clitools.cl_napalm_validate",
            "napalm_base.clitools.helpers",
            "napalm_base.constants",
            "napalm_base.exceptions",
            "napalm_base.helpers",
            "napalm_base.test",
            "napalm_base.test.base",
            "napalm_base.test.conftest",
            "napalm_base.test.double",
            "napalm_base.test.getters",
            "napalm_base.test.helpers",
            "napalm_base.test.models",
            "napalm_base.utils",
            "napalm_base.utils.jinja_filters",
            "napalm_base.utils.py23_compat",
            "napalm_base.utils.string_parsers",
            "napalm_base.validate",
            "test"
        ],
        "version": "0.23.3"
    },
    "napalm-brocade": {
        "cmdline": [],
        "modules": [
            "napalm_brocade",
            "napalm_brocade.brocade",
            "napalm_brocade.utils"
        ],
        "version": "0.2.2"
    },
    "napalm-eos": {
        "cmdline": [],
        "modules": [
            "napalm_eos",
            "napalm_eos.eos",
            "napalm_eos.utils"
        ],
        "version": "0.5.6"
    },
    "napalm-fortios": {
        "cmdline": [],
        "modules": [
            "napalm_fortios",
            "napalm_fortios.fortios"
        ],
        "version": "0.4.0"
    },
    "napalm-ibm": {
        "cmdline": [],
        "modules": [
            "napalm_ibm",
            "napalm_ibm.ibm"
        ],
        "version": "0.1.7"
    },
    "napalm-ios": {
        "cmdline": [],
        "modules": [
            "napalm_ios",
            "napalm_ios.ios"
        ],
        "version": "0.6.2"
    },
    "napalm-iosxr": {
        "cmdline": [],
        "modules": [
            "napalm_iosxr",
            "napalm_iosxr.constants",
            "napalm_iosxr.iosxr",
            "test",
            "test.unit",
            "test.unit.TestIOSXRDriver",
            "test.unit.conftest",
            "test.unit.test_getters"
        ],
        "version": "0.4.8"
    },
    "napalm-junos": {
        "cmdline": [],
        "modules": [
            "napalm_junos",
            "napalm_junos.constants",
            "napalm_junos.junos",
            "napalm_junos.utils",
            "napalm_junos.utils.junos_views"
        ],
        "version": "0.6.6"
    },
    "napalm-logs": {
        "cmdline": [],
        "modules": [
            "napalm_logs",
            "napalm_logs.auth",
            "napalm_logs.base",
            "napalm_logs.config",
            "napalm_logs.device",
            "napalm_logs.exceptions",
            "napalm_logs.listener",
            "napalm_logs.proc",
            "napalm_logs.publisher",
            "napalm_logs.scripts",
            "napalm_logs.scripts.cli",
            "napalm_logs.server",
            "napalm_logs.transport",
            "napalm_logs.transport.base",
            "napalm_logs.transport.cli",
            "napalm_logs.transport.kafka",
            "napalm_logs.transport.log",
            "napalm_logs.transport.zeromq",
            "napalm_logs.utils"
        ],
        "version": "0.0.1b4"
    },
    "napalm-nxos": {
        "cmdline": [],
        "modules": [
            "napalm_nxos",
            "napalm_nxos.nxos",
            "napalm_nxos.utils",
            "test",
            "test.unit",
            "test.unit.TestDriver",
            "test.unit.conftest",
            "test.unit.test_getters"
        ],
        "version": "0.5.2"
    },
    "napalm-panos": {
        "cmdline": [],
        "modules": [
            "napalm_panos",
            "napalm_panos.panos",
            "napalm_panos.utils"
        ],
        "version": "0.4.0"
    },
    "napalm-pluribus": {
        "cmdline": [],
        "modules": [
            "napalm_pluribus",
            "napalm_pluribus.pluribus"
        ],
        "version": "0.5.1"
    },
    "napalm-ros": {
        "cmdline": [],
        "modules": [
            "napalm_ros",
            "napalm_ros.ros",
            "napalm_ros.utils"
        ],
        "version": "0.2.2"
    },
    "napalm-vyos": {
        "cmdline": [],
        "modules": [
            "napalm_vyos",
            "napalm_vyos.utils",
            "napalm_vyos.vyos"
        ],
        "version": "0.1.3"
    },
    "napalm-yang": {
        "cmdline": [],
        "modules": [
            "napalm_yang",
            "napalm_yang.base",
            "napalm_yang.helpers",
            "napalm_yang.jinja_filters",
            "napalm_yang.jinja_filters.ip_filters",
            "napalm_yang.models",
            "napalm_yang.models.openconfig",
            "napalm_yang.models.openconfig.bgp",
            "napalm_yang.models.openconfig.bgp.global_",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.config",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.graceful_restart",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.graceful_restart.config",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.graceful_restart.state",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv4_labeled_unicast",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv4_labeled_unicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv4_labeled_unicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv4_labeled_unicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv4_unicast",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv4_unicast.config",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv4_unicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv4_unicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv4_unicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv4_unicast.state",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv6_labeled_unicast",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv6_labeled_unicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv6_labeled_unicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv6_labeled_unicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv6_unicast",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv6_unicast.config",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv6_unicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv6_unicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv6_unicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.ipv6_unicast.state",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l2vpn_evpn",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l2vpn_evpn.prefix_limit",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l2vpn_evpn.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l2vpn_evpn.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l2vpn_vpls",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l2vpn_vpls.prefix_limit",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l2vpn_vpls.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l2vpn_vpls.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l3vpn_ipv4_multicast",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l3vpn_ipv4_multicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l3vpn_ipv4_multicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l3vpn_ipv4_multicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l3vpn_ipv4_unicast",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l3vpn_ipv4_unicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l3vpn_ipv4_unicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l3vpn_ipv4_unicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l3vpn_ipv6_multicast",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l3vpn_ipv6_multicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l3vpn_ipv6_multicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l3vpn_ipv6_multicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l3vpn_ipv6_unicast",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l3vpn_ipv6_unicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l3vpn_ipv6_unicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.l3vpn_ipv6_unicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.route_selection_options",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.route_selection_options.config",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.route_selection_options.state",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.state",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.use_multiple_paths",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.use_multiple_paths.config",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.use_multiple_paths.ebgp",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.use_multiple_paths.ebgp.config",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.use_multiple_paths.ebgp.state",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.use_multiple_paths.ibgp",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.use_multiple_paths.ibgp.config",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.use_multiple_paths.ibgp.state",
            "napalm_yang.models.openconfig.bgp.global_.afi_safis.afi_safi.use_multiple_paths.state",
            "napalm_yang.models.openconfig.bgp.global_.confederation",
            "napalm_yang.models.openconfig.bgp.global_.confederation.config",
            "napalm_yang.models.openconfig.bgp.global_.confederation.state",
            "napalm_yang.models.openconfig.bgp.global_.config",
            "napalm_yang.models.openconfig.bgp.global_.default_route_distance",
            "napalm_yang.models.openconfig.bgp.global_.default_route_distance.config",
            "napalm_yang.models.openconfig.bgp.global_.default_route_distance.state",
            "napalm_yang.models.openconfig.bgp.global_.dynamic_neighbor_prefixes",
            "napalm_yang.models.openconfig.bgp.global_.dynamic_neighbor_prefixes.dynamic_neighbor_prefix",
            "napalm_yang.models.openconfig.bgp.global_.dynamic_neighbor_prefixes.dynamic_neighbor_prefix.config",
            "napalm_yang.models.openconfig.bgp.global_.dynamic_neighbor_prefixes.dynamic_neighbor_prefix.state",
            "napalm_yang.models.openconfig.bgp.global_.graceful_restart",
            "napalm_yang.models.openconfig.bgp.global_.graceful_restart.config",
            "napalm_yang.models.openconfig.bgp.global_.graceful_restart.state",
            "napalm_yang.models.openconfig.bgp.global_.route_selection_options",
            "napalm_yang.models.openconfig.bgp.global_.route_selection_options.config",
            "napalm_yang.models.openconfig.bgp.global_.route_selection_options.state",
            "napalm_yang.models.openconfig.bgp.global_.state",
            "napalm_yang.models.openconfig.bgp.global_.use_multiple_paths",
            "napalm_yang.models.openconfig.bgp.global_.use_multiple_paths.config",
            "napalm_yang.models.openconfig.bgp.global_.use_multiple_paths.ebgp",
            "napalm_yang.models.openconfig.bgp.global_.use_multiple_paths.ebgp.config",
            "napalm_yang.models.openconfig.bgp.global_.use_multiple_paths.ebgp.state",
            "napalm_yang.models.openconfig.bgp.global_.use_multiple_paths.ibgp",
            "napalm_yang.models.openconfig.bgp.global_.use_multiple_paths.ibgp.config",
            "napalm_yang.models.openconfig.bgp.global_.use_multiple_paths.ibgp.state",
            "napalm_yang.models.openconfig.bgp.global_.use_multiple_paths.state",
            "napalm_yang.models.openconfig.bgp.neighbors",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.add_paths",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.add_paths.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.add_paths.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.apply_policy",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.apply_policy.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.apply_policy.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.graceful_restart",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.graceful_restart.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.graceful_restart.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv4_labeled_unicast",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv4_labeled_unicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv4_labeled_unicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv4_labeled_unicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv4_unicast",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv4_unicast.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv4_unicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv4_unicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv4_unicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv4_unicast.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv6_labeled_unicast",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv6_labeled_unicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv6_labeled_unicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv6_labeled_unicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv6_unicast",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv6_unicast.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv6_unicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv6_unicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv6_unicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.ipv6_unicast.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l2vpn_evpn",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l2vpn_evpn.prefix_limit",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l2vpn_evpn.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l2vpn_evpn.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l2vpn_vpls",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l2vpn_vpls.prefix_limit",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l2vpn_vpls.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l2vpn_vpls.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l3vpn_ipv4_multicast",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l3vpn_ipv4_multicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l3vpn_ipv4_multicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l3vpn_ipv4_multicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l3vpn_ipv4_unicast",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l3vpn_ipv4_unicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l3vpn_ipv4_unicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l3vpn_ipv4_unicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l3vpn_ipv6_multicast",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l3vpn_ipv6_multicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l3vpn_ipv6_multicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l3vpn_ipv6_multicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l3vpn_ipv6_unicast",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l3vpn_ipv6_unicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l3vpn_ipv6_unicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.l3vpn_ipv6_unicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.state.prefixes",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.use_multiple_paths",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.use_multiple_paths.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.use_multiple_paths.ebgp",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.use_multiple_paths.ebgp.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.use_multiple_paths.ebgp.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.afi_safis.afi_safi.use_multiple_paths.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.apply_policy",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.apply_policy.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.apply_policy.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.as_path_options",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.as_path_options.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.as_path_options.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.ebgp_multihop",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.ebgp_multihop.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.ebgp_multihop.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.error_handling",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.error_handling.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.error_handling.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.graceful_restart",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.graceful_restart.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.graceful_restart.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.logging_options",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.logging_options.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.logging_options.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.route_reflector",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.route_reflector.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.route_reflector.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.state.messages",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.state.messages.received",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.state.messages.sent",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.state.queues",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.timers",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.timers.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.timers.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.transport",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.transport.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.transport.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.use_multiple_paths",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.use_multiple_paths.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.use_multiple_paths.ebgp",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.use_multiple_paths.ebgp.config",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.use_multiple_paths.ebgp.state",
            "napalm_yang.models.openconfig.bgp.neighbors.neighbor.use_multiple_paths.state",
            "napalm_yang.models.openconfig.bgp.peer_groups",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.add_paths",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.add_paths.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.add_paths.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.apply_policy",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.apply_policy.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.apply_policy.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.graceful_restart",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.graceful_restart.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.graceful_restart.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv4_labeled_unicast",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv4_labeled_unicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv4_labeled_unicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv4_labeled_unicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv4_unicast",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv4_unicast.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv4_unicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv4_unicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv4_unicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv4_unicast.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv6_labeled_unicast",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv6_labeled_unicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv6_labeled_unicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv6_labeled_unicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv6_unicast",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv6_unicast.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv6_unicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv6_unicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv6_unicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.ipv6_unicast.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l2vpn_evpn",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l2vpn_evpn.prefix_limit",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l2vpn_evpn.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l2vpn_evpn.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l2vpn_vpls",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l2vpn_vpls.prefix_limit",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l2vpn_vpls.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l2vpn_vpls.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l3vpn_ipv4_multicast",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l3vpn_ipv4_multicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l3vpn_ipv4_multicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l3vpn_ipv4_multicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l3vpn_ipv4_unicast",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l3vpn_ipv4_unicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l3vpn_ipv4_unicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l3vpn_ipv4_unicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l3vpn_ipv6_multicast",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l3vpn_ipv6_multicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l3vpn_ipv6_multicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l3vpn_ipv6_multicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l3vpn_ipv6_unicast",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l3vpn_ipv6_unicast.prefix_limit",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l3vpn_ipv6_unicast.prefix_limit.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.l3vpn_ipv6_unicast.prefix_limit.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.route_selection_options",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.route_selection_options.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.route_selection_options.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.use_multiple_paths",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.use_multiple_paths.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.use_multiple_paths.ebgp",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.use_multiple_paths.ebgp.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.use_multiple_paths.ebgp.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.use_multiple_paths.ibgp",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.use_multiple_paths.ibgp.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.use_multiple_paths.ibgp.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.afi_safis.afi_safi.use_multiple_paths.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.apply_policy",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.apply_policy.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.apply_policy.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.as_path_options",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.as_path_options.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.as_path_options.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.ebgp_multihop",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.ebgp_multihop.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.ebgp_multihop.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.error_handling",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.error_handling.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.error_handling.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.graceful_restart",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.graceful_restart.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.graceful_restart.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.logging_options",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.logging_options.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.logging_options.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.route_reflector",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.route_reflector.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.route_reflector.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.timers",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.timers.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.timers.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.transport",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.transport.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.transport.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.use_multiple_paths",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.use_multiple_paths.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.use_multiple_paths.ebgp",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.use_multiple_paths.ebgp.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.use_multiple_paths.ebgp.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.use_multiple_paths.ibgp",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.use_multiple_paths.ibgp.config",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.use_multiple_paths.ibgp.state",
            "napalm_yang.models.openconfig.bgp.peer_groups.peer_group.use_multiple_paths.state",
            "napalm_yang.models.openconfig.components",
            "napalm_yang.models.openconfig.components.component",
            "napalm_yang.models.openconfig.components.component.config",
            "napalm_yang.models.openconfig.components.component.properties",
            "napalm_yang.models.openconfig.components.component.properties.property_",
            "napalm_yang.models.openconfig.components.component.properties.property_.config",
            "napalm_yang.models.openconfig.components.component.properties.property_.state",
            "napalm_yang.models.openconfig.components.component.state",
            "napalm_yang.models.openconfig.components.component.state.temperature",
            "napalm_yang.models.openconfig.components.component.subcomponents",
            "napalm_yang.models.openconfig.components.component.subcomponents.subcomponent",
            "napalm_yang.models.openconfig.components.component.subcomponents.subcomponent.config",
            "napalm_yang.models.openconfig.components.component.subcomponents.subcomponent.state",
            "napalm_yang.models.openconfig.components.component.transceiver",
            "napalm_yang.models.openconfig.components.component.transceiver.config",
            "napalm_yang.models.openconfig.components.component.transceiver.physical_channels",
            "napalm_yang.models.openconfig.components.component.transceiver.physical_channels.channel",
            "napalm_yang.models.openconfig.components.component.transceiver.physical_channels.channel.config",
            "napalm_yang.models.openconfig.components.component.transceiver.physical_channels.channel.state",
            "napalm_yang.models.openconfig.components.component.transceiver.physical_channels.channel.state.input_power",
            "napalm_yang.models.openconfig.components.component.transceiver.physical_channels.channel.state.laser_bias_current",
            "napalm_yang.models.openconfig.components.component.transceiver.physical_channels.channel.state.output_power",
            "napalm_yang.models.openconfig.components.component.transceiver.state",
            "napalm_yang.models.openconfig.interfaces",
            "napalm_yang.models.openconfig.interfaces.interface",
            "napalm_yang.models.openconfig.interfaces.interface.aggregation",
            "napalm_yang.models.openconfig.interfaces.interface.aggregation.config",
            "napalm_yang.models.openconfig.interfaces.interface.aggregation.state",
            "napalm_yang.models.openconfig.interfaces.interface.aggregation.switched_vlan",
            "napalm_yang.models.openconfig.interfaces.interface.aggregation.switched_vlan.config",
            "napalm_yang.models.openconfig.interfaces.interface.aggregation.switched_vlan.state",
            "napalm_yang.models.openconfig.interfaces.interface.config",
            "napalm_yang.models.openconfig.interfaces.interface.ethernet",
            "napalm_yang.models.openconfig.interfaces.interface.ethernet.config",
            "napalm_yang.models.openconfig.interfaces.interface.ethernet.state",
            "napalm_yang.models.openconfig.interfaces.interface.ethernet.state.counters",
            "napalm_yang.models.openconfig.interfaces.interface.ethernet.switched_vlan",
            "napalm_yang.models.openconfig.interfaces.interface.ethernet.switched_vlan.config",
            "napalm_yang.models.openconfig.interfaces.interface.ethernet.switched_vlan.state",
            "napalm_yang.models.openconfig.interfaces.interface.hold_time",
            "napalm_yang.models.openconfig.interfaces.interface.hold_time.config",
            "napalm_yang.models.openconfig.interfaces.interface.hold_time.state",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.config",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.addresses",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.addresses.address",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.addresses.address.config",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.addresses.address.state",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.addresses.address.vrrp",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.addresses.address.vrrp.vrrp_group",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.addresses.address.vrrp.vrrp_group.config",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.addresses.address.vrrp.vrrp_group.interface_tracking",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.addresses.address.vrrp.vrrp_group.interface_tracking.config",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.addresses.address.vrrp.vrrp_group.interface_tracking.state",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.addresses.address.vrrp.vrrp_group.state",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.config",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.neighbors",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.neighbors.neighbor",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.neighbors.neighbor.config",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.neighbors.neighbor.state",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.state",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.unnumbered",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.unnumbered.config",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.unnumbered.interface_ref",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.unnumbered.interface_ref.config",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.unnumbered.interface_ref.state",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv4.unnumbered.state",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.addresses",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.addresses.address",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.addresses.address.config",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.addresses.address.state",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.addresses.address.vrrp",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.addresses.address.vrrp.vrrp_group",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.addresses.address.vrrp.vrrp_group.config",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.addresses.address.vrrp.vrrp_group.interface_tracking",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.addresses.address.vrrp.vrrp_group.interface_tracking.config",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.addresses.address.vrrp.vrrp_group.interface_tracking.state",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.addresses.address.vrrp.vrrp_group.state",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.config",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.neighbors",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.neighbors.neighbor",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.neighbors.neighbor.config",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.neighbors.neighbor.state",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.state",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.unnumbered",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.unnumbered.config",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.unnumbered.interface_ref",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.unnumbered.interface_ref.config",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.unnumbered.interface_ref.state",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.ipv6.unnumbered.state",
            "napalm_yang.models.openconfig.interfaces.interface.routed_vlan.state",
            "napalm_yang.models.openconfig.interfaces.interface.state",
            "napalm_yang.models.openconfig.interfaces.interface.state.counters",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.config",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.addresses",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.addresses.address",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.addresses.address.config",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.addresses.address.state",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.addresses.address.vrrp",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.addresses.address.vrrp.vrrp_group",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.addresses.address.vrrp.vrrp_group.config",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.addresses.address.vrrp.vrrp_group.interface_tracking",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.addresses.address.vrrp.vrrp_group.interface_tracking.config",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.addresses.address.vrrp.vrrp_group.interface_tracking.state",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.addresses.address.vrrp.vrrp_group.state",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.config",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.neighbors",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.neighbors.neighbor",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.neighbors.neighbor.config",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.neighbors.neighbor.state",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.state",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.unnumbered",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.unnumbered.config",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.unnumbered.interface_ref",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.unnumbered.interface_ref.config",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.unnumbered.interface_ref.state",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv4.unnumbered.state",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.addresses",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.addresses.address",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.addresses.address.config",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.addresses.address.state",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.addresses.address.vrrp",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.addresses.address.vrrp.vrrp_group",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.addresses.address.vrrp.vrrp_group.config",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.addresses.address.vrrp.vrrp_group.interface_tracking",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.addresses.address.vrrp.vrrp_group.interface_tracking.config",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.addresses.address.vrrp.vrrp_group.interface_tracking.state",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.addresses.address.vrrp.vrrp_group.state",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.autoconf",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.autoconf.config",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.autoconf.state",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.config",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.neighbors",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.neighbors.neighbor",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.neighbors.neighbor.config",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.neighbors.neighbor.state",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.state",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.unnumbered",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.unnumbered.config",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.unnumbered.interface_ref",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.unnumbered.interface_ref.config",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.unnumbered.interface_ref.state",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.ipv6.unnumbered.state",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.state",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.state.counters",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.vlan",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.vlan.config",
            "napalm_yang.models.openconfig.interfaces.interface.subinterfaces.subinterface.vlan.state",
            "napalm_yang.models.openconfig.vlans",
            "napalm_yang.models.openconfig.vlans.vlan",
            "napalm_yang.models.openconfig.vlans.vlan.config",
            "napalm_yang.models.openconfig.vlans.vlan.members",
            "napalm_yang.models.openconfig.vlans.vlan.members.member",
            "napalm_yang.models.openconfig.vlans.vlan.members.member.interface_ref",
            "napalm_yang.models.openconfig.vlans.vlan.members.member.interface_ref.state",
            "napalm_yang.models.openconfig.vlans.vlan.state",
            "napalm_yang.parser",
            "napalm_yang.parsers",
            "napalm_yang.parsers.base",
            "napalm_yang.parsers.text",
            "napalm_yang.parsers.xml",
            "napalm_yang.translator",
            "napalm_yang.translators",
            "napalm_yang.translators.base",
            "napalm_yang.translators.text",
            "napalm_yang.translators.xml",
            "napalm_yang.utils"
        ],
        "version": "0.0.6"
    },
    "napi": {
        "cmdline": [],
        "modules": [
            "napi",
            "napi.functions",
            "napi.magics",
            "napi.tests",
            "napi.transformers"
        ],
        "version": "0.2.1"
    },
    "napoleon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "napoleon2html": {
        "cmdline": [],
        "modules": [
            "napoleon2html"
        ],
        "version": "0.2.0"
    },
    "napper": {
        "cmdline": [],
        "modules": [
            "napper",
            "napper.apis",
            "napper.errors",
            "napper.request",
            "napper.response",
            "napper.tests",
            "napper.tests.test_json",
            "napper.tests.test_request",
            "napper.tests.test_site",
            "napper.tests.util",
            "napper.util"
        ],
        "version": "0.1a1"
    },
    "nappingcat": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nappy": {
        "cmdline": [],
        "modules": [
            "nappy",
            "nappy.contrib",
            "nappy.contrib.aircraft",
            "nappy.contrib.aircraft.aircraftData",
            "nappy.contrib.aircraft.aircraft_utils",
            "nappy.contrib.aircraft.old_na_to_nc_with_aircraft",
            "nappy.contrib.aircraft.scanFAAM",
            "nappy.na_error",
            "nappy.na_error.na_error",
            "nappy.na_file",
            "nappy.na_file.na_core",
            "nappy.na_file.na_file",
            "nappy.na_file.na_file_1001",
            "nappy.na_file.na_file_1010",
            "nappy.na_file.na_file_1020",
            "nappy.na_file.na_file_2010",
            "nappy.na_file.na_file_2110",
            "nappy.na_file.na_file_2160",
            "nappy.na_file.na_file_2310",
            "nappy.na_file.na_file_3010",
            "nappy.na_file.na_file_4010",
            "nappy.nappy_api",
            "nappy.nc_interface",
            "nappy.nc_interface.cdms_objs_to_na_file",
            "nappy.nc_interface.cdms_to_na",
            "nappy.nc_interface.na_content_collector",
            "nappy.nc_interface.na_to_cdms",
            "nappy.nc_interface.na_to_nc",
            "nappy.nc_interface.nc_to_na",
            "nappy.nc_interface.quick_tests_na_to_nc",
            "nappy.nc_interface.quick_tests_nc_to_na",
            "nappy.script",
            "nappy.script.na2nc",
            "nappy.script.nc2csv",
            "nappy.script.nc2na",
            "nappy.utils",
            "nappy.utils.common_utils",
            "nappy.utils.compare",
            "nappy.utils.compare_na",
            "nappy.utils.ffi_translator",
            "nappy.utils.list_manipulator",
            "nappy.utils.parse_config",
            "nappy.utils.right_strip",
            "nappy.utils.text_parser"
        ],
        "version": "1.1.3"
    },
    "narc-testrun-finished": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.8"
    },
    "narcissus.app": {
        "cmdline": [],
        "modules": [
            "narcissus",
            "narcissus.app",
            "narcissus.app.routes",
            "narcissus.app.widgets",
            "narcissus.app.widgets.templates"
        ],
        "version": "0.9.1"
    },
    "narcissus.common": {
        "cmdline": [],
        "modules": [
            "narcissus",
            "narcissus.common",
            "narcissus.common.amqp_log_sender",
            "narcissus.common.zeromq_log_sender"
        ],
        "version": "0.9.0.1"
    },
    "narcissus.hub": {
        "cmdline": [],
        "modules": [
            "narcissus",
            "narcissus.hub",
            "narcissus.hub.consumers",
            "narcissus.hub.producers"
        ],
        "version": "0.9.0.1"
    },
    "narcolepsy": {
        "cmdline": [],
        "modules": [
            "narcolepsy",
            "narcolepsy.constants",
            "narcolepsy.contexts",
            "narcolepsy.core",
            "narcolepsy.tracers",
            "narcolepsy.utils",
            "narcolepsy.version"
        ],
        "version": "0.0.3"
    },
    "narmer": {
        "cmdline": [],
        "modules": [
            "narmer",
            "narmer.phonetic",
            "narmer.stats"
        ],
        "version": "0.1.1"
    },
    "naruto": {
        "cmdline": [],
        "modules": [
            "naruto"
        ],
        "version": "1.2.0"
    },
    "narval": {
        "cmdline": [],
        "modules": [],
        "version": "3.1.0"
    },
    "narwal": {
        "cmdline": [],
        "modules": [
            "narwal",
            "narwal.const",
            "narwal.exceptions",
            "narwal.reddit",
            "narwal.things",
            "narwal.util"
        ],
        "version": "0.3.2b"
    },
    "narwhal": {
        "cmdline": [],
        "modules": [
            "narwhal",
            "narwhal.conf",
            "narwhal.configure_repose",
            "narwhal.download_repose",
            "narwhal.maven",
            "narwhal.pathutil",
            "narwhal.run_repose",
            "narwhal.valve"
        ],
        "version": "0.7"
    },
    "nasa-api-wrapper": {
        "cmdline": [],
        "modules": [
            "nasa",
            "nasa.api",
            "nasa.apod",
            "nasa.base",
            "nasa.earth",
            "nasa.maas",
            "nasa.patents",
            "nasa.sounds",
            "nasa.validations"
        ],
        "version": "0.1.4"
    },
    "nasdaq-stock-quote": {
        "cmdline": [],
        "modules": [
            "nasdaq_stock_quote"
        ],
        "version": "1.2.1"
    },
    "nash": {
        "cmdline": [],
        "modules": [
            "nash",
            "nash.interpreter",
            "nash.lexer",
            "nash.parser",
            "nash.run",
            "nash.visitor"
        ],
        "version": "0.0.1"
    },
    "nasheri": {
        "cmdline": [],
        "modules": [
            "nasheri"
        ],
        "version": "1.0.2"
    },
    "nashpy": {
        "cmdline": [],
        "modules": [
            "nash",
            "nash.game",
            "nash.version"
        ],
        "version": "0.0.4"
    },
    "nashvegas": {
        "cmdline": [],
        "modules": [
            "nashvegas",
            "nashvegas.admin",
            "nashvegas.exceptions",
            "nashvegas.management",
            "nashvegas.management.commands",
            "nashvegas.management.commands.comparedb",
            "nashvegas.management.commands.syncdb",
            "nashvegas.management.commands.upgradedb",
            "nashvegas.models",
            "nashvegas.utils",
            "tests",
            "tests.fixtures",
            "tests.fixtures.migrations",
            "tests.nashvegas",
            "tests.nashvegas.utils",
            "tests.nashvegas.utils.tests"
        ],
        "version": "0.8b1"
    },
    "nasl-parser": {
        "cmdline": [],
        "modules": [
            "nasl_parser",
            "nasl_parser.fieldtypes"
        ],
        "version": "0.1.7"
    },
    "nasm": {
        "cmdline": [],
        "modules": [
            "nasm",
            "nasm.console",
            "nasm.convert"
        ],
        "version": "0.1.0"
    },
    "nasp": {
        "cmdline": [],
        "modules": [
            "nasp",
            "nasp.configuration_parser",
            "nasp.convert_external_genome",
            "nasp.dispatcher",
            "nasp.find_duplicates",
            "nasp.format_fasta",
            "nasp.matrix_DTO",
            "nasp.nasp",
            "nasp.nasp_objects",
            "nasp.vcf_to_matrix",
            "tests",
            "tests.nasp",
            "tests.nasp.configuration_parser_test",
            "tests.nasp.convert_external_genome_test",
            "tests.nasp.dispatcher_test",
            "tests.nasp.find_duplicates_test",
            "tests.nasp.format_fasta_test",
            "tests.nasp.nasp_objects",
            "tests.nasp.nasp_objects.genome_collection_test",
            "tests.nasp.nasp_objects.genome_meta_test",
            "tests.nasp.nasp_objects.genome_status_test",
            "tests.nasp.nasp_objects.genome_test",
            "tests.testdata",
            "tests.vtm",
            "tests.vtm.analyze_test",
            "tests.vtm.matrix_dto_test",
            "tests.vtm.parse_test",
            "tests.vtm.vtm_test",
            "tests.vtm.write_matrix_test"
        ],
        "version": "1.0.2"
    },
    "nass": {
        "cmdline": [],
        "modules": [
            "nass",
            "nass.api",
            "nass.exceptions",
            "nass.query"
        ],
        "version": "0.1.1"
    },
    "nassl": {
        "cmdline": [],
        "modules": [
            "nassl",
            "nassl.debug_ssl_client",
            "nassl.ocsp_response",
            "nassl.ssl_client"
        ],
        "version": "0.16.3"
    },
    "nasst": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "naster": {
        "cmdline": [],
        "modules": [
            "naster"
        ],
        "version": "1.0.1"
    },
    "naster-2016825": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.1"
    },
    "nastools": {
        "cmdline": [],
        "modules": [
            "nastools",
            "nastools._core",
            "nastools.ict",
            "nastools.nas",
            "nastools.yamler"
        ],
        "version": "0.1.2"
    },
    "nastran-pch-reader": {
        "cmdline": [],
        "modules": [
            "nastran_pch_reader"
        ],
        "version": "1.0.2"
    },
    "nat": {
        "cmdline": [],
        "modules": [
            "nat",
            "nat.annotTextLocalizer",
            "nat.annotation",
            "nat.annotationSearch",
            "nat.buildOntoTree",
            "nat.doi",
            "nat.gitManager",
            "nat.id",
            "nat.modelingParameter",
            "nat.ontoDic",
            "nat.ontoManager",
            "nat.ontoServ",
            "nat.restClient",
            "nat.restServer",
            "nat.scigraph_client",
            "nat.scrapingText",
            "nat.tag",
            "nat.tagUtilities",
            "nat.treeData",
            "nat.utils",
            "nat.zoteroWrap"
        ],
        "version": "0.3.5"
    },
    "nat-pmp": {
        "cmdline": [],
        "modules": [
            "natpmp",
            "natpmp.client"
        ],
        "version": "1.0.1"
    },
    "natasha": {
        "cmdline": [],
        "modules": [
            "natasha",
            "natasha.grammars",
            "natasha.grammars.brand",
            "natasha.grammars.date",
            "natasha.grammars.event",
            "natasha.grammars.location",
            "natasha.grammars.location.grammars",
            "natasha.grammars.location.interpretation",
            "natasha.grammars.location.tests",
            "natasha.grammars.money",
            "natasha.grammars.organisation",
            "natasha.grammars.organisation.grammars",
            "natasha.grammars.organisation.interpretation",
            "natasha.grammars.organisation.tests",
            "natasha.grammars.person",
            "natasha.grammars.person.grammars",
            "natasha.grammars.person.interpretation",
            "natasha.grammars.person.tests",
            "natasha.grammars.pipelines",
            "natasha.tests"
        ],
        "version": "0.7.0"
    },
    "natcap.invest": {
        "cmdline": [],
        "modules": [
            "natcap",
            "natcap.invest",
            "natcap.invest.carbon",
            "natcap.invest.coastal_blue_carbon",
            "natcap.invest.coastal_blue_carbon.coastal_blue_carbon",
            "natcap.invest.coastal_blue_carbon.preprocessor",
            "natcap.invest.coastal_vulnerability",
            "natcap.invest.coastal_vulnerability.coastal_vulnerability",
            "natcap.invest.coastal_vulnerability.coastal_vulnerability_core",
            "natcap.invest.coastal_vulnerability.coastal_vulnerability_post_processing",
            "natcap.invest.crop_production",
            "natcap.invest.crop_production.crop_production",
            "natcap.invest.dbfpy",
            "natcap.invest.dbfpy.dbf",
            "natcap.invest.dbfpy.dbfnew",
            "natcap.invest.dbfpy.fields",
            "natcap.invest.dbfpy.header",
            "natcap.invest.dbfpy.record",
            "natcap.invest.dbfpy.utils",
            "natcap.invest.fileio",
            "natcap.invest.finfish_aquaculture",
            "natcap.invest.finfish_aquaculture.finfish_aquaculture",
            "natcap.invest.finfish_aquaculture.finfish_aquaculture_core",
            "natcap.invest.fisheries",
            "natcap.invest.fisheries.fisheries",
            "natcap.invest.fisheries.fisheries_hst",
            "natcap.invest.fisheries.fisheries_hst_io",
            "natcap.invest.fisheries.fisheries_io",
            "natcap.invest.fisheries.fisheries_model",
            "natcap.invest.forest_carbon_edge_effect",
            "natcap.invest.globio",
            "natcap.invest.habitat_quality",
            "natcap.invest.habitat_risk_assessment",
            "natcap.invest.habitat_risk_assessment.hra",
            "natcap.invest.habitat_risk_assessment.hra_core",
            "natcap.invest.habitat_risk_assessment.hra_preprocessor",
            "natcap.invest.habitat_suitability",
            "natcap.invest.hydropower",
            "natcap.invest.hydropower.hydropower_water_yield",
            "natcap.invest.iui",
            "natcap.invest.iui.base_widgets",
            "natcap.invest.iui.cli",
            "natcap.invest.iui.dbfpy",
            "natcap.invest.iui.dbfpy.dbf",
            "natcap.invest.iui.dbfpy.dbfnew",
            "natcap.invest.iui.dbfpy.fields",
            "natcap.invest.iui.dbfpy.header",
            "natcap.invest.iui.dbfpy.record",
            "natcap.invest.iui.dbfpy.utils",
            "natcap.invest.iui.executor",
            "natcap.invest.iui.fileio",
            "natcap.invest.iui.iui_validator",
            "natcap.invest.iui.modelui",
            "natcap.invest.iui.modelui_test",
            "natcap.invest.iui.registrar",
            "natcap.invest.iui.usage_logger",
            "natcap.invest.marine_water_quality",
            "natcap.invest.marine_water_quality.interpolate_points_to_raster",
            "natcap.invest.marine_water_quality.marine_water_quality_biophysical",
            "natcap.invest.marine_water_quality.marine_water_quality_core",
            "natcap.invest.ndr",
            "natcap.invest.ndr.ndr",
            "natcap.invest.overlap_analysis",
            "natcap.invest.overlap_analysis.overlap_analysis",
            "natcap.invest.overlap_analysis.overlap_analysis_mz",
            "natcap.invest.overlap_analysis.overlap_analysis_mz_core",
            "natcap.invest.overlap_analysis.overlap_core",
            "natcap.invest.pollination",
            "natcap.invest.pollination.pollination",
            "natcap.invest.pollination.pollination_core",
            "natcap.invest.recreation",
            "natcap.invest.recreation.buffered_numpy_disk_map",
            "natcap.invest.recreation.recmodel_client",
            "natcap.invest.recreation.recmodel_server",
            "natcap.invest.recreation.recmodel_workspace_fetcher",
            "natcap.invest.reporting",
            "natcap.invest.reporting.html",
            "natcap.invest.reporting.table_generator",
            "natcap.invest.routing",
            "natcap.invest.routing.delineateit",
            "natcap.invest.routing.routedem",
            "natcap.invest.scenario_gen_proximity",
            "natcap.invest.scenario_generator",
            "natcap.invest.scenario_generator.scenario_generator",
            "natcap.invest.scenic_quality",
            "natcap.invest.scenic_quality.grass_examples",
            "natcap.invest.scenic_quality.los_sextante",
            "natcap.invest.scenic_quality.scenic_quality",
            "natcap.invest.scenic_quality.scenic_quality_core",
            "natcap.invest.scenic_quality.viewshed_grass",
            "natcap.invest.scenic_quality.viewshed_sextante",
            "natcap.invest.sdr",
            "natcap.invest.seasonal_water_yield",
            "natcap.invest.seasonal_water_yield.seasonal_water_yield",
            "natcap.invest.utils",
            "natcap.invest.version",
            "natcap.invest.wave_energy",
            "natcap.invest.wave_energy.wave_energy",
            "natcap.invest.wind_energy",
            "natcap.invest.wind_energy.wind_energy"
        ],
        "version": "3.3.3"
    },
    "natcap.opal": {
        "cmdline": [],
        "modules": [
            "natcap",
            "natcap.opal",
            "natcap.opal.adept_core",
            "natcap.opal.analysis",
            "natcap.opal.i18n",
            "natcap.opal.i18n.msgfmt",
            "natcap.opal.offsets",
            "natcap.opal.preprocessing",
            "natcap.opal.reporting",
            "natcap.opal.static_maps",
            "natcap.opal.tests",
            "natcap.opal.tests.test_offsets",
            "natcap.opal.tests.test_preprocessing",
            "natcap.opal.tests.test_reporting",
            "natcap.opal.tests.test_smoke",
            "natcap.opal.tests.test_static_maps",
            "natcap.opal.tests.test_testing",
            "natcap.opal.tests.test_utils",
            "natcap.opal.utils",
            "natcap.opal.version"
        ],
        "version": "1.1.0"
    },
    "natcap.rios": {
        "cmdline": [],
        "modules": [
            "natcap",
            "natcap.rios",
            "natcap.rios.disk_sort",
            "natcap.rios.porter_core",
            "natcap.rios.rios",
            "natcap.rios.rios_build_scenario_lulc",
            "natcap.rios.rui",
            "natcap.rios.rui.base_widgets",
            "natcap.rios.rui.dbfpy",
            "natcap.rios.rui.dbfpy.dbf",
            "natcap.rios.rui.dbfpy.dbfnew",
            "natcap.rios.rui.dbfpy.fields",
            "natcap.rios.rui.dbfpy.header",
            "natcap.rios.rui.dbfpy.record",
            "natcap.rios.rui.dbfpy.utils",
            "natcap.rios.rui.executor",
            "natcap.rios.rui.fileio",
            "natcap.rios.rui.jsonschema",
            "natcap.rios.rui.jsonschema.validator",
            "natcap.rios.rui.registrar",
            "natcap.rios.rui.rios_ipa",
            "natcap.rios.rui.rios_porter",
            "natcap.rios.rui.rui_validator",
            "natcap.rios.version"
        ],
        "version": "1.1.16"
    },
    "natcap.versioner": {
        "cmdline": [],
        "modules": [
            "natcap",
            "natcap.versioner",
            "natcap.versioner.utils",
            "natcap.versioner.version",
            "natcap.versioner.versioning"
        ],
        "version": "0.5.0"
    },
    "natex-ads-api": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "natgeo-photo": {
        "cmdline": [],
        "modules": [
            "natgeo",
            "natgeo.main"
        ],
        "version": "0.0.1"
    },
    "nathan-nester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "national": {
        "cmdline": [],
        "modules": [
            "national"
        ],
        "version": "0.1.0"
    },
    "nationstates": {
        "cmdline": [],
        "modules": [
            "nationstates",
            "nationstates.NScore",
            "nationstates.NScore.bs4parser",
            "nationstates.NScore.exceptions",
            "nationstates.arguments_obj",
            "nationstates.mixins",
            "nationstates.objects"
        ],
        "version": "1.1.35.66"
    },
    "nativdebugging": {
        "cmdline": [],
        "modules": [
            "src",
            "src.DebuggerBase",
            "src.DumpBase",
            "src.File",
            "src.File.FileReader",
            "src.GUIDisplayBase",
            "src.Interfaces",
            "src.MemReaderBase",
            "src.MemReaderInProcess",
            "src.MemoryDump",
            "src.MemoryDump.MiniDump",
            "src.MemoryDump.Reader",
            "src.ObjectWithStream",
            "src.Patterns",
            "src.Patterns.Finder",
            "src.Patterns.Macho",
            "src.Patterns.PDB",
            "src.Patterns.PE",
            "src.QtWidgets",
            "src.RecursiveFind",
            "src.Utile",
            "src.Win32",
            "src.Win32.BreakPoint",
            "src.Win32.Debugger",
            "src.Win32.DifferentialSearch",
            "src.Win32.DllInfo",
            "src.Win32.ExternalMemoryReader",
            "src.Win32.GetPdb",
            "src.Win32.InjectDll",
            "src.Win32.MemReaderBaseWin",
            "src.Win32.MemoryMap",
            "src.Win32.MemoryReader",
            "src.Win32.ProcessCreateAndAttach",
            "src.Win32.SharedMemReader",
            "src.Win32.Symbols",
            "src.Win32.Win32Structs",
            "src.Win32.Win32Utile",
            "src.Win32.Win64Structs"
        ],
        "version": "2.1"
    },
    "native-instrument-assingment": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nativeconfig": {
        "cmdline": [],
        "modules": [
            "nativeconfig",
            "nativeconfig.configs",
            "nativeconfig.configs.base_config",
            "nativeconfig.configs.json_config",
            "nativeconfig.configs.memory_config",
            "nativeconfig.configs.nsuserdefaults_config",
            "nativeconfig.configs.registry_config",
            "nativeconfig.exceptions",
            "nativeconfig.options",
            "nativeconfig.options.array_option",
            "nativeconfig.options.base_option",
            "nativeconfig.options.boolean_option",
            "nativeconfig.options.dict_option",
            "nativeconfig.options.enum_option",
            "nativeconfig.options.float_option",
            "nativeconfig.options.int_option",
            "nativeconfig.options.path_option",
            "nativeconfig.options.string_option",
            "nativeconfig.version"
        ],
        "version": "3.3.1"
    },
    "nativeimaging": {
        "cmdline": [],
        "modules": [
            "NativeImaging",
            "NativeImaging.api",
            "NativeImaging.backends",
            "NativeImaging.backends.GraphicsMagick",
            "NativeImaging.backends.aware",
            "NativeImaging.backends.aware_cext",
            "NativeImaging.backends.java",
            "NativeImaging.backends.wand_wrapper",
            "NativeImaging.backends.wand_wrapper_cffi"
        ],
        "version": "0.0.7"
    },
    "nativo": {
        "cmdline": [],
        "modules": [
            "nativo",
            "nativo.api_requestor",
            "nativo.auth",
            "nativo.entities",
            "nativo.error",
            "nativo.http_client",
            "nativo.metrics",
            "nativo.resolutions",
            "nativo.resource",
            "nativo.util",
            "nativo.version"
        ],
        "version": "0.1"
    },
    "natnetclient": {
        "cmdline": [],
        "modules": [
            "natnetclient",
            "natnetclient.natnet",
            "natnetclient.tracker",
            "tests",
            "tests.test_imports"
        ],
        "version": "0.8"
    },
    "natrix": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nats": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nats-client": {
        "cmdline": [],
        "modules": [
            "nats",
            "nats.io",
            "nats.io.client",
            "nats.io.errors",
            "nats.io.utils",
            "nats.protocol",
            "nats.protocol.parser"
        ],
        "version": "0.5.0"
    },
    "natsort": {
        "cmdline": [],
        "modules": [
            "natsort",
            "natsort._version",
            "natsort.compat",
            "natsort.compat.fake_fastnumbers",
            "natsort.compat.fastnumbers",
            "natsort.compat.locale",
            "natsort.compat.pathlib",
            "natsort.compat.py23",
            "natsort.natsort",
            "natsort.ns_enum",
            "natsort.unicode_numbers",
            "natsort.utils"
        ],
        "version": "5.0.3"
    },
    "natspec-utils": {
        "cmdline": [],
        "modules": [
            "natspec_utils",
            "natspec_utils.decorators",
            "natspec_utils.exceptions",
            "natspec_utils.match",
            "natspec_utils.stringutils",
            "natspec_utils.types"
        ],
        "version": "1.0.3"
    },
    "natto": {
        "cmdline": [],
        "modules": [
            "natto",
            "natto._css"
        ],
        "version": "0.1.7"
    },
    "natto-py": {
        "cmdline": [],
        "modules": [
            "natto",
            "natto.api",
            "natto.binding",
            "natto.dictionary",
            "natto.environment",
            "natto.mecab",
            "natto.node",
            "natto.option_parse",
            "natto.support",
            "natto.version",
            "tests",
            "tests.test_binding",
            "tests.test_dictionary",
            "tests.test_environment",
            "tests.test_mecab",
            "tests.test_option_parse",
            "tests.test_suite",
            "tests.test_support"
        ],
        "version": "0.8.0"
    },
    "nattraverso": {
        "cmdline": [],
        "modules": [
            "nattraverso",
            "nattraverso.ipdiscover",
            "nattraverso.portmapper",
            "nattraverso.pynupnp",
            "nattraverso.pynupnp.soap",
            "nattraverso.pynupnp.upnp",
            "nattraverso.pynupnp.upnpxml",
            "nattraverso.utils"
        ],
        "version": "0.1.1"
    },
    "natty": {
        "cmdline": [],
        "modules": [
            "natty"
        ],
        "version": "0.2.4"
    },
    "natu": {
        "cmdline": [],
        "modules": [
            "natu",
            "natu._decorators",
            "natu._prefixes",
            "natu._version",
            "natu.config",
            "natu.core",
            "natu.exponents",
            "natu.groups",
            "natu.groups.acceleration",
            "natu.groups.amount",
            "natu.groups.angle",
            "natu.groups.area",
            "natu.groups.charge",
            "natu.groups.conductance",
            "natu.groups.constants",
            "natu.groups.current",
            "natu.groups.dimensionless",
            "natu.groups.energy",
            "natu.groups.force",
            "natu.groups.frequency",
            "natu.groups.length",
            "natu.groups.magnetic_flux",
            "natu.groups.magnetic_flux_density",
            "natu.groups.mass",
            "natu.groups.potential",
            "natu.groups.power",
            "natu.groups.pressure",
            "natu.groups.resistance",
            "natu.groups.si",
            "natu.groups.temperature",
            "natu.groups.time",
            "natu.groups.velocity",
            "natu.groups.volume",
            "natu.math",
            "natu.numpy",
            "natu.units",
            "natu.util",
            "tests",
            "tests.available_imports_test",
            "tests.function_signature_test_case",
            "tests.has_units_test_case",
            "tests.meta_quantity_test_case",
            "tests.test_dimensions",
            "tests.test_quantity_type",
            "tests.test_units",
            "tests.test_utils",
            "tests.unit_array_test_case",
            "tests.unit_manipulation_test_case",
            "tests.unit_scalar_test_case",
            "tests.units_dimensionless_test",
            "tests.units_test_case"
        ],
        "version": "0.1.1"
    },
    "natume": {
        "cmdline": [],
        "modules": [
            "natume",
            "natume.client",
            "natume.compat",
            "natume.connection",
            "natume.parser",
            "natume.testcase",
            "natume.util"
        ],
        "version": "0.1.0"
    },
    "natura": {
        "cmdline": [],
        "modules": [
            "data",
            "data.money",
            "natura",
            "natura.classes",
            "natura.conversion_backends",
            "natura.finder",
            "natura.scanner",
            "natura.utils"
        ],
        "version": "0.0.40"
    },
    "natural": {
        "cmdline": [],
        "modules": [
            "natural",
            "natural.bank",
            "natural.constant",
            "natural.data",
            "natural.date",
            "natural.file",
            "natural.language",
            "natural.number",
            "natural.phone",
            "natural.size",
            "natural.text",
            "natural.util"
        ],
        "version": "0.2.0"
    },
    "natural-keys": {
        "cmdline": [],
        "modules": [
            "natural_keys",
            "natural_keys.models",
            "natural_keys.serializers"
        ],
        "version": "1.2.0"
    },
    "natural-money": {
        "cmdline": [],
        "modules": [
            "data",
            "data.money",
            "natural_money",
            "natural_money.classes",
            "natural_money.conversion_backends",
            "natural_money.finder",
            "natural_money.scanner",
            "natural_money.utils"
        ],
        "version": "0.0.4"
    },
    "natural-time": {
        "cmdline": [],
        "modules": [
            "natural_time",
            "natural_time.dates",
            "natural_time.natural_time",
            "natural_time.natural_time_parser",
            "natural_time.num_parse"
        ],
        "version": "0.3.2"
    },
    "natural3": {
        "cmdline": [],
        "modules": [
            "natural",
            "natural.bank",
            "natural.constant",
            "natural.data",
            "natural.date",
            "natural.file",
            "natural.language",
            "natural.number",
            "natural.phone",
            "natural.size",
            "natural.text",
            "natural.util"
        ],
        "version": "0.1.6"
    },
    "naturalsort": {
        "cmdline": [],
        "modules": [
            "natsort",
            "natsort.tests"
        ],
        "version": "1.5.1"
    },
    "nature": {
        "cmdline": [],
        "modules": [
            "nature"
        ],
        "version": "0.1.0"
    },
    "naturecrawl": {
        "cmdline": [],
        "modules": [
            "naturecrawl"
        ],
        "version": "1.4.0"
    },
    "nau-net": {
        "cmdline": [],
        "modules": [
            "nau",
            "nau.cli",
            "nau.config",
            "nau.network"
        ],
        "version": "1.0.2"
    },
    "nau-orchard": {
        "cmdline": [],
        "modules": [
            "orchard",
            "orchard.cli",
            "orchard.core",
            "orchard.core._branch",
            "orchard.core._configuration_file_reader",
            "orchard.core._generator",
            "orchard.core.tests",
            "orchard.core.tests.test_branch",
            "orchard.core.tests.test_configuration_file_reader",
            "orchard.core.tests.test_generator",
            "orchard.file",
            "orchard.file._config",
            "orchard.file._link",
            "orchard.file._log",
            "orchard.file._yaml_file",
            "orchard.file.tests",
            "orchard.file.tests.test_config",
            "orchard.file.tests.test_link",
            "orchard.module",
            "orchard.module._argument",
            "orchard.module._module",
            "orchard.module.tests",
            "orchard.module.tests.test_argument",
            "orchard.module.tests.test_module",
            "orchard.tests",
            "orchard.tests.test_cli"
        ],
        "version": "0.0.3"
    },
    "naughty": {
        "cmdline": [],
        "modules": [
            "naughty",
            "naughty.subdomains",
            "tests",
            "tests.test_subdomains"
        ],
        "version": "0.0.2"
    },
    "naumov": {
        "cmdline": [],
        "modules": [
            "Naumov"
        ],
        "version": "0.1.0"
    },
    "nautilus": {
        "cmdline": [],
        "modules": [
            "api",
            "api.test_filter",
            "api.test_schema",
            "api.test_util",
            "auth",
            "auth.test_fields",
            "auth.test_util",
            "config",
            "config.test_config",
            "contrib",
            "contrib.graphene_peewee",
            "contrib.graphene_peewee.test_converter",
            "contrib.graphene_peewee.test_objecttype",
            "conventions",
            "conventions.test_action_types",
            "conventions.test_api",
            "conventions.test_auth",
            "conventions.test_models",
            "conventions.test_services",
            "management",
            "management.test_scripts",
            "management.test_util",
            "models",
            "models.test_baseModel",
            "models.test_mixins",
            "models.test_modelSerializer",
            "models.test_utils",
            "nautilus",
            "nautilus.api",
            "nautilus.api.endpoints",
            "nautilus.api.endpoints.requestHandlers",
            "nautilus.api.endpoints.requestHandlers.apiQuery",
            "nautilus.api.endpoints.requestHandlers.graphiql",
            "nautilus.api.endpoints.requestHandlers.graphql",
            "nautilus.api.filter",
            "nautilus.api.schema",
            "nautilus.api.util",
            "nautilus.api.util.arg_string_from_dict",
            "nautilus.api.util.build_native_type_dictionary",
            "nautilus.api.util.convert_typestring_to_api_native",
            "nautilus.api.util.create_model_schema",
            "nautilus.api.util.fields_for_model",
            "nautilus.api.util.generate_api_schema",
            "nautilus.api.util.graph_entity",
            "nautilus.api.util.graphql_mutation_from_summary",
            "nautilus.api.util.graphql_type_from_summary",
            "nautilus.api.util.parse_string",
            "nautilus.api.util.query_for_model",
            "nautilus.api.util.serialize_native_type",
            "nautilus.api.util.summarize_crud_mutation",
            "nautilus.api.util.summarize_mutation",
            "nautilus.api.util.summarize_mutation_io",
            "nautilus.api.util.walk_query",
            "nautilus.auth",
            "nautilus.auth.decorators",
            "nautilus.auth.models",
            "nautilus.auth.models.fields",
            "nautilus.auth.models.fields.password",
            "nautilus.auth.models.mixins",
            "nautilus.auth.models.mixins.hasPassword",
            "nautilus.auth.models.mixins.user",
            "nautilus.auth.models.userPassword",
            "nautilus.auth.primitives",
            "nautilus.auth.primitives.passwordHash",
            "nautilus.auth.util",
            "nautilus.auth.util.generate_session_token",
            "nautilus.auth.util.random_string",
            "nautilus.auth.util.read_session_token",
            "nautilus.auth.util.token_encryption_algorithm",
            "nautilus.config",
            "nautilus.config.config",
            "nautilus.contrib",
            "nautilus.contrib.graphene_peewee",
            "nautilus.contrib.graphene_peewee.converter",
            "nautilus.contrib.graphene_peewee.objectType",
            "nautilus.conventions",
            "nautilus.conventions.actions",
            "nautilus.conventions.api",
            "nautilus.conventions.auth",
            "nautilus.conventions.models",
            "nautilus.conventions.services",
            "nautilus.database",
            "nautilus.management",
            "nautilus.management.scripts",
            "nautilus.management.scripts.create",
            "nautilus.management.scripts.events",
            "nautilus.management.scripts.events.ask",
            "nautilus.management.scripts.events.publish",
            "nautilus.management.util",
            "nautilus.management.util.render_template",
            "nautilus.models",
            "nautilus.models.base",
            "nautilus.models.fields",
            "nautilus.models.serializers",
            "nautilus.models.serializers.modelSerializer",
            "nautilus.models.util",
            "nautilus.network",
            "nautilus.network.events",
            "nautilus.network.events.actionHandlers",
            "nautilus.network.events.actionHandlers.createHandler",
            "nautilus.network.events.actionHandlers.crudHandler",
            "nautilus.network.events.actionHandlers.deleteHandler",
            "nautilus.network.events.actionHandlers.flexibleAPIHandler",
            "nautilus.network.events.actionHandlers.queryHandler",
            "nautilus.network.events.actionHandlers.readHandler",
            "nautilus.network.events.actionHandlers.rollCallHandler",
            "nautilus.network.events.actionHandlers.updateHandler",
            "nautilus.network.events.consumers",
            "nautilus.network.events.consumers.actions",
            "nautilus.network.events.consumers.api",
            "nautilus.network.events.consumers.kafka",
            "nautilus.network.events.util",
            "nautilus.network.http",
            "nautilus.network.http.requestHandler",
            "nautilus.network.http.responses",
            "nautilus.services",
            "nautilus.services.apiGateway",
            "nautilus.services.connectionService",
            "nautilus.services.modelService",
            "nautilus.services.service",
            "nautilus.services.serviceManager",
            "network",
            "network.test_action_handlers",
            "network.test_http",
            "network.test_util",
            "services",
            "services.test_api_service",
            "services.test_connection_service",
            "services.test_model_service",
            "services.test_service",
            "util",
            "util.decorators",
            "util.mock",
            "util.mock_connection_service",
            "util.mock_model",
            "util.mock_model_service",
            "{{name}}",
            "{{name}}.manage"
        ],
        "version": "0.5.2"
    },
    "nautilus-blacklist": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nautilus-registry": {
        "cmdline": [],
        "modules": [
            "nautilus_registry",
            "nautilus_registry.api",
            "nautilus_registry.api.fields",
            "nautilus_registry.api.fields.connections",
            "nautilus_registry.api.fields.connections.async",
            "nautilus_registry.api.fields.connections.base",
            "nautilus_registry.api.fields.connections.sync",
            "nautilus_registry.api.objectTypes",
            "nautilus_registry.api.objectTypes.serviceObjectType",
            "nautilus_registry.registry",
            "nautilus_registry.service",
            "nautilus_registry.util"
        ],
        "version": "0.1.7"
    },
    "nautilus-reigstry": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "nautilus-terminal": {
        "cmdline": [],
        "modules": [
            "nautilus_terminal",
            "nautilus_terminal.crowbar",
            "nautilus_terminal.helpers",
            "nautilus_terminal.logger",
            "nautilus_terminal.nautilus_accels_helpers",
            "nautilus_terminal.nautilus_terminal",
            "nautilus_terminal.nautilus_terminal_extension"
        ],
        "version": "3.2.0"
    },
    "nautilus-xsnippet": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.4"
    },
    "nautiluspy": {
        "cmdline": [],
        "modules": [
            "NautilusPy",
            "NautilusPy.LocationHelper",
            "NautilusPy.TrackingHelper"
        ],
        "version": "1.0.0"
    },
    "nav": {
        "cmdline": [],
        "modules": [
            "nav",
            "nav._metadata",
            "nav.config"
        ],
        "version": "2.0.0"
    },
    "nav-requests": {
        "cmdline": [],
        "modules": [
            "nav_requests"
        ],
        "version": "1.1.4"
    },
    "navadd": {
        "cmdline": [],
        "modules": [
            "navadd",
            "navadd.navadd"
        ],
        "version": "0.1.1"
    },
    "naval": {
        "cmdline": [],
        "modules": [
            "naval",
            "naval.core",
            "naval.util"
        ],
        "version": "0.8.0"
    },
    "navdoon": {
        "cmdline": [
            "navdoon"
        ],
        "modules": [
            "navdoon",
            "navdoon.app",
            "navdoon.collector",
            "navdoon.destination",
            "navdoon.destination.abstract",
            "navdoon.destination.file",
            "navdoon.destination.graphite",
            "navdoon.destination.stream",
            "navdoon.processor",
            "navdoon.pystdlib",
            "navdoon.pystdlib.configparser",
            "navdoon.pystdlib.queue",
            "navdoon.pystdlib.typing",
            "navdoon.server",
            "navdoon.utils",
            "navdoon.utils.common",
            "navdoon.utils.system",
            "tests",
            "tests.functional_tests",
            "tests.test_app",
            "tests.test_collector",
            "tests.test_destination",
            "tests.test_processor",
            "tests.test_server",
            "tests.test_utils_common",
            "tests.test_utils_system"
        ],
        "version": "0.3.0"
    },
    "navegador5": {
        "cmdline": [],
        "modules": [
            "navegador5",
            "navegador5.body",
            "navegador5.content_parser",
            "navegador5.content_parser.amf0_decode",
            "navegador5.content_parser.amf3_decode",
            "navegador5.cookie",
            "navegador5.cookie.cookie",
            "navegador5.cookie.rfc6265",
            "navegador5.file_toolset",
            "navegador5.head",
            "navegador5.html_tool",
            "navegador5.jq",
            "navegador5.js_random",
            "navegador5.shell_cmd",
            "navegador5.solicitud",
            "navegador5.url_tool"
        ],
        "version": "0.5"
    },
    "naver-book-query": {
        "cmdline": [],
        "modules": [
            "book",
            "naver_book_query"
        ],
        "version": "0.9.1"
    },
    "naverdic": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "navernews": {
        "cmdline": [],
        "modules": [
            "navernews"
        ],
        "version": "0.0.1"
    },
    "naverwebtoonfeeds": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "naviance-client": {
        "cmdline": [],
        "modules": [
            "naviance",
            "naviance.Naviance"
        ],
        "version": "0.0.2"
    },
    "navigator": {
        "cmdline": [],
        "modules": [
            "navigator",
            "navigator.decorators",
            "navigator.navigator",
            "navigator.ui"
        ],
        "version": "0.2.2"
    },
    "navio2": {
        "cmdline": [],
        "modules": [
            "navio2",
            "navio2.adc",
            "navio2.leds",
            "navio2.lsm9ds1",
            "navio2.mpu9250",
            "navio2.ms5611",
            "navio2.pwm",
            "navio2.rcinput",
            "navio2.ublox",
            "navio2.util"
        ],
        "version": "0.1.1"
    },
    "navitia": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "navitia-client": {
        "cmdline": [],
        "modules": [
            "navitia_client",
            "navitia_client.client",
            "navitia_client.departures",
            "navitia_client.exceptions",
            "navitia_client.explore",
            "navitia_client.inverted_geocoding",
            "navitia_client.isochrones",
            "navitia_client.journeys",
            "navitia_client.parser",
            "navitia_client.places_nearby",
            "navitia_client.raw",
            "navitia_client.route_schedules",
            "navitia_client.utils"
        ],
        "version": "0.6.2"
    },
    "navmazing": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.2"
    },
    "navtrix": {
        "cmdline": [],
        "modules": [
            "navtrix",
            "navtrix.transform"
        ],
        "version": "0.0.3"
    },
    "nawa": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0.b090714164121"
    },
    "naya": {
        "cmdline": [],
        "modules": [
            "naya",
            "naya.json"
        ],
        "version": "1.0.0"
    },
    "nayesdog": {
        "cmdline": [],
        "modules": [
            "nayesdog",
            "nayesdog.command_line",
            "nayesdog.config",
            "nayesdog.doglib",
            "nayesdog.facelib",
            "nayesdog.naylib",
            "nayesdog.simpleshelve"
        ],
        "version": "0.1.4"
    },
    "naz.examples": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nazarov": {
        "cmdline": [],
        "modules": [
            "Nazarov"
        ],
        "version": "0.1.0"
    },
    "nazca": {
        "cmdline": [],
        "modules": [],
        "version": "0.7.2"
    },
    "nb": {
        "cmdline": [],
        "modules": [
            "nb",
            "nb.nb",
            "nb.utils"
        ],
        "version": "0.1.2"
    },
    "nb-mermaid": {
        "cmdline": [],
        "modules": [
            "mermaid"
        ],
        "version": "0.1.0"
    },
    "nb2mail": {
        "cmdline": [],
        "modules": [
            "nb2mail"
        ],
        "version": "0.2"
    },
    "nb2plots": {
        "cmdline": [],
        "modules": [
            "nb2plots",
            "nb2plots._version",
            "nb2plots.codelinks",
            "nb2plots.commands",
            "nb2plots.converters",
            "nb2plots.doctree2md",
            "nb2plots.doctree2nb",
            "nb2plots.doctree2py",
            "nb2plots.from_notebook",
            "nb2plots.ipython_shim",
            "nb2plots.mpl_interactive",
            "nb2plots.nbplots",
            "nb2plots.runroles",
            "nb2plots.sphinx2foos",
            "nb2plots.sphinxutils",
            "nb2plots.strdiff",
            "nb2plots.tests",
            "nb2plots.tests.convutils",
            "nb2plots.tests.mockapp",
            "nb2plots.tests.scriptrunner",
            "nb2plots.tests.test_builders",
            "nb2plots.tests.test_codelinks",
            "nb2plots.tests.test_config",
            "nb2plots.tests.test_doctree2md",
            "nb2plots.tests.test_doctree2nb",
            "nb2plots.tests.test_doctree2py",
            "nb2plots.tests.test_from_notebook",
            "nb2plots.tests.test_mpl_interactive",
            "nb2plots.tests.test_nbplots",
            "nb2plots.tests.test_proj1",
            "nb2plots.tests.test_regression",
            "nb2plots.tests.test_runroles",
            "nb2plots.tests.test_scripts",
            "nb2plots.tests.test_sphinx2md",
            "nb2plots.tests.test_strdiff",
            "nb2plots.tests.test_tmpdirs",
            "nb2plots.tmpdirs"
        ],
        "version": "0.5.1"
    },
    "nba": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nba-data": {
        "cmdline": [],
        "modules": [
            "examples",
            "examples.get_games_for_team",
            "examples.get_players_for_season",
            "nba_data",
            "nba_data.client",
            "nba_data.data",
            "nba_data.data.base_query_parameter",
            "nba_data.data.box_scores",
            "nba_data.data.current_season_only",
            "nba_data.data.date_range",
            "nba_data.data.game",
            "nba_data.data.injury_details",
            "nba_data.data.league",
            "nba_data.data.matchup",
            "nba_data.data.outcome",
            "nba_data.data.player_news_item",
            "nba_data.data.player_status",
            "nba_data.data.players",
            "nba_data.data.position",
            "nba_data.data.season",
            "nba_data.data.season_range",
            "nba_data.data.season_type",
            "nba_data.data.team",
            "nba_data.data.team_season_range",
            "nba_data.data.unit",
            "nba_data.deserializers",
            "nba_data.deserializers.box_scores",
            "nba_data.deserializers.box_scores.advanced",
            "nba_data.deserializers.box_scores.game",
            "nba_data.deserializers.box_scores.traditional",
            "nba_data.deserializers.calendar",
            "nba_data.deserializers.common_all_players",
            "nba_data.deserializers.common_player_info",
            "nba_data.deserializers.roto_wire",
            "nba_data.deserializers.roto_wire.player_news_item",
            "nba_data.deserializers.roto_wire.player_news_items",
            "nba_data.deserializers.roto_wire.test_rotoWirePlayerNewsItemsDeserializer",
            "nba_data.deserializers.scoreboard",
            "nba_data.deserializers.season_players",
            "nba_data.deserializers.team_game_log",
            "nba_data.deserializers.utils",
            "nba_data.deserializers.utils.advanced_box_score_deserializer_utils",
            "nba_data.deserializers.utils.box_score_deserializer_utils",
            "nba_data.nba_stats_api_utils",
            "nba_data.nba_stats_api_utils.query_parameter_generator",
            "nba_data.nba_stats_api_utils.uri_generator"
        ],
        "version": "1.9"
    },
    "nba-py": {
        "cmdline": [],
        "modules": [
            "nba_py",
            "nba_py.constants",
            "nba_py.draftcombine",
            "nba_py.game",
            "nba_py.league",
            "nba_py.player",
            "nba_py.shotchart",
            "nba_py.team"
        ],
        "version": "0.1.1a2"
    },
    "nback": {
        "cmdline": [
            "nback"
        ],
        "modules": [
            "nback",
            "nback.settings",
            "nback/lib",
            "nback/lib.backup",
            "nback/lib.dbdump",
            "nback/lib.logger",
            "nback/lib.notification",
            "nback/lib.utils",
            "nback/lib/db",
            "nback/lib/db.mongodb",
            "nback/lib/db.mysql",
            "nback/lib/db.postgresql",
            "nback/lib/storage",
            "nback/lib/storage.aws_s3"
        ],
        "version": "0.1.16"
    },
    "nbacli": {
        "cmdline": [
            "nba"
        ],
        "modules": [
            "nba",
            "nba.board",
            "nba.main",
            "nba.nbaApi"
        ],
        "version": "0.12"
    },
    "nbadata": {
        "cmdline": [],
        "modules": [
            "NBAData",
            "NBAData.NBAData",
            "NBAData.constants",
            "NBAData.data_methods"
        ],
        "version": "1.1"
    },
    "nbapipy": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "nbapp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nbashots": {
        "cmdline": [],
        "modules": [
            "nbashots",
            "nbashots.api",
            "nbashots.charts"
        ],
        "version": "0.1.0a9"
    },
    "nbastats": {
        "cmdline": [],
        "modules": [
            "nbastats",
            "nbastats.nbastats"
        ],
        "version": "1.1.0"
    },
    "nbautoeval": {
        "cmdline": [],
        "modules": [
            "exercises",
            "exercises.curve",
            "exercises.fifoclass",
            "exercises.percentages",
            "exercises.regexp",
            "nbautoeval",
            "nbautoeval.args",
            "nbautoeval.exercise_class",
            "nbautoeval.exercise_function",
            "nbautoeval.exercise_regexp",
            "nbautoeval.log",
            "nbautoeval.rendering",
            "nbautoeval.version"
        ],
        "version": "0.1.3"
    },
    "nbawebstats": {
        "cmdline": [],
        "modules": [
            "tests",
            "tests.test-nbawebstats"
        ],
        "version": "0.1.2"
    },
    "nbbrowserpdf": {
        "cmdline": [],
        "modules": [
            "nbbrowserpdf",
            "nbbrowserpdf._version",
            "nbbrowserpdf.convert",
            "nbbrowserpdf.exporters",
            "nbbrowserpdf.exporters.base",
            "nbbrowserpdf.exporters.pdf",
            "nbbrowserpdf.exporters.pdf_capture",
            "nbbrowserpdf.install"
        ],
        "version": "0.2.0"
    },
    "nbclean": {
        "cmdline": [],
        "modules": [
            "nbclean",
            "nbclean.clean",
            "nbclean.preprocessors",
            "nbclean.run",
            "nbclean.utils"
        ],
        "version": "0.1"
    },
    "nbconvert": {
        "cmdline": [],
        "modules": [
            "nbconvert",
            "nbconvert._version",
            "nbconvert.exporters",
            "nbconvert.exporters.asciidoc",
            "nbconvert.exporters.base",
            "nbconvert.exporters.export",
            "nbconvert.exporters.exporter",
            "nbconvert.exporters.exporter_locator",
            "nbconvert.exporters.html",
            "nbconvert.exporters.latex",
            "nbconvert.exporters.markdown",
            "nbconvert.exporters.notebook",
            "nbconvert.exporters.pdf",
            "nbconvert.exporters.python",
            "nbconvert.exporters.rst",
            "nbconvert.exporters.script",
            "nbconvert.exporters.slides",
            "nbconvert.exporters.templateexporter",
            "nbconvert.exporters.tests",
            "nbconvert.exporters.tests.base",
            "nbconvert.exporters.tests.cheese",
            "nbconvert.exporters.tests.test_asciidoc",
            "nbconvert.exporters.tests.test_export",
            "nbconvert.exporters.tests.test_exporter",
            "nbconvert.exporters.tests.test_html",
            "nbconvert.exporters.tests.test_latex",
            "nbconvert.exporters.tests.test_markdown",
            "nbconvert.exporters.tests.test_notebook",
            "nbconvert.exporters.tests.test_pdf",
            "nbconvert.exporters.tests.test_python",
            "nbconvert.exporters.tests.test_rst",
            "nbconvert.exporters.tests.test_script",
            "nbconvert.exporters.tests.test_slides",
            "nbconvert.exporters.tests.test_templateexporter",
            "nbconvert.filters",
            "nbconvert.filters.ansi",
            "nbconvert.filters.citation",
            "nbconvert.filters.datatypefilter",
            "nbconvert.filters.filter_links",
            "nbconvert.filters.highlight",
            "nbconvert.filters.latex",
            "nbconvert.filters.markdown",
            "nbconvert.filters.markdown_mistune",
            "nbconvert.filters.metadata",
            "nbconvert.filters.pandoc",
            "nbconvert.filters.strings",
            "nbconvert.filters.tests",
            "nbconvert.filters.tests.test_ansi",
            "nbconvert.filters.tests.test_citation",
            "nbconvert.filters.tests.test_datatypefilter",
            "nbconvert.filters.tests.test_highlight",
            "nbconvert.filters.tests.test_latex",
            "nbconvert.filters.tests.test_markdown",
            "nbconvert.filters.tests.test_metadata",
            "nbconvert.filters.tests.test_strings",
            "nbconvert.nbconvertapp",
            "nbconvert.postprocessors",
            "nbconvert.postprocessors.base",
            "nbconvert.postprocessors.serve",
            "nbconvert.postprocessors.tests",
            "nbconvert.postprocessors.tests.test_serve",
            "nbconvert.preprocessors",
            "nbconvert.preprocessors.base",
            "nbconvert.preprocessors.clearoutput",
            "nbconvert.preprocessors.coalescestreams",
            "nbconvert.preprocessors.convertfigures",
            "nbconvert.preprocessors.csshtmlheader",
            "nbconvert.preprocessors.execute",
            "nbconvert.preprocessors.extractoutput",
            "nbconvert.preprocessors.highlightmagics",
            "nbconvert.preprocessors.latex",
            "nbconvert.preprocessors.sanitize",
            "nbconvert.preprocessors.svg2pdf",
            "nbconvert.preprocessors.tests",
            "nbconvert.preprocessors.tests.base",
            "nbconvert.preprocessors.tests.fake_kernelmanager",
            "nbconvert.preprocessors.tests.test_clearoutput",
            "nbconvert.preprocessors.tests.test_coalescestreams",
            "nbconvert.preprocessors.tests.test_csshtmlheader",
            "nbconvert.preprocessors.tests.test_execute",
            "nbconvert.preprocessors.tests.test_extractoutput",
            "nbconvert.preprocessors.tests.test_highlightmagics",
            "nbconvert.preprocessors.tests.test_latex",
            "nbconvert.preprocessors.tests.test_sanitize",
            "nbconvert.preprocessors.tests.test_svg2pdf",
            "nbconvert.resources",
            "nbconvert.tests",
            "nbconvert.tests.base",
            "nbconvert.tests.fake_exporters",
            "nbconvert.tests.test_nbconvertapp",
            "nbconvert.utils",
            "nbconvert.utils.base",
            "nbconvert.utils.exceptions",
            "nbconvert.utils.io",
            "nbconvert.utils.lexers",
            "nbconvert.utils.pandoc",
            "nbconvert.utils.tests",
            "nbconvert.utils.tests.test_io",
            "nbconvert.utils.tests.test_pandoc",
            "nbconvert.utils.version",
            "nbconvert.writers",
            "nbconvert.writers.base",
            "nbconvert.writers.debug",
            "nbconvert.writers.files",
            "nbconvert.writers.stdout",
            "nbconvert.writers.tests",
            "nbconvert.writers.tests.test_debug",
            "nbconvert.writers.tests.test_files",
            "nbconvert.writers.tests.test_stdout"
        ],
        "version": "5.1.1"
    },
    "nbconvert-reportlab": {
        "cmdline": [],
        "modules": [
            "nbconvert_reportlab",
            "nbconvert_reportlab.exporter",
            "nbconvert_reportlab.pdfimage",
            "nbconvert_reportlab.rlmarkdown"
        ],
        "version": "0.1"
    },
    "nbconvert-watch": {
        "cmdline": [],
        "modules": [
            "nbconvert_watch",
            "nbconvert_watch.command_line",
            "nbconvert_watch.utils"
        ],
        "version": "0.2.6"
    },
    "nbdebug": {
        "cmdline": [],
        "modules": [
            "nbdebug",
            "nbdebug.version"
        ],
        "version": "1.3"
    },
    "nbdiff": {
        "cmdline": [],
        "modules": [
            "nbdiff",
            "nbdiff.adapter",
            "nbdiff.adapter.git_adapter",
            "nbdiff.adapter.hg_adapter",
            "nbdiff.adapter.vcs_adapter",
            "nbdiff.commands",
            "nbdiff.comparable",
            "nbdiff.diff",
            "nbdiff.merge",
            "nbdiff.nbdiff",
            "nbdiff.notebook_diff",
            "nbdiff.notebook_parser",
            "nbdiff.server",
            "nbdiff.server.command",
            "nbdiff.server.command.AboutUsCommand",
            "nbdiff.server.command.ComparisonCommand",
            "nbdiff.server.command.ContactUsCommand",
            "nbdiff.server.command.DiffCommand",
            "nbdiff.server.command.DiffURLCommand",
            "nbdiff.server.command.FaqCommand",
            "nbdiff.server.command.MergeCommand",
            "nbdiff.server.command.MergeURLCommand",
            "nbdiff.server.command.NotebookRequestCommand",
            "nbdiff.server.command.ResourceRequestCommand",
            "nbdiff.server.command.SaveNotebookCommand",
            "nbdiff.server.command.UploadCommand",
            "nbdiff.server.database",
            "nbdiff.server.database.nbdiffModel",
            "nbdiff.server.local_server",
            "nbdiff.server.remote_server"
        ],
        "version": "1.0.3"
    },
    "nbdime": {
        "cmdline": [],
        "modules": [
            "nbdime",
            "nbdime._version",
            "nbdime.args",
            "nbdime.diff_format",
            "nbdime.diffing",
            "nbdime.diffing.generic",
            "nbdime.diffing.lcs",
            "nbdime.diffing.notebooks",
            "nbdime.diffing.seq_bruteforce",
            "nbdime.diffing.seq_difflib",
            "nbdime.diffing.seq_myers",
            "nbdime.diffing.sequences",
            "nbdime.diffing.snakes",
            "nbdime.gitdiffdriver",
            "nbdime.gitdifftool",
            "nbdime.gitfiles",
            "nbdime.gitmergedriver",
            "nbdime.gitmergetool",
            "nbdime.log",
            "nbdime.merging",
            "nbdime.merging.autoresolve",
            "nbdime.merging.chunks",
            "nbdime.merging.decisions",
            "nbdime.merging.generic",
            "nbdime.merging.notebooks",
            "nbdime.nbdiffapp",
            "nbdime.nbmergeapp",
            "nbdime.nbpatchapp",
            "nbdime.nbshowapp",
            "nbdime.patching",
            "nbdime.prettyprint",
            "nbdime.profiling",
            "nbdime.tests",
            "nbdime.tests.conftest",
            "nbdime.tests.test_apply_merge",
            "nbdime.tests.test_autoresolve",
            "nbdime.tests.test_cli_apps",
            "nbdime.tests.test_decision_tools",
            "nbdime.tests.test_diff",
            "nbdime.tests.test_diff_format",
            "nbdime.tests.test_diff_gitrefs",
            "nbdime.tests.test_diff_json_conversion",
            "nbdime.tests.test_diff_sequence",
            "nbdime.tests.test_diff_sequence_bruteforce",
            "nbdime.tests.test_diff_sequence_difflib",
            "nbdime.tests.test_git_diffdriver",
            "nbdime.tests.test_js_artifacts_installed",
            "nbdime.tests.test_merge",
            "nbdime.tests.test_merge_format",
            "nbdime.tests.test_merge_notebooks",
            "nbdime.tests.test_merge_notebooks_inline",
            "nbdime.tests.test_myers",
            "nbdime.tests.test_notebook_diff",
            "nbdime.tests.test_patch",
            "nbdime.tests.test_prettyprint",
            "nbdime.tests.test_utils",
            "nbdime.tests.test_web",
            "nbdime.tests.utils",
            "nbdime.utils",
            "nbdime.webapp",
            "nbdime.webapp.nbdifftool",
            "nbdime.webapp.nbdiffweb",
            "nbdime.webapp.nbdimeserver",
            "nbdime.webapp.nbmergetool",
            "nbdime.webapp.nbmergeweb",
            "nbdime.webapp.webutil"
        ],
        "version": "0.3.0"
    },
    "nbexamples": {
        "cmdline": [],
        "modules": [
            "nbexamples",
            "nbexamples._version",
            "nbexamples.handlers",
            "nbexamples.strip_output"
        ],
        "version": "0.3.1"
    },
    "nbextensions": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.6"
    },
    "nbfinder": {
        "cmdline": [],
        "modules": [
            "nbfinder",
            "nbfinder.find_notebook",
            "nbfinder.notebook_finder",
            "nbfinder.notebook_loader"
        ],
        "version": "1.0.2"
    },
    "nbformat": {
        "cmdline": [],
        "modules": [
            "nbformat",
            "nbformat._version",
            "nbformat.converter",
            "nbformat.current",
            "nbformat.notebooknode",
            "nbformat.reader",
            "nbformat.sentinel",
            "nbformat.sign",
            "nbformat.tests",
            "nbformat.tests.base",
            "nbformat.tests.test_api",
            "nbformat.tests.test_convert",
            "nbformat.tests.test_reader",
            "nbformat.tests.test_sign",
            "nbformat.tests.test_validator",
            "nbformat.v1",
            "nbformat.v1.convert",
            "nbformat.v1.nbbase",
            "nbformat.v1.nbjson",
            "nbformat.v1.rwbase",
            "nbformat.v1.tests",
            "nbformat.v1.tests.nbexamples",
            "nbformat.v1.tests.test_json",
            "nbformat.v1.tests.test_nbbase",
            "nbformat.v2",
            "nbformat.v2.convert",
            "nbformat.v2.nbbase",
            "nbformat.v2.nbjson",
            "nbformat.v2.nbpy",
            "nbformat.v2.nbxml",
            "nbformat.v2.rwbase",
            "nbformat.v2.tests",
            "nbformat.v2.tests.nbexamples",
            "nbformat.v2.tests.test_json",
            "nbformat.v2.tests.test_nbbase",
            "nbformat.v2.tests.test_nbpy",
            "nbformat.v3",
            "nbformat.v3.convert",
            "nbformat.v3.nbbase",
            "nbformat.v3.nbjson",
            "nbformat.v3.nbpy",
            "nbformat.v3.rwbase",
            "nbformat.v3.tests",
            "nbformat.v3.tests.formattest",
            "nbformat.v3.tests.nbexamples",
            "nbformat.v3.tests.test_json",
            "nbformat.v3.tests.test_misc",
            "nbformat.v3.tests.test_nbbase",
            "nbformat.v3.tests.test_nbpy",
            "nbformat.v4",
            "nbformat.v4.convert",
            "nbformat.v4.nbbase",
            "nbformat.v4.nbjson",
            "nbformat.v4.rwbase",
            "nbformat.v4.tests",
            "nbformat.v4.tests.formattest",
            "nbformat.v4.tests.nbexamples",
            "nbformat.v4.tests.test_convert",
            "nbformat.v4.tests.test_json",
            "nbformat.v4.tests.test_nbbase",
            "nbformat.v4.tests.test_validate",
            "nbformat.validator"
        ],
        "version": "4.3.0"
    },
    "nbgen": {
        "cmdline": [],
        "modules": [
            "nbgen"
        ],
        "version": "0.1.2"
    },
    "nbgrader": {
        "cmdline": [],
        "modules": [
            "nbgrader",
            "nbgrader._version",
            "nbgrader.api",
            "nbgrader.apps",
            "nbgrader.apps.assignapp",
            "nbgrader.apps.autogradeapp",
            "nbgrader.apps.baseapp",
            "nbgrader.apps.collectapp",
            "nbgrader.apps.dbapp",
            "nbgrader.apps.exportapp",
            "nbgrader.apps.extensionapp",
            "nbgrader.apps.feedbackapp",
            "nbgrader.apps.fetchapp",
            "nbgrader.apps.formgradeapp",
            "nbgrader.apps.listapp",
            "nbgrader.apps.nbgraderapp",
            "nbgrader.apps.notebookapp",
            "nbgrader.apps.quickstartapp",
            "nbgrader.apps.releaseapp",
            "nbgrader.apps.submitapp",
            "nbgrader.apps.updateapp",
            "nbgrader.apps.validateapp",
            "nbgrader.auth",
            "nbgrader.auth.base",
            "nbgrader.auth.hubauth",
            "nbgrader.auth.noauth",
            "nbgrader.formgrader",
            "nbgrader.formgrader.apihandlers",
            "nbgrader.formgrader.base",
            "nbgrader.formgrader.handlers",
            "nbgrader.nbformat",
            "nbgrader.nbformat.common",
            "nbgrader.nbformat.v1",
            "nbgrader.plugins",
            "nbgrader.plugins.base",
            "nbgrader.plugins.export",
            "nbgrader.plugins.latesubmission",
            "nbgrader.preprocessors",
            "nbgrader.preprocessors.base",
            "nbgrader.preprocessors.checkcellmetadata",
            "nbgrader.preprocessors.clearoutput",
            "nbgrader.preprocessors.clearsolutions",
            "nbgrader.preprocessors.computechecksums",
            "nbgrader.preprocessors.deduplicateids",
            "nbgrader.preprocessors.displayautogrades",
            "nbgrader.preprocessors.execute",
            "nbgrader.preprocessors.getgrades",
            "nbgrader.preprocessors.headerfooter",
            "nbgrader.preprocessors.latesubmissions",
            "nbgrader.preprocessors.limitoutput",
            "nbgrader.preprocessors.lockcells",
            "nbgrader.preprocessors.overwritecells",
            "nbgrader.preprocessors.saveautogrades",
            "nbgrader.preprocessors.savecells",
            "nbgrader.server_extensions",
            "nbgrader.server_extensions.assignment_list",
            "nbgrader.server_extensions.assignment_list.handlers",
            "nbgrader.tests",
            "nbgrader.tests.api",
            "nbgrader.tests.api.test_gradebook",
            "nbgrader.tests.api.test_models",
            "nbgrader.tests.apps",
            "nbgrader.tests.apps.base",
            "nbgrader.tests.apps.conftest",
            "nbgrader.tests.apps.test_nbgrader",
            "nbgrader.tests.apps.test_nbgrader_assign",
            "nbgrader.tests.apps.test_nbgrader_autograde",
            "nbgrader.tests.apps.test_nbgrader_collect",
            "nbgrader.tests.apps.test_nbgrader_db",
            "nbgrader.tests.apps.test_nbgrader_export",
            "nbgrader.tests.apps.test_nbgrader_extension",
            "nbgrader.tests.apps.test_nbgrader_feedback",
            "nbgrader.tests.apps.test_nbgrader_fetch",
            "nbgrader.tests.apps.test_nbgrader_list",
            "nbgrader.tests.apps.test_nbgrader_quickstart",
            "nbgrader.tests.apps.test_nbgrader_release",
            "nbgrader.tests.apps.test_nbgrader_submit",
            "nbgrader.tests.apps.test_nbgrader_update",
            "nbgrader.tests.apps.test_nbgrader_validate",
            "nbgrader.tests.formgrader",
            "nbgrader.tests.formgrader.base",
            "nbgrader.tests.formgrader.conftest",
            "nbgrader.tests.formgrader.fakeuser",
            "nbgrader.tests.formgrader.manager",
            "nbgrader.tests.formgrader.test_auth_failures",
            "nbgrader.tests.formgrader.test_formgrader_js",
            "nbgrader.tests.formgrader.test_gradebook_navigation",
            "nbgrader.tests.formgrader.test_nbgrader_formgrade",
            "nbgrader.tests.nbextensions",
            "nbgrader.tests.nbextensions.conftest",
            "nbgrader.tests.nbextensions.test_assignment_list",
            "nbgrader.tests.nbextensions.test_create_assignment",
            "nbgrader.tests.nbgraderformat",
            "nbgrader.tests.nbgraderformat.test_v1",
            "nbgrader.tests.preprocessors",
            "nbgrader.tests.preprocessors.base",
            "nbgrader.tests.preprocessors.conftest",
            "nbgrader.tests.preprocessors.test_checkcellmetadata",
            "nbgrader.tests.preprocessors.test_clearsolutions",
            "nbgrader.tests.preprocessors.test_computechecksums",
            "nbgrader.tests.preprocessors.test_deduplicateids",
            "nbgrader.tests.preprocessors.test_displayautogrades",
            "nbgrader.tests.preprocessors.test_getgrades",
            "nbgrader.tests.preprocessors.test_headerfooter",
            "nbgrader.tests.preprocessors.test_limitoutput",
            "nbgrader.tests.preprocessors.test_lockcells",
            "nbgrader.tests.preprocessors.test_overwritecells",
            "nbgrader.tests.preprocessors.test_saveautogrades",
            "nbgrader.tests.preprocessors.test_savecells",
            "nbgrader.tests.utils",
            "nbgrader.tests.utils.test_utils",
            "nbgrader.utils"
        ],
        "version": "0.4.0"
    },
    "nbgraph": {
        "cmdline": [],
        "modules": [
            "nbgraph",
            "nbgraph.client",
            "nbgraph.client.js",
            "nbgraph.loaders",
            "nbgraph.loaders.igraph_loader",
            "nbgraph.loaders.igraph_loader_test",
            "nbgraph.loaders.networkx_loader",
            "nbgraph.loaders.networkx_loader_test",
            "nbgraph.notebook_graph",
            "nbgraph.renderer"
        ],
        "version": "0.0.3"
    },
    "nbhosting": {
        "cmdline": [],
        "modules": [
            "nbhosting",
            "nbhosting.courses",
            "nbhosting.courses.admin",
            "nbhosting.courses.apps",
            "nbhosting.courses.migrations",
            "nbhosting.courses.models",
            "nbhosting.courses.tests",
            "nbhosting.courses.views",
            "nbhosting.edxfront",
            "nbhosting.edxfront.admin",
            "nbhosting.edxfront.apps",
            "nbhosting.edxfront.course",
            "nbhosting.edxfront.migrations",
            "nbhosting.edxfront.models",
            "nbhosting.edxfront.tests",
            "nbhosting.edxfront.views",
            "nbhosting.main",
            "nbhosting.main.logger",
            "nbhosting.main.settings",
            "nbhosting.main.urls",
            "nbhosting.main.views",
            "nbhosting.main.wsgi",
            "nbhosting.manage",
            "nbhosting.stats",
            "nbhosting.stats.admin",
            "nbhosting.stats.apps",
            "nbhosting.stats.fakecounts",
            "nbhosting.stats.fakeevents",
            "nbhosting.stats.migrations",
            "nbhosting.stats.models",
            "nbhosting.stats.monitor",
            "nbhosting.stats.stats",
            "nbhosting.stats.testresults",
            "nbhosting.stats.tests",
            "nbhosting.stats.views",
            "nbhosting.version"
        ],
        "version": "0.1.0"
    },
    "nbhtml": {
        "cmdline": [],
        "modules": [
            "nbhtml",
            "nbhtml.read",
            "nbhtml.write"
        ],
        "version": "0.1"
    },
    "nbhttp": {
        "cmdline": [
            "proxy.py"
        ],
        "modules": [
            "nbhttp",
            "nbhttp.client",
            "nbhttp.error",
            "nbhttp.http_common",
            "nbhttp.push_tcp",
            "nbhttp.server"
        ],
        "version": "0.7.3"
    },
    "nbimporter": {
        "cmdline": [],
        "modules": [
            "display_nb",
            "nbimporter"
        ],
        "version": "0.3.1"
    },
    "nbit": {
        "cmdline": [],
        "modules": [
            "nbit",
            "nbit.nbit"
        ],
        "version": "0.1"
    },
    "nblint": {
        "cmdline": [
            "nblint",
            "nblint.cmd"
        ],
        "modules": [
            "nblint"
        ],
        "version": "0.0.3"
    },
    "nblivereload": {
        "cmdline": [],
        "modules": [
            "nblivereload",
            "nblivereload._version",
            "nblivereload.serverextension"
        ],
        "version": "0.1.0"
    },
    "nbmerge": {
        "cmdline": [],
        "modules": [
            "nbmerge"
        ],
        "version": "0.0.4"
    },
    "nbmolviz": {
        "cmdline": [],
        "modules": [
            "nbmolviz",
            "nbmolviz._version",
            "nbmolviz.base_widget",
            "nbmolviz.drivers3d",
            "nbmolviz.install",
            "nbmolviz.interfaces3d",
            "nbmolviz.utils",
            "nbmolviz.widget2d",
            "nbmolviz.widget3d"
        ],
        "version": "0.6.7rc2"
    },
    "nbodykit": {
        "cmdline": [],
        "modules": [
            "nbodykit",
            "nbodykit.algorithms",
            "nbodykit.algorithms.convpower",
            "nbodykit.algorithms.fftpower",
            "nbodykit.algorithms.fibercollisions",
            "nbodykit.algorithms.fof",
            "nbodykit.algorithms.tests",
            "nbodykit.algorithms.tests.test_conv_power",
            "nbodykit.algorithms.tests.test_fftpower",
            "nbodykit.algorithms.tests.test_fiber_colls",
            "nbodykit.algorithms.tests.test_fof",
            "nbodykit.algorithms.tests.test_zhist",
            "nbodykit.algorithms.threeptcf",
            "nbodykit.algorithms.zhist",
            "nbodykit.base",
            "nbodykit.base.catalog",
            "nbodykit.base.catalogmesh",
            "nbodykit.base.mesh",
            "nbodykit.base.tests",
            "nbodykit.batch",
            "nbodykit.cosmology",
            "nbodykit.cosmology.core",
            "nbodykit.cosmology.ehpower",
            "nbodykit.cosmology.perturbation",
            "nbodykit.cosmology.tests",
            "nbodykit.cosmology.tests.test_cosmology",
            "nbodykit.dataset",
            "nbodykit.extern",
            "nbodykit.extern.six",
            "nbodykit.io",
            "nbodykit.io.base",
            "nbodykit.io.bigfile",
            "nbodykit.io.binary",
            "nbodykit.io.csv",
            "nbodykit.io.hdf",
            "nbodykit.io.stack",
            "nbodykit.io.tests",
            "nbodykit.io.tests.test_base",
            "nbodykit.io.tests.test_bigfile",
            "nbodykit.io.tests.test_binary",
            "nbodykit.io.tests.test_csv",
            "nbodykit.io.tests.test_hdf",
            "nbodykit.io.tests.test_stack",
            "nbodykit.io.tests.test_tpm",
            "nbodykit.io.tools",
            "nbodykit.io.tpm",
            "nbodykit.lab",
            "nbodykit.meshtools",
            "nbodykit.mockmaker",
            "nbodykit.source",
            "nbodykit.source.catalog",
            "nbodykit.source.catalog.array",
            "nbodykit.source.catalog.file",
            "nbodykit.source.catalog.fkp",
            "nbodykit.source.catalog.halos",
            "nbodykit.source.catalog.hod",
            "nbodykit.source.catalog.lognormal",
            "nbodykit.source.catalog.tests",
            "nbodykit.source.catalog.tests.test_catalog",
            "nbodykit.source.catalog.tests.test_hod",
            "nbodykit.source.catalog.uniform",
            "nbodykit.source.mesh",
            "nbodykit.source.mesh.bigfile",
            "nbodykit.source.mesh.linear",
            "nbodykit.source.mesh.memory",
            "nbodykit.source.mesh.tests",
            "nbodykit.source.mesh.tests.test_grid",
            "nbodykit.tests",
            "nbodykit.tests.test_dataset",
            "nbodykit.tests.test_lab",
            "nbodykit.tests.test_taskmanager",
            "nbodykit.transform",
            "nbodykit.utils",
            "nbodykit.version"
        ],
        "version": "0.2.2"
    },
    "nbodylab": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nbopen": {
        "cmdline": [],
        "modules": [
            "nbopen",
            "nbopen.install_win",
            "nbopen.install_xdg",
            "nbopen.nbopen"
        ],
        "version": "0.4.2"
    },
    "nbp": {
        "cmdline": [],
        "modules": [
            "nbp",
            "nbp.models",
            "nbp.table",
            "nbp.utils"
        ],
        "version": "1.0.1"
    },
    "nbparameterise": {
        "cmdline": [],
        "modules": [
            "nbparameterise",
            "nbparameterise.code",
            "nbparameterise.code_drivers",
            "nbparameterise.code_drivers.python2",
            "nbparameterise.code_drivers.python3"
        ],
        "version": "0.1"
    },
    "nbpresent": {
        "cmdline": [],
        "modules": [
            "nbpresent",
            "nbpresent._version",
            "nbpresent.export",
            "nbpresent.exporters",
            "nbpresent.exporters.base",
            "nbpresent.exporters.html",
            "nbpresent.exporters.pdf",
            "nbpresent.exporters.pdf_capture",
            "nbpresent.exporters.pdf_ghost",
            "nbpresent.tasks",
            "nbpresent.tasks._env",
            "nbpresent.tasks.build",
            "nbpresent.tasks.clean",
            "nbpresent.tasks.deps",
            "nbpresent.tasks.index",
            "nbpresent.tasks.less",
            "nbpresent.tasks.notebook",
            "nbpresent.tasks.requirejs",
            "nbpresent.tasks.standalone",
            "nbpresent.tests",
            "nbpresent.tests.test_export",
            "nbpresent.tests.test_notebook"
        ],
        "version": "3.0.0"
    },
    "nbserve": {
        "cmdline": [],
        "modules": [
            "nbserve",
            "nbserve.app",
            "nbserve.cli",
            "nbserve.meta",
            "nbserve.nbexporter"
        ],
        "version": "0.4.1"
    },
    "nbserver": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nbsetuptools": {
        "cmdline": [],
        "modules": [
            "nbsetuptools",
            "nbsetuptools.nbsetuptools"
        ],
        "version": "0.1.4"
    },
    "nbsocks": {
        "cmdline": [],
        "modules": [
            "shadowsocks",
            "shadowsocks.asyncdns",
            "shadowsocks.common",
            "shadowsocks.crypto",
            "shadowsocks.crypto.openssl",
            "shadowsocks.crypto.rc4_md5",
            "shadowsocks.crypto.sodium",
            "shadowsocks.crypto.table",
            "shadowsocks.crypto.util",
            "shadowsocks.daemon",
            "shadowsocks.encrypt",
            "shadowsocks.eventloop",
            "shadowsocks.local",
            "shadowsocks.lru_cache",
            "shadowsocks.manager",
            "shadowsocks.server",
            "shadowsocks.shell",
            "shadowsocks.tcprelay",
            "shadowsocks.udprelay"
        ],
        "version": "2.9.1"
    },
    "nbsphinx": {
        "cmdline": [],
        "modules": [
            "nbsphinx"
        ],
        "version": "0.2.13"
    },
    "nbstripout": {
        "cmdline": [],
        "modules": [
            "nbstripout"
        ],
        "version": "0.3.0"
    },
    "nbsvm": {
        "cmdline": [],
        "modules": [
            "nbsvm"
        ],
        "version": "1.0"
    },
    "nbt": {
        "cmdline": [],
        "modules": [
            "nbt",
            "nbt.chunk",
            "nbt.nbt",
            "nbt.region",
            "nbt.world"
        ],
        "version": "1.4.1"
    },
    "nbt2yaml": {
        "cmdline": [],
        "modules": [
            "nbt2yaml",
            "nbt2yaml.main",
            "nbt2yaml.parse",
            "nbt2yaml.yamlgen",
            "tests",
            "tests.test_dump_nbt",
            "tests.test_dump_yaml",
            "tests.test_parse_nbt",
            "tests.test_parse_yaml"
        ],
        "version": "0.3.0"
    },
    "nbtemplate": {
        "cmdline": [],
        "modules": [
            "nbtemplate",
            "nbtemplate.cli",
            "nbtemplate.template"
        ],
        "version": "0.0.1"
    },
    "nbtools": {
        "cmdline": [],
        "modules": [
            "nbtools"
        ],
        "version": "0.1.3"
    },
    "nbtop": {
        "cmdline": [],
        "modules": [
            "nbtop",
            "nbtop.main",
            "nbtop.version"
        ],
        "version": "0.4.1"
    },
    "nbtparse": {
        "cmdline": [],
        "modules": [
            "nbtparse",
            "nbtparse._utils",
            "nbtparse.exceptions",
            "nbtparse.minecraft",
            "nbtparse.minecraft.entity",
            "nbtparse.minecraft.entity_ids",
            "nbtparse.minecraft.entityfactory",
            "nbtparse.minecraft.ids",
            "nbtparse.minecraft.item",
            "nbtparse.minecraft.level",
            "nbtparse.minecraft.mobs",
            "nbtparse.minecraft.projectile",
            "nbtparse.minecraft.terrain",
            "nbtparse.minecraft.terrain._voxel",
            "nbtparse.minecraft.terrain.chunk",
            "nbtparse.minecraft.terrain.dimension",
            "nbtparse.minecraft.terrain.filters",
            "nbtparse.minecraft.terrain.region",
            "nbtparse.minecraft.terrain.tile",
            "nbtparse.semantics",
            "nbtparse.semantics.fields",
            "nbtparse.semantics.filetype",
            "nbtparse.semantics.nbtobject",
            "nbtparse.syntax",
            "nbtparse.syntax.tags"
        ],
        "version": "0.7.1"
    },
    "nbtutor": {
        "cmdline": [],
        "modules": [
            "nbtutor",
            "nbtutor._version",
            "nbtutor.ipython",
            "nbtutor.ipython.debugger",
            "nbtutor.ipython.history",
            "nbtutor.ipython.magic",
            "nbtutor.ipython.utils",
            "tools",
            "tools._env",
            "tools.build",
            "tools.clean",
            "tools.deps",
            "tools.index",
            "tools.less",
            "tools.notebook",
            "tools.requirejs"
        ],
        "version": "1.0.4"
    },
    "nbupload": {
        "cmdline": [],
        "modules": [
            "nbupload",
            "nbupload.FileUploaderWidget"
        ],
        "version": "0.0.3"
    },
    "nburnclient": {
        "cmdline": [],
        "modules": [
            "nb_urn_client",
            "nb_urn_client.nb_urn_client"
        ],
        "version": "0.8.0"
    },
    "nbval": {
        "cmdline": [],
        "modules": [
            "nbval",
            "nbval.cover",
            "nbval.kernel",
            "nbval.nbdime_reporter",
            "nbval.plugin"
        ],
        "version": "0.6"
    },
    "nbview": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nbwidget": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nbwidgets": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nbwrapper": {
        "cmdline": [],
        "modules": [
            "nbwrapper"
        ],
        "version": "0.1"
    },
    "nbxmpp": {
        "cmdline": [],
        "modules": [
            "nbxmpp",
            "nbxmpp.auth_nb",
            "nbxmpp.bosh",
            "nbxmpp.c14n",
            "nbxmpp.client_nb",
            "nbxmpp.dispatcher_nb",
            "nbxmpp.features_nb",
            "nbxmpp.idlequeue",
            "nbxmpp.plugin",
            "nbxmpp.protocol",
            "nbxmpp.proxy_connectors",
            "nbxmpp.rndg",
            "nbxmpp.roster_nb",
            "nbxmpp.simplexml",
            "nbxmpp.smacks",
            "nbxmpp.stringprepare",
            "nbxmpp.tls_nb",
            "nbxmpp.transports_nb"
        ],
        "version": "0.5.5"
    },
    "ncalc": {
        "cmdline": [],
        "modules": [
            "ncalc",
            "ncalc.eval"
        ],
        "version": "1.0"
    },
    "ncbi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ncbi-genome-download": {
        "cmdline": [],
        "modules": [
            "ncbi_genome_download",
            "ncbi_genome_download.core",
            "ncbi_genome_download.summary"
        ],
        "version": "0.2.3"
    },
    "ncbitk": {
        "cmdline": [],
        "modules": [
            "NCBITK",
            "NCBITK.config",
            "NCBITK.curate",
            "NCBITK.get_resources",
            "NCBITK.sync"
        ],
        "version": "1.0a5"
    },
    "ncbs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ncc-pa-elasticsearch": {
        "cmdline": [
            "pa-es-coupler.py"
        ],
        "modules": [
            "pa_elasticsearch",
            "pa_elasticsearch.coupler",
            "pa_elasticsearch.tagdb"
        ],
        "version": "0.0.6"
    },
    "ncc-paapi": {
        "cmdline": [],
        "modules": [
            "paapi",
            "paapi.paapi"
        ],
        "version": "0.0.7"
    },
    "ncclient": {
        "cmdline": [],
        "modules": [
            "ncclient",
            "ncclient.capabilities",
            "ncclient.debug",
            "ncclient.devices",
            "ncclient.devices.alu",
            "ncclient.devices.csr",
            "ncclient.devices.default",
            "ncclient.devices.h3c",
            "ncclient.devices.hpcomware",
            "ncclient.devices.huawei",
            "ncclient.devices.iosxe",
            "ncclient.devices.iosxr",
            "ncclient.devices.junos",
            "ncclient.devices.nexus",
            "ncclient.manager",
            "ncclient.operations",
            "ncclient.operations.edit",
            "ncclient.operations.errors",
            "ncclient.operations.flowmon",
            "ncclient.operations.lock",
            "ncclient.operations.notify",
            "ncclient.operations.retrieve",
            "ncclient.operations.rpc",
            "ncclient.operations.session",
            "ncclient.operations.subscribe",
            "ncclient.operations.third_party",
            "ncclient.operations.third_party.h3c",
            "ncclient.operations.third_party.h3c.rpc",
            "ncclient.operations.third_party.hpcomware",
            "ncclient.operations.third_party.hpcomware.rpc",
            "ncclient.operations.third_party.huawei",
            "ncclient.operations.third_party.huawei.rpc",
            "ncclient.operations.third_party.iosxe",
            "ncclient.operations.third_party.iosxe.rpc",
            "ncclient.operations.third_party.juniper",
            "ncclient.operations.third_party.juniper.rpc",
            "ncclient.operations.third_party.nexus",
            "ncclient.operations.third_party.nexus.rpc",
            "ncclient.operations.util",
            "ncclient.transport",
            "ncclient.transport.errors",
            "ncclient.transport.session",
            "ncclient.transport.ssh",
            "ncclient.transport.third_party",
            "ncclient.transport.third_party.junos",
            "ncclient.transport.third_party.junos.ioproc",
            "ncclient.xml_"
        ],
        "version": "0.5.3"
    },
    "ncdistribute": {
        "cmdline": [
            "ncdistributer.py"
        ],
        "modules": [
            "ncdistributerlib",
            "ncdistributerlib.docopt"
        ],
        "version": "1.08"
    },
    "ncdjango": {
        "cmdline": [],
        "modules": [
            "ncdjango",
            "ncdjango.api",
            "ncdjango.config",
            "ncdjango.exceptions",
            "ncdjango.fields",
            "ncdjango.forms",
            "ncdjango.geoimage",
            "ncdjango.geoprocessing",
            "ncdjango.geoprocessing.celery_tasks",
            "ncdjango.geoprocessing.data",
            "ncdjango.geoprocessing.evaluation",
            "ncdjango.geoprocessing.exceptions",
            "ncdjango.geoprocessing.params",
            "ncdjango.geoprocessing.parsetab",
            "ncdjango.geoprocessing.serializers",
            "ncdjango.geoprocessing.tasks",
            "ncdjango.geoprocessing.tasks.raster",
            "ncdjango.geoprocessing.urls",
            "ncdjango.geoprocessing.utils",
            "ncdjango.geoprocessing.views",
            "ncdjango.geoprocessing.workflow",
            "ncdjango.interfaces",
            "ncdjango.interfaces.arcgis",
            "ncdjango.interfaces.arcgis.form_fields",
            "ncdjango.interfaces.arcgis.forms",
            "ncdjango.interfaces.arcgis.urls",
            "ncdjango.interfaces.arcgis.utils",
            "ncdjango.interfaces.arcgis.views",
            "ncdjango.interfaces.arcgis.wkid",
            "ncdjango.interfaces.arcgis_extended",
            "ncdjango.interfaces.arcgis_extended.form_fields",
            "ncdjango.interfaces.arcgis_extended.forms",
            "ncdjango.interfaces.arcgis_extended.urls",
            "ncdjango.interfaces.arcgis_extended.utils",
            "ncdjango.interfaces.arcgis_extended.views",
            "ncdjango.interfaces.data",
            "ncdjango.interfaces.data.classify",
            "ncdjango.interfaces.data.forms",
            "ncdjango.interfaces.data.urls",
            "ncdjango.interfaces.data.views",
            "ncdjango.middleware",
            "ncdjango.migrations",
            "ncdjango.migrations.0001_initial",
            "ncdjango.migrations.0002_auto_20141001_1050",
            "ncdjango.migrations.0003_auto_20151230_0954",
            "ncdjango.models",
            "ncdjango.tasks",
            "ncdjango.urls",
            "ncdjango.utils",
            "ncdjango.views"
        ],
        "version": "0.4.3"
    },
    "ncdr": {
        "cmdline": [],
        "modules": [
            "ncdr",
            "ncdr.NCDR"
        ],
        "version": "0.0.8"
    },
    "ncdu-s3": {
        "cmdline": [],
        "modules": [
            "ncdu_s3",
            "ncdu_s3.directory_walker",
            "ncdu_s3.main",
            "ncdu_s3.ncdu_data_writer",
            "ncdu_s3.s3_directory_generator"
        ],
        "version": "0.3"
    },
    "ncempy": {
        "cmdline": [],
        "modules": [
            "ncempy",
            "ncempy.algo",
            "ncempy.algo.distortion",
            "ncempy.algo.local_max",
            "ncempy.algo.math",
            "ncempy.algo.radial_profile",
            "ncempy.eval",
            "ncempy.eval.ring_diff",
            "ncempy.io",
            "ncempy.io.emd",
            "ncempy.io.ser",
            "ncempy.test",
            "ncempy.test.test_algo_distortion",
            "ncempy.test.test_algo_local_max",
            "ncempy.test.test_algo_radial_profile",
            "ncempy.test.test_eval_ring_diff",
            "ncempy.test.test_io_emd",
            "ncempy.test.test_io_ser"
        ],
        "version": "1.1.2"
    },
    "ncephes": {
        "cmdline": [],
        "modules": [
            "api",
            "api.errors",
            "api.merge",
            "api.pypi",
            "api.stats",
            "api.stdlib",
            "core",
            "core.logger",
            "core.patches",
            "core.utils"
        ],
        "version": "1.0.38"
    },
    "nclib": {
        "cmdline": [
            "serve-stdio"
        ],
        "modules": [
            "nclib"
        ],
        "version": "0.6.1"
    },
    "ncloud": {
        "cmdline": [],
        "modules": [
            "ncloud",
            "ncloud.commands",
            "ncloud.commands.batch",
            "ncloud.commands.command",
            "ncloud.commands.configure",
            "ncloud.commands.dataset",
            "ncloud.commands.group",
            "ncloud.commands.import_model",
            "ncloud.commands.interact",
            "ncloud.commands.list",
            "ncloud.commands.machine",
            "ncloud.commands.model",
            "ncloud.commands.ncloud_history",
            "ncloud.commands.predict",
            "ncloud.commands.predict_list",
            "ncloud.commands.resource",
            "ncloud.commands.show",
            "ncloud.commands.stats",
            "ncloud.commands.stream",
            "ncloud.commands.tenant",
            "ncloud.commands.train",
            "ncloud.commands.train_results",
            "ncloud.commands.upgrade",
            "ncloud.commands.user",
            "ncloud.commands.util",
            "ncloud.completers",
            "ncloud.config",
            "ncloud.driver",
            "ncloud.formatting",
            "ncloud.formatting.output",
            "ncloud.formatting.time_zone",
            "ncloud.util",
            "ncloud.util.api_call",
            "ncloud.util.arg_processor",
            "ncloud.util.file_transfer",
            "ncloud.util.sys_commands",
            "ncloud.vendor",
            "ncloud.vendor.argcomplete",
            "ncloud.vendor.argcomplete.argcomplete",
            "ncloud.vendor.argcomplete.argcomplete.compat",
            "ncloud.vendor.argcomplete.argcomplete.completers",
            "ncloud.vendor.argcomplete.argcomplete.my_argparse",
            "ncloud.vendor.argcomplete.argcomplete.my_shlex",
            "ncloud.vendor.argcomplete.setup",
            "ncloud.vendor.argcomplete.test",
            "ncloud.vendor.argcomplete.test.test",
            "ncloud.vendor.python",
            "ncloud.vendor.python.argparse",
            "ncloud.version"
        ],
        "version": "2.5.0"
    },
    "ncmirtools": {
        "cmdline": [
            "mpidinfo.py",
            "mpidir.py",
            "projectdir.py",
            "projectsearch.py"
        ],
        "modules": [
            "ncmirtools",
            "ncmirtools.config",
            "ncmirtools.lookup",
            "ncmirtools.mpidinfo",
            "ncmirtools.mpidir",
            "ncmirtools.projectdir",
            "ncmirtools.projectsearch"
        ],
        "version": "0.3.0"
    },
    "ncmon": {
        "cmdline": [],
        "modules": [
            "ncmon",
            "ncmon.constants",
            "ncmon.cursesgraphic",
            "ncmon.main",
            "ncmon.mixins",
            "ncmon.parser",
            "ncmon.proginfo",
            "ncmon.rules",
            "ncmon.utils"
        ],
        "version": "0.2.2"
    },
    "ncmpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ncnyt": {
        "cmdline": [],
        "modules": [
            "ncnyt",
            "ncnyt.widgets",
            "nyt",
            "nyt.article",
            "nyt.auth",
            "nyt.exceptions",
            "nyt.most_popular",
            "nyt.newest",
            "nyt.search"
        ],
        "version": "0.3.0"
    },
    "nco": {
        "cmdline": [],
        "modules": [
            "nco",
            "nco.custom",
            "nco.nco"
        ],
        "version": "0.0.3"
    },
    "ncobj": {
        "cmdline": [],
        "modules": [
            "ncobj",
            "ncobj.cdl",
            "ncobj.examples",
            "ncobj.examples.az_ncdump",
            "ncobj.examples.eg_adjust_files",
            "ncobj.examples.eg_allinfo",
            "ncobj.examples.eg_flatten_containers",
            "ncobj.examples.eg_flatten_extended_containers",
            "ncobj.examples.eg_group_containers",
            "ncobj.examples.eg_group_extended_containers",
            "ncobj.examples.eg_index_extract",
            "ncobj.examples.eg_iris_testfiles",
            "ncobj.examples.semantic_containers",
            "ncobj.examples.simple_semantic_containers",
            "ncobj.examples.tests",
            "ncobj.examples.tests.test_simple_semantic_containers",
            "ncobj.grouping",
            "ncobj.nc_dataset",
            "ncobj.shorts",
            "ncobj.tests",
            "ncobj.tests.cdl",
            "ncobj.tests.cdl.test_cdl",
            "ncobj.tests.grouping",
            "ncobj.tests.grouping.test_grouping",
            "ncobj.tests.nc_dataset",
            "ncobj.tests.nc_dataset.test_nc_dataset",
            "ncobj.tests.test_ncobj"
        ],
        "version": "0.3"
    },
    "ncoda": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ncolony": {
        "cmdline": [],
        "modules": [
            "ncolony",
            "ncolony._version",
            "ncolony.beatcheck",
            "ncolony.client",
            "ncolony.client.heart",
            "ncolony.client.tests",
            "ncolony.client.tests.test_heart",
            "ncolony.ctllib",
            "ncolony.directory_monitor",
            "ncolony.httpcheck",
            "ncolony.interfaces",
            "ncolony.process_events",
            "ncolony.reaperlib",
            "ncolony.schedulelib",
            "ncolony.service",
            "ncolony.tests",
            "ncolony.tests.functional_test",
            "ncolony.tests.nitpicker",
            "ncolony.tests.test_beatcheck",
            "ncolony.tests.test_ctllib",
            "ncolony.tests.test_directory_monitor",
            "ncolony.tests.test_httpcheck",
            "ncolony.tests.test_process_events",
            "ncolony.tests.test_reaper",
            "ncolony.tests.test_schedulelib",
            "ncolony.tests.test_service",
            "ncolony.tests.test_twistd_plugin"
        ],
        "version": "0.0.2"
    },
    "ncp": {
        "cmdline": [],
        "modules": [
            "ncp",
            "ncp.app"
        ],
        "version": "1.15"
    },
    "ncplib": {
        "cmdline": [],
        "modules": [
            "ncplib",
            "ncplib.app",
            "ncplib.client",
            "ncplib.compat",
            "ncplib.connection",
            "ncplib.errors",
            "ncplib.packets",
            "ncplib.server",
            "ncplib.values"
        ],
        "version": "2.3.3"
    },
    "ncplugin": {
        "cmdline": [],
        "modules": [
            "ncplugin"
        ],
        "version": "0.5"
    },
    "ncpol2sdpa": {
        "cmdline": [],
        "modules": [
            "ncpol2sdpa",
            "ncpol2sdpa.chordal_extension",
            "ncpol2sdpa.cvxpy_utils",
            "ncpol2sdpa.faacets_relaxation",
            "ncpol2sdpa.moroder_hierarchy",
            "ncpol2sdpa.mosek_utils",
            "ncpol2sdpa.nc_utils",
            "ncpol2sdpa.physics_utils",
            "ncpol2sdpa.picos_utils",
            "ncpol2sdpa.rdm_hierarchy",
            "ncpol2sdpa.sdp_relaxation",
            "ncpol2sdpa.sdpa_utils",
            "ncpol2sdpa.solver_common",
            "ncpol2sdpa.sparse_utils",
            "ncpol2sdpa.steering_hierarchy"
        ],
        "version": "1.12.1"
    },
    "ncreduce": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "ncrypt": {
        "cmdline": [],
        "modules": [
            "ncrypt",
            "ncrypt.bignum",
            "ncrypt.cipher",
            "ncrypt.dh",
            "ncrypt.digest",
            "ncrypt.err",
            "ncrypt.rand",
            "ncrypt.rsa",
            "ncrypt.ssl",
            "ncrypt.test",
            "ncrypt.test.decrypt",
            "ncrypt.test.encrypt",
            "ncrypt.test.filterprog",
            "ncrypt.test.hash",
            "ncrypt.test.md5hash",
            "ncrypt.test.sha1hash",
            "ncrypt.test.ssl",
            "ncrypt.test.ssl.sslclient",
            "ncrypt.test.ssl.sslserver",
            "ncrypt.test.ssl.sslserver1",
            "ncrypt.test.test",
            "ncrypt.test.testcipher",
            "ncrypt.test.testdigest",
            "ncrypt.test.testrand",
            "ncrypt.test.testrsa",
            "ncrypt.x509"
        ],
        "version": "0.6.4"
    },
    "ncryptify": {
        "cmdline": [],
        "modules": [
            "ncryptify",
            "ncryptify.account",
            "ncryptify.client",
            "ncryptify.config",
            "ncryptify.encryption",
            "ncryptify.ncryptify_exceptions"
        ],
        "version": "0.0.8"
    },
    "ncs": {
        "cmdline": [],
        "modules": [
            "ncs",
            "ncs.api",
            "ncs.db",
            "tests",
            "tests.test_ncs"
        ],
        "version": "0.1.0"
    },
    "ncsdaemon": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ncshunter": {
        "cmdline": [],
        "modules": [
            "src"
        ],
        "version": "0.1.0"
    },
    "ncsv": {
        "cmdline": [
            "fast-ncsv",
            "ncsv"
        ],
        "modules": [
            "ncsv",
            "ncsv.fastncsv",
            "ncsv.ncsv"
        ],
        "version": "0.15.3"
    },
    "nctime": {
        "cmdline": [],
        "modules": [
            "nctime",
            "nctime.axis",
            "nctime.axis.constants",
            "nctime.axis.db",
            "nctime.axis.exceptions",
            "nctime.axis.handler",
            "nctime.axis.main",
            "nctime.nctime",
            "nctime.overlap",
            "nctime.overlap.constants",
            "nctime.overlap.exceptions",
            "nctime.overlap.main",
            "nctime.utils",
            "nctime.utils.constants",
            "nctime.utils.exceptions",
            "nctime.utils.time",
            "nctime.utils.utils"
        ],
        "version": "3.9.6"
    },
    "nctu-oauth": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "ncutils": {
        "cmdline": [],
        "modules": [
            "ncutils",
            "ncutils.base",
            "ncutils.mylist",
            "ncutils.ncsh",
            "ncutils.network",
            "ncutils.recipes",
            "ncutils.search",
            "ncutils.util",
            "ncutils.video",
            "ncutils.watch"
        ],
        "version": "0.3.0"
    },
    "ncvtk": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ncvx": {
        "cmdline": [],
        "modules": [
            "ncvx",
            "ncvx.admm_problem",
            "ncvx.annulus",
            "ncvx.assign",
            "ncvx.boolean",
            "ncvx.card",
            "ncvx.choose",
            "ncvx.integer",
            "ncvx.noncvx_variable",
            "ncvx.orthog",
            "ncvx.partition",
            "ncvx.rank",
            "ncvx.sphere",
            "ncvx.tour"
        ],
        "version": "0.1.4"
    },
    "nd-service-registry": {
        "cmdline": [],
        "modules": [
            "nd_service_registry",
            "nd_service_registry.bin",
            "nd_service_registry.bin.ndsr",
            "nd_service_registry.bin.ndsr.get",
            "nd_service_registry.bin.ndsr.get_tests",
            "nd_service_registry.bin.ndsr.ndsr",
            "nd_service_registry.contrib",
            "nd_service_registry.contrib.django",
            "nd_service_registry.contrib.django.utils",
            "nd_service_registry.contrib.django.utils_tests",
            "nd_service_registry.exceptions",
            "nd_service_registry.funcs",
            "nd_service_registry.funcs_tests",
            "nd_service_registry.lock",
            "nd_service_registry.lock_integration",
            "nd_service_registry.registration",
            "nd_service_registry.registration_integration",
            "nd_service_registry.registration_tests",
            "nd_service_registry.shims",
            "nd_service_registry.sr_integration",
            "nd_service_registry.sr_tests",
            "nd_service_registry.version",
            "nd_service_registry.watcher",
            "nd_service_registry.watcher_integration",
            "nd_service_registry.watcher_tests"
        ],
        "version": "1.1.0"
    },
    "nd.hopfield": {
        "cmdline": [],
        "modules": [
            "nd",
            "nd.hopfield",
            "nd.hopfield.hopfield_learn"
        ],
        "version": "0.0.1"
    },
    "nd.semanticcore": {
        "cmdline": [],
        "modules": [
            "nd",
            "nd.semanticcore",
            "nd.semanticcore.average",
            "nd.semanticcore.cloudcompare",
            "nd.semanticcore.semanticcore",
            "nd.semanticcore.text2vector",
            "nd.semanticcore.tfidf",
            "nd.semanticcore.vectorcompare"
        ],
        "version": "0.1.2"
    },
    "nd2file": {
        "cmdline": [],
        "modules": [
            "nd2file",
            "nd2file.nd2file"
        ],
        "version": "0.0.1.dev1"
    },
    "nd2reader": {
        "cmdline": [],
        "modules": [
            "nd2reader",
            "nd2reader.artificial",
            "nd2reader.common",
            "nd2reader.exceptions",
            "nd2reader.label_map",
            "nd2reader.legacy",
            "nd2reader.parser",
            "nd2reader.raw_metadata",
            "nd2reader.reader"
        ],
        "version": "3.0.2"
    },
    "ndar-backend": {
        "cmdline": [
            "store_first_all_results",
            "store_recon_all_results",
            "store_structural_qa"
        ],
        "modules": [],
        "version": "0.1.0"
    },
    "ndar-unpack": {
        "cmdline": [
            "ndar_unpack"
        ],
        "modules": [],
        "version": "0.1.3"
    },
    "ndarray": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ndarray-listener": {
        "cmdline": [],
        "modules": [
            "api",
            "api.errors",
            "api.merge",
            "api.pypi",
            "api.stats",
            "api.stdlib",
            "core",
            "core.logger",
            "core.patches",
            "core.utils"
        ],
        "version": "1.0.20"
    },
    "ndb": {
        "cmdline": [],
        "modules": [
            "ndb",
            "ndb.blobstore",
            "ndb.blobstore_test",
            "ndb.context",
            "ndb.context_test",
            "ndb.django_middleware",
            "ndb.eventloop",
            "ndb.eventloop_test",
            "ndb.google_imports",
            "ndb.google_test_imports",
            "ndb.key",
            "ndb.key_test",
            "ndb.local_cloud_datastore_factory",
            "ndb.metadata",
            "ndb.metadata_test",
            "ndb.model",
            "ndb.model_test",
            "ndb.msgprop",
            "ndb.msgprop_test",
            "ndb.polymodel",
            "ndb.polymodel_test",
            "ndb.prospective_search",
            "ndb.prospective_search_test",
            "ndb.query",
            "ndb.query_test",
            "ndb.rpc_test",
            "ndb.stats",
            "ndb.stats_test",
            "ndb.tasklets",
            "ndb.tasklets_test",
            "ndb.test_utils",
            "ndb.utils"
        ],
        "version": "1.0.13b1"
    },
    "ndb-adapter": {
        "cmdline": [],
        "modules": [
            "ndb_adapter",
            "ndb_adapter.advanced_search_options",
            "ndb_adapter.dna_search_options",
            "ndb_adapter.enums",
            "ndb_adapter.html_parser",
            "ndb_adapter.ndb",
            "ndb_adapter.ndb_base",
            "ndb_adapter.ndb_download",
            "ndb_adapter.report_parser",
            "ndb_adapter.rna_search_options",
            "ndb_adapter.search_options",
            "ndb_adapter.search_report",
            "ndb_adapter.search_result",
            "ndb_adapter.statistics",
            "ndb_adapter.summary_result"
        ],
        "version": "1.3"
    },
    "ndb-audit": {
        "cmdline": [],
        "modules": [
            "ndb_audit"
        ],
        "version": "1.1.8"
    },
    "ndb-prop-gen": {
        "cmdline": [
            "ndb_prop_gen"
        ],
        "modules": [
            "ndb_prop_gen",
            "ndb_prop_gen.arg",
            "ndb_prop_gen.common",
            "ndb_prop_gen.error",
            "ndb_prop_gen.generator"
        ],
        "version": "0.0.4"
    },
    "ndb-py": {
        "cmdline": [],
        "modules": [
            "ndb",
            "ndb.common",
            "ndb.common.node_reader",
            "ndb.common.node_redirect",
            "ndb.common.node_writer",
            "ndb.operate",
            "ndb.operate.node_clean",
            "ndb.operate.node_delete",
            "ndb.operate.node_insert",
            "ndb.operate.node_locate",
            "ndb.operate.node_script",
            "ndb.operate.node_select",
            "ndb.operate.node_travel",
            "ndb.operate.node_update",
            "ndb.statement",
            "ndb_test",
            "ndb_test.common",
            "ndb_test.common.node_reader_test",
            "ndb_test.operate",
            "ndb_test.operate.node_delete_test",
            "ndb_test.operate.node_select_test",
            "ndb_test.operate.node_travel_test",
            "ndb_test.operate.test_data",
            "ndb_test.statement_test"
        ],
        "version": "1.1"
    },
    "ndb-relations": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ndb-utils": {
        "cmdline": [],
        "modules": [
            "ndb_utils",
            "ndb_utils.exceptions",
            "ndb_utils.models",
            "ndb_utils.properties"
        ],
        "version": "0.1a1"
    },
    "ndb-x": {
        "cmdline": [],
        "modules": [
            "ndbx",
            "ndbx.futures",
            "ndbx.locks",
            "ndbx.utils"
        ],
        "version": "0.0.1"
    },
    "ndbext": {
        "cmdline": [],
        "modules": [
            "ndbext",
            "ndbext.property"
        ],
        "version": "0.1.3"
    },
    "ndbpager": {
        "cmdline": [],
        "modules": [
            "ndbpager",
            "ndbpager.base"
        ],
        "version": "0.1.1"
    },
    "ndbsearchablebase": {
        "cmdline": [],
        "modules": [
            "NdbSearchableBase",
            "NdbSearchableBase.SearchableModel"
        ],
        "version": "1.3"
    },
    "ndbunq": {
        "cmdline": [],
        "modules": [
            "ndbunq",
            "ndbunq.base"
        ],
        "version": "0.1.0"
    },
    "ndbvalid": {
        "cmdline": [],
        "modules": [
            "ndbvalid",
            "ndbvalid.ndbvalid",
            "ndbvalid.test_ndbvalid"
        ],
        "version": "1.6.1"
    },
    "ndd-panda": {
        "cmdline": [
            "panda_pipeline"
        ],
        "modules": [
            "panda",
            "panda.bench",
            "panda.bench.discriminibility",
            "panda.bench.metrics",
            "panda.bench.transforms",
            "panda.bench.utilities",
            "panda.default_config",
            "panda.methods",
            "panda.methods.bad_chans",
            "panda.methods.denoise",
            "panda.methods.derivatives",
            "panda.methods.interpolation",
            "panda.methods.misc",
            "panda.methods.pcp",
            "panda.methods.signals",
            "panda.methods.viz",
            "panda.utils",
            "panda.utils.bids_s3",
            "panda.utils.system"
        ],
        "version": "1.11"
    },
    "ndef": {
        "cmdline": [],
        "modules": [
            "ndef",
            "ndef.ndef"
        ],
        "version": "0.1"
    },
    "ndeflib": {
        "cmdline": [],
        "modules": [
            "ndef",
            "ndef.deviceinfo",
            "ndef.handover",
            "ndef.message",
            "ndef.record",
            "ndef.smartposter",
            "ndef.text",
            "ndef.uri",
            "ndef.wifi"
        ],
        "version": "0.2.0"
    },
    "ndeftool": {
        "cmdline": [],
        "modules": [
            "ndeftool",
            "ndeftool.cli",
            "ndeftool.commands",
            "ndeftool.commands.IDentifier",
            "ndeftool.commands.Load",
            "ndeftool.commands.PayLoad",
            "ndeftool.commands.Print",
            "ndeftool.commands.SMartPoster",
            "ndeftool.commands.Save",
            "ndeftool.commands.TeXT",
            "ndeftool.commands.TypeName",
            "ndeftool.commands.URI"
        ],
        "version": "0.1.0"
    },
    "ndex": {
        "cmdline": [],
        "modules": [
            "ndex",
            "ndex.beta",
            "ndex.beta.layouts",
            "ndex.beta.path_scoring",
            "ndex.beta.test",
            "ndex.beta.test.betascratchtests",
            "ndex.beta.toolbox",
            "ndex.client",
            "ndex.create_aspect",
            "ndex.ndexGraphBuilder",
            "ndex.networkn",
            "ndex.test",
            "ndex.test.non_unittest_testing",
            "ndex.test.scratch_test_networkn",
            "ndex.test.scratchtests",
            "ndex.test.test_NdexClient",
            "ndex.test.test_NetworkNConstructor",
            "ndex.test.test_ProvenanceAndProfile",
            "ndex.test.test_UpdatingNsetProperty",
            "ndex.test.test_network",
            "ndex.test.test_networkn",
            "ndex.test.test_properties",
            "ndex.test.test_query",
            "ndex.test.test_setting_visibility",
            "ndex.test.test_system_properties",
            "ndex.test.test_user"
        ],
        "version": "3.0.11.23"
    },
    "ndex-dev": {
        "cmdline": [],
        "modules": [
            "ndex",
            "ndex.beta",
            "ndex.beta.layouts",
            "ndex.beta.path_scoring",
            "ndex.beta.test",
            "ndex.beta.test.betascratchtests",
            "ndex.beta.toolbox",
            "ndex.client",
            "ndex.create_aspect",
            "ndex.ndexGraphBuilder",
            "ndex.networkn",
            "ndex.test",
            "ndex.test.non_unittest_testing",
            "ndex.test.scratch_test_networkn",
            "ndex.test.scratchtests",
            "ndex.test.test_NdexClient",
            "ndex.test.test_NetworkNConstructor",
            "ndex.test.test_ProvenanceAndProfile",
            "ndex.test.test_UpdatingNsetProperty",
            "ndex.test.test_network",
            "ndex.test.test_networkn",
            "ndex.test.test_properties",
            "ndex.test.test_query",
            "ndex.test.test_setting_visibility",
            "ndex.test.test_system_properties",
            "ndex.test.test_user"
        ],
        "version": "3.0.11.23"
    },
    "ndex-examples": {
        "cmdline": [],
        "modules": [
            "ndex_examples",
            "ndex_examples.merge",
            "ndex_examples.merge.bindingdb_merger",
            "ndex_examples.merge.example_script",
            "ndex_examples.merge.scratch_test"
        ],
        "version": "1.0.0.dev6"
    },
    "ndex-utils": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ndex-utils-dev": {
        "cmdline": [],
        "modules": [
            "app",
            "app.api",
            "ebs",
            "ebs.ebs2cx",
            "ebs.test_ebs",
            "gpml",
            "gpml.gpml2cx",
            "gsea",
            "gsea.cx2gsea",
            "map_enrichment",
            "map_enrichment.enrich_map",
            "map_enrichment.enrichment_utils",
            "pc",
            "pc.pathway_commons_api",
            "sif",
            "sif.cx2sif",
            "sif.sif2cx",
            "tsv",
            "tsv.cx2ndex",
            "tsv.delim2cx"
        ],
        "version": "3.0.11.8"
    },
    "ndg": {
        "cmdline": [],
        "modules": [
            "ndg"
        ],
        "version": "(latest release)"
    },
    "ndg-httpsclient": {
        "cmdline": [],
        "modules": [
            "ndg",
            "ndg.httpsclient",
            "ndg.httpsclient.https",
            "ndg.httpsclient.ssl_context_util",
            "ndg.httpsclient.ssl_peer_verification",
            "ndg.httpsclient.ssl_socket",
            "ndg.httpsclient.subj_alt_name",
            "ndg.httpsclient.test",
            "ndg.httpsclient.test.test_https",
            "ndg.httpsclient.test.test_urllib2",
            "ndg.httpsclient.test.test_utils",
            "ndg.httpsclient.urllib2_build_opener",
            "ndg.httpsclient.utils"
        ],
        "version": "0.4.2"
    },
    "ndg-oauth-client": {
        "cmdline": [],
        "modules": [
            "ndg",
            "ndg.oauth",
            "ndg.oauth.client",
            "ndg.oauth.client.examples",
            "ndg.oauth.client.examples.bearer_tok",
            "ndg.oauth.client.examples.bearer_tok.bearer_tok_client_app_serve",
            "ndg.oauth.client.examples.bearer_tok.bearer_tok_client_app_serve_ceda",
            "ndg.oauth.client.examples.shared_config",
            "ndg.oauth.client.examples.shared_config.pki",
            "ndg.oauth.client.examples.shared_config.pki.ca",
            "ndg.oauth.client.examples.slcs",
            "ndg.oauth.client.examples.slcs.slcs_client_app_serve",
            "ndg.oauth.client.lib",
            "ndg.oauth.client.lib.certificate_request",
            "ndg.oauth.client.lib.http_get_with_credential",
            "ndg.oauth.client.lib.oauth2client",
            "ndg.oauth.client.lib.openssl_cert",
            "ndg.oauth.client.lib.render",
            "ndg.oauth.client.lib.render.configuration",
            "ndg.oauth.client.lib.render.factory",
            "ndg.oauth.client.lib.render.genshi_renderer",
            "ndg.oauth.client.lib.render.renderer_interface",
            "ndg.oauth.client.templates",
            "ndg.oauth.client.templates.public",
            "ndg.oauth.client.templates.public.layout",
            "ndg.oauth.client.templates.public.layout.icons",
            "ndg.oauth.client.wsgi",
            "ndg.oauth.client.wsgi.certificate_request",
            "ndg.oauth.client.wsgi.oauth2_client"
        ],
        "version": "0.6.0"
    },
    "ndg-oauth-server": {
        "cmdline": [],
        "modules": [
            "ndg",
            "ndg.oauth",
            "ndg.oauth.server",
            "ndg.oauth.server.examples",
            "ndg.oauth.server.examples.bearer_tok",
            "ndg.oauth.server.examples.bearer_tok.bearer_tok_server_app_serve",
            "ndg.oauth.server.examples.bearer_tok.static",
            "ndg.oauth.server.examples.bearer_tok.static.layout",
            "ndg.oauth.server.examples.bearer_tok.templates",
            "ndg.oauth.server.examples.shared_config",
            "ndg.oauth.server.examples.shared_config.pki",
            "ndg.oauth.server.examples.shared_config.pki.ca",
            "ndg.oauth.server.examples.slcs",
            "ndg.oauth.server.examples.slcs.slcs_server_app_serve",
            "ndg.oauth.server.examples.slcs.static",
            "ndg.oauth.server.examples.slcs.static.layout",
            "ndg.oauth.server.examples.slcs.templates",
            "ndg.oauth.server.examples.utils",
            "ndg.oauth.server.lib",
            "ndg.oauth.server.lib.access_token",
            "ndg.oauth.server.lib.access_token.access_token_interface",
            "ndg.oauth.server.lib.access_token.bearer_token_generator",
            "ndg.oauth.server.lib.access_token.make_access_token",
            "ndg.oauth.server.lib.access_token.myproxy_cert_token_generator",
            "ndg.oauth.server.lib.authenticate",
            "ndg.oauth.server.lib.authenticate.authenticator_interface",
            "ndg.oauth.server.lib.authenticate.certificate_authenticator",
            "ndg.oauth.server.lib.authenticate.noop_authenticator",
            "ndg.oauth.server.lib.authenticate.password_authenticator",
            "ndg.oauth.server.lib.authenticate.test_authenticator",
            "ndg.oauth.server.lib.authorization_server",
            "ndg.oauth.server.lib.authorize",
            "ndg.oauth.server.lib.authorize.authorizer",
            "ndg.oauth.server.lib.authorize.authorizer_interface",
            "ndg.oauth.server.lib.authorize.authorizer_storing_identifier",
            "ndg.oauth.server.lib.oauth",
            "ndg.oauth.server.lib.oauth.access_token",
            "ndg.oauth.server.lib.oauth.authorize",
            "ndg.oauth.server.lib.oauth.oauth_exception",
            "ndg.oauth.server.lib.register",
            "ndg.oauth.server.lib.register.access_token",
            "ndg.oauth.server.lib.register.authorization_grant",
            "ndg.oauth.server.lib.register.client",
            "ndg.oauth.server.lib.register.client_authorization",
            "ndg.oauth.server.lib.register.register_base",
            "ndg.oauth.server.lib.register.resource",
            "ndg.oauth.server.lib.register.scopeutil",
            "ndg.oauth.server.lib.render",
            "ndg.oauth.server.lib.render.configuration",
            "ndg.oauth.server.lib.render.factory",
            "ndg.oauth.server.lib.render.genshi_renderer",
            "ndg.oauth.server.lib.render.renderer_interface",
            "ndg.oauth.server.lib.resource_request",
            "ndg.oauth.server.lib.resource_request.myproxy_cert_request",
            "ndg.oauth.server.lib.utils",
            "ndg.oauth.server.lib.utils.repoze_who_utils",
            "ndg.oauth.server.templates",
            "ndg.oauth.server.templates.public",
            "ndg.oauth.server.templates.public.js",
            "ndg.oauth.server.templates.public.layout",
            "ndg.oauth.server.templates.public.layout.icons",
            "ndg.oauth.server.wsgi",
            "ndg.oauth.server.wsgi.authentication_filter",
            "ndg.oauth.server.wsgi.authorization_filter",
            "ndg.oauth.server.wsgi.oauth2_server",
            "ndg.oauth.server.wsgi.repoze_util",
            "ndg.oauth.server.wsgi.resource_server"
        ],
        "version": "0.6.0"
    },
    "ndg-saml": {
        "cmdline": [],
        "modules": [
            "ndg",
            "ndg.saml",
            "ndg.saml.common",
            "ndg.saml.common.xml",
            "ndg.saml.saml2",
            "ndg.saml.saml2.binding",
            "ndg.saml.saml2.binding.soap",
            "ndg.saml.saml2.binding.soap.client",
            "ndg.saml.saml2.binding.soap.client.attributequery",
            "ndg.saml.saml2.binding.soap.client.authzdecisionquery",
            "ndg.saml.saml2.binding.soap.client.requestbase",
            "ndg.saml.saml2.binding.soap.client.subjectquery",
            "ndg.saml.saml2.binding.soap.client.xacmlauthzdecisionquery",
            "ndg.saml.saml2.binding.soap.server",
            "ndg.saml.saml2.binding.soap.server.wsgi",
            "ndg.saml.saml2.binding.soap.server.wsgi.queryinterface",
            "ndg.saml.saml2.core",
            "ndg.saml.saml2.xacml_profile",
            "ndg.saml.test",
            "ndg.saml.test.binding",
            "ndg.saml.test.binding.soap",
            "ndg.saml.test.binding.soap.test_attributeservice",
            "ndg.saml.test.binding.soap.test_attributeservice_paster",
            "ndg.saml.test.binding.soap.test_authzservice",
            "ndg.saml.test.binding.soap.test_queryinterface",
            "ndg.saml.test.binding.soap.test_queryresponseinterface",
            "ndg.saml.test.test_factory",
            "ndg.saml.test.test_saml",
            "ndg.saml.test.utils",
            "ndg.saml.test.xml",
            "ndg.saml.test.xml.test_saml_core",
            "ndg.saml.test.xml.test_xacml_profile",
            "ndg.saml.utils",
            "ndg.saml.utils.command_line_client",
            "ndg.saml.utils.factory",
            "ndg.saml.utils.m2crypto",
            "ndg.saml.utils.pyopenssl",
            "ndg.saml.utils.ssl_context",
            "ndg.saml.xml",
            "ndg.saml.xml.etree",
            "ndg.saml.xml.etree_xacml_profile",
            "ndg.soap",
            "ndg.soap.client",
            "ndg.soap.etree",
            "ndg.soap.server",
            "ndg.soap.server.wsgi",
            "ndg.soap.server.wsgi.middleware",
            "ndg.soap.server.wsgi.zsi",
            "ndg.soap.test",
            "ndg.soap.test.soap_server",
            "ndg.soap.test.test_soap",
            "ndg.soap.utils",
            "ndg.soap.utils.configfileparsers",
            "ndg.soap.utils.etree"
        ],
        "version": "0.8.3"
    },
    "ndg-xacml": {
        "cmdline": [],
        "modules": [
            "ndg",
            "ndg.xacml",
            "ndg.xacml.core",
            "ndg.xacml.core.action",
            "ndg.xacml.core.apply",
            "ndg.xacml.core.attribute",
            "ndg.xacml.core.attributedesignator",
            "ndg.xacml.core.attributeselector",
            "ndg.xacml.core.attributevalue",
            "ndg.xacml.core.combinerparameter",
            "ndg.xacml.core.condition",
            "ndg.xacml.core.context",
            "ndg.xacml.core.context.action",
            "ndg.xacml.core.context.environment",
            "ndg.xacml.core.context.exceptions",
            "ndg.xacml.core.context.handler",
            "ndg.xacml.core.context.handlerinterface",
            "ndg.xacml.core.context.pap",
            "ndg.xacml.core.context.pdp",
            "ndg.xacml.core.context.pdpinterface",
            "ndg.xacml.core.context.pip",
            "ndg.xacml.core.context.pipinterface",
            "ndg.xacml.core.context.request",
            "ndg.xacml.core.context.resource",
            "ndg.xacml.core.context.response",
            "ndg.xacml.core.context.result",
            "ndg.xacml.core.context.subject",
            "ndg.xacml.core.environment",
            "ndg.xacml.core.expression",
            "ndg.xacml.core.functions",
            "ndg.xacml.core.functions.v1",
            "ndg.xacml.core.functions.v1.and",
            "ndg.xacml.core.functions.v1.at_least_one_member_of",
            "ndg.xacml.core.functions.v1.bag",
            "ndg.xacml.core.functions.v1.equal",
            "ndg.xacml.core.functions.v1.match",
            "ndg.xacml.core.functions.v1.not",
            "ndg.xacml.core.functions.v1.one_and_only",
            "ndg.xacml.core.functions.v1.regexp_match",
            "ndg.xacml.core.functions.v1.round",
            "ndg.xacml.core.functions.v2",
            "ndg.xacml.core.functions.v2.concatenate",
            "ndg.xacml.core.functions.v2.regexp_match",
            "ndg.xacml.core.match",
            "ndg.xacml.core.obligation",
            "ndg.xacml.core.policy",
            "ndg.xacml.core.policy_combining_alg",
            "ndg.xacml.core.policybase",
            "ndg.xacml.core.policydefaults",
            "ndg.xacml.core.policyset",
            "ndg.xacml.core.resource",
            "ndg.xacml.core.rule",
            "ndg.xacml.core.rule_combining_alg",
            "ndg.xacml.core.subject",
            "ndg.xacml.core.target",
            "ndg.xacml.core.variabledefinition",
            "ndg.xacml.core.variablereference",
            "ndg.xacml.finder",
            "ndg.xacml.finder.defaultfinder",
            "ndg.xacml.finder.localpolicyfinder",
            "ndg.xacml.finder.policyfinderbase",
            "ndg.xacml.finder.urlpolicyfinder",
            "ndg.xacml.parsers",
            "ndg.xacml.parsers.common",
            "ndg.xacml.parsers.etree",
            "ndg.xacml.parsers.etree.actionattributedesignatorreader",
            "ndg.xacml.parsers.etree.actionmatchreader",
            "ndg.xacml.parsers.etree.actionreader",
            "ndg.xacml.parsers.etree.applyreader",
            "ndg.xacml.parsers.etree.attributedesignatorreader",
            "ndg.xacml.parsers.etree.attributeselectorreader",
            "ndg.xacml.parsers.etree.attributevaluereader",
            "ndg.xacml.parsers.etree.conditionreader",
            "ndg.xacml.parsers.etree.context",
            "ndg.xacml.parsers.etree.environmentreader",
            "ndg.xacml.parsers.etree.expressionreader",
            "ndg.xacml.parsers.etree.factory",
            "ndg.xacml.parsers.etree.matchreader",
            "ndg.xacml.parsers.etree.policybasereader",
            "ndg.xacml.parsers.etree.policydefaultsreader",
            "ndg.xacml.parsers.etree.policyreader",
            "ndg.xacml.parsers.etree.policysetreader",
            "ndg.xacml.parsers.etree.reader",
            "ndg.xacml.parsers.etree.resourceattributedesignatorreader",
            "ndg.xacml.parsers.etree.resourcematchreader",
            "ndg.xacml.parsers.etree.resourcereader",
            "ndg.xacml.parsers.etree.rulereader",
            "ndg.xacml.parsers.etree.subjectattributedesignatorreader",
            "ndg.xacml.parsers.etree.subjectmatchreader",
            "ndg.xacml.parsers.etree.subjectreader",
            "ndg.xacml.parsers.etree.targetchildreader",
            "ndg.xacml.parsers.etree.targetreader",
            "ndg.xacml.parsers.etree.writer",
            "ndg.xacml.test",
            "ndg.xacml.test.cmip5_policyset",
            "ndg.xacml.test.context",
            "ndg.xacml.test.context.test_context",
            "ndg.xacml.test.context.test_pdp",
            "ndg.xacml.test.context.test_pdp_cmip5",
            "ndg.xacml.test.context.test_pdp_cmip5_opendap_only",
            "ndg.xacml.test.context.test_pdp_cmip5_policyset",
            "ndg.xacml.test.context.test_pdp_faam",
            "ndg.xacml.test.context.test_pdp_faam_policyset",
            "ndg.xacml.test.context.test_pdp_with_attributeselector",
            "ndg.xacml.test.context.test_pdp_with_custom_attributevalue_types",
            "ndg.xacml.test.context.test_pdp_with_first_applicable_rule_combining_algorithm",
            "ndg.xacml.test.context.test_pdp_with_match_combinations",
            "ndg.xacml.test.context.test_pdp_with_policy_set_internal_references",
            "ndg.xacml.test.context.test_pdp_with_policy_set_nested_only",
            "ndg.xacml.test.context.test_pdp_with_policy_set_url_references",
            "ndg.xacml.test.faam_policyset",
            "ndg.xacml.test.functions",
            "ndg.xacml.test.functions.test_custom_function",
            "ndg.xacml.test.functions.test_logical_functions",
            "ndg.xacml.test.functions.test_string_functions",
            "ndg.xacml.test.policy",
            "ndg.xacml.test.policy.test_policy",
            "ndg.xacml.test.test_functions",
            "ndg.xacml.utils",
            "ndg.xacml.utils.etree",
            "ndg.xacml.utils.factory",
            "ndg.xacml.utils.urlfetcher",
            "ndg.xacml.utils.xpath_selector"
        ],
        "version": "0.5.1"
    },
    "ndi-formatter": {
        "cmdline": [],
        "modules": [
            "ndi_formatter",
            "ndi_formatter.attributes",
            "ndi_formatter.format",
            "ndi_formatter.lookup",
            "ndi_formatter.utils",
            "ndi_formatter.validate"
        ],
        "version": "1.0.1"
    },
    "ndic": {
        "cmdline": [],
        "modules": [
            "ndic",
            "ndic.constants",
            "ndic.exceptions",
            "ndic.scripts",
            "ndic.scripts.search",
            "ndic.search",
            "ndic.tests",
            "ndic.tests.scripts",
            "ndic.tests.scripts.test_search",
            "ndic.tests.test_search",
            "ndic.utils"
        ],
        "version": "1.8"
    },
    "ndict": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "ndim": {
        "cmdline": [],
        "modules": [
            "ndim",
            "ndim_arc",
            "ndim_base",
            "ndim_bezier"
        ],
        "version": "0.4"
    },
    "ndio": {
        "cmdline": [],
        "modules": [
            "ndio",
            "ndio.convert",
            "ndio.convert.blosc",
            "ndio.convert.convert",
            "ndio.convert.hdf5",
            "ndio.convert.nifti",
            "ndio.convert.png",
            "ndio.convert.tiff",
            "ndio.convert.volume",
            "ndio.ramon",
            "ndio.ramon.RAMONBase",
            "ndio.ramon.RAMONGeneric",
            "ndio.ramon.RAMONNeuron",
            "ndio.ramon.RAMONOrganelle",
            "ndio.ramon.RAMONSegment",
            "ndio.ramon.RAMONSynapse",
            "ndio.ramon.RAMONVolume",
            "ndio.ramon.enums",
            "ndio.ramon.errors",
            "ndio.remote",
            "ndio.remote.Remote",
            "ndio.remote.errors",
            "ndio.remote.grute",
            "ndio.remote.ndingest",
            "ndio.remote.neurodata",
            "ndio.utils",
            "ndio.utils.mesh",
            "ndio.utils.parallel"
        ],
        "version": "1.1.6"
    },
    "ndjson-testrunner": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "ndl": {
        "cmdline": [],
        "modules": [
            "ndl",
            "ndl.cli",
            "ndl.filters",
            "ndl.utils"
        ],
        "version": "0.2"
    },
    "ndlib": {
        "cmdline": [],
        "modules": [
            "ndlib",
            "ndlib.models",
            "ndlib.models.DiffusionModel",
            "ndlib.models.ModelConfig",
            "ndlib.models.epidemics",
            "ndlib.models.epidemics.IndependentCascadesModel",
            "ndlib.models.epidemics.KerteszThresholdModel",
            "ndlib.models.epidemics.ProfileModel",
            "ndlib.models.epidemics.ProfileThresholdModel",
            "ndlib.models.epidemics.SIModel",
            "ndlib.models.epidemics.SIRModel",
            "ndlib.models.epidemics.SISModel",
            "ndlib.models.epidemics.ThresholdModel",
            "ndlib.models.opinions",
            "ndlib.models.opinions.CognitiveOpDynModel",
            "ndlib.models.opinions.MajorityRuleModel",
            "ndlib.models.opinions.QVoterModel",
            "ndlib.models.opinions.SznajdModel",
            "ndlib.models.opinions.VoterModel",
            "ndlib.viz",
            "ndlib.viz.DiffusionTrend"
        ],
        "version": "2.0"
    },
    "ndmapper": {
        "cmdline": [],
        "modules": [
            "astropy_helpers",
            "astropy_helpers.commands",
            "astropy_helpers.commands.build_ext",
            "astropy_helpers.commands.build_py",
            "astropy_helpers.commands.build_sphinx",
            "astropy_helpers.commands.install",
            "astropy_helpers.commands.install_lib",
            "astropy_helpers.commands.register",
            "astropy_helpers.commands.setup_package",
            "astropy_helpers.compat",
            "astropy_helpers.compat._subprocess_py2",
            "astropy_helpers.compat.subprocess",
            "astropy_helpers.distutils_helpers",
            "astropy_helpers.git_helpers",
            "astropy_helpers.setup_helpers",
            "astropy_helpers.sphinx",
            "astropy_helpers.sphinx.conf",
            "astropy_helpers.sphinx.ext",
            "astropy_helpers.sphinx.ext.astropyautosummary",
            "astropy_helpers.sphinx.ext.autodoc_enhancements",
            "astropy_helpers.sphinx.ext.automodapi",
            "astropy_helpers.sphinx.ext.automodsumm",
            "astropy_helpers.sphinx.ext.changelog_links",
            "astropy_helpers.sphinx.ext.comment_eater",
            "astropy_helpers.sphinx.ext.compiler_unparse",
            "astropy_helpers.sphinx.ext.docscrape",
            "astropy_helpers.sphinx.ext.docscrape_sphinx",
            "astropy_helpers.sphinx.ext.doctest",
            "astropy_helpers.sphinx.ext.edit_on_github",
            "astropy_helpers.sphinx.ext.numpydoc",
            "astropy_helpers.sphinx.ext.phantom_import",
            "astropy_helpers.sphinx.ext.smart_resolver",
            "astropy_helpers.sphinx.ext.tests",
            "astropy_helpers.sphinx.ext.tests.test_autodoc_enhancements",
            "astropy_helpers.sphinx.ext.tests.test_automodapi",
            "astropy_helpers.sphinx.ext.tests.test_automodsumm",
            "astropy_helpers.sphinx.ext.tests.test_docscrape",
            "astropy_helpers.sphinx.ext.tests.test_utils",
            "astropy_helpers.sphinx.ext.tocdepthfix",
            "astropy_helpers.sphinx.ext.traitsdoc",
            "astropy_helpers.sphinx.ext.utils",
            "astropy_helpers.sphinx.ext.viewcode",
            "astropy_helpers.sphinx.setup_package",
            "astropy_helpers.test_helpers",
            "astropy_helpers.tests",
            "astropy_helpers.tests.test_ah_bootstrap",
            "astropy_helpers.tests.test_git_helpers",
            "astropy_helpers.tests.test_setup_helpers",
            "astropy_helpers.utils",
            "astropy_helpers.version",
            "astropy_helpers.version_helpers",
            "ndmapper",
            "ndmapper._astropy_init",
            "ndmapper.calibrations",
            "ndmapper.conftest",
            "ndmapper.data",
            "ndmapper.io",
            "ndmapper.io._fits",
            "ndmapper.io._util",
            "ndmapper.io.formats",
            "ndmapper.io.io",
            "ndmapper.io.mapio",
            "ndmapper.iraf_db",
            "ndmapper.iraf_task",
            "ndmapper.lib",
            "ndmapper.lib.cosmetics",
            "ndmapper.lib.fitting",
            "ndmapper.lib.gemini",
            "ndmapper.lib.gmos",
            "ndmapper.lib.gmos.gmos",
            "ndmapper.lib.gmos.spec",
            "ndmapper.lib.gmos.spec.ifu",
            "ndmapper.lib.gmos.spec.spec",
            "ndmapper.libutils",
            "ndmapper.services",
            "ndmapper.tests",
            "ndmapper.tests.setup_package",
            "ndmapper.tests.test_data",
            "ndmapper.utils",
            "ndmapper.version"
        ],
        "version": "0.2"
    },
    "ndmg": {
        "cmdline": [],
        "modules": [
            "ndmg",
            "ndmg.graph",
            "ndmg.graph.graph",
            "ndmg.preproc",
            "ndmg.preproc.rescale_bvec",
            "ndmg.register",
            "ndmg.register.register",
            "ndmg.scripts",
            "ndmg.scripts.multigraph_pipeline",
            "ndmg.scripts.ndmg_bids",
            "ndmg.scripts.ndmg_pipeline",
            "ndmg.scripts.ndmg_setup",
            "ndmg.stats",
            "ndmg.stats.graph_qc",
            "ndmg.stats.plotly_multiplot",
            "ndmg.stats.plotly_panels",
            "ndmg.track",
            "ndmg.track.track",
            "ndmg.utils",
            "ndmg.utils.bids_s3",
            "ndmg.utils.loadGraphs",
            "ndmg.utils.mri_autoingest",
            "ndmg.utils.nifti_to_binary",
            "ndmg.utils.nifti_to_png",
            "ndmg.utils.utils"
        ],
        "version": "0.1.0"
    },
    "ndmtk": {
        "cmdline": [],
        "modules": [
            "ndmtk"
        ],
        "version": "0.1.8"
    },
    "ndparse": {
        "cmdline": [],
        "modules": [
            "ndparse",
            "ndparse.algorithms",
            "ndparse.algorithms.algorithms",
            "ndparse.algorithms.nddl",
            "ndparse.algorithms.sobol_lib",
            "ndparse.annotate",
            "ndparse.annotate.annotate",
            "ndparse.assess",
            "ndparse.assess.assess",
            "ndparse.deploy",
            "ndparse.utils",
            "ndparse.utils.utils"
        ],
        "version": "0.0.7"
    },
    "ndrive": {
        "cmdline": [],
        "modules": [
            "ndrive",
            "ndrive.auth",
            "ndrive.client",
            "ndrive.cmdline",
            "ndrive.file",
            "ndrive.models",
            "ndrive.urls",
            "ndrive.utils"
        ],
        "version": "0.1.0"
    },
    "ndserviceregistry": {
        "cmdline": [],
        "modules": [
            "ndServiceRegistry",
            "ndServiceRegistry.exceptions",
            "ndServiceRegistry.funcs",
            "ndServiceRegistry.registration",
            "ndServiceRegistry.shims",
            "ndServiceRegistry.version",
            "ndServiceRegistry.watcher"
        ],
        "version": "0.1.1"
    },
    "ndt": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ndtree": {
        "cmdline": [],
        "modules": [
            "ndtree",
            "ndtree.ndTree"
        ],
        "version": "0.1"
    },
    "ndtypes": {
        "cmdline": [],
        "modules": [
            "ndtypes",
            "ndtypes.ndt",
            "ndtypes.ndt.dim_helpers",
            "ndtypes.ndt.dynd_ctypes",
            "ndtypes.ndt.test",
            "ndtypes.ndt.test.test_dim_helpers",
            "ndtypes.ndt.test.test_dtype",
            "ndtypes.ndt.test.test_dtype_datashape",
            "ndtypes.ndt.test.test_type_basics",
            "ndtypes.ndt.test.test_type_pattern_match"
        ],
        "version": "0.1.0"
    },
    "ne": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nea-api": {
        "cmdline": [],
        "modules": [
            "nea_api"
        ],
        "version": "0.1.2"
    },
    "nealpan-nester": {
        "cmdline": [],
        "modules": [
            "nealpan_nester"
        ],
        "version": "1.2.3"
    },
    "near": {
        "cmdline": [],
        "modules": [
            "near"
        ],
        "version": "1.3.0"
    },
    "nearby": {
        "cmdline": [],
        "modules": [
            "nearby",
            "nearby.actions",
            "nearby.config",
            "nearby.exceptions"
        ],
        "version": "0.1.3"
    },
    "nearchus": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nearduplicatesdetection": {
        "cmdline": [],
        "modules": [
            "ndd",
            "ndd.detector",
            "ndd.ndd",
            "ndd.ndindex",
            "ndd.ngram",
            "ndd.unit",
            "ndd.unit.ndindex_spec",
            "ndd.unit.ngram_spec",
            "ndd.unit.spec_runner"
        ],
        "version": "0.2.0"
    },
    "nearest": {
        "cmdline": [],
        "modules": [
            "nearest"
        ],
        "version": "0.1.0"
    },
    "nearpy": {
        "cmdline": [],
        "modules": [
            "nearpy",
            "nearpy.distances",
            "nearpy.distances.cosine",
            "nearpy.distances.distance",
            "nearpy.distances.euclidean",
            "nearpy.distances.manhattan",
            "nearpy.engine",
            "nearpy.experiments",
            "nearpy.experiments.distanceratioexperiment",
            "nearpy.experiments.recallprecisionexperiment",
            "nearpy.filters",
            "nearpy.filters.distancethresholdfilter",
            "nearpy.filters.nearestfilter",
            "nearpy.filters.uniquefilter",
            "nearpy.filters.vectorfilter",
            "nearpy.hashes",
            "nearpy.hashes.lshash",
            "nearpy.hashes.pcabinaryprojections",
            "nearpy.hashes.pcadiscretizedprojections",
            "nearpy.hashes.permutation",
            "nearpy.hashes.permutation.hashpermutationmapper",
            "nearpy.hashes.permutation.hashpermutations",
            "nearpy.hashes.permutation.permutation",
            "nearpy.hashes.permutation.permute",
            "nearpy.hashes.permutation.permutedIndex",
            "nearpy.hashes.randombinaryprojections",
            "nearpy.hashes.randombinaryprojectiontree",
            "nearpy.hashes.randomdiscretizedprojections",
            "nearpy.hashes.unibucket",
            "nearpy.storage",
            "nearpy.storage.storage",
            "nearpy.storage.storage_memory",
            "nearpy.storage.storage_mongo",
            "nearpy.storage.storage_pickle",
            "nearpy.storage.storage_redis",
            "nearpy.utils",
            "nearpy.utils.utils"
        ],
        "version": "1.0.0"
    },
    "nearside": {
        "cmdline": [],
        "modules": [
            "nearside",
            "nearside.cylindrical",
            "nearside.cylindrical.structures",
            "nearside.file_handler",
            "nearside.planar",
            "nearside.planar.structures",
            "nearside.probe",
            "nearside.spherical",
            "nearside.spherical.low_level",
            "nearside.spherical.standard_operations",
            "nearside.spherical.structures"
        ],
        "version": "0.0.1"
    },
    "nearst": {
        "cmdline": [],
        "modules": [
            "nearst"
        ],
        "version": "1.0.0"
    },
    "neaster": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "neaster2": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.1"
    },
    "neat": {
        "cmdline": [],
        "modules": [
            "neat",
            "neat._ext",
            "neat.errors",
            "neat.ext",
            "neat.neat",
            "neat.util",
            "tests",
            "tests.test_docs",
            "tests.test_neat"
        ],
        "version": "0.4.1"
    },
    "neat-python": {
        "cmdline": [],
        "modules": [
            "neat",
            "neat.activations",
            "neat.attributes",
            "neat.checkpoint",
            "neat.config",
            "neat.genes",
            "neat.genome",
            "neat.graphs",
            "neat.indexer",
            "neat.math_util",
            "neat.parallel",
            "neat.population",
            "neat.reporting",
            "neat.reproduction",
            "neat.six_util",
            "neat.species",
            "neat.stagnation",
            "neat.statistics",
            "neat/ctrnn",
            "neat/iznn",
            "neat/nn",
            "neat/nn.feed_forward",
            "neat/nn.recurrent"
        ],
        "version": "0.91"
    },
    "neater": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neb": {
        "cmdline": [],
        "modules": [
            "neb"
        ],
        "version": "0.0.1"
    },
    "nebfa": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "nebgb": {
        "cmdline": [],
        "modules": [
            "regressions",
            "regressions.._bad-qualifiers-1-0",
            "regressions.._bad-reference-0",
            "regressions.bad-qualifiers-1-0",
            "regressions.bad-qualifiers-2-0",
            "regressions.bad-qualifiers-3-0",
            "regressions.bad-reference-0",
            "regressions.base-counts-1-0",
            "regressions.base-counts-2-0",
            "regressions.base-counts-3-0",
            "regressions.base-counts-4-0",
            "regressions.bond-0",
            "regressions.contig-0",
            "regressions.empty-seq-line-0",
            "regressions.fuzzy-0",
            "regressions.keywords-0",
            "regressions.multiple-records-0",
            "regressions.multiple-records-1",
            "regressions.multiple-records-2",
            "regressions.multiple-records-3",
            "regressions.multiple-records-4",
            "regressions.multiple-records-5",
            "regressions.one-of-0",
            "regressions.order-0",
            "regressions.primary-1-0",
            "regressions.primary-2-0",
            "regressions.primary-3-0",
            "regressions.segment-0",
            "regressions.simple-1-0",
            "regressions.simple-2-0",
            "regressions.stem-loop-0"
        ],
        "version": "0.1.2"
    },
    "nebgbdiff": {
        "cmdline": [],
        "modules": [
            "nebgbdiff",
            "nebgbdiff..___init__",
            "nebgbdiff.._location",
            "nebgbdiff.._main",
            "nebgbdiff.._merge",
            "nebgbdiff.._meta",
            "nebgbdiff.._sequence",
            "nebgbdiff.location",
            "nebgbdiff.main",
            "nebgbdiff.merge",
            "nebgbdiff.meta",
            "nebgbdiff.sequence"
        ],
        "version": "0.0.4"
    },
    "nebgbhist": {
        "cmdline": [],
        "modules": [
            "nebgbhist",
            "nebgbhist..___init__",
            "nebgbhist.._apply",
            "nebgbhist.._fetch",
            "nebgbhist.._history",
            "nebgbhist.._validate",
            "nebgbhist.apply",
            "nebgbhist.fetch",
            "nebgbhist.history",
            "nebgbhist.validate"
        ],
        "version": "0.0.5"
    },
    "nebooman": {
        "cmdline": [],
        "modules": [
            "nebooman",
            "nebooman.manager"
        ],
        "version": "0.1"
    },
    "nebpack": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "nebseq": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "nebuchadnezzar": {
        "cmdline": [],
        "modules": [
            "nebu",
            "nebu.cli",
            "nebu.cli.main",
            "nebu.logger",
            "nebu.tests",
            "nebu.tests.cli",
            "nebu.tests.cli.scanned_import",
            "nebu.tests.cli.scanned_import.module1",
            "nebu.tests.cli.scanned_import.module2",
            "nebu.tests.cli.test_main",
            "nebu.tests.conftest"
        ],
        "version": "1.0.0"
    },
    "nebula": {
        "cmdline": [],
        "modules": [
            "nebula",
            "nebula.api",
            "nebula.conf"
        ],
        "version": "0.0.2"
    },
    "nebulizer": {
        "cmdline": [],
        "modules": [
            "nebulizer",
            "nebulizer.cli",
            "nebulizer.core",
            "nebulizer.deprecated_cli",
            "nebulizer.libraries",
            "nebulizer.tools",
            "nebulizer.users"
        ],
        "version": "0.4.1"
    },
    "nec-pd-sdk": {
        "cmdline": [],
        "modules": [
            "nec_pd_sdk",
            "nec_pd_sdk.constants",
            "nec_pd_sdk.nec_pd_sdk",
            "nec_pd_sdk.opcode_decoding",
            "nec_pd_sdk.protocol"
        ],
        "version": "17.4.61"
    },
    "nece": {
        "cmdline": [],
        "modules": [
            "nece",
            "nece.exceptions",
            "nece.managers",
            "nece.models",
            "nece.tests"
        ],
        "version": "0.6.1"
    },
    "nechaev": {
        "cmdline": [],
        "modules": [
            "Nechaev"
        ],
        "version": "0.1.0"
    },
    "neck": {
        "cmdline": [],
        "modules": [
            "neck"
        ],
        "version": "1.0.0"
    },
    "necpp": {
        "cmdline": [],
        "modules": [
            "necpp"
        ],
        "version": "1.7.0.3"
    },
    "nectar": {
        "cmdline": [],
        "modules": [
            "nectar",
            "nectar.controller"
        ],
        "version": "0.1"
    },
    "nedda": {
        "cmdline": [],
        "modules": [
            "nedda",
            "nedda.staging"
        ],
        "version": "0.2"
    },
    "neddy": {
        "cmdline": [],
        "modules": [
            "neddy",
            "neddy.__version__",
            "neddy._basesearch",
            "neddy.cl_utils",
            "neddy.commonutils",
            "neddy.commonutils.getpackagepath",
            "neddy.conesearch",
            "neddy.namesearch",
            "neddy.tests",
            "neddy.tests.test__basesearch",
            "neddy.tests.test_conesearch",
            "neddy.tests.test_namesearch",
            "neddy.utKit"
        ],
        "version": "0.2.2"
    },
    "nedi": {
        "cmdline": [],
        "modules": [
            "nedi"
        ],
        "version": "1.0.3"
    },
    "nedry-pass": {
        "cmdline": [],
        "modules": [
            "nedry_pass",
            "nedry_pass._main"
        ],
        "version": "0.0.6"
    },
    "need": {
        "cmdline": [],
        "modules": [
            "need",
            "need.test"
        ],
        "version": "0.1"
    },
    "needforcryptography": {
        "cmdline": [],
        "modules": [
            "crypto",
            "crypto.asymmetric",
            "crypto.asymmetric.diffie_hellman_exchange",
            "crypto.asymmetric.rsa",
            "crypto.run_tests",
            "crypto.symmetric",
            "crypto.symmetric.caeser",
            "crypto.symmetric.des",
            "crypto.symmetric.des3",
            "crypto.symmetric.feistel",
            "crypto.symmetric.hill",
            "crypto.symmetric.playfair",
            "crypto.symmetric.rc6",
            "crypto.tools",
            "crypto.tools.discretelog",
            "crypto.tools.doubledict",
            "crypto.tools.el_gamal_signature",
            "crypto.tools.primes",
            "crypto.tools.shamir_sharing_scheme",
            "crypto.tools.utilities"
        ],
        "version": "1.05"
    },
    "needle": {
        "cmdline": [],
        "modules": [
            "needle",
            "needle.cases",
            "needle.driver",
            "needle.engines",
            "needle.engines.base",
            "needle.engines.imagemagick_engine",
            "needle.engines.perceptualdiff_engine",
            "needle.engines.pil_engine",
            "needle.js",
            "needle.plugin"
        ],
        "version": "0.5.0"
    },
    "needle-in-haystack": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.5"
    },
    "needles": {
        "cmdline": [],
        "modules": [
            "needles",
            "needles.Code",
            "needles.Kind",
            "needles.Seq",
            "needles.Sequences",
            "needles.needles",
            "needles.needles_pb2",
            "needles.pbjson"
        ],
        "version": "0.0.2"
    },
    "needlesearch": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "needs": {
        "cmdline": [],
        "modules": [
            "needs",
            "needs.base"
        ],
        "version": "1.0.9"
    },
    "needy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neeha-test": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "neehi": {
        "cmdline": [],
        "modules": [
            "neehi",
            "neehi.cm"
        ],
        "version": "2.0.1"
    },
    "nees": {
        "cmdline": [],
        "modules": [
            "nees"
        ],
        "version": "1.3.0"
    },
    "neester": {
        "cmdline": [],
        "modules": [
            "neester"
        ],
        "version": "1.0.0"
    },
    "nefedov": {
        "cmdline": [],
        "modules": [
            "Nefedov"
        ],
        "version": "0.1.0"
    },
    "nefelibata": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nefertari": {
        "cmdline": [],
        "modules": [
            "nefertari",
            "nefertari.acl",
            "nefertari.authentication",
            "nefertari.authentication.models",
            "nefertari.authentication.policies",
            "nefertari.authentication.views",
            "nefertari.elasticsearch",
            "nefertari.engine",
            "nefertari.events",
            "nefertari.json_httpexceptions",
            "nefertari.logstash",
            "nefertari.polymorphic",
            "nefertari.renderers",
            "nefertari.resource",
            "nefertari.scaffolds",
            "nefertari.scripts",
            "nefertari.scripts.es",
            "nefertari.scripts.post2api",
            "nefertari.scripts.scaffold_test",
            "nefertari.tweens",
            "nefertari.utils",
            "nefertari.utils.data",
            "nefertari.utils.dictset",
            "nefertari.utils.utils",
            "nefertari.view",
            "nefertari.view_helpers",
            "nefertari.wrappers",
            "tests",
            "views"
        ],
        "version": "0.7.0"
    },
    "nefertari-guards": {
        "cmdline": [],
        "modules": [
            "nefertari_guards",
            "nefertari_guards.acl",
            "nefertari_guards.acl_utils",
            "nefertari_guards.base",
            "nefertari_guards.documents",
            "nefertari_guards.elasticsearch",
            "nefertari_guards.engine",
            "nefertari_guards.nefertari_mongodb",
            "nefertari_guards.nefertari_sqla",
            "nefertari_guards.scripts",
            "nefertari_guards.scripts.count_ace",
            "nefertari_guards.scripts.script_utils",
            "nefertari_guards.scripts.update_ace",
            "nefertari_guards.view",
            "tests",
            "tests.test_acl_utils",
            "tests.test_base",
            "tests.test_count_ace_script",
            "tests.test_documents",
            "tests.test_elasticsearch",
            "tests.test_nefertari_sqla",
            "tests.test_script_utils",
            "tests.test_update_ace_script",
            "tests.test_view"
        ],
        "version": "0.2.0"
    },
    "nefertari-mongodb": {
        "cmdline": [],
        "modules": [
            "nefertari_mongodb",
            "nefertari_mongodb.documents",
            "nefertari_mongodb.fields",
            "nefertari_mongodb.metaclasses",
            "nefertari_mongodb.serializers",
            "nefertari_mongodb.signals",
            "nefertari_mongodb.tests",
            "nefertari_mongodb.tests.test_documents",
            "nefertari_mongodb.utils"
        ],
        "version": "0.4.2"
    },
    "nefertari-sqla": {
        "cmdline": [],
        "modules": [
            "nefertari_sqla",
            "nefertari_sqla.documents",
            "nefertari_sqla.fields",
            "nefertari_sqla.serializers",
            "nefertari_sqla.signals",
            "nefertari_sqla.tests",
            "nefertari_sqla.tests.fixtures",
            "nefertari_sqla.tests.test_documents",
            "nefertari_sqla.tests.test_types",
            "nefertari_sqla.types",
            "nefertari_sqla.utils"
        ],
        "version": "0.4.2"
    },
    "nefis": {
        "cmdline": [],
        "modules": [
            "nefis",
            "tests",
            "tests.nefis_attributes",
            "tests.nefis_define",
            "tests.nefis_doc_strings",
            "tests.nefis_get_headers",
            "tests.nefis_getels_strings",
            "tests.nefis_getelt_floats",
            "tests.nefis_getelt_integers",
            "tests.nefis_inquire",
            "tests.nefis_putels_strings",
            "tests.nefis_putelt_floats",
            "tests.nefis_putelt_integers"
        ],
        "version": "0.2.1"
    },
    "nefit-client": {
        "cmdline": [],
        "modules": [
            "nefit",
            "nefit.cli"
        ],
        "version": "0.2.2"
    },
    "negaposianalyzer": {
        "cmdline": [],
        "modules": [
            "NegaPosiAnalyzer",
            "NegaPosiAnalyzer.evaluate"
        ],
        "version": "0.0.2"
    },
    "negar-cli": {
        "cmdline": [],
        "modules": [
            "negar_cli",
            "negar_cli.cli",
            "negar_cli.helpers",
            "negar_cli.version"
        ],
        "version": "1.0.1"
    },
    "nego": {
        "cmdline": [],
        "modules": [
            "nego",
            "nego.media_type",
            "nego.renderer",
            "tests",
            "tests.test_content_negotiation",
            "tests.test_mediatype"
        ],
        "version": "0.1.0"
    },
    "negotiate": {
        "cmdline": [],
        "modules": [
            "negotiate",
            "negotiate.compat",
            "negotiate.flask",
            "negotiate.pylons",
            "tests",
            "tests.helpers",
            "tests.test_negotiate"
        ],
        "version": "0.0.1"
    },
    "negotiator": {
        "cmdline": [],
        "modules": [
            "negotiator",
            "negotiator.negotiator"
        ],
        "version": "1.0.0"
    },
    "negotiator-3k": {
        "cmdline": [],
        "modules": [
            "negotiator",
            "negotiator.negotiator"
        ],
        "version": "1.0.0"
    },
    "negotiator-common": {
        "cmdline": [],
        "modules": [
            "negotiator_common",
            "negotiator_common.config",
            "negotiator_common.utils"
        ],
        "version": "0.8.4"
    },
    "negotiator-guest": {
        "cmdline": [],
        "modules": [
            "negotiator_guest",
            "negotiator_guest.cli"
        ],
        "version": "0.8.4"
    },
    "negotiator-host": {
        "cmdline": [],
        "modules": [
            "negotiator_host",
            "negotiator_host.cli"
        ],
        "version": "0.8.4"
    },
    "negro": {
        "cmdline": [],
        "modules": [
            "negro"
        ],
        "version": "0.1.0"
    },
    "negspy": {
        "cmdline": [
            "chr_pos_to_genome_pos.py",
            "make_triangular.py"
        ],
        "modules": [
            "negspy",
            "negspy.coordinates"
        ],
        "version": "0.2.5"
    },
    "neighborhoodize": {
        "cmdline": [],
        "modules": [
            "neighborhoodize",
            "neighborhoodize.city_of_chicago",
            "neighborhoodize.common",
            "neighborhoodize.constants",
            "neighborhoodize.kml_parsers",
            "neighborhoodize.nyc",
            "neighborhoodize.zillow"
        ],
        "version": "0.9.5"
    },
    "neighborhoods": {
        "cmdline": [],
        "modules": [
            "neighborhoods",
            "neighborhoods.neighborhoods"
        ],
        "version": "0.5"
    },
    "neiqian": {
        "cmdline": [],
        "modules": [
            "neiqian"
        ],
        "version": "1.6.0"
    },
    "neith": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nejgit": {
        "cmdline": [],
        "modules": [
            "nejgit",
            "nejgit.scripts",
            "nejgit.scripts.canonical_path",
            "nejgit.scripts.current_branch",
            "nejgit.scripts.log",
            "nejgit.scripts.meld"
        ],
        "version": "0.1"
    },
    "nejimaki": {
        "cmdline": [],
        "modules": [
            "nejimaki",
            "nejimaki.cmd"
        ],
        "version": "0.1.2"
    },
    "nekbot": {
        "cmdline": [],
        "modules": [
            "nekbot",
            "nekbot.conf",
            "nekbot.conf.global_settings",
            "nekbot.core",
            "nekbot.core.commands",
            "nekbot.core.commands.argparse",
            "nekbot.core.commands.control",
            "nekbot.core.commands.doc",
            "nekbot.core.commands.temp",
            "nekbot.core.exceptions",
            "nekbot.core.handlers",
            "nekbot.core.management",
            "nekbot.core.modular",
            "nekbot.core.permissions",
            "nekbot.core.signals",
            "nekbot.core.types",
            "nekbot.core.types.argparse",
            "nekbot.core.types.filesystem",
            "nekbot.plugins",
            "nekbot.plugins.bot",
            "nekbot.plugins.commands",
            "nekbot.plugins.hello",
            "nekbot.plugins.plugin_template",
            "nekbot.plugins.test",
            "nekbot.protocols",
            "nekbot.protocols.base",
            "nekbot.protocols.base.event",
            "nekbot.protocols.base.group_chat",
            "nekbot.protocols.base.message",
            "nekbot.protocols.base.send",
            "nekbot.protocols.base.user",
            "nekbot.storage",
            "nekbot.storage.ejdb",
            "nekbot.storage.meuh",
            "nekbot.utils",
            "nekbot.utils.auth",
            "nekbot.utils.decorators",
            "nekbot.utils.filesystem",
            "nekbot.utils.human",
            "nekbot.utils.ints",
            "nekbot.utils.iter",
            "nekbot.utils.modules",
            "nekbot.utils.strings",
            "nekbot.utils.survey",
            "nekbot.utils.system",
            "nekbot.utils.threads",
            "nekbot.utils.timeutils",
            "plugins",
            "tests",
            "tests.argparse_tests",
            "tests.argparse_tests.tests",
            "tests.types",
            "tests.types.tests",
            "tests.utils_strings",
            "tests.utils_strings.tests"
        ],
        "version": "0.1.2.34"
    },
    "nekbot.plugins.geo": {
        "cmdline": [],
        "modules": [
            "nekbot",
            "nekbot.plugins",
            "nekbot.plugins.geo"
        ],
        "version": "0.2.0.4"
    },
    "nekbot.plugins.polls": {
        "cmdline": [],
        "modules": [
            "nekbot",
            "nekbot.plugins",
            "nekbot.plugins.polls"
        ],
        "version": "0.2.0.1"
    },
    "nekbot.plugins.random": {
        "cmdline": [],
        "modules": [
            "nekbot",
            "nekbot.plugins",
            "nekbot.plugins.random"
        ],
        "version": "1.0.2"
    },
    "nekbot.plugins.urls": {
        "cmdline": [],
        "modules": [
            "nekbot",
            "nekbot.plugins",
            "nekbot.plugins.urls",
            "nekbot.plugins.urls.generic",
            "nekbot.plugins.urls.meneame",
            "nekbot.plugins.urls.urlinfo",
            "nekbot.plugins.urls.youtube"
        ],
        "version": "0.1.0.1"
    },
    "nekbot.plugins.weather": {
        "cmdline": [],
        "modules": [
            "nekbot",
            "nekbot.plugins",
            "nekbot.plugins.weather"
        ],
        "version": "0.2.0.5"
    },
    "nekbot.protocols.irc": {
        "cmdline": [],
        "modules": [
            "nekbot",
            "nekbot.protocols",
            "nekbot.protocols.irc",
            "nekbot.protocols.irc.auth",
            "nekbot.protocols.irc.global_settings",
            "nekbot.protocols.irc.group_chat",
            "nekbot.protocols.irc.message",
            "nekbot.protocols.irc.user",
            "nekbot.protocols.irc.utils"
        ],
        "version": "0.1.0.16"
    },
    "nekbot.protocols.telegram": {
        "cmdline": [],
        "modules": [
            "nekbot",
            "nekbot.protocols",
            "nekbot.protocols.telegram",
            "nekbot.protocols.telegram.global_settings",
            "nekbot.protocols.telegram.group_chat",
            "nekbot.protocols.telegram.message",
            "nekbot.protocols.telegram.user"
        ],
        "version": "0.1.0.16"
    },
    "nekbot.protocols.xmpp": {
        "cmdline": [],
        "modules": [
            "nekbot",
            "nekbot.protocols",
            "nekbot.protocols.xmpp",
            "nekbot.protocols.xmpp.global_settings",
            "nekbot.protocols.xmpp.group_chat",
            "nekbot.protocols.xmpp.message",
            "nekbot.protocols.xmpp.user"
        ],
        "version": "0.1.0.7"
    },
    "nekpy": {
        "cmdline": [],
        "modules": [
            "nekpy",
            "nekpy._version",
            "nekpy.config",
            "nekpy.dask",
            "nekpy.dask.metal",
            "nekpy.dask.runner",
            "nekpy.dask.subgraph",
            "nekpy.dask.tasks",
            "nekpy.dask.utils",
            "nekpy.tools",
            "nekpy.tools.genrun",
            "nekpy.tools.log",
            "nekpy.tools.mesh",
            "nekpy.utils"
        ],
        "version": "0.0.4"
    },
    "nekrasov": {
        "cmdline": [],
        "modules": [
            "Nekrasov"
        ],
        "version": "0.1.0"
    },
    "nekrobox": {
        "cmdline": [],
        "modules": [
            "nekrobox",
            "nekrobox.docdecs",
            "nekrobox.nekrobox",
            "nekrobox.output",
            "nekrobox.path",
            "nekrobox.temp",
            "nekrobox.tree"
        ],
        "version": "0.6.0"
    },
    "nektar": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nekumo": {
        "cmdline": [
            "nekumo"
        ],
        "modules": [
            "nekumo",
            "nekumo.conf",
            "nekumo.conf.base",
            "nekumo.core",
            "nekumo.core.api",
            "nekumo.core.events",
            "nekumo.core.i18n",
            "nekumo.core.management",
            "nekumo.core.nekumo",
            "nekumo.core.pubsub",
            "nekumo.exceptions",
            "nekumo.gateways",
            "nekumo.gateways.base",
            "nekumo.gateways.fs",
            "nekumo.gateways.fs.watcher",
            "nekumo.ifaces",
            "nekumo.ifaces.angular_web",
            "nekumo.ifaces.angular_web.api",
            "nekumo.ifaces.angular_web.events",
            "nekumo.ifaces.angular_web.views",
            "nekumo.ifaces.base",
            "nekumo.ifaces.simple_web",
            "nekumo.ifaces.simple_web.api",
            "nekumo.ifaces.simple_web.exceptions",
            "nekumo.ifaces.simple_web.jinja",
            "nekumo.ifaces.simple_web.views",
            "nekumo.models",
            "nekumo.plugins",
            "nekumo.plugins.encode",
            "nekumo.plugins.thumbs",
            "nekumo.utils",
            "nekumo.utils.modules"
        ],
        "version": "0.1.2"
    },
    "nekumo-cloud": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nele": {
        "cmdline": [],
        "modules": [
            "nele"
        ],
        "version": "0.3.0"
    },
    "neleval": {
        "cmdline": [],
        "modules": [
            "neleval",
            "neleval.analyze",
            "neleval.annotation",
            "neleval.brat",
            "neleval.configs",
            "neleval.coref_adjust",
            "neleval.coref_metrics",
            "neleval.data",
            "neleval.document",
            "neleval.evaluate",
            "neleval.fetch_map",
            "neleval.filter",
            "neleval.formats",
            "neleval.import_",
            "neleval.interact",
            "neleval.munkres",
            "neleval.prepare",
            "neleval.rcv",
            "neleval.significance",
            "neleval.summary",
            "neleval.tac",
            "neleval.test",
            "neleval.test_coref_adjust",
            "neleval.utils",
            "neleval.weak",
            "neleval.wikipedia"
        ],
        "version": "3.0.3"
    },
    "nelkit": {
        "cmdline": [],
        "modules": [
            "nelkit",
            "nelkit.args",
            "nelkit.args.base",
            "nelkit.args.snmp",
            "nelkit.cli",
            "nelkit.cli.compare_configs",
            "nelkit.cli.snmp_deviceinfo",
            "nelkit.exceptions",
            "nelkit.globals",
            "nelkit.modules",
            "nelkit.modules.compare_configs",
            "nelkit.modules.compare_configs.settings",
            "nelkit.parsing",
            "nelkit.parsing.yaml",
            "nelkit.parsing.yaml.loader",
            "nelkit.snmp",
            "nelkit.snmp.handler"
        ],
        "version": "0.0.3"
    },
    "nelly": {
        "cmdline": [
            "nelly"
        ],
        "modules": [
            "nelly",
            "nelly.pack",
            "nelly.parser",
            "nelly.program",
            "nelly.sandbox",
            "nelly.scanner",
            "nelly.types"
        ],
        "version": "0.4.1"
    },
    "nelmon": {
        "cmdline": [],
        "modules": [
            "nelmon",
            "nelmon.args",
            "nelmon.args.base",
            "nelmon.args.notifier",
            "nelmon.args.plugin",
            "nelmon.cli",
            "nelmon.cli.check_admin_up_oper_down",
            "nelmon.cli.check_asa_connections",
            "nelmon.cli.check_environment",
            "nelmon.cli.check_uptime",
            "nelmon.cli.check_version",
            "nelmon.cli.notify_slack",
            "nelmon.common",
            "nelmon.constants",
            "nelmon.globals",
            "nelmon.snmp",
            "nelmon.snmp.args",
            "nelmon.snmp.handler",
            "nelmon.snmp.oids"
        ],
        "version": "1.3.5"
    },
    "nelnumetpy": {
        "cmdline": [],
        "modules": [
            "nelnumetpy"
        ],
        "version": "1.0.0"
    },
    "nelpy": {
        "cmdline": [],
        "modules": [
            "nelpy",
            "nelpy.all",
            "nelpy.decoding",
            "nelpy.filtering",
            "nelpy.hmmutils",
            "nelpy.io",
            "nelpy.io.cavaradossi",
            "nelpy.io.hc3",
            "nelpy.io.matlab",
            "nelpy.io.trodes",
            "nelpy.ipynb",
            "nelpy.min",
            "nelpy.objects",
            "nelpy.plotting",
            "nelpy.plotting.core",
            "nelpy.plotting.helpers",
            "nelpy.plotting.scalebar",
            "nelpy.plotting.utils",
            "nelpy.scoring",
            "nelpy.utils",
            "nelpy.version"
        ],
        "version": "0.0.97"
    },
    "nelsnmp": {
        "cmdline": [],
        "modules": [
            "nelsnmp",
            "nelsnmp.cisco_oids",
            "nelsnmp.errors",
            "nelsnmp.hostinfo",
            "nelsnmp.hostinfo.collect",
            "nelsnmp.hostinfo.device",
            "nelsnmp.hostinfo.version",
            "nelsnmp.oids",
            "nelsnmp.snmp",
            "nelsnmp.vendors",
            "nelsnmp.vendors.airespace",
            "nelsnmp.vendors.airespace.oids",
            "nelsnmp.vendors.alcatel",
            "nelsnmp.vendors.alcatel.versions",
            "nelsnmp.vendors.arista",
            "nelsnmp.vendors.arista.versions",
            "nelsnmp.vendors.cisco",
            "nelsnmp.vendors.cisco.oids",
            "nelsnmp.vendors.cisco.versions",
            "nelsnmp.vendors.ericsson",
            "nelsnmp.vendors.ericsson.versions",
            "nelsnmp.vendors.huawei",
            "nelsnmp.vendors.huawei.versions",
            "nelsnmp.vendors.juniper",
            "nelsnmp.vendors.juniper.versions",
            "nelsnmp.vendors.mappings",
            "nelsnmp.vendors.synology",
            "nelsnmp.vendors.synology.oids",
            "nelsnmp.vendors.synology.versions"
        ],
        "version": "0.2.5"
    },
    "nelson": {
        "cmdline": [],
        "modules": [
            "nelson",
            "nelson.abstract",
            "nelson.developer",
            "nelson.gtomscs",
            "nelson.sessionbuilder",
            "nelson.udacity",
            "nelson.uploadcallbacks"
        ],
        "version": "0.4.0"
    },
    "nemea-pycommon": {
        "cmdline": [],
        "modules": [
            "ip_prefix_search",
            "report2idea"
        ],
        "version": "1.0.10"
    },
    "nemea-pytrap": {
        "cmdline": [],
        "modules": [
            "test",
            "test.pytrapmodule_unittest",
            "test.unirectemplate_unittest"
        ],
        "version": "0.9.9"
    },
    "nemo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nemo-annotator-plugin": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "nemo-arethusa-plugin": {
        "cmdline": [],
        "modules": [
            "nemo_arethusa_plugin"
        ],
        "version": "0.0.1"
    },
    "nemo-oauth-plugin": {
        "cmdline": [],
        "modules": [
            "nemo_oauth_plugin"
        ],
        "version": "0.0.5"
    },
    "nemo-plokamos-plugin": {
        "cmdline": [],
        "modules": [
            "nemo_plokamos_plugin"
        ],
        "version": "0.0.20"
    },
    "nemo-templates": {
        "cmdline": [],
        "modules": [
            "nemo",
            "nemo.exceptions",
            "nemo.nodes",
            "nemo.parser"
        ],
        "version": "0.9.2"
    },
    "nemreader": {
        "cmdline": [],
        "modules": [
            "nemreader",
            "nemreader.nem_objects",
            "nemreader.nem_reader"
        ],
        "version": "0.2.0"
    },
    "nemster": {
        "cmdline": [],
        "modules": [
            "nest"
        ],
        "version": "1.0.0"
    },
    "nemu": {
        "cmdline": [],
        "modules": [
            "nemu",
            "nemu.environ",
            "nemu.interface",
            "nemu.iproute",
            "nemu.node",
            "nemu.protocol",
            "nemu.subprocess_"
        ],
        "version": "0.3.1"
    },
    "nemunemuhello": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neng": {
        "cmdline": [],
        "modules": [
            "neng",
            "neng.cmaes",
            "neng.game",
            "neng.game_reader",
            "neng.neng",
            "neng.strategy_profile",
            "neng.support_enumeration"
        ],
        "version": "0.1"
    },
    "nengo": {
        "cmdline": [],
        "modules": [
            "nengo",
            "nengo.base",
            "nengo.builder",
            "nengo.builder.builder",
            "nengo.builder.connection",
            "nengo.builder.ensemble",
            "nengo.builder.learning_rules",
            "nengo.builder.network",
            "nengo.builder.neurons",
            "nengo.builder.node",
            "nengo.builder.operator",
            "nengo.builder.optimizer",
            "nengo.builder.probe",
            "nengo.builder.processes",
            "nengo.builder.signal",
            "nengo.builder.tests",
            "nengo.builder.tests.test_optimizer",
            "nengo.builder.tests.test_signal",
            "nengo.cache",
            "nengo.config",
            "nengo.conftest",
            "nengo.connection",
            "nengo.dists",
            "nengo.ensemble",
            "nengo.exceptions",
            "nengo.ipynb",
            "nengo.learning_rules",
            "nengo.network",
            "nengo.networks",
            "nengo.networks.actionselection",
            "nengo.networks.assoc_mem",
            "nengo.networks.circularconvolution",
            "nengo.networks.ensemblearray",
            "nengo.networks.integrator",
            "nengo.networks.oscillator",
            "nengo.networks.product",
            "nengo.networks.tests",
            "nengo.networks.tests.test_actionselection",
            "nengo.networks.tests.test_assoc_mem",
            "nengo.networks.tests.test_circularconv",
            "nengo.networks.tests.test_ensemblearray",
            "nengo.networks.tests.test_integrator",
            "nengo.networks.tests.test_oscillator",
            "nengo.networks.tests.test_product",
            "nengo.networks.tests.test_workingmemory",
            "nengo.networks.workingmemory",
            "nengo.neurons",
            "nengo.node",
            "nengo.params",
            "nengo.presets",
            "nengo.probe",
            "nengo.processes",
            "nengo.rc",
            "nengo.simulator",
            "nengo.solvers",
            "nengo.spa",
            "nengo.spa.action_build",
            "nengo.spa.action_objects",
            "nengo.spa.actions",
            "nengo.spa.assoc_mem",
            "nengo.spa.basalganglia",
            "nengo.spa.bind",
            "nengo.spa.buffer",
            "nengo.spa.compare",
            "nengo.spa.cortical",
            "nengo.spa.input",
            "nengo.spa.memory",
            "nengo.spa.module",
            "nengo.spa.pointer",
            "nengo.spa.spa",
            "nengo.spa.state",
            "nengo.spa.tests",
            "nengo.spa.tests.test_action_objects",
            "nengo.spa.tests.test_actions",
            "nengo.spa.tests.test_assoc_mem",
            "nengo.spa.tests.test_basalganglia",
            "nengo.spa.tests.test_bind",
            "nengo.spa.tests.test_buffer",
            "nengo.spa.tests.test_compare",
            "nengo.spa.tests.test_cortical",
            "nengo.spa.tests.test_input",
            "nengo.spa.tests.test_memory",
            "nengo.spa.tests.test_pointer",
            "nengo.spa.tests.test_spa",
            "nengo.spa.tests.test_state",
            "nengo.spa.tests.test_thalamus",
            "nengo.spa.tests.test_vocabulary",
            "nengo.spa.thalamus",
            "nengo.spa.utils",
            "nengo.spa.vocab",
            "nengo.synapses",
            "nengo.tests",
            "nengo.tests.options",
            "nengo.tests.test_base",
            "nengo.tests.test_builder",
            "nengo.tests.test_cache",
            "nengo.tests.test_config",
            "nengo.tests.test_connection",
            "nengo.tests.test_copy",
            "nengo.tests.test_dists",
            "nengo.tests.test_ensemble",
            "nengo.tests.test_examples",
            "nengo.tests.test_learning_rules",
            "nengo.tests.test_network",
            "nengo.tests.test_neurons",
            "nengo.tests.test_node",
            "nengo.tests.test_params",
            "nengo.tests.test_presets",
            "nengo.tests.test_probe",
            "nengo.tests.test_processes",
            "nengo.tests.test_pytest",
            "nengo.tests.test_simulator",
            "nengo.tests.test_solvers",
            "nengo.tests.test_synapses",
            "nengo.utils",
            "nengo.utils.builder",
            "nengo.utils.cache",
            "nengo.utils.compat",
            "nengo.utils.connection",
            "nengo.utils.docutils",
            "nengo.utils.ensemble",
            "nengo.utils.filter_design",
            "nengo.utils.functions",
            "nengo.utils.graphs",
            "nengo.utils.ipython",
            "nengo.utils.least_squares_solvers",
            "nengo.utils.lock",
            "nengo.utils.logging",
            "nengo.utils.magic",
            "nengo.utils.matplotlib",
            "nengo.utils.nco",
            "nengo.utils.network",
            "nengo.utils.neurons",
            "nengo.utils.numpy",
            "nengo.utils.paths",
            "nengo.utils.probe",
            "nengo.utils.progress",
            "nengo.utils.simulator",
            "nengo.utils.stdlib",
            "nengo.utils.testing",
            "nengo.utils.tests",
            "nengo.utils.tests.test_builder",
            "nengo.utils.tests.test_builder_graphviz",
            "nengo.utils.tests.test_builder_passthrough",
            "nengo.utils.tests.test_cache",
            "nengo.utils.tests.test_compat",
            "nengo.utils.tests.test_connection",
            "nengo.utils.tests.test_ensemble",
            "nengo.utils.tests.test_filter_design",
            "nengo.utils.tests.test_functions_piecewise",
            "nengo.utils.tests.test_graphs",
            "nengo.utils.tests.test_lock",
            "nengo.utils.tests.test_logging",
            "nengo.utils.tests.test_magic",
            "nengo.utils.tests.test_matplotlib",
            "nengo.utils.tests.test_nco",
            "nengo.utils.tests.test_network",
            "nengo.utils.tests.test_neurons",
            "nengo.utils.tests.test_numpy",
            "nengo.utils.tests.test_probe",
            "nengo.utils.tests.test_progress",
            "nengo.utils.tests.test_stdlib",
            "nengo.utils.tests.test_testing",
            "nengo.utils.tests.test_threading",
            "nengo.utils.threading",
            "nengo.version"
        ],
        "version": "2.4.0"
    },
    "nengo-distilled": {
        "cmdline": [],
        "modules": [
            "nengo_distilled",
            "nengo_distilled.builder",
            "nengo_distilled.neuron",
            "nengo_distilled.neuron_tuning",
            "nengo_distilled.probes",
            "nengo_distilled.simulator",
            "nengo_distilled.tests",
            "nengo_distilled.tests.conftest",
            "nengo_distilled.tests.test_builder",
            "nengo_distilled.tests.test_ensemble",
            "nengo_distilled.tests.test_nengo",
            "nengo_distilled.tests.test_neuron",
            "nengo_distilled.tests.test_neuron_tuning",
            "nengo_distilled.tests.test_node",
            "nengo_distilled.tests.test_probe",
            "nengo_distilled.tests.test_tuning_curve",
            "nengo_distilled.version"
        ],
        "version": "0.1.0"
    },
    "nengo-dl": {
        "cmdline": [],
        "modules": [
            "nengo_dl",
            "nengo_dl.benchmarks",
            "nengo_dl.builder",
            "nengo_dl.graph_optimizer",
            "nengo_dl.learning_rules",
            "nengo_dl.neurons",
            "nengo_dl.operators",
            "nengo_dl.processes",
            "nengo_dl.run_checks",
            "nengo_dl.signals",
            "nengo_dl.simulator",
            "nengo_dl.tensor_graph",
            "nengo_dl.tensor_node",
            "nengo_dl.tensorflow_patch",
            "nengo_dl.tests",
            "nengo_dl.tests.conftest",
            "nengo_dl.tests.test_builder",
            "nengo_dl.tests.test_graph_optimizer",
            "nengo_dl.tests.test_learning_rules",
            "nengo_dl.tests.test_nengo_tests",
            "nengo_dl.tests.test_neurons",
            "nengo_dl.tests.test_signals",
            "nengo_dl.tests.test_simulator",
            "nengo_dl.tests.test_tensor_graph",
            "nengo_dl.tests.test_tensor_node",
            "nengo_dl.tests.test_tensorflow_patch",
            "nengo_dl.tests.test_utils",
            "nengo_dl.tmp",
            "nengo_dl.utils",
            "nengo_dl.version"
        ],
        "version": "0.3.1"
    },
    "nengo-gui": {
        "cmdline": [],
        "modules": [
            "nengo_gui",
            "nengo_gui.components",
            "nengo_gui.components.ace_editor",
            "nengo_gui.components.component",
            "nengo_gui.components.editor",
            "nengo_gui.components.htmlview",
            "nengo_gui.components.netgraph",
            "nengo_gui.components.pointer",
            "nengo_gui.components.raster",
            "nengo_gui.components.sim_control",
            "nengo_gui.components.slider",
            "nengo_gui.components.spa_plot",
            "nengo_gui.components.spa_similarity",
            "nengo_gui.components.spike_grid",
            "nengo_gui.components.value",
            "nengo_gui.components.voltage",
            "nengo_gui.components.xyvalue",
            "nengo_gui.config",
            "nengo_gui.conftest",
            "nengo_gui.exec_env",
            "nengo_gui.grandalf",
            "nengo_gui.grandalf.graphs",
            "nengo_gui.grandalf.layouts",
            "nengo_gui.grandalf.nx",
            "nengo_gui.grandalf.routing",
            "nengo_gui.grandalf.utils",
            "nengo_gui.gui",
            "nengo_gui.guibackend",
            "nengo_gui.ipython",
            "nengo_gui.layout",
            "nengo_gui.main",
            "nengo_gui.modal_js",
            "nengo_gui.namefinder",
            "nengo_gui.page",
            "nengo_gui.password",
            "nengo_gui.seed_generation",
            "nengo_gui.server",
            "nengo_gui.static_plots",
            "nengo_gui.testing_tools",
            "nengo_gui.user_action",
            "nengo_gui.version",
            "nengo_gui.viz"
        ],
        "version": "0.3.0"
    },
    "nengo-ocl": {
        "cmdline": [],
        "modules": [
            "nengo_ocl",
            "nengo_ocl.ast_conversion",
            "nengo_ocl.clra_gemv",
            "nengo_ocl.clra_nonlinearities",
            "nengo_ocl.clraggedarray",
            "nengo_ocl.operators",
            "nengo_ocl.plan",
            "nengo_ocl.planners",
            "nengo_ocl.raggedarray",
            "nengo_ocl.simulator",
            "nengo_ocl.tests",
            "nengo_ocl.tests.conftest",
            "nengo_ocl.tests.test_ast_conversion",
            "nengo_ocl.tests.test_clra_gemv",
            "nengo_ocl.tests.test_clra_nonlinearities",
            "nengo_ocl.tests.test_clraggedarray",
            "nengo_ocl.tests.test_planners",
            "nengo_ocl.tests.test_simulator",
            "nengo_ocl.utils",
            "nengo_ocl.version"
        ],
        "version": "1.2.0"
    },
    "nengo-spinnaker": {
        "cmdline": [],
        "modules": [
            "nengo_spinnaker",
            "nengo_spinnaker.builder",
            "nengo_spinnaker.builder.builder",
            "nengo_spinnaker.builder.connection",
            "nengo_spinnaker.builder.ensemble",
            "nengo_spinnaker.builder.model",
            "nengo_spinnaker.builder.netlist",
            "nengo_spinnaker.builder.node",
            "nengo_spinnaker.builder.ports",
            "nengo_spinnaker.config",
            "nengo_spinnaker.netlist",
            "nengo_spinnaker.netlist.netlist",
            "nengo_spinnaker.netlist.objects",
            "nengo_spinnaker.netlist.utils",
            "nengo_spinnaker.node_io",
            "nengo_spinnaker.node_io.ethernet",
            "nengo_spinnaker.operators",
            "nengo_spinnaker.operators.filter",
            "nengo_spinnaker.operators.lif",
            "nengo_spinnaker.operators.sdp_receiver",
            "nengo_spinnaker.operators.sdp_transmitter",
            "nengo_spinnaker.operators.value_sink",
            "nengo_spinnaker.operators.value_source",
            "nengo_spinnaker.partition",
            "nengo_spinnaker.rc",
            "nengo_spinnaker.regions",
            "nengo_spinnaker.regions.filters",
            "nengo_spinnaker.regions.keyspaces",
            "nengo_spinnaker.regions.list",
            "nengo_spinnaker.regions.matrix",
            "nengo_spinnaker.regions.profiler",
            "nengo_spinnaker.regions.recording",
            "nengo_spinnaker.regions.region",
            "nengo_spinnaker.regions.utils",
            "nengo_spinnaker.scripts",
            "nengo_spinnaker.scripts.nengo_spinnaker_setup",
            "nengo_spinnaker.simulator",
            "nengo_spinnaker.utils",
            "nengo_spinnaker.utils.application",
            "nengo_spinnaker.utils.collections",
            "nengo_spinnaker.utils.config",
            "nengo_spinnaker.utils.itertools",
            "nengo_spinnaker.utils.keyspaces",
            "nengo_spinnaker.utils.model",
            "nengo_spinnaker.utils.neurons",
            "nengo_spinnaker.utils.paths",
            "nengo_spinnaker.utils.place_and_route",
            "nengo_spinnaker.utils.profiling",
            "nengo_spinnaker.utils.type_casts"
        ],
        "version": "0.4.0"
    },
    "nensbuild": {
        "cmdline": [],
        "modules": [
            "nensbuild",
            "nensbuild.build",
            "nensbuild.tests"
        ],
        "version": "0.4"
    },
    "nensskel": {
        "cmdline": [],
        "modules": [
            "+package+",
            "nensskel",
            "nensskel.cmdline",
            "nensskel.djangoapp",
            "nensskel.library",
            "nensskel.lizardsite",
            "nensskel.smoketest_fixt",
            "nensskel.utils"
        ],
        "version": "1.37"
    },
    "neo": {
        "cmdline": [],
        "modules": [
            "neo",
            "neo.core",
            "neo.core.analogsignal",
            "neo.core.baseneo",
            "neo.core.block",
            "neo.core.channelindex",
            "neo.core.container",
            "neo.core.epoch",
            "neo.core.event",
            "neo.core.irregularlysampledsignal",
            "neo.core.segment",
            "neo.core.spiketrain",
            "neo.core.unit",
            "neo.io",
            "neo.io.alphaomegaio",
            "neo.io.asciisignalio",
            "neo.io.asciispiketrainio",
            "neo.io.axonio",
            "neo.io.baseio",
            "neo.io.blackrockio",
            "neo.io.blackrockio_deprecated",
            "neo.io.brainvisionio",
            "neo.io.brainwaredamio",
            "neo.io.brainwaref32io",
            "neo.io.brainwaresrcio",
            "neo.io.elanio",
            "neo.io.elphyio",
            "neo.io.exampleio",
            "neo.io.hdf5io",
            "neo.io.igorproio",
            "neo.io.klustakwikio",
            "neo.io.kwikio",
            "neo.io.micromedio",
            "neo.io.neomatlabio",
            "neo.io.nestio",
            "neo.io.neuralynxio",
            "neo.io.neuroexplorerio",
            "neo.io.neuroscopeio",
            "neo.io.neuroshareapiio",
            "neo.io.neurosharectypesio",
            "neo.io.nixio",
            "neo.io.nwbio_BACKUP_4246",
            "neo.io.nwbio_BASE_4246",
            "neo.io.nwbio_LOCAL_4246",
            "neo.io.nwbio_REMOTE_4246",
            "neo.io.pickleio",
            "neo.io.plexonio",
            "neo.io.pynnio",
            "neo.io.rawbinarysignalio",
            "neo.io.spike2io",
            "neo.io.stimfitio",
            "neo.io.tdtio",
            "neo.io.tools",
            "neo.io.winedrio",
            "neo.io.winwcpio",
            "neo.test",
            "neo.test.generate_datasets",
            "neo.test.iotest",
            "neo.test.iotest.common_io_test",
            "neo.test.iotest.test_alphaomegaio",
            "neo.test.iotest.test_asciisignalio",
            "neo.test.iotest.test_asciispiketrainio",
            "neo.test.iotest.test_axonio",
            "neo.test.iotest.test_baseio",
            "neo.test.iotest.test_blackrockio",
            "neo.test.iotest.test_brainvisionio",
            "neo.test.iotest.test_brainwaredamio",
            "neo.test.iotest.test_brainwaref32io",
            "neo.test.iotest.test_brainwaresrcio",
            "neo.test.iotest.test_elanio",
            "neo.test.iotest.test_elphyio",
            "neo.test.iotest.test_exampleio",
            "neo.test.iotest.test_hdf5io",
            "neo.test.iotest.test_igorio",
            "neo.test.iotest.test_klustakwikio",
            "neo.test.iotest.test_kwikio",
            "neo.test.iotest.test_micromedio",
            "neo.test.iotest.test_neomatlabio",
            "neo.test.iotest.test_nestio",
            "neo.test.iotest.test_neuralynxio",
            "neo.test.iotest.test_neuroexplorerio",
            "neo.test.iotest.test_neuroscopeio",
            "neo.test.iotest.test_neuroshareio",
            "neo.test.iotest.test_nixio",
            "neo.test.iotest.test_plexonio",
            "neo.test.iotest.test_pynnio",
            "neo.test.iotest.test_rawbinarysignalio",
            "neo.test.iotest.test_spike2io",
            "neo.test.iotest.test_stimfitio",
            "neo.test.iotest.test_tdtio",
            "neo.test.iotest.test_winedrio",
            "neo.test.iotest.test_winwcpio",
            "neo.test.iotest.tools",
            "neo.test.tools",
            "neo.version"
        ],
        "version": "0.5.1"
    },
    "neo-my2pg": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neo-observer": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "neo4ast": {
        "cmdline": [],
        "modules": [
            "neo4ast",
            "neo4ast.store"
        ],
        "version": "0.1.0"
    },
    "neo4django": {
        "cmdline": [],
        "modules": [
            "neo4django",
            "neo4django.benchmarks",
            "neo4django.constants",
            "neo4django.db",
            "neo4django.db.models",
            "neo4django.db.models.aggregates",
            "neo4django.db.models.base",
            "neo4django.db.models.manager",
            "neo4django.db.models.properties",
            "neo4django.db.models.query",
            "neo4django.db.models.relationships",
            "neo4django.db.models.script_utils",
            "neo4django.decorators",
            "neo4django.exceptions",
            "neo4django.gremlin",
            "neo4django.neo4jclient",
            "neo4django.rest_utils",
            "neo4django.testcases",
            "neo4django.tests",
            "neo4django.tests.django_tests",
            "neo4django.tests.index_tests",
            "neo4django.tests.model_tests",
            "neo4django.tests.models",
            "neo4django.tests.neo4jclient_tests",
            "neo4django.tests.nodequeryset_tests",
            "neo4django.tests.property_tests",
            "neo4django.tests.relationship_tests",
            "neo4django.tests.signal_tests",
            "neo4django.tests.synchronicity_tests",
            "neo4django.tests.test_settings",
            "neo4django.utils",
            "neo4django.validators"
        ],
        "version": "0.1.8"
    },
    "neo4j-decorators": {
        "cmdline": [],
        "modules": [
            "neo4jdecorators",
            "neo4jdecorators.db",
            "neo4jdecorators.query"
        ],
        "version": "1.3"
    },
    "neo4j-doc-manager": {
        "cmdline": [],
        "modules": [
            "mongo_connector",
            "mongo_connector.doc_managers",
            "mongo_connector.doc_managers.neo4j_doc_manager",
            "mongo_connector.doc_managers.nodes_and_relationships_builder",
            "mongo_connector.doc_managers.nodes_and_relationships_updater",
            "tests",
            "tests.test_neo4j_doc_manager"
        ],
        "version": "1.0.0.dev11"
    },
    "neo4j-driver": {
        "cmdline": [],
        "modules": [
            "neo4j",
            "neo4j.addressing",
            "neo4j.bolt",
            "neo4j.bolt.cert",
            "neo4j.bolt.connection",
            "neo4j.bolt.io",
            "neo4j.bolt.response",
            "neo4j.compat",
            "neo4j.compat.collections",
            "neo4j.compat.ssl",
            "neo4j.exceptions",
            "neo4j.meta",
            "neo4j.packstream",
            "neo4j.packstream.constants",
            "neo4j.packstream.packer",
            "neo4j.packstream.structure",
            "neo4j.packstream.unpacker",
            "neo4j.util",
            "neo4j.v1",
            "neo4j.v1.api",
            "neo4j.v1.direct",
            "neo4j.v1.exceptions",
            "neo4j.v1.result",
            "neo4j.v1.routing",
            "neo4j.v1.security",
            "neo4j.v1.session",
            "neo4j.v1.types"
        ],
        "version": "1.3.0"
    },
    "neo4j-embedded": {
        "cmdline": [],
        "modules": [
            "neo4j",
            "neo4j._backend",
            "neo4j.core",
            "neo4j.cypher",
            "neo4j.index",
            "neo4j.javalib",
            "neo4j.traversal",
            "neo4j.util"
        ],
        "version": "1.9.c2"
    },
    "neo4jdb": {
        "cmdline": [],
        "modules": [
            "neo4j",
            "neo4j.connection",
            "neo4j.contextmanager",
            "neo4j.cursor",
            "neo4j.strings",
            "neo4j.test",
            "neo4j.test.performance",
            "neo4j.test.test_connection",
            "neo4j.test.test_contextmanager",
            "neo4j.test.test_cursor",
            "neo4j.test.test_exceptions",
            "neo4j.test.test_types"
        ],
        "version": "0.0.9"
    },
    "neo4jrestclient": {
        "cmdline": [],
        "modules": [
            "neo4jrestclient",
            "neo4jrestclient.client",
            "neo4jrestclient.constants",
            "neo4jrestclient.exceptions",
            "neo4jrestclient.iterable",
            "neo4jrestclient.labels",
            "neo4jrestclient.options",
            "neo4jrestclient.query",
            "neo4jrestclient.request",
            "neo4jrestclient.tests",
            "neo4jrestclient.tests.test_cache",
            "neo4jrestclient.tests.test_exceptions",
            "neo4jrestclient.tests.test_extensions",
            "neo4jrestclient.tests.test_filters",
            "neo4jrestclient.tests.test_graphdatabase",
            "neo4jrestclient.tests.test_indices",
            "neo4jrestclient.tests.test_ipython",
            "neo4jrestclient.tests.test_labels",
            "neo4jrestclient.tests.test_nodes",
            "neo4jrestclient.tests.test_pickle",
            "neo4jrestclient.tests.test_query",
            "neo4jrestclient.tests.test_relationships",
            "neo4jrestclient.tests.test_transactions",
            "neo4jrestclient.tests.test_traversals",
            "neo4jrestclient.traversals",
            "neo4jrestclient.utils"
        ],
        "version": "2.1.1"
    },
    "neo4jupyter": {
        "cmdline": [],
        "modules": [
            "neo4jupyter",
            "neo4jupyter.neo4jupyter"
        ],
        "version": "0.1.1"
    },
    "neo4py": {
        "cmdline": [],
        "modules": [
            "neo4py",
            "neo4py.backend",
            "neo4py.core",
            "neo4py.graph",
            "neo4py.index",
            "neo4py.model",
            "neo4py.neo",
            "neo4py.traversal",
            "neo4py.util"
        ],
        "version": "0.1"
    },
    "neoalchemy": {
        "cmdline": [],
        "modules": [
            "neoalchemy",
            "neoalchemy.cypher",
            "neoalchemy.cypher.base",
            "neoalchemy.graph",
            "neoalchemy.schema",
            "neoalchemy.schema.base",
            "neoalchemy.schema.operations",
            "neoalchemy.schema.orm",
            "neoalchemy.types"
        ],
        "version": "0.8.0b7"
    },
    "neoapi": {
        "cmdline": [],
        "modules": [
            "neoapi",
            "neoapi.application_codes",
            "neoapi.errors",
            "neoapi.function_property",
            "neoapi.http_error_codes",
            "neoapi.neo_utils",
            "neoapi.serializable_structured_node",
            "neoapi.serializable_structured_node_base"
        ],
        "version": "3.6.4"
    },
    "neobase": {
        "cmdline": [],
        "modules": [
            "neobase",
            "neobase.neobase"
        ],
        "version": "0.13"
    },
    "neodjango": {
        "cmdline": [],
        "modules": [
            "neodjango",
            "neodjango.core",
            "neodjango.core.connection",
            "neodjango.core.cypher",
            "neodjango.db",
            "neodjango.db.models",
            "neodjango.db.models.base",
            "neodjango.db.models.manager",
            "neodjango.db.models.options",
            "neodjango.db.models.query",
            "neodjango.management",
            "neodjango.management.commands",
            "neodjango.management.commands.neo4j",
            "neodjango.tests",
            "neodjango.tests.test_env",
            "neodjango.tests.test_settings",
            "neodjango.utils"
        ],
        "version": "0.0.8"
    },
    "neodym": {
        "cmdline": [],
        "modules": [
            "neodym",
            "neodym.client",
            "neodym.connection",
            "neodym.exceptions",
            "neodym.handler",
            "neodym.message",
            "neodym.server"
        ],
        "version": "0.2.1"
    },
    "neodymium": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neokami-sdk": {
        "cmdline": [],
        "modules": [
            "neokami",
            "neokami.src",
            "neokami.src.Neokami",
            "neokami.src.Neokami.Base",
            "neokami.src.Neokami.Exceptions",
            "neokami.src.Neokami.Exceptions.NeokamiAuthorizationException",
            "neokami.src.Neokami.Exceptions.NeokamiBaseException",
            "neokami.src.Neokami.Exceptions.NeokamiBlockedException",
            "neokami.src.Neokami.Exceptions.NeokamiParametersException",
            "neokami.src.Neokami.Exceptions.NeokamiResponseException",
            "neokami.src.Neokami.Exceptions.NeokamiSDKException",
            "neokami.src.Neokami.Exceptions.NeokamiServerException",
            "neokami.src.Neokami.HttpClients",
            "neokami.src.Neokami.HttpClients.NeokamiCurl",
            "neokami.src.Neokami.ImageAnalyser",
            "neokami.src.Neokami.NeokamiRequest",
            "neokami.src.Neokami.NeokamiResponse",
            "neokami.src.Neokami.SentimentAnalyser",
            "neokami.src.Neokami.TopicDetection",
            "neokami.src.Neokami.VisualCortex",
            "neokami.tests",
            "neokami.tests.test_neokami_exception",
            "neokami.tests.test_neokami_image_request",
            "neokami.tests.test_neokami_sentiment_request",
            "neokami.tests.test_neokami_topic_detection",
            "neokami.tests.test_neokami_visual_cortex"
        ],
        "version": "0.2"
    },
    "neolib": {
        "cmdline": [],
        "modules": [
            "neolib",
            "neolib.HTMLFilter",
            "neolib.NST",
            "neolib.config",
            "neolib.config.Configuration",
            "neolib.daily",
            "neolib.daily.Anchor",
            "neolib.daily.ColtzanShrine",
            "neolib.daily.Daily",
            "neolib.daily.FruitMachine",
            "neolib.daily.GiantJelly",
            "neolib.daily.GiantOmelette",
            "neolib.daily.MarrowGuess",
            "neolib.daily.Obsidian",
            "neolib.daily.PetPetPark",
            "neolib.daily.ShopOfOffers",
            "neolib.daily.Tombola",
            "neolib.exceptions",
            "neolib.http",
            "neolib.http.HTTPForm",
            "neolib.http.Page",
            "neolib.http.browser",
            "neolib.http.browser.BrowserCookies",
            "neolib.http.browser.ChromeCookies",
            "neolib.inventory",
            "neolib.inventory.Inventory",
            "neolib.inventory.MainShopInventory",
            "neolib.inventory.SDBInventory",
            "neolib.inventory.ShopWizardResult",
            "neolib.inventory.UserInventory",
            "neolib.inventory.UserShopBackInventory",
            "neolib.inventory.UserShopFrontInventory",
            "neolib.item",
            "neolib.item.Item",
            "neolib.item.MainShopItem",
            "neolib.item.UserShopBackItem",
            "neolib.item.UserShopFrontItem",
            "neolib.neocodex",
            "neolib.neocodex.CodexAPI",
            "neolib.neocodex.blowfish",
            "neolib.pyamf",
            "neolib.pyamf._version",
            "neolib.pyamf.adapters",
            "neolib.pyamf.adapters._array",
            "neolib.pyamf.adapters._collections",
            "neolib.pyamf.adapters._decimal",
            "neolib.pyamf.adapters._django_contrib_auth_models",
            "neolib.pyamf.adapters._django_db_models_base",
            "neolib.pyamf.adapters._django_db_models_fields",
            "neolib.pyamf.adapters._django_db_models_query",
            "neolib.pyamf.adapters._django_utils_translation",
            "neolib.pyamf.adapters._elixir",
            "neolib.pyamf.adapters._sets",
            "neolib.pyamf.adapters._sqlalchemy_orm",
            "neolib.pyamf.adapters._sqlalchemy_orm_collections",
            "neolib.pyamf.adapters.util",
            "neolib.pyamf.alias",
            "neolib.pyamf.amf0",
            "neolib.pyamf.amf3",
            "neolib.pyamf.codec",
            "neolib.pyamf.python",
            "neolib.pyamf.remoting",
            "neolib.pyamf.remoting.amf0",
            "neolib.pyamf.remoting.amf3",
            "neolib.pyamf.remoting.client",
            "neolib.pyamf.remoting.gateway",
            "neolib.pyamf.remoting.gateway.django",
            "neolib.pyamf.remoting.gateway.google",
            "neolib.pyamf.remoting.gateway.twisted",
            "neolib.pyamf.remoting.gateway.wsgi",
            "neolib.pyamf.sol",
            "neolib.pyamf.util",
            "neolib.pyamf.util.imports",
            "neolib.pyamf.util.pure",
            "neolib.pyamf.versions",
            "neolib.pyamf.xml",
            "neolib.quests",
            "neolib.quests.KitchenQuest",
            "neolib.shop",
            "neolib.shop.MainShop",
            "neolib.shop.ShopWizard",
            "neolib.shop.UserShop",
            "neolib.shop.UserShopFront",
            "neolib.user",
            "neolib.user.Bank",
            "neolib.user.Pet",
            "neolib.user.SDB",
            "neolib.user.User",
            "neolib.user.hooks",
            "neolib.wheel",
            "neolib.wheel.Wheel"
        ],
        "version": "1.0.0"
    },
    "neolib2": {
        "cmdline": [],
        "modules": [
            "neolib",
            "neolib.Exceptions",
            "neolib.Filters",
            "neolib.NST",
            "neolib.NeolibBase",
            "neolib.http",
            "neolib.http.HTMLForm",
            "neolib.http.Page",
            "neolib.inventory",
            "neolib.inventory.Inventory",
            "neolib.inventory.MSInventory",
            "neolib.inventory.SDBInventory",
            "neolib.inventory.USBackInventory",
            "neolib.inventory.USFrontInventory",
            "neolib.inventory.UserInventory",
            "neolib.item",
            "neolib.item.InventoryItem",
            "neolib.item.InventoryItemList",
            "neolib.item.Item",
            "neolib.item.ItemList",
            "neolib.item.MSItem",
            "neolib.item.MSItemList",
            "neolib.item.SDBItem",
            "neolib.item.SDBItemList",
            "neolib.item.USBackItem",
            "neolib.item.USBackItemList",
            "neolib.item.USFrontItem",
            "neolib.item.USFrontItemList",
            "neolib.item.WizardItem",
            "neolib.item.WizardItemList",
            "neolib.registration",
            "neolib.registration.RegisterUser",
            "neolib.shop",
            "neolib.shop.History",
            "neolib.shop.MainShop",
            "neolib.shop.Transaction",
            "neolib.shop.UserBackShop",
            "neolib.shop.UserFrontShop",
            "neolib.shop.Wizard",
            "neolib.user",
            "neolib.user.Bank",
            "neolib.user.Neopet",
            "neolib.user.Profile",
            "neolib.user.User",
            "neolib.user.hooks",
            "neolib.user.hooks.Hook",
            "neolib.user.hooks.LoginCheck",
            "neolib.user.hooks.NSTHook",
            "neolib.user.hooks.UserDetails"
        ],
        "version": "0.2.1"
    },
    "neolixir": {
        "cmdline": [],
        "modules": [
            "neolixir",
            "neolixir.batch",
            "neolixir.dummy",
            "neolixir.entity",
            "neolixir.exc",
            "neolixir.fast",
            "neolixir.index",
            "neolixir.metadata",
            "neolixir.node",
            "neolixir.observable",
            "neolixir.overrides",
            "neolixir.properties",
            "neolixir.propmap",
            "neolixir.query",
            "neolixir.relationship",
            "neolixir.relmap",
            "neolixir.session",
            "neolixir.utils"
        ],
        "version": "2.1.3"
    },
    "neologdn": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.1"
    },
    "neomodel": {
        "cmdline": [
            "neomodel_install_labels"
        ],
        "modules": [
            "neomodel",
            "neomodel.cardinality",
            "neomodel.config",
            "neomodel.contrib",
            "neomodel.contrib.semi_structured",
            "neomodel.core",
            "neomodel.exception",
            "neomodel.hooks",
            "neomodel.match",
            "neomodel.properties",
            "neomodel.relationship",
            "neomodel.relationship_manager",
            "neomodel.util",
            "test",
            "test.test_alias",
            "test.test_batch",
            "test.test_cardinality",
            "test.test_contrib",
            "test.test_contrib.test_semi_structured",
            "test.test_cypher",
            "test.test_exceptions",
            "test.test_hooks",
            "test.test_indexing",
            "test.test_issue112",
            "test.test_label_install",
            "test.test_match_api",
            "test.test_models",
            "test.test_multiprocessing",
            "test.test_properties",
            "test.test_relationship_models",
            "test.test_relationships",
            "test.test_relative_relationships",
            "test.test_transactions"
        ],
        "version": "3.2.3"
    },
    "neon": {
        "cmdline": [],
        "modules": [
            "neon",
            "neon.core",
            "neon.example"
        ],
        "version": "0.1.2"
    },
    "neon-py": {
        "cmdline": [],
        "modules": [
            "neon",
            "neon._compat",
            "neon.decoder",
            "neon.encoder",
            "neon.entity",
            "neon.errors",
            "neon.tokens",
            "neon.utils"
        ],
        "version": "0.1.3"
    },
    "neonmob": {
        "cmdline": [],
        "modules": [
            "neonmob"
        ],
        "version": "0.0.0.dev0"
    },
    "neonsms": {
        "cmdline": [],
        "modules": [
            "neonsms",
            "neonsms.rest"
        ],
        "version": "0.0.4"
    },
    "neonx": {
        "cmdline": [],
        "modules": [
            "neonx",
            "neonx.geoff",
            "neonx.neo"
        ],
        "version": "0.1.1"
    },
    "neoppod": {
        "cmdline": [],
        "modules": [
            "neo",
            "neo.admin",
            "neo.admin.app",
            "neo.admin.handler",
            "neo.client",
            "neo.client.Storage",
            "neo.client.app",
            "neo.client.cache",
            "neo.client.config",
            "neo.client.exception",
            "neo.client.handlers",
            "neo.client.handlers.master",
            "neo.client.handlers.storage",
            "neo.client.iterator",
            "neo.client.pool",
            "neo.debug",
            "neo.lib",
            "neo.lib.app",
            "neo.lib.attributeTracker",
            "neo.lib.bootstrap",
            "neo.lib.config",
            "neo.lib.connection",
            "neo.lib.connector",
            "neo.lib.debug",
            "neo.lib.dispatcher",
            "neo.lib.event",
            "neo.lib.exception",
            "neo.lib.handler",
            "neo.lib.interfaces",
            "neo.lib.locking",
            "neo.lib.logger",
            "neo.lib.node",
            "neo.lib.patch",
            "neo.lib.protocol",
            "neo.lib.pt",
            "neo.lib.threaded_app",
            "neo.lib.util",
            "neo.master",
            "neo.master.app",
            "neo.master.backup_app",
            "neo.master.handlers",
            "neo.master.handlers.administration",
            "neo.master.handlers.backup",
            "neo.master.handlers.client",
            "neo.master.handlers.election",
            "neo.master.handlers.identification",
            "neo.master.handlers.secondary",
            "neo.master.handlers.storage",
            "neo.master.pt",
            "neo.master.recovery",
            "neo.master.transactions",
            "neo.master.verification",
            "neo.neoctl",
            "neo.neoctl.app",
            "neo.neoctl.handler",
            "neo.neoctl.neoctl",
            "neo.scripts",
            "neo.scripts.neoadmin",
            "neo.scripts.neoctl",
            "neo.scripts.neolog",
            "neo.scripts.neomaster",
            "neo.scripts.neomigrate",
            "neo.scripts.neostorage",
            "neo.scripts.runner",
            "neo.scripts.simple",
            "neo.storage",
            "neo.storage.app",
            "neo.storage.checker",
            "neo.storage.database",
            "neo.storage.database.importer",
            "neo.storage.database.manager",
            "neo.storage.database.mysqldb",
            "neo.storage.database.sqlite",
            "neo.storage.exception",
            "neo.storage.handlers",
            "neo.storage.handlers.client",
            "neo.storage.handlers.hidden",
            "neo.storage.handlers.identification",
            "neo.storage.handlers.initialization",
            "neo.storage.handlers.master",
            "neo.storage.handlers.storage",
            "neo.storage.replicator",
            "neo.storage.transactions",
            "neo.tests",
            "neo.tests.benchmark",
            "neo.tests.client",
            "neo.tests.client.testClientApp",
            "neo.tests.client.testConnectionPool",
            "neo.tests.client.testMasterHandler",
            "neo.tests.cluster",
            "neo.tests.fs2zodb",
            "neo.tests.functional",
            "neo.tests.functional.testClient",
            "neo.tests.functional.testCluster",
            "neo.tests.functional.testMaster",
            "neo.tests.functional.testStorage",
            "neo.tests.master",
            "neo.tests.master.testClientHandler",
            "neo.tests.master.testElectionHandler",
            "neo.tests.master.testMasterApp",
            "neo.tests.master.testMasterPT",
            "neo.tests.master.testRecovery",
            "neo.tests.master.testStorageHandler",
            "neo.tests.master.testTransactions",
            "neo.tests.mock",
            "neo.tests.stat_zodb",
            "neo.tests.storage",
            "neo.tests.storage.testClientHandler",
            "neo.tests.storage.testIdentificationHandler",
            "neo.tests.storage.testMasterHandler",
            "neo.tests.storage.testStorageApp",
            "neo.tests.storage.testStorageDBTests",
            "neo.tests.storage.testStorageMySQL",
            "neo.tests.storage.testStorageSQLite",
            "neo.tests.storage.testTransactions",
            "neo.tests.testBootstrap",
            "neo.tests.testConnection",
            "neo.tests.testDispatcher",
            "neo.tests.testHandler",
            "neo.tests.testNodes",
            "neo.tests.testPT",
            "neo.tests.testUtil",
            "neo.tests.threaded",
            "neo.tests.threaded.test",
            "neo.tests.threaded.testImporter",
            "neo.tests.threaded.testReplication",
            "neo.tests.threaded.testSSL",
            "neo.tests.zodb",
            "neo.tests.zodb.testBasic",
            "neo.tests.zodb.testConflict",
            "neo.tests.zodb.testHistory",
            "neo.tests.zodb.testIterator",
            "neo.tests.zodb.testMT",
            "neo.tests.zodb.testPack",
            "neo.tests.zodb.testPersistent",
            "neo.tests.zodb.testReadOnly",
            "neo.tests.zodb.testRecovery",
            "neo.tests.zodb.testRevision",
            "neo.tests.zodb.testSynchronization",
            "neo.tests.zodb.testUndo",
            "neo.tests.zodb.testVersion",
            "neo.tests.zodb.testZODB"
        ],
        "version": "1.7.1"
    },
    "neopy": {
        "cmdline": [],
        "modules": [
            "neopy",
            "neopy.admin",
            "neopy.calendar",
            "neopy.cypher",
            "neopy.geoff",
            "neopy.gremlin",
            "neopy.neo4j",
            "neopy.ogm",
            "neopy.rest",
            "neopy.tool",
            "neopy.util"
        ],
        "version": "1.0"
    },
    "neopysqlite": {
        "cmdline": [],
        "modules": [
            "neopysqlite",
            "neopysqlite.exceptions",
            "neopysqlite.neopysqlite",
            "neopysqlite.npsql_request"
        ],
        "version": "0.2.3"
    },
    "neopyswitch": {
        "cmdline": [],
        "modules": [
            "NeoPySwitch",
            "NeoPySwitch.pyswitch"
        ],
        "version": "0.2.1"
    },
    "neorg": {
        "cmdline": [],
        "modules": [
            "neorg",
            "neorg.commands",
            "neorg.config",
            "neorg.data",
            "neorg.search",
            "neorg.tests",
            "neorg.tests.test_data",
            "neorg.tests.test_verutils",
            "neorg.tests.test_web",
            "neorg.tests.test_wiki",
            "neorg.tests.utils",
            "neorg.verutils",
            "neorg.web",
            "neorg.wiki"
        ],
        "version": "0.0.3"
    },
    "neosdong-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.1"
    },
    "neospatial": {
        "cmdline": [],
        "modules": [
            "neospatial"
        ],
        "version": "0.1.1"
    },
    "neotiles": {
        "cmdline": [],
        "modules": [
            "neotiles",
            "neotiles.exceptions",
            "neotiles.matrixes",
            "neotiles.pixelcolor",
            "neotiles.tile",
            "neotiles.tilemanager"
        ],
        "version": "0.4.0"
    },
    "neovim": {
        "cmdline": [],
        "modules": [
            "neovim",
            "neovim.api",
            "neovim.api.buffer",
            "neovim.api.common",
            "neovim.api.nvim",
            "neovim.api.tabpage",
            "neovim.api.window",
            "neovim.compat",
            "neovim.msgpack_rpc",
            "neovim.msgpack_rpc.async_session",
            "neovim.msgpack_rpc.event_loop",
            "neovim.msgpack_rpc.event_loop.asyncio",
            "neovim.msgpack_rpc.event_loop.base",
            "neovim.msgpack_rpc.event_loop.uv",
            "neovim.msgpack_rpc.msgpack_stream",
            "neovim.msgpack_rpc.session",
            "neovim.plugin",
            "neovim.plugin.decorators",
            "neovim.plugin.host",
            "neovim.plugin.script_host",
            "neovim.util"
        ],
        "version": "0.1.13"
    },
    "neovim-gui": {
        "cmdline": [],
        "modules": [
            "neovim_gui",
            "neovim_gui.cli",
            "neovim_gui.gtk_ui",
            "neovim_gui.screen",
            "neovim_gui.ui_bridge"
        ],
        "version": "0.1.3"
    },
    "neovim-remote": {
        "cmdline": [
            "nvr"
        ],
        "modules": [],
        "version": "1.6.0"
    },
    "neovim-unittest": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "neovis": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neowebdriver": {
        "cmdline": [],
        "modules": [
            "neowebdriver"
        ],
        "version": "0.0.1"
    },
    "nepal-stock": {
        "cmdline": [],
        "modules": [
            "nepal_stock",
            "nepal_stock.nepal_stock"
        ],
        "version": "1.0"
    },
    "nepalicalendar": {
        "cmdline": [],
        "modules": [
            "nepalicalendar",
            "nepalicalendar.events",
            "nepalicalendar.functions",
            "nepalicalendar.nepcal",
            "nepalicalendar.nepdate",
            "nepalicalendar.tithis",
            "nepalicalendar.values"
        ],
        "version": "0.4"
    },
    "nephele": {
        "cmdline": [],
        "modules": [
            "awsHelpers",
            "awsHelpers.AwsConnectionFactory",
            "awsHelpers.asg",
            "awsHelpers.ec2",
            "nephele",
            "nephele.AwsAutoScalingGroup",
            "nephele.AwsEni",
            "nephele.AwsLogGroup",
            "nephele.AwsLogStream",
            "nephele.AwsProcessor",
            "nephele.AwsProcessorFactoryImpl",
            "nephele.AwsRole",
            "nephele.AwsStack",
            "nephele.CommandArgumentParser",
            "nephele.SilentException",
            "nephele.SlashException",
            "nephele.main",
            "stdplus",
            "stdplus._defaultify",
            "stdplus._fexecvp",
            "stdplus._fnmatches",
            "stdplus._isInt",
            "stdplus._readfile",
            "stdplus._run_cmd",
            "stdplus._sshConfig",
            "stdplus._writefile"
        ],
        "version": "0.0.36"
    },
    "nephelo": {
        "cmdline": [
            "nephelo"
        ],
        "modules": [
            "nephelo",
            "nephelo.compilescripts",
            "nephelo.compute",
            "nephelo.config",
            "nephelo.delete",
            "nephelo.deploy",
            "nephelo.network",
            "nephelo.segments",
            "nephelo.template_generator"
        ],
        "version": "0.112"
    },
    "nepho": {
        "cmdline": [],
        "modules": [
            "nepho",
            "nepho.cli",
            "nepho.cli.base",
            "nepho.cli.blueprint",
            "nepho.cli.bootstrap",
            "nepho.cli.cloudlet",
            "nepho.cli.hooks",
            "nepho.cli.parameter",
            "nepho.cli.scope",
            "nepho.cli.stack",
            "nepho.core",
            "nepho.core.blueprint",
            "nepho.core.cloudlet",
            "nepho.core.common",
            "nepho.core.parameter",
            "nepho.core.provider",
            "nepho.core.provider_factory",
            "nepho.core.scenario",
            "nepho.core.stack",
            "nepho.providers",
            "nepho.providers.aws_provider",
            "nepho.providers.vagrant_provider",
            "tests",
            "tests.TEMPLATE_test",
            "tests.basic_test",
            "tests.blueprint_test",
            "tests.cloudlet_test",
            "tests.parameter_test",
            "tests.scope_test",
            "tests.stack_test"
        ],
        "version": "1.2.3"
    },
    "nephoria": {
        "cmdline": [],
        "modules": [
            "nephoria",
            "nephoria.aws",
            "nephoria.aws.autoscaling",
            "nephoria.aws.autoscaling.asops",
            "nephoria.aws.cloudformation",
            "nephoria.aws.cloudformation.cfnops",
            "nephoria.aws.cloudwatch",
            "nephoria.aws.cloudwatch.cwops",
            "nephoria.aws.ec2",
            "nephoria.aws.ec2.b3_ec2ops",
            "nephoria.aws.ec2.conversiontask",
            "nephoria.aws.ec2.ec2ops",
            "nephoria.aws.ec2.euinstance",
            "nephoria.aws.ec2.eusnapshot",
            "nephoria.aws.ec2.euvolume",
            "nephoria.aws.ec2.euzone",
            "nephoria.aws.ec2.windows_instance",
            "nephoria.aws.elb",
            "nephoria.aws.elb.elbops",
            "nephoria.aws.iam",
            "nephoria.aws.iam.iamops",
            "nephoria.aws.s3",
            "nephoria.aws.s3.s3ops",
            "nephoria.aws.sts",
            "nephoria.aws.sts.stsops",
            "nephoria.baseops",
            "nephoria.baseops.boto3baseops",
            "nephoria.baseops.botobaseops",
            "nephoria.euca",
            "nephoria.euca.taggedresource",
            "nephoria.exceptions",
            "nephoria.testcase_utils",
            "nephoria.testcase_utils.argparse_to_dict",
            "nephoria.testcase_utils.cli_test_runner",
            "nephoria.testcase_utils.euconfig",
            "nephoria.testcase_utils.process_manager",
            "nephoria.testcases",
            "nephoria.testcases.admintests",
            "nephoria.testcases.admintests.instance_migration",
            "nephoria.testcases.admintests.sos_reports",
            "nephoria.testcases.ec2",
            "nephoria.testcases.ec2.base_ec2_template",
            "nephoria.testcases.ec2.ebs",
            "nephoria.testcases.ec2.ebs.ebs_integrity_check",
            "nephoria.testcases.ec2.ebs.legacy_ebs_test_suite",
            "nephoria.testcases.ec2.images",
            "nephoria.testcases.ec2.images.load_bfebs_image",
            "nephoria.testcases.ec2.images.load_hvm_image",
            "nephoria.testcases.ec2.images.load_pv_image",
            "nephoria.testcases.ec2.instances",
            "nephoria.testcases.ec2.instances.instance_batch_test",
            "nephoria.testcases.ec2.instances.legacy_instance_test_suite",
            "nephoria.testcases.ec2.instances.migration",
            "nephoria.testcases.ec2.instances.nephoria_vm_stress",
            "nephoria.testcases.ec2.instances.run_instances",
            "nephoria.testcases.ec2.instances.windows",
            "nephoria.testcases.ec2.network",
            "nephoria.testcases.ec2.network.net_tests_classic",
            "nephoria.testcases.ec2.network.vpc_test_matrix",
            "nephoria.testcases.euca2ools",
            "nephoria.testcases.euca2ools.euca2ools_image_utils",
            "nephoria.testcases.s3",
            "nephoria.testcases.s3.bucket_tests",
            "nephoria.testcases.s3.osg_load_test",
            "nephoria.testcases.sample_test_suite",
            "nephoria.testcontroller",
            "nephoria.usercontext",
            "toolbox",
            "toolbox.neph_cli_util",
            "toolbox.sync_keys"
        ],
        "version": "2.2"
    },
    "nepi": {
        "cmdline": [],
        "modules": [
            "nepi",
            "nepi.data",
            "nepi.data.processing",
            "nepi.data.processing.ccn",
            "nepi.data.processing.ccn.parser",
            "nepi.data.processing.ping",
            "nepi.data.processing.ping.parser",
            "nepi.execution",
            "nepi.execution.attribute",
            "nepi.execution.ec",
            "nepi.execution.resource",
            "nepi.execution.runner",
            "nepi.execution.scheduler",
            "nepi.execution.tags",
            "nepi.execution.trace",
            "nepi.resources",
            "nepi.resources.all",
            "nepi.resources.all.collector",
            "nepi.resources.linux",
            "nepi.resources.linux.application",
            "nepi.resources.linux.ccn",
            "nepi.resources.linux.ccn.ccnapplication",
            "nepi.resources.linux.ccn.ccncat",
            "nepi.resources.linux.ccn.ccncontent",
            "nepi.resources.linux.ccn.ccnd",
            "nepi.resources.linux.ccn.ccnpeek",
            "nepi.resources.linux.ccn.ccnping",
            "nepi.resources.linux.ccn.ccnpingserver",
            "nepi.resources.linux.ccn.ccnpoke",
            "nepi.resources.linux.ccn.ccnr",
            "nepi.resources.linux.ccn.fibentry",
            "nepi.resources.linux.channel",
            "nepi.resources.linux.debfuncs",
            "nepi.resources.linux.gretunnel",
            "nepi.resources.linux.interface",
            "nepi.resources.linux.mtr",
            "nepi.resources.linux.netns",
            "nepi.resources.linux.netns.netnsclient",
            "nepi.resources.linux.netns.netnsemulation",
            "nepi.resources.linux.node",
            "nepi.resources.linux.nping",
            "nepi.resources.linux.ns3",
            "nepi.resources.linux.ns3.ccn",
            "nepi.resources.linux.ns3.ccn.ns3ccncatdceapplication",
            "nepi.resources.linux.ns3.ccn.ns3ccndceapplication",
            "nepi.resources.linux.ns3.ccn.ns3ccnddceapplication",
            "nepi.resources.linux.ns3.ccn.ns3ccnpeekdceapplication",
            "nepi.resources.linux.ns3.ccn.ns3ccnpokedceapplication",
            "nepi.resources.linux.ns3.ccn.ns3ccnrdceapplication",
            "nepi.resources.linux.ns3.ccn.ns3fibentrydceapplication",
            "nepi.resources.linux.ns3.fdudptunnel",
            "nepi.resources.linux.ns3.ns3client",
            "nepi.resources.linux.ns3.ns3dceapplication",
            "nepi.resources.linux.ns3.ns3pingdceapplication",
            "nepi.resources.linux.ns3.ns3simulation",
            "nepi.resources.linux.ns3.tuntapfdlink",
            "nepi.resources.linux.ping",
            "nepi.resources.linux.route",
            "nepi.resources.linux.rpmfuncs",
            "nepi.resources.linux.tap",
            "nepi.resources.linux.tcpdump",
            "nepi.resources.linux.traceroute",
            "nepi.resources.linux.tun",
            "nepi.resources.linux.tunnel",
            "nepi.resources.linux.udptest",
            "nepi.resources.linux.udptunnel",
            "nepi.resources.netns",
            "nepi.resources.netns.netnsapplication",
            "nepi.resources.netns.netnsbase",
            "nepi.resources.netns.netnsclient",
            "nepi.resources.netns.netnsemulation",
            "nepi.resources.netns.netnsinterface",
            "nepi.resources.netns.netnsipv4address",
            "nepi.resources.netns.netnsnode",
            "nepi.resources.netns.netnsnodeinterface",
            "nepi.resources.netns.netnsroute",
            "nepi.resources.netns.netnsserver",
            "nepi.resources.netns.netnsswitch",
            "nepi.resources.netns.netnswrapper",
            "nepi.resources.netns.netnswrapper_debug",
            "nepi.resources.ns3",
            "nepi.resources.ns3.classes",
            "nepi.resources.ns3.classes.aarf_wifi_manager",
            "nepi.resources.ns3.classes.aarfcd_wifi_manager",
            "nepi.resources.ns3.classes.adhoc_wifi_mac",
            "nepi.resources.ns3.classes.aloha_noack_net_device",
            "nepi.resources.ns3.classes.amrr_wifi_manager",
            "nepi.resources.ns3.classes.ap_wifi_mac",
            "nepi.resources.ns3.classes.arf_wifi_manager",
            "nepi.resources.ns3.classes.arp_l3protocol",
            "nepi.resources.ns3.classes.base_station_net_device",
            "nepi.resources.ns3.classes.binary_error_model",
            "nepi.resources.ns3.classes.binary_error_sixlow_model",
            "nepi.resources.ns3.classes.bridge_channel",
            "nepi.resources.ns3.classes.bridge_net_device",
            "nepi.resources.ns3.classes.bulk_send_application",
            "nepi.resources.ns3.classes.burst_error_model",
            "nepi.resources.ns3.classes.cara_wifi_manager",
            "nepi.resources.ns3.classes.constant_acceleration_mobility_model",
            "nepi.resources.ns3.classes.constant_position_mobility_model",
            "nepi.resources.ns3.classes.constant_rate_wifi_manager",
            "nepi.resources.ns3.classes.constant_speed_propagation_delay_model",
            "nepi.resources.ns3.classes.constant_velocity_mobility_model",
            "nepi.resources.ns3.classes.cost231propagation_loss_model",
            "nepi.resources.ns3.classes.csma_channel",
            "nepi.resources.ns3.classes.csma_net_device",
            "nepi.resources.ns3.classes.drop_tail_queue",
            "nepi.resources.ns3.classes.dsrdsr_routing",
            "nepi.resources.ns3.classes.emu_net_device",
            "nepi.resources.ns3.classes.error_channel",
            "nepi.resources.ns3.classes.error_channel_sixlow",
            "nepi.resources.ns3.classes.error_net_device",
            "nepi.resources.ns3.classes.fd_net_device",
            "nepi.resources.ns3.classes.fixed_rss_loss_model",
            "nepi.resources.ns3.classes.friis_propagation_loss_model",
            "nepi.resources.ns3.classes.gauss_markov_mobility_model",
            "nepi.resources.ns3.classes.hierarchical_mobility_model",
            "nepi.resources.ns3.classes.hybrid_buildings_propagation_loss_model",
            "nepi.resources.ns3.classes.icmpv4l4protocol",
            "nepi.resources.ns3.classes.icmpv6l4protocol",
            "nepi.resources.ns3.classes.ideal_wifi_manager",
            "nepi.resources.ns3.classes.ipv4l3protocol",
            "nepi.resources.ns3.classes.itu_r1411los_propagation_loss_model",
            "nepi.resources.ns3.classes.itu_r1411nlos_over_rooftop_propagation_loss_model",
            "nepi.resources.ns3.classes.jakes_propagation_loss_model",
            "nepi.resources.ns3.classes.kun2600mhz_propagation_loss_model",
            "nepi.resources.ns3.classes.list_error_model",
            "nepi.resources.ns3.classes.log_distance_propagation_loss_model",
            "nepi.resources.ns3.classes.loopback_net_device",
            "nepi.resources.ns3.classes.lr_wpan_net_device",
            "nepi.resources.ns3.classes.lte_enb_net_device",
            "nepi.resources.ns3.classes.lte_simple_net_device",
            "nepi.resources.ns3.classes.lte_ue_net_device",
            "nepi.resources.ns3.classes.matrix_propagation_loss_model",
            "nepi.resources.ns3.classes.mesh_point_device",
            "nepi.resources.ns3.classes.mesh_wifi_interface_mac",
            "nepi.resources.ns3.classes.minstrel_wifi_manager",
            "nepi.resources.ns3.classes.multi_model_spectrum_channel",
            "nepi.resources.ns3.classes.nakagami_propagation_loss_model",
            "nepi.resources.ns3.classes.nist_error_rate_model",
            "nepi.resources.ns3.classes.node",
            "nepi.resources.ns3.classes.non_communicating_net_device",
            "nepi.resources.ns3.classes.ocb_wifi_mac",
            "nepi.resources.ns3.classes.oh_buildings_propagation_loss_model",
            "nepi.resources.ns3.classes.okumura_hata_propagation_loss_model",
            "nepi.resources.ns3.classes.on_off_application",
            "nepi.resources.ns3.classes.onoe_wifi_manager",
            "nepi.resources.ns3.classes.packet_sink",
            "nepi.resources.ns3.classes.ping6",
            "nepi.resources.ns3.classes.point_to_point_channel",
            "nepi.resources.ns3.classes.point_to_point_net_device",
            "nepi.resources.ns3.classes.point_to_point_remote_channel",
            "nepi.resources.ns3.classes.radvd",
            "nepi.resources.ns3.classes.random_direction2d_mobility_model",
            "nepi.resources.ns3.classes.random_propagation_delay_model",
            "nepi.resources.ns3.classes.random_propagation_loss_model",
            "nepi.resources.ns3.classes.random_walk2d_mobility_model",
            "nepi.resources.ns3.classes.random_waypoint_mobility_model",
            "nepi.resources.ns3.classes.range_propagation_loss_model",
            "nepi.resources.ns3.classes.rate_error_model",
            "nepi.resources.ns3.classes.receive_list_error_model",
            "nepi.resources.ns3.classes.red_queue",
            "nepi.resources.ns3.classes.rraa_wifi_manager",
            "nepi.resources.ns3.classes.simple_channel",
            "nepi.resources.ns3.classes.simple_net_device",
            "nepi.resources.ns3.classes.single_model_spectrum_channel",
            "nepi.resources.ns3.classes.six_low_pan_net_device",
            "nepi.resources.ns3.classes.sta_wifi_mac",
            "nepi.resources.ns3.classes.steady_state_random_waypoint_mobility_model",
            "nepi.resources.ns3.classes.subscriber_station_net_device",
            "nepi.resources.ns3.classes.tap_bridge",
            "nepi.resources.ns3.classes.tcp_l4protocol",
            "nepi.resources.ns3.classes.three_log_distance_propagation_loss_model",
            "nepi.resources.ns3.classes.two_ray_ground_propagation_loss_model",
            "nepi.resources.ns3.classes.uan_channel",
            "nepi.resources.ns3.classes.udp_client",
            "nepi.resources.ns3.classes.udp_echo_client",
            "nepi.resources.ns3.classes.udp_echo_server",
            "nepi.resources.ns3.classes.udp_l4protocol",
            "nepi.resources.ns3.classes.udp_server",
            "nepi.resources.ns3.classes.udp_trace_client",
            "nepi.resources.ns3.classes.v4ping",
            "nepi.resources.ns3.classes.virtual_net_device",
            "nepi.resources.ns3.classes.waypoint_mobility_model",
            "nepi.resources.ns3.classes.wifi_net_device",
            "nepi.resources.ns3.classes.yans_error_rate_model",
            "nepi.resources.ns3.classes.yans_wifi_channel",
            "nepi.resources.ns3.classes.yans_wifi_phy",
            "nepi.resources.ns3.ns3application",
            "nepi.resources.ns3.ns3arpl3protocol",
            "nepi.resources.ns3.ns3base",
            "nepi.resources.ns3.ns3ccndceapplication",
            "nepi.resources.ns3.ns3channel",
            "nepi.resources.ns3.ns3client",
            "nepi.resources.ns3.ns3dceapplication",
            "nepi.resources.ns3.ns3dcehelper",
            "nepi.resources.ns3.ns3errormodel",
            "nepi.resources.ns3.ns3errorratemodel",
            "nepi.resources.ns3.ns3fdnetdevice",
            "nepi.resources.ns3.ns3icmpv4l4protocol",
            "nepi.resources.ns3.ns3ipv4l3protocol",
            "nepi.resources.ns3.ns3mobilitymodel",
            "nepi.resources.ns3.ns3netdevice",
            "nepi.resources.ns3.ns3node",
            "nepi.resources.ns3.ns3pipechanel",
            "nepi.resources.ns3.ns3propagationdelaymodel",
            "nepi.resources.ns3.ns3propagationlossmodel",
            "nepi.resources.ns3.ns3queue",
            "nepi.resources.ns3.ns3route",
            "nepi.resources.ns3.ns3server",
            "nepi.resources.ns3.ns3simulation",
            "nepi.resources.ns3.ns3wifichannel",
            "nepi.resources.ns3.ns3wifimac",
            "nepi.resources.ns3.ns3wifinetdevice",
            "nepi.resources.ns3.ns3wifiphy",
            "nepi.resources.ns3.ns3wifiremotestationmanager",
            "nepi.resources.ns3.ns3wrapper",
            "nepi.resources.ns3.ns3wrapper_debug",
            "nepi.resources.ns3.resource_manager_generator",
            "nepi.resources.omf",
            "nepi.resources.omf.application",
            "nepi.resources.omf.channel",
            "nepi.resources.omf.interface",
            "nepi.resources.omf.messages_5_4",
            "nepi.resources.omf.messages_6",
            "nepi.resources.omf.node",
            "nepi.resources.omf.omf5_api",
            "nepi.resources.omf.omf6_api",
            "nepi.resources.omf.omf6_parser",
            "nepi.resources.omf.omf_api_factory",
            "nepi.resources.omf.omf_client",
            "nepi.resources.omf.omf_resource",
            "nepi.resources.omf.wilabt_node",
            "nepi.resources.planetlab",
            "nepi.resources.planetlab.node",
            "nepi.resources.planetlab.ns3",
            "nepi.resources.planetlab.ns3.fdudptunnel",
            "nepi.resources.planetlab.ns3.tuntapfdlink",
            "nepi.resources.planetlab.openvswitch",
            "nepi.resources.planetlab.openvswitch.ovs",
            "nepi.resources.planetlab.openvswitch.ovsport",
            "nepi.resources.planetlab.plcapi",
            "nepi.resources.planetlab.sfa_node",
            "nepi.resources.planetlab.tap",
            "nepi.resources.planetlab.tun",
            "nepi.resources.planetlab.vroute",
            "nepi.util",
            "nepi.util.environ",
            "nepi.util.execfuncs",
            "nepi.util.logger",
            "nepi.util.manifoldapi",
            "nepi.util.netgraph",
            "nepi.util.parallel",
            "nepi.util.parsers",
            "nepi.util.parsers.xml_parser",
            "nepi.util.plotter",
            "nepi.util.rmatcher",
            "nepi.util.serializer",
            "nepi.util.sfaapi",
            "nepi.util.sfarspec_proc",
            "nepi.util.sshfuncs",
            "nepi.util.statfuncs",
            "nepi.util.timefuncs",
            "nepi.util.version"
        ],
        "version": "6.1.2"
    },
    "nepitope": {
        "cmdline": [],
        "modules": [
            "nepitope",
            "nepitope.alignment_tool",
            "nepitope.call_server",
            "nepitope.call_server_cmd_line",
            "nepitope.main",
            "nepitope.score_conservation",
            "nepitope.scoring_utils"
        ],
        "version": "0.1"
    },
    "nepserate": {
        "cmdline": [],
        "modules": [
            "nepserate",
            "nepserate.csymbol",
            "nepserate.scraperate"
        ],
        "version": "0.1.0"
    },
    "nepster": {
        "cmdline": [],
        "modules": [
            "nepster"
        ],
        "version": "1.3.0"
    },
    "nept": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neptune": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neptune-cli": {
        "cmdline": [
            "neptune",
            "neptune.bat"
        ],
        "modules": [
            "deepsense",
            "deepsense.generated",
            "deepsense.generated.auth",
            "deepsense.generated.auth.setup",
            "deepsense.generated.auth.swagger_client",
            "deepsense.generated.auth.swagger_client.api_client",
            "deepsense.generated.auth.swagger_client.apis",
            "deepsense.generated.auth.swagger_client.apis.default_api",
            "deepsense.generated.auth.swagger_client.configuration",
            "deepsense.generated.auth.swagger_client.models",
            "deepsense.generated.auth.swagger_client.models.base_enum_model",
            "deepsense.generated.auth.swagger_client.models.credentials",
            "deepsense.generated.auth.swagger_client.models.passwords",
            "deepsense.generated.auth.swagger_client.models.user",
            "deepsense.generated.auth.swagger_client.rest",
            "deepsense.generated.auth.test",
            "deepsense.generated.auth.test.test_credentials",
            "deepsense.generated.auth.test.test_default_api",
            "deepsense.generated.auth.test.test_passwords",
            "deepsense.generated.auth.test.test_user",
            "deepsense.generated.setup",
            "deepsense.generated.swagger_client",
            "deepsense.generated.swagger_client.api_client",
            "deepsense.generated.swagger_client.apis",
            "deepsense.generated.swagger_client.apis.default_api",
            "deepsense.generated.swagger_client.configuration",
            "deepsense.generated.swagger_client.models",
            "deepsense.generated.swagger_client.models.action",
            "deepsense.generated.swagger_client.models.action_event",
            "deepsense.generated.swagger_client.models.action_event_type",
            "deepsense.generated.swagger_client.models.action_invocation",
            "deepsense.generated.swagger_client.models.action_invocation_confirmation",
            "deepsense.generated.swagger_client.models.action_invocation_message",
            "deepsense.generated.swagger_client.models.action_invocation_params",
            "deepsense.generated.swagger_client.models.array_value_set",
            "deepsense.generated.swagger_client.models.base_channel_values",
            "deepsense.generated.swagger_client.models.base_enum_model",
            "deepsense.generated.swagger_client.models.base_experiment",
            "deepsense.generated.swagger_client.models.batch_channel_value_error",
            "deepsense.generated.swagger_client.models.batch_experiment_update_result",
            "deepsense.generated.swagger_client.models.batch_job_update_result",
            "deepsense.generated.swagger_client.models.best_job",
            "deepsense.generated.swagger_client.models.boolean_filter",
            "deepsense.generated.swagger_client.models.boolean_filtering_verb",
            "deepsense.generated.swagger_client.models.channel",
            "deepsense.generated.swagger_client.models.channel_params",
            "deepsense.generated.swagger_client.models.channel_type",
            "deepsense.generated.swagger_client.models.channel_values",
            "deepsense.generated.swagger_client.models.channel_with_value",
            "deepsense.generated.swagger_client.models.chart",
            "deepsense.generated.swagger_client.models.chart_params",
            "deepsense.generated.swagger_client.models.chart_point",
            "deepsense.generated.swagger_client.models.chart_values",
            "deepsense.generated.swagger_client.models.common_queued_params",
            "deepsense.generated.swagger_client.models.completed_action_params",
            "deepsense.generated.swagger_client.models.completed_job_params",
            "deepsense.generated.swagger_client.models.compressed_tensorflow_graph",
            "deepsense.generated.swagger_client.models.config_info",
            "deepsense.generated.swagger_client.models.date_time_duration_filter",
            "deepsense.generated.swagger_client.models.date_time_duration_filtering_verb",
            "deepsense.generated.swagger_client.models.date_time_filter",
            "deepsense.generated.swagger_client.models.date_time_filter_value",
            "deepsense.generated.swagger_client.models.date_time_interval_filter",
            "deepsense.generated.swagger_client.models.date_time_interval_filtering_verb",
            "deepsense.generated.swagger_client.models.date_time_value_filter",
            "deepsense.generated.swagger_client.models.date_time_value_filtering_verb",
            "deepsense.generated.swagger_client.models.edit_experiment_params",
            "deepsense.generated.swagger_client.models.edit_job_params",
            "deepsense.generated.swagger_client.models.error",
            "deepsense.generated.swagger_client.models.experiment",
            "deepsense.generated.swagger_client.models.experiment_count",
            "deepsense.generated.swagger_client.models.experiment_list",
            "deepsense.generated.swagger_client.models.experiment_summary",
            "deepsense.generated.swagger_client.models.filter_group",
            "deepsense.generated.swagger_client.models.filter_group_params",
            "deepsense.generated.swagger_client.models.filtering_condition",
            "deepsense.generated.swagger_client.models.filtering_conditions",
            "deepsense.generated.swagger_client.models.grid_search_parameter",
            "deepsense.generated.swagger_client.models.image_value",
            "deepsense.generated.swagger_client.models.input_channel_values",
            "deepsense.generated.swagger_client.models.input_grid_search_parameter",
            "deepsense.generated.swagger_client.models.input_image",
            "deepsense.generated.swagger_client.models.input_image_value",
            "deepsense.generated.swagger_client.models.job",
            "deepsense.generated.swagger_client.models.job_experiment_common",
            "deepsense.generated.swagger_client.models.job_list",
            "deepsense.generated.swagger_client.models.job_reservation_result",
            "deepsense.generated.swagger_client.models.job_simple_view",
            "deepsense.generated.swagger_client.models.job_state",
            "deepsense.generated.swagger_client.models.job_state_filter",
            "deepsense.generated.swagger_client.models.job_state_filtering_verb",
            "deepsense.generated.swagger_client.models.job_states",
            "deepsense.generated.swagger_client.models.job_summary",
            "deepsense.generated.swagger_client.models.key_value_property",
            "deepsense.generated.swagger_client.models.limited_channel_values",
            "deepsense.generated.swagger_client.models.metric",
            "deepsense.generated.swagger_client.models.metric_direction",
            "deepsense.generated.swagger_client.models.notification_experiment",
            "deepsense.generated.swagger_client.models.numeric_value",
            "deepsense.generated.swagger_client.models.optional_best_job_id",
            "deepsense.generated.swagger_client.models.output_image",
            "deepsense.generated.swagger_client.models.parameter",
            "deepsense.generated.swagger_client.models.parameter_type_enum",
            "deepsense.generated.swagger_client.models.point",
            "deepsense.generated.swagger_client.models.queued_experiment_params",
            "deepsense.generated.swagger_client.models.queued_job_params",
            "deepsense.generated.swagger_client.models.quota",
            "deepsense.generated.swagger_client.models.range_value_set",
            "deepsense.generated.swagger_client.models.reserve_job_params",
            "deepsense.generated.swagger_client.models.running_job_params",
            "deepsense.generated.swagger_client.models.series",
            "deepsense.generated.swagger_client.models.series_type",
            "deepsense.generated.swagger_client.models.simple_best_job",
            "deepsense.generated.swagger_client.models.sorting_column_type",
            "deepsense.generated.swagger_client.models.sorting_direction",
            "deepsense.generated.swagger_client.models.status",
            "deepsense.generated.swagger_client.models.string_filter",
            "deepsense.generated.swagger_client.models.string_filtering_verb",
            "deepsense.generated.swagger_client.models.tags_filter",
            "deepsense.generated.swagger_client.models.tags_filtering_verb",
            "deepsense.generated.swagger_client.models.tensorflow_graph",
            "deepsense.generated.swagger_client.models.text_value",
            "deepsense.generated.swagger_client.models.third_party_data",
            "deepsense.generated.swagger_client.models.third_party_data_type",
            "deepsense.generated.swagger_client.models.time_duration",
            "deepsense.generated.swagger_client.models.user",
            "deepsense.generated.swagger_client.models.version",
            "deepsense.generated.swagger_client.models.y",
            "deepsense.generated.swagger_client.rest",
            "deepsense.neptune",
            "deepsense.neptune.cli",
            "deepsense.neptune.cli.commands",
            "deepsense.neptune.cli.commands.command_names",
            "deepsense.neptune.cli.commands.executing",
            "deepsense.neptune.cli.commands.executing.abstract_job_executor",
            "deepsense.neptune.cli.commands.executing.docker_job_executor",
            "deepsense.neptune.cli.commands.executing.job_executor",
            "deepsense.neptune.cli.commands.executing.job_executor_factory",
            "deepsense.neptune.cli.commands.executing.null_executor",
            "deepsense.neptune.cli.commands.job_listing",
            "deepsense.neptune.cli.commands.job_listing.job_field_formatting",
            "deepsense.neptune.cli.commands.job_listing.table_formatting",
            "deepsense.neptune.cli.commands.neptune_action_events",
            "deepsense.neptune.cli.commands.neptune_action_invocations",
            "deepsense.neptune.cli.commands.neptune_action_invoke",
            "deepsense.neptune.cli.commands.neptune_archiving",
            "deepsense.neptune.cli.commands.neptune_command",
            "deepsense.neptune.cli.commands.neptune_command_factory",
            "deepsense.neptune.cli.commands.neptune_enqueue",
            "deepsense.neptune.cli.commands.neptune_exec",
            "deepsense.neptune.cli.commands.neptune_exp_abort",
            "deepsense.neptune.cli.commands.neptune_exp_show",
            "deepsense.neptune.cli.commands.neptune_job_abort",
            "deepsense.neptune.cli.commands.neptune_job_show",
            "deepsense.neptune.cli.commands.neptune_list_entities",
            "deepsense.neptune.cli.commands.neptune_quota",
            "deepsense.neptune.cli.commands.neptune_reserve",
            "deepsense.neptune.cli.commands.neptune_run",
            "deepsense.neptune.cli.commands.neptune_trashing",
            "deepsense.neptune.cli.commands.parsers",
            "deepsense.neptune.cli.commands.parsers.abort_parser",
            "deepsense.neptune.cli.commands.parsers.action_events_parser",
            "deepsense.neptune.cli.commands.parsers.action_invocations_parser",
            "deepsense.neptune.cli.commands.parsers.action_invoke_parser",
            "deepsense.neptune.cli.commands.parsers.archiving_experiments_parsers",
            "deepsense.neptune.cli.commands.parsers.enqueue_parser",
            "deepsense.neptune.cli.commands.parsers.exec_parser",
            "deepsense.neptune.cli.commands.parsers.ls_parser",
            "deepsense.neptune.cli.commands.parsers.neptune_command_parser",
            "deepsense.neptune.cli.commands.parsers.neptune_help_formatters",
            "deepsense.neptune.cli.commands.parsers.neptune_starting_job_argument_parser",
            "deepsense.neptune.cli.commands.parsers.quota_parser",
            "deepsense.neptune.cli.commands.parsers.reserve_parser",
            "deepsense.neptune.cli.commands.parsers.run_parser",
            "deepsense.neptune.cli.commands.parsers.show_command_parser",
            "deepsense.neptune.cli.commands.parsers.show_experiment_parser",
            "deepsense.neptune.cli.commands.parsers.show_job_parser",
            "deepsense.neptune.cli.commands.parsers.subcommand_parser",
            "deepsense.neptune.cli.commands.parsers.trashing_experiments_parsers",
            "deepsense.neptune.cli.commands.parsers.validators",
            "deepsense.neptune.cli.commands.parsers.validators.abstract_arguments_validator",
            "deepsense.neptune.cli.commands.parsers.validators.arguments_validation_exception",
            "deepsense.neptune.cli.commands.parsers.validators.check_no_extra_arguments",
            "deepsense.neptune.cli.commands.parsers.validators.check_positional_params_first",
            "deepsense.neptune.cli.commands.parsers.validators.combined_arguments_validator",
            "deepsense.neptune.cli.commands.parsers.validators.void_validator",
            "deepsense.neptune.cli.commands.utils",
            "deepsense.neptune.cli.commands.utils.configuration_overriding_utils",
            "deepsense.neptune.cli.commands.utils.docker_utils",
            "deepsense.neptune.cli.commands.utils.file_copying_utils",
            "deepsense.neptune.cli.commands.utils.parameter_overriding_utils",
            "deepsense.neptune.cli.commands.utils.run_command_composer",
            "deepsense.neptune.cli.commands.utils.shell_command_utils",
            "deepsense.neptune.cli.commands.utils.url",
            "deepsense.neptune.cli.exceptions",
            "deepsense.neptune.cli.exceptions.job_config_exceptions",
            "deepsense.neptune.cli.exceptions.job_state_exceptions",
            "deepsense.neptune.cli.exceptions.storage_exceptions",
            "deepsense.neptune.cli.helpers",
            "deepsense.neptune.cli.main",
            "deepsense.neptune.cli.processes",
            "deepsense.neptune.cli.processes.aborting",
            "deepsense.neptune.cli.processes.docker_job_spawner",
            "deepsense.neptune.cli.processes.job_process_command_builder",
            "deepsense.neptune.cli.processes.job_spawner",
            "deepsense.neptune.cli.processes.programming_language_recognizer",
            "deepsense.neptune.cli.run",
            "deepsense.neptune.cli.signal_handlers",
            "deepsense.neptune.cli.storage",
            "deepsense.neptune.cli.storage.job_resource_dumper",
            "deepsense.neptune.cli.storage.job_storage_manager",
            "deepsense.neptune.cli.storage.populate_storage_utils",
            "deepsense.neptune.cli.storage.storage_configrator",
            "deepsense.neptune.cli.threads",
            "deepsense.neptune.cli.threads.operations_thread",
            "deepsense.neptune.cli.threads.ping_thread",
            "deepsense.neptune.cli.threads.stream_redirecting_thread",
            "deepsense.neptune.cli.validation",
            "deepsense.neptune.cli.validation.validations",
            "deepsense.neptune.client_library",
            "deepsense.neptune.client_library.background_services",
            "deepsense.neptune.client_library.background_services.action_services",
            "deepsense.neptune.client_library.background_services.channel_values_service",
            "deepsense.neptune.client_library.background_services.service",
            "deepsense.neptune.client_library.background_services.services",
            "deepsense.neptune.client_library.client_library_config",
            "deepsense.neptune.client_library.context_factory",
            "deepsense.neptune.client_library.exceptions",
            "deepsense.neptune.client_library.exceptions.action_exceptions",
            "deepsense.neptune.client_library.exceptions.duplicated_name_exceptions",
            "deepsense.neptune.client_library.job_development_api",
            "deepsense.neptune.client_library.job_development_api.action",
            "deepsense.neptune.client_library.job_development_api.channel",
            "deepsense.neptune.client_library.job_development_api.channel_params",
            "deepsense.neptune.client_library.job_development_api.channel_type",
            "deepsense.neptune.client_library.job_development_api.chart",
            "deepsense.neptune.client_library.job_development_api.chart_params",
            "deepsense.neptune.client_library.job_development_api.context",
            "deepsense.neptune.client_library.job_development_api.context_params",
            "deepsense.neptune.client_library.job_development_api.image",
            "deepsense.neptune.client_library.job_development_api.job",
            "deepsense.neptune.client_library.job_development_api.key_value_properties_service",
            "deepsense.neptune.client_library.job_development_api.metric",
            "deepsense.neptune.client_library.job_development_api.series",
            "deepsense.neptune.client_library.job_development_api.series_type",
            "deepsense.neptune.client_library.job_development_api.tags_service",
            "deepsense.neptune.client_library.offline",
            "deepsense.neptune.client_library.parameter_transformation_rules",
            "deepsense.neptune.client_library.tensorflow",
            "deepsense.neptune.client_library.tensorflow.tensorflow_integrator",
            "deepsense.neptune.client_library.threads",
            "deepsense.neptune.client_library.threads.action_executor",
            "deepsense.neptune.client_library.threads.action_invocation_receiver_thread",
            "deepsense.neptune.client_library.threads.channel_values_thread",
            "deepsense.neptune.client_library.threads.job_internal_thread",
            "deepsense.neptune.common",
            "deepsense.neptune.common.api",
            "deepsense.neptune.common.api.address",
            "deepsense.neptune.common.api.api_model_factories",
            "deepsense.neptune.common.api.api_service_factory",
            "deepsense.neptune.common.api.auth_api",
            "deepsense.neptune.common.api.auth_api.handler",
            "deepsense.neptune.common.api.auth_api.interface",
            "deepsense.neptune.common.api.auth_api.with_logged_exceptions",
            "deepsense.neptune.common.api.auth_api.with_retries",
            "deepsense.neptune.common.api.auth_api.with_wrapped_exceptions",
            "deepsense.neptune.common.api.auth_api_service",
            "deepsense.neptune.common.api.check_api_version",
            "deepsense.neptune.common.api.exceptions",
            "deepsense.neptune.common.api.job_api_service",
            "deepsense.neptune.common.api.job_api_service_exceptions",
            "deepsense.neptune.common.api.neptune_api",
            "deepsense.neptune.common.api.neptune_api.handler",
            "deepsense.neptune.common.api.neptune_api.interface",
            "deepsense.neptune.common.api.neptune_api.with_logged_exceptions",
            "deepsense.neptune.common.api.neptune_api.with_retries",
            "deepsense.neptune.common.api.neptune_api.with_wrapped_exceptions",
            "deepsense.neptune.common.api.swagger_file",
            "deepsense.neptune.common.api.utilities_api_service",
            "deepsense.neptune.common.api.utils",
            "deepsense.neptune.common.config",
            "deepsense.neptune.common.config.host_parser",
            "deepsense.neptune.common.config.job_config",
            "deepsense.neptune.common.config.neptune_config",
            "deepsense.neptune.common.config.neptune_config_validator",
            "deepsense.neptune.common.config.validation_rules",
            "deepsense.neptune.common.exceptions",
            "deepsense.neptune.common.exceptions.base_exceptions",
            "deepsense.neptune.common.models",
            "deepsense.neptune.common.models.exceptions",
            "deepsense.neptune.common.models.key_value_properties_utils",
            "deepsense.neptune.common.models.key_value_property_param",
            "deepsense.neptune.common.models.parameter_value_converter",
            "deepsense.neptune.common.models.parameters_validation",
            "deepsense.neptune.common.models.params",
            "deepsense.neptune.common.models.path_to_dump_param",
            "deepsense.neptune.common.models.point_utils",
            "deepsense.neptune.common.models.rich_best_job",
            "deepsense.neptune.common.models.rich_experiment",
            "deepsense.neptune.common.models.rich_input_channel_values",
            "deepsense.neptune.common.models.rich_job",
            "deepsense.neptune.common.models.rich_param",
            "deepsense.neptune.common.parsers",
            "deepsense.neptune.common.parsers.arguments",
            "deepsense.neptune.common.parsers.base_parser",
            "deepsense.neptune.common.parsers.common_parameters_configurator",
            "deepsense.neptune.common.parsers.gridable_params_parser",
            "deepsense.neptune.common.parsers.neptune_job_argument_parser",
            "deepsense.neptune.common.parsers.neptune_job_parameter_parser",
            "deepsense.neptune.common.parsers.parameters_parser",
            "deepsense.neptune.common.parsers.parser_factory",
            "deepsense.neptune.common.parsers.query_parameters_configurator",
            "deepsense.neptune.common.parsers.types",
            "deepsense.neptune.common.threads",
            "deepsense.neptune.common.threads.neptune_thread",
            "deepsense.neptune.common.utils",
            "deepsense.neptune.common.utils.browser",
            "deepsense.neptune.common.utils.cmdline_arguments_parsing",
            "deepsense.neptune.common.utils.command_line",
            "deepsense.neptune.common.utils.compression",
            "deepsense.neptune.common.utils.data_structures",
            "deepsense.neptune.common.utils.data_utils",
            "deepsense.neptune.common.utils.docker",
            "deepsense.neptune.common.utils.files",
            "deepsense.neptune.common.utils.http",
            "deepsense.neptune.common.utils.logging_utils",
            "deepsense.neptune.common.utils.memory_units",
            "deepsense.neptune.common.utils.monkey_patch",
            "deepsense.neptune.common.utils.paths",
            "deepsense.neptune.common.utils.str",
            "deepsense.neptune.common.utils.system",
            "deepsense.neptune.common.utils.text",
            "deepsense.neptune.common.utils.time",
            "deepsense.neptune.common.websockets",
            "deepsense.neptune.common.websockets.async_websocket",
            "deepsense.neptune.common.websockets.job_async_websocket_factory",
            "deepsense.neptune.common.websockets.message",
            "deepsense.neptune.common.websockets.reconnecting_websocket",
            "deepsense.neptune.common.websockets.websocket_message_processor",
            "deepsense.version"
        ],
        "version": "1.6.2"
    },
    "neptuno2": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.3"
    },
    "ner": {
        "cmdline": [],
        "modules": [
            "ner",
            "ner.client",
            "ner.exceptions",
            "ner.utils"
        ],
        "version": "0.1"
    },
    "nerd": {
        "cmdline": [],
        "modules": [
            "nerd"
        ],
        "version": "1.0.0"
    },
    "nerd-reviewer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nerdirc": {
        "cmdline": [
            "nerdirc"
        ],
        "modules": [
            "nerdlib",
            "nerdlib.app",
            "nerdlib.askinfo",
            "nerdlib.askstring",
            "nerdlib.channel",
            "nerdlib.config",
            "nerdlib.dccget",
            "nerdlib.dccsend",
            "nerdlib.ircclient",
            "nerdlib.ircclient.dispatcher",
            "nerdlib.ircclient.hold",
            "nerdlib.ircclient.module",
            "nerdlib.ircclient.server",
            "nerdlib.ircclient.test",
            "nerdlib.ircclient.trigger",
            "nerdlib.ircclient.xtest",
            "nerdlib.manager",
            "nerdlib.plugins",
            "nerdlib.plugins.ajoin",
            "nerdlib.plugins.ajoin.ajoin",
            "nerdlib.plugins.gossip",
            "nerdlib.plugins.gossip.gossip",
            "nerdlib.plugins.highligh",
            "nerdlib.plugins.highligh.highligh",
            "nerdlib.plugins.jump",
            "nerdlib.plugins.jump.jump",
            "nerdlib.plugins.latex",
            "nerdlib.plugins.latex.latex",
            "nerdlib.plugins.latex.tex",
            "nerdlib.plugins.link",
            "nerdlib.plugins.link.link",
            "nerdlib.plugins.nickcall",
            "nerdlib.plugins.nickcall.nickcall",
            "nerdlib.plugins.nickclick",
            "nerdlib.plugins.nickclick.nickclick",
            "nerdlib.plugins.spam",
            "nerdlib.plugins.spam.spam",
            "nerdlib.selplugin",
            "nerdlib.selserver",
            "nerdlib.selstyle",
            "nerdlib.startup",
            "nerdlib.stdmod",
            "nerdlib.user",
            "nerdlib.usermod",
            "nerdlib.utils",
            "nerdlib.utils.ircwrap"
        ],
        "version": "1.0.2"
    },
    "nerdy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nereid": {
        "cmdline": [],
        "modules": [
            "nereid",
            "nereid.application",
            "nereid.backend",
            "nereid.caching",
            "nereid.config",
            "nereid.contrib",
            "nereid.contrib.locale",
            "nereid.contrib.pagination",
            "nereid.contrib.sitemap",
            "nereid.ctx",
            "nereid.globals",
            "nereid.helpers",
            "nereid.logging",
            "nereid.session",
            "nereid.sessions",
            "nereid.signals",
            "nereid.templating",
            "nereid.testing",
            "nereid.tests",
            "nereid.wrappers"
        ],
        "version": "2.8.0.3"
    },
    "nereo-django-cas-ng": {
        "cmdline": [],
        "modules": [
            "django_cas_ng",
            "django_cas_ng.backends",
            "django_cas_ng.decorators",
            "django_cas_ng.management",
            "django_cas_ng.management.commands",
            "django_cas_ng.management.commands.django_cas_ng_clean_sessions",
            "django_cas_ng.middleware",
            "django_cas_ng.migrations",
            "django_cas_ng.migrations.0001_initial",
            "django_cas_ng.models",
            "django_cas_ng.signals",
            "django_cas_ng.utils",
            "django_cas_ng.views"
        ],
        "version": "4.0.2"
    },
    "nereo-django-maintenance-mode": {
        "cmdline": [],
        "modules": [
            "maintenance_mode",
            "maintenance_mode.context_processors",
            "maintenance_mode.core",
            "maintenance_mode.io",
            "maintenance_mode.management",
            "maintenance_mode.management.commands",
            "maintenance_mode.management.commands.maintenance_mode",
            "maintenance_mode.middleware",
            "maintenance_mode.settings",
            "maintenance_mode.urls",
            "maintenance_mode.utils",
            "maintenance_mode.version",
            "maintenance_mode.views"
        ],
        "version": "0.6.1"
    },
    "nereo-python-cas": {
        "cmdline": [],
        "modules": [
            "cas"
        ],
        "version": "1.0.0"
    },
    "neres": {
        "cmdline": [],
        "modules": [
            "neres",
            "neres.cli",
            "neres.newrelic",
            "neres.session",
            "neres.spinner",
            "neres.urls",
            "tests",
            "tests.test_neres"
        ],
        "version": "0.2.0"
    },
    "neronet": {
        "cmdline": [],
        "modules": [
            "neronet",
            "neronet.config_parser",
            "neronet.core",
            "neronet.daemon",
            "neronet.design",
            "neronet.experiment",
            "neronet.nerocli",
            "neronet.nerogui",
            "neronet.nerokid",
            "neronet.nerokid_test",
            "neronet.neroman",
            "neronet.neromum",
            "neronet.neromum_test",
            "neronet.node",
            "neronet.version"
        ],
        "version": "0.3.3"
    },
    "nerst": {
        "cmdline": [],
        "modules": [
            "nerst"
        ],
        "version": "0.0.0"
    },
    "nervanagpu": {
        "cmdline": [],
        "modules": [
            "nervanagpu",
            "nervanagpu.float_ew",
            "nervanagpu.layers",
            "nervanagpu.nervanagpu",
            "nervanagpu.tests",
            "nervanagpu.tests.test_tensor",
            "nervanagpu.util",
            "nervanagpu.util.testing"
        ],
        "version": "0.3.1"
    },
    "nervananeon": {
        "cmdline": [],
        "modules": [
            "neon",
            "neon.backends",
            "neon.backends.backend",
            "neon.backends.cc2",
            "neon.backends.cpu",
            "neon.backends.gpu",
            "neon.backends.par",
            "neon.backends.tests",
            "neon.backends.tests.test_cc2",
            "neon.backends.tests.test_cc2_tensor",
            "neon.backends.tests.test_cpu",
            "neon.backends.tests.test_cputensor",
            "neon.datasets",
            "neon.datasets.cifar10",
            "neon.datasets.dataset",
            "neon.datasets.imageset",
            "neon.datasets.iris",
            "neon.datasets.mnist",
            "neon.datasets.mobydick",
            "neon.datasets.sparsenet",
            "neon.datasets.synthetic",
            "neon.datasets.tests",
            "neon.datasets.tests.test_dataset",
            "neon.datasets.tests.test_mnist",
            "neon.diagnostics",
            "neon.diagnostics.ranges_decorators",
            "neon.diagnostics.ranges_plots",
            "neon.diagnostics.timing_decorators",
            "neon.diagnostics.timing_plots",
            "neon.diagnostics.visualize_rnn",
            "neon.experiments",
            "neon.experiments.check_grad",
            "neon.experiments.experiment",
            "neon.experiments.fit",
            "neon.experiments.fit_predict_err",
            "neon.experiments.tests",
            "neon.hyperopt",
            "neon.hyperopt.gen_config",
            "neon.hyperopt.gen_yaml_and_run",
            "neon.layers",
            "neon.layers.boltzmann",
            "neon.layers.compositional",
            "neon.layers.convolutional",
            "neon.layers.dropout",
            "neon.layers.fully_connected",
            "neon.layers.layer",
            "neon.layers.normalizing",
            "neon.layers.pooling",
            "neon.layers.recurrent",
            "neon.metrics",
            "neon.metrics.loss",
            "neon.metrics.metric",
            "neon.metrics.misclass",
            "neon.metrics.roc",
            "neon.metrics.sqerr",
            "neon.models",
            "neon.models.autoencoder",
            "neon.models.balance",
            "neon.models.dbn",
            "neon.models.mlp",
            "neon.models.model",
            "neon.models.rbm",
            "neon.models.rnn",
            "neon.models.tests",
            "neon.models.tests.test_rbm",
            "neon.optimizers",
            "neon.optimizers.adadelta",
            "neon.optimizers.gradient_descent",
            "neon.optimizers.learning_rule",
            "neon.params",
            "neon.params.val_init",
            "neon.tests",
            "neon.tests.sanity_check",
            "neon.tests.serialize_check",
            "neon.tests.speed_check",
            "neon.transforms",
            "neon.transforms.activation",
            "neon.transforms.batch_norm",
            "neon.transforms.cost",
            "neon.transforms.cross_entropy",
            "neon.transforms.gaussian",
            "neon.transforms.linear",
            "neon.transforms.logistic",
            "neon.transforms.rectified",
            "neon.transforms.softmax",
            "neon.transforms.sum_squared",
            "neon.transforms.tanh",
            "neon.transforms.tests",
            "neon.transforms.tests.test_cross_entropy",
            "neon.transforms.tests.test_leaky",
            "neon.transforms.tests.test_logistic",
            "neon.transforms.tests.test_rectified",
            "neon.transforms.tests.test_softmax",
            "neon.transforms.tests.test_tanh",
            "neon.transforms.tests.test_xcov",
            "neon.transforms.xcov",
            "neon.util",
            "neon.util.batch_writer",
            "neon.util.compat",
            "neon.util.error",
            "neon.util.param",
            "neon.util.persist",
            "neon.util.testing",
            "neon.util.tests",
            "neon.util.tests.test_serialization",
            "neon.util.trace",
            "neon.version"
        ],
        "version": "0.8.1"
    },
    "nerve": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nes": {
        "cmdline": [],
        "modules": [
            "nes"
        ],
        "version": "1.3.0"
    },
    "nes12ter": {
        "cmdline": [],
        "modules": [
            "nes12ter"
        ],
        "version": "1.3.0"
    },
    "nesasm": {
        "cmdline": [],
        "modules": [
            "nesasm",
            "nesasm.c6502",
            "nesasm.cartridge",
            "nesasm.compiler",
            "nesasm.directives"
        ],
        "version": "0.0.8"
    },
    "nescient": {
        "cmdline": [],
        "modules": [
            "nescient",
            "nescient.app",
            "nescient.crypto",
            "nescient.crypto.galois",
            "nescient.packer"
        ],
        "version": "0.3.2"
    },
    "neserqu": {
        "cmdline": [],
        "modules": [
            "neserqu"
        ],
        "version": "2.2.6"
    },
    "neseter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesi": {
        "cmdline": [
            "nesi"
        ],
        "modules": [
            "nes",
            "nes.mappers",
            "nes.rom",
            "nes.settings"
        ],
        "version": "1.2"
    },
    "nesjer": {
        "cmdline": [],
        "modules": [
            "nesjer"
        ],
        "version": "1.3.0"
    },
    "neso": {
        "cmdline": [],
        "modules": [
            "neso"
        ],
        "version": "4.0.0"
    },
    "nesoi": {
        "cmdline": [],
        "modules": [
            "nesoi",
            "nesoi.keystore",
            "nesoi.rest",
            "nesoi.service"
        ],
        "version": "0.0.1"
    },
    "nesoni": {
        "cmdline": [],
        "modules": [
            "nesoni",
            "nesoni.annotation",
            "nesoni.annotation_tools",
            "nesoni.bio",
            "nesoni.bowtie",
            "nesoni.changes",
            "nesoni.clip",
            "nesoni.config",
            "nesoni.consensus",
            "nesoni.consequences",
            "nesoni.core",
            "nesoni.fill_scaffolds",
            "nesoni.fisher_diff",
            "nesoni.grace",
            "nesoni.graph_layout",
            "nesoni.igv",
            "nesoni.io",
            "nesoni.kmer",
            "nesoni.legion",
            "nesoni.normalize",
            "nesoni.nway_diff",
            "nesoni.pastiche",
            "nesoni.peaks",
            "nesoni.recombination",
            "nesoni.reference_directory",
            "nesoni.reporting",
            "nesoni.runr",
            "nesoni.sam",
            "nesoni.samconsensus",
            "nesoni.samcount",
            "nesoni.samimport",
            "nesoni.samshrimp",
            "nesoni.selection",
            "nesoni.shred",
            "nesoni.shrimp",
            "nesoni.span_index",
            "nesoni.spanner",
            "nesoni.statistics",
            "nesoni.storage",
            "nesoni.third_party",
            "nesoni.third_party.vcf",
            "nesoni.third_party.vcf.filters",
            "nesoni.third_party.vcf.model",
            "nesoni.third_party.vcf.parser",
            "nesoni.third_party.vcf.test",
            "nesoni.third_party.vcf.test.prof",
            "nesoni.third_party.vcf.test.test_vcf",
            "nesoni.third_party.vcf.utils",
            "nesoni.trivia",
            "nesoni.variant",
            "nesoni.workflows",
            "nesoni.working_directory",
            "nesoni.workspace",
            "treemaker",
            "treemaker.stores"
        ],
        "version": "0.132"
    },
    "nesper": {
        "cmdline": [],
        "modules": [
            "nesper"
        ],
        "version": "1.2.0"
    },
    "nessrest": {
        "cmdline": [],
        "modules": [
            "nessrest",
            "nessrest.credentials",
            "nessrest.ness6rest",
            "nessrest.ness6scan",
            "nessrest.test_ness6rest"
        ],
        "version": "0.31"
    },
    "nessus": {
        "cmdline": [],
        "modules": [
            "nessus",
            "nessus.common",
            "nessus.utils",
            "tests",
            "tests.test_nessus"
        ],
        "version": "0.0.1"
    },
    "nessy": {
        "cmdline": [],
        "modules": [
            "nessy"
        ],
        "version": "1.5.1"
    },
    "nessy-cli": {
        "cmdline": [],
        "modules": [
            "nessy"
        ],
        "version": "0.8.1"
    },
    "nest": {
        "cmdline": [],
        "modules": [
            "nest"
        ],
        "version": "1.3.0"
    },
    "nest-api": {
        "cmdline": [],
        "modules": [
            "nest"
        ],
        "version": "0.0.1"
    },
    "nest-cx": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nest-function": {
        "cmdline": [],
        "modules": [
            "nest"
        ],
        "version": "1.1.0"
    },
    "nest-le": {
        "cmdline": [],
        "modules": [
            "nest_le"
        ],
        "version": "1.5.0"
    },
    "nest-list": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nest-loop": {
        "cmdline": [],
        "modules": [
            "lala"
        ],
        "version": "2.1.3"
    },
    "nest-p": {
        "cmdline": [],
        "modules": [
            "nest_p"
        ],
        "version": "1.0.0"
    },
    "nest-pf": {
        "cmdline": [],
        "modules": [
            "nest_pf"
        ],
        "version": "1.0.0"
    },
    "nest-printer": {
        "cmdline": [],
        "modules": [
            "nest_printer"
        ],
        "version": "1.1.0"
    },
    "nest-thermostat": {
        "cmdline": [],
        "modules": [
            "nest_thermostat"
        ],
        "version": "1.2"
    },
    "nest1": {
        "cmdline": [],
        "modules": [
            "nest"
        ],
        "version": "1.1.0"
    },
    "nest123456": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nest19930626": {
        "cmdline": [],
        "modules": [
            "nest19930626"
        ],
        "version": "1.0.1"
    },
    "nest34290840184": {
        "cmdline": [],
        "modules": [
            "test"
        ],
        "version": "1.1.1.2"
    },
    "nest888": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesta": {
        "cmdline": [],
        "modules": [
            "nesta"
        ],
        "version": "1.3.0"
    },
    "nestable": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "nestache": {
        "cmdline": [],
        "modules": [
            "nestache",
            "nestache.nestview"
        ],
        "version": "0.4.4"
    },
    "nestar": {
        "cmdline": [],
        "modules": [
            "nestar"
        ],
        "version": "1.4.0"
    },
    "nestcecil": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "neste": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neste20140402r": {
        "cmdline": [],
        "modules": [
            "nester20140402"
        ],
        "version": "1.0"
    },
    "nestea": {
        "cmdline": [],
        "modules": [],
        "version": "1.74.0"
    },
    "nested": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "nested-again": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "0.1"
    },
    "nested-array": {
        "cmdline": [],
        "modules": [
            "nested_array"
        ],
        "version": "1.0.0"
    },
    "nested-dict": {
        "cmdline": [],
        "modules": [
            "nested_dict",
            "nested_dict.implementation"
        ],
        "version": "1.61"
    },
    "nested-list": {
        "cmdline": [],
        "modules": [
            "nested_lists"
        ],
        "version": "1.1.0"
    },
    "nested-list-1": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nested-lists-recurs": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nested-lookup": {
        "cmdline": [],
        "modules": [
            "nested_lookup",
            "nested_lookup.nested_lookup"
        ],
        "version": "0.1.3"
    },
    "nested-nester": {
        "cmdline": [],
        "modules": [
            "nested_nester"
        ],
        "version": "1.2.0"
    },
    "nested-print": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nested-printer": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "nested-query-string": {
        "cmdline": [],
        "modules": [
            "nested_query_string",
            "nested_query_string.nested_query_string",
            "nested_query_string.version"
        ],
        "version": "0.0.1"
    },
    "nested-structures": {
        "cmdline": [],
        "modules": [
            "nested_structures"
        ],
        "version": "0.5"
    },
    "nested-zhanggaoming": {
        "cmdline": [],
        "modules": [
            "print_list"
        ],
        "version": "1.3.0"
    },
    "nested.tar.archives.extractor": {
        "cmdline": [],
        "modules": [],
        "version": "1.1"
    },
    "nestedameya": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestedfacts": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "nesteditemprinter": {
        "cmdline": [],
        "modules": [
            "NestedItemPrinter"
        ],
        "version": "1.4.0"
    },
    "nestedjos": {
        "cmdline": [],
        "modules": [
            "nestedJos"
        ],
        "version": "1.3.0"
    },
    "nestedlist": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestedlistfix": {
        "cmdline": [],
        "modules": [
            "nestedListFix"
        ],
        "version": "1.3.0"
    },
    "nestedlistprint": {
        "cmdline": [],
        "modules": [
            "nestedlistprint"
        ],
        "version": "1.4.0"
    },
    "nestedlists": {
        "cmdline": [],
        "modules": [
            "nestedlists"
        ],
        "version": "1.3.0."
    },
    "nestedprint": {
        "cmdline": [],
        "modules": [
            "nestedPrintList"
        ],
        "version": "1.3.0"
    },
    "nestedprint-0311": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestedrecord": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.0"
    },
    "nestedrecursion": {
        "cmdline": [],
        "modules": [
            "NestedRecursion02"
        ],
        "version": "1.3.0"
    },
    "nesteds": {
        "cmdline": [],
        "modules": [
            "nesteds"
        ],
        "version": "1.2.0"
    },
    "nestedviewer": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nestegg": {
        "cmdline": [],
        "modules": [
            "nestegg",
            "nestegg.main"
        ],
        "version": "0.0.1alpha2"
    },
    "nester": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "nester-001-v1": {
        "cmdline": [],
        "modules": [
            "nester_001_v1"
        ],
        "version": "1.3.0"
    },
    "nester-0926": {
        "cmdline": [],
        "modules": [
            "nester_0926"
        ],
        "version": "1.3.0"
    },
    "nester-1": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nester-1008": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-101": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-12": {
        "cmdline": [],
        "modules": [
            "nester_12"
        ],
        "version": "12.13"
    },
    "nester-123": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nester-14": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.6"
    },
    "nester-1611": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nester-161203": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.9"
    },
    "nester-17": {
        "cmdline": [],
        "modules": [
            "nester_17"
        ],
        "version": "1.3.1"
    },
    "nester-1try": {
        "cmdline": [],
        "modules": [
            "nester_1try"
        ],
        "version": "1.2.0"
    },
    "nester-1zhy": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "nester-2": {
        "cmdline": [],
        "modules": [
            "nesting_2"
        ],
        "version": "1.3.0"
    },
    "nester-20160303": {
        "cmdline": [],
        "modules": [
            "nester_20160303"
        ],
        "version": "1.4.0"
    },
    "nester-20161010": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nester-435": {
        "cmdline": [],
        "modules": [
            "nester_435"
        ],
        "version": "1.4.0"
    },
    "nester-4699680": {
        "cmdline": [],
        "modules": [
            "nester_4699680"
        ],
        "version": "1.0.0"
    },
    "nester-6504": {
        "cmdline": [],
        "modules": [
            "nester_6504"
        ],
        "version": "1.2.0"
    },
    "nester-9641": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-9644": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-999": {
        "cmdline": [],
        "modules": [
            "nester_999"
        ],
        "version": "1.0.0"
    },
    "nester-a": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "nester-agryson": {
        "cmdline": [],
        "modules": [
            "nester_agryson"
        ],
        "version": "1.0.3"
    },
    "nester-agunbiade": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-al-al": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.0"
    },
    "nester-al-ali": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.0"
    },
    "nester-al-ali-final": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-al-ali-finall": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-al-indent": {
        "cmdline": [],
        "modules": [
            "nester_al_indent"
        ],
        "version": "1.0.1"
    },
    "nester-al-indent-2": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.1"
    },
    "nester-allen": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nester-alw": {
        "cmdline": [],
        "modules": [
            "nester_alw"
        ],
        "version": "1.0.0.1"
    },
    "nester-amit": {
        "cmdline": [],
        "modules": [
            "nester_amit"
        ],
        "version": "1.6.0"
    },
    "nester-angelayun": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nester-anial": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-anial2": {
        "cmdline": [],
        "modules": [
            "nester_anial2"
        ],
        "version": "1.0.0"
    },
    "nester-antosan": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.5.0"
    },
    "nester-apocally": {
        "cmdline": [],
        "modules": [
            "nester_Apocally"
        ],
        "version": "1.3.0"
    },
    "nester-apz": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.0"
    },
    "nester-ashish": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-astutulus": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-atl": {
        "cmdline": [],
        "modules": [
            "nester_atl"
        ],
        "version": "1.4.0"
    },
    "nester-atul": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-az": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.0"
    },
    "nester-beyond": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-beyond-new": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-bigbooa": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-bl": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "nester-bla": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-bmy": {
        "cmdline": [],
        "modules": [
            "nester_bmy"
        ],
        "version": "1.5.0"
    },
    "nester-bmy2": {
        "cmdline": [],
        "modules": [
            "nester_bmy2"
        ],
        "version": "1.4.0"
    },
    "nester-bob": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-borba": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-boyang": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-bufan": {
        "cmdline": [],
        "modules": [
            "nester_bufan"
        ],
        "version": "1.0.2"
    },
    "nester-by-ckpiggy": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "nester-by-lyxcoding": {
        "cmdline": [],
        "modules": [
            "nester_by_LYXCoding"
        ],
        "version": "1.0.0"
    },
    "nester-by-ray": {
        "cmdline": [],
        "modules": [
            "nester_by_ray"
        ],
        "version": "1.0.2"
    },
    "nester-by-ruiqing": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-by-rus1lun": {
        "cmdline": [],
        "modules": [
            "nester_by_rus1lun"
        ],
        "version": "1.4.3"
    },
    "nester-byq": {
        "cmdline": [],
        "modules": [
            "nester_byq"
        ],
        "version": "1.3.0"
    },
    "nester-bzh": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nester-bzj": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-c": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "nester-ca": {
        "cmdline": [],
        "modules": [
            "nester_ca"
        ],
        "version": "1.1.0"
    },
    "nester-cai": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.0"
    },
    "nester-chaosjz": {
        "cmdline": [],
        "modules": [
            "nester_Chaosjz"
        ],
        "version": "1.1.0"
    },
    "nester-chapter4": {
        "cmdline": [],
        "modules": [
            "nester_chapter4"
        ],
        "version": "1.2.0"
    },
    "nester-chp4": {
        "cmdline": [],
        "modules": [
            "nester_chap4"
        ],
        "version": "1.2.2"
    },
    "nester-cjs": {
        "cmdline": [],
        "modules": [
            "nester_cjs"
        ],
        "version": "1.4.0"
    },
    "nester-cloud1980-cn": {
        "cmdline": [],
        "modules": [
            "nester_cloud1980_cn"
        ],
        "version": "1.1.0"
    },
    "nester-cmack": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.0"
    },
    "nester-condoor": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nester-cr": {
        "cmdline": [],
        "modules": [
            "nester_cr"
        ],
        "version": "1.1.0"
    },
    "nester-cs": {
        "cmdline": [],
        "modules": [
            "nester_cs"
        ],
        "version": "1.3.0"
    },
    "nester-cv04356015": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-cw": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.2"
    },
    "nester-cww": {
        "cmdline": [],
        "modules": [
            "nester_cww"
        ],
        "version": "1.4.1"
    },
    "nester-cx": {
        "cmdline": [],
        "modules": [
            "nester-cx"
        ],
        "version": "1.0.0"
    },
    "nester-cxx": {
        "cmdline": [],
        "modules": [
            "nester_cxx"
        ],
        "version": "1.4.0"
    },
    "nester-danny": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-dchiu": {
        "cmdline": [],
        "modules": [
            "nester_dchiu"
        ],
        "version": "1.2.0"
    },
    "nester-ddd": {
        "cmdline": [],
        "modules": [
            "nester_ddd"
        ],
        "version": "1.3.0"
    },
    "nester-dhvani2008": {
        "cmdline": [],
        "modules": [
            "nester_Dhvani2008"
        ],
        "version": "1.0.3"
    },
    "nester-djbt": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.3"
    },
    "nester-djf": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-djm": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-dk": {
        "cmdline": [],
        "modules": [
            "nester_dk"
        ],
        "version": "1.1.0"
    },
    "nester-duanoduan": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-dudja": {
        "cmdline": [],
        "modules": [
            "nester_dudja"
        ],
        "version": "1.0.0"
    },
    "nester-effy-zhao": {
        "cmdline": [],
        "modules": [
            "nester_effy_zhao"
        ],
        "version": "1.0.1"
    },
    "nester-eji5024": {
        "cmdline": [],
        "modules": [
            "nester_eji5024"
        ],
        "version": "1.2.0"
    },
    "nester-el-pone": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-elmotionfitte": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.1"
    },
    "nester-erik": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-eunsangjeon": {
        "cmdline": [],
        "modules": [
            "nester_eunsangjeon"
        ],
        "version": "1.3.6"
    },
    "nester-faris": {
        "cmdline": [],
        "modules": [
            "nester_faris"
        ],
        "version": "1.4.0"
    },
    "nester-fatumepta": {
        "cmdline": [],
        "modules": [
            "nester_fatumepta"
        ],
        "version": "1.4.0"
    },
    "nester-fbmm": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "nester-ffxgamer": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nester-fh": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-fhf": {
        "cmdline": [],
        "modules": [
            "nester_fhf"
        ],
        "version": "2.0.1"
    },
    "nester-firs": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nester-first": {
        "cmdline": [],
        "modules": [
            "nester_first"
        ],
        "version": "1.0.3"
    },
    "nester-flame": {
        "cmdline": [],
        "modules": [
            "nester_flame"
        ],
        "version": "1.0.0"
    },
    "nester-for-test": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nester-frank": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "nester-gangzhang": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-gaschuri": {
        "cmdline": [],
        "modules": [
            "nester_gaschuri"
        ],
        "version": "1.3.3"
    },
    "nester-gd": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-gf": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.1"
    },
    "nester-ghsemail": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "3.0.0"
    },
    "nester-gnoban": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.0"
    },
    "nester-gqy": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-gqy01": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-gyre": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nester-h1stpython": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.0"
    },
    "nester-he": {
        "cmdline": [],
        "modules": [
            "nester_he"
        ],
        "version": "1.3.0"
    },
    "nester-head-first-test": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-heheda": {
        "cmdline": [],
        "modules": [
            "nester_heheda"
        ],
        "version": "1.0.0"
    },
    "nester-hf-test": {
        "cmdline": [],
        "modules": [
            "nester_HF_test"
        ],
        "version": "1.3.0"
    },
    "nester-hkm": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nester-hky": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nester-hl": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-hoc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-home": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-howarddeng": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.6.0"
    },
    "nester-hsh": {
        "cmdline": [],
        "modules": [
            "nester_hsh"
        ],
        "version": "1.4.0"
    },
    "nester-huge": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nester-hy03": {
        "cmdline": [],
        "modules": [
            "nester_hy03"
        ],
        "version": "1.2.0"
    },
    "nester-hyh": {
        "cmdline": [],
        "modules": [
            "nester_hyh"
        ],
        "version": "1.1.0"
    },
    "nester-iap": {
        "cmdline": [],
        "modules": [
            "nester_iap"
        ],
        "version": "0.1.4"
    },
    "nester-inhereyes": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.5.0"
    },
    "nester-isac": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "0.0.1"
    },
    "nester-ivan": {
        "cmdline": [],
        "modules": [
            "nester_ivan"
        ],
        "version": "1.0.0"
    },
    "nester-j": {
        "cmdline": [],
        "modules": [
            "nester_j"
        ],
        "version": "1.4.0"
    },
    "nester-jackhsu": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-jackhsu-mac": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-jackieluo-tencent": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.2"
    },
    "nester-jang": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "nester-jayson": {
        "cmdline": [],
        "modules": [
            "nester_jayson"
        ],
        "version": "1.4.2"
    },
    "nester-je": {
        "cmdline": [],
        "modules": [
            "nester_je"
        ],
        "version": "1.3.0"
    },
    "nester-jessy": {
        "cmdline": [],
        "modules": [
            "nester_jessy"
        ],
        "version": "1.5.3"
    },
    "nester-jian": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-jju": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-jk098": {
        "cmdline": [],
        "modules": [
            "nester_jk098"
        ],
        "version": "1.0.0"
    },
    "nester-jl": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.1"
    },
    "nester-jonny": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-joulgo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-jp": {
        "cmdline": [],
        "modules": [
            "nester_jp"
        ],
        "version": "1.1.4"
    },
    "nester-jpark": {
        "cmdline": [],
        "modules": [
            "nester_jpark"
        ],
        "version": "1.2.0"
    },
    "nester-jr001": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-jr001-v1": {
        "cmdline": [],
        "modules": [
            "nester_jr001_v1"
        ],
        "version": "1.0.0"
    },
    "nester-jr003": {
        "cmdline": [],
        "modules": [
            "nester_jr003"
        ],
        "version": "1.5.0"
    },
    "nester-justin-lin": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nester-jwjun": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-jwkang2": {
        "cmdline": [],
        "modules": [
            "nester_jwkang2"
        ],
        "version": "1.1.2"
    },
    "nester-jyyy": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-kellin": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-ken": {
        "cmdline": [],
        "modules": [
            "nester_ken"
        ],
        "version": "1.3.0"
    },
    "nester-kevin": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-king.hb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-kk": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-koppie": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.1"
    },
    "nester-kushani": {
        "cmdline": [],
        "modules": [
            "nester_Kushani"
        ],
        "version": "1.4.0"
    },
    "nester-kypaik": {
        "cmdline": [],
        "modules": [
            "nester_kypaik"
        ],
        "version": "1.1.2"
    },
    "nester-kyun": {
        "cmdline": [],
        "modules": [
            "nester_kyun"
        ],
        "version": "1.3.0"
    },
    "nester-lab2": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-lcy": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nester-learn-1": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-lee": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-lello": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-leo": {
        "cmdline": [],
        "modules": [
            "nester_leo"
        ],
        "version": "1.0.0"
    },
    "nester-leontest": {
        "cmdline": [],
        "modules": [
            "nester_leontest"
        ],
        "version": "1.4.0"
    },
    "nester-lewx": {
        "cmdline": [],
        "modules": [
            "nester_lewx"
        ],
        "version": "1.3.0"
    },
    "nester-lghoo": {
        "cmdline": [],
        "modules": [
            "nester_lghoo"
        ],
        "version": "1.0.0"
    },
    "nester-lh": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-lhb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-lhs": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nester-lhwd": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.7.0"
    },
    "nester-li": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "nester-libo": {
        "cmdline": [],
        "modules": [
            "nester_libo"
        ],
        "version": "1.0.0"
    },
    "nester-lind": {
        "cmdline": [],
        "modules": [
            "nester_LinD"
        ],
        "version": "1.4.0"
    },
    "nester-list": {
        "cmdline": [],
        "modules": [
            "nester_list"
        ],
        "version": "1.3.0"
    },
    "nester-list-print": {
        "cmdline": [],
        "modules": [
            "nester_list_print"
        ],
        "version": "1.4.0"
    },
    "nester-listprinter": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-liu": {
        "cmdline": [],
        "modules": [
            "nester_liu"
        ],
        "version": "1.0.0"
    },
    "nester-liuciuse": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-liuxuh": {
        "cmdline": [],
        "modules": [
            "nester_liuxuh"
        ],
        "version": "1.1.0"
    },
    "nester-ljj": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "nester-ljp": {
        "cmdline": [],
        "modules": [
            "nester_ljp"
        ],
        "version": "1.1.0"
    },
    "nester-ljs": {
        "cmdline": [],
        "modules": [
            "nester_ljs"
        ],
        "version": "1.3.0"
    },
    "nester-logistex": {
        "cmdline": [],
        "modules": [
            "nester_logistex"
        ],
        "version": "1.3.0"
    },
    "nester-lorraine": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.5.0"
    },
    "nester-lu-na": {
        "cmdline": [],
        "modules": [
            "nester_lu_na"
        ],
        "version": "1.2.0"
    },
    "nester-luckzpz": {
        "cmdline": [],
        "modules": [
            "nester",
            "sanitize"
        ],
        "version": "1.5.4"
    },
    "nester-lxp": {
        "cmdline": [],
        "modules": [
            "nester_lxp"
        ],
        "version": "1.3.0"
    },
    "nester-lybn": {
        "cmdline": [],
        "modules": [
            "nester_lybn"
        ],
        "version": "1.2.0"
    },
    "nester-lym": {
        "cmdline": [],
        "modules": [
            "nester_lym"
        ],
        "version": "1.3.0"
    },
    "nester-madman": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nester-maeng": {
        "cmdline": [],
        "modules": [
            "nester_maeng"
        ],
        "version": "1.5.0"
    },
    "nester-mark": {
        "cmdline": [],
        "modules": [
            "nester_mark"
        ],
        "version": "1.3.0"
    },
    "nester-massy": {
        "cmdline": [],
        "modules": [],
        "version": "1.4.0"
    },
    "nester-meu": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-mfb": {
        "cmdline": [],
        "modules": [
            "nester_mfb"
        ],
        "version": "1.3.0"
    },
    "nester-mgrd": {
        "cmdline": [],
        "modules": [
            "nester_mgrd"
        ],
        "version": "1.2.0"
    },
    "nester-micahel1113": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nester-milesh": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.4"
    },
    "nester-mizw": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nester-mj": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nester-mlnwc": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nester-my": {
        "cmdline": [],
        "modules": [
            "nester_my"
        ],
        "version": "1.3.0"
    },
    "nester-naren": {
        "cmdline": [],
        "modules": [
            "Nester"
        ],
        "version": "1.0.0"
    },
    "nester-nested": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-new": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-new-jwkang2": {
        "cmdline": [],
        "modules": [
            "nester_new_jwkang2"
        ],
        "version": "1.2.1"
    },
    "nester-nie": {
        "cmdline": [],
        "modules": [
            "nester_nie"
        ],
        "version": "1.4.0"
    },
    "nester-nihal": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-ojs": {
        "cmdline": [],
        "modules": [
            "nester_ojs"
        ],
        "version": "1.4.0"
    },
    "nester-orilifsks": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.1"
    },
    "nester-paladin": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.5.0"
    },
    "nester-paryzowy": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nester-pat": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-pconstans": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-pconstans-level": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nester-peridot": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.0"
    },
    "nester-peter": {
        "cmdline": [],
        "modules": [
            "nester_peter"
        ],
        "version": "1.1.0"
    },
    "nester-pj": {
        "cmdline": [],
        "modules": [
            "nester_pj"
        ],
        "version": "1.0.0"
    },
    "nester-plough": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.1"
    },
    "nester-poscom": {
        "cmdline": [],
        "modules": [
            "nester_poscom"
        ],
        "version": "1.3.0"
    },
    "nester-practice": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-pre": {
        "cmdline": [],
        "modules": [
            "nester_pre",
            "nester_pre.nester_pre",
            "nester_pre.nester_pre_version"
        ],
        "version": "1.4.4"
    },
    "nester-print": {
        "cmdline": [],
        "modules": [
            "nester_print"
        ],
        "version": "1.3.0"
    },
    "nester-print-all": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-pro": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.0"
    },
    "nester-pure": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-py3-jackhsu-mac": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nester-qaq": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.0"
    },
    "nester-qawra": {
        "cmdline": [],
        "modules": [
            "nester_qawra"
        ],
        "version": "1.3.0"
    },
    "nester-qk": {
        "cmdline": [],
        "modules": [
            "nester_qk"
        ],
        "version": "1.4.0"
    },
    "nester-qm": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-qmn": {
        "cmdline": [],
        "modules": [
            "nester_qmn"
        ],
        "version": "1.0.0"
    },
    "nester-quark21": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-qwerty": {
        "cmdline": [],
        "modules": [
            "nester_qwerty"
        ],
        "version": "1.6.0"
    },
    "nester-raj": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-rc54": {
        "cmdline": [],
        "modules": [
            "nester_rc54"
        ],
        "version": "1.3.0"
    },
    "nester-redbrush": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.1"
    },
    "nester-reky": {
        "cmdline": [],
        "modules": [
            "nester_reky"
        ],
        "version": "1.0.0"
    },
    "nester-renan": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-renyutao": {
        "cmdline": [],
        "modules": [
            "nester_renyutao"
        ],
        "version": "1.1.0"
    },
    "nester-rever": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nester-revised": {
        "cmdline": [],
        "modules": [
            "Nester_revised"
        ],
        "version": "1.2.0"
    },
    "nester-rhidus": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.1"
    },
    "nester-rickyzhao": {
        "cmdline": [],
        "modules": [
            "nester_rickyzhao"
        ],
        "version": "1.7.0"
    },
    "nester-rjhurani": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nester-rl": {
        "cmdline": [],
        "modules": [
            "nester_rl"
        ],
        "version": "1.4.0"
    },
    "nester-robin": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "nester-robwessels": {
        "cmdline": [],
        "modules": [
            "nester_robwessels"
        ],
        "version": "1.0.0"
    },
    "nester-roger": {
        "cmdline": [],
        "modules": [
            "nester_roger"
        ],
        "version": "1.0.0"
    },
    "nester-roger4": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-rohan": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-roy": {
        "cmdline": [],
        "modules": [
            "nester_roy"
        ],
        "version": "1.3.0"
    },
    "nester-rpf122515": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "0.0.3"
    },
    "nester-rrestituti": {
        "cmdline": [],
        "modules": [
            "nester_rrestituti"
        ],
        "version": "1.3.0"
    },
    "nester-rupi": {
        "cmdline": [],
        "modules": [
            "nester_rupi"
        ],
        "version": "1.2.0"
    },
    "nester-sample": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-sbb": {
        "cmdline": [],
        "modules": [
            "nester_sbb"
        ],
        "version": "1.3.2"
    },
    "nester-sh": {
        "cmdline": [],
        "modules": [
            "nester_SH"
        ],
        "version": "1.4.0"
    },
    "nester-shcf": {
        "cmdline": [],
        "modules": [
            "nester_shcf"
        ],
        "version": "1.0.0"
    },
    "nester-sheikh": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nester-sherlockyang": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.1"
    },
    "nester-shihaoxu": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-shikaru92": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-shikuiyang": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-shixiang": {
        "cmdline": [],
        "modules": [
            "nester_shixiang"
        ],
        "version": "1.3.0"
    },
    "nester-shohbit": {
        "cmdline": [],
        "modules": [
            "nester_shohbit"
        ],
        "version": "1.0.0"
    },
    "nester-sixsan": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nester-skypinglee": {
        "cmdline": [],
        "modules": [
            "nester_skypinglee"
        ],
        "version": "1.2.0"
    },
    "nester-slayer": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-smc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-snow": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nester-splendour": {
        "cmdline": [],
        "modules": [
            "nester_splendour"
        ],
        "version": "1.3.0"
    },
    "nester-sravs": {
        "cmdline": [],
        "modules": [
            "nester-sravs"
        ],
        "version": "1.2.0"
    },
    "nester-st": {
        "cmdline": [],
        "modules": [
            "nester_st"
        ],
        "version": "1.0.0"
    },
    "nester-steve": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "nester-sun": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "4.0.0"
    },
    "nester-sunny": {
        "cmdline": [],
        "modules": [
            "nester_sunny"
        ],
        "version": "1.3.0"
    },
    "nester-suy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-sym": {
        "cmdline": [],
        "modules": [
            "nester_sym"
        ],
        "version": "1.2.0"
    },
    "nester-szin2012": {
        "cmdline": [],
        "modules": [
            "netster_szin2012"
        ],
        "version": "1.0.0"
    },
    "nester-tad-pimp": {
        "cmdline": [],
        "modules": [],
        "version": "1.5.0"
    },
    "nester-tanvir": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "nester-tc": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-test": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-test-001": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-test-4122017": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-test-crm": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nester-test-first": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "nester-test-ignoreit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-test-juanrd2": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-test-me": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nester-test-play": {
        "cmdline": [],
        "modules": [
            "nester_test_play"
        ],
        "version": "1.0.3"
    },
    "nester-test-qult": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-test-sun": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nester-test-tester": {
        "cmdline": [],
        "modules": [
            "nester_test_tester"
        ],
        "version": "1.4.0"
    },
    "nester-test-winni": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-test00": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-test1": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-testq": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-third": {
        "cmdline": [],
        "modules": [
            "nester_third"
        ],
        "version": "1.0.0"
    },
    "nester-tiko": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nester-tk": {
        "cmdline": [],
        "modules": [
            "nester_tk"
        ],
        "version": "1.5.0"
    },
    "nester-ttram": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.0"
    },
    "nester-tun": {
        "cmdline": [],
        "modules": [
            "nester_tun"
        ],
        "version": "1.3.0"
    },
    "nester-tushar": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nester-ty": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-uranus0206": {
        "cmdline": [],
        "modules": [],
        "version": "1.4.0"
    },
    "nester-v": {
        "cmdline": [],
        "modules": [
            "nester_v"
        ],
        "version": "1.2.0"
    },
    "nester-v01": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-vb": {
        "cmdline": [],
        "modules": [
            "nester_vb"
        ],
        "version": "1.3.2"
    },
    "nester-vini": {
        "cmdline": [],
        "modules": [
            "nester_vini"
        ],
        "version": "1.0.0"
    },
    "nester-vlad-korotkevich-version": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-volnet": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.5"
    },
    "nester-w": {
        "cmdline": [],
        "modules": [
            "nester_w"
        ],
        "version": "1.7.0"
    },
    "nester-wanglei": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.0"
    },
    "nester-wb": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.0"
    },
    "nester-weilit": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nester-whele": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-wht": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-wiki": {
        "cmdline": [],
        "modules": [
            "nester_wiki"
        ],
        "version": "1.2.0"
    },
    "nester-wind": {
        "cmdline": [],
        "modules": [
            "nester_wind"
        ],
        "version": "1.1.0"
    },
    "nester-wing": {
        "cmdline": [],
        "modules": [
            "nester_wing"
        ],
        "version": "1.1.3"
    },
    "nester-wjc": {
        "cmdline": [],
        "modules": [
            "nester_wjc"
        ],
        "version": "1.1.0"
    },
    "nester-wong": {
        "cmdline": [],
        "modules": [
            "nester_wong"
        ],
        "version": "1.0.0"
    },
    "nester-wq": {
        "cmdline": [],
        "modules": [
            "nester_wq"
        ],
        "version": "1.1.0"
    },
    "nester-wudashan": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-wy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-wyp": {
        "cmdline": [],
        "modules": [
            "nester_wyp"
        ],
        "version": "2.0.0"
    },
    "nester-xcc": {
        "cmdline": [],
        "modules": [
            "nester_xcc"
        ],
        "version": "1.3.0"
    },
    "nester-xdf000": {
        "cmdline": [],
        "modules": [
            "nester_xdf000"
        ],
        "version": "1.0.2"
    },
    "nester-xianyu": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-xqi": {
        "cmdline": [],
        "modules": [
            "nester_xqi"
        ],
        "version": "3.1.0"
    },
    "nester-xu": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.1"
    },
    "nester-xz": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "nester-yang": {
        "cmdline": [],
        "modules": [
            "nester_yang"
        ],
        "version": "1.3.0"
    },
    "nester-yasut2016": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.1"
    },
    "nester-ycchen": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-ydk": {
        "cmdline": [],
        "modules": [
            "nester_ydk"
        ],
        "version": "1.2.0"
    },
    "nester-yhq": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nester-yj": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "nester-ykjang": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nester-yoela5": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-yogi": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nester-you-haha": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "nester-young": {
        "cmdline": [],
        "modules": [
            "nester_young"
        ],
        "version": "1.5.0"
    },
    "nester-ysc": {
        "cmdline": [],
        "modules": [
            "nester_ysc"
        ],
        "version": "1.4.0"
    },
    "nester-yt": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.1"
    },
    "nester-yumin": {
        "cmdline": [],
        "modules": [
            "nester_Yumin"
        ],
        "version": "1.3.0"
    },
    "nester-yy": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "nester-zain": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-zb": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nester-zhang": {
        "cmdline": [],
        "modules": [
            "nester_Zhang"
        ],
        "version": "1.0.0"
    },
    "nester-zhaowei-test": {
        "cmdline": [],
        "modules": [
            "nester_zhaowei_test"
        ],
        "version": "1.0.7"
    },
    "nester-zhen": {
        "cmdline": [],
        "modules": [
            "nester_zhen"
        ],
        "version": "1.3.0"
    },
    "nester-zhoubiao": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester-zhy2": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.3"
    },
    "nester-zie": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.1"
    },
    "nester-zizu": {
        "cmdline": [],
        "modules": [
            "nester_zizu"
        ],
        "version": "1.3.0"
    },
    "nester-zj": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nester-zw": {
        "cmdline": [],
        "modules": [
            "nester_zw"
        ],
        "version": "1.0.0"
    },
    "nester-zxp": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester-zy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-zz": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester-zz7zz7z": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nester-zzh": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.1"
    },
    "nester-zzn": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester.1.0.0.0": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester.g": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.5.0"
    },
    "nester.py": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nester0": {
        "cmdline": [],
        "modules": [
            "nester0"
        ],
        "version": "1.1.0"
    },
    "nester000": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester00000": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nester0001": {
        "cmdline": [],
        "modules": [
            "nester0001"
        ],
        "version": "1.3.0"
    },
    "nester001": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester001as": {
        "cmdline": [],
        "modules": [
            "nester001as"
        ],
        "version": "1.4.0"
    },
    "nester002": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.2"
    },
    "nester007": {
        "cmdline": [],
        "modules": [
            "nester007"
        ],
        "version": "1.2.0"
    },
    "nester01": {
        "cmdline": [],
        "modules": [
            "nester01"
        ],
        "version": "1.4.0"
    },
    "nester010101": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nester0101zz": {
        "cmdline": [],
        "modules": [
            "nester0101zz"
        ],
        "version": "1.3.0"
    },
    "nester023": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.0"
    },
    "nester02300000": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester02332222": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.1"
    },
    "nester0702": {
        "cmdline": [],
        "modules": [
            "nester0702"
        ],
        "version": "1.3.0"
    },
    "nester0822": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester1": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nester10": {
        "cmdline": [],
        "modules": [
            "nester10"
        ],
        "version": "1.0.0"
    },
    "nester100": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester1001": {
        "cmdline": [],
        "modules": [
            "nester1001"
        ],
        "version": "1.3.0"
    },
    "nester10086": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.5.0"
    },
    "nester101": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.0"
    },
    "nester102": {
        "cmdline": [],
        "modules": [
            "nester102"
        ],
        "version": "1.3.2"
    },
    "nester1052451": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester11": {
        "cmdline": [],
        "modules": [
            "nester11"
        ],
        "version": "1.3.0"
    },
    "nester1103": {
        "cmdline": [],
        "modules": [
            "nester1103"
        ],
        "version": "1.3.0"
    },
    "nester111": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.1.1"
    },
    "nester111212": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nester1123": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester11232": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nester12": {
        "cmdline": [],
        "modules": [
            "nester12"
        ],
        "version": "1.2.0"
    },
    "nester12003": {
        "cmdline": [],
        "modules": [
            "nester12003"
        ],
        "version": "1.0.0"
    },
    "nester1212": {
        "cmdline": [],
        "modules": [
            "nester1212"
        ],
        "version": "1.3.0"
    },
    "nester1216": {
        "cmdline": [],
        "modules": [
            "nester1216"
        ],
        "version": "1.2.0"
    },
    "nester1217": {
        "cmdline": [],
        "modules": [
            "nester1217"
        ],
        "version": "1.3.0"
    },
    "nester123": {
        "cmdline": [],
        "modules": [
            "nester123"
        ],
        "version": "1.1.0"
    },
    "nester123-321": {
        "cmdline": [],
        "modules": [
            "nester123_321"
        ],
        "version": "1.0.0"
    },
    "nester12312312": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester1234": {
        "cmdline": [],
        "modules": [
            "nester1234"
        ],
        "version": "1.3.0"
    },
    "nester12345": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester126": {
        "cmdline": [],
        "modules": [
            "nester126"
        ],
        "version": "1.3.0"
    },
    "nester130": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nester1402": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester141414": {
        "cmdline": [],
        "modules": [
            "nester141414"
        ],
        "version": "1.3.0"
    },
    "nester1566": {
        "cmdline": [],
        "modules": [
            "nester1566"
        ],
        "version": "1.3.0"
    },
    "nester160712": {
        "cmdline": [],
        "modules": [
            "nester160712"
        ],
        "version": "1.1.6"
    },
    "nester1879": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester1894": {
        "cmdline": [],
        "modules": [
            "nester1894"
        ],
        "version": "1.2.0"
    },
    "nester1984101220121212": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester1986": {
        "cmdline": [],
        "modules": [
            "nester1986"
        ],
        "version": "1.1.0"
    },
    "nester198882": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester1990xing": {
        "cmdline": [],
        "modules": [
            "nester1990xing"
        ],
        "version": "1.2.6"
    },
    "nester1991": {
        "cmdline": [],
        "modules": [
            "nester1991"
        ],
        "version": "4.1.0"
    },
    "nester1py": {
        "cmdline": [],
        "modules": [
            "nester1py"
        ],
        "version": "1.3.0"
    },
    "nester1testing": {
        "cmdline": [],
        "modules": [
            "nestertest"
        ],
        "version": "1.1.4"
    },
    "nester1z1": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester2": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester20111001": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester201409092324": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester20150601": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "nester20150609": {
        "cmdline": [],
        "modules": [
            "nester20150609"
        ],
        "version": "1.0.0"
    },
    "nester2016": {
        "cmdline": [],
        "modules": [
            "nester2016"
        ],
        "version": "1.4.0"
    },
    "nester201605091111": {
        "cmdline": [],
        "modules": [
            "nester201605091111"
        ],
        "version": "1.1.1.1"
    },
    "nester20160512": {
        "cmdline": [],
        "modules": [
            "nester20160512"
        ],
        "version": "1.2.0"
    },
    "nester20160621": {
        "cmdline": [],
        "modules": [
            "nester20160621"
        ],
        "version": "1.3.0"
    },
    "nester20160803": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester20160805": {
        "cmdline": [],
        "modules": [
            "nester20160805"
        ],
        "version": "1.0.0"
    },
    "nester20161115": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester20161225": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester2017": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester20170405": {
        "cmdline": [],
        "modules": [
            "nester20170405"
        ],
        "version": "1.5.0"
    },
    "nester21": {
        "cmdline": [],
        "modules": [
            "nester21"
        ],
        "version": "1.0.0"
    },
    "nester2112": {
        "cmdline": [],
        "modules": [
            "nester2112"
        ],
        "version": "1.4.0"
    },
    "nester21425": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester22": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester222": {
        "cmdline": [],
        "modules": [
            "nester222"
        ],
        "version": "2.0.3"
    },
    "nester23": {
        "cmdline": [],
        "modules": [
            "nester2"
        ],
        "version": "1.0.0"
    },
    "nester233": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester234": {
        "cmdline": [],
        "modules": [],
        "version": "1.40"
    },
    "nester2421307191": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester2501": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester26": {
        "cmdline": [],
        "modules": [
            "nester26"
        ],
        "version": "1.1.0"
    },
    "nester2768": {
        "cmdline": [],
        "modules": [
            "nester2768"
        ],
        "version": "1.3.0"
    },
    "nester29": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester290668": {
        "cmdline": [],
        "modules": [
            "nester290668"
        ],
        "version": "1.4.0"
    },
    "nester2999": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.0"
    },
    "nester3": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nester304": {
        "cmdline": [],
        "modules": [
            "nester304"
        ],
        "version": "1.3.0"
    },
    "nester3421234213": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester35": {
        "cmdline": [],
        "modules": [
            "nester35"
        ],
        "version": "1.3.0"
    },
    "nester403": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester403m": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3"
    },
    "nester425": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester47154": {
        "cmdline": [],
        "modules": [
            "nester47154"
        ],
        "version": "1.0.0"
    },
    "nester5": {
        "cmdline": [],
        "modules": [
            "nester5"
        ],
        "version": "1.3"
    },
    "nester525": {
        "cmdline": [],
        "modules": [
            "nester525"
        ],
        "version": "3.5.3"
    },
    "nester714": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester77": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester7758": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.1"
    },
    "nester7863": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nester8214.py": {
        "cmdline": [],
        "modules": [
            "nester8214"
        ],
        "version": "1.3.0"
    },
    "nester8526": {
        "cmdline": [],
        "modules": [
            "nester8526"
        ],
        "version": "1.1.0"
    },
    "nester8653": {
        "cmdline": [],
        "modules": [
            "nester8653"
        ],
        "version": "1.0.1"
    },
    "nester888": {
        "cmdline": [],
        "modules": [
            "nester888"
        ],
        "version": "1.0.0"
    },
    "nester9889": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nester99": {
        "cmdline": [],
        "modules": [
            "nester99"
        ],
        "version": "1.2.0"
    },
    "nesteraa": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nesterabhishek": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesteramila": {
        "cmdline": [],
        "modules": [
            "nesteramila"
        ],
        "version": "1.0.0"
    },
    "nesteramy": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.3"
    },
    "nesterap": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterarneill": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nesteraron": {
        "cmdline": [],
        "modules": [
            "nesteraaron"
        ],
        "version": "1.0.0"
    },
    "nesterasd": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterasdd": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nesterbackflow": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterbrant": {
        "cmdline": [],
        "modules": [
            "nesterbrant"
        ],
        "version": "1.0.0"
    },
    "nesterbyankit": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nesterbychrisx": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterbyg": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nesterbymehulsharma": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.2"
    },
    "nesterc": {
        "cmdline": [],
        "modules": [
            "nesterC"
        ],
        "version": "1.4.0"
    },
    "nestercao": {
        "cmdline": [],
        "modules": [
            "nesterCAO"
        ],
        "version": "1.0.0"
    },
    "nestercc": {
        "cmdline": [],
        "modules": [
            "nestercc"
        ],
        "version": "1.0.0"
    },
    "nestercece": {
        "cmdline": [],
        "modules": [
            "nesterCece"
        ],
        "version": "1.3.0"
    },
    "nesterchanged": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterchenchengkuan": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nesterchy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestercj": {
        "cmdline": [],
        "modules": [
            "nestercj"
        ],
        "version": "1.0.5"
    },
    "nestercjg": {
        "cmdline": [],
        "modules": [
            "nestercjg"
        ],
        "version": "1.3.0"
    },
    "nesterck": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestercp": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.0"
    },
    "nestercpp": {
        "cmdline": [],
        "modules": [
            "nestercpp"
        ],
        "version": "1.0.0"
    },
    "nestercrs1000": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nestercym": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "nesterdanilo": {
        "cmdline": [],
        "modules": [
            "nesterdanilo"
        ],
        "version": "1.1.0"
    },
    "nesterdaves": {
        "cmdline": [],
        "modules": [
            "nesterdaves"
        ],
        "version": "1.3.0"
    },
    "nesterdlg": {
        "cmdline": [],
        "modules": [
            "nesterDLG"
        ],
        "version": "1.0.0"
    },
    "nesterdot": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nesterdzl": {
        "cmdline": [],
        "modules": [
            "nesterdzl"
        ],
        "version": "1.2.0"
    },
    "nestereirol": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterejeh": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nesterenos": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterer": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nesterette": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nesterfaund": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nesterffff": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nesterfg": {
        "cmdline": [],
        "modules": [
            "nesterfg"
        ],
        "version": "1.0.0"
    },
    "nesterfirst-name": {
        "cmdline": [],
        "modules": [
            "nesterfirst_name"
        ],
        "version": "1.0.0"
    },
    "nesterforzjq": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.3"
    },
    "nesterglebson": {
        "cmdline": [],
        "modules": [
            "nesterglebson"
        ],
        "version": "1.3.0"
    },
    "nesterguopeng": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterharkit": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.4"
    },
    "nesterhejingwei": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nesterhfp-test": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterhhh": {
        "cmdline": [],
        "modules": [
            "nesterhhh"
        ],
        "version": "1.0.1"
    },
    "nesterhj": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterhms": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "nesterhou": {
        "cmdline": [],
        "modules": [
            "nesterhou"
        ],
        "version": "1.1.0"
    },
    "nesterhoverqjl": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nesterhs": {
        "cmdline": [],
        "modules": [
            "nesterhs"
        ],
        "version": "1.3.0"
    },
    "nesterhsr": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nesterhuwei": {
        "cmdline": [],
        "modules": [
            "nesterhuwei"
        ],
        "version": "1.0.0"
    },
    "nesterhyb": {
        "cmdline": [],
        "modules": [
            "nesterhyb"
        ],
        "version": "1.5.0"
    },
    "nesterhzf": {
        "cmdline": [],
        "modules": [
            "nesterHZF"
        ],
        "version": "1.5.0"
    },
    "nesterice": {
        "cmdline": [],
        "modules": [
            "nesterice"
        ],
        "version": "1.4.0"
    },
    "nesterii": {
        "cmdline": [],
        "modules": [
            "nesterII"
        ],
        "version": "1.2.0"
    },
    "nesterimyoyo": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "nestering": {
        "cmdline": [],
        "modules": [
            "nestering"
        ],
        "version": "1.3.0"
    },
    "nesteringu": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nesterino": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.0"
    },
    "nesterjackie": {
        "cmdline": [],
        "modules": [
            "nesterJackie"
        ],
        "version": "1.2.0"
    },
    "nesterjames": {
        "cmdline": [],
        "modules": [],
        "version": "1.4.0"
    },
    "nesterjcs": {
        "cmdline": [],
        "modules": [
            "nesterjcs"
        ],
        "version": "1.0.0"
    },
    "nesterjds": {
        "cmdline": [],
        "modules": [
            "nesterjds"
        ],
        "version": "1.2.0"
    },
    "nesterjenny0914": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterjerrychan": {
        "cmdline": [],
        "modules": [
            "nesterjerrychan"
        ],
        "version": "1.4"
    },
    "nesterjian": {
        "cmdline": [],
        "modules": [
            "nesterJian"
        ],
        "version": "1.1.0"
    },
    "nesterjinx1": {
        "cmdline": [],
        "modules": [
            "nesterJinX1"
        ],
        "version": "1.3.0"
    },
    "nesterjjanggu": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "nesterjnam": {
        "cmdline": [],
        "modules": [
            "nesterjnam"
        ],
        "version": "1.3.0"
    },
    "nesterjoeyzy": {
        "cmdline": [],
        "modules": [
            "nesterjoeyzy"
        ],
        "version": "1.3.0"
    },
    "nesterjohn": {
        "cmdline": [],
        "modules": [
            "nesterjohn"
        ],
        "version": "9.9.13"
    },
    "nesterjooim": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterjtu": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nesterjy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterkang": {
        "cmdline": [],
        "modules": [
            "nesterkang"
        ],
        "version": "1.5.0"
    },
    "nesterken": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterkkk": {
        "cmdline": [],
        "modules": [
            "nesterkkk"
        ],
        "version": "1.0.0"
    },
    "nesterkw": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterlaf": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nesterlalala": {
        "cmdline": [],
        "modules": [
            "nesterlalala"
        ],
        "version": "1.0.1"
    },
    "nesterlaurent": {
        "cmdline": [],
        "modules": [
            "nesterlaurent"
        ],
        "version": "1.0.0"
    },
    "nesterless": {
        "cmdline": [],
        "modules": [
            "nesterless"
        ],
        "version": "2.0.0"
    },
    "nesterlhb1": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterlincho": {
        "cmdline": [],
        "modules": [
            "nesterlincho"
        ],
        "version": "1.3.0"
    },
    "nesterlindatest": {
        "cmdline": [],
        "modules": [
            "nesterLindatest"
        ],
        "version": "1.1.2"
    },
    "nesterlist": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nesterliuqin": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nesterlixin": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.0"
    },
    "nesterlol": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterlrb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterlxw": {
        "cmdline": [],
        "modules": [
            "nesterlxw"
        ],
        "version": "1.0.0"
    },
    "nesterly": {
        "cmdline": [],
        "modules": [
            "nesterly"
        ],
        "version": "1.0.0"
    },
    "nesterm": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.2"
    },
    "nesterman": {
        "cmdline": [],
        "modules": [
            "nesterman"
        ],
        "version": "1.2.0"
    },
    "nestermanu": {
        "cmdline": [],
        "modules": [
            "nestermanu"
        ],
        "version": "1.0.2"
    },
    "nestermatano": {
        "cmdline": [],
        "modules": [
            "nesterMatano"
        ],
        "version": "1.3.1"
    },
    "nestermem": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestermetributor": {
        "cmdline": [],
        "modules": [
            "NesterMetributor"
        ],
        "version": "1.0.0"
    },
    "nestermgg": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nestermine": {
        "cmdline": [],
        "modules": [
            "nestermine"
        ],
        "version": "1.2"
    },
    "nestermm": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nestermn": {
        "cmdline": [],
        "modules": [
            "nesterMN"
        ],
        "version": "1.1.0"
    },
    "nestermono": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestermy123": {
        "cmdline": [],
        "modules": [
            "nestermy123"
        ],
        "version": "1.3.0"
    },
    "nestername": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nesternew": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nesternhj": {
        "cmdline": [],
        "modules": [
            "nesterNHJ"
        ],
        "version": "1.4.0"
    },
    "nesternin": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterniwesh": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nesternkchem09": {
        "cmdline": [],
        "modules": [
            "nesternkchem09"
        ],
        "version": "1.1.0"
    },
    "nesternyx": {
        "cmdline": [],
        "modules": [
            "nesternyx"
        ],
        "version": "1.5.0"
    },
    "nesterolavolucena": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nesterone": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterov": {
        "cmdline": [],
        "modules": [
            "Nesterov"
        ],
        "version": "0.1.0"
    },
    "nesterp": {
        "cmdline": [],
        "modules": [
            "nesterP"
        ],
        "version": "1.0.0"
    },
    "nesterpc007": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nesterpgaines937": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterppp": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.0"
    },
    "nesterpr": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "nesterprint": {
        "cmdline": [],
        "modules": [
            "nesterprint"
        ],
        "version": "3.0.0"
    },
    "nesterprinter": {
        "cmdline": [],
        "modules": [
            "nesterprinter"
        ],
        "version": "1.3.0"
    },
    "nesterprussell1960": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterpt": {
        "cmdline": [],
        "modules": [
            "nesterpt"
        ],
        "version": "1.2.0"
    },
    "nesterpy": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nesterpy00": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nesterql": {
        "cmdline": [],
        "modules": [],
        "version": "1.2"
    },
    "nesterqwe": {
        "cmdline": [],
        "modules": [
            "nesterqwe"
        ],
        "version": "1.4.1"
    },
    "nesterr": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nesterrm160408": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.0"
    },
    "nesterrmj": {
        "cmdline": [],
        "modules": [
            "nesterrmj"
        ],
        "version": "1.3.0"
    },
    "nesterrr01": {
        "cmdline": [],
        "modules": [
            "nesterrr01"
        ],
        "version": "1.4.0"
    },
    "nesterrrzzz041": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "nesters": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestersad": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "nesterscorp": {
        "cmdline": [],
        "modules": [
            "nesterscorp"
        ],
        "version": "1.3.0"
    },
    "nestersfunmagiccar": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestershan": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nestershuhang": {
        "cmdline": [],
        "modules": [
            "nesterShuHang"
        ],
        "version": "1.1.0"
    },
    "nestershuku": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestersjp": {
        "cmdline": [],
        "modules": [
            "NesterSJP"
        ],
        "version": "1.0.0"
    },
    "nestersl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterspc": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.1"
    },
    "nestersrinath": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.6.0"
    },
    "nesterss": {
        "cmdline": [],
        "modules": [
            "nesterss"
        ],
        "version": "0.0.0"
    },
    "nesterssssss": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nesterst": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterstdout": {
        "cmdline": [],
        "modules": [
            "nesterstdout"
        ],
        "version": "1.1.0"
    },
    "nestersumit": {
        "cmdline": [],
        "modules": [
            "nestersumit"
        ],
        "version": "1.2.0"
    },
    "nesterswe": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterswp": {
        "cmdline": [],
        "modules": [
            "nesterswp"
        ],
        "version": "1.0.0"
    },
    "nestert": {
        "cmdline": [],
        "modules": [
            "nesterT"
        ],
        "version": "1.0.0"
    },
    "nestertanayamitshah": {
        "cmdline": [],
        "modules": [
            "nestertanayamitshah"
        ],
        "version": "1.0.0"
    },
    "nestertarys": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestertest": {
        "cmdline": [],
        "modules": [
            "nestertest"
        ],
        "version": "1.0.0"
    },
    "nestertest0": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.0"
    },
    "nestertest1101": {
        "cmdline": [],
        "modules": [
            "nestertest1101"
        ],
        "version": "1.4.0"
    },
    "nestertest12": {
        "cmdline": [],
        "modules": [
            "nestertest12"
        ],
        "version": "1.0.0"
    },
    "nestertest123": {
        "cmdline": [],
        "modules": [
            "nestertest123"
        ],
        "version": "1.2.1"
    },
    "nestertest20140111": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestertest521": {
        "cmdline": [],
        "modules": [
            "nestertest521"
        ],
        "version": "1.0.0"
    },
    "nestertester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestertesterkj": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestertesterkj2": {
        "cmdline": [],
        "modules": [
            "nestertesterkj2"
        ],
        "version": "1.0.0"
    },
    "nestertestkongshu": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestertestpypiupload": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestertestz123": {
        "cmdline": [],
        "modules": [
            "ntest"
        ],
        "version": "1.0.0"
    },
    "nestertlv": {
        "cmdline": [],
        "modules": [
            "nesterTLV"
        ],
        "version": "1.0.0"
    },
    "nestertna": {
        "cmdline": [],
        "modules": [
            "nestertna"
        ],
        "version": "1.1.0"
    },
    "nestertonys": {
        "cmdline": [],
        "modules": [
            "nestertonys"
        ],
        "version": "1.2.0"
    },
    "nesterv": {
        "cmdline": [],
        "modules": [
            "nesterv"
        ],
        "version": "1.5.0"
    },
    "nestervgb2017": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestervictor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterw": {
        "cmdline": [],
        "modules": [
            "nesterw"
        ],
        "version": "1.2.0"
    },
    "nesterwang": {
        "cmdline": [],
        "modules": [
            "nesterwang"
        ],
        "version": "1.0.3"
    },
    "nesterweiting": {
        "cmdline": [],
        "modules": [
            "nesterWeiting"
        ],
        "version": "1.0.0"
    },
    "nesterwh-py": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.1"
    },
    "nesterwilliam-cao": {
        "cmdline": [],
        "modules": [
            "nesterWilliam_CAO"
        ],
        "version": "1.3.0"
    },
    "nesterwouhao": {
        "cmdline": [],
        "modules": [
            "nesterwouhao"
        ],
        "version": "1.1.0"
    },
    "nesterwwwwww": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterwyz": {
        "cmdline": [],
        "modules": [
            "nesterwyz"
        ],
        "version": "1.2.0"
    },
    "nesterwzp": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.1"
    },
    "nesterx": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nesterx1": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.1.2"
    },
    "nesterxdf": {
        "cmdline": [],
        "modules": [
            "nesterxdf"
        ],
        "version": "1.0.0"
    },
    "nesterxhd": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "nesterxiao": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterxj": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterxyaz": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestery": {
        "cmdline": [],
        "modules": [
            "nestery"
        ],
        "version": "1.2.0"
    },
    "nesterylxq": {
        "cmdline": [],
        "modules": [
            "nesterYLXQ"
        ],
        "version": "1.3.0"
    },
    "nesterymym": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesteryx": {
        "cmdline": [],
        "modules": [
            "nesteryx"
        ],
        "version": "1.1.0"
    },
    "nesteryy": {
        "cmdline": [],
        "modules": [
            "nesteryy"
        ],
        "version": "1.2.0"
    },
    "nesteryyang": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nesteryyin": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "nesterz": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesterzhobin": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.0"
    },
    "nesterzilch": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "2.0.0"
    },
    "nesterzp": {
        "cmdline": [],
        "modules": [
            "nesterZp"
        ],
        "version": "1.3.0"
    },
    "nestest": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestet": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "nestetestr": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nesting": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "nesting-nester-1": {
        "cmdline": [],
        "modules": [
            "nester_1"
        ],
        "version": "1.1.0"
    },
    "nesting-printer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nesting-test": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestinglisting.py": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "nestit": {
        "cmdline": [],
        "modules": [
            "nestit"
        ],
        "version": "1.3.0"
    },
    "nestle": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "nestlist": {
        "cmdline": [],
        "modules": [
            "nestlist"
        ],
        "version": "1.0.0"
    },
    "nestlist1": {
        "cmdline": [],
        "modules": [
            "nestlist"
        ],
        "version": "1.0.0"
    },
    "nestly": {
        "cmdline": [],
        "modules": [
            "nestly",
            "nestly._py3",
            "nestly.core",
            "nestly.scons",
            "nestly.scripts",
            "nestly.scripts.nestagg",
            "nestly.scripts.nestrun",
            "nestly.test",
            "nestly.test.test_core",
            "nestly.test.test_scons"
        ],
        "version": "0.6.1"
    },
    "nestmod": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.5"
    },
    "nestor": {
        "cmdline": [],
        "modules": [
            "nestor"
        ],
        "version": "1.0.0"
    },
    "nestor02-pdhande": {
        "cmdline": [],
        "modules": [
            "nestor02_pdhande"
        ],
        "version": "1.3.2"
    },
    "nestoria": {
        "cmdline": [],
        "modules": [
            "nestoria",
            "nestoria.api",
            "nestoria.ez_setup"
        ],
        "version": "0.31"
    },
    "nestprint": {
        "cmdline": [],
        "modules": [
            "nestprint"
        ],
        "version": "1.6.0"
    },
    "nestprinter": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nestrer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestrick": {
        "cmdline": [],
        "modules": [
            "nestrick"
        ],
        "version": "1.2.0.0"
    },
    "nests": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nestter": {
        "cmdline": [],
        "modules": [
            "nestter"
        ],
        "version": "0.0.0.5"
    },
    "nesty": {
        "cmdline": [],
        "modules": [
            "nesty"
        ],
        "version": "1.2.0"
    },
    "net": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "net-access-whu": {
        "cmdline": [],
        "modules": [
            "net_access",
            "net_access.main"
        ],
        "version": "0.4.4"
    },
    "net-con-check": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "net-conf": {
        "cmdline": [],
        "modules": [
            "net_conf",
            "net_conf.exceptions",
            "net_conf.providers",
            "net_conf.scanners",
            "net_conf.utils",
            "net_conf.wifi"
        ],
        "version": "0.2.1"
    },
    "net-health": {
        "cmdline": [
            "check_connectivity"
        ],
        "modules": [
            "net_health",
            "net_health.credentials",
            "net_health.get_host_ip_nova_manage_script",
            "net_health.latency_pollster",
            "net_health.monitor_tool",
            "net_health.remote_client",
            "net_health.utils"
        ],
        "version": "0.13"
    },
    "net-survey": {
        "cmdline": [],
        "modules": [
            "net_survey",
            "net_survey.client",
            "net_survey.client.client",
            "net_survey.client.scanner",
            "net_survey.interfaces",
            "net_survey.server",
            "net_survey.server.api",
            "net_survey.server.server",
            "net_survey.survey",
            "net_survey.tests",
            "net_survey.tests.base"
        ],
        "version": "0.0.4"
    },
    "net-tools": {
        "cmdline": [],
        "modules": [
            "nettools",
            "nettools.cli",
            "nettools.provider",
            "nettools.provider.AwsProvider",
            "nettools.provider.Provider",
            "nettools.sensor",
            "nettools.sensor.sensor",
            "nettools.utils",
            "nettools.utils.ipv4_utils"
        ],
        "version": "0.1.2"
    },
    "net-utils": {
        "cmdline": [],
        "modules": [],
        "version": "1.3"
    },
    "net6mon": {
        "cmdline": [],
        "modules": [
            "net6mon",
            "net6mon.client",
            "net6mon.config",
            "net6mon.daemon",
            "net6mon.env",
            "net6mon.logger",
            "net6mon.nmCollectClient",
            "net6mon.platform",
            "net6mon.plugin",
            "net6mon.pluginfarm",
            "net6mon.pmap",
            "net6mon.sql",
            "net6mon.utils",
            "net6mon.uuid"
        ],
        "version": "0.0.1.dev-r737"
    },
    "netaccess-perfmetrics": {
        "cmdline": [],
        "modules": [
            "perfmetrics",
            "perfmetrics.clientstack",
            "perfmetrics.statsd",
            "perfmetrics.tests",
            "perfmetrics.tests.test_clientstack",
            "perfmetrics.tests.test_perfmetrics",
            "perfmetrics.tests.test_statsd"
        ],
        "version": "2.3"
    },
    "netaddr": {
        "cmdline": [
            "netaddr"
        ],
        "modules": [
            "netaddr",
            "netaddr.compat",
            "netaddr.contrib",
            "netaddr.contrib.subnet_splitter",
            "netaddr.core",
            "netaddr.eui",
            "netaddr.eui.ieee",
            "netaddr.fbsocket",
            "netaddr.ip",
            "netaddr.ip.glob",
            "netaddr.ip.iana",
            "netaddr.ip.nmap",
            "netaddr.ip.rfc1924",
            "netaddr.ip.sets",
            "netaddr.strategy",
            "netaddr.strategy.eui48",
            "netaddr.strategy.eui64",
            "netaddr.strategy.ipv4",
            "netaddr.strategy.ipv6"
        ],
        "version": "0.7.19"
    },
    "netaddress": {
        "cmdline": [],
        "modules": [
            "netaddress",
            "netaddress.netaddress",
            "netaddress.notQuiteURI",
            "netaddress.pyParseExtensions",
            "netaddress.rfc3986"
        ],
        "version": "0.2.2"
    },
    "netana": {
        "cmdline": [],
        "modules": [
            "netana",
            "netana.analize",
            "netana.disreport",
            "netana.equations",
            "netana.griddialog",
            "netana.mkreport",
            "netana.netana",
            "netana.plotutil",
            "netana.start_netana",
            "netana.wequ"
        ],
        "version": "3.1.0"
    },
    "netapp-lib": {
        "cmdline": [],
        "modules": [
            "netapp_lib",
            "netapp_lib.api",
            "netapp_lib.api.rest",
            "netapp_lib.api.rest.rest",
            "netapp_lib.api.zapi",
            "netapp_lib.api.zapi.errors",
            "netapp_lib.api.zapi.zapi",
            "netapp_lib.exceptions",
            "netapp_lib.i18n"
        ],
        "version": "2016.10.14"
    },
    "netapp.santricity": {
        "cmdline": [],
        "modules": [
            "netapp",
            "netapp.santricity",
            "netapp.santricity.api",
            "netapp.santricity.api.symbol",
            "netapp.santricity.api.symbol.a_api",
            "netapp.santricity.api.symbol.b_api",
            "netapp.santricity.api.symbol.c_api",
            "netapp.santricity.api.symbol.d_api",
            "netapp.santricity.api.symbol.e_api",
            "netapp.santricity.api.symbol.f_api",
            "netapp.santricity.api.symbol.g_api",
            "netapp.santricity.api.symbol.i_api",
            "netapp.santricity.api.symbol.l_api",
            "netapp.santricity.api.symbol.m_api",
            "netapp.santricity.api.symbol.p_api",
            "netapp.santricity.api.symbol.q_api",
            "netapp.santricity.api.symbol.r_api",
            "netapp.santricity.api.symbol.s_api",
            "netapp.santricity.api.symbol.t_api",
            "netapp.santricity.api.symbol.u_api",
            "netapp.santricity.api.symbol.v_api",
            "netapp.santricity.api.symbol.w_api",
            "netapp.santricity.api.utils",
            "netapp.santricity.api.utils.about_api",
            "netapp.santricity.api.utils.build_info_api",
            "netapp.santricity.api.utils.login_api",
            "netapp.santricity.api.v2",
            "netapp.santricity.api.v2.administration_api",
            "netapp.santricity.api.v2.configuration_api",
            "netapp.santricity.api.v2.copy_services_api",
            "netapp.santricity.api.v2.device_asup_api",
            "netapp.santricity.api.v2.diagnostics_api",
            "netapp.santricity.api.v2.drive_firmware_api",
            "netapp.santricity.api.v2.file_management_api",
            "netapp.santricity.api.v2.firmware_api",
            "netapp.santricity.api.v2.flash_cache_api",
            "netapp.santricity.api.v2.hardware_api",
            "netapp.santricity.api.v2.mapping_api",
            "netapp.santricity.api.v2.mirroring_api",
            "netapp.santricity.api.v2.monitoring_api",
            "netapp.santricity.api.v2.service_catalog_api",
            "netapp.santricity.api.v2.statistics_api",
            "netapp.santricity.api.v2.storage_systems_api",
            "netapp.santricity.api.v2.upgrade_api",
            "netapp.santricity.api.v2.volumes_api",
            "netapp.santricity.api.v2.workloads_api",
            "netapp.santricity.api_client",
            "netapp.santricity.configuration",
            "netapp.santricity.models",
            "netapp.santricity.models.symbol",
            "netapp.santricity.models.symbol.abstract_vol_ref_list",
            "netapp.santricity.models.symbol.access_volume",
            "netapp.santricity.models.symbol.accessible_controller",
            "netapp.santricity.models.symbol.alarm",
            "netapp.santricity.models.symbol.alarm_update_descriptor",
            "netapp.santricity.models.symbol.application_awareness_bundle",
            "netapp.santricity.models.symbol.arvm_default_attributes",
            "netapp.santricity.models.symbol.asup_status",
            "netapp.santricity.models.symbol.asup_status_returned",
            "netapp.santricity.models.symbol.async_mirror_group",
            "netapp.santricity.models.symbol.async_mirror_group_action_result",
            "netapp.santricity.models.symbol.async_mirror_group_add_primary_member_descriptor",
            "netapp.santricity.models.symbol.async_mirror_group_add_secondary_member_descriptor",
            "netapp.santricity.models.symbol.async_mirror_group_connectivity_test_descriptor",
            "netapp.santricity.models.symbol.async_mirror_group_connectivity_test_results",
            "netapp.santricity.models.symbol.async_mirror_group_connectivity_test_results_returned",
            "netapp.santricity.models.symbol.async_mirror_group_creation_descriptor",
            "netapp.santricity.models.symbol.async_mirror_group_deletion_descriptor",
            "netapp.santricity.models.symbol.async_mirror_group_fault_indication",
            "netapp.santricity.models.symbol.async_mirror_group_fault_indication_clear_descriptor",
            "netapp.santricity.models.symbol.async_mirror_group_incomplete_member",
            "netapp.santricity.models.symbol.async_mirror_group_initial_sync_operation",
            "netapp.santricity.models.symbol.async_mirror_group_link_bandwidth_test_results",
            "netapp.santricity.models.symbol.async_mirror_group_link_latency_test_results",
            "netapp.santricity.models.symbol.async_mirror_group_member",
            "netapp.santricity.models.symbol.async_mirror_group_member_fault_indication",
            "netapp.santricity.models.symbol.async_mirror_group_member_fault_indication_clear_descriptor",
            "netapp.santricity.models.symbol.async_mirror_group_member_initial_sync_operation",
            "netapp.santricity.models.symbol.async_mirror_group_member_mismatch_list",
            "netapp.santricity.models.symbol.async_mirror_group_member_ref_list",
            "netapp.santricity.models.symbol.async_mirror_group_member_sync_progress",
            "netapp.santricity.models.symbol.async_mirror_group_mirror_connection_descriptor",
            "netapp.santricity.models.symbol.async_mirror_group_params_update_descriptor",
            "netapp.santricity.models.symbol.async_mirror_group_recover_descriptor",
            "netapp.santricity.models.symbol.async_mirror_group_ref_list",
            "netapp.santricity.models.symbol.async_mirror_group_remove_member_descriptor",
            "netapp.santricity.models.symbol.async_mirror_group_resume_descriptor",
            "netapp.santricity.models.symbol.async_mirror_group_role_change_cancel_descriptor",
            "netapp.santricity.models.symbol.async_mirror_group_role_change_descriptor",
            "netapp.santricity.models.symbol.async_mirror_group_suspend_descriptor",
            "netapp.santricity.models.symbol.async_mirror_group_sync_progress",
            "netapp.santricity.models.symbol.async_mirror_group_sync_progress_list",
            "netapp.santricity.models.symbol.async_mirror_group_sync_progress_list_returned",
            "netapp.santricity.models.symbol.async_mirror_group_synchronize_descriptor",
            "netapp.santricity.models.symbol.async_mirror_primary_sync_statistics_sample",
            "netapp.santricity.models.symbol.async_mirror_repository_utilization",
            "netapp.santricity.models.symbol.async_mirror_repository_utilization_list",
            "netapp.santricity.models.symbol.async_mirror_repository_utilization_list_returned",
            "netapp.santricity.models.symbol.async_mirror_sync_completion_detail",
            "netapp.santricity.models.symbol.async_mirror_sync_statistics",
            "netapp.santricity.models.symbol.async_mirror_sync_statistics_list",
            "netapp.santricity.models.symbol.async_mirror_sync_statistics_list_returned",
            "netapp.santricity.models.symbol.async_mirror_sync_statistics_request_descriptor",
            "netapp.santricity.models.symbol.async_mirror_sync_statistics_reset_descriptor",
            "netapp.santricity.models.symbol.async_mirror_sync_statistics_sample",
            "netapp.santricity.models.symbol.auth_method_type_data",
            "netapp.santricity.models.symbol.authentication_bundle",
            "netapp.santricity.models.symbol.auto_config_candidate",
            "netapp.santricity.models.symbol.auto_config_candidate_list",
            "netapp.santricity.models.symbol.auto_config_summary",
            "netapp.santricity.models.symbol.auto_config_template",
            "netapp.santricity.models.symbol.auto_config_template_list",
            "netapp.santricity.models.symbol.auto_load_balance_request_descriptor",
            "netapp.santricity.models.symbol.auto_load_balance_stats_log_retrieve_chunk_details",
            "netapp.santricity.models.symbol.auto_load_balance_stats_log_retrieve_start_details",
            "netapp.santricity.models.symbol.auto_load_balancing_control_descriptor",
            "netapp.santricity.models.symbol.battery",
            "netapp.santricity.models.symbol.battery_pack_icc_failure",
            "netapp.santricity.models.symbol.battery_params_update_descriptor",
            "netapp.santricity.models.symbol.battery_type_data",
            "netapp.santricity.models.symbol.bundle_key",
            "netapp.santricity.models.symbol.bundled_feature",
            "netapp.santricity.models.symbol.cache_backup_device",
            "netapp.santricity.models.symbol.cache_backup_device_location",
            "netapp.santricity.models.symbol.cache_backup_device_vpd",
            "netapp.santricity.models.symbol.cache_memory_dimm",
            "netapp.santricity.models.symbol.cache_memory_dimm_location",
            "netapp.santricity.models.symbol.candidate_selection_type_data",
            "netapp.santricity.models.symbol.change_query_descriptor",
            "netapp.santricity.models.symbol.change_state",
            "netapp.santricity.models.symbol.channel_degraded_failure",
            "netapp.santricity.models.symbol.channel_diag_data_pattern_type_data",
            "netapp.santricity.models.symbol.channel_diag_device",
            "netapp.santricity.models.symbol.channel_diag_fc_dependent_results",
            "netapp.santricity.models.symbol.channel_diag_interface_dep_results",
            "netapp.santricity.models.symbol.channel_diag_results",
            "netapp.santricity.models.symbol.channel_diag_results_returned",
            "netapp.santricity.models.symbol.channel_diag_sas_dependent_results",
            "netapp.santricity.models.symbol.channel_diag_type_params",
            "netapp.santricity.models.symbol.channel_diag_wr_rd_vfy_params",
            "netapp.santricity.models.symbol.channel_diag_wr_rd_vfy_results",
            "netapp.santricity.models.symbol.channel_diagnostic_descriptor",
            "netapp.santricity.models.symbol.channel_failed_failure",
            "netapp.santricity.models.symbol.channel_location",
            "netapp.santricity.models.symbol.channel_port",
            "netapp.santricity.models.symbol.channel_port_pair",
            "netapp.santricity.models.symbol.channel_port_parent",
            "netapp.santricity.models.symbol.channel_ports",
            "netapp.santricity.models.symbol.chassis_idtlv",
            "netapp.santricity.models.symbol.checked_pending_host",
            "netapp.santricity.models.symbol.checked_pending_host_list",
            "netapp.santricity.models.symbol.checked_pending_host_list_returned",
            "netapp.santricity.models.symbol.cluster",
            "netapp.santricity.models.symbol.cluster_performance_limitation_values",
            "netapp.santricity.models.symbol.cluster_performance_limitation_values_descriptor",
            "netapp.santricity.models.symbol.cluster_performance_limitation_values_returned",
            "netapp.santricity.models.symbol.co_w_repository_analysis_request",
            "netapp.santricity.models.symbol.co_w_repository_analysis_results",
            "netapp.santricity.models.symbol.co_w_repository_analysis_results_returned",
            "netapp.santricity.models.symbol.compatible_firmware",
            "netapp.santricity.models.symbol.component_bundle",
            "netapp.santricity.models.symbol.component_location",
            "netapp.santricity.models.symbol.component_relative_location",
            "netapp.santricity.models.symbol.component_removal_data",
            "netapp.santricity.models.symbol.concat_volume",
            "netapp.santricity.models.symbol.concat_volume_candidate",
            "netapp.santricity.models.symbol.concat_volume_creation_descriptor",
            "netapp.santricity.models.symbol.concat_volume_default_attributes",
            "netapp.santricity.models.symbol.concat_volume_direct_expansion_descriptor",
            "netapp.santricity.models.symbol.concat_volume_existing_volume_candidate",
            "netapp.santricity.models.symbol.concat_volume_expansion_descriptor",
            "netapp.santricity.models.symbol.concat_volume_member",
            "netapp.santricity.models.symbol.concat_volume_new_volume_candidate",
            "netapp.santricity.models.symbol.concat_volume_trim_descriptor",
            "netapp.santricity.models.symbol.consistency_group",
            "netapp.santricity.models.symbol.consistency_group_bundle",
            "netapp.santricity.models.symbol.controller",
            "netapp.santricity.models.symbol.controller_counter_group",
            "netapp.santricity.models.symbol.controller_descriptor",
            "netapp.santricity.models.symbol.controller_dns_properties",
            "netapp.santricity.models.symbol.controller_gbic",
            "netapp.santricity.models.symbol.controller_host_io_interfaces_returned",
            "netapp.santricity.models.symbol.controller_miswire_error",
            "netapp.santricity.models.symbol.controller_network_settings",
            "netapp.santricity.models.symbol.controller_ntp_error_details",
            "netapp.santricity.models.symbol.controller_ntp_properties",
            "netapp.santricity.models.symbol.controller_sfp",
            "netapp.santricity.models.symbol.controller_sfp_location",
            "netapp.santricity.models.symbol.controller_time",
            "netapp.santricity.models.symbol.controller_volume_list",
            "netapp.santricity.models.symbol.controller_with_dirty_cache_details",
            "netapp.santricity.models.symbol.copy_then_replace_descriptor",
            "netapp.santricity.models.symbol.counter_group",
            "netapp.santricity.models.symbol.cpu_utilization_stats",
            "netapp.santricity.models.symbol.ctrl_ioc_dump_data",
            "netapp.santricity.models.symbol.cumulative_statistics_bundle",
            "netapp.santricity.models.symbol.cumulative_statistics_bundle_list_returned",
            "netapp.santricity.models.symbol.cumulative_statistics_bundle_returned",
            "netapp.santricity.models.symbol.cumulative_statistics_default_attributes",
            "netapp.santricity.models.symbol.cumulative_statistics_descriptor",
            "netapp.santricity.models.symbol.cumulative_statistics_list_descriptor",
            "netapp.santricity.models.symbol.daily_schedule",
            "netapp.santricity.models.symbol.database_metadata",
            "netapp.santricity.models.symbol.database_metadata_returned",
            "netapp.santricity.models.symbol.daylight_savings_time",
            "netapp.santricity.models.symbol.dbm_blk_restore_chunk_details",
            "netapp.santricity.models.symbol.dbm_blk_restore_start_details",
            "netapp.santricity.models.symbol.dbm_blk_retrieve_chunk_details",
            "netapp.santricity.models.symbol.dbm_blk_retrieve_start_details",
            "netapp.santricity.models.symbol.dbm_check_retrieve_chunk_details",
            "netapp.santricity.models.symbol.dbm_check_retrieve_start_details",
            "netapp.santricity.models.symbol.dbm_rec_restore_chunk_details",
            "netapp.santricity.models.symbol.dbm_rec_restore_start_details",
            "netapp.santricity.models.symbol.dbm_rec_retrieve_chunk_details",
            "netapp.santricity.models.symbol.dbm_rec_retrieve_start_details",
            "netapp.santricity.models.symbol.dcbx_summary_data",
            "netapp.santricity.models.symbol.ddc_extent",
            "netapp.santricity.models.symbol.ddc_log_data",
            "netapp.santricity.models.symbol.ddc_log_data_returned",
            "netapp.santricity.models.symbol.debug_info",
            "netapp.santricity.models.symbol.debug_info_extent",
            "netapp.santricity.models.symbol.debug_info_returned",
            "netapp.santricity.models.symbol.degraded_path",
            "netapp.santricity.models.symbol.discovery_response",
            "netapp.santricity.models.symbol.discrete_time_series",
            "netapp.santricity.models.symbol.discrete_time_series_bundle",
            "netapp.santricity.models.symbol.discrete_time_series_bundle_returned",
            "netapp.santricity.models.symbol.discrete_time_series_descriptor",
            "netapp.santricity.models.symbol.disk_pool_creation_descriptor",
            "netapp.santricity.models.symbol.disk_pool_data",
            "netapp.santricity.models.symbol.disk_pool_default_attributes",
            "netapp.santricity.models.symbol.disk_pool_expansion_descriptor",
            "netapp.santricity.models.symbol.disk_pool_max_reserved_drive_count_return",
            "netapp.santricity.models.symbol.disk_pool_priority_update_descriptor",
            "netapp.santricity.models.symbol.disk_pool_reduction_descriptor",
            "netapp.santricity.models.symbol.disk_pool_reduction_drive_count_return",
            "netapp.santricity.models.symbol.disk_pool_reserved_drive_count_update_descriptor",
            "netapp.santricity.models.symbol.disk_pool_threshold_update_descriptor",
            "netapp.santricity.models.symbol.disk_pool_volume_candidate_data",
            "netapp.santricity.models.symbol.disk_pool_volume_candidate_request_data",
            "netapp.santricity.models.symbol.dns_acquisition_descriptor",
            "netapp.santricity.models.symbol.dom0_support_data_chunk_details",
            "netapp.santricity.models.symbol.dom0_support_data_journal_start_details",
            "netapp.santricity.models.symbol.dom0_support_data_start_details",
            "netapp.santricity.models.symbol.dpl_core_dump_data",
            "netapp.santricity.models.symbol.dpl_core_dump_detail",
            "netapp.santricity.models.symbol.dpl_core_dump_fw_location",
            "netapp.santricity.models.symbol.dpl_core_dump_info",
            "netapp.santricity.models.symbol.dpl_core_dump_info_return",
            "netapp.santricity.models.symbol.dpl_core_dump_on_demand_return",
            "netapp.santricity.models.symbol.dpl_core_dump_retrieve_chunk_details",
            "netapp.santricity.models.symbol.dpl_core_dump_retrieve_start_details",
            "netapp.santricity.models.symbol.dq_retrieve_chunk_details",
            "netapp.santricity.models.symbol.dq_retrieve_start_details",
            "netapp.santricity.models.symbol.drawer",
            "netapp.santricity.models.symbol.drive",
            "netapp.santricity.models.symbol.drive_channel",
            "netapp.santricity.models.symbol.drive_channel_error_counts",
            "netapp.santricity.models.symbol.drive_channel_list",
            "netapp.santricity.models.symbol.drive_channel_parent",
            "netapp.santricity.models.symbol.drive_channel_port",
            "netapp.santricity.models.symbol.drive_channel_specifier",
            "netapp.santricity.models.symbol.drive_channel_state_descriptor",
            "netapp.santricity.models.symbol.drive_channel_statistics",
            "netapp.santricity.models.symbol.drive_counter_group",
            "netapp.santricity.models.symbol.drive_download_drive_status",
            "netapp.santricity.models.symbol.drive_download_set",
            "netapp.santricity.models.symbol.drive_firmware_chunk_descriptor",
            "netapp.santricity.models.symbol.drive_firmware_download",
            "netapp.santricity.models.symbol.drive_firmware_status",
            "netapp.santricity.models.symbol.drive_firmware_update_descriptor",
            "netapp.santricity.models.symbol.drive_health_logs_chunk_details",
            "netapp.santricity.models.symbol.drive_health_logs_start_details",
            "netapp.santricity.models.symbol.drive_layout",
            "netapp.santricity.models.symbol.drive_log_data",
            "netapp.santricity.models.symbol.drive_lost_redundancy_failure",
            "netapp.santricity.models.symbol.drive_performance_history_retrieve_chunk_details",
            "netapp.santricity.models.symbol.drive_performance_history_retrieve_start_details",
            "netapp.santricity.models.symbol.drive_physical_security_id",
            "netapp.santricity.models.symbol.drive_physical_security_id_descriptor",
            "netapp.santricity.models.symbol.drive_ref_list",
            "netapp.santricity.models.symbol.drive_replacement_descriptor",
            "netapp.santricity.models.symbol.drive_temperature",
            "netapp.santricity.models.symbol.drive_temperature_data",
            "netapp.santricity.models.symbol.drive_temperature_returned",
            "netapp.santricity.models.symbol.drive_type_data",
            "netapp.santricity.models.symbol.dual_mirror_primary",
            "netapp.santricity.models.symbol.dual_mirror_secondary",
            "netapp.santricity.models.symbol.dve_volume",
            "netapp.santricity.models.symbol.embedded_snmp_agent_default_attributes",
            "netapp.santricity.models.symbol.enclosure_state_capture_retrieve_chunk_details",
            "netapp.santricity.models.symbol.enclosure_state_capture_retrieve_start_details",
            "netapp.santricity.models.symbol.encrypted_password",
            "netapp.santricity.models.symbol.energy_star_data",
            "netapp.santricity.models.symbol.energy_star_data_return",
            "netapp.santricity.models.symbol.enh_eth_features_state",
            "netapp.santricity.models.symbol.enh_eth_tlv",
            "netapp.santricity.models.symbol.enh_eth_tlv_set",
            "netapp.santricity.models.symbol.enhanced_ethernet_statistics",
            "netapp.santricity.models.symbol.enhanced_ib_baselined_statistics",
            "netapp.santricity.models.symbol.enhanced_ib_interface_statistics",
            "netapp.santricity.models.symbol.enhanced_ib_statistical_data",
            "netapp.santricity.models.symbol.enhanced_ib_statistics_returned",
            "netapp.santricity.models.symbol.env_card_log_data",
            "netapp.santricity.models.symbol.env_card_log_data_returned",
            "netapp.santricity.models.symbol.esm",
            "netapp.santricity.models.symbol.esm_factory_defaults_version_data",
            "netapp.santricity.models.symbol.esm_firmware_update_descriptor",
            "netapp.santricity.models.symbol.esm_interface_attributes",
            "netapp.santricity.models.symbol.esm_interface_type_data",
            "netapp.santricity.models.symbol.esm_lost_redundancy_failure",
            "netapp.santricity.models.symbol.ethernet_interface",
            "netapp.santricity.models.symbol.ethernet_interface_data",
            "netapp.santricity.models.symbol.ethernet_params_update_descriptor",
            "netapp.santricity.models.symbol.ethernet_port_statistics",
            "netapp.santricity.models.symbol.event_control",
            "netapp.santricity.models.symbol.excessive_reboots_detected",
            "netapp.santricity.models.symbol.expansion_candidates_returned",
            "netapp.santricity.models.symbol.export_dependencies_returned",
            "netapp.santricity.models.symbol.export_dependency",
            "netapp.santricity.models.symbol.export_dependency_type_data",
            "netapp.santricity.models.symbol.extended_component_location",
            "netapp.santricity.models.symbol.extended_sa_data",
            "netapp.santricity.models.symbol.external_redundancy_failure",
            "netapp.santricity.models.symbol.factory_defaults_descriptor",
            "netapp.santricity.models.symbol.factory_defaults_version_data",
            "netapp.santricity.models.symbol.failure_type_entry",
            "netapp.santricity.models.symbol.failure_type_list",
            "netapp.santricity.models.symbol.fan",
            "netapp.santricity.models.symbol.fdi_dems_log_retrieve_chunk_details",
            "netapp.santricity.models.symbol.fdi_dems_log_retrieve_start_details",
            "netapp.santricity.models.symbol.feature_attribute",
            "netapp.santricity.models.symbol.feature_bundle",
            "netapp.santricity.models.symbol.feature_key",
            "netapp.santricity.models.symbol.feature_params",
            "netapp.santricity.models.symbol.feature_state",
            "netapp.santricity.models.symbol.fibre_channel_target_location",
            "netapp.santricity.models.symbol.fibre_drive_address",
            "netapp.santricity.models.symbol.fibre_esm_address",
            "netapp.santricity.models.symbol.fibre_esm_attributes",
            "netapp.santricity.models.symbol.fibre_interface",
            "netapp.santricity.models.symbol.fibre_port_login",
            "netapp.santricity.models.symbol.fibre_remote_target_connections",
            "netapp.santricity.models.symbol.fibre_trunk_miswire",
            "netapp.santricity.models.symbol.firmware_update_descriptor",
            "netapp.santricity.models.symbol.flash_cache",
            "netapp.santricity.models.symbol.flash_cache_analytics_creation_descriptor",
            "netapp.santricity.models.symbol.flash_cache_analytics_data",
            "netapp.santricity.models.symbol.flash_cache_analytics_item",
            "netapp.santricity.models.symbol.flash_cache_analytics_returned",
            "netapp.santricity.models.symbol.flash_cache_base",
            "netapp.santricity.models.symbol.flash_cache_bundle",
            "netapp.santricity.models.symbol.flash_cache_creation_descriptor",
            "netapp.santricity.models.symbol.flash_cache_drive_info",
            "netapp.santricity.models.symbol.flash_cache_map",
            "netapp.santricity.models.symbol.flash_cache_params_update_descriptor",
            "netapp.santricity.models.symbol.flash_cache_reconfigure_drives_descriptor",
            "netapp.santricity.models.symbol.flash_cache_recovery_data",
            "netapp.santricity.models.symbol.flash_cache_statistics",
            "netapp.santricity.models.symbol.flash_cache_statistics_returned",
            "netapp.santricity.models.symbol.flash_cache_with_drives",
            "netapp.santricity.models.symbol.free_extent",
            "netapp.santricity.models.symbol.fru_diag_descriptor",
            "netapp.santricity.models.symbol.fru_diag_return",
            "netapp.santricity.models.symbol.fru_diag_return_data",
            "netapp.santricity.models.symbol.full_repository",
            "netapp.santricity.models.symbol.function_state_descriptor",
            "netapp.santricity.models.symbol.function_state_returned",
            "netapp.santricity.models.symbol.gbic",
            "netapp.santricity.models.symbol.gbic_parent_type_data",
            "netapp.santricity.models.symbol.get_iscsi_sessions_filter",
            "netapp.santricity.models.symbol.ghost_vol_bundle",
            "netapp.santricity.models.symbol.ghost_volume",
            "netapp.santricity.models.symbol.high_resolution_request_descriptor",
            "netapp.santricity.models.symbol.high_resolution_returned",
            "netapp.santricity.models.symbol.histogram",
            "netapp.santricity.models.symbol.histogram_bundle",
            "netapp.santricity.models.symbol.histogram_bundle_returned",
            "netapp.santricity.models.symbol.histogram_descriptor",
            "netapp.santricity.models.symbol.histogram_summary",
            "netapp.santricity.models.symbol.hl_volume_bundle",
            "netapp.santricity.models.symbol.host",
            "netapp.santricity.models.symbol.host_board",
            "netapp.santricity.models.symbol.host_board2_port_ib_type_data",
            "netapp.santricity.models.symbol.host_board_type_data",
            "netapp.santricity.models.symbol.host_changeable_properties",
            "netapp.santricity.models.symbol.host_creation_descriptor",
            "netapp.santricity.models.symbol.host_io_card_location",
            "netapp.santricity.models.symbol.host_port",
            "netapp.santricity.models.symbol.host_port_changeable_properties",
            "netapp.santricity.models.symbol.host_port_create_descriptor",
            "netapp.santricity.models.symbol.host_port_creation_descriptor",
            "netapp.santricity.models.symbol.host_port_location",
            "netapp.santricity.models.symbol.host_port_mutable_properties",
            "netapp.santricity.models.symbol.host_port_properties_update_descriptor",
            "netapp.santricity.models.symbol.host_port_rename_descriptor",
            "netapp.santricity.models.symbol.host_port_type_update_descriptor",
            "netapp.santricity.models.symbol.host_properties_update_descriptor",
            "netapp.santricity.models.symbol.host_redundancy_loss_details",
            "netapp.santricity.models.symbol.host_specific_nvsram_update_descriptor",
            "netapp.santricity.models.symbol.host_specific_values",
            "netapp.santricity.models.symbol.hot_spare_candidate",
            "netapp.santricity.models.symbol.hot_spare_candidate_list",
            "netapp.santricity.models.symbol.hot_spare_coverage",
            "netapp.santricity.models.symbol.hot_spare_coverage_list",
            "netapp.santricity.models.symbol.ib_baselined_statistics",
            "netapp.santricity.models.symbol.ib_interface",
            "netapp.santricity.models.symbol.ib_interface_statistics",
            "netapp.santricity.models.symbol.ib_ioc_attributes",
            "netapp.santricity.models.symbol.ib_ioc_attributes_returned",
            "netapp.santricity.models.symbol.ib_ioc_profile",
            "netapp.santricity.models.symbol.ib_point_in_time_statistics",
            "netapp.santricity.models.symbol.ib_port_partition_table",
            "netapp.santricity.models.symbol.ib_port_partition_tables_returned",
            "netapp.santricity.models.symbol.ib_rdma_channel",
            "netapp.santricity.models.symbol.ib_rdma_channel_endpoints",
            "netapp.santricity.models.symbol.ib_rdma_channel_statistics",
            "netapp.santricity.models.symbol.ib_rdma_channels_returned",
            "netapp.santricity.models.symbol.ib_service_entry",
            "netapp.santricity.models.symbol.ib_statistical_data",
            "netapp.santricity.models.symbol.ib_statistics_returned",
            "netapp.santricity.models.symbol.ib_tca_statistics",
            "netapp.santricity.models.symbol.implementation_counter_group",
            "netapp.santricity.models.symbol.import_dependencies_returned",
            "netapp.santricity.models.symbol.infiniband_interface_data",
            "netapp.santricity.models.symbol.initialization_operation",
            "netapp.santricity.models.symbol.initiator",
            "netapp.santricity.models.symbol.initiator_changeable_properties",
            "netapp.santricity.models.symbol.initiator_creation_descriptor",
            "netapp.santricity.models.symbol.initiator_location",
            "netapp.santricity.models.symbol.initiator_properties_update_descriptor",
            "netapp.santricity.models.symbol.initiator_target_changeable_properties",
            "netapp.santricity.models.symbol.initiator_target_initial_properties",
            "netapp.santricity.models.symbol.initiator_target_properties_update_descriptor",
            "netapp.santricity.models.symbol.instance_returned",
            "netapp.santricity.models.symbol.interconnect_cru",
            "netapp.santricity.models.symbol.interface_counter_group",
            "netapp.santricity.models.symbol.interface_update_descriptor",
            "netapp.santricity.models.symbol.internet_protocol_v4_data",
            "netapp.santricity.models.symbol.internet_protocol_v6_data",
            "netapp.santricity.models.symbol.interposer",
            "netapp.santricity.models.symbol.interposer_data",
            "netapp.santricity.models.symbol.interposer_type_data",
            "netapp.santricity.models.symbol.inventory_item",
            "netapp.santricity.models.symbol.io_counter_group",
            "netapp.santricity.models.symbol.io_interface",
            "netapp.santricity.models.symbol.io_interface_hic_map",
            "netapp.santricity.models.symbol.io_interface_type_data",
            "netapp.santricity.models.symbol.io_interface_type_data_list",
            "netapp.santricity.models.symbol.io_statistics_retrieve_chunk_details",
            "netapp.santricity.models.symbol.io_statistics_retrieve_start_details",
            "netapp.santricity.models.symbol.ioc_dump_data",
            "netapp.santricity.models.symbol.ioc_dump_info",
            "netapp.santricity.models.symbol.ioc_dump_info_return",
            "netapp.santricity.models.symbol.ioc_dump_on_demand_return",
            "netapp.santricity.models.symbol.ioc_dump_retrieve_chunk_details",
            "netapp.santricity.models.symbol.ioc_dump_retrieve_start_details",
            "netapp.santricity.models.symbol.ip_endpoint_statistics",
            "netapp.santricity.models.symbol.ip_v4_address_data",
            "netapp.santricity.models.symbol.ip_v6_address_data",
            "netapp.santricity.models.symbol.ip_v6_address_data_bundle",
            "netapp.santricity.models.symbol.ip_v6_address_state",
            "netapp.santricity.models.symbol.ip_vx_address",
            "netapp.santricity.models.symbol.iscsi_cable_diag_channel_results",
            "netapp.santricity.models.symbol.iscsi_cable_diag_results",
            "netapp.santricity.models.symbol.iscsi_cable_diagnostics_descriptor",
            "netapp.santricity.models.symbol.iscsi_cable_diagnostics_return",
            "netapp.santricity.models.symbol.iscsi_connection",
            "netapp.santricity.models.symbol.iscsi_connection_endpoints",
            "netapp.santricity.models.symbol.iscsi_entity_changeable_properties",
            "netapp.santricity.models.symbol.iscsi_entity_data",
            "netapp.santricity.models.symbol.iscsi_entity_properties_update_descriptor",
            "netapp.santricity.models.symbol.iscsi_initiator_port_id",
            "netapp.santricity.models.symbol.iscsi_initiator_statistics",
            "netapp.santricity.models.symbol.iscsi_initiator_target_base_parameters",
            "netapp.santricity.models.symbol.iscsi_interface",
            "netapp.santricity.models.symbol.iscsi_interface_changeable_properties",
            "netapp.santricity.models.symbol.iscsi_interface_properties_update_descriptor",
            "netapp.santricity.models.symbol.iscsi_interface_statistics",
            "netapp.santricity.models.symbol.iscsi_negotiable_connection_settings",
            "netapp.santricity.models.symbol.iscsi_negotiable_session_settings",
            "netapp.santricity.models.symbol.iscsi_negotiation_defaults",
            "netapp.santricity.models.symbol.iscsi_negotiation_defaults_returned",
            "netapp.santricity.models.symbol.iscsi_remote_target_connections",
            "netapp.santricity.models.symbol.iscsi_session",
            "netapp.santricity.models.symbol.iscsi_session_endpoints",
            "netapp.santricity.models.symbol.iscsi_sessions_returned",
            "netapp.santricity.models.symbol.iscsi_statistical_data",
            "netapp.santricity.models.symbol.iscsi_statistics_returned",
            "netapp.santricity.models.symbol.iscsi_target_port_id",
            "netapp.santricity.models.symbol.iscsi_target_statistics",
            "netapp.santricity.models.symbol.isns_server_location",
            "netapp.santricity.models.symbol.it_nexus",
            "netapp.santricity.models.symbol.key_id_info",
            "netapp.santricity.models.symbol.key_value_tag",
            "netapp.santricity.models.symbol.key_value_tag_creation_descriptor",
            "netapp.santricity.models.symbol.key_value_tag_creation_descriptor_list",
            "netapp.santricity.models.symbol.key_value_tag_mapping",
            "netapp.santricity.models.symbol.key_value_tag_mapping_deletion_descriptor",
            "netapp.santricity.models.symbol.key_value_tag_mapping_deletion_descriptor_list",
            "netapp.santricity.models.symbol.key_value_tag_mapping_set_descriptor",
            "netapp.santricity.models.symbol.key_value_tag_mapping_set_descriptor_list",
            "netapp.santricity.models.symbol.key_value_tag_object_reference",
            "netapp.santricity.models.symbol.key_value_tag_ref_list",
            "netapp.santricity.models.symbol.link_speed_detection_error",
            "netapp.santricity.models.symbol.location",
            "netapp.santricity.models.symbol.lock_down_info",
            "netapp.santricity.models.symbol.lock_down_info_returned",
            "netapp.santricity.models.symbol.lock_key_blob",
            "netapp.santricity.models.symbol.lock_key_id",
            "netapp.santricity.models.symbol.lockdown_ctrl_fw_version",
            "netapp.santricity.models.symbol.long_lived_operation",
            "netapp.santricity.models.symbol.long_lived_ops_progress_return",
            "netapp.santricity.models.symbol.lun_mapping",
            "netapp.santricity.models.symbol.lun_mapping_creation_descriptor",
            "netapp.santricity.models.symbol.lun_mapping_update_descriptor",
            "netapp.santricity.models.symbol.lun_mappings",
            "netapp.santricity.models.symbol.matched_pending_host",
            "netapp.santricity.models.symbol.mel_entry",
            "netapp.santricity.models.symbol.mel_entry_list",
            "netapp.santricity.models.symbol.mel_extent",
            "netapp.santricity.models.symbol.metadata_offline",
            "netapp.santricity.models.symbol.metadata_vol_creation_descriptor",
            "netapp.santricity.models.symbol.metadata_volume",
            "netapp.santricity.models.symbol.mgmt_client_record",
            "netapp.santricity.models.symbol.mgmt_client_record_delete_descriptor",
            "netapp.santricity.models.symbol.mgmt_client_record_id",
            "netapp.santricity.models.symbol.mgmt_client_record_read_descriptor",
            "netapp.santricity.models.symbol.mgmt_client_record_read_result",
            "netapp.santricity.models.symbol.mgmt_client_record_write_descriptor",
            "netapp.santricity.models.symbol.minihub",
            "netapp.santricity.models.symbol.minihub_location",
            "netapp.santricity.models.symbol.minihub_type_data",
            "netapp.santricity.models.symbol.mirror_auto_resync_descriptor",
            "netapp.santricity.models.symbol.mirror_candidate_descriptor",
            "netapp.santricity.models.symbol.mirror_creation_descriptor",
            "netapp.santricity.models.symbol.mirror_proxy_volume",
            "netapp.santricity.models.symbol.mirror_role_change_descriptor",
            "netapp.santricity.models.symbol.mirror_sync_operation",
            "netapp.santricity.models.symbol.mirror_sync_priority_descriptor",
            "netapp.santricity.models.symbol.mirror_unsynchronized",
            "netapp.santricity.models.symbol.mirror_volume_candidate",
            "netapp.santricity.models.symbol.mirror_volume_candidate_list",
            "netapp.santricity.models.symbol.mirror_volume_list",
            "netapp.santricity.models.symbol.mirror_write_mode_descriptor",
            "netapp.santricity.models.symbol.miswired_drive_channel_list",
            "netapp.santricity.models.symbol.net_interface_type_data",
            "netapp.santricity.models.symbol.network_address",
            "netapp.santricity.models.symbol.network_interface",
            "netapp.santricity.models.symbol.new_lock_key",
            "netapp.santricity.models.symbol.not_on_preferred_path",
            "netapp.santricity.models.symbol.ntp_acquisition_descriptor",
            "netapp.santricity.models.symbol.nvsram_region",
            "netapp.santricity.models.symbol.nvsram_region_id_and_host_index",
            "netapp.santricity.models.symbol.nvsram_region_list",
            "netapp.santricity.models.symbol.nvsram_update_descriptor",
            "netapp.santricity.models.symbol.object_bundle",
            "netapp.santricity.models.symbol.object_reference",
            "netapp.santricity.models.symbol.opcode_counter",
            "netapp.santricity.models.symbol.optional_schedule_creation_descriptor",
            "netapp.santricity.models.symbol.optional_target_object",
            "netapp.santricity.models.symbol.p_registrant",
            "netapp.santricity.models.symbol.p_registrant_list",
            "netapp.santricity.models.symbol.p_registration",
            "netapp.santricity.models.symbol.p_registration_list",
            "netapp.santricity.models.symbol.parent_cru",
            "netapp.santricity.models.symbol.parent_relative_location",
            "netapp.santricity.models.symbol.parity_scan_response",
            "netapp.santricity.models.symbol.path_degraded_failure",
            "netapp.santricity.models.symbol.pending_host",
            "netapp.santricity.models.symbol.performance_ring_chunk_details",
            "netapp.santricity.models.symbol.performance_ring_start_details",
            "netapp.santricity.models.symbol.persistent_registration",
            "netapp.santricity.models.symbol.persistent_registration_list",
            "netapp.santricity.models.symbol.physical_drive_type_data",
            "netapp.santricity.models.symbol.physical_interface_type_data",
            "netapp.santricity.models.symbol.pit",
            "netapp.santricity.models.symbol.pit_consistency_group",
            "netapp.santricity.models.symbol.pit_consistency_group_add_member_descriptor",
            "netapp.santricity.models.symbol.pit_consistency_group_add_member_descriptor_list",
            "netapp.santricity.models.symbol.pit_consistency_group_creation_descriptor",
            "netapp.santricity.models.symbol.pit_consistency_group_deletion_descriptor",
            "netapp.santricity.models.symbol.pit_consistency_group_params_update_descriptor",
            "netapp.santricity.models.symbol.pit_consistency_group_pit_deletion_descriptor",
            "netapp.santricity.models.symbol.pit_consistency_group_remove_member_descriptor",
            "netapp.santricity.models.symbol.pit_consistency_group_rollback_start_descriptor",
            "netapp.santricity.models.symbol.pit_consistency_group_view",
            "netapp.santricity.models.symbol.pit_consistency_group_view_creation_descriptor",
            "netapp.santricity.models.symbol.pit_consistency_group_view_deletion_descriptor",
            "netapp.santricity.models.symbol.pit_consistency_group_view_params_update_descriptor",
            "netapp.santricity.models.symbol.pit_consistency_group_view_restart_descriptor",
            "netapp.santricity.models.symbol.pit_consistency_group_view_stop_descriptor",
            "netapp.santricity.models.symbol.pit_group",
            "netapp.santricity.models.symbol.pit_group_creation_descriptor",
            "netapp.santricity.models.symbol.pit_group_deletion_descriptor",
            "netapp.santricity.models.symbol.pit_group_params_update_descriptor",
            "netapp.santricity.models.symbol.pit_group_ref_list",
            "netapp.santricity.models.symbol.pit_group_repository_utilization",
            "netapp.santricity.models.symbol.pit_group_repository_utilization_list",
            "netapp.santricity.models.symbol.pit_group_repository_utilization_list_returned",
            "netapp.santricity.models.symbol.pit_group_rollback_utilization_estimate",
            "netapp.santricity.models.symbol.pit_group_rollback_utilization_estimate_returned",
            "netapp.santricity.models.symbol.pit_groups_default_attributes",
            "netapp.santricity.models.symbol.pit_ref_list",
            "netapp.santricity.models.symbol.pit_repository_utilization",
            "netapp.santricity.models.symbol.pit_rollback_operation",
            "netapp.santricity.models.symbol.pit_view",
            "netapp.santricity.models.symbol.pit_view_creation_descriptor",
            "netapp.santricity.models.symbol.pit_view_deletion_descriptor",
            "netapp.santricity.models.symbol.pit_view_membership",
            "netapp.santricity.models.symbol.pit_view_params_update_descriptor",
            "netapp.santricity.models.symbol.pit_view_ref_list",
            "netapp.santricity.models.symbol.pit_view_repository_creation_descriptor",
            "netapp.santricity.models.symbol.pit_view_repository_utilization",
            "netapp.santricity.models.symbol.pit_view_repository_utilization_list",
            "netapp.santricity.models.symbol.pit_view_repository_utilization_list_returned",
            "netapp.santricity.models.symbol.pit_view_restart_descriptor",
            "netapp.santricity.models.symbol.pit_view_rw_conversion_descriptor",
            "netapp.santricity.models.symbol.pkcs5_encryption_data",
            "netapp.santricity.models.symbol.port",
            "netapp.santricity.models.symbol.port_idtlv",
            "netapp.santricity.models.symbol.port_list",
            "netapp.santricity.models.symbol.power_cycle_physical_drive_data_return",
            "netapp.santricity.models.symbol.power_cycle_physical_drive_descriptor",
            "netapp.santricity.models.symbol.power_supply",
            "netapp.santricity.models.symbol.premium_feature",
            "netapp.santricity.models.symbol.processor_memory_dimm",
            "netapp.santricity.models.symbol.product_capability_list",
            "netapp.santricity.models.symbol.protection_information_capabilities",
            "netapp.santricity.models.symbol.psu_firmware_update_descriptor",
            "netapp.santricity.models.symbol.psu_firmware_update_status",
            "netapp.santricity.models.symbol.psu_update_status",
            "netapp.santricity.models.symbol.pvg_recovery_data",
            "netapp.santricity.models.symbol.raw_data_restore_chunk_details",
            "netapp.santricity.models.symbol.raw_data_restore_continue_desc",
            "netapp.santricity.models.symbol.raw_data_restore_result",
            "netapp.santricity.models.symbol.raw_data_restore_start_desc",
            "netapp.santricity.models.symbol.raw_data_restore_start_details",
            "netapp.santricity.models.symbol.raw_data_retrieve_chunk_details",
            "netapp.santricity.models.symbol.raw_data_retrieve_continue_desc",
            "netapp.santricity.models.symbol.raw_data_retrieve_info",
            "netapp.santricity.models.symbol.raw_data_retrieve_result",
            "netapp.santricity.models.symbol.raw_data_retrieve_start_desc",
            "netapp.santricity.models.symbol.raw_data_retrieve_start_details",
            "netapp.santricity.models.symbol.raw_data_retrieve_start_result",
            "netapp.santricity.models.symbol.raw_data_transfer_cancel_desc",
            "netapp.santricity.models.symbol.recover_volume_descriptor",
            "netapp.santricity.models.symbol.recurrence",
            "netapp.santricity.models.symbol.registered_ports",
            "netapp.santricity.models.symbol.registrant",
            "netapp.santricity.models.symbol.registrant_list",
            "netapp.santricity.models.symbol.remote_array",
            "netapp.santricity.models.symbol.remote_array_authenticator",
            "netapp.santricity.models.symbol.remote_communication_check_descriptor",
            "netapp.santricity.models.symbol.remote_communication_check_sample_list",
            "netapp.santricity.models.symbol.remote_mirror_authenticator",
            "netapp.santricity.models.symbol.remote_target",
            "netapp.santricity.models.symbol.remote_target_creation_descriptor",
            "netapp.santricity.models.symbol.remote_vol_no_array",
            "netapp.santricity.models.symbol.remote_vol_no_fabric",
            "netapp.santricity.models.symbol.remote_vol_no_lun",
            "netapp.santricity.models.symbol.remote_vol_wwn_change_failed",
            "netapp.santricity.models.symbol.remote_volume",
            "netapp.santricity.models.symbol.repair_policy",
            "netapp.santricity.models.symbol.repository_utilization",
            "netapp.santricity.models.symbol.repository_utilization_list",
            "netapp.santricity.models.symbol.reserve_support_data_returned",
            "netapp.santricity.models.symbol.return_code_with_opaque_data",
            "netapp.santricity.models.symbol.return_code_with_ref",
            "netapp.santricity.models.symbol.return_code_with_ref_list",
            "netapp.santricity.models.symbol.rlogin_update_descriptor",
            "netapp.santricity.models.symbol.rls_command_descriptor",
            "netapp.santricity.models.symbol.rls_count",
            "netapp.santricity.models.symbol.rls_data",
            "netapp.santricity.models.symbol.rls_device",
            "netapp.santricity.models.symbol.rls_devices",
            "netapp.santricity.models.symbol.rls_results",
            "netapp.santricity.models.symbol.rtr_attribute_data",
            "netapp.santricity.models.symbol.rtr_attributes",
            "netapp.santricity.models.symbol.rtr_object",
            "netapp.santricity.models.symbol.rtr_type_ref",
            "netapp.santricity.models.symbol.rtr_update_description",
            "netapp.santricity.models.symbol.rtr_update_descriptor",
            "netapp.santricity.models.symbol.runtime_diag_descriptor",
            "netapp.santricity.models.symbol.runtime_diag_results",
            "netapp.santricity.models.symbol.runtime_diag_test_results",
            "netapp.santricity.models.symbol.sa_cache",
            "netapp.santricity.models.symbol.sa_cache_params_update_descriptor",
            "netapp.santricity.models.symbol.sa_data",
            "netapp.santricity.models.symbol.sa_identifier",
            "netapp.santricity.models.symbol.sa_port",
            "netapp.santricity.models.symbol.sa_port_get_descriptor",
            "netapp.santricity.models.symbol.sa_port_group",
            "netapp.santricity.models.symbol.sa_view_password_digest",
            "netapp.santricity.models.symbol.sa_view_password_digest_returned",
            "netapp.santricity.models.symbol.sas_attached_device",
            "netapp.santricity.models.symbol.sas_attached_device_type_data",
            "netapp.santricity.models.symbol.sas_data",
            "netapp.santricity.models.symbol.sas_drive_address",
            "netapp.santricity.models.symbol.sas_drive_port_address",
            "netapp.santricity.models.symbol.sas_esm_attributes",
            "netapp.santricity.models.symbol.sas_expander",
            "netapp.santricity.models.symbol.sas_expander_parent",
            "netapp.santricity.models.symbol.sas_interface",
            "netapp.santricity.models.symbol.sas_phy",
            "netapp.santricity.models.symbol.sas_phy_data",
            "netapp.santricity.models.symbol.sas_phy_error_counts",
            "netapp.santricity.models.symbol.sas_port",
            "netapp.santricity.models.symbol.sas_port_data",
            "netapp.santricity.models.symbol.sas_port_provider_device",
            "netapp.santricity.models.symbol.sas_port_type_data",
            "netapp.santricity.models.symbol.sas_statistics",
            "netapp.santricity.models.symbol.sas_statistics_returned",
            "netapp.santricity.models.symbol.sata_drive_attributes",
            "netapp.santricity.models.symbol.sata_interface",
            "netapp.santricity.models.symbol.schedule",
            "netapp.santricity.models.symbol.schedule_calendar",
            "netapp.santricity.models.symbol.schedule_creation_descriptor",
            "netapp.santricity.models.symbol.schedule_creation_descriptor_list",
            "netapp.santricity.models.symbol.schedule_daily",
            "netapp.santricity.models.symbol.schedule_instance",
            "netapp.santricity.models.symbol.schedule_monthly_by_date",
            "netapp.santricity.models.symbol.schedule_monthly_by_day",
            "netapp.santricity.models.symbol.schedule_ref_list",
            "netapp.santricity.models.symbol.schedule_update_descriptor",
            "netapp.santricity.models.symbol.schedule_update_descriptor_list",
            "netapp.santricity.models.symbol.schedule_weekly",
            "netapp.santricity.models.symbol.scsi_alias",
            "netapp.santricity.models.symbol.scsi_drive_address",
            "netapp.santricity.models.symbol.scsi_initiator_port_id",
            "netapp.santricity.models.symbol.scsi_initiator_target_base_properties",
            "netapp.santricity.models.symbol.scsi_interface",
            "netapp.santricity.models.symbol.scsi_node_name",
            "netapp.santricity.models.symbol.scsi_protocol_endpoint",
            "netapp.santricity.models.symbol.scsi_remote_connection",
            "netapp.santricity.models.symbol.scsi_remote_connections_returned",
            "netapp.santricity.models.symbol.scsi_remote_target_connections",
            "netapp.santricity.models.symbol.scsi_target_port_id",
            "netapp.santricity.models.symbol.scsi_to_ata_translator_data",
            "netapp.santricity.models.symbol.security_key_needed",
            "netapp.santricity.models.symbol.setting_control",
            "netapp.santricity.models.symbol.sfp",
            "netapp.santricity.models.symbol.sfp_parent_type_data",
            "netapp.santricity.models.symbol.sfp_type",
            "netapp.santricity.models.symbol.smart_battery_data",
            "netapp.santricity.models.symbol.snapshot_conversion_descriptor",
            "netapp.santricity.models.symbol.snapshot_conversion_label",
            "netapp.santricity.models.symbol.snapshot_creation_descriptor",
            "netapp.santricity.models.symbol.snapshot_failure",
            "netapp.santricity.models.symbol.snapshot_params_update_descriptor",
            "netapp.santricity.models.symbol.snapshot_ref_list",
            "netapp.santricity.models.symbol.snapshot_rollback_operation",
            "netapp.santricity.models.symbol.snapshot_volume",
            "netapp.santricity.models.symbol.snmp_agent_bundle",
            "netapp.santricity.models.symbol.snmp_community",
            "netapp.santricity.models.symbol.snmp_community_add_descriptor",
            "netapp.santricity.models.symbol.snmp_community_add_descriptor_list",
            "netapp.santricity.models.symbol.snmp_community_params_update_descriptor",
            "netapp.santricity.models.symbol.snmp_community_params_update_descriptor_list",
            "netapp.santricity.models.symbol.snmp_community_ref_list",
            "netapp.santricity.models.symbol.snmp_system_variable_value",
            "netapp.santricity.models.symbol.snmp_system_variables",
            "netapp.santricity.models.symbol.snmp_system_variables_update_descriptor",
            "netapp.santricity.models.symbol.snmp_trap_destination",
            "netapp.santricity.models.symbol.snmp_trap_destination_add_descriptor",
            "netapp.santricity.models.symbol.snmp_trap_destination_add_descriptor_list",
            "netapp.santricity.models.symbol.snmp_trap_destination_params_update_descriptor",
            "netapp.santricity.models.symbol.snmp_trap_destination_params_update_descriptor_list",
            "netapp.santricity.models.symbol.snmp_trap_destination_ref_list",
            "netapp.santricity.models.symbol.snmp_trap_destination_test_descriptor",
            "netapp.santricity.models.symbol.snmp_trap_destination_test_descriptor_list",
            "netapp.santricity.models.symbol.soc_command_descriptor",
            "netapp.santricity.models.symbol.soc_connected_device",
            "netapp.santricity.models.symbol.soc_connected_device_type_data",
            "netapp.santricity.models.symbol.soc_data",
            "netapp.santricity.models.symbol.soc_device_data",
            "netapp.santricity.models.symbol.soc_location",
            "netapp.santricity.models.symbol.soc_parent",
            "netapp.santricity.models.symbol.soc_port_data",
            "netapp.santricity.models.symbol.soc_port_diagnostic_data",
            "netapp.santricity.models.symbol.soc_statistics",
            "netapp.santricity.models.symbol.soc_statistics_returned",
            "netapp.santricity.models.symbol.specific_database_metadata",
            "netapp.santricity.models.symbol.speed_neg_error",
            "netapp.santricity.models.symbol.ssd_wear_life",
            "netapp.santricity.models.symbol.staged_firmware",
            "netapp.santricity.models.symbol.stat_stream_id_returned",
            "netapp.santricity.models.symbol.statistical_container",
            "netapp.santricity.models.symbol.statistical_time_data",
            "netapp.santricity.models.symbol.storage_array",
            "netapp.santricity.models.symbol.storage_array_changeable_properties",
            "netapp.santricity.models.symbol.storage_array_properties_update_descriptor",
            "netapp.santricity.models.symbol.storage_pool_bundle",
            "netapp.santricity.models.symbol.support_cru",
            "netapp.santricity.models.symbol.sy_mbol_ref_pair",
            "netapp.santricity.models.symbol.sy_mbol_ref_with_ual",
            "netapp.santricity.models.symbol.syslog_configuration",
            "netapp.santricity.models.symbol.system_attribute_defaults",
            "netapp.santricity.models.symbol.system_attribute_defaults_returned",
            "netapp.santricity.models.symbol.target",
            "netapp.santricity.models.symbol.target_changeable_properties",
            "netapp.santricity.models.symbol.target_location",
            "netapp.santricity.models.symbol.target_portal",
            "netapp.santricity.models.symbol.target_properties_update_descriptor",
            "netapp.santricity.models.symbol.tcp_protocol_endpoint",
            "netapp.santricity.models.symbol.tcp_statistical_data",
            "netapp.santricity.models.symbol.thermal_sensor",
            "netapp.santricity.models.symbol.thermal_sensor_data",
            "netapp.santricity.models.symbol.thin_volume",
            "netapp.santricity.models.symbol.thin_volume_capacity_provisioning_details",
            "netapp.santricity.models.symbol.thin_volume_capacity_quota_update_descriptor",
            "netapp.santricity.models.symbol.thin_volume_consumed_capacity",
            "netapp.santricity.models.symbol.thin_volume_consumed_capacity_returned",
            "netapp.santricity.models.symbol.thin_volume_creation_descriptor",
            "netapp.santricity.models.symbol.thin_volume_default_attributes",
            "netapp.santricity.models.symbol.thin_volume_expansion_descriptor",
            "netapp.santricity.models.symbol.thin_volume_expansion_policy_update_descriptor",
            "netapp.santricity.models.symbol.thin_volume_ref_list",
            "netapp.santricity.models.symbol.thin_volume_reinitialize_descriptor",
            "netapp.santricity.models.symbol.thin_volume_reinitialize_params",
            "netapp.santricity.models.symbol.thin_volume_reporting_policy_update_descriptor",
            "netapp.santricity.models.symbol.thin_volume_repository_expansion_history_data",
            "netapp.santricity.models.symbol.thin_volume_repository_expansion_history_list_returned",
            "netapp.santricity.models.symbol.thin_volume_threshold_update_descriptor",
            "netapp.santricity.models.symbol.time_to_live_tlv",
            "netapp.santricity.models.symbol.time_zone_description",
            "netapp.santricity.models.symbol.tray",
            "netapp.santricity.models.symbol.tray_attribute",
            "netapp.santricity.models.symbol.tray_attribute_update_descriptor",
            "netapp.santricity.models.symbol.tray_lost_redundancy_failure",
            "netapp.santricity.models.symbol.tray_position",
            "netapp.santricity.models.symbol.tray_position_list",
            "netapp.santricity.models.symbol.tray_power",
            "netapp.santricity.models.symbol.tray_ref_list",
            "netapp.santricity.models.symbol.tray_slot",
            "netapp.santricity.models.symbol.tray_temperature_returned",
            "netapp.santricity.models.symbol.tray_update_descriptor",
            "netapp.santricity.models.symbol.typed_sy_mbol_reference",
            "netapp.santricity.models.symbol.unconfigured_initiators_returned",
            "netapp.santricity.models.symbol.unmatched_pending_host",
            "netapp.santricity.models.symbol.unreadable_sector_table_entry",
            "netapp.santricity.models.symbol.unreadable_sector_table_info",
            "netapp.santricity.models.symbol.unreadable_sectors",
            "netapp.santricity.models.symbol.ups",
            "netapp.santricity.models.symbol.usm_error",
            "netapp.santricity.models.symbol.vendor_part_data",
            "netapp.santricity.models.symbol.version_descriptor",
            "netapp.santricity.models.symbol.volume",
            "netapp.santricity.models.symbol.volume_action_progress",
            "netapp.santricity.models.symbol.volume_attribute_update_descriptor",
            "netapp.santricity.models.symbol.volume_cache",
            "netapp.santricity.models.symbol.volume_cache_params_update_descriptor",
            "netapp.santricity.models.symbol.volume_candidate",
            "netapp.santricity.models.symbol.volume_candidate_list",
            "netapp.santricity.models.symbol.volume_candidate_request",
            "netapp.santricity.models.symbol.volume_candidate_request_type_data",
            "netapp.santricity.models.symbol.volume_candidate_type_data",
            "netapp.santricity.models.symbol.volume_changeable_properties",
            "netapp.santricity.models.symbol.volume_copy",
            "netapp.santricity.models.symbol.volume_copy_candidate",
            "netapp.santricity.models.symbol.volume_copy_candidate_list",
            "netapp.santricity.models.symbol.volume_copy_creation_descriptor",
            "netapp.santricity.models.symbol.volume_copy_operation",
            "netapp.santricity.models.symbol.volume_copy_params_update_descriptor",
            "netapp.santricity.models.symbol.volume_counter_group",
            "netapp.santricity.models.symbol.volume_creation_descriptor",
            "netapp.santricity.models.symbol.volume_deletion_descriptor",
            "netapp.santricity.models.symbol.volume_expansion_descriptor",
            "netapp.santricity.models.symbol.volume_flash_cache_descriptor",
            "netapp.santricity.models.symbol.volume_group",
            "netapp.santricity.models.symbol.volume_group_creation_descriptor",
            "netapp.santricity.models.symbol.volume_group_expansion_candidate",
            "netapp.santricity.models.symbol.volume_group_expansion_descriptor",
            "netapp.santricity.models.symbol.volume_group_label_update_descriptor",
            "netapp.santricity.models.symbol.volume_group_operation",
            "netapp.santricity.models.symbol.volume_group_ownership_update_descriptor",
            "netapp.santricity.models.symbol.volume_group_ref_list",
            "netapp.santricity.models.symbol.volume_group_summary",
            "netapp.santricity.models.symbol.volume_group_type_data",
            "netapp.santricity.models.symbol.volume_label_update_descriptor",
            "netapp.santricity.models.symbol.volume_list_returned",
            "netapp.santricity.models.symbol.volume_media_scan_params",
            "netapp.santricity.models.symbol.volume_media_scan_params_update_descriptor",
            "netapp.santricity.models.symbol.volume_operation",
            "netapp.santricity.models.symbol.volume_ownership_fail_back_request_descriptor",
            "netapp.santricity.models.symbol.volume_ownership_update_descriptor",
            "netapp.santricity.models.symbol.volume_params_update_descriptor",
            "netapp.santricity.models.symbol.volume_performance",
            "netapp.santricity.models.symbol.volume_performance_list",
            "netapp.santricity.models.symbol.volume_perms",
            "netapp.santricity.models.symbol.volume_properties_update_descriptor",
            "netapp.santricity.models.symbol.volume_raid_migration_descriptor",
            "netapp.santricity.models.symbol.volume_response",
            "netapp.santricity.models.symbol.volume_scan_descriptor",
            "netapp.santricity.models.symbol.volume_segment_sizing_descriptor",
            "netapp.santricity.models.symbol.volume_type_parameters",
            "netapp.santricity.models.symbol.volume_usage_hint",
            "netapp.santricity.models.symbol.wlc_analytics_chunk_details",
            "netapp.santricity.models.symbol.wlc_analytics_start_details",
            "netapp.santricity.models.symbol.workload",
            "netapp.santricity.models.symbol.workload_creation_descriptor",
            "netapp.santricity.models.symbol.workload_creation_descriptor_list",
            "netapp.santricity.models.symbol.workload_ref_list",
            "netapp.santricity.models.symbol.workload_volume_create_mapping_descriptor",
            "netapp.santricity.models.symbol.workload_volume_create_mapping_descriptor_list",
            "netapp.santricity.models.symbol.workload_volume_delete_mapping_descriptor",
            "netapp.santricity.models.symbol.workload_volume_delete_mapping_descriptor_list",
            "netapp.santricity.models.symbol.workload_volume_mapping",
            "netapp.santricity.models.symbol.wrapped_lock_key",
            "netapp.santricity.models.symbol.wrapped_lock_key_list",
            "netapp.santricity.models.symbol.wrapped_lock_key_return",
            "netapp.santricity.models.utils",
            "netapp.santricity.models.utils.about_response",
            "netapp.santricity.models.utils.build_info_component",
            "netapp.santricity.models.utils.build_info_response",
            "netapp.santricity.models.utils.login_request",
            "netapp.santricity.models.utils.login_response",
            "netapp.santricity.models.v2",
            "netapp.santricity.models.v2.access_volume_ex",
            "netapp.santricity.models.v2.add_batch_cg_members_request",
            "netapp.santricity.models.v2.add_consistency_group_member_request",
            "netapp.santricity.models.v2.add_storage_system_return",
            "netapp.santricity.models.v2.alert_syslog_configuration",
            "netapp.santricity.models.v2.alert_syslog_response",
            "netapp.santricity.models.v2.alert_syslog_server",
            "netapp.santricity.models.v2.amg",
            "netapp.santricity.models.v2.amg_incomplete_member",
            "netapp.santricity.models.v2.amg_member",
            "netapp.santricity.models.v2.analysed_controller_statistics",
            "netapp.santricity.models.v2.analysed_disk_statistics",
            "netapp.santricity.models.v2.analysed_storage_system_statistics",
            "netapp.santricity.models.v2.analysed_volume_statistics",
            "netapp.santricity.models.v2.analyzed_application_statistics",
            "netapp.santricity.models.v2.analyzed_interface_statistics",
            "netapp.santricity.models.v2.analyzed_pool_statistics",
            "netapp.santricity.models.v2.analyzed_workload_statistics",
            "netapp.santricity.models.v2.application_statistics",
            "netapp.santricity.models.v2.asup_dispatch_request",
            "netapp.santricity.models.v2.asup_entry",
            "netapp.santricity.models.v2.asup_registration_request",
            "netapp.santricity.models.v2.asup_response",
            "netapp.santricity.models.v2.asup_update_request",
            "netapp.santricity.models.v2.async_communication_data",
            "netapp.santricity.models.v2.async_mirror_connections_response",
            "netapp.santricity.models.v2.async_mirror_group_connectivity_test_request",
            "netapp.santricity.models.v2.async_mirror_group_create_request",
            "netapp.santricity.models.v2.async_mirror_group_member_completion_request",
            "netapp.santricity.models.v2.async_mirror_group_member_create_request",
            "netapp.santricity.models.v2.async_mirror_group_role_update_request",
            "netapp.santricity.models.v2.async_mirror_group_sync_request",
            "netapp.santricity.models.v2.async_mirror_group_update_request",
            "netapp.santricity.models.v2.async_mirror_remote_connection",
            "netapp.santricity.models.v2.average_analysed_application_stats",
            "netapp.santricity.models.v2.average_analysed_controller_stats",
            "netapp.santricity.models.v2.average_analysed_drive_stats",
            "netapp.santricity.models.v2.average_analysed_interface_stats",
            "netapp.santricity.models.v2.average_analysed_pool_stats",
            "netapp.santricity.models.v2.average_analysed_stats_response",
            "netapp.santricity.models.v2.average_analysed_system_controller_stats",
            "netapp.santricity.models.v2.average_analysed_system_stats",
            "netapp.santricity.models.v2.average_analysed_value",
            "netapp.santricity.models.v2.average_analysed_volume_stats",
            "netapp.santricity.models.v2.average_analysed_workload_stats",
            "netapp.santricity.models.v2.battery_ex",
            "netapp.santricity.models.v2.call_response",
            "netapp.santricity.models.v2.capabilities_response",
            "netapp.santricity.models.v2.cfw_activation_request",
            "netapp.santricity.models.v2.cfw_package_metadata",
            "netapp.santricity.models.v2.cfw_upgrade_request",
            "netapp.santricity.models.v2.cfw_upgrade_response",
            "netapp.santricity.models.v2.cg_snapshot_view_request",
            "netapp.santricity.models.v2.concat_repository_volume",
            "netapp.santricity.models.v2.concat_volume_candidate_request",
            "netapp.santricity.models.v2.concat_volume_expansion_request",
            "netapp.santricity.models.v2.configuration_db_validation_check",
            "netapp.santricity.models.v2.configuration_result",
            "netapp.santricity.models.v2.configuration_result_item",
            "netapp.santricity.models.v2.consistency_group_create_request",
            "netapp.santricity.models.v2.consistency_group_update_request",
            "netapp.santricity.models.v2.controller_stats",
            "netapp.santricity.models.v2.create_cg_snapshot_view_manual_request",
            "netapp.santricity.models.v2.create_consistency_group_snapshot_request",
            "netapp.santricity.models.v2.create_consistency_group_snapshot_view_request",
            "netapp.santricity.models.v2.current_firmware_response",
            "netapp.santricity.models.v2.cv_candidate_multiple_selection_request",
            "netapp.santricity.models.v2.cv_candidate_response",
            "netapp.santricity.models.v2.cv_candidate_selection_request",
            "netapp.santricity.models.v2.device_alert_configuration",
            "netapp.santricity.models.v2.device_alert_test_response",
            "netapp.santricity.models.v2.device_asup_delivery",
            "netapp.santricity.models.v2.device_asup_device",
            "netapp.santricity.models.v2.device_asup_response",
            "netapp.santricity.models.v2.device_asup_schedule",
            "netapp.santricity.models.v2.device_asup_update_request",
            "netapp.santricity.models.v2.device_asup_verify_request",
            "netapp.santricity.models.v2.device_asup_verify_response",
            "netapp.santricity.models.v2.device_data_response",
            "netapp.santricity.models.v2.diagnostic_data_request",
            "netapp.santricity.models.v2.discover_response",
            "netapp.santricity.models.v2.discovered_storage_system",
            "netapp.santricity.models.v2.discovery_start_request",
            "netapp.santricity.models.v2.disk_io_stats",
            "netapp.santricity.models.v2.disk_pool_priority_update_request",
            "netapp.santricity.models.v2.disk_pool_reduction_request",
            "netapp.santricity.models.v2.disk_pool_threshold_update_request",
            "netapp.santricity.models.v2.drive_ex",
            "netapp.santricity.models.v2.drive_firmware_compatability_entry",
            "netapp.santricity.models.v2.drive_firmware_compatibility_response",
            "netapp.santricity.models.v2.drive_firmware_compatiblity_set",
            "netapp.santricity.models.v2.drive_firmware_update_entry",
            "netapp.santricity.models.v2.drive_selection_request",
            "netapp.santricity.models.v2.embedded_compatibility_check_response",
            "netapp.santricity.models.v2.embedded_firmware_response",
            "netapp.santricity.models.v2.enumeration_string",
            "netapp.santricity.models.v2.esm_fibre_port_connection",
            "netapp.santricity.models.v2.esm_port_connection_response",
            "netapp.santricity.models.v2.esm_sas_port_connection",
            "netapp.santricity.models.v2.event",
            "netapp.santricity.models.v2.event_object_identifier",
            "netapp.santricity.models.v2.exclusive_operation_check",
            "netapp.santricity.models.v2.failure_data",
            "netapp.santricity.models.v2.fibre_interface_port",
            "netapp.santricity.models.v2.file_based_configuration_request",
            "netapp.santricity.models.v2.file_config_item",
            "netapp.santricity.models.v2.file_info",
            "netapp.santricity.models.v2.firmware_compatibility_request",
            "netapp.santricity.models.v2.firmware_compatibility_response",
            "netapp.santricity.models.v2.firmware_compatibility_set",
            "netapp.santricity.models.v2.firmware_upgrade_health_check_result",
            "netapp.santricity.models.v2.flash_cache_create_request",
            "netapp.santricity.models.v2.flash_cache_ex",
            "netapp.santricity.models.v2.flash_cache_update_request",
            "netapp.santricity.models.v2.folder",
            "netapp.santricity.models.v2.folder_create_request",
            "netapp.santricity.models.v2.folder_event",
            "netapp.santricity.models.v2.folder_update_request",
            "netapp.santricity.models.v2.hardware_inventory_response",
            "netapp.santricity.models.v2.health_check_failure_response",
            "netapp.santricity.models.v2.health_check_request",
            "netapp.santricity.models.v2.health_check_response",
            "netapp.santricity.models.v2.historical_stats_response",
            "netapp.santricity.models.v2.host_create_request",
            "netapp.santricity.models.v2.host_ex",
            "netapp.santricity.models.v2.host_group",
            "netapp.santricity.models.v2.host_group_create_request",
            "netapp.santricity.models.v2.host_group_update_request",
            "netapp.santricity.models.v2.host_move_request",
            "netapp.santricity.models.v2.host_port_create_request",
            "netapp.santricity.models.v2.host_port_update_request",
            "netapp.santricity.models.v2.host_side_port",
            "netapp.santricity.models.v2.host_type",
            "netapp.santricity.models.v2.host_type_values",
            "netapp.santricity.models.v2.host_update_request",
            "netapp.santricity.models.v2.i_scsi_interface_port",
            "netapp.santricity.models.v2.ib_interface_port",
            "netapp.santricity.models.v2.identification_request",
            "netapp.santricity.models.v2.initial_async_response",
            "netapp.santricity.models.v2.interface_stats",
            "netapp.santricity.models.v2.iom_service_info_response",
            "netapp.santricity.models.v2.iom_service_update_request",
            "netapp.santricity.models.v2.iscsi_entity_response",
            "netapp.santricity.models.v2.iscsi_entity_update_request",
            "netapp.santricity.models.v2.iscsi_target_response",
            "netapp.santricity.models.v2.iscsi_target_update_request",
            "netapp.santricity.models.v2.job_progress",
            "netapp.santricity.models.v2.key_value",
            "netapp.santricity.models.v2.legacy_snapshot_create_request",
            "netapp.santricity.models.v2.legacy_snapshot_ex",
            "netapp.santricity.models.v2.legacy_snapshot_update_request",
            "netapp.santricity.models.v2.level",
            "netapp.santricity.models.v2.locale",
            "netapp.santricity.models.v2.localized_log_message",
            "netapp.santricity.models.v2.lockdown_status_response",
            "netapp.santricity.models.v2.log_record",
            "netapp.santricity.models.v2.logger_record_response",
            "netapp.santricity.models.v2.management_configuration_request",
            "netapp.santricity.models.v2.management_interface",
            "netapp.santricity.models.v2.mappable_object",
            "netapp.santricity.models.v2.mel_entry_ex",
            "netapp.santricity.models.v2.mel_event_health_check",
            "netapp.santricity.models.v2.metadata_change_event",
            "netapp.santricity.models.v2.nvsram_package_metadata",
            "netapp.santricity.models.v2.object_change_event",
            "netapp.santricity.models.v2.object_graph_change_event",
            "netapp.santricity.models.v2.object_graph_sync_check",
            "netapp.santricity.models.v2.operation_progress",
            "netapp.santricity.models.v2.password_set_request",
            "netapp.santricity.models.v2.password_status_event",
            "netapp.santricity.models.v2.password_status_response",
            "netapp.santricity.models.v2.pit_view_ex",
            "netapp.santricity.models.v2.pitcg_member",
            "netapp.santricity.models.v2.pool_qos_response",
            "netapp.santricity.models.v2.pool_statistics",
            "netapp.santricity.models.v2.progress",
            "netapp.santricity.models.v2.raid_migration_request",
            "netapp.santricity.models.v2.raw_stats_response",
            "netapp.santricity.models.v2.remote_candidate",
            "netapp.santricity.models.v2.remote_communication_data",
            "netapp.santricity.models.v2.remote_mirror_candidate",
            "netapp.santricity.models.v2.remote_mirror_pair",
            "netapp.santricity.models.v2.remote_volume_mirror_create_request",
            "netapp.santricity.models.v2.remote_volume_mirror_update_request",
            "netapp.santricity.models.v2.removable_drive_response",
            "netapp.santricity.models.v2.resource_bundle",
            "netapp.santricity.models.v2.rule",
            "netapp.santricity.models.v2.sas_interface_port",
            "netapp.santricity.models.v2.save_config_spec",
            "netapp.santricity.models.v2.schedule_create_request",
            "netapp.santricity.models.v2.secure_volume_key_request",
            "netapp.santricity.models.v2.secure_volume_key_response",
            "netapp.santricity.models.v2.serializable",
            "netapp.santricity.models.v2.single_number_value",
            "netapp.santricity.models.v2.snapshot",
            "netapp.santricity.models.v2.snapshot_create_request",
            "netapp.santricity.models.v2.snapshot_group",
            "netapp.santricity.models.v2.snapshot_group_create_request",
            "netapp.santricity.models.v2.snapshot_group_update_request",
            "netapp.santricity.models.v2.snapshot_view_create_request",
            "netapp.santricity.models.v2.snapshot_view_update_request",
            "netapp.santricity.models.v2.snapshot_volume_mode_conversion_request",
            "netapp.santricity.models.v2.software_version",
            "netapp.santricity.models.v2.software_versions",
            "netapp.santricity.models.v2.spm_database_health_check",
            "netapp.santricity.models.v2.ssc_volume_create_request",
            "netapp.santricity.models.v2.ssc_volume_update_request",
            "netapp.santricity.models.v2.ssl_cert_configuration",
            "netapp.santricity.models.v2.stack_trace_element",
            "netapp.santricity.models.v2.staged_firmware_response",
            "netapp.santricity.models.v2.storage_device_health_check",
            "netapp.santricity.models.v2.storage_device_status_event",
            "netapp.santricity.models.v2.storage_pool_create_request",
            "netapp.santricity.models.v2.storage_pool_expansion_request",
            "netapp.santricity.models.v2.storage_pool_update_request",
            "netapp.santricity.models.v2.storage_system_config_response",
            "netapp.santricity.models.v2.storage_system_config_update_request",
            "netapp.santricity.models.v2.storage_system_controller_stats",
            "netapp.santricity.models.v2.storage_system_create_request",
            "netapp.santricity.models.v2.storage_system_response",
            "netapp.santricity.models.v2.storage_system_stats",
            "netapp.santricity.models.v2.storage_system_update_request",
            "netapp.santricity.models.v2.subject_alternate_name",
            "netapp.santricity.models.v2.support_artifact",
            "netapp.santricity.models.v2.support_artifacts",
            "netapp.santricity.models.v2.support_data_request",
            "netapp.santricity.models.v2.support_data_response",
            "netapp.santricity.models.v2.tag_event",
            "netapp.santricity.models.v2.thin_volume_cache_settings",
            "netapp.santricity.models.v2.thin_volume_create_request",
            "netapp.santricity.models.v2.thin_volume_ex",
            "netapp.santricity.models.v2.thin_volume_expansion_request",
            "netapp.santricity.models.v2.thin_volume_update_request",
            "netapp.santricity.models.v2.throwable",
            "netapp.santricity.models.v2.trace_buffer_spec",
            "netapp.santricity.models.v2.tray_ex",
            "netapp.santricity.models.v2.unassociated_host_port",
            "netapp.santricity.models.v2.unreadable_sector_entry_result",
            "netapp.santricity.models.v2.unreadable_sector_response",
            "netapp.santricity.models.v2.upgrade_manager_response",
            "netapp.santricity.models.v2.user_volume",
            "netapp.santricity.models.v2.validate_configuration_file_response_item",
            "netapp.santricity.models.v2.validate_confiuration_file_response",
            "netapp.santricity.models.v2.version_content",
            "netapp.santricity.models.v2.volume_action_progress_response",
            "netapp.santricity.models.v2.volume_cache_settings",
            "netapp.santricity.models.v2.volume_copy_create_request",
            "netapp.santricity.models.v2.volume_copy_pair",
            "netapp.santricity.models.v2.volume_copy_progress",
            "netapp.santricity.models.v2.volume_copy_update_request",
            "netapp.santricity.models.v2.volume_create_request",
            "netapp.santricity.models.v2.volume_ex",
            "netapp.santricity.models.v2.volume_expansion_request",
            "netapp.santricity.models.v2.volume_group_ex",
            "netapp.santricity.models.v2.volume_io_stats",
            "netapp.santricity.models.v2.volume_mapping_create_request",
            "netapp.santricity.models.v2.volume_mapping_move_request",
            "netapp.santricity.models.v2.volume_metadata_item",
            "netapp.santricity.models.v2.volume_update_request",
            "netapp.santricity.models.v2.workload_attribute",
            "netapp.santricity.models.v2.workload_copy_request",
            "netapp.santricity.models.v2.workload_create_request",
            "netapp.santricity.models.v2.workload_model",
            "netapp.santricity.models.v2.workload_statistics",
            "netapp.santricity.models.v2.workload_update_request",
            "netapp.santricity.models.v2.x509_cert_info",
            "netapp.santricity.rest",
            "tests",
            "tests.api",
            "tests.api.symbol",
            "tests.api.symbol.a_api_test",
            "tests.api.symbol.b_api_test",
            "tests.api.symbol.c_api_test",
            "tests.api.symbol.d_api_test",
            "tests.api.symbol.e_api_test",
            "tests.api.symbol.f_api_test",
            "tests.api.symbol.g_api_test",
            "tests.api.symbol.i_api_test",
            "tests.api.symbol.l_api_test",
            "tests.api.symbol.m_api_test",
            "tests.api.symbol.p_api_test",
            "tests.api.symbol.q_api_test",
            "tests.api.symbol.r_api_test",
            "tests.api.symbol.s_api_test",
            "tests.api.symbol.t_api_test",
            "tests.api.symbol.u_api_test",
            "tests.api.symbol.v_api_test",
            "tests.api.symbol.w_api_test",
            "tests.api.utils",
            "tests.api.utils.about_api_test",
            "tests.api.utils.build_info_api_test",
            "tests.api.utils.login_api_test",
            "tests.api.v2",
            "tests.api.v2.administration_api_test",
            "tests.api.v2.configuration_api_test",
            "tests.api.v2.copy_services_api_test",
            "tests.api.v2.device_asup_api_test",
            "tests.api.v2.diagnostics_api_test",
            "tests.api.v2.drive_firmware_api_test",
            "tests.api.v2.file_management_api_test",
            "tests.api.v2.firmware_api_test",
            "tests.api.v2.flash_cache_api_test",
            "tests.api.v2.hardware_api_test",
            "tests.api.v2.mapping_api_test",
            "tests.api.v2.mirroring_api_test",
            "tests.api.v2.monitoring_api_test",
            "tests.api.v2.service_catalog_api_test",
            "tests.api.v2.statistics_api_test",
            "tests.api.v2.storage_systems_api_test",
            "tests.api.v2.upgrade_api_test",
            "tests.api.v2.volumes_api_test",
            "tests.api.v2.workloads_api_test",
            "tests.models",
            "tests.models.symbol",
            "tests.models.symbol.abstract_vol_ref_list_test",
            "tests.models.symbol.access_volume_test",
            "tests.models.symbol.accessible_controller_test",
            "tests.models.symbol.alarm_test",
            "tests.models.symbol.alarm_update_descriptor_test",
            "tests.models.symbol.application_awareness_bundle_test",
            "tests.models.symbol.arvm_default_attributes_test",
            "tests.models.symbol.asup_status_returned_test",
            "tests.models.symbol.asup_status_test",
            "tests.models.symbol.async_mirror_group_action_result_test",
            "tests.models.symbol.async_mirror_group_add_primary_member_descriptor_test",
            "tests.models.symbol.async_mirror_group_add_secondary_member_descriptor_test",
            "tests.models.symbol.async_mirror_group_connectivity_test_descriptor_test",
            "tests.models.symbol.async_mirror_group_connectivity_test_results_returned_test",
            "tests.models.symbol.async_mirror_group_connectivity_test_results_test",
            "tests.models.symbol.async_mirror_group_creation_descriptor_test",
            "tests.models.symbol.async_mirror_group_deletion_descriptor_test",
            "tests.models.symbol.async_mirror_group_fault_indication_clear_descriptor_test",
            "tests.models.symbol.async_mirror_group_fault_indication_test",
            "tests.models.symbol.async_mirror_group_incomplete_member_test",
            "tests.models.symbol.async_mirror_group_initial_sync_operation_test",
            "tests.models.symbol.async_mirror_group_link_bandwidth_test_results_test",
            "tests.models.symbol.async_mirror_group_link_latency_test_results_test",
            "tests.models.symbol.async_mirror_group_member_fault_indication_clear_descriptor_test",
            "tests.models.symbol.async_mirror_group_member_fault_indication_test",
            "tests.models.symbol.async_mirror_group_member_initial_sync_operation_test",
            "tests.models.symbol.async_mirror_group_member_mismatch_list_test",
            "tests.models.symbol.async_mirror_group_member_ref_list_test",
            "tests.models.symbol.async_mirror_group_member_sync_progress_test",
            "tests.models.symbol.async_mirror_group_member_test",
            "tests.models.symbol.async_mirror_group_mirror_connection_descriptor_test",
            "tests.models.symbol.async_mirror_group_params_update_descriptor_test",
            "tests.models.symbol.async_mirror_group_recover_descriptor_test",
            "tests.models.symbol.async_mirror_group_ref_list_test",
            "tests.models.symbol.async_mirror_group_remove_member_descriptor_test",
            "tests.models.symbol.async_mirror_group_resume_descriptor_test",
            "tests.models.symbol.async_mirror_group_role_change_cancel_descriptor_test",
            "tests.models.symbol.async_mirror_group_role_change_descriptor_test",
            "tests.models.symbol.async_mirror_group_suspend_descriptor_test",
            "tests.models.symbol.async_mirror_group_sync_progress_list_returned_test",
            "tests.models.symbol.async_mirror_group_sync_progress_list_test",
            "tests.models.symbol.async_mirror_group_sync_progress_test",
            "tests.models.symbol.async_mirror_group_synchronize_descriptor_test",
            "tests.models.symbol.async_mirror_group_test",
            "tests.models.symbol.async_mirror_primary_sync_statistics_sample_test",
            "tests.models.symbol.async_mirror_repository_utilization_list_returned_test",
            "tests.models.symbol.async_mirror_repository_utilization_list_test",
            "tests.models.symbol.async_mirror_repository_utilization_test",
            "tests.models.symbol.async_mirror_sync_completion_detail_test",
            "tests.models.symbol.async_mirror_sync_statistics_list_returned_test",
            "tests.models.symbol.async_mirror_sync_statistics_list_test",
            "tests.models.symbol.async_mirror_sync_statistics_request_descriptor_test",
            "tests.models.symbol.async_mirror_sync_statistics_reset_descriptor_test",
            "tests.models.symbol.async_mirror_sync_statistics_sample_test",
            "tests.models.symbol.async_mirror_sync_statistics_test",
            "tests.models.symbol.auth_method_type_data_test",
            "tests.models.symbol.authentication_bundle_test",
            "tests.models.symbol.auto_config_candidate_list_test",
            "tests.models.symbol.auto_config_candidate_test",
            "tests.models.symbol.auto_config_summary_test",
            "tests.models.symbol.auto_config_template_list_test",
            "tests.models.symbol.auto_config_template_test",
            "tests.models.symbol.auto_load_balance_request_descriptor_test",
            "tests.models.symbol.auto_load_balance_stats_log_retrieve_chunk_details_test",
            "tests.models.symbol.auto_load_balance_stats_log_retrieve_start_details_test",
            "tests.models.symbol.auto_load_balancing_control_descriptor_test",
            "tests.models.symbol.battery_pack_icc_failure_test",
            "tests.models.symbol.battery_params_update_descriptor_test",
            "tests.models.symbol.battery_test",
            "tests.models.symbol.battery_type_data_test",
            "tests.models.symbol.bundle_key_test",
            "tests.models.symbol.bundled_feature_test",
            "tests.models.symbol.cache_backup_device_location_test",
            "tests.models.symbol.cache_backup_device_test",
            "tests.models.symbol.cache_backup_device_vpd_test",
            "tests.models.symbol.cache_memory_dimm_location_test",
            "tests.models.symbol.cache_memory_dimm_test",
            "tests.models.symbol.candidate_selection_type_data_test",
            "tests.models.symbol.change_query_descriptor_test",
            "tests.models.symbol.change_state_test",
            "tests.models.symbol.channel_degraded_failure_test",
            "tests.models.symbol.channel_diag_data_pattern_type_data_test",
            "tests.models.symbol.channel_diag_device_test",
            "tests.models.symbol.channel_diag_fc_dependent_results_test",
            "tests.models.symbol.channel_diag_interface_dep_results_test",
            "tests.models.symbol.channel_diag_results_returned_test",
            "tests.models.symbol.channel_diag_results_test",
            "tests.models.symbol.channel_diag_sas_dependent_results_test",
            "tests.models.symbol.channel_diag_type_params_test",
            "tests.models.symbol.channel_diag_wr_rd_vfy_params_test",
            "tests.models.symbol.channel_diag_wr_rd_vfy_results_test",
            "tests.models.symbol.channel_diagnostic_descriptor_test",
            "tests.models.symbol.channel_failed_failure_test",
            "tests.models.symbol.channel_location_test",
            "tests.models.symbol.channel_port_pair_test",
            "tests.models.symbol.channel_port_parent_test",
            "tests.models.symbol.channel_port_test",
            "tests.models.symbol.channel_ports_test",
            "tests.models.symbol.chassis_idtlv_test",
            "tests.models.symbol.checked_pending_host_list_returned_test",
            "tests.models.symbol.checked_pending_host_list_test",
            "tests.models.symbol.checked_pending_host_test",
            "tests.models.symbol.cluster_performance_limitation_values_descriptor_test",
            "tests.models.symbol.cluster_performance_limitation_values_returned_test",
            "tests.models.symbol.cluster_performance_limitation_values_test",
            "tests.models.symbol.cluster_test",
            "tests.models.symbol.co_w_repository_analysis_request_test",
            "tests.models.symbol.co_w_repository_analysis_results_returned_test",
            "tests.models.symbol.co_w_repository_analysis_results_test",
            "tests.models.symbol.compatible_firmware_test",
            "tests.models.symbol.component_bundle_test",
            "tests.models.symbol.component_location_test",
            "tests.models.symbol.component_relative_location_test",
            "tests.models.symbol.component_removal_data_test",
            "tests.models.symbol.concat_volume_candidate_test",
            "tests.models.symbol.concat_volume_creation_descriptor_test",
            "tests.models.symbol.concat_volume_default_attributes_test",
            "tests.models.symbol.concat_volume_direct_expansion_descriptor_test",
            "tests.models.symbol.concat_volume_existing_volume_candidate_test",
            "tests.models.symbol.concat_volume_expansion_descriptor_test",
            "tests.models.symbol.concat_volume_member_test",
            "tests.models.symbol.concat_volume_new_volume_candidate_test",
            "tests.models.symbol.concat_volume_test",
            "tests.models.symbol.concat_volume_trim_descriptor_test",
            "tests.models.symbol.consistency_group_bundle_test",
            "tests.models.symbol.consistency_group_test",
            "tests.models.symbol.controller_counter_group_test",
            "tests.models.symbol.controller_descriptor_test",
            "tests.models.symbol.controller_dns_properties_test",
            "tests.models.symbol.controller_gbic_test",
            "tests.models.symbol.controller_host_io_interfaces_returned_test",
            "tests.models.symbol.controller_miswire_error_test",
            "tests.models.symbol.controller_network_settings_test",
            "tests.models.symbol.controller_ntp_error_details_test",
            "tests.models.symbol.controller_ntp_properties_test",
            "tests.models.symbol.controller_sfp_location_test",
            "tests.models.symbol.controller_sfp_test",
            "tests.models.symbol.controller_test",
            "tests.models.symbol.controller_time_test",
            "tests.models.symbol.controller_volume_list_test",
            "tests.models.symbol.controller_with_dirty_cache_details_test",
            "tests.models.symbol.copy_then_replace_descriptor_test",
            "tests.models.symbol.counter_group_test",
            "tests.models.symbol.cpu_utilization_stats_test",
            "tests.models.symbol.ctrl_ioc_dump_data_test",
            "tests.models.symbol.cumulative_statistics_bundle_list_returned_test",
            "tests.models.symbol.cumulative_statistics_bundle_returned_test",
            "tests.models.symbol.cumulative_statistics_bundle_test",
            "tests.models.symbol.cumulative_statistics_default_attributes_test",
            "tests.models.symbol.cumulative_statistics_descriptor_test",
            "tests.models.symbol.cumulative_statistics_list_descriptor_test",
            "tests.models.symbol.daily_schedule_test",
            "tests.models.symbol.database_metadata_returned_test",
            "tests.models.symbol.database_metadata_test",
            "tests.models.symbol.daylight_savings_time_test",
            "tests.models.symbol.dbm_blk_restore_chunk_details_test",
            "tests.models.symbol.dbm_blk_restore_start_details_test",
            "tests.models.symbol.dbm_blk_retrieve_chunk_details_test",
            "tests.models.symbol.dbm_blk_retrieve_start_details_test",
            "tests.models.symbol.dbm_check_retrieve_chunk_details_test",
            "tests.models.symbol.dbm_check_retrieve_start_details_test",
            "tests.models.symbol.dbm_rec_restore_chunk_details_test",
            "tests.models.symbol.dbm_rec_restore_start_details_test",
            "tests.models.symbol.dbm_rec_retrieve_chunk_details_test",
            "tests.models.symbol.dbm_rec_retrieve_start_details_test",
            "tests.models.symbol.dcbx_summary_data_test",
            "tests.models.symbol.ddc_extent_test",
            "tests.models.symbol.ddc_log_data_returned_test",
            "tests.models.symbol.ddc_log_data_test",
            "tests.models.symbol.debug_info_extent_test",
            "tests.models.symbol.debug_info_returned_test",
            "tests.models.symbol.debug_info_test",
            "tests.models.symbol.degraded_path_test",
            "tests.models.symbol.discovery_response_test",
            "tests.models.symbol.discrete_time_series_bundle_returned_test",
            "tests.models.symbol.discrete_time_series_bundle_test",
            "tests.models.symbol.discrete_time_series_descriptor_test",
            "tests.models.symbol.discrete_time_series_test",
            "tests.models.symbol.disk_pool_creation_descriptor_test",
            "tests.models.symbol.disk_pool_data_test",
            "tests.models.symbol.disk_pool_default_attributes_test",
            "tests.models.symbol.disk_pool_expansion_descriptor_test",
            "tests.models.symbol.disk_pool_max_reserved_drive_count_return_test",
            "tests.models.symbol.disk_pool_priority_update_descriptor_test",
            "tests.models.symbol.disk_pool_reduction_descriptor_test",
            "tests.models.symbol.disk_pool_reduction_drive_count_return_test",
            "tests.models.symbol.disk_pool_reserved_drive_count_update_descriptor_test",
            "tests.models.symbol.disk_pool_threshold_update_descriptor_test",
            "tests.models.symbol.disk_pool_volume_candidate_data_test",
            "tests.models.symbol.disk_pool_volume_candidate_request_data_test",
            "tests.models.symbol.dns_acquisition_descriptor_test",
            "tests.models.symbol.dom0_support_data_chunk_details_test",
            "tests.models.symbol.dom0_support_data_journal_start_details_test",
            "tests.models.symbol.dom0_support_data_start_details_test",
            "tests.models.symbol.dpl_core_dump_data_test",
            "tests.models.symbol.dpl_core_dump_detail_test",
            "tests.models.symbol.dpl_core_dump_fw_location_test",
            "tests.models.symbol.dpl_core_dump_info_return_test",
            "tests.models.symbol.dpl_core_dump_info_test",
            "tests.models.symbol.dpl_core_dump_on_demand_return_test",
            "tests.models.symbol.dpl_core_dump_retrieve_chunk_details_test",
            "tests.models.symbol.dpl_core_dump_retrieve_start_details_test",
            "tests.models.symbol.dq_retrieve_chunk_details_test",
            "tests.models.symbol.dq_retrieve_start_details_test",
            "tests.models.symbol.drawer_test",
            "tests.models.symbol.drive_channel_error_counts_test",
            "tests.models.symbol.drive_channel_list_test",
            "tests.models.symbol.drive_channel_parent_test",
            "tests.models.symbol.drive_channel_port_test",
            "tests.models.symbol.drive_channel_specifier_test",
            "tests.models.symbol.drive_channel_state_descriptor_test",
            "tests.models.symbol.drive_channel_statistics_test",
            "tests.models.symbol.drive_channel_test",
            "tests.models.symbol.drive_counter_group_test",
            "tests.models.symbol.drive_download_drive_status_test",
            "tests.models.symbol.drive_download_set_test",
            "tests.models.symbol.drive_firmware_chunk_descriptor_test",
            "tests.models.symbol.drive_firmware_download_test",
            "tests.models.symbol.drive_firmware_status_test",
            "tests.models.symbol.drive_firmware_update_descriptor_test",
            "tests.models.symbol.drive_health_logs_chunk_details_test",
            "tests.models.symbol.drive_health_logs_start_details_test",
            "tests.models.symbol.drive_layout_test",
            "tests.models.symbol.drive_log_data_test",
            "tests.models.symbol.drive_lost_redundancy_failure_test",
            "tests.models.symbol.drive_performance_history_retrieve_chunk_details_test",
            "tests.models.symbol.drive_performance_history_retrieve_start_details_test",
            "tests.models.symbol.drive_physical_security_id_descriptor_test",
            "tests.models.symbol.drive_physical_security_id_test",
            "tests.models.symbol.drive_ref_list_test",
            "tests.models.symbol.drive_replacement_descriptor_test",
            "tests.models.symbol.drive_temperature_data_test",
            "tests.models.symbol.drive_temperature_returned_test",
            "tests.models.symbol.drive_temperature_test",
            "tests.models.symbol.drive_test",
            "tests.models.symbol.drive_type_data_test",
            "tests.models.symbol.dual_mirror_primary_test",
            "tests.models.symbol.dual_mirror_secondary_test",
            "tests.models.symbol.dve_volume_test",
            "tests.models.symbol.embedded_snmp_agent_default_attributes_test",
            "tests.models.symbol.enclosure_state_capture_retrieve_chunk_details_test",
            "tests.models.symbol.enclosure_state_capture_retrieve_start_details_test",
            "tests.models.symbol.encrypted_password_test",
            "tests.models.symbol.energy_star_data_return_test",
            "tests.models.symbol.energy_star_data_test",
            "tests.models.symbol.enh_eth_features_state_test",
            "tests.models.symbol.enh_eth_tlv_set_test",
            "tests.models.symbol.enh_eth_tlv_test",
            "tests.models.symbol.enhanced_ethernet_statistics_test",
            "tests.models.symbol.enhanced_ib_baselined_statistics_test",
            "tests.models.symbol.enhanced_ib_interface_statistics_test",
            "tests.models.symbol.enhanced_ib_statistical_data_test",
            "tests.models.symbol.enhanced_ib_statistics_returned_test",
            "tests.models.symbol.env_card_log_data_returned_test",
            "tests.models.symbol.env_card_log_data_test",
            "tests.models.symbol.esm_factory_defaults_version_data_test",
            "tests.models.symbol.esm_firmware_update_descriptor_test",
            "tests.models.symbol.esm_interface_attributes_test",
            "tests.models.symbol.esm_interface_type_data_test",
            "tests.models.symbol.esm_lost_redundancy_failure_test",
            "tests.models.symbol.esm_test",
            "tests.models.symbol.ethernet_interface_data_test",
            "tests.models.symbol.ethernet_interface_test",
            "tests.models.symbol.ethernet_params_update_descriptor_test",
            "tests.models.symbol.ethernet_port_statistics_test",
            "tests.models.symbol.event_control_test",
            "tests.models.symbol.excessive_reboots_detected_test",
            "tests.models.symbol.expansion_candidates_returned_test",
            "tests.models.symbol.export_dependencies_returned_test",
            "tests.models.symbol.export_dependency_test",
            "tests.models.symbol.export_dependency_type_data_test",
            "tests.models.symbol.extended_component_location_test",
            "tests.models.symbol.extended_sa_data_test",
            "tests.models.symbol.external_redundancy_failure_test",
            "tests.models.symbol.factory_defaults_descriptor_test",
            "tests.models.symbol.factory_defaults_version_data_test",
            "tests.models.symbol.failure_type_entry_test",
            "tests.models.symbol.failure_type_list_test",
            "tests.models.symbol.fan_test",
            "tests.models.symbol.fdi_dems_log_retrieve_chunk_details_test",
            "tests.models.symbol.fdi_dems_log_retrieve_start_details_test",
            "tests.models.symbol.feature_attribute_test",
            "tests.models.symbol.feature_bundle_test",
            "tests.models.symbol.feature_key_test",
            "tests.models.symbol.feature_params_test",
            "tests.models.symbol.feature_state_test",
            "tests.models.symbol.fibre_channel_target_location_test",
            "tests.models.symbol.fibre_drive_address_test",
            "tests.models.symbol.fibre_esm_address_test",
            "tests.models.symbol.fibre_esm_attributes_test",
            "tests.models.symbol.fibre_interface_test",
            "tests.models.symbol.fibre_port_login_test",
            "tests.models.symbol.fibre_remote_target_connections_test",
            "tests.models.symbol.fibre_trunk_miswire_test",
            "tests.models.symbol.firmware_update_descriptor_test",
            "tests.models.symbol.flash_cache_analytics_creation_descriptor_test",
            "tests.models.symbol.flash_cache_analytics_data_test",
            "tests.models.symbol.flash_cache_analytics_item_test",
            "tests.models.symbol.flash_cache_analytics_returned_test",
            "tests.models.symbol.flash_cache_base_test",
            "tests.models.symbol.flash_cache_bundle_test",
            "tests.models.symbol.flash_cache_creation_descriptor_test",
            "tests.models.symbol.flash_cache_drive_info_test",
            "tests.models.symbol.flash_cache_map_test",
            "tests.models.symbol.flash_cache_params_update_descriptor_test",
            "tests.models.symbol.flash_cache_reconfigure_drives_descriptor_test",
            "tests.models.symbol.flash_cache_recovery_data_test",
            "tests.models.symbol.flash_cache_statistics_returned_test",
            "tests.models.symbol.flash_cache_statistics_test",
            "tests.models.symbol.flash_cache_test",
            "tests.models.symbol.flash_cache_with_drives_test",
            "tests.models.symbol.free_extent_test",
            "tests.models.symbol.fru_diag_descriptor_test",
            "tests.models.symbol.fru_diag_return_data_test",
            "tests.models.symbol.fru_diag_return_test",
            "tests.models.symbol.full_repository_test",
            "tests.models.symbol.function_state_descriptor_test",
            "tests.models.symbol.function_state_returned_test",
            "tests.models.symbol.gbic_parent_type_data_test",
            "tests.models.symbol.gbic_test",
            "tests.models.symbol.get_iscsi_sessions_filter_test",
            "tests.models.symbol.ghost_vol_bundle_test",
            "tests.models.symbol.ghost_volume_test",
            "tests.models.symbol.high_resolution_request_descriptor_test",
            "tests.models.symbol.high_resolution_returned_test",
            "tests.models.symbol.histogram_bundle_returned_test",
            "tests.models.symbol.histogram_bundle_test",
            "tests.models.symbol.histogram_descriptor_test",
            "tests.models.symbol.histogram_summary_test",
            "tests.models.symbol.histogram_test",
            "tests.models.symbol.hl_volume_bundle_test",
            "tests.models.symbol.host_board2_port_ib_type_data_test",
            "tests.models.symbol.host_board_test",
            "tests.models.symbol.host_board_type_data_test",
            "tests.models.symbol.host_changeable_properties_test",
            "tests.models.symbol.host_creation_descriptor_test",
            "tests.models.symbol.host_io_card_location_test",
            "tests.models.symbol.host_port_changeable_properties_test",
            "tests.models.symbol.host_port_create_descriptor_test",
            "tests.models.symbol.host_port_creation_descriptor_test",
            "tests.models.symbol.host_port_location_test",
            "tests.models.symbol.host_port_mutable_properties_test",
            "tests.models.symbol.host_port_properties_update_descriptor_test",
            "tests.models.symbol.host_port_rename_descriptor_test",
            "tests.models.symbol.host_port_test",
            "tests.models.symbol.host_port_type_update_descriptor_test",
            "tests.models.symbol.host_properties_update_descriptor_test",
            "tests.models.symbol.host_redundancy_loss_details_test",
            "tests.models.symbol.host_specific_nvsram_update_descriptor_test",
            "tests.models.symbol.host_specific_values_test",
            "tests.models.symbol.host_test",
            "tests.models.symbol.hot_spare_candidate_list_test",
            "tests.models.symbol.hot_spare_candidate_test",
            "tests.models.symbol.hot_spare_coverage_list_test",
            "tests.models.symbol.hot_spare_coverage_test",
            "tests.models.symbol.ib_baselined_statistics_test",
            "tests.models.symbol.ib_interface_statistics_test",
            "tests.models.symbol.ib_interface_test",
            "tests.models.symbol.ib_ioc_attributes_returned_test",
            "tests.models.symbol.ib_ioc_attributes_test",
            "tests.models.symbol.ib_ioc_profile_test",
            "tests.models.symbol.ib_point_in_time_statistics_test",
            "tests.models.symbol.ib_port_partition_table_test",
            "tests.models.symbol.ib_port_partition_tables_returned_test",
            "tests.models.symbol.ib_rdma_channel_endpoints_test",
            "tests.models.symbol.ib_rdma_channel_statistics_test",
            "tests.models.symbol.ib_rdma_channel_test",
            "tests.models.symbol.ib_rdma_channels_returned_test",
            "tests.models.symbol.ib_service_entry_test",
            "tests.models.symbol.ib_statistical_data_test",
            "tests.models.symbol.ib_statistics_returned_test",
            "tests.models.symbol.ib_tca_statistics_test",
            "tests.models.symbol.implementation_counter_group_test",
            "tests.models.symbol.import_dependencies_returned_test",
            "tests.models.symbol.infiniband_interface_data_test",
            "tests.models.symbol.initialization_operation_test",
            "tests.models.symbol.initiator_changeable_properties_test",
            "tests.models.symbol.initiator_creation_descriptor_test",
            "tests.models.symbol.initiator_location_test",
            "tests.models.symbol.initiator_properties_update_descriptor_test",
            "tests.models.symbol.initiator_target_changeable_properties_test",
            "tests.models.symbol.initiator_target_initial_properties_test",
            "tests.models.symbol.initiator_target_properties_update_descriptor_test",
            "tests.models.symbol.initiator_test",
            "tests.models.symbol.instance_returned_test",
            "tests.models.symbol.interconnect_cru_test",
            "tests.models.symbol.interface_counter_group_test",
            "tests.models.symbol.interface_update_descriptor_test",
            "tests.models.symbol.internet_protocol_v4_data_test",
            "tests.models.symbol.internet_protocol_v6_data_test",
            "tests.models.symbol.interposer_data_test",
            "tests.models.symbol.interposer_test",
            "tests.models.symbol.interposer_type_data_test",
            "tests.models.symbol.inventory_item_test",
            "tests.models.symbol.io_counter_group_test",
            "tests.models.symbol.io_interface_hic_map_test",
            "tests.models.symbol.io_interface_test",
            "tests.models.symbol.io_interface_type_data_list_test",
            "tests.models.symbol.io_interface_type_data_test",
            "tests.models.symbol.io_statistics_retrieve_chunk_details_test",
            "tests.models.symbol.io_statistics_retrieve_start_details_test",
            "tests.models.symbol.ioc_dump_data_test",
            "tests.models.symbol.ioc_dump_info_return_test",
            "tests.models.symbol.ioc_dump_info_test",
            "tests.models.symbol.ioc_dump_on_demand_return_test",
            "tests.models.symbol.ioc_dump_retrieve_chunk_details_test",
            "tests.models.symbol.ioc_dump_retrieve_start_details_test",
            "tests.models.symbol.ip_endpoint_statistics_test",
            "tests.models.symbol.ip_v4_address_data_test",
            "tests.models.symbol.ip_v6_address_data_bundle_test",
            "tests.models.symbol.ip_v6_address_data_test",
            "tests.models.symbol.ip_v6_address_state_test",
            "tests.models.symbol.ip_vx_address_test",
            "tests.models.symbol.iscsi_cable_diag_channel_results_test",
            "tests.models.symbol.iscsi_cable_diag_results_test",
            "tests.models.symbol.iscsi_cable_diagnostics_descriptor_test",
            "tests.models.symbol.iscsi_cable_diagnostics_return_test",
            "tests.models.symbol.iscsi_connection_endpoints_test",
            "tests.models.symbol.iscsi_connection_test",
            "tests.models.symbol.iscsi_entity_changeable_properties_test",
            "tests.models.symbol.iscsi_entity_data_test",
            "tests.models.symbol.iscsi_entity_properties_update_descriptor_test",
            "tests.models.symbol.iscsi_initiator_port_id_test",
            "tests.models.symbol.iscsi_initiator_statistics_test",
            "tests.models.symbol.iscsi_initiator_target_base_parameters_test",
            "tests.models.symbol.iscsi_interface_changeable_properties_test",
            "tests.models.symbol.iscsi_interface_properties_update_descriptor_test",
            "tests.models.symbol.iscsi_interface_statistics_test",
            "tests.models.symbol.iscsi_interface_test",
            "tests.models.symbol.iscsi_negotiable_connection_settings_test",
            "tests.models.symbol.iscsi_negotiable_session_settings_test",
            "tests.models.symbol.iscsi_negotiation_defaults_returned_test",
            "tests.models.symbol.iscsi_negotiation_defaults_test",
            "tests.models.symbol.iscsi_remote_target_connections_test",
            "tests.models.symbol.iscsi_session_endpoints_test",
            "tests.models.symbol.iscsi_session_test",
            "tests.models.symbol.iscsi_sessions_returned_test",
            "tests.models.symbol.iscsi_statistical_data_test",
            "tests.models.symbol.iscsi_statistics_returned_test",
            "tests.models.symbol.iscsi_target_port_id_test",
            "tests.models.symbol.iscsi_target_statistics_test",
            "tests.models.symbol.isns_server_location_test",
            "tests.models.symbol.it_nexus_test",
            "tests.models.symbol.key_id_info_test",
            "tests.models.symbol.key_value_tag_creation_descriptor_list_test",
            "tests.models.symbol.key_value_tag_creation_descriptor_test",
            "tests.models.symbol.key_value_tag_mapping_deletion_descriptor_list_test",
            "tests.models.symbol.key_value_tag_mapping_deletion_descriptor_test",
            "tests.models.symbol.key_value_tag_mapping_set_descriptor_list_test",
            "tests.models.symbol.key_value_tag_mapping_set_descriptor_test",
            "tests.models.symbol.key_value_tag_mapping_test",
            "tests.models.symbol.key_value_tag_object_reference_test",
            "tests.models.symbol.key_value_tag_ref_list_test",
            "tests.models.symbol.key_value_tag_test",
            "tests.models.symbol.link_speed_detection_error_test",
            "tests.models.symbol.location_test",
            "tests.models.symbol.lock_down_info_returned_test",
            "tests.models.symbol.lock_down_info_test",
            "tests.models.symbol.lock_key_blob_test",
            "tests.models.symbol.lock_key_id_test",
            "tests.models.symbol.lockdown_ctrl_fw_version_test",
            "tests.models.symbol.long_lived_operation_test",
            "tests.models.symbol.long_lived_ops_progress_return_test",
            "tests.models.symbol.lun_mapping_creation_descriptor_test",
            "tests.models.symbol.lun_mapping_test",
            "tests.models.symbol.lun_mapping_update_descriptor_test",
            "tests.models.symbol.lun_mappings_test",
            "tests.models.symbol.matched_pending_host_test",
            "tests.models.symbol.mel_entry_list_test",
            "tests.models.symbol.mel_entry_test",
            "tests.models.symbol.mel_extent_test",
            "tests.models.symbol.metadata_offline_test",
            "tests.models.symbol.metadata_vol_creation_descriptor_test",
            "tests.models.symbol.metadata_volume_test",
            "tests.models.symbol.mgmt_client_record_delete_descriptor_test",
            "tests.models.symbol.mgmt_client_record_id_test",
            "tests.models.symbol.mgmt_client_record_read_descriptor_test",
            "tests.models.symbol.mgmt_client_record_read_result_test",
            "tests.models.symbol.mgmt_client_record_test",
            "tests.models.symbol.mgmt_client_record_write_descriptor_test",
            "tests.models.symbol.minihub_location_test",
            "tests.models.symbol.minihub_test",
            "tests.models.symbol.minihub_type_data_test",
            "tests.models.symbol.mirror_auto_resync_descriptor_test",
            "tests.models.symbol.mirror_candidate_descriptor_test",
            "tests.models.symbol.mirror_creation_descriptor_test",
            "tests.models.symbol.mirror_proxy_volume_test",
            "tests.models.symbol.mirror_role_change_descriptor_test",
            "tests.models.symbol.mirror_sync_operation_test",
            "tests.models.symbol.mirror_sync_priority_descriptor_test",
            "tests.models.symbol.mirror_unsynchronized_test",
            "tests.models.symbol.mirror_volume_candidate_list_test",
            "tests.models.symbol.mirror_volume_candidate_test",
            "tests.models.symbol.mirror_volume_list_test",
            "tests.models.symbol.mirror_write_mode_descriptor_test",
            "tests.models.symbol.miswired_drive_channel_list_test",
            "tests.models.symbol.net_interface_type_data_test",
            "tests.models.symbol.network_address_test",
            "tests.models.symbol.network_interface_test",
            "tests.models.symbol.new_lock_key_test",
            "tests.models.symbol.not_on_preferred_path_test",
            "tests.models.symbol.ntp_acquisition_descriptor_test",
            "tests.models.symbol.nvsram_region_id_and_host_index_test",
            "tests.models.symbol.nvsram_region_list_test",
            "tests.models.symbol.nvsram_region_test",
            "tests.models.symbol.nvsram_update_descriptor_test",
            "tests.models.symbol.object_bundle_test",
            "tests.models.symbol.object_reference_test",
            "tests.models.symbol.opcode_counter_test",
            "tests.models.symbol.optional_schedule_creation_descriptor_test",
            "tests.models.symbol.optional_target_object_test",
            "tests.models.symbol.p_registrant_list_test",
            "tests.models.symbol.p_registrant_test",
            "tests.models.symbol.p_registration_list_test",
            "tests.models.symbol.p_registration_test",
            "tests.models.symbol.parent_cru_test",
            "tests.models.symbol.parent_relative_location_test",
            "tests.models.symbol.parity_scan_response_test",
            "tests.models.symbol.path_degraded_failure_test",
            "tests.models.symbol.pending_host_test",
            "tests.models.symbol.performance_ring_chunk_details_test",
            "tests.models.symbol.performance_ring_start_details_test",
            "tests.models.symbol.persistent_registration_list_test",
            "tests.models.symbol.persistent_registration_test",
            "tests.models.symbol.physical_drive_type_data_test",
            "tests.models.symbol.physical_interface_type_data_test",
            "tests.models.symbol.pit_consistency_group_add_member_descriptor_list_test",
            "tests.models.symbol.pit_consistency_group_add_member_descriptor_test",
            "tests.models.symbol.pit_consistency_group_creation_descriptor_test",
            "tests.models.symbol.pit_consistency_group_deletion_descriptor_test",
            "tests.models.symbol.pit_consistency_group_params_update_descriptor_test",
            "tests.models.symbol.pit_consistency_group_pit_deletion_descriptor_test",
            "tests.models.symbol.pit_consistency_group_remove_member_descriptor_test",
            "tests.models.symbol.pit_consistency_group_rollback_start_descriptor_test",
            "tests.models.symbol.pit_consistency_group_test",
            "tests.models.symbol.pit_consistency_group_view_creation_descriptor_test",
            "tests.models.symbol.pit_consistency_group_view_deletion_descriptor_test",
            "tests.models.symbol.pit_consistency_group_view_params_update_descriptor_test",
            "tests.models.symbol.pit_consistency_group_view_restart_descriptor_test",
            "tests.models.symbol.pit_consistency_group_view_stop_descriptor_test",
            "tests.models.symbol.pit_consistency_group_view_test",
            "tests.models.symbol.pit_group_creation_descriptor_test",
            "tests.models.symbol.pit_group_deletion_descriptor_test",
            "tests.models.symbol.pit_group_params_update_descriptor_test",
            "tests.models.symbol.pit_group_ref_list_test",
            "tests.models.symbol.pit_group_repository_utilization_list_returned_test",
            "tests.models.symbol.pit_group_repository_utilization_list_test",
            "tests.models.symbol.pit_group_repository_utilization_test",
            "tests.models.symbol.pit_group_rollback_utilization_estimate_returned_test",
            "tests.models.symbol.pit_group_rollback_utilization_estimate_test",
            "tests.models.symbol.pit_group_test",
            "tests.models.symbol.pit_groups_default_attributes_test",
            "tests.models.symbol.pit_ref_list_test",
            "tests.models.symbol.pit_repository_utilization_test",
            "tests.models.symbol.pit_rollback_operation_test",
            "tests.models.symbol.pit_test",
            "tests.models.symbol.pit_view_creation_descriptor_test",
            "tests.models.symbol.pit_view_deletion_descriptor_test",
            "tests.models.symbol.pit_view_membership_test",
            "tests.models.symbol.pit_view_params_update_descriptor_test",
            "tests.models.symbol.pit_view_ref_list_test",
            "tests.models.symbol.pit_view_repository_creation_descriptor_test",
            "tests.models.symbol.pit_view_repository_utilization_list_returned_test",
            "tests.models.symbol.pit_view_repository_utilization_list_test",
            "tests.models.symbol.pit_view_repository_utilization_test",
            "tests.models.symbol.pit_view_restart_descriptor_test",
            "tests.models.symbol.pit_view_rw_conversion_descriptor_test",
            "tests.models.symbol.pit_view_test",
            "tests.models.symbol.pkcs5_encryption_data_test",
            "tests.models.symbol.port_idtlv_test",
            "tests.models.symbol.port_list_test",
            "tests.models.symbol.port_test",
            "tests.models.symbol.power_cycle_physical_drive_data_return_test",
            "tests.models.symbol.power_cycle_physical_drive_descriptor_test",
            "tests.models.symbol.power_supply_test",
            "tests.models.symbol.premium_feature_test",
            "tests.models.symbol.processor_memory_dimm_test",
            "tests.models.symbol.product_capability_list_test",
            "tests.models.symbol.protection_information_capabilities_test",
            "tests.models.symbol.psu_firmware_update_descriptor_test",
            "tests.models.symbol.psu_firmware_update_status_test",
            "tests.models.symbol.psu_update_status_test",
            "tests.models.symbol.pvg_recovery_data_test",
            "tests.models.symbol.raw_data_restore_chunk_details_test",
            "tests.models.symbol.raw_data_restore_continue_desc_test",
            "tests.models.symbol.raw_data_restore_result_test",
            "tests.models.symbol.raw_data_restore_start_desc_test",
            "tests.models.symbol.raw_data_restore_start_details_test",
            "tests.models.symbol.raw_data_retrieve_chunk_details_test",
            "tests.models.symbol.raw_data_retrieve_continue_desc_test",
            "tests.models.symbol.raw_data_retrieve_info_test",
            "tests.models.symbol.raw_data_retrieve_result_test",
            "tests.models.symbol.raw_data_retrieve_start_desc_test",
            "tests.models.symbol.raw_data_retrieve_start_details_test",
            "tests.models.symbol.raw_data_retrieve_start_result_test",
            "tests.models.symbol.raw_data_transfer_cancel_desc_test",
            "tests.models.symbol.recover_volume_descriptor_test",
            "tests.models.symbol.recurrence_test",
            "tests.models.symbol.registered_ports_test",
            "tests.models.symbol.registrant_list_test",
            "tests.models.symbol.registrant_test",
            "tests.models.symbol.remote_array_authenticator_test",
            "tests.models.symbol.remote_array_test",
            "tests.models.symbol.remote_communication_check_descriptor_test",
            "tests.models.symbol.remote_communication_check_sample_list_test",
            "tests.models.symbol.remote_mirror_authenticator_test",
            "tests.models.symbol.remote_target_creation_descriptor_test",
            "tests.models.symbol.remote_target_test",
            "tests.models.symbol.remote_vol_no_array_test",
            "tests.models.symbol.remote_vol_no_fabric_test",
            "tests.models.symbol.remote_vol_no_lun_test",
            "tests.models.symbol.remote_vol_wwn_change_failed_test",
            "tests.models.symbol.remote_volume_test",
            "tests.models.symbol.repair_policy_test",
            "tests.models.symbol.repository_utilization_list_test",
            "tests.models.symbol.repository_utilization_test",
            "tests.models.symbol.reserve_support_data_returned_test",
            "tests.models.symbol.return_code_with_opaque_data_test",
            "tests.models.symbol.return_code_with_ref_list_test",
            "tests.models.symbol.return_code_with_ref_test",
            "tests.models.symbol.rlogin_update_descriptor_test",
            "tests.models.symbol.rls_command_descriptor_test",
            "tests.models.symbol.rls_count_test",
            "tests.models.symbol.rls_data_test",
            "tests.models.symbol.rls_device_test",
            "tests.models.symbol.rls_devices_test",
            "tests.models.symbol.rls_results_test",
            "tests.models.symbol.rtr_attribute_data_test",
            "tests.models.symbol.rtr_attributes_test",
            "tests.models.symbol.rtr_object_test",
            "tests.models.symbol.rtr_type_ref_test",
            "tests.models.symbol.rtr_update_description_test",
            "tests.models.symbol.rtr_update_descriptor_test",
            "tests.models.symbol.runtime_diag_descriptor_test",
            "tests.models.symbol.runtime_diag_results_test",
            "tests.models.symbol.runtime_diag_test_results_test",
            "tests.models.symbol.sa_cache_params_update_descriptor_test",
            "tests.models.symbol.sa_cache_test",
            "tests.models.symbol.sa_data_test",
            "tests.models.symbol.sa_identifier_test",
            "tests.models.symbol.sa_port_get_descriptor_test",
            "tests.models.symbol.sa_port_group_test",
            "tests.models.symbol.sa_port_test",
            "tests.models.symbol.sa_view_password_digest_returned_test",
            "tests.models.symbol.sa_view_password_digest_test",
            "tests.models.symbol.sas_attached_device_test",
            "tests.models.symbol.sas_attached_device_type_data_test",
            "tests.models.symbol.sas_data_test",
            "tests.models.symbol.sas_drive_address_test",
            "tests.models.symbol.sas_drive_port_address_test",
            "tests.models.symbol.sas_esm_attributes_test",
            "tests.models.symbol.sas_expander_parent_test",
            "tests.models.symbol.sas_expander_test",
            "tests.models.symbol.sas_interface_test",
            "tests.models.symbol.sas_phy_data_test",
            "tests.models.symbol.sas_phy_error_counts_test",
            "tests.models.symbol.sas_phy_test",
            "tests.models.symbol.sas_port_data_test",
            "tests.models.symbol.sas_port_provider_device_test",
            "tests.models.symbol.sas_port_test",
            "tests.models.symbol.sas_port_type_data_test",
            "tests.models.symbol.sas_statistics_returned_test",
            "tests.models.symbol.sas_statistics_test",
            "tests.models.symbol.sata_drive_attributes_test",
            "tests.models.symbol.sata_interface_test",
            "tests.models.symbol.schedule_calendar_test",
            "tests.models.symbol.schedule_creation_descriptor_list_test",
            "tests.models.symbol.schedule_creation_descriptor_test",
            "tests.models.symbol.schedule_daily_test",
            "tests.models.symbol.schedule_instance_test",
            "tests.models.symbol.schedule_monthly_by_date_test",
            "tests.models.symbol.schedule_monthly_by_day_test",
            "tests.models.symbol.schedule_ref_list_test",
            "tests.models.symbol.schedule_test",
            "tests.models.symbol.schedule_update_descriptor_list_test",
            "tests.models.symbol.schedule_update_descriptor_test",
            "tests.models.symbol.schedule_weekly_test",
            "tests.models.symbol.scsi_alias_test",
            "tests.models.symbol.scsi_drive_address_test",
            "tests.models.symbol.scsi_initiator_port_id_test",
            "tests.models.symbol.scsi_initiator_target_base_properties_test",
            "tests.models.symbol.scsi_interface_test",
            "tests.models.symbol.scsi_node_name_test",
            "tests.models.symbol.scsi_protocol_endpoint_test",
            "tests.models.symbol.scsi_remote_connection_test",
            "tests.models.symbol.scsi_remote_connections_returned_test",
            "tests.models.symbol.scsi_remote_target_connections_test",
            "tests.models.symbol.scsi_target_port_id_test",
            "tests.models.symbol.scsi_to_ata_translator_data_test",
            "tests.models.symbol.security_key_needed_test",
            "tests.models.symbol.setting_control_test",
            "tests.models.symbol.sfp_parent_type_data_test",
            "tests.models.symbol.sfp_test",
            "tests.models.symbol.sfp_type_test",
            "tests.models.symbol.smart_battery_data_test",
            "tests.models.symbol.snapshot_conversion_descriptor_test",
            "tests.models.symbol.snapshot_conversion_label_test",
            "tests.models.symbol.snapshot_creation_descriptor_test",
            "tests.models.symbol.snapshot_failure_test",
            "tests.models.symbol.snapshot_params_update_descriptor_test",
            "tests.models.symbol.snapshot_ref_list_test",
            "tests.models.symbol.snapshot_rollback_operation_test",
            "tests.models.symbol.snapshot_volume_test",
            "tests.models.symbol.snmp_agent_bundle_test",
            "tests.models.symbol.snmp_community_add_descriptor_list_test",
            "tests.models.symbol.snmp_community_add_descriptor_test",
            "tests.models.symbol.snmp_community_params_update_descriptor_list_test",
            "tests.models.symbol.snmp_community_params_update_descriptor_test",
            "tests.models.symbol.snmp_community_ref_list_test",
            "tests.models.symbol.snmp_community_test",
            "tests.models.symbol.snmp_system_variable_value_test",
            "tests.models.symbol.snmp_system_variables_test",
            "tests.models.symbol.snmp_system_variables_update_descriptor_test",
            "tests.models.symbol.snmp_trap_destination_add_descriptor_list_test",
            "tests.models.symbol.snmp_trap_destination_add_descriptor_test",
            "tests.models.symbol.snmp_trap_destination_params_update_descriptor_list_test",
            "tests.models.symbol.snmp_trap_destination_params_update_descriptor_test",
            "tests.models.symbol.snmp_trap_destination_ref_list_test",
            "tests.models.symbol.snmp_trap_destination_test",
            "tests.models.symbol.snmp_trap_destination_test_descriptor_list_test",
            "tests.models.symbol.snmp_trap_destination_test_descriptor_test",
            "tests.models.symbol.soc_command_descriptor_test",
            "tests.models.symbol.soc_connected_device_test",
            "tests.models.symbol.soc_connected_device_type_data_test",
            "tests.models.symbol.soc_data_test",
            "tests.models.symbol.soc_device_data_test",
            "tests.models.symbol.soc_location_test",
            "tests.models.symbol.soc_parent_test",
            "tests.models.symbol.soc_port_data_test",
            "tests.models.symbol.soc_port_diagnostic_data_test",
            "tests.models.symbol.soc_statistics_returned_test",
            "tests.models.symbol.soc_statistics_test",
            "tests.models.symbol.specific_database_metadata_test",
            "tests.models.symbol.speed_neg_error_test",
            "tests.models.symbol.ssd_wear_life_test",
            "tests.models.symbol.staged_firmware_test",
            "tests.models.symbol.stat_stream_id_returned_test",
            "tests.models.symbol.statistical_container_test",
            "tests.models.symbol.statistical_time_data_test",
            "tests.models.symbol.storage_array_changeable_properties_test",
            "tests.models.symbol.storage_array_properties_update_descriptor_test",
            "tests.models.symbol.storage_array_test",
            "tests.models.symbol.storage_pool_bundle_test",
            "tests.models.symbol.support_cru_test",
            "tests.models.symbol.sy_mbol_ref_pair_test",
            "tests.models.symbol.sy_mbol_ref_with_ual_test",
            "tests.models.symbol.syslog_configuration_test",
            "tests.models.symbol.system_attribute_defaults_returned_test",
            "tests.models.symbol.system_attribute_defaults_test",
            "tests.models.symbol.target_changeable_properties_test",
            "tests.models.symbol.target_location_test",
            "tests.models.symbol.target_portal_test",
            "tests.models.symbol.target_properties_update_descriptor_test",
            "tests.models.symbol.target_test",
            "tests.models.symbol.tcp_protocol_endpoint_test",
            "tests.models.symbol.tcp_statistical_data_test",
            "tests.models.symbol.thermal_sensor_data_test",
            "tests.models.symbol.thermal_sensor_test",
            "tests.models.symbol.thin_volume_capacity_provisioning_details_test",
            "tests.models.symbol.thin_volume_capacity_quota_update_descriptor_test",
            "tests.models.symbol.thin_volume_consumed_capacity_returned_test",
            "tests.models.symbol.thin_volume_consumed_capacity_test",
            "tests.models.symbol.thin_volume_creation_descriptor_test",
            "tests.models.symbol.thin_volume_default_attributes_test",
            "tests.models.symbol.thin_volume_expansion_descriptor_test",
            "tests.models.symbol.thin_volume_expansion_policy_update_descriptor_test",
            "tests.models.symbol.thin_volume_ref_list_test",
            "tests.models.symbol.thin_volume_reinitialize_descriptor_test",
            "tests.models.symbol.thin_volume_reinitialize_params_test",
            "tests.models.symbol.thin_volume_reporting_policy_update_descriptor_test",
            "tests.models.symbol.thin_volume_repository_expansion_history_data_test",
            "tests.models.symbol.thin_volume_repository_expansion_history_list_returned_test",
            "tests.models.symbol.thin_volume_test",
            "tests.models.symbol.thin_volume_threshold_update_descriptor_test",
            "tests.models.symbol.time_to_live_tlv_test",
            "tests.models.symbol.time_zone_description_test",
            "tests.models.symbol.tray_attribute_test",
            "tests.models.symbol.tray_attribute_update_descriptor_test",
            "tests.models.symbol.tray_lost_redundancy_failure_test",
            "tests.models.symbol.tray_position_list_test",
            "tests.models.symbol.tray_position_test",
            "tests.models.symbol.tray_power_test",
            "tests.models.symbol.tray_ref_list_test",
            "tests.models.symbol.tray_slot_test",
            "tests.models.symbol.tray_temperature_returned_test",
            "tests.models.symbol.tray_test",
            "tests.models.symbol.tray_update_descriptor_test",
            "tests.models.symbol.typed_sy_mbol_reference_test",
            "tests.models.symbol.unconfigured_initiators_returned_test",
            "tests.models.symbol.unmatched_pending_host_test",
            "tests.models.symbol.unreadable_sector_table_entry_test",
            "tests.models.symbol.unreadable_sector_table_info_test",
            "tests.models.symbol.unreadable_sectors_test",
            "tests.models.symbol.ups_test",
            "tests.models.symbol.usm_error_test",
            "tests.models.symbol.vendor_part_data_test",
            "tests.models.symbol.version_descriptor_test",
            "tests.models.symbol.volume_action_progress_test",
            "tests.models.symbol.volume_attribute_update_descriptor_test",
            "tests.models.symbol.volume_cache_params_update_descriptor_test",
            "tests.models.symbol.volume_cache_test",
            "tests.models.symbol.volume_candidate_list_test",
            "tests.models.symbol.volume_candidate_request_test",
            "tests.models.symbol.volume_candidate_request_type_data_test",
            "tests.models.symbol.volume_candidate_test",
            "tests.models.symbol.volume_candidate_type_data_test",
            "tests.models.symbol.volume_changeable_properties_test",
            "tests.models.symbol.volume_copy_candidate_list_test",
            "tests.models.symbol.volume_copy_candidate_test",
            "tests.models.symbol.volume_copy_creation_descriptor_test",
            "tests.models.symbol.volume_copy_operation_test",
            "tests.models.symbol.volume_copy_params_update_descriptor_test",
            "tests.models.symbol.volume_copy_test",
            "tests.models.symbol.volume_counter_group_test",
            "tests.models.symbol.volume_creation_descriptor_test",
            "tests.models.symbol.volume_deletion_descriptor_test",
            "tests.models.symbol.volume_expansion_descriptor_test",
            "tests.models.symbol.volume_flash_cache_descriptor_test",
            "tests.models.symbol.volume_group_creation_descriptor_test",
            "tests.models.symbol.volume_group_expansion_candidate_test",
            "tests.models.symbol.volume_group_expansion_descriptor_test",
            "tests.models.symbol.volume_group_label_update_descriptor_test",
            "tests.models.symbol.volume_group_operation_test",
            "tests.models.symbol.volume_group_ownership_update_descriptor_test",
            "tests.models.symbol.volume_group_ref_list_test",
            "tests.models.symbol.volume_group_summary_test",
            "tests.models.symbol.volume_group_test",
            "tests.models.symbol.volume_group_type_data_test",
            "tests.models.symbol.volume_label_update_descriptor_test",
            "tests.models.symbol.volume_list_returned_test",
            "tests.models.symbol.volume_media_scan_params_test",
            "tests.models.symbol.volume_media_scan_params_update_descriptor_test",
            "tests.models.symbol.volume_operation_test",
            "tests.models.symbol.volume_ownership_fail_back_request_descriptor_test",
            "tests.models.symbol.volume_ownership_update_descriptor_test",
            "tests.models.symbol.volume_params_update_descriptor_test",
            "tests.models.symbol.volume_performance_list_test",
            "tests.models.symbol.volume_performance_test",
            "tests.models.symbol.volume_perms_test",
            "tests.models.symbol.volume_properties_update_descriptor_test",
            "tests.models.symbol.volume_raid_migration_descriptor_test",
            "tests.models.symbol.volume_response_test",
            "tests.models.symbol.volume_scan_descriptor_test",
            "tests.models.symbol.volume_segment_sizing_descriptor_test",
            "tests.models.symbol.volume_test",
            "tests.models.symbol.volume_type_parameters_test",
            "tests.models.symbol.volume_usage_hint_test",
            "tests.models.symbol.wlc_analytics_chunk_details_test",
            "tests.models.symbol.wlc_analytics_start_details_test",
            "tests.models.symbol.workload_creation_descriptor_list_test",
            "tests.models.symbol.workload_creation_descriptor_test",
            "tests.models.symbol.workload_ref_list_test",
            "tests.models.symbol.workload_test",
            "tests.models.symbol.workload_volume_create_mapping_descriptor_list_test",
            "tests.models.symbol.workload_volume_create_mapping_descriptor_test",
            "tests.models.symbol.workload_volume_delete_mapping_descriptor_list_test",
            "tests.models.symbol.workload_volume_delete_mapping_descriptor_test",
            "tests.models.symbol.workload_volume_mapping_test",
            "tests.models.symbol.wrapped_lock_key_list_test",
            "tests.models.symbol.wrapped_lock_key_return_test",
            "tests.models.symbol.wrapped_lock_key_test",
            "tests.models.utils",
            "tests.models.utils.about_response_test",
            "tests.models.utils.build_info_component_test",
            "tests.models.utils.build_info_response_test",
            "tests.models.utils.login_request_test",
            "tests.models.utils.login_response_test",
            "tests.models.v2",
            "tests.models.v2.access_volume_ex_test",
            "tests.models.v2.add_batch_cg_members_request_test",
            "tests.models.v2.add_consistency_group_member_request_test",
            "tests.models.v2.add_storage_system_return_test",
            "tests.models.v2.alert_syslog_configuration_test",
            "tests.models.v2.alert_syslog_response_test",
            "tests.models.v2.alert_syslog_server_test",
            "tests.models.v2.amg_incomplete_member_test",
            "tests.models.v2.amg_member_test",
            "tests.models.v2.amg_test",
            "tests.models.v2.analysed_controller_statistics_test",
            "tests.models.v2.analysed_disk_statistics_test",
            "tests.models.v2.analysed_storage_system_statistics_test",
            "tests.models.v2.analysed_volume_statistics_test",
            "tests.models.v2.analyzed_application_statistics_test",
            "tests.models.v2.analyzed_interface_statistics_test",
            "tests.models.v2.analyzed_pool_statistics_test",
            "tests.models.v2.analyzed_workload_statistics_test",
            "tests.models.v2.application_statistics_test",
            "tests.models.v2.asup_dispatch_request_test",
            "tests.models.v2.asup_entry_test",
            "tests.models.v2.asup_registration_request_test",
            "tests.models.v2.asup_response_test",
            "tests.models.v2.asup_update_request_test",
            "tests.models.v2.async_communication_data_test",
            "tests.models.v2.async_mirror_connections_response_test",
            "tests.models.v2.async_mirror_group_connectivity_test_request_test",
            "tests.models.v2.async_mirror_group_create_request_test",
            "tests.models.v2.async_mirror_group_member_completion_request_test",
            "tests.models.v2.async_mirror_group_member_create_request_test",
            "tests.models.v2.async_mirror_group_role_update_request_test",
            "tests.models.v2.async_mirror_group_sync_request_test",
            "tests.models.v2.async_mirror_group_update_request_test",
            "tests.models.v2.async_mirror_remote_connection_test",
            "tests.models.v2.average_analysed_application_stats_test",
            "tests.models.v2.average_analysed_controller_stats_test",
            "tests.models.v2.average_analysed_drive_stats_test",
            "tests.models.v2.average_analysed_interface_stats_test",
            "tests.models.v2.average_analysed_pool_stats_test",
            "tests.models.v2.average_analysed_stats_response_test",
            "tests.models.v2.average_analysed_system_controller_stats_test",
            "tests.models.v2.average_analysed_system_stats_test",
            "tests.models.v2.average_analysed_value_test",
            "tests.models.v2.average_analysed_volume_stats_test",
            "tests.models.v2.average_analysed_workload_stats_test",
            "tests.models.v2.battery_ex_test",
            "tests.models.v2.call_response_test",
            "tests.models.v2.capabilities_response_test",
            "tests.models.v2.cfw_activation_request_test",
            "tests.models.v2.cfw_package_metadata_test",
            "tests.models.v2.cfw_upgrade_request_test",
            "tests.models.v2.cfw_upgrade_response_test",
            "tests.models.v2.cg_snapshot_view_request_test",
            "tests.models.v2.concat_repository_volume_test",
            "tests.models.v2.concat_volume_candidate_request_test",
            "tests.models.v2.concat_volume_expansion_request_test",
            "tests.models.v2.configuration_db_validation_check_test",
            "tests.models.v2.configuration_result_item_test",
            "tests.models.v2.configuration_result_test",
            "tests.models.v2.consistency_group_create_request_test",
            "tests.models.v2.consistency_group_update_request_test",
            "tests.models.v2.controller_stats_test",
            "tests.models.v2.create_cg_snapshot_view_manual_request_test",
            "tests.models.v2.create_consistency_group_snapshot_request_test",
            "tests.models.v2.create_consistency_group_snapshot_view_request_test",
            "tests.models.v2.current_firmware_response_test",
            "tests.models.v2.cv_candidate_multiple_selection_request_test",
            "tests.models.v2.cv_candidate_response_test",
            "tests.models.v2.cv_candidate_selection_request_test",
            "tests.models.v2.device_alert_configuration_test",
            "tests.models.v2.device_alert_test_response_test",
            "tests.models.v2.device_asup_delivery_test",
            "tests.models.v2.device_asup_device_test",
            "tests.models.v2.device_asup_response_test",
            "tests.models.v2.device_asup_schedule_test",
            "tests.models.v2.device_asup_update_request_test",
            "tests.models.v2.device_asup_verify_request_test",
            "tests.models.v2.device_asup_verify_response_test",
            "tests.models.v2.device_data_response_test",
            "tests.models.v2.diagnostic_data_request_test",
            "tests.models.v2.discover_response_test",
            "tests.models.v2.discovered_storage_system_test",
            "tests.models.v2.discovery_start_request_test",
            "tests.models.v2.disk_io_stats_test",
            "tests.models.v2.disk_pool_priority_update_request_test",
            "tests.models.v2.disk_pool_reduction_request_test",
            "tests.models.v2.disk_pool_threshold_update_request_test",
            "tests.models.v2.drive_ex_test",
            "tests.models.v2.drive_firmware_compatability_entry_test",
            "tests.models.v2.drive_firmware_compatibility_response_test",
            "tests.models.v2.drive_firmware_compatiblity_set_test",
            "tests.models.v2.drive_firmware_update_entry_test",
            "tests.models.v2.drive_selection_request_test",
            "tests.models.v2.embedded_compatibility_check_response_test",
            "tests.models.v2.embedded_firmware_response_test",
            "tests.models.v2.enumeration_string_test",
            "tests.models.v2.esm_fibre_port_connection_test",
            "tests.models.v2.esm_port_connection_response_test",
            "tests.models.v2.esm_sas_port_connection_test",
            "tests.models.v2.event_object_identifier_test",
            "tests.models.v2.event_test",
            "tests.models.v2.exclusive_operation_check_test",
            "tests.models.v2.failure_data_test",
            "tests.models.v2.fibre_interface_port_test",
            "tests.models.v2.file_based_configuration_request_test",
            "tests.models.v2.file_config_item_test",
            "tests.models.v2.file_info_test",
            "tests.models.v2.firmware_compatibility_request_test",
            "tests.models.v2.firmware_compatibility_response_test",
            "tests.models.v2.firmware_compatibility_set_test",
            "tests.models.v2.firmware_upgrade_health_check_result_test",
            "tests.models.v2.flash_cache_create_request_test",
            "tests.models.v2.flash_cache_ex_test",
            "tests.models.v2.flash_cache_update_request_test",
            "tests.models.v2.folder_create_request_test",
            "tests.models.v2.folder_event_test",
            "tests.models.v2.folder_test",
            "tests.models.v2.folder_update_request_test",
            "tests.models.v2.hardware_inventory_response_test",
            "tests.models.v2.health_check_failure_response_test",
            "tests.models.v2.health_check_request_test",
            "tests.models.v2.health_check_response_test",
            "tests.models.v2.historical_stats_response_test",
            "tests.models.v2.host_create_request_test",
            "tests.models.v2.host_ex_test",
            "tests.models.v2.host_group_create_request_test",
            "tests.models.v2.host_group_test",
            "tests.models.v2.host_group_update_request_test",
            "tests.models.v2.host_move_request_test",
            "tests.models.v2.host_port_create_request_test",
            "tests.models.v2.host_port_update_request_test",
            "tests.models.v2.host_side_port_test",
            "tests.models.v2.host_type_test",
            "tests.models.v2.host_type_values_test",
            "tests.models.v2.host_update_request_test",
            "tests.models.v2.i_scsi_interface_port_test",
            "tests.models.v2.ib_interface_port_test",
            "tests.models.v2.identification_request_test",
            "tests.models.v2.initial_async_response_test",
            "tests.models.v2.interface_stats_test",
            "tests.models.v2.iom_service_info_response_test",
            "tests.models.v2.iom_service_update_request_test",
            "tests.models.v2.iscsi_entity_response_test",
            "tests.models.v2.iscsi_entity_update_request_test",
            "tests.models.v2.iscsi_target_response_test",
            "tests.models.v2.iscsi_target_update_request_test",
            "tests.models.v2.job_progress_test",
            "tests.models.v2.key_value_test",
            "tests.models.v2.legacy_snapshot_create_request_test",
            "tests.models.v2.legacy_snapshot_ex_test",
            "tests.models.v2.legacy_snapshot_update_request_test",
            "tests.models.v2.level_test",
            "tests.models.v2.locale_test",
            "tests.models.v2.localized_log_message_test",
            "tests.models.v2.lockdown_status_response_test",
            "tests.models.v2.log_record_test",
            "tests.models.v2.logger_record_response_test",
            "tests.models.v2.management_configuration_request_test",
            "tests.models.v2.management_interface_test",
            "tests.models.v2.mappable_object_test",
            "tests.models.v2.mel_entry_ex_test",
            "tests.models.v2.mel_event_health_check_test",
            "tests.models.v2.metadata_change_event_test",
            "tests.models.v2.nvsram_package_metadata_test",
            "tests.models.v2.object_change_event_test",
            "tests.models.v2.object_graph_change_event_test",
            "tests.models.v2.object_graph_sync_check_test",
            "tests.models.v2.operation_progress_test",
            "tests.models.v2.password_set_request_test",
            "tests.models.v2.password_status_event_test",
            "tests.models.v2.password_status_response_test",
            "tests.models.v2.pit_view_ex_test",
            "tests.models.v2.pitcg_member_test",
            "tests.models.v2.pool_qos_response_test",
            "tests.models.v2.pool_statistics_test",
            "tests.models.v2.progress_test",
            "tests.models.v2.raid_migration_request_test",
            "tests.models.v2.raw_stats_response_test",
            "tests.models.v2.remote_candidate_test",
            "tests.models.v2.remote_communication_data_test",
            "tests.models.v2.remote_mirror_candidate_test",
            "tests.models.v2.remote_mirror_pair_test",
            "tests.models.v2.remote_volume_mirror_create_request_test",
            "tests.models.v2.remote_volume_mirror_update_request_test",
            "tests.models.v2.removable_drive_response_test",
            "tests.models.v2.resource_bundle_test",
            "tests.models.v2.rule_test",
            "tests.models.v2.sas_interface_port_test",
            "tests.models.v2.save_config_spec_test",
            "tests.models.v2.schedule_create_request_test",
            "tests.models.v2.secure_volume_key_request_test",
            "tests.models.v2.secure_volume_key_response_test",
            "tests.models.v2.serializable_test",
            "tests.models.v2.single_number_value_test",
            "tests.models.v2.snapshot_create_request_test",
            "tests.models.v2.snapshot_group_create_request_test",
            "tests.models.v2.snapshot_group_test",
            "tests.models.v2.snapshot_group_update_request_test",
            "tests.models.v2.snapshot_test",
            "tests.models.v2.snapshot_view_create_request_test",
            "tests.models.v2.snapshot_view_update_request_test",
            "tests.models.v2.snapshot_volume_mode_conversion_request_test",
            "tests.models.v2.software_version_test",
            "tests.models.v2.software_versions_test",
            "tests.models.v2.spm_database_health_check_test",
            "tests.models.v2.ssc_volume_create_request_test",
            "tests.models.v2.ssc_volume_update_request_test",
            "tests.models.v2.ssl_cert_configuration_test",
            "tests.models.v2.stack_trace_element_test",
            "tests.models.v2.staged_firmware_response_test",
            "tests.models.v2.storage_device_health_check_test",
            "tests.models.v2.storage_device_status_event_test",
            "tests.models.v2.storage_pool_create_request_test",
            "tests.models.v2.storage_pool_expansion_request_test",
            "tests.models.v2.storage_pool_update_request_test",
            "tests.models.v2.storage_system_config_response_test",
            "tests.models.v2.storage_system_config_update_request_test",
            "tests.models.v2.storage_system_controller_stats_test",
            "tests.models.v2.storage_system_create_request_test",
            "tests.models.v2.storage_system_response_test",
            "tests.models.v2.storage_system_stats_test",
            "tests.models.v2.storage_system_update_request_test",
            "tests.models.v2.subject_alternate_name_test",
            "tests.models.v2.support_artifact_test",
            "tests.models.v2.support_artifacts_test",
            "tests.models.v2.support_data_request_test",
            "tests.models.v2.support_data_response_test",
            "tests.models.v2.tag_event_test",
            "tests.models.v2.thin_volume_cache_settings_test",
            "tests.models.v2.thin_volume_create_request_test",
            "tests.models.v2.thin_volume_ex_test",
            "tests.models.v2.thin_volume_expansion_request_test",
            "tests.models.v2.thin_volume_update_request_test",
            "tests.models.v2.throwable_test",
            "tests.models.v2.trace_buffer_spec_test",
            "tests.models.v2.tray_ex_test",
            "tests.models.v2.unassociated_host_port_test",
            "tests.models.v2.unreadable_sector_entry_result_test",
            "tests.models.v2.unreadable_sector_response_test",
            "tests.models.v2.upgrade_manager_response_test",
            "tests.models.v2.user_volume_test",
            "tests.models.v2.validate_configuration_file_response_item_test",
            "tests.models.v2.validate_confiuration_file_response_test",
            "tests.models.v2.version_content_test",
            "tests.models.v2.volume_action_progress_response_test",
            "tests.models.v2.volume_cache_settings_test",
            "tests.models.v2.volume_copy_create_request_test",
            "tests.models.v2.volume_copy_pair_test",
            "tests.models.v2.volume_copy_progress_test",
            "tests.models.v2.volume_copy_update_request_test",
            "tests.models.v2.volume_create_request_test",
            "tests.models.v2.volume_ex_test",
            "tests.models.v2.volume_expansion_request_test",
            "tests.models.v2.volume_group_ex_test",
            "tests.models.v2.volume_io_stats_test",
            "tests.models.v2.volume_mapping_create_request_test",
            "tests.models.v2.volume_mapping_move_request_test",
            "tests.models.v2.volume_metadata_item_test",
            "tests.models.v2.volume_update_request_test",
            "tests.models.v2.workload_attribute_test",
            "tests.models.v2.workload_copy_request_test",
            "tests.models.v2.workload_create_request_test",
            "tests.models.v2.workload_model_test",
            "tests.models.v2.workload_statistics_test",
            "tests.models.v2.workload_update_request_test",
            "tests.models.v2.x509_cert_info_test"
        ],
        "version": "1.0"
    },
    "netappconfigmaker": {
        "cmdline": [
            "netapp.config.maker.Config.tmpl",
            "netapp.config.maker.RC.tmpl",
            "netapp.config.maker.py",
            "netapp.config.maker.py3"
        ],
        "modules": [],
        "version": "1.5.5"
    },
    "netappzapi": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.5"
    },
    "netatmo": {
        "cmdline": [],
        "modules": [
            "netatmo",
            "netatmo.api",
            "netatmo.api.authentication",
            "netatmo.api.client",
            "netatmo.api.errors",
            "netatmo.api.requests",
            "netatmo.api.responsetypes",
            "netatmo.api.variables",
            "netatmo.utils"
        ],
        "version": "0.2.0"
    },
    "netatmo-client": {
        "cmdline": [],
        "modules": [
            "netatmo_client",
            "netatmo_client.client"
        ],
        "version": "0.0.3"
    },
    "netbars": {
        "cmdline": [
            "netbars",
            "netbars2graphite"
        ],
        "modules": [
            "netbars",
            "netbars.carbondata",
            "netbars.traffic"
        ],
        "version": "1.0"
    },
    "netbase": {
        "cmdline": [],
        "modules": [
            "netbase",
            "netbase.examples",
            "netbase.extensions",
            "netbase.netbase",
            "netbase.py3",
            "netbase.relations"
        ],
        "version": "0.1.21"
    },
    "netbeacon": {
        "cmdline": [],
        "modules": [],
        "version": "1.1"
    },
    "netbeansconverter": {
        "cmdline": [
            "nbconvert",
            "netbeansconvert.py"
        ],
        "modules": [
            "netbeansconvert"
        ],
        "version": "1.0"
    },
    "netbin": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "netbluemind": {
        "cmdline": [],
        "modules": [
            "netbluemind",
            "netbluemind.addressbook",
            "netbluemind.addressbook.api",
            "netbluemind.addressbook.api.AddressBookDescriptor",
            "netbluemind.addressbook.api.IAddressBook",
            "netbluemind.addressbook.api.IAddressBooks",
            "netbluemind.addressbook.api.IAddressBooksMgmt",
            "netbluemind.addressbook.api.IVCardService",
            "netbluemind.addressbook.api.VCard",
            "netbluemind.addressbook.api.VCardBasicAttribute",
            "netbluemind.addressbook.api.VCardChanges",
            "netbluemind.addressbook.api.VCardChangesItemAdd",
            "netbluemind.addressbook.api.VCardChangesItemDelete",
            "netbluemind.addressbook.api.VCardChangesItemModify",
            "netbluemind.addressbook.api.VCardCommunications",
            "netbluemind.addressbook.api.VCardCommunicationsEmail",
            "netbluemind.addressbook.api.VCardCommunicationsImpp",
            "netbluemind.addressbook.api.VCardCommunicationsLang",
            "netbluemind.addressbook.api.VCardCommunicationsTel",
            "netbluemind.addressbook.api.VCardDeliveryAddressing",
            "netbluemind.addressbook.api.VCardDeliveryAddressingAddress",
            "netbluemind.addressbook.api.VCardExplanatory",
            "netbluemind.addressbook.api.VCardExplanatoryUrl",
            "netbluemind.addressbook.api.VCardIdentification",
            "netbluemind.addressbook.api.VCardIdentificationFormatedName",
            "netbluemind.addressbook.api.VCardIdentificationGender",
            "netbluemind.addressbook.api.VCardIdentificationName",
            "netbluemind.addressbook.api.VCardIdentificationNickname",
            "netbluemind.addressbook.api.VCardInfo",
            "netbluemind.addressbook.api.VCardKind",
            "netbluemind.addressbook.api.VCardOrganizational",
            "netbluemind.addressbook.api.VCardOrganizationalMember",
            "netbluemind.addressbook.api.VCardOrganizationalOrg",
            "netbluemind.addressbook.api.VCardParameter",
            "netbluemind.addressbook.api.VCardQuery",
            "netbluemind.addressbook.api.VCardQueryOrderBy",
            "netbluemind.addressbook.api.VCardRelated",
            "netbluemind.authentication",
            "netbluemind.authentication.api",
            "netbluemind.authentication.api.APIKey",
            "netbluemind.authentication.api.AuthUser",
            "netbluemind.authentication.api.IAPIKeys",
            "netbluemind.authentication.api.IAuthentication",
            "netbluemind.authentication.api.LoginResponse",
            "netbluemind.authentication.api.LoginResponseStatus",
            "netbluemind.authentication.api.ValidationKind",
            "netbluemind.calendar",
            "netbluemind.calendar.api",
            "netbluemind.calendar.api.CalendarDescriptor",
            "netbluemind.calendar.api.CalendarLookupResponse",
            "netbluemind.calendar.api.CalendarLookupResponseType",
            "netbluemind.calendar.api.CalendarSettingsData",
            "netbluemind.calendar.api.CalendarSettingsDataDay",
            "netbluemind.calendar.api.CalendarView",
            "netbluemind.calendar.api.CalendarViewCalendarViewType",
            "netbluemind.calendar.api.CalendarViewChanges",
            "netbluemind.calendar.api.CalendarViewChangesItemAdd",
            "netbluemind.calendar.api.CalendarViewChangesItemDelete",
            "netbluemind.calendar.api.CalendarViewChangesItemModify",
            "netbluemind.calendar.api.CalendarsVEventQuery",
            "netbluemind.calendar.api.ICalendar",
            "netbluemind.calendar.api.ICalendarAutocomplete",
            "netbluemind.calendar.api.ICalendarSettings",
            "netbluemind.calendar.api.ICalendarView",
            "netbluemind.calendar.api.ICalendars",
            "netbluemind.calendar.api.ICalendarsMgmt",
            "netbluemind.calendar.api.IFreebusyMgmt",
            "netbluemind.calendar.api.IPrint",
            "netbluemind.calendar.api.IPublicFreebusy",
            "netbluemind.calendar.api.IPublishCalendar",
            "netbluemind.calendar.api.IUidBasedCalendar",
            "netbluemind.calendar.api.IVEvent",
            "netbluemind.calendar.api.IVFreebusy",
            "netbluemind.calendar.api.PrintData",
            "netbluemind.calendar.api.PrintOptions",
            "netbluemind.calendar.api.PrintOptionsCalendarMetadata",
            "netbluemind.calendar.api.PrintOptionsPrintFormat",
            "netbluemind.calendar.api.PrintOptionsPrintLayout",
            "netbluemind.calendar.api.PrintOptionsPrintView",
            "netbluemind.calendar.api.Reminder",
            "netbluemind.calendar.api.VEvent",
            "netbluemind.calendar.api.VEventAttendeeQuery",
            "netbluemind.calendar.api.VEventChanges",
            "netbluemind.calendar.api.VEventChangesItemAdd",
            "netbluemind.calendar.api.VEventChangesItemDelete",
            "netbluemind.calendar.api.VEventChangesItemModify",
            "netbluemind.calendar.api.VEventQuery",
            "netbluemind.calendar.api.VEventTransparency",
            "netbluemind.calendar.api.VFreebusy",
            "netbluemind.calendar.api.VFreebusyQuery",
            "netbluemind.calendar.api.VFreebusySlot",
            "netbluemind.calendar.api.VFreebusyType",
            "netbluemind.core",
            "netbluemind.core.api",
            "netbluemind.core.api.Email",
            "netbluemind.core.api.ImportStats",
            "netbluemind.core.api.ListResult",
            "netbluemind.core.api.VersionInfo",
            "netbluemind.core.api.date",
            "netbluemind.core.api.date.BmDateTime",
            "netbluemind.core.api.date.BmDateTimePrecision",
            "netbluemind.core.api.fault",
            "netbluemind.core.api.fault.ErrorCode",
            "netbluemind.core.api.report",
            "netbluemind.core.api.report.DiagnosticReport",
            "netbluemind.core.api.report.DiagnosticReportEntry",
            "netbluemind.core.api.report.DiagnosticReportState",
            "netbluemind.core.container",
            "netbluemind.core.container.api",
            "netbluemind.core.container.api.ContainerQuery",
            "netbluemind.core.container.api.IChangelogSupport",
            "netbluemind.core.container.api.IContainerManagement",
            "netbluemind.core.container.api.IContainerSync",
            "netbluemind.core.container.api.IContainers",
            "netbluemind.core.container.model",
            "netbluemind.core.container.model.ChangeLogEntry",
            "netbluemind.core.container.model.ChangeLogEntryType",
            "netbluemind.core.container.model.ContainerChangelog",
            "netbluemind.core.container.model.ContainerChangeset",
            "netbluemind.core.container.model.ContainerDescriptor",
            "netbluemind.core.container.model.ContainerModifiableDescriptor",
            "netbluemind.core.container.model.ContainerSyncResult",
            "netbluemind.core.container.model.ContainerSyncStatus",
            "netbluemind.core.container.model.ContainerUpdatesResult",
            "netbluemind.core.container.model.ContainerUpdatesResultInError",
            "netbluemind.core.container.model.ItemChangeLogEntry",
            "netbluemind.core.container.model.ItemChangelog",
            "netbluemind.core.container.model.ItemContainerValue",
            "netbluemind.core.container.model.ItemDescriptor",
            "netbluemind.core.container.model.ItemValue",
            "netbluemind.core.container.model.acl",
            "netbluemind.core.container.model.acl.AccessControlEntry",
            "netbluemind.core.container.model.acl.Verb",
            "netbluemind.core.task",
            "netbluemind.core.task.api",
            "netbluemind.core.task.api.ITask",
            "netbluemind.core.task.api.TaskRef",
            "netbluemind.core.task.api.TaskStatus",
            "netbluemind.core.task.api.TaskStatusState",
            "netbluemind.cti",
            "netbluemind.cti.api",
            "netbluemind.cti.api.IComputerTelephonyIntegration",
            "netbluemind.cti.api.Status",
            "netbluemind.cti.api.StatusPhoneState",
            "netbluemind.cti.api.StatusType",
            "netbluemind.dataprotect",
            "netbluemind.dataprotect.api",
            "netbluemind.dataprotect.api.DataProtectGeneration",
            "netbluemind.dataprotect.api.GenerationContent",
            "netbluemind.dataprotect.api.GenerationStatus",
            "netbluemind.dataprotect.api.IDataProtect",
            "netbluemind.dataprotect.api.PartGeneration",
            "netbluemind.dataprotect.api.Restorable",
            "netbluemind.dataprotect.api.RestorableKind",
            "netbluemind.dataprotect.api.RestoreDefinition",
            "netbluemind.dataprotect.api.RestoreOperation",
            "netbluemind.dataprotect.api.RetentionPolicy",
            "netbluemind.device",
            "netbluemind.device.api",
            "netbluemind.device.api.Device",
            "netbluemind.device.api.IDevice",
            "netbluemind.device.api.IDevices",
            "netbluemind.directory",
            "netbluemind.directory.api",
            "netbluemind.directory.api.DirEntry",
            "netbluemind.directory.api.DirEntryKind",
            "netbluemind.directory.api.DirEntryQuery",
            "netbluemind.directory.api.DirEntryQueryDir",
            "netbluemind.directory.api.DirEntryQueryOrder",
            "netbluemind.directory.api.DirEntryQueryOrderBy",
            "netbluemind.directory.api.DirEntryQueryStateFilter",
            "netbluemind.directory.api.IDirectory",
            "netbluemind.document",
            "netbluemind.document.api",
            "netbluemind.document.api.Document",
            "netbluemind.document.api.DocumentMetadata",
            "netbluemind.document.api.IDocument",
            "netbluemind.documentfolder",
            "netbluemind.documentfolder.api",
            "netbluemind.documentfolder.api.DocumentFolder",
            "netbluemind.documentfolder.api.IDocumentFolder",
            "netbluemind.domain",
            "netbluemind.domain.api",
            "netbluemind.domain.api.Domain",
            "netbluemind.domain.api.IDomainSettings",
            "netbluemind.domain.api.IDomains",
            "netbluemind.eas",
            "netbluemind.eas.api",
            "netbluemind.eas.api.Account",
            "netbluemind.eas.api.FolderSyncVersions",
            "netbluemind.eas.api.Heartbeat",
            "netbluemind.eas.api.IEas",
            "netbluemind.eas.api.SentItem",
            "netbluemind.filehosting",
            "netbluemind.filehosting.api",
            "netbluemind.filehosting.api.Configuration",
            "netbluemind.filehosting.api.FileHostingInfo",
            "netbluemind.filehosting.api.FileHostingItem",
            "netbluemind.filehosting.api.FileHostingPublicLink",
            "netbluemind.filehosting.api.FileType",
            "netbluemind.filehosting.api.IFileHosting",
            "netbluemind.filehosting.api.Metadata",
            "netbluemind.folder",
            "netbluemind.folder.api",
            "netbluemind.folder.api.Folder",
            "netbluemind.folder.api.FolderQuery",
            "netbluemind.folder.api.FolderType",
            "netbluemind.folder.api.IFolderHierarchy",
            "netbluemind.folder.api.IFolders",
            "netbluemind.group",
            "netbluemind.group.api",
            "netbluemind.group.api.Group",
            "netbluemind.group.api.GroupSearchQuery",
            "netbluemind.group.api.IGroup",
            "netbluemind.group.api.Member",
            "netbluemind.group.api.MemberType",
            "netbluemind.hsm",
            "netbluemind.hsm.api",
            "netbluemind.hsm.api.Demote",
            "netbluemind.hsm.api.IHSM",
            "netbluemind.hsm.api.LowTierMessage",
            "netbluemind.hsm.api.Promote",
            "netbluemind.hsm.api.StoragePolicy",
            "netbluemind.hsm.api.TierChangeResult",
            "netbluemind.icalendar",
            "netbluemind.icalendar.api",
            "netbluemind.icalendar.api.ICalendarElement",
            "netbluemind.icalendar.api.ICalendarElementAttendee",
            "netbluemind.icalendar.api.ICalendarElementCUType",
            "netbluemind.icalendar.api.ICalendarElementClassification",
            "netbluemind.icalendar.api.ICalendarElementOrganizer",
            "netbluemind.icalendar.api.ICalendarElementParticipationStatus",
            "netbluemind.icalendar.api.ICalendarElementRRule",
            "netbluemind.icalendar.api.ICalendarElementRRuleFrequency",
            "netbluemind.icalendar.api.ICalendarElementRRuleWeekDay",
            "netbluemind.icalendar.api.ICalendarElementRole",
            "netbluemind.icalendar.api.ICalendarElementStatus",
            "netbluemind.icalendar.api.ICalendarElementVAlarm",
            "netbluemind.icalendar.api.ICalendarElementVAlarmAction",
            "netbluemind.im",
            "netbluemind.im.api",
            "netbluemind.im.api.IInstantMessaging",
            "netbluemind.im.api.IMMessage",
            "netbluemind.mailbox",
            "netbluemind.mailbox.api",
            "netbluemind.mailbox.api.IMailboxFolderHierarchy",
            "netbluemind.mailbox.api.IMailboxMgmt",
            "netbluemind.mailbox.api.IMailboxes",
            "netbluemind.mailbox.api.MailFilter",
            "netbluemind.mailbox.api.MailFilterForwarding",
            "netbluemind.mailbox.api.MailFilterRule",
            "netbluemind.mailbox.api.MailFilterVacation",
            "netbluemind.mailbox.api.Mailbox",
            "netbluemind.mailbox.api.MailboxQuota",
            "netbluemind.mailbox.api.MailboxRouting",
            "netbluemind.mailbox.api.MailboxType",
            "netbluemind.mailbox.identity",
            "netbluemind.mailbox.identity.api",
            "netbluemind.mailbox.identity.api.IMailboxIdentity",
            "netbluemind.mailbox.identity.api.Identity",
            "netbluemind.mailbox.identity.api.IdentityDescription",
            "netbluemind.mailbox.identity.api.SignatureFormat",
            "netbluemind.mailshare",
            "netbluemind.mailshare.api",
            "netbluemind.mailshare.api.IMailshare",
            "netbluemind.mailshare.api.Mailshare",
            "netbluemind.python",
            "netbluemind.python.client",
            "netbluemind.python.serder",
            "netbluemind.resource",
            "netbluemind.resource.api",
            "netbluemind.resource.api.IResources",
            "netbluemind.resource.api.ResourceDescriptor",
            "netbluemind.resource.api.ResourceDescriptorPropertyValue",
            "netbluemind.resource.api.type",
            "netbluemind.resource.api.type.IResourceTypes",
            "netbluemind.resource.api.type.ResourceType",
            "netbluemind.resource.api.type.ResourceTypeDescriptor",
            "netbluemind.resource.api.type.ResourceTypeDescriptorProperty",
            "netbluemind.resource.api.type.ResourceTypeDescriptorPropertyType",
            "netbluemind.role",
            "netbluemind.role.api",
            "netbluemind.role.api.IRoles",
            "netbluemind.role.api.Profile",
            "netbluemind.role.api.RoleDescriptor",
            "netbluemind.role.api.RolesCategory",
            "netbluemind.scheduledjob",
            "netbluemind.scheduledjob.api",
            "netbluemind.scheduledjob.api.IJob",
            "netbluemind.scheduledjob.api.Job",
            "netbluemind.scheduledjob.api.JobDomainStatus",
            "netbluemind.scheduledjob.api.JobExecution",
            "netbluemind.scheduledjob.api.JobExecutionQuery",
            "netbluemind.scheduledjob.api.JobExitStatus",
            "netbluemind.scheduledjob.api.JobKind",
            "netbluemind.scheduledjob.api.JobPlanification",
            "netbluemind.scheduledjob.api.JobQuery",
            "netbluemind.scheduledjob.api.JobRec",
            "netbluemind.scheduledjob.api.LogEntry",
            "netbluemind.scheduledjob.api.LogLevel",
            "netbluemind.scheduledjob.api.PlanKind",
            "netbluemind.server",
            "netbluemind.server.api",
            "netbluemind.server.api.Assignment",
            "netbluemind.server.api.CommandStatus",
            "netbluemind.server.api.IServer",
            "netbluemind.server.api.Server",
            "netbluemind.system",
            "netbluemind.system.api",
            "netbluemind.system.api.CertData",
            "netbluemind.system.api.CustomLogo",
            "netbluemind.system.api.DomainTemplate",
            "netbluemind.system.api.DomainTemplateDescription",
            "netbluemind.system.api.DomainTemplateDescriptionI18NDescription",
            "netbluemind.system.api.DomainTemplateKind",
            "netbluemind.system.api.DomainTemplateTag",
            "netbluemind.system.api.ICustomTheme",
            "netbluemind.system.api.IDomainTemplate",
            "netbluemind.system.api.IGlobalSettings",
            "netbluemind.system.api.IInstallation",
            "netbluemind.system.api.IPostfixMgmt",
            "netbluemind.system.api.ISecurityMgmt",
            "netbluemind.system.api.ISystemConfiguration",
            "netbluemind.system.api.InstallationVersion",
            "netbluemind.system.api.SubscriptionInformations",
            "netbluemind.system.api.SubscriptionInformationsInstallationIndicator",
            "netbluemind.system.api.SubscriptionInformationsInstallationIndicatorKind",
            "netbluemind.system.api.SubscriptionInformationsKind",
            "netbluemind.system.api.SubscriptionInformationsMessage",
            "netbluemind.system.api.SubscriptionInformationsMessageCode",
            "netbluemind.system.api.SubscriptionInformationsMessageKind",
            "netbluemind.system.api.SystemConf",
            "netbluemind.system.api.SystemState",
            "netbluemind.system.api.UpgradeReport",
            "netbluemind.system.api.UpgradeReportStatus",
            "netbluemind.system.api.UpgradeReportUpgraderReport",
            "netbluemind.tag",
            "netbluemind.tag.api",
            "netbluemind.tag.api.ITags",
            "netbluemind.tag.api.Tag",
            "netbluemind.tag.api.TagChanges",
            "netbluemind.tag.api.TagChangesItemAdd",
            "netbluemind.tag.api.TagChangesItemDelete",
            "netbluemind.tag.api.TagChangesItemModify",
            "netbluemind.tag.api.TagRef",
            "netbluemind.todolist",
            "netbluemind.todolist.api",
            "netbluemind.todolist.api.ITodoList",
            "netbluemind.todolist.api.ITodoLists",
            "netbluemind.todolist.api.ITodoListsMgmt",
            "netbluemind.todolist.api.IVTodo",
            "netbluemind.todolist.api.Reminder",
            "netbluemind.todolist.api.TodoListsVTodoQuery",
            "netbluemind.todolist.api.VTodo",
            "netbluemind.todolist.api.VTodoChanges",
            "netbluemind.todolist.api.VTodoChangesItemAdd",
            "netbluemind.todolist.api.VTodoChangesItemDelete",
            "netbluemind.todolist.api.VTodoChangesItemModify",
            "netbluemind.todolist.api.VTodoQuery",
            "netbluemind.user",
            "netbluemind.user.api",
            "netbluemind.user.api.ChangePassword",
            "netbluemind.user.api.IUser",
            "netbluemind.user.api.IUserFolderHierarchy",
            "netbluemind.user.api.IUserMailIdentities",
            "netbluemind.user.api.IUserSettings",
            "netbluemind.user.api.User",
            "netbluemind.user.api.UserMailIdentity"
        ],
        "version": "3.1.21348-1"
    },
    "netboxapi": {
        "cmdline": [],
        "modules": [
            "netboxapi",
            "netboxapi.api",
            "netboxapi.mapper"
        ],
        "version": "0.0.1"
    },
    "netbuilder": {
        "cmdline": [],
        "modules": [
            "netbuilder",
            "netbuilder.NeuralNet",
            "netbuilder.__version__",
            "netbuilder._param_keys",
            "netbuilder.activations",
            "netbuilder.debug_test",
            "netbuilder.examples",
            "netbuilder.examples.image_number",
            "netbuilder.examples.simple_sample",
            "netbuilder.examples.test_script",
            "netbuilder.examples.trainingShapes",
            "netbuilder.file_operations",
            "netbuilder.loss",
            "netbuilder.tests",
            "netbuilder.tests.training_random"
        ],
        "version": "0.2.2"
    },
    "netbytes": {
        "cmdline": [],
        "modules": [
            "netbytes"
        ],
        "version": "1.3"
    },
    "netcalc": {
        "cmdline": [],
        "modules": [
            "netcalc",
            "netcalc.cli",
            "netcalc.command",
            "netcalc.version"
        ],
        "version": "0.6.2"
    },
    "netcall": {
        "cmdline": [],
        "modules": [
            "netcall",
            "netcall.base",
            "netcall.base_client",
            "netcall.base_service",
            "netcall.concurrency",
            "netcall.concurrency.base",
            "netcall.concurrency.eventlet",
            "netcall.concurrency.futures",
            "netcall.concurrency.gevent",
            "netcall.concurrency.greenhouse",
            "netcall.concurrency.pebble",
            "netcall.datastruct",
            "netcall.errors",
            "netcall.green",
            "netcall.green.balancer",
            "netcall.green.client",
            "netcall.green.service",
            "netcall.serializer",
            "netcall.sync",
            "netcall.threading",
            "netcall.threading.balancer",
            "netcall.threading.client",
            "netcall.threading.service",
            "netcall.tornado",
            "netcall.tornado.client",
            "netcall.tornado.service",
            "netcall.utils",
            "tests",
            "tests.base",
            "tests.client_mixins",
            "tests.rpc_mixins",
            "tests.test_eventlet",
            "tests.test_gevent",
            "tests.test_green_future",
            "tests.test_greenhouse",
            "tests.test_sync",
            "tests.test_threading"
        ],
        "version": "0.4.2"
    },
    "netcdf": {
        "cmdline": [],
        "modules": [
            "netcdf",
            "netcdf.netcdf",
            "netcdf.tailored",
            "tests",
            "tests.base",
            "tests.netcdf_test",
            "tests.tailored_test"
        ],
        "version": "0.2.1"
    },
    "netcdf-segy": {
        "cmdline": [],
        "modules": [
            "netcdf_segy",
            "netcdf_segy.segy2netcdf"
        ],
        "version": "1.0.0"
    },
    "netcdf4": {
        "cmdline": [],
        "modules": [
            "netCDF4",
            "netCDF4.utils",
            "netcdftime"
        ],
        "version": "1.2.7"
    },
    "netcdf4-pydap": {
        "cmdline": [],
        "modules": [
            "netcdf4_pydap",
            "netcdf4_pydap.cas",
            "netcdf4_pydap.cas.esgf",
            "netcdf4_pydap.cas.get_cookies",
            "netcdf4_pydap.core",
            "netcdf4_pydap.httpserver",
            "netcdf4_pydap.requests_pydap",
            "netcdf4_pydap.requests_pydap.http",
            "netcdf4_pydap.requests_pydap.proxy",
            "netcdf4_pydap.sessions"
        ],
        "version": "0.2.6"
    },
    "netcdf4-soft-links": {
        "cmdline": [],
        "modules": [
            "netcdf4_soft_links",
            "netcdf4_soft_links.certificates",
            "netcdf4_soft_links.certificates.certificates",
            "netcdf4_soft_links.certificates.onlineca_get_cert_wget",
            "netcdf4_soft_links.certificates.onlineca_get_trustroots_wget",
            "netcdf4_soft_links.commands",
            "netcdf4_soft_links.core",
            "netcdf4_soft_links.indices_utils",
            "netcdf4_soft_links.netcdf_utils",
            "netcdf4_soft_links.parsers",
            "netcdf4_soft_links.queues_manager",
            "netcdf4_soft_links.remote_netcdf",
            "netcdf4_soft_links.remote_netcdf.http_netcdf",
            "netcdf4_soft_links.remote_netcdf.queryable_netcdf",
            "netcdf4_soft_links.remote_netcdf.remote_netcdf",
            "netcdf4_soft_links.remote_netcdf.safe_handling",
            "netcdf4_soft_links.remote_netcdf.timeaxis_mod",
            "netcdf4_soft_links.requests_sessions",
            "netcdf4_soft_links.retrieval_manager",
            "netcdf4_soft_links.retrieval_utils",
            "netcdf4_soft_links.soft_links",
            "netcdf4_soft_links.soft_links.create_soft_links",
            "netcdf4_soft_links.soft_links.read_soft_links",
            "netcdf4_soft_links.subset",
            "netcdf4_soft_links.subset.subset_utils"
        ],
        "version": "0.7.8.6"
    },
    "netcfg": {
        "cmdline": [],
        "modules": [
            "netcfg",
            "netcfg.client",
            "netcfg.configuration",
            "netcfg.container",
            "netcfg.daemon",
            "netcfg.network",
            "netcfg.network.base",
            "netcfg.network.bridge"
        ],
        "version": "0.1.1"
    },
    "netcidr": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.4"
    },
    "netconf": {
        "cmdline": [],
        "modules": [
            "netconf",
            "netconf.base",
            "netconf.client",
            "netconf.error",
            "netconf.server",
            "netconf.util"
        ],
        "version": "0.5.1"
    },
    "netctl": {
        "cmdline": [],
        "modules": [
            "netctl"
        ],
        "version": "0.2.0"
    },
    "netcube": {
        "cmdline": [],
        "modules": [
            "cube",
            "cube.config",
            "cube.controllers",
            "cube.cube",
            "cube.display",
            "cube.graphics",
            "cube.network",
            "cube.preferences",
            "cube.scenegraph",
            "cube.vector"
        ],
        "version": "0.3.0"
    },
    "netdev": {
        "cmdline": [],
        "modules": [
            "netdev",
            "netdev.arista",
            "netdev.arista.arista_eos",
            "netdev.base",
            "netdev.cisco",
            "netdev.cisco.cisco_asa",
            "netdev.cisco.cisco_ios",
            "netdev.cisco.cisco_nxos",
            "netdev.comware_like",
            "netdev.dispatcher",
            "netdev.exceptions",
            "netdev.fujitsu",
            "netdev.fujitsu.fujitsu_switch",
            "netdev.hp",
            "netdev.hp.hp_comware",
            "netdev.hp.hp_comware_limited",
            "netdev.ios_like",
            "netdev.juniper",
            "netdev.juniper.juniper_junos",
            "netdev.junos_like",
            "netdev.logger",
            "netdev.mikrotik",
            "netdev.mikrotik.mikrotik_routeros",
            "netdev.version"
        ],
        "version": "0.7.0"
    },
    "netdevice": {
        "cmdline": [
            "test_example.py"
        ],
        "modules": [
            "netdevice",
            "netdevice.cisco",
            "netdevice.junos",
            "netdevice.linux"
        ],
        "version": "0.9"
    },
    "netdiff": {
        "cmdline": [],
        "modules": [
            "netdiff",
            "netdiff.exceptions",
            "netdiff.info",
            "netdiff.parsers",
            "netdiff.parsers.base",
            "netdiff.parsers.batman",
            "netdiff.parsers.bmx6",
            "netdiff.parsers.cnml",
            "netdiff.parsers.netjson",
            "netdiff.parsers.olsr",
            "netdiff.tests",
            "netdiff.utils",
            "tests",
            "tests.test_base",
            "tests.test_batman",
            "tests.test_batman_txtinfo",
            "tests.test_bmx6",
            "tests.test_cnml",
            "tests.test_netjson",
            "tests.test_olsr",
            "tests.test_olsr_txtinfo"
        ],
        "version": "0.4.7"
    },
    "netdisco": {
        "cmdline": [],
        "modules": [
            "netdisco",
            "netdisco.const",
            "netdisco.daikin",
            "netdisco.discoverables",
            "netdisco.discoverables.DLNA",
            "netdisco.discoverables.apple_tv",
            "netdisco.discoverables.axis",
            "netdisco.discoverables.belkin_wemo",
            "netdisco.discoverables.bluesound",
            "netdisco.discoverables.bose_soundtouch",
            "netdisco.discoverables.daikin",
            "netdisco.discoverables.denonavr",
            "netdisco.discoverables.directv",
            "netdisco.discoverables.frontier_silicon",
            "netdisco.discoverables.google_cast",
            "netdisco.discoverables.harmony",
            "netdisco.discoverables.hass_ios",
            "netdisco.discoverables.home_assistant",
            "netdisco.discoverables.homekit",
            "netdisco.discoverables.ikea_tradfri",
            "netdisco.discoverables.kodi",
            "netdisco.discoverables.logitech_mediaserver",
            "netdisco.discoverables.netgear_router",
            "netdisco.discoverables.openhome",
            "netdisco.discoverables.panasonic_viera",
            "netdisco.discoverables.philips_hue",
            "netdisco.discoverables.plex_mediaserver",
            "netdisco.discoverables.roku",
            "netdisco.discoverables.sabnzbd",
            "netdisco.discoverables.samsung_tv",
            "netdisco.discoverables.sonos",
            "netdisco.discoverables.spotify_connect",
            "netdisco.discoverables.tellstick",
            "netdisco.discoverables.webos_tv",
            "netdisco.discoverables.yamaha",
            "netdisco.discoverables.yeelight",
            "netdisco.discovery",
            "netdisco.gdm",
            "netdisco.lms",
            "netdisco.mdns",
            "netdisco.service",
            "netdisco.ssdp",
            "netdisco.tellstick",
            "netdisco.util"
        ],
        "version": "1.0.0"
    },
    "netdisk": {
        "cmdline": [
            "netdisk.py"
        ],
        "modules": [
            "netdisk",
            "netdisk.base",
            "netdisk.dropbox",
            "netdisk.dropbox.client",
            "netdisk.dropbox.rest",
            "netdisk.dropbox.session",
            "netdisk.dropbox.six",
            "netdisk.dropbox.util",
            "netdisk.kuaipan",
            "netdisk.kuaipan.client",
            "netdisk.kuaipan.http_client",
            "netdisk.kuaipan.oauth",
            "netdisk.kuaipan.oauth.oauth",
            "netdisk.kuaipan.poster",
            "netdisk.kuaipan.poster.encode",
            "netdisk.kuaipan.poster.streaminghttp",
            "netdisk.kuaipan.session",
            "netdisk.netdisk_dropbox",
            "netdisk.netdisk_kuaipan"
        ],
        "version": "1.1.1"
    },
    "netdnarws": {
        "cmdline": [],
        "modules": [
            "netdnarws",
            "netdnarws.netdna"
        ],
        "version": "0.2.8"
    },
    "netdrive": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "netdrive-connector": {
        "cmdline": [],
        "modules": [
            "netdriveconnector",
            "netdriveconnector.LoginDialog",
            "netdriveconnector.NetdriveConnector",
            "netdriveconnector.RootPasswordDialog",
            "netdriveconnector.main"
        ],
        "version": "1.3.2"
    },
    "netdumplings": {
        "cmdline": [],
        "modules": [
            "netdumplings",
            "netdumplings.console",
            "netdumplings.console.info",
            "netdumplings.console.printer",
            "netdumplings.console.shifty",
            "netdumplings.console.snifty",
            "netdumplings.console.status",
            "netdumplings.dumpling",
            "netdumplings.dumplingchef",
            "netdumplings.dumplingchefs",
            "netdumplings.dumplingchefs.arpchef",
            "netdumplings.dumplingchefs.dnslookupchef",
            "netdumplings.dumplingchefs.packetcountchef",
            "netdumplings.dumplingeater",
            "netdumplings.dumplinghub",
            "netdumplings.dumplingkitchen",
            "netdumplings.exceptions",
            "netdumplings.shared"
        ],
        "version": "0.1.0"
    },
    "netease-appiumlibrary": {
        "cmdline": [],
        "modules": [
            "BetaLibrary",
            "BetaLibrary.keywords",
            "BetaLibrary.keywords._android_utils",
            "BetaLibrary.keywords._applicationmanagement",
            "BetaLibrary.keywords._element",
            "BetaLibrary.keywords._keyevent",
            "BetaLibrary.keywords._logging",
            "BetaLibrary.keywords._runonfailure",
            "BetaLibrary.keywords._screenshot",
            "BetaLibrary.keywords._touch",
            "BetaLibrary.keywords._waiting",
            "BetaLibrary.keywords.keywordgroup",
            "BetaLibrary.locators",
            "BetaLibrary.locators.elementfinder",
            "BetaLibrary.utils",
            "BetaLibrary.utils.applicationcache",
            "BetaLibrary.version"
        ],
        "version": "1.3.5"
    },
    "netease-dl": {
        "cmdline": [],
        "modules": [
            "netease",
            "netease.compat",
            "netease.config",
            "netease.download",
            "netease.encrypt",
            "netease.exceptions",
            "netease.logger",
            "netease.models",
            "netease.start",
            "netease.utils",
            "netease.weapi"
        ],
        "version": "1.0.2"
    },
    "netease-musicbox": {
        "cmdline": [],
        "modules": [
            "NEMbox",
            "NEMbox.api",
            "NEMbox.cache",
            "NEMbox.config",
            "NEMbox.const",
            "NEMbox.logger",
            "NEMbox.menu",
            "NEMbox.osdlyrics",
            "NEMbox.player",
            "NEMbox.scrollstring",
            "NEMbox.singleton",
            "NEMbox.storage",
            "NEMbox.terminalsize",
            "NEMbox.ui",
            "NEMbox.utils"
        ],
        "version": "0.2.4.0"
    },
    "neteasedownloader": {
        "cmdline": [],
        "modules": [
            "netease",
            "netease.NeteaseDownloader",
            "netease.cmdline",
            "netease.cmdline_threading"
        ],
        "version": "1.7"
    },
    "neteasemusicapi": {
        "cmdline": [],
        "modules": [
            "NetEaseMusicApi",
            "NetEaseMusicApi.RawApi",
            "NetEaseMusicApi.SortedApi"
        ],
        "version": "1.0.3"
    },
    "neteasy.plone.subnavbar": {
        "cmdline": [],
        "modules": [
            "neteasy",
            "neteasy.plone",
            "neteasy.plone.subnavbar",
            "neteasy.plone.subnavbar.browser",
            "neteasy.plone.subnavbar.browser.subnavbar",
            "neteasy.plone.subnavbar.interfaces",
            "neteasy.plone.subnavbar.navbar_contents",
            "neteasy.plone.subnavbar.tests"
        ],
        "version": "1.0.0-release"
    },
    "netengine": {
        "cmdline": [],
        "modules": [
            "netengine",
            "netengine.backends",
            "netengine.backends.base",
            "netengine.backends.dummy",
            "netengine.backends.http",
            "netengine.backends.http.airos",
            "netengine.backends.http.base",
            "netengine.backends.snmp",
            "netengine.backends.snmp.airos",
            "netengine.backends.snmp.base",
            "netengine.backends.snmp.openwrt",
            "netengine.backends.ssh",
            "netengine.backends.ssh.airos",
            "netengine.backends.ssh.base",
            "netengine.backends.ssh.openwrt",
            "netengine.exceptions",
            "netengine.utils",
            "tests",
            "tests.base",
            "tests.dummy",
            "tests.http",
            "tests.http.airos",
            "tests.http.base",
            "tests.settings",
            "tests.snmp",
            "tests.snmp.airos",
            "tests.snmp.base",
            "tests.snmp.openwrt",
            "tests.ssh",
            "tests.ssh.airos",
            "tests.ssh.base",
            "tests.ssh.openwrt"
        ],
        "version": "0.1.alpha"
    },
    "neter": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "neter.py": {
        "cmdline": [],
        "modules": [
            "neter"
        ],
        "version": "1.0.0"
    },
    "neteria": {
        "cmdline": [],
        "modules": [
            "neteria",
            "neteria.client",
            "neteria.core",
            "neteria.encryption",
            "neteria.server",
            "neteria.tools"
        ],
        "version": "1.0.2"
    },
    "netest": {
        "cmdline": [],
        "modules": [
            "netest"
        ],
        "version": "1.0.1"
    },
    "netfetch": {
        "cmdline": [
            "netFetchDelete",
            "netFetchGet",
            "netFetchPut"
        ],
        "modules": [
            "NetFetch",
            "NetFetch.client_utils",
            "NetFetch.config"
        ],
        "version": "3.0.3"
    },
    "netfilter": {
        "cmdline": [],
        "modules": [
            "netfilter",
            "netfilter.firewall",
            "netfilter.parser",
            "netfilter.rule",
            "netfilter.table",
            "tests",
            "tests.test_netfilter"
        ],
        "version": "0.6.4"
    },
    "netfilterqueue": {
        "cmdline": [],
        "modules": [],
        "version": "0.8.1"
    },
    "netflix-penguin": {
        "cmdline": [],
        "modules": [
            "netflix_penguin",
            "netflix_penguin.__meta__",
            "netflix_penguin.collections",
            "netflix_penguin.gi",
            "netflix_penguin.layout",
            "netflix_penguin.resources",
            "netflix_penguin.utils"
        ],
        "version": "0.0.3"
    },
    "netflix-roulette": {
        "cmdline": [],
        "modules": [
            "netflix_roulette",
            "netflix_roulette.constants",
            "netflix_roulette.exceptions",
            "netflix_roulette.netflix_roulette_api",
            "netflix_roulette.request",
            "netflix_roulette.util"
        ],
        "version": "0.23"
    },
    "netflixrouletteapi": {
        "cmdline": [],
        "modules": [
            "NetflixRoulette"
        ],
        "version": "5.0"
    },
    "netflowvizu": {
        "cmdline": [],
        "modules": [],
        "version": "0.6"
    },
    "netforce-test": {
        "cmdline": [],
        "modules": [
            "netforce_test"
        ],
        "version": "0.1"
    },
    "netgen": {
        "cmdline": [],
        "modules": [
            "netgen",
            "netgen.engine",
            "netgen.main",
            "netgen.test"
        ],
        "version": "0.3.0"
    },
    "netgrab": {
        "cmdline": [],
        "modules": [
            "netgrab"
        ],
        "version": "1.0"
    },
    "netgrep": {
        "cmdline": [],
        "modules": [
            "netgrep",
            "netgrep.async_dns",
            "netgrep.feedfilter"
        ],
        "version": "0.3.7"
    },
    "netifaces": {
        "cmdline": [],
        "modules": [],
        "version": "0.10.5"
    },
    "netifaces-merged": {
        "cmdline": [],
        "modules": [],
        "version": "0.9.0"
    },
    "netifaces-py3": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "netifaces-ya": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "netify": {
        "cmdline": [],
        "modules": [
            "netify",
            "netify.app",
            "netify.config",
            "netify.template",
            "netify.view"
        ],
        "version": "0.2"
    },
    "netipsum": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "netius": {
        "cmdline": [],
        "modules": [
            "netius",
            "netius.adapters",
            "netius.adapters.base",
            "netius.adapters.fs",
            "netius.adapters.memory",
            "netius.adapters.mongo",
            "netius.adapters.null",
            "netius.auth",
            "netius.auth.address",
            "netius.auth.allow",
            "netius.auth.base",
            "netius.auth.deny",
            "netius.auth.dummy",
            "netius.auth.memory",
            "netius.auth.passwd",
            "netius.auth.simple",
            "netius.base",
            "netius.base.async_neo",
            "netius.base.async_old",
            "netius.base.asynchronous",
            "netius.base.client",
            "netius.base.common",
            "netius.base.compat",
            "netius.base.config",
            "netius.base.conn",
            "netius.base.container",
            "netius.base.diag",
            "netius.base.errors",
            "netius.base.legacy",
            "netius.base.log",
            "netius.base.observer",
            "netius.base.poll",
            "netius.base.protocol",
            "netius.base.request",
            "netius.base.server",
            "netius.base.stream",
            "netius.base.tls",
            "netius.base.util",
            "netius.clients",
            "netius.clients.apn",
            "netius.clients.dht",
            "netius.clients.dns",
            "netius.clients.http",
            "netius.clients.mjpg",
            "netius.clients.raw",
            "netius.clients.smtp",
            "netius.clients.ssdp",
            "netius.clients.torrent",
            "netius.clients.ws",
            "netius.common",
            "netius.common.asn",
            "netius.common.calc",
            "netius.common.dhcp",
            "netius.common.dkim",
            "netius.common.ftp",
            "netius.common.geo",
            "netius.common.http",
            "netius.common.http2",
            "netius.common.mime",
            "netius.common.parser",
            "netius.common.pop",
            "netius.common.rsa",
            "netius.common.setup",
            "netius.common.smtp",
            "netius.common.socks",
            "netius.common.stream",
            "netius.common.structures",
            "netius.common.tftp",
            "netius.common.tls",
            "netius.common.torrent",
            "netius.common.util",
            "netius.common.ws",
            "netius.examples",
            "netius.examples.http",
            "netius.examples.upnp",
            "netius.extra",
            "netius.extra.desktop",
            "netius.extra.dhcp_s",
            "netius.extra.file",
            "netius.extra.filea",
            "netius.extra.hello",
            "netius.extra.hello_w",
            "netius.extra.proxy_d",
            "netius.extra.proxy_f",
            "netius.extra.proxy_r",
            "netius.extra.smtp_r",
            "netius.middleware",
            "netius.middleware.base",
            "netius.middleware.dummy",
            "netius.middleware.proxy",
            "netius.mock",
            "netius.mock.appier",
            "netius.pool",
            "netius.pool.common",
            "netius.pool.file",
            "netius.pool.notify",
            "netius.pool.task",
            "netius.servers",
            "netius.servers.dhcp",
            "netius.servers.echo",
            "netius.servers.ftp",
            "netius.servers.http",
            "netius.servers.http2",
            "netius.servers.mjpg",
            "netius.servers.pop",
            "netius.servers.proxy",
            "netius.servers.smtp",
            "netius.servers.socks",
            "netius.servers.tftp",
            "netius.servers.torrent",
            "netius.servers.ws",
            "netius.servers.wsgi",
            "netius.sh",
            "netius.sh.auth",
            "netius.sh.base",
            "netius.sh.dkim",
            "netius.sh.rsa",
            "netius.sh.smtp",
            "netius.test"
        ],
        "version": "1.16.11"
    },
    "netjsonconfig": {
        "cmdline": [
            "netjsonconfig"
        ],
        "modules": [
            "netjsonconfig",
            "netjsonconfig.backends",
            "netjsonconfig.backends.base",
            "netjsonconfig.backends.openvpn",
            "netjsonconfig.backends.openvpn.openvpn",
            "netjsonconfig.backends.openvpn.renderers",
            "netjsonconfig.backends.openvpn.schema",
            "netjsonconfig.backends.openvpn.templates",
            "netjsonconfig.backends.openwisp",
            "netjsonconfig.backends.openwisp.openwisp",
            "netjsonconfig.backends.openwisp.schema",
            "netjsonconfig.backends.openwrt",
            "netjsonconfig.backends.openwrt.openwrt",
            "netjsonconfig.backends.openwrt.renderers",
            "netjsonconfig.backends.openwrt.schema",
            "netjsonconfig.backends.openwrt.timezones",
            "netjsonconfig.channels",
            "netjsonconfig.countries",
            "netjsonconfig.exceptions",
            "netjsonconfig.schema",
            "netjsonconfig.utils",
            "netjsonconfig.version"
        ],
        "version": "0.5.5"
    },
    "netki-partner-client": {
        "cmdline": [],
        "modules": [
            "netki",
            "netki.BaseObject",
            "netki.Certificate",
            "netki.Domain",
            "netki.NetkiClient",
            "netki.Partner",
            "netki.Requestor",
            "netki.WalletName",
            "netki.test_BaseObject",
            "netki.test_Certificate",
            "netki.test_Domain",
            "netki.test_NetkiClient",
            "netki.test_Partner",
            "netki.test_Requestor",
            "netki.test_WalletName"
        ],
        "version": "1.0.1"
    },
    "netkit": {
        "cmdline": [],
        "modules": [
            "netkit",
            "netkit.box",
            "netkit.contrib",
            "netkit.contrib.tcp_client",
            "netkit.line_box",
            "netkit.log",
            "netkit.stream"
        ],
        "version": "0.2.155"
    },
    "netkraken-minion": {
        "cmdline": [],
        "modules": [
            "netkraken",
            "netkraken.db"
        ],
        "version": "0.2"
    },
    "netlib": {
        "cmdline": [],
        "modules": [],
        "version": "0.17"
    },
    "netlink": {
        "cmdline": [],
        "modules": [
            "netlink",
            "netlink.low.ethtool",
            "netlink.low.netif",
            "netlink.low.netlink",
            "netlink.low.netlinkattrib",
            "netlink.struct.ethtool",
            "netlink.struct.misc",
            "netlink.struct.netif",
            "netlink.struct.netlink",
            "netlink.struct.routing",
            "netlink.struct.socket"
        ],
        "version": "0.1"
    },
    "netlog": {
        "cmdline": [],
        "modules": [
            "netlog"
        ],
        "version": "0.5.5"
    },
    "netlogger": {
        "cmdline": [
            "mongo_dump",
            "netlogd",
            "nl_actions",
            "nl_amqp_process",
            "nl_broker",
            "nl_cfgmon",
            "nl_check",
            "nl_config_verify",
            "nl_cpu",
            "nl_cpuprobe",
            "nl_csv",
            "nl_date",
            "nl_dup",
            "nl_findbottleneck",
            "nl_findmissing",
            "nl_ganglia",
            "nl_gap",
            "nl_gridftp_log_gen",
            "nl_interval",
            "nl_lifeline",
            "nl_load",
            "nl_notify",
            "nl_parse",
            "nl_profile",
            "nl_psmongo",
            "nl_snoop",
            "nl_status",
            "nl_tag_exp",
            "nl_view",
            "nl_wflowgen",
            "nl_write",
            "nl_xsp_recv",
            "nlmid"
        ],
        "modules": [
            "netlogger",
            "netlogger.actions",
            "netlogger.actions.base",
            "netlogger.amqp",
            "netlogger.amqp.amqp_process",
            "netlogger.amqp.connection",
            "netlogger.amqp.scriptutil",
            "netlogger.analysis",
            "netlogger.analysis.bottleneck",
            "netlogger.analysis.datamining",
            "netlogger.analysis.datamining.bandwidth",
            "netlogger.analysis.datamining.base",
            "netlogger.analysis.datamining.psmongo",
            "netlogger.analysis.datamining.rpython",
            "netlogger.analysis.filemon",
            "netlogger.analysis.histogram",
            "netlogger.analysis.lifeline",
            "netlogger.analysis.modules",
            "netlogger.analysis.modules._base",
            "netlogger.analysis.modules.bp",
            "netlogger.analysis.modules.buffered_loader",
            "netlogger.analysis.modules.couchdb",
            "netlogger.analysis.modules.csv",
            "netlogger.analysis.modules.mongodb",
            "netlogger.analysis.modules.nl_sql",
            "netlogger.analysis.modules.noop",
            "netlogger.analysis.modules.stampede_loader",
            "netlogger.analysis.modules.xml",
            "netlogger.analysis.schema",
            "netlogger.analysis.schema._base",
            "netlogger.analysis.schema.nl_schema",
            "netlogger.analysis.schema.schema_check",
            "netlogger.analysis.schema.stampede_schema",
            "netlogger.analysis.schemacfg",
            "netlogger.analysis.startend",
            "netlogger.analysis.tsreg",
            "netlogger.analysis.wflowgen",
            "netlogger.analysis.workflow",
            "netlogger.analysis.workflow._base",
            "netlogger.analysis.workflow.stampede_statistics",
            "netlogger.analysis.workflow.util",
            "netlogger.class_info",
            "netlogger.config_verify",
            "netlogger.configobj",
            "netlogger.dispatch",
            "netlogger.info_broker",
            "netlogger.magicdate",
            "netlogger.module_util",
            "netlogger.nlapi",
            "netlogger.nldate",
            "netlogger.nlganglia",
            "netlogger.nllog",
            "netlogger.nlmi",
            "netlogger.nlstatus",
            "netlogger.parsers",
            "netlogger.parsers.base",
            "netlogger.parsers.modules",
            "netlogger.parsers.modules.bestman",
            "netlogger.parsers.modules.bp",
            "netlogger.parsers.modules.condor_dag",
            "netlogger.parsers.modules.csa_acct",
            "netlogger.parsers.modules.dynamic",
            "netlogger.parsers.modules.generic",
            "netlogger.parsers.modules.gensim",
            "netlogger.parsers.modules.gk",
            "netlogger.parsers.modules.globus_condor",
            "netlogger.parsers.modules.gram_acct",
            "netlogger.parsers.modules.gridftp",
            "netlogger.parsers.modules.gridftp_auth",
            "netlogger.parsers.modules.guc",
            "netlogger.parsers.modules.hsi_ndapi",
            "netlogger.parsers.modules.hsi_xfer",
            "netlogger.parsers.modules.jobstate",
            "netlogger.parsers.modules.kickstart",
            "netlogger.parsers.modules.ks",
            "netlogger.parsers.modules.netstat",
            "netlogger.parsers.modules.pbs",
            "netlogger.parsers.modules.sge",
            "netlogger.parsers.modules.sge_rpt",
            "netlogger.parsers.modules.vmstat",
            "netlogger.parsers.modules.wsgram",
            "netlogger.parsers.nlreadline",
            "netlogger.pegasus",
            "netlogger.pegasus.extractAndgetCumul",
            "netlogger.pegasus.kickstart_hdr",
            "netlogger.pegasus.nl_troubleshooting",
            "netlogger.pegasus.schema_tool",
            "netlogger.tests",
            "netlogger.tests.component",
            "netlogger.tests.component.all",
            "netlogger.tests.component.testAnalyzeMongo",
            "netlogger.tests.component.testNlInterval",
            "netlogger.tests.component.testParseBestman",
            "netlogger.tests.component.testParseCondorDag",
            "netlogger.tests.component.testParseCsaAcct",
            "netlogger.tests.component.testParseDynamic",
            "netlogger.tests.component.testParseGramAcct",
            "netlogger.tests.component.testParseGridftp",
            "netlogger.tests.component.testParseGridftpAuth",
            "netlogger.tests.component.testParseHsiNdapi",
            "netlogger.tests.component.testParseHsiXfer",
            "netlogger.tests.component.testParseJobstate",
            "netlogger.tests.component.testParseKickstart",
            "netlogger.tests.component.testParsePBS",
            "netlogger.tests.component.testParseSge",
            "netlogger.tests.component.testParseSgeRpt",
            "netlogger.tests.component.testParsers",
            "netlogger.tests.component.testSchemacfg",
            "netlogger.tests.component.testUtil",
            "netlogger.tests.data.fake_pipeline_prog",
            "netlogger.tests.shared",
            "netlogger.tests.stress",
            "netlogger.tests.stress.all",
            "netlogger.tests.stress.rpython_perf",
            "netlogger.tests.stress.shared",
            "netlogger.tests.stress.testReg",
            "netlogger.tests.stress.testUtil",
            "netlogger.tests.system",
            "netlogger.tests.system.all",
            "netlogger.tests.system.testAmqpProcess",
            "netlogger.tests.system.testNlParse",
            "netlogger.tests.system.testScripts",
            "netlogger.tests.unit",
            "netlogger.tests.unit.all",
            "netlogger.tests.unit.testAnalysisModules",
            "netlogger.tests.unit.testDateParsing",
            "netlogger.tests.unit.testDispatch",
            "netlogger.tests.unit.testFIFODict",
            "netlogger.tests.unit.testIncConfigObj",
            "netlogger.tests.unit.testNetlogd",
            "netlogger.tests.unit.testNllog",
            "netlogger.tests.unit.testParseBP",
            "netlogger.tests.unit.testParseDynamic",
            "netlogger.tests.unit.testParseGatekeeper",
            "netlogger.tests.unit.testParseGlobusCondor",
            "netlogger.tests.unit.testParseGridftp",
            "netlogger.tests.unit.testParseVmstat",
            "netlogger.tests.unit.testPegasusHdr",
            "netlogger.tests.unit.testRpython",
            "netlogger.tests.unit.testStartend",
            "netlogger.util",
            "netlogger.version",
            "netlogger.xsplib"
        ],
        "version": "4.3.1"
    },
    "netmagus": {
        "cmdline": [],
        "modules": [
            "netmagus",
            "netmagus.form",
            "netmagus.netop",
            "netmagus.rpc",
            "netmagus.session"
        ],
        "version": "0.6.4"
    },
    "netman": {
        "cmdline": [],
        "modules": [],
        "version": "1.3.3"
    },
    "netmath": {
        "cmdline": [],
        "modules": [
            "netmath",
            "netmath.version"
        ],
        "version": "0.1.0"
    },
    "netmem": {
        "cmdline": [],
        "modules": [
            "netmem",
            "netmem.__version__",
            "netmem._compat",
            "netmem.bindable_variable",
            "netmem.connector",
            "netmem.logging_connector",
            "netmem.network_memory",
            "netmem.pushbullet_connector",
            "netmem.udp_connector",
            "netmem.websocket_connector",
            "netmem.websocket_server"
        ],
        "version": "0.2.4"
    },
    "netmiko": {
        "cmdline": [],
        "modules": [
            "netmiko",
            "netmiko.base_connection",
            "netmiko.cisco_base_connection",
            "netmiko.netmiko_globals",
            "netmiko.py23_compat",
            "netmiko.scp_handler",
            "netmiko.snmp_autodetect",
            "netmiko.ssh_autodetect",
            "netmiko.ssh_dispatcher",
            "netmiko.ssh_exception",
            "netmiko.utilities",
            "netmiko/a10",
            "netmiko/a10.a10_ssh",
            "netmiko/alcatel",
            "netmiko/alcatel.alcatel_sros_ssh",
            "netmiko/arista",
            "netmiko/arista.arista_ssh",
            "netmiko/aruba",
            "netmiko/aruba.aruba_ssh",
            "netmiko/avaya",
            "netmiko/avaya.avaya_ers_ssh",
            "netmiko/avaya.avaya_vsp_ssh",
            "netmiko/brocade",
            "netmiko/brocade.brocade_fastiron_ssh",
            "netmiko/brocade.brocade_netiron_ssh",
            "netmiko/brocade.brocade_nos_ssh",
            "netmiko/checkpoint",
            "netmiko/checkpoint.checkpoint_gaia_ssh",
            "netmiko/ciena",
            "netmiko/ciena.ciena_saos_ssh",
            "netmiko/cisco",
            "netmiko/cisco.cisco_asa_ssh",
            "netmiko/cisco.cisco_ios",
            "netmiko/cisco.cisco_nxos_ssh",
            "netmiko/cisco.cisco_s300",
            "netmiko/cisco.cisco_tp_tcce",
            "netmiko/cisco.cisco_wlc_ssh",
            "netmiko/cisco.cisco_xr_ssh",
            "netmiko/dell",
            "netmiko/dell.dell_force10_ssh",
            "netmiko/dell.dell_powerconnect_ssh",
            "netmiko/dell.dell_powerconnect_telnet",
            "netmiko/eltex",
            "netmiko/eltex.eltex_ssh",
            "netmiko/enterasys",
            "netmiko/enterasys.enterasys_ssh",
            "netmiko/extreme",
            "netmiko/extreme.extreme_ssh",
            "netmiko/f5",
            "netmiko/f5.f5_ltm_ssh",
            "netmiko/fortinet",
            "netmiko/fortinet.fortinet_ssh",
            "netmiko/hp",
            "netmiko/hp.hp_comware_ssh",
            "netmiko/hp.hp_procurve_ssh",
            "netmiko/huawei",
            "netmiko/huawei.huawei_ssh",
            "netmiko/juniper",
            "netmiko/juniper.juniper_ssh",
            "netmiko/linux",
            "netmiko/linux.linux_ssh",
            "netmiko/mellanox",
            "netmiko/mellanox.mellanox_ssh",
            "netmiko/ovs",
            "netmiko/ovs.ovs_linux_ssh",
            "netmiko/paloalto",
            "netmiko/paloalto.paloalto_panos_ssh",
            "netmiko/pluribus",
            "netmiko/pluribus.pluribus_ssh",
            "netmiko/quanta",
            "netmiko/quanta.quanta_mesh_ssh",
            "netmiko/terminal_server",
            "netmiko/terminal_server.terminal_server",
            "netmiko/ubiquiti",
            "netmiko/ubiquiti.edge_ssh",
            "netmiko/vyos",
            "netmiko/vyos.vyos_ssh"
        ],
        "version": "1.4.0"
    },
    "netmorph": {
        "cmdline": [],
        "modules": [
            "netmorph"
        ],
        "version": "0.0.0"
    },
    "netowrking-ibm": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "netpbm": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "netperf-wrapper": {
        "cmdline": [],
        "modules": [
            "netperf_wrapper",
            "netperf_wrapper.aggregators",
            "netperf_wrapper.batch",
            "netperf_wrapper.build_info",
            "netperf_wrapper.error_ellipse",
            "netperf_wrapper.formatters",
            "netperf_wrapper.gui",
            "netperf_wrapper.metadata",
            "netperf_wrapper.ordereddict",
            "netperf_wrapper.resultset",
            "netperf_wrapper.runners",
            "netperf_wrapper.settings",
            "netperf_wrapper.testenv",
            "netperf_wrapper.transformers",
            "netperf_wrapper.util"
        ],
        "version": "0.9.1"
    },
    "netpyne": {
        "cmdline": [],
        "modules": [
            "netpyne",
            "netpyne.analysis",
            "netpyne.batch",
            "netpyne.cell",
            "netpyne.conn",
            "netpyne.default",
            "netpyne.framework",
            "netpyne.init",
            "netpyne.network",
            "netpyne.neuromlFuncs",
            "netpyne.pop",
            "netpyne.sim",
            "netpyne.simFuncs",
            "netpyne.specs",
            "netpyne.support",
            "netpyne.support.bsmart",
            "netpyne.support.morphology",
            "netpyne.support.stackedBarGraph",
            "netpyne.utils",
            "netpyne.wrappers"
        ],
        "version": "0.6.9"
    },
    "netrics": {
        "cmdline": [],
        "modules": [
            "netrics",
            "netrics.dyad_jfe_logit",
            "netrics.helpers",
            "netrics.logit",
            "netrics.print_coef",
            "netrics.tetrad_logit"
        ],
        "version": "0.0.3"
    },
    "netrng": {
        "cmdline": [],
        "modules": [
            "netrng",
            "netrng.core",
            "netrng.daemon",
            "netrng.entropycheck",
            "netrng.perftest"
        ],
        "version": "0.2b1"
    },
    "netropy": {
        "cmdline": [],
        "modules": [
            "netropy",
            "netropy.beacon",
            "netropy.record"
        ],
        "version": "1.01"
    },
    "netrunner": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "netscaler-api": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.3"
    },
    "netscaler-tool": {
        "cmdline": [],
        "modules": [
            "netscalertool",
            "netscalertool.netscalerapi",
            "netscalertool.netscalertool",
            "netscalertool.utils"
        ],
        "version": "1.27.4"
    },
    "netscan": {
        "cmdline": [],
        "modules": [
            "netscan",
            "netscan.html5",
            "netscan.netlib",
            "netscan.netscan",
            "netscan.tests"
        ],
        "version": "2.1.2"
    },
    "netser20": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "netset": {
        "cmdline": [],
        "modules": [
            "netset"
        ],
        "version": "0.0.2"
    },
    "netsgiro": {
        "cmdline": [],
        "modules": [
            "netsgiro",
            "netsgiro.constants",
            "netsgiro.enums",
            "netsgiro.objects",
            "netsgiro.records",
            "netsgiro.validators"
        ],
        "version": "1.0.0a3"
    },
    "netshow-core": {
        "cmdline": [],
        "modules": [
            "netshow",
            "netshow._version",
            "netshow.netshow"
        ],
        "version": "1.1.3"
    },
    "netshow-core-lib": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.3"
    },
    "netshow-linux-lib": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.5"
    },
    "netsight.aspxauthplugin": {
        "cmdline": [],
        "modules": [
            "netsight",
            "netsight.aspxauthplugin",
            "netsight.aspxauthplugin.browser",
            "netsight.aspxauthplugin.install",
            "netsight.aspxauthplugin.plugin",
            "netsight.aspxauthplugin.testing",
            "netsight.aspxauthplugin.tests",
            "netsight.aspxauthplugin.tests.test_plugin"
        ],
        "version": "1.0.3"
    },
    "netsight.async": {
        "cmdline": [],
        "modules": [
            "netsight",
            "netsight.async",
            "netsight.async.browser",
            "netsight.async.browser.BaseAsyncView",
            "netsight.async.browser.tests",
            "netsight.async.browser.tests.base",
            "netsight.async.browser.tests.test_BaseAsyncView",
            "netsight.async.config",
            "netsight.async.registry"
        ],
        "version": "1.1.1"
    },
    "netsight.caseinsensitivefieldindex": {
        "cmdline": [],
        "modules": [
            "netsight",
            "netsight.caseinsensitivefieldindex",
            "netsight.caseinsensitivefieldindex.CaseInsensitiveFieldIndex",
            "netsight.caseinsensitivefieldindex.tests",
            "netsight.caseinsensitivefieldindex.zope2"
        ],
        "version": "0.2dev-r3746"
    },
    "netsight.cloudstorage": {
        "cmdline": [],
        "modules": [
            "src",
            "src.netsight",
            "src.netsight.cloudstorage",
            "src.netsight.cloudstorage.adapters",
            "src.netsight.cloudstorage.browser",
            "src.netsight.cloudstorage.browser.download",
            "src.netsight.cloudstorage.browser.viewlets",
            "src.netsight.cloudstorage.browser.views",
            "src.netsight.cloudstorage.controlpanel",
            "src.netsight.cloudstorage.events",
            "src.netsight.cloudstorage.exceptions",
            "src.netsight.cloudstorage.interfaces",
            "src.netsight.cloudstorage.monkeypatches",
            "src.netsight.cloudstorage.subscribers",
            "src.netsight.cloudstorage.tasks",
            "src.netsight.cloudstorage.testing",
            "src.netsight.cloudstorage.tests",
            "src.netsight.cloudstorage.tests.base",
            "src.netsight.cloudstorage.tests.test_adapter",
            "src.netsight.cloudstorage.upgrade",
            "src.netsight.cloudstorage.utils"
        ],
        "version": "1.8.1"
    },
    "netsight.windowsauthplugin": {
        "cmdline": [],
        "modules": [
            "netsight",
            "netsight.windowsauthplugin",
            "netsight.windowsauthplugin.browser",
            "netsight.windowsauthplugin.browser.mixed",
            "netsight.windowsauthplugin.install",
            "netsight.windowsauthplugin.interface",
            "netsight.windowsauthplugin.krbtest",
            "netsight.windowsauthplugin.plugin",
            "netsight.windowsauthplugin.profiles_mixed",
            "netsight.windowsauthplugin.profiles_mixed.handlers",
            "netsight.windowsauthplugin.tests"
        ],
        "version": "2.3.1"
    },
    "netsink": {
        "cmdline": [],
        "modules": [
            "netsink",
            "netsink.config",
            "netsink.listener",
            "netsink.modules",
            "netsink.modules.dns",
            "netsink.modules.ftp",
            "netsink.modules.http",
            "netsink.modules.ircserver",
            "netsink.modules.multi",
            "netsink.modules.smtp",
            "netsink.modules.sslwrap",
            "netsink.redirection",
            "netsink.start",
            "netsink.version"
        ],
        "version": "0.5"
    },
    "netsnmp-py": {
        "cmdline": [],
        "modules": [
            "netsnmp",
            "netsnmp._dev",
            "netsnmp._dev.arris",
            "netsnmp._dev.cisco",
            "netsnmp._dev.technicolor",
            "netsnmp._hex"
        ],
        "version": "0.4"
    },
    "netsnmpagent": {
        "cmdline": [],
        "modules": [
            "netsnmpagent",
            "netsnmpapi"
        ],
        "version": "0.6.0"
    },
    "netspeed": {
        "cmdline": [
            "netspeed"
        ],
        "modules": [
            "netspeed",
            "netspeed.core",
            "netspeed.core.config",
            "netspeed.core.iface",
            "netspeed.core.optionparse",
            "netspeed.core.switchmode",
            "netspeed.ui",
            "netspeed.ui.console"
        ],
        "version": "1.0.0"
    },
    "netstat-cl": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "netster": {
        "cmdline": [],
        "modules": [
            "netster"
        ],
        "version": "1.3.0"
    },
    "netstorage": {
        "cmdline": [],
        "modules": [
            "netstorage",
            "netstorage.auth",
            "netstorage.exceptions",
            "netstorage.models",
            "netstorage.netstorage",
            "netstorage.parsers",
            "netstorage.session",
            "netstorage.utils"
        ],
        "version": "0.0.91"
    },
    "netstorageapi": {
        "cmdline": [],
        "modules": [
            "akamai",
            "akamai.netstorage",
            "akamai.netstorage.netstorage"
        ],
        "version": "1.2.7"
    },
    "netstoragekit": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.8"
    },
    "netstr": {
        "cmdline": [],
        "modules": [
            "netstr"
        ],
        "version": "1.0.0"
    },
    "netstream": {
        "cmdline": [],
        "modules": [
            "netstream",
            "netstream.encoders",
            "netstream.sender",
            "netstream.transports",
            "netstream.varint"
        ],
        "version": "0.1"
    },
    "netstring": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "netstruct": {
        "cmdline": [],
        "modules": [
            "netstruct"
        ],
        "version": "1.1.2"
    },
    "netsu": {
        "cmdline": [],
        "modules": [
            "netsu",
            "netsu.core",
            "netsu.core.configurator",
            "netsu.core.data",
            "netsu.core.errors",
            "netsu.core.interface",
            "netsu.core.plugins",
            "netsu.core.utils",
            "netsu.core.validation",
            "netsu.service",
            "netsu.service.app",
            "netsu.service.netsuctl",
            "netsu.service.wsgi"
        ],
        "version": "0.1.1.dev1"
    },
    "netsu-plugin-connectivitycheck": {
        "cmdline": [],
        "modules": [
            "netsu_plugin_connectivitycheck",
            "netsu_plugin_connectivitycheck.definitions",
            "netsu_plugin_connectivitycheck.setup"
        ],
        "version": "0.1.0"
    },
    "netsu-plugin-networkmanager": {
        "cmdline": [],
        "modules": [
            "netsu_plugin_networkmanager",
            "netsu_plugin_networkmanager.bond",
            "netsu_plugin_networkmanager.bond.config",
            "netsu_plugin_networkmanager.bond.config_definitions",
            "netsu_plugin_networkmanager.bond.setup",
            "netsu_plugin_networkmanager.bond.state",
            "netsu_plugin_networkmanager.bond.state_definitions",
            "netsu_plugin_networkmanager.bridge",
            "netsu_plugin_networkmanager.bridge.config",
            "netsu_plugin_networkmanager.bridge.config_definitions",
            "netsu_plugin_networkmanager.bridge.setup",
            "netsu_plugin_networkmanager.bridge.state",
            "netsu_plugin_networkmanager.bridge.state_definitions",
            "netsu_plugin_networkmanager.ethernet",
            "netsu_plugin_networkmanager.ethernet.config",
            "netsu_plugin_networkmanager.ethernet.config_definitions",
            "netsu_plugin_networkmanager.ethernet.setup",
            "netsu_plugin_networkmanager.ethernet.state",
            "netsu_plugin_networkmanager.ethernet.state_definitions",
            "netsu_plugin_networkmanager.utils",
            "netsu_plugin_networkmanager.utils.label",
            "netsu_plugin_networkmanager.utils.label_definitions",
            "netsu_plugin_networkmanager.utils.nmcli",
            "netsu_plugin_networkmanager.utils_ip",
            "netsu_plugin_networkmanager.utils_ip.definitions",
            "netsu_plugin_networkmanager.utils_ip.parser",
            "netsu_plugin_networkmanager.utils_ip.setup",
            "netsu_plugin_networkmanager.vlan",
            "netsu_plugin_networkmanager.vlan.config",
            "netsu_plugin_networkmanager.vlan.config_definitions",
            "netsu_plugin_networkmanager.vlan.setup",
            "netsu_plugin_networkmanager.vlan.state",
            "netsu_plugin_networkmanager.vlan.state_definitions"
        ],
        "version": "0.1.1"
    },
    "netsyslog": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nett-tv-nom": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.4"
    },
    "nettest": {
        "cmdline": [],
        "modules": [
            "nettest"
        ],
        "version": "1.2.0"
    },
    "netticapy": {
        "cmdline": [],
        "modules": [
            "netticapy",
            "netticapy.api"
        ],
        "version": "1.1"
    },
    "nettraffic": {
        "cmdline": [],
        "modules": [
            "nettraffic"
        ],
        "version": "0.0.2"
    },
    "netuitive": {
        "cmdline": [],
        "modules": [
            "netuitive",
            "netuitive.attribute",
            "netuitive.client",
            "netuitive.element",
            "netuitive.event",
            "netuitive.metric",
            "netuitive.relation",
            "netuitive.sample",
            "netuitive.tag",
            "netuitive.util"
        ],
        "version": "0.2.3"
    },
    "netutils-linux": {
        "cmdline": [
            "autorps",
            "autotune-reductor",
            "detect_virt.py",
            "irqtop",
            "link-rate",
            "maximize-cpu-freq",
            "missed-pkts-monitor",
            "pcap-tcp-stream",
            "rss-ladder",
            "rx-buffers-increase",
            "server-info",
            "server-info-collect",
            "server-info-rate",
            "server-info-show",
            "softirq-net-rx-top",
            "softnet-stat-top"
        ],
        "modules": [
            "netutils_linux_hardware",
            "netutils_linux_hardware.interrupts",
            "netutils_linux_hardware.netdev",
            "netutils_linux_hardware.parsers",
            "netutils_linux_hardware.reader"
        ],
        "version": "1.1.5"
    },
    "netvisor": {
        "cmdline": [],
        "modules": [
            "netvisor",
            "netvisor._compat",
            "netvisor.auth",
            "netvisor.client",
            "netvisor.core",
            "netvisor.exc",
            "netvisor.requests",
            "netvisor.requests.accounting",
            "netvisor.requests.base",
            "netvisor.requests.company",
            "netvisor.requests.customer",
            "netvisor.requests.product",
            "netvisor.requests.sales_invoice",
            "netvisor.requests.sales_payment",
            "netvisor.responses",
            "netvisor.responses.accounting",
            "netvisor.responses.base",
            "netvisor.responses.companies",
            "netvisor.responses.customers",
            "netvisor.responses.products",
            "netvisor.responses.sales_invoices",
            "netvisor.responses.sales_payments",
            "netvisor.schemas",
            "netvisor.schemas.accounting",
            "netvisor.schemas.accounting.list",
            "netvisor.schemas.common",
            "netvisor.schemas.companies",
            "netvisor.schemas.companies.get",
            "netvisor.schemas.companies.list",
            "netvisor.schemas.customers",
            "netvisor.schemas.customers.create",
            "netvisor.schemas.customers.get",
            "netvisor.schemas.customers.list",
            "netvisor.schemas.fields",
            "netvisor.schemas.products",
            "netvisor.schemas.products.get",
            "netvisor.schemas.products.list",
            "netvisor.schemas.replies",
            "netvisor.schemas.sales_invoices",
            "netvisor.schemas.sales_invoices.create",
            "netvisor.schemas.sales_invoices.get",
            "netvisor.schemas.sales_invoices.list",
            "netvisor.schemas.sales_payments",
            "netvisor.schemas.sales_payments.list",
            "netvisor.services",
            "netvisor.services.accounting",
            "netvisor.services.base",
            "netvisor.services.company",
            "netvisor.services.customer",
            "netvisor.services.product",
            "netvisor.services.sales_invoice",
            "netvisor.services.sales_payment",
            "tests",
            "tests.services",
            "tests.services.conftest",
            "tests.services.test_accounting",
            "tests.services.test_company",
            "tests.services.test_customer",
            "tests.services.test_product",
            "tests.services.test_sales_invoice",
            "tests.services.test_sales_payment",
            "tests.test_auth",
            "tests.utils"
        ],
        "version": "0.7.0"
    },
    "netwaves": {
        "cmdline": [
            "netwaves.py"
        ],
        "modules": [],
        "version": "0.0.2"
    },
    "netwell": {
        "cmdline": [],
        "modules": [
            "netwell",
            "netwell.checkers",
            "netwell.command"
        ],
        "version": "0.2.0"
    },
    "network": {
        "cmdline": [],
        "modules": [
            "network"
        ],
        "version": "0.1"
    },
    "network-checker": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "network-dict": {
        "cmdline": [],
        "modules": [
            "network_dict"
        ],
        "version": "0.1"
    },
    "network-docopt": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.10"
    },
    "network-finder": {
        "cmdline": [],
        "modules": [
            "network_finder",
            "network_finder.network_finder"
        ],
        "version": "0.4"
    },
    "network-interfaces": {
        "cmdline": [],
        "modules": [
            "network_interfaces",
            "network_interfaces.constants",
            "network_interfaces.helpers",
            "network_interfaces.iface",
            "network_interfaces.interface_file",
            "network_interfaces.source",
            "network_interfaces.stanza",
            "network_interfaces.startup"
        ],
        "version": "0.1.5"
    },
    "network-meeting-example-101": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "network-meeting-example-banwait": {
        "cmdline": [
            "runner_for_rogers"
        ],
        "modules": [
            "rogers",
            "rogers.command_line",
            "rogers.file_handle",
            "rogers.ignore_this_file",
            "rogers.neighborhood"
        ],
        "version": "2.0.501"
    },
    "network-meeting-example-bhulsebusch": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "network-meeting-example-karl": {
        "cmdline": [
            "runner_for_rogers"
        ],
        "modules": [
            "rogers",
            "rogers.command_line",
            "rogers.file_handle",
            "rogers.ignore_this_file",
            "rogers.neighborhood"
        ],
        "version": "2.0.501"
    },
    "network-meeting-example-kg": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "network-meeting-example-mellen": {
        "cmdline": [
            "runner_for_rogers"
        ],
        "modules": [
            "rogers",
            "rogers.command_line",
            "rogers.file_handle",
            "rogers.ignore_this_file",
            "rogers.neighborhood"
        ],
        "version": "2.0.501"
    },
    "network-meeting-example-tony": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "network-meeting-example-wayne": {
        "cmdline": [
            "runner_for_rogers"
        ],
        "modules": [
            "rogers",
            "rogers.command_line",
            "rogers.file_handle",
            "rogers.ignore_this_file",
            "rogers.neighborhood"
        ],
        "version": "2.0.501.1.1"
    },
    "network-monitor": {
        "cmdline": [],
        "modules": [
            "agent",
            "agent.main",
            "agent.networkStatus",
            "agent.ntpClient",
            "agent.restClient"
        ],
        "version": "0.1.12"
    },
    "network-tester": {
        "cmdline": [],
        "modules": [
            "network_tester",
            "network_tester.commands",
            "network_tester.counters",
            "network_tester.errors",
            "network_tester.experiment",
            "network_tester.results",
            "network_tester.version"
        ],
        "version": "1.0.2"
    },
    "networkconfgen": {
        "cmdline": [],
        "modules": [
            "networkconfgen",
            "networkconfgen.base",
            "networkconfgen.constants",
            "networkconfgen.custom_filters"
        ],
        "version": "0.1.0"
    },
    "networkdevice": {
        "cmdline": [
            "ftp_test.py"
        ],
        "modules": [
            "networkdevice",
            "networkdevice.cisco",
            "networkdevice.junos",
            "networkdevice.linux"
        ],
        "version": "0.4"
    },
    "networking-ac": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "networking-ale-omniswitch": {
        "cmdline": [],
        "modules": [
            "networking_ale_omniswitch",
            "networking_ale_omniswitch.config",
            "networking_ale_omniswitch.consumer",
            "networking_ale_omniswitch.omniswitch_constants",
            "networking_ale_omniswitch.omniswitch_device_plugin",
            "networking_ale_omniswitch.omniswitch_mechanism_driver",
            "networking_ale_omniswitch.omniswitch_restful_driver",
            "networking_ale_omniswitch.omniswitch_telnet_driver",
            "networking_ale_omniswitch.tests",
            "networking_ale_omniswitch.tests.base",
            "networking_ale_omniswitch.tests.test_networking_ale_omniswitch",
            "networking_ale_omniswitch.tests.unit",
            "networking_ale_omniswitch.tests.unit.omniswitch_restful_driver_test",
            "networking_ale_omniswitch.tests.unit.omniswitch_telnet_driver_test",
            "networking_ale_omniswitch.tests.unit.test_omniswitch_device_plugin",
            "networking_ale_omniswitch.tests.unit.test_omniswitch_restful_driver",
            "networking_ale_omniswitch.tests.unit.test_omniswitch_telnet_driver"
        ],
        "version": "2015.1.2"
    },
    "networking-arista": {
        "cmdline": [],
        "modules": [],
        "version": "2017.1.1"
    },
    "networking-avaya": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "networking-bagpipe": {
        "cmdline": [],
        "modules": [],
        "version": "7.0.0.0b1"
    },
    "networking-bagpipe-l2": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "networking-baremetal": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "networking-bgpvpn": {
        "cmdline": [],
        "modules": [],
        "version": "7.0.0.0b1"
    },
    "networking-bigswitch": {
        "cmdline": [],
        "modules": [],
        "version": "10.0.6"
    },
    "networking-bigswitch-l3-pe": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "networking-brocade": {
        "cmdline": [],
        "modules": [],
        "version": "2015.1.1.dev55"
    },
    "networking-calico": {
        "cmdline": [],
        "modules": [],
        "version": "1.4.2"
    },
    "networking-cisco": {
        "cmdline": [],
        "modules": [],
        "version": "5.0.0"
    },
    "networking-cumulus": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "networking-dpm": {
        "cmdline": [],
        "modules": [],
        "version": "2.0.0.0b1"
    },
    "networking-fortinet": {
        "cmdline": [],
        "modules": [
            "networking_fortinet",
            "networking_fortinet._i18n",
            "networking_fortinet.api_client",
            "networking_fortinet.api_client.base",
            "networking_fortinet.api_client.client",
            "networking_fortinet.api_client.constants",
            "networking_fortinet.api_client.eventlet_client",
            "networking_fortinet.api_client.eventlet_request",
            "networking_fortinet.api_client.exception",
            "networking_fortinet.api_client.request",
            "networking_fortinet.api_client.templates",
            "networking_fortinet.common",
            "networking_fortinet.common.config",
            "networking_fortinet.common.constants",
            "networking_fortinet.common.resources",
            "networking_fortinet.common.singleton",
            "networking_fortinet.common.utils",
            "networking_fortinet.db",
            "networking_fortinet.db.migration",
            "networking_fortinet.db.migration.alembic_migrations",
            "networking_fortinet.db.migration.alembic_migrations.env",
            "networking_fortinet.db.models",
            "networking_fortinet.ml2",
            "networking_fortinet.ml2.mech_fortinet",
            "networking_fortinet.services",
            "networking_fortinet.services.firewall",
            "networking_fortinet.services.firewall.fortinet_fwaas_plugin",
            "networking_fortinet.services.l3_router",
            "networking_fortinet.services.l3_router.l3_fortinet",
            "networking_fortinet.tasks",
            "networking_fortinet.tasks.constants",
            "networking_fortinet.tasks.tasks",
            "networking_fortinet.tests",
            "networking_fortinet.tests.common",
            "networking_fortinet.tests.common.utils",
            "networking_fortinet.tests.functional",
            "networking_fortinet.tests.functional.api_client",
            "networking_fortinet.tests.functional.api_client.test_templates",
            "networking_fortinet.tests.tempest_plugin",
            "networking_fortinet.tests.tempest_plugin.config",
            "networking_fortinet.tests.tempest_plugin.plugin",
            "networking_fortinet.tests.tempest_plugin.services",
            "networking_fortinet.tests.tempest_plugin.services.client",
            "networking_fortinet.tests.tempest_plugin.tests",
            "networking_fortinet.tests.tempest_plugin.tests.api",
            "networking_fortinet.tests.tempest_plugin.tests.api.base",
            "networking_fortinet.tests.tempest_plugin.tests.api.test_fwaas_extensions",
            "networking_fortinet.tests.tempest_plugin.tests.fwaas_client",
            "networking_fortinet.tests.tempest_plugin.tests.scenario",
            "networking_fortinet.tests.tempest_plugin.tests.scenario.base",
            "networking_fortinet.tests.tempest_plugin.tests.scenario.test_fwaas",
            "networking_fortinet.tests.unit",
            "networking_fortinet.tests.unit.api_client",
            "networking_fortinet.tests.unit.api_client.test_api_eventlet_request",
            "networking_fortinet.tests.unit.api_client.test_client",
            "networking_fortinet.tests.unit.tasks",
            "networking_fortinet.tests.unit.tasks.test_tasks",
            "networking_fortinet.tests.unit.test_fortinet_common",
            "networking_fortinet.tests.unit.test_fortinet_mechanism_driver",
            "networking_fortinet.tools",
            "networking_fortinet.tools.migration"
        ],
        "version": "1.1.3"
    },
    "networking-freescale": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "networking-fujitsu": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "networking-generic-switch": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.0"
    },
    "networking-h3c": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "networking-hpe": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "networking-huawei": {
        "cmdline": [],
        "modules": [
            "networking_huawei",
            "networking_huawei._i18n",
            "networking_huawei.common",
            "networking_huawei.common.constants",
            "networking_huawei.common.exceptions",
            "networking_huawei.drivers",
            "networking_huawei.drivers.ac",
            "networking_huawei.drivers.ac.client",
            "networking_huawei.drivers.ac.client.restclient",
            "networking_huawei.drivers.ac.client.service",
            "networking_huawei.drivers.ac.common",
            "networking_huawei.drivers.ac.common.config",
            "networking_huawei.drivers.ac.plugins",
            "networking_huawei.drivers.ac.plugins.l3",
            "networking_huawei.drivers.ac.plugins.l3.driver",
            "networking_huawei.drivers.ac.plugins.ml2",
            "networking_huawei.drivers.ac.plugins.ml2.driver",
            "networking_huawei.drivers.dummy",
            "networking_huawei.drivers.dummy.common",
            "networking_huawei.drivers.dummy.common.config",
            "networking_huawei.opts",
            "networking_huawei.tests",
            "networking_huawei.tests.unit",
            "networking_huawei.tests.unit.drivers",
            "networking_huawei.tests.unit.drivers.ac",
            "networking_huawei.tests.unit.drivers.ac.client",
            "networking_huawei.tests.unit.drivers.ac.client.test_restclient",
            "networking_huawei.tests.unit.drivers.ac.client.test_service",
            "networking_huawei.tests.unit.drivers.ac.plugin",
            "networking_huawei.tests.unit.drivers.ac.plugin.l3",
            "networking_huawei.tests.unit.drivers.ac.plugin.l3.test_driver",
            "networking_huawei.tests.unit.drivers.ac.plugin.ml2",
            "networking_huawei.tests.unit.drivers.ac.plugin.ml2.test_driver"
        ],
        "version": "1.0.0"
    },
    "networking-huawei1": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "networking-hyperv": {
        "cmdline": [],
        "modules": [
            "hyperv",
            "hyperv.common",
            "hyperv.common.i18n",
            "hyperv.neutron",
            "hyperv.neutron.constants",
            "hyperv.neutron.hyperv_neutron_agent",
            "hyperv.neutron.ml2",
            "hyperv.neutron.ml2.mech_hyperv",
            "hyperv.neutron.security_groups_driver",
            "hyperv.neutron.utils",
            "hyperv.neutron.utilsfactory",
            "hyperv.neutron.utilsv2",
            "hyperv.tests",
            "hyperv.tests.base",
            "hyperv.tests.unit",
            "hyperv.tests.unit.neutron",
            "hyperv.tests.unit.neutron.test_hyperv_neutron_agent",
            "hyperv.tests.unit.neutron.test_security_groups_driver",
            "hyperv.tests.unit.neutron.test_utils",
            "hyperv.tests.unit.neutron.test_utilsfactory",
            "hyperv.tests.unit.neutron.test_utilsv2"
        ],
        "version": "2015.1.0"
    },
    "networking-icc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "networking-infoblox": {
        "cmdline": [],
        "modules": [],
        "version": "9.0.0"
    },
    "networking-l2gw": {
        "cmdline": [],
        "modules": [
            "networking_l2gw",
            "networking_l2gw._i18n",
            "networking_l2gw.cmd",
            "networking_l2gw.cmd.eventlet",
            "networking_l2gw.cmd.eventlet.agent",
            "networking_l2gw.db",
            "networking_l2gw.db.l2gateway",
            "networking_l2gw.db.l2gateway.db_query",
            "networking_l2gw.db.l2gateway.l2gateway_db",
            "networking_l2gw.db.l2gateway.l2gateway_models",
            "networking_l2gw.db.l2gateway.ovsdb",
            "networking_l2gw.db.l2gateway.ovsdb.lib",
            "networking_l2gw.db.l2gateway.ovsdb.models",
            "networking_l2gw.db.migration",
            "networking_l2gw.db.migration.alembic_migrations",
            "networking_l2gw.db.migration.alembic_migrations.env",
            "networking_l2gw.db.migration.alembic_migrations.versions",
            "networking_l2gw.db.migration.alembic_migrations.versions.42438454c556_l2gateway_models",
            "networking_l2gw.db.migration.alembic_migrations.versions.54c9c8fe22bf_db_models_for_ovsdb_hardware_vtep_schema",
            "networking_l2gw.db.migration.alembic_migrations.versions.kilo_release",
            "networking_l2gw.db.migration.alembic_migrations.versions.start_networking_l2gw",
            "networking_l2gw.extensions",
            "networking_l2gw.extensions.l2gateway",
            "networking_l2gw.extensions.l2gatewayconnection",
            "networking_l2gw.l2gatewayclient",
            "networking_l2gw.l2gatewayclient.l2gw_client_ext",
            "networking_l2gw.l2gatewayclient.l2gw_client_ext._l2_gateway",
            "networking_l2gw.l2gatewayclient.l2gw_client_ext._l2_gateway_connection",
            "networking_l2gw.services",
            "networking_l2gw.services.l2gateway",
            "networking_l2gw.services.l2gateway.agent",
            "networking_l2gw.services.l2gateway.agent.agent_api",
            "networking_l2gw.services.l2gateway.agent.base_agent_manager",
            "networking_l2gw.services.l2gateway.agent.l2gateway_config",
            "networking_l2gw.services.l2gateway.agent.ovsdb",
            "networking_l2gw.services.l2gateway.agent.ovsdb.base_connection",
            "networking_l2gw.services.l2gateway.agent.ovsdb.manager",
            "networking_l2gw.services.l2gateway.agent.ovsdb.ovsdb_common_class",
            "networking_l2gw.services.l2gateway.agent.ovsdb.ovsdb_monitor",
            "networking_l2gw.services.l2gateway.agent.ovsdb.ovsdb_writer",
            "networking_l2gw.services.l2gateway.agent_scheduler",
            "networking_l2gw.services.l2gateway.common",
            "networking_l2gw.services.l2gateway.common.config",
            "networking_l2gw.services.l2gateway.common.constants",
            "networking_l2gw.services.l2gateway.common.l2gw_validators",
            "networking_l2gw.services.l2gateway.common.ovsdb_schema",
            "networking_l2gw.services.l2gateway.common.topics",
            "networking_l2gw.services.l2gateway.common.tunnel_calls",
            "networking_l2gw.services.l2gateway.exceptions",
            "networking_l2gw.services.l2gateway.l2gw_agent",
            "networking_l2gw.services.l2gateway.ovsdb",
            "networking_l2gw.services.l2gateway.ovsdb.data",
            "networking_l2gw.services.l2gateway.plugin",
            "networking_l2gw.services.l2gateway.service_drivers",
            "networking_l2gw.services.l2gateway.service_drivers.agent_api",
            "networking_l2gw.services.l2gateway.service_drivers.rpc_l2gw",
            "networking_l2gw.tests",
            "networking_l2gw.tests.api",
            "networking_l2gw.tests.api.base_l2gw",
            "networking_l2gw.tests.api.test_l2gw_extensions",
            "networking_l2gw.tests.api.test_l2gw_negative",
            "networking_l2gw.tests.scenario",
            "networking_l2gw.tests.scenario.ovsdb_connections",
            "networking_l2gw.tests.scenario.test_l2gateways",
            "networking_l2gw.tests.tempest",
            "networking_l2gw.tests.tempest.config",
            "networking_l2gw.tests.unit",
            "networking_l2gw.tests.unit.db",
            "networking_l2gw.tests.unit.db.ovsdb",
            "networking_l2gw.tests.unit.db.ovsdb.test_lib",
            "networking_l2gw.tests.unit.db.test_l2gw_db",
            "networking_l2gw.tests.unit.l2gatewayclient",
            "networking_l2gw.tests.unit.l2gatewayclient.test_cli20",
            "networking_l2gw.tests.unit.l2gatewayclient.test_cli20_l2gw_conn_ext",
            "networking_l2gw.tests.unit.l2gatewayclient.test_cli20_l2gw_ext",
            "networking_l2gw.tests.unit.services",
            "networking_l2gw.tests.unit.services.l2gateway",
            "networking_l2gw.tests.unit.services.l2gateway.agent",
            "networking_l2gw.tests.unit.services.l2gateway.agent.ovsdb",
            "networking_l2gw.tests.unit.services.l2gateway.agent.ovsdb.test_base_connection",
            "networking_l2gw.tests.unit.services.l2gateway.agent.ovsdb.test_manager",
            "networking_l2gw.tests.unit.services.l2gateway.agent.ovsdb.test_ovsdb_monitor",
            "networking_l2gw.tests.unit.services.l2gateway.agent.ovsdb.test_ovsdb_writer",
            "networking_l2gw.tests.unit.services.l2gateway.agent.test_agent_api",
            "networking_l2gw.tests.unit.services.l2gateway.agent.test_base_agent_manager",
            "networking_l2gw.tests.unit.services.l2gateway.agent.test_l2gw_agent",
            "networking_l2gw.tests.unit.services.l2gateway.common",
            "networking_l2gw.tests.unit.services.l2gateway.common.test_l2gw_validators",
            "networking_l2gw.tests.unit.services.l2gateway.common.test_tunnel_calls",
            "networking_l2gw.tests.unit.services.l2gateway.ovsdb",
            "networking_l2gw.tests.unit.services.l2gateway.ovsdb.test_data",
            "networking_l2gw.tests.unit.services.l2gateway.service_drivers",
            "networking_l2gw.tests.unit.services.l2gateway.service_drivers.test_agent_api",
            "networking_l2gw.tests.unit.services.l2gateway.service_drivers.test_rpc_l2gw",
            "networking_l2gw.tests.unit.services.l2gateway.test_agent_scheduler",
            "networking_l2gw.tests.unit.services.l2gateway.test_plugin"
        ],
        "version": "2016.1.0"
    },
    "networking-lenovo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "networking-midonet": {
        "cmdline": [],
        "modules": [
            "midonet",
            "midonet.neutron",
            "midonet.neutron.agent",
            "midonet.neutron.agent.midonet_driver",
            "midonet.neutron.client",
            "midonet.neutron.client.api",
            "midonet.neutron.client.base",
            "midonet.neutron.client.cluster",
            "midonet.neutron.common",
            "midonet.neutron.common.config",
            "midonet.neutron.common.constants",
            "midonet.neutron.common.exceptions",
            "midonet.neutron.common.util",
            "midonet.neutron.db",
            "midonet.neutron.db.agent_membership_db",
            "midonet.neutron.db.data_state_db",
            "midonet.neutron.db.data_version_db",
            "midonet.neutron.db.loadbalancer_db",
            "midonet.neutron.db.migration",
            "midonet.neutron.db.migration.alembic_migration",
            "midonet.neutron.db.migration.alembic_migration.env",
            "midonet.neutron.db.migration.cli",
            "midonet.neutron.db.port_binding_db",
            "midonet.neutron.db.provider_network_db",
            "midonet.neutron.db.task_db",
            "midonet.neutron.extensions",
            "midonet.neutron.extensions.agent_membership",
            "midonet.neutron.ml2",
            "midonet.neutron.ml2.mech_driver",
            "midonet.neutron.ml2.sg_callback",
            "midonet.neutron.ml2.type_midonet",
            "midonet.neutron.ml2.type_uplink",
            "midonet.neutron.ml2.util",
            "midonet.neutron.plugin",
            "midonet.neutron.plugin_v1",
            "midonet.neutron.plugin_v2",
            "midonet.neutron.rpc",
            "midonet.neutron.rpc.topology_client",
            "midonet.neutron.services",
            "midonet.neutron.services.firewall",
            "midonet.neutron.services.firewall.plugin",
            "midonet.neutron.services.l3",
            "midonet.neutron.services.l3.l3_midonet",
            "midonet.neutron.services.loadbalancer",
            "midonet.neutron.services.loadbalancer.driver",
            "midonet.neutron.tests",
            "midonet.neutron.tests.unit",
            "midonet.neutron.tests.unit.test_extension_agent_membership",
            "midonet.neutron.tests.unit.test_extension_fwaas",
            "midonet.neutron.tests.unit.test_extension_lbaas",
            "midonet.neutron.tests.unit.test_midonet_plugin",
            "midonet.neutron.tests.unit.test_midonet_plugin_ml2",
            "midonet.neutron.tests.unit.test_midonet_plugin_v2",
            "midonet.neutron.tests.unit.test_midonet_type_driver",
            "midonet.neutron.tests.unit.test_uplink_type_driver"
        ],
        "version": "1!1.0.1"
    },
    "networking-midonet-client": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "networking-mlnx": {
        "cmdline": [],
        "modules": [
            "networking_mlnx",
            "networking_mlnx.hacking",
            "networking_mlnx.hacking.checks",
            "networking_mlnx.plugins",
            "networking_mlnx.plugins.ml2",
            "networking_mlnx.plugins.ml2.drivers",
            "networking_mlnx.plugins.ml2.drivers.mlnx",
            "networking_mlnx.plugins.ml2.drivers.mlnx.agent",
            "networking_mlnx.plugins.ml2.drivers.mlnx.agent.comm_utils",
            "networking_mlnx.plugins.ml2.drivers.mlnx.agent.constants",
            "networking_mlnx.plugins.ml2.drivers.mlnx.agent.exceptions",
            "networking_mlnx.plugins.ml2.drivers.mlnx.agent.mlnx_eswitch_neutron_agent",
            "networking_mlnx.plugins.ml2.drivers.mlnx.agent.utils",
            "networking_mlnx.plugins.ml2.drivers.mlnx.constants",
            "networking_mlnx.plugins.ml2.drivers.sdn",
            "networking_mlnx.plugins.ml2.drivers.sdn.constants",
            "networking_mlnx.plugins.ml2.drivers.sdn.sdn_mech_driver",
            "networking_mlnx.tests",
            "networking_mlnx.tests.unit",
            "networking_mlnx.tests.unit.ml2",
            "networking_mlnx.tests.unit.ml2.drivers",
            "networking_mlnx.tests.unit.ml2.drivers.test_mech_mlnx",
            "networking_mlnx.tests.unit.ml2.drivers.test_mlnx_comm_utils",
            "networking_mlnx.tests.unit.ml2.drivers.test_mlnx_neutron_agent",
            "networking_mlnx.tests.unit.ml2.test_mechanism_sdn"
        ],
        "version": "2015.1.2"
    },
    "networking-nec": {
        "cmdline": [],
        "modules": [
            "networking_nec",
            "networking_nec._i18n",
            "networking_nec.cmd",
            "networking_nec.cmd.eventlet",
            "networking_nec.cmd.eventlet.plugins",
            "networking_nec.cmd.eventlet.plugins.nec_neutron_agent",
            "networking_nec.plugins",
            "networking_nec.plugins.openflow",
            "networking_nec.plugins.openflow.agent",
            "networking_nec.plugins.openflow.agent.l2_agent",
            "networking_nec.plugins.openflow.config",
            "networking_nec.plugins.openflow.constants",
            "networking_nec.plugins.openflow.db",
            "networking_nec.plugins.openflow.db.api",
            "networking_nec.plugins.openflow.db.models",
            "networking_nec.plugins.openflow.db.packetfilter",
            "networking_nec.plugins.openflow.db.router",
            "networking_nec.plugins.openflow.drivers",
            "networking_nec.plugins.openflow.drivers.pfc",
            "networking_nec.plugins.openflow.drivers.trema",
            "networking_nec.plugins.openflow.exceptions",
            "networking_nec.plugins.openflow.extensions",
            "networking_nec.plugins.openflow.extensions.packetfilter",
            "networking_nec.plugins.openflow.extensions.router_provider",
            "networking_nec.plugins.openflow.l2manager",
            "networking_nec.plugins.openflow.ofc_client",
            "networking_nec.plugins.openflow.ofc_driver_base",
            "networking_nec.plugins.openflow.ofc_manager",
            "networking_nec.plugins.openflow.packet_filter",
            "networking_nec.plugins.openflow.plugin",
            "networking_nec.plugins.openflow.portbindings",
            "networking_nec.plugins.openflow.router",
            "networking_nec.plugins.openflow.router_drivers",
            "networking_nec.plugins.openflow.rpc",
            "networking_nec.plugins.openflow.utils",
            "networking_nec.tests",
            "networking_nec.tests.base",
            "networking_nec.tests.unit",
            "networking_nec.tests.unit.openflow",
            "networking_nec.tests.unit.openflow.fake_ofc_manager",
            "networking_nec.tests.unit.openflow.stub_ofc_driver",
            "networking_nec.tests.unit.openflow.test_agent_scheduler",
            "networking_nec.tests.unit.openflow.test_config",
            "networking_nec.tests.unit.openflow.test_db",
            "networking_nec.tests.unit.openflow.test_l2_agent",
            "networking_nec.tests.unit.openflow.test_ofc_client",
            "networking_nec.tests.unit.openflow.test_ofc_manager",
            "networking_nec.tests.unit.openflow.test_packet_filter",
            "networking_nec.tests.unit.openflow.test_pfc_driver",
            "networking_nec.tests.unit.openflow.test_plugin",
            "networking_nec.tests.unit.openflow.test_portbindings",
            "networking_nec.tests.unit.openflow.test_router",
            "networking_nec.tests.unit.openflow.test_security_group",
            "networking_nec.tests.unit.openflow.test_trema_driver",
            "networking_nec.tests.unit.openflow.test_utils"
        ],
        "version": "2015.2.0"
    },
    "networking-odl": {
        "cmdline": [],
        "modules": [
            "networking_odl",
            "networking_odl.common",
            "networking_odl.common.client",
            "networking_odl.common.config",
            "networking_odl.common.constants",
            "networking_odl.common.exceptions",
            "networking_odl.common.utils",
            "networking_odl.fwaas",
            "networking_odl.fwaas.driver",
            "networking_odl.l3",
            "networking_odl.l3.l3_odl",
            "networking_odl.lbaas",
            "networking_odl.lbaas.driver_v1",
            "networking_odl.lbaas.driver_v2",
            "networking_odl.ml2",
            "networking_odl.ml2.mech_driver",
            "networking_odl.openstack",
            "networking_odl.openstack.common",
            "networking_odl.openstack.common._i18n",
            "networking_odl.openstack.common.cache",
            "networking_odl.openstack.common.cache.backends",
            "networking_odl.openstack.common.cache.cache",
            "networking_odl.openstack.common.context",
            "networking_odl.openstack.common.eventlet_backdoor",
            "networking_odl.openstack.common.fileutils",
            "networking_odl.openstack.common.fixture",
            "networking_odl.openstack.common.fixture.logging",
            "networking_odl.openstack.common.local",
            "networking_odl.openstack.common.log",
            "networking_odl.openstack.common.loopingcall",
            "networking_odl.openstack.common.middleware",
            "networking_odl.openstack.common.middleware.catch_errors",
            "networking_odl.openstack.common.middleware.request_id",
            "networking_odl.openstack.common.periodic_task",
            "networking_odl.openstack.common.policy",
            "networking_odl.openstack.common.service",
            "networking_odl.openstack.common.systemd",
            "networking_odl.openstack.common.threadgroup",
            "networking_odl.openstack.common.uuidutils",
            "networking_odl.openstack.common.versionutils",
            "networking_odl.tests",
            "networking_odl.tests.unit",
            "networking_odl.tests.unit.db",
            "networking_odl.tests.unit.fwaas",
            "networking_odl.tests.unit.fwaas.test_fwaas_odl",
            "networking_odl.tests.unit.l3",
            "networking_odl.tests.unit.l3.test_l3_odl",
            "networking_odl.tests.unit.lbaas",
            "networking_odl.tests.unit.lbaas.test_lbaas_odl_v1",
            "networking_odl.tests.unit.lbaas.test_lbaas_odl_v2",
            "networking_odl.tests.unit.ml2",
            "networking_odl.tests.unit.ml2.test_mechanism_odl"
        ],
        "version": "2015.1.1"
    },
    "networking-ofagent": {
        "cmdline": [],
        "modules": [
            "networking_ofagent",
            "networking_ofagent.hacking",
            "networking_ofagent.hacking.checks",
            "networking_ofagent.hooks",
            "networking_ofagent.i18n",
            "networking_ofagent.plugins",
            "networking_ofagent.plugins.ml2",
            "networking_ofagent.plugins.ml2.drivers",
            "networking_ofagent.plugins.ml2.drivers.mech_ofagent",
            "networking_ofagent.plugins.ofagent",
            "networking_ofagent.plugins.ofagent.agent",
            "networking_ofagent.plugins.ofagent.agent.arp_lib",
            "networking_ofagent.plugins.ofagent.agent.constants",
            "networking_ofagent.plugins.ofagent.agent.flows",
            "networking_ofagent.plugins.ofagent.agent.main",
            "networking_ofagent.plugins.ofagent.agent.metadata",
            "networking_ofagent.plugins.ofagent.agent.monitor",
            "networking_ofagent.plugins.ofagent.agent.ofa_neutron_agent",
            "networking_ofagent.plugins.ofagent.agent.ofswitch",
            "networking_ofagent.plugins.ofagent.agent.ports",
            "networking_ofagent.plugins.ofagent.agent.tables",
            "networking_ofagent.plugins.ofagent.common",
            "networking_ofagent.plugins.ofagent.common.config",
            "networking_ofagent.tests",
            "networking_ofagent.tests.unit",
            "networking_ofagent.tests.unit.ml2",
            "networking_ofagent.tests.unit.ml2.drivers",
            "networking_ofagent.tests.unit.ml2.drivers.test_ofagent_mech",
            "networking_ofagent.tests.unit.ofagent",
            "networking_ofagent.tests.unit.ofagent.fake_oflib",
            "networking_ofagent.tests.unit.ofagent.ofa_test_base",
            "networking_ofagent.tests.unit.ofagent.test_arp_lib",
            "networking_ofagent.tests.unit.ofagent.test_monitor",
            "networking_ofagent.tests.unit.ofagent.test_ofa_flows",
            "networking_ofagent.tests.unit.ofagent.test_ofa_neutron_agent",
            "networking_ofagent.tests.unit.ofagent.test_ofa_ports",
            "networking_ofagent.tests.unit.ofagent.test_ofswitch"
        ],
        "version": "2015.1.6"
    },
    "networking-oneview": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.2"
    },
    "networking-onos": {
        "cmdline": [],
        "modules": [
            "networking_onos",
            "networking_onos.common",
            "networking_onos.common.config",
            "networking_onos.common.utils",
            "networking_onos.plugins",
            "networking_onos.plugins.l3",
            "networking_onos.plugins.l3.driver",
            "networking_onos.plugins.l3.floating_ip",
            "networking_onos.plugins.l3.router",
            "networking_onos.plugins.ml2",
            "networking_onos.plugins.ml2.driver",
            "networking_onos.tests",
            "networking_onos.tests.unit",
            "networking_onos.tests.unit.plugins",
            "networking_onos.tests.unit.plugins.l3",
            "networking_onos.tests.unit.plugins.l3.test_driver",
            "networking_onos.tests.unit.plugins.ml2",
            "networking_onos.tests.unit.plugins.ml2.test_driver"
        ],
        "version": "1.0.0"
    },
    "networking-opencontrail": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "networking-ovn": {
        "cmdline": [],
        "modules": [],
        "version": "3.0.0.0b1"
    },
    "networking-ovs-dpdk": {
        "cmdline": [],
        "modules": [
            "networking_ovs_dpdk",
            "networking_ovs_dpdk.agent",
            "networking_ovs_dpdk.agent.ovs_dpdk_firewall",
            "networking_ovs_dpdk.common",
            "networking_ovs_dpdk.common.config",
            "networking_ovs_dpdk.common.constants",
            "networking_ovs_dpdk.driver",
            "networking_ovs_dpdk.driver.mech_ovs_dpdk",
            "networking_ovs_dpdk.tests",
            "networking_ovs_dpdk.tests.unit",
            "networking_ovs_dpdk.tests.unit.driver",
            "networking_ovs_dpdk.tests.unit.driver.test_mech_dpdk_ovs"
        ],
        "version": "2.0.0"
    },
    "networking-peregrine": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "networking-plumgrid": {
        "cmdline": [],
        "modules": [],
        "version": "2016.2.6.8"
    },
    "networking-powervm": {
        "cmdline": [],
        "modules": [],
        "version": "5.0.0.0b1"
    },
    "networking-sfc": {
        "cmdline": [],
        "modules": [],
        "version": "5.0.0.0b1"
    },
    "networking-vsphere": {
        "cmdline": [],
        "modules": [
            "networking_vsphere",
            "networking_vsphere.agent",
            "networking_vsphere.agent.agent",
            "networking_vsphere.agent.ovsvapp_agent",
            "networking_vsphere.agent.ovsvapp_sg_agent",
            "networking_vsphere.common",
            "networking_vsphere.common.config",
            "networking_vsphere.common.constants",
            "networking_vsphere.common.error",
            "networking_vsphere.common.model",
            "networking_vsphere.common.utils",
            "networking_vsphere.db",
            "networking_vsphere.db.migration",
            "networking_vsphere.db.migration.alembic_migrations",
            "networking_vsphere.db.migration.alembic_migrations.env",
            "networking_vsphere.db.migration.alembic_migrations.versions",
            "networking_vsphere.db.migration.alembic_migrations.versions.3f77522fea53_ovsvapp_cluster_vni_allocations",
            "networking_vsphere.db.migration.alembic_migrations.versions.start_ovsvapp_migration",
            "networking_vsphere.db.migration.cli",
            "networking_vsphere.db.ovsvapp_db",
            "networking_vsphere.db.ovsvapp_models",
            "networking_vsphere.drivers",
            "networking_vsphere.drivers.base_manager",
            "networking_vsphere.drivers.driver",
            "networking_vsphere.drivers.dvs_driver",
            "networking_vsphere.drivers.manager",
            "networking_vsphere.drivers.ovs_firewall",
            "networking_vsphere.drivers.vc_driver",
            "networking_vsphere.ml2",
            "networking_vsphere.ml2.ovsvapp_driver",
            "networking_vsphere.ml2.ovsvapp_rpc",
            "networking_vsphere.nova",
            "networking_vsphere.nova.virt",
            "networking_vsphere.nova.virt.vmwareapi",
            "networking_vsphere.nova.virt.vmwareapi.ovsvapp_vc_driver",
            "networking_vsphere.service",
            "networking_vsphere.tests",
            "networking_vsphere.tests.base",
            "networking_vsphere.tests.unit",
            "networking_vsphere.tests.unit.agent",
            "networking_vsphere.tests.unit.agent.test_agent",
            "networking_vsphere.tests.unit.agent.test_ovsvapp_agent",
            "networking_vsphere.tests.unit.agent.test_ovsvapp_sg_agent",
            "networking_vsphere.tests.unit.common",
            "networking_vsphere.tests.unit.common.test_model",
            "networking_vsphere.tests.unit.common.test_utils",
            "networking_vsphere.tests.unit.drivers",
            "networking_vsphere.tests.unit.drivers.fake_driver",
            "networking_vsphere.tests.unit.drivers.fake_manager",
            "networking_vsphere.tests.unit.drivers.test_base_manager",
            "networking_vsphere.tests.unit.drivers.test_driver",
            "networking_vsphere.tests.unit.drivers.test_dvs_driver",
            "networking_vsphere.tests.unit.drivers.test_manager",
            "networking_vsphere.tests.unit.drivers.test_ovs_firewall",
            "networking_vsphere.tests.unit.drivers.test_vc_driver",
            "networking_vsphere.tests.unit.ml2",
            "networking_vsphere.tests.unit.ml2.test_ovsvapp_db",
            "networking_vsphere.tests.unit.ml2.test_ovsvapp_driver",
            "networking_vsphere.tests.unit.ml2.test_ovsvapp_mech_driver",
            "networking_vsphere.tests.unit.ml2.test_ovsvapp_rpc",
            "networking_vsphere.tests.unit.utils",
            "networking_vsphere.tests.unit.utils.fake_vmware_api",
            "networking_vsphere.tests.unit.utils.stubs",
            "networking_vsphere.tests.unit.utils.test_cache",
            "networking_vsphere.tests.unit.utils.test_error_util",
            "networking_vsphere.tests.unit.utils.test_network_util",
            "networking_vsphere.tests.unit.utils.test_resource_util",
            "networking_vsphere.tests.unit.utils.test_session",
            "networking_vsphere.tests.unit.utils.test_vim_util",
            "networking_vsphere.utils",
            "networking_vsphere.utils.cache",
            "networking_vsphere.utils.common_util",
            "networking_vsphere.utils.error_util",
            "networking_vsphere.utils.network_util",
            "networking_vsphere.utils.resource_util",
            "networking_vsphere.utils.vim_session",
            "networking_vsphere.utils.vim_util"
        ],
        "version": "2015.1.1"
    },
    "networking-wan": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "networking-zte": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "networkit": {
        "cmdline": [],
        "modules": [
            "networkit",
            "networkit.GEXFIO",
            "networkit.GraphMLIO",
            "networkit.algebraic",
            "networkit.centrality",
            "networkit.clique",
            "networkit.coarsening",
            "networkit.coloring",
            "networkit.community",
            "networkit.components",
            "networkit.correlation",
            "networkit.distance",
            "networkit.dynamic",
            "networkit.engineering",
            "networkit.flow",
            "networkit.generators",
            "networkit.gephi",
            "networkit.gephi.csv",
            "networkit.gephi.pyclient",
            "networkit.gephi.streaming",
            "networkit.globals",
            "networkit.graph",
            "networkit.graphio",
            "networkit.linkprediction",
            "networkit.matching",
            "networkit.nxadapter",
            "networkit.partitioning",
            "networkit.plot",
            "networkit.profiling",
            "networkit.profiling.job",
            "networkit.profiling.multiprocessing_helper",
            "networkit.profiling.plot",
            "networkit.profiling.profiling",
            "networkit.profiling.stat",
            "networkit.sampling",
            "networkit.scd",
            "networkit.simulation",
            "networkit.sparsification",
            "networkit.stats",
            "networkit.stopwatch",
            "networkit.structures",
            "networkit.test",
            "networkit.test.extension",
            "networkit.test.extension.test",
            "networkit.test.gephi",
            "networkit.test.test_algorithms",
            "networkit.test.test_community",
            "networkit.test.test_graphio",
            "networkit.test.test_sparsification",
            "networkit.viz",
            "networkit.viztasks",
            "networkit.workflows"
        ],
        "version": "4.2"
    },
    "networkl": {
        "cmdline": [],
        "modules": [
            "networkl",
            "networkl.dynamic_shortes_path_length",
            "networkl.exception",
            "networkl.sparse_geodesic_matrix"
        ],
        "version": "0.2.13"
    },
    "networkutil": {
        "cmdline": [],
        "modules": [
            "networkutil",
            "networkutil._metadata",
            "networkutil.addressing",
            "networkutil.device_config",
            "networkutil.endpoint_config",
            "networkutil.ftp_helper",
            "networkutil.generate_requests_pem_for_windows",
            "networkutil.gui",
            "networkutil.gui.api_frame",
            "networkutil.gui.api_window",
            "networkutil.gui.endpoint_config_launcher_frame",
            "networkutil.gui.endpoint_config_launcher_window",
            "networkutil.gui.endpoint_frame",
            "networkutil.gui.endpoint_window",
            "networkutil.gui.environments_frame",
            "networkutil.gui.environments_window",
            "networkutil.gui.ip_widget",
            "networkutil.gui.jumpbox_frame",
            "networkutil.gui.pickler_frame",
            "networkutil.gui.run_networkutil_gui",
            "networkutil.http_download",
            "networkutil.jumpbox",
            "networkutil.mail",
            "networkutil.mail.outlook",
            "networkutil.mail.smtp",
            "networkutil.port_forward",
            "networkutil.resources",
            "networkutil.resources.mac_port_forward",
            "networkutil.resources.schema",
            "networkutil.resources.templates",
            "networkutil.scp_client",
            "networkutil.sftp",
            "networkutil.telnet",
            "networkutil.unittests",
            "networkutil.unittests.test_example_module",
            "networkutil.validation"
        ],
        "version": "1.8.3"
    },
    "networkx": {
        "cmdline": [],
        "modules": [
            "networkx",
            "networkx.algorithms",
            "networkx.algorithms.approximation",
            "networkx.algorithms.approximation.clique",
            "networkx.algorithms.approximation.clustering_coefficient",
            "networkx.algorithms.approximation.connectivity",
            "networkx.algorithms.approximation.dominating_set",
            "networkx.algorithms.approximation.independent_set",
            "networkx.algorithms.approximation.kcomponents",
            "networkx.algorithms.approximation.matching",
            "networkx.algorithms.approximation.ramsey",
            "networkx.algorithms.approximation.vertex_cover",
            "networkx.algorithms.assortativity",
            "networkx.algorithms.assortativity.connectivity",
            "networkx.algorithms.assortativity.correlation",
            "networkx.algorithms.assortativity.mixing",
            "networkx.algorithms.assortativity.neighbor_degree",
            "networkx.algorithms.assortativity.pairs",
            "networkx.algorithms.bipartite",
            "networkx.algorithms.bipartite.basic",
            "networkx.algorithms.bipartite.centrality",
            "networkx.algorithms.bipartite.cluster",
            "networkx.algorithms.bipartite.edgelist",
            "networkx.algorithms.bipartite.generators",
            "networkx.algorithms.bipartite.matching",
            "networkx.algorithms.bipartite.matrix",
            "networkx.algorithms.bipartite.projection",
            "networkx.algorithms.bipartite.redundancy",
            "networkx.algorithms.bipartite.spectral",
            "networkx.algorithms.block",
            "networkx.algorithms.boundary",
            "networkx.algorithms.centrality",
            "networkx.algorithms.centrality.betweenness",
            "networkx.algorithms.centrality.betweenness_subset",
            "networkx.algorithms.centrality.closeness",
            "networkx.algorithms.centrality.communicability_alg",
            "networkx.algorithms.centrality.current_flow_betweenness",
            "networkx.algorithms.centrality.current_flow_betweenness_subset",
            "networkx.algorithms.centrality.current_flow_closeness",
            "networkx.algorithms.centrality.degree_alg",
            "networkx.algorithms.centrality.dispersion",
            "networkx.algorithms.centrality.eigenvector",
            "networkx.algorithms.centrality.flow_matrix",
            "networkx.algorithms.centrality.harmonic",
            "networkx.algorithms.centrality.katz",
            "networkx.algorithms.centrality.load",
            "networkx.algorithms.chordal",
            "networkx.algorithms.chordal.chordal_alg",
            "networkx.algorithms.clique",
            "networkx.algorithms.cluster",
            "networkx.algorithms.coloring",
            "networkx.algorithms.coloring.greedy_coloring",
            "networkx.algorithms.coloring.greedy_coloring_with_interchange",
            "networkx.algorithms.community",
            "networkx.algorithms.community.kclique",
            "networkx.algorithms.components",
            "networkx.algorithms.components.attracting",
            "networkx.algorithms.components.biconnected",
            "networkx.algorithms.components.connected",
            "networkx.algorithms.components.semiconnected",
            "networkx.algorithms.components.strongly_connected",
            "networkx.algorithms.components.weakly_connected",
            "networkx.algorithms.connectivity",
            "networkx.algorithms.connectivity.connectivity",
            "networkx.algorithms.connectivity.cuts",
            "networkx.algorithms.connectivity.kcomponents",
            "networkx.algorithms.connectivity.kcutsets",
            "networkx.algorithms.connectivity.stoerwagner",
            "networkx.algorithms.connectivity.utils",
            "networkx.algorithms.core",
            "networkx.algorithms.cycles",
            "networkx.algorithms.dag",
            "networkx.algorithms.distance_measures",
            "networkx.algorithms.distance_regular",
            "networkx.algorithms.dominance",
            "networkx.algorithms.dominating",
            "networkx.algorithms.euler",
            "networkx.algorithms.flow",
            "networkx.algorithms.flow.capacityscaling",
            "networkx.algorithms.flow.edmondskarp",
            "networkx.algorithms.flow.maxflow",
            "networkx.algorithms.flow.mincost",
            "networkx.algorithms.flow.networksimplex",
            "networkx.algorithms.flow.preflowpush",
            "networkx.algorithms.flow.shortestaugmentingpath",
            "networkx.algorithms.flow.utils",
            "networkx.algorithms.graphical",
            "networkx.algorithms.hierarchy",
            "networkx.algorithms.hybrid",
            "networkx.algorithms.isolate",
            "networkx.algorithms.isomorphism",
            "networkx.algorithms.isomorphism.isomorph",
            "networkx.algorithms.isomorphism.isomorphvf2",
            "networkx.algorithms.isomorphism.matchhelpers",
            "networkx.algorithms.isomorphism.vf2userfunc",
            "networkx.algorithms.link_analysis",
            "networkx.algorithms.link_analysis.hits_alg",
            "networkx.algorithms.link_analysis.pagerank_alg",
            "networkx.algorithms.link_prediction",
            "networkx.algorithms.matching",
            "networkx.algorithms.minors",
            "networkx.algorithms.mis",
            "networkx.algorithms.mst",
            "networkx.algorithms.operators",
            "networkx.algorithms.operators.all",
            "networkx.algorithms.operators.binary",
            "networkx.algorithms.operators.product",
            "networkx.algorithms.operators.unary",
            "networkx.algorithms.richclub",
            "networkx.algorithms.shortest_paths",
            "networkx.algorithms.shortest_paths.astar",
            "networkx.algorithms.shortest_paths.dense",
            "networkx.algorithms.shortest_paths.generic",
            "networkx.algorithms.shortest_paths.unweighted",
            "networkx.algorithms.shortest_paths.weighted",
            "networkx.algorithms.simple_paths",
            "networkx.algorithms.smetric",
            "networkx.algorithms.swap",
            "networkx.algorithms.traversal",
            "networkx.algorithms.traversal.breadth_first_search",
            "networkx.algorithms.traversal.depth_first_search",
            "networkx.algorithms.traversal.edgedfs",
            "networkx.algorithms.tree",
            "networkx.algorithms.tree.branchings",
            "networkx.algorithms.tree.recognition",
            "networkx.algorithms.triads",
            "networkx.algorithms.vitality",
            "networkx.classes",
            "networkx.classes.digraph",
            "networkx.classes.function",
            "networkx.classes.graph",
            "networkx.classes.multidigraph",
            "networkx.classes.multigraph",
            "networkx.classes.ordered",
            "networkx.convert",
            "networkx.convert_matrix",
            "networkx.drawing",
            "networkx.drawing.layout",
            "networkx.drawing.nx_agraph",
            "networkx.drawing.nx_pydot",
            "networkx.drawing.nx_pylab",
            "networkx.exception",
            "networkx.external",
            "networkx.generators",
            "networkx.generators.atlas",
            "networkx.generators.classic",
            "networkx.generators.community",
            "networkx.generators.degree_seq",
            "networkx.generators.directed",
            "networkx.generators.ego",
            "networkx.generators.expanders",
            "networkx.generators.geometric",
            "networkx.generators.intersection",
            "networkx.generators.line",
            "networkx.generators.nonisomorphic_trees",
            "networkx.generators.random_clustered",
            "networkx.generators.random_graphs",
            "networkx.generators.small",
            "networkx.generators.social",
            "networkx.generators.stochastic",
            "networkx.generators.threshold",
            "networkx.linalg",
            "networkx.linalg.algebraicconnectivity",
            "networkx.linalg.attrmatrix",
            "networkx.linalg.graphmatrix",
            "networkx.linalg.laplacianmatrix",
            "networkx.linalg.modularitymatrix",
            "networkx.linalg.spectrum",
            "networkx.readwrite",
            "networkx.readwrite.adjlist",
            "networkx.readwrite.edgelist",
            "networkx.readwrite.gexf",
            "networkx.readwrite.gml",
            "networkx.readwrite.gpickle",
            "networkx.readwrite.graph6",
            "networkx.readwrite.graphml",
            "networkx.readwrite.json_graph",
            "networkx.readwrite.json_graph.adjacency",
            "networkx.readwrite.json_graph.node_link",
            "networkx.readwrite.json_graph.tree",
            "networkx.readwrite.leda",
            "networkx.readwrite.multiline_adjlist",
            "networkx.readwrite.nx_shp",
            "networkx.readwrite.nx_yaml",
            "networkx.readwrite.p2g",
            "networkx.readwrite.pajek",
            "networkx.readwrite.sparse6",
            "networkx.relabel",
            "networkx.release",
            "networkx.testing",
            "networkx.testing.utils",
            "networkx.tests",
            "networkx.tests.benchmark",
            "networkx.tests.test",
            "networkx.tests.test_convert",
            "networkx.tests.test_convert_numpy",
            "networkx.tests.test_convert_pandas",
            "networkx.tests.test_convert_scipy",
            "networkx.tests.test_exceptions",
            "networkx.tests.test_relabel",
            "networkx.utils",
            "networkx.utils.contextmanagers",
            "networkx.utils.decorators",
            "networkx.utils.heaps",
            "networkx.utils.misc",
            "networkx.utils.random_sequence",
            "networkx.utils.rcm",
            "networkx.utils.union_find",
            "networkx.version"
        ],
        "version": "1.11"
    },
    "networkx-viewer": {
        "cmdline": [],
        "modules": [
            "networkx_viewer",
            "networkx_viewer.autocomplete_entry",
            "networkx_viewer.graph_canvas",
            "networkx_viewer.tests",
            "networkx_viewer.tokens",
            "networkx_viewer.viewer"
        ],
        "version": "0.2.0"
    },
    "networkxgmml": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.6"
    },
    "networkzero": {
        "cmdline": [],
        "modules": [
            "networkzero",
            "networkzero.config",
            "networkzero.core",
            "networkzero.discovery",
            "networkzero.messenger",
            "networkzero.sockets"
        ],
        "version": "1.0b1"
    },
    "netx": {
        "cmdline": [],
        "modules": [
            "netx",
            "netx.netx",
            "tests",
            "tests.test_netx"
        ],
        "version": "0.4"
    },
    "nety": {
        "cmdline": [],
        "modules": [
            "ciscoconfparse",
            "ciscoconfparse.ccp_abc",
            "ciscoconfparse.ccp_flask",
            "ciscoconfparse.ccp_util",
            "ciscoconfparse.ciscoconfparse",
            "ciscoconfparse.models_asa",
            "ciscoconfparse.models_cisco",
            "ciscoconfparse.models_junos",
            "ciscoconfparse.protocol_values",
            "ciscoconfparse.version",
            "version_info",
            "version_info.version"
        ],
        "version": "1.3.0"
    },
    "netzob": {
        "cmdline": [
            "netzob"
        ],
        "modules": [
            "netzob",
            "netzob.Common",
            "netzob.Common.C_Extensions",
            "netzob.Common.C_Extensions.WrapperArgsFactory",
            "netzob.Common.C_Extensions.WrapperMessage",
            "netzob.Common.CommandLine",
            "netzob.Common.DepCheck",
            "netzob.Common.LoggingConfiguration",
            "netzob.Common.NetzobException",
            "netzob.Common.Utils",
            "netzob.Common.Utils.DataAlignment",
            "netzob.Common.Utils.DataAlignment.DataAlignment",
            "netzob.Common.Utils.DataAlignment.ParallelDataAlignment",
            "netzob.Common.Utils.Decorators",
            "netzob.Common.Utils.MatrixList",
            "netzob.Common.Utils.Serialization",
            "netzob.Common.Utils.Serialization.JSONSerializator",
            "netzob.Common.Utils.SortableObject",
            "netzob.Common.Utils.SortedTypedList",
            "netzob.Common.Utils.TypedList",
            "netzob.Common.Utils.UndoRedo",
            "netzob.Common.Utils.UndoRedo.AbstractMemento",
            "netzob.Common.Utils.UndoRedo.AbstractMementoCreator",
            "netzob.Common.Utils.all",
            "netzob.Common.all",
            "netzob.Import",
            "netzob.Import.PCAPImporter",
            "netzob.Import.PCAPImporter.ImpactDecoder",
            "netzob.Import.PCAPImporter.ImpactPacket",
            "netzob.Import.PCAPImporter.PCAPImporter",
            "netzob.Import.PCAPImporter.all",
            "netzob.Import.all",
            "netzob.Inference",
            "netzob.Inference.Grammar",
            "netzob.Inference.Grammar.Angluin",
            "netzob.Inference.Grammar.AutomataFactories",
            "netzob.Inference.Grammar.AutomataFactories.ChainedStatesAutomataFactory",
            "netzob.Inference.Grammar.AutomataFactories.OneStateAutomataFactory",
            "netzob.Inference.Grammar.AutomataFactories.PTAAutomataFactory",
            "netzob.Inference.Grammar.AutomataFactories.all",
            "netzob.Inference.Grammar.EquivalenceOracles",
            "netzob.Inference.Grammar.EquivalenceOracles.AbstractEquivalenceOracle",
            "netzob.Inference.Grammar.EquivalenceOracles.WMethodNetworkEquivalenceOracle",
            "netzob.Inference.Grammar.GenericMAT",
            "netzob.Inference.Grammar.GrammarInferer",
            "netzob.Inference.Grammar.LearningAlgorithm",
            "netzob.Inference.Grammar.MQCache",
            "netzob.Inference.Grammar.Oracles",
            "netzob.Inference.Grammar.Oracles.AbstractOracle",
            "netzob.Inference.Grammar.Oracles.NetworkOracle",
            "netzob.Inference.Grammar.Queries",
            "netzob.Inference.Grammar.Queries.MembershipQuery",
            "netzob.Inference.Grammar.all",
            "netzob.Inference.Grammar.lstar",
            "netzob.Inference.Grammar.lstar.ObservationTable",
            "netzob.Inference.Vocabulary",
            "netzob.Inference.Vocabulary.CorrelationFinder",
            "netzob.Inference.Vocabulary.EntropyMeasurement",
            "netzob.Inference.Vocabulary.Format",
            "netzob.Inference.Vocabulary.FormatOperations",
            "netzob.Inference.Vocabulary.FormatOperations.ClusterByAlignment",
            "netzob.Inference.Vocabulary.FormatOperations.ClusterByApplicativeData",
            "netzob.Inference.Vocabulary.FormatOperations.ClusterByKeyField",
            "netzob.Inference.Vocabulary.FormatOperations.ClusterBySize",
            "netzob.Inference.Vocabulary.FormatOperations.FieldOperations",
            "netzob.Inference.Vocabulary.FormatOperations.FieldReseter",
            "netzob.Inference.Vocabulary.FormatOperations.FieldSplitAligned",
            "netzob.Inference.Vocabulary.FormatOperations.FieldSplitAligned.FieldSplitAligned",
            "netzob.Inference.Vocabulary.FormatOperations.FieldSplitDelimiter",
            "netzob.Inference.Vocabulary.FormatOperations.FieldSplitStatic",
            "netzob.Inference.Vocabulary.FormatOperations.FieldSplitStatic.FieldSplitStatic",
            "netzob.Inference.Vocabulary.FormatOperations.FieldSplitStatic.ParallelFieldSplitStatic",
            "netzob.Inference.Vocabulary.FormatOperations.FindKeyFields",
            "netzob.Inference.Vocabulary.FormatOperations._AsciiAlign",
            "netzob.Inference.Vocabulary.RelationFinder",
            "netzob.Inference.Vocabulary.Search",
            "netzob.Inference.Vocabulary.Search.SearchEngine",
            "netzob.Inference.Vocabulary.Search.SearchResult",
            "netzob.Inference.Vocabulary.Search.SearchTask",
            "netzob.Inference.Vocabulary.Search.all",
            "netzob.Inference.Vocabulary.all",
            "netzob.Inference.all",
            "netzob.Model",
            "netzob.Model.Grammar",
            "netzob.Model.Grammar.Automata",
            "netzob.Model.Grammar.States",
            "netzob.Model.Grammar.States.AbstractState",
            "netzob.Model.Grammar.States.State",
            "netzob.Model.Grammar.States.all",
            "netzob.Model.Grammar.Transitions",
            "netzob.Model.Grammar.Transitions.AbstractTransition",
            "netzob.Model.Grammar.Transitions.CloseChannelTransition",
            "netzob.Model.Grammar.Transitions.OpenChannelTransition",
            "netzob.Model.Grammar.Transitions.Transition",
            "netzob.Model.Grammar.Transitions.all",
            "netzob.Model.Grammar.all",
            "netzob.Model.Protocol",
            "netzob.Model.Types",
            "netzob.Model.Types.ASCII",
            "netzob.Model.Types.AbstractType",
            "netzob.Model.Types.BitArray",
            "netzob.Model.Types.HexaString",
            "netzob.Model.Types.IPv4",
            "netzob.Model.Types.Integer",
            "netzob.Model.Types.Raw",
            "netzob.Model.Types.Timestamp",
            "netzob.Model.Types.TypeConverter",
            "netzob.Model.Types.all",
            "netzob.Model.Vocabulary",
            "netzob.Model.Vocabulary.AbstractField",
            "netzob.Model.Vocabulary.ApplicativeData",
            "netzob.Model.Vocabulary.ChannelDownSymbol",
            "netzob.Model.Vocabulary.Domain",
            "netzob.Model.Vocabulary.Domain.DomainFactory",
            "netzob.Model.Vocabulary.Domain.GenericPath",
            "netzob.Model.Vocabulary.Domain.Parser",
            "netzob.Model.Vocabulary.Domain.Parser.FieldParser",
            "netzob.Model.Vocabulary.Domain.Parser.FieldParserResult",
            "netzob.Model.Vocabulary.Domain.Parser.FlowParser",
            "netzob.Model.Vocabulary.Domain.Parser.MessageParser",
            "netzob.Model.Vocabulary.Domain.Parser.ParsingPath",
            "netzob.Model.Vocabulary.Domain.Parser.VariableParser",
            "netzob.Model.Vocabulary.Domain.Parser.VariableParserPath",
            "netzob.Model.Vocabulary.Domain.Parser.VariableParserResult",
            "netzob.Model.Vocabulary.Domain.Parser.all",
            "netzob.Model.Vocabulary.Domain.Specializer",
            "netzob.Model.Vocabulary.Domain.Specializer.FieldSpecializer",
            "netzob.Model.Vocabulary.Domain.Specializer.MessageSpecializer",
            "netzob.Model.Vocabulary.Domain.Specializer.SpecializingPath",
            "netzob.Model.Vocabulary.Domain.Specializer.VariableSpecializer",
            "netzob.Model.Vocabulary.Domain.Specializer.VariableSpecializerResult",
            "netzob.Model.Vocabulary.Domain.Specializer.all",
            "netzob.Model.Vocabulary.Domain.Variables",
            "netzob.Model.Vocabulary.Domain.Variables.AbstractVariable",
            "netzob.Model.Vocabulary.Domain.Variables.Leafs",
            "netzob.Model.Vocabulary.Domain.Variables.Leafs.AbstractRelationVariableLeaf",
            "netzob.Model.Vocabulary.Domain.Variables.Leafs.AbstractVariableLeaf",
            "netzob.Model.Vocabulary.Domain.Variables.Leafs.Data",
            "netzob.Model.Vocabulary.Domain.Variables.Leafs.InternetChecksum",
            "netzob.Model.Vocabulary.Domain.Variables.Leafs.Size",
            "netzob.Model.Vocabulary.Domain.Variables.Leafs.Value",
            "netzob.Model.Vocabulary.Domain.Variables.Leafs.all",
            "netzob.Model.Vocabulary.Domain.Variables.Memory",
            "netzob.Model.Vocabulary.Domain.Variables.Nodes",
            "netzob.Model.Vocabulary.Domain.Variables.Nodes.AbstractVariableNode",
            "netzob.Model.Vocabulary.Domain.Variables.Nodes.Agg",
            "netzob.Model.Vocabulary.Domain.Variables.Nodes.Alt",
            "netzob.Model.Vocabulary.Domain.Variables.Nodes.Rep",
            "netzob.Model.Vocabulary.Domain.Variables.Nodes.Repeat",
            "netzob.Model.Vocabulary.Domain.Variables.Nodes.all",
            "netzob.Model.Vocabulary.Domain.Variables.SVAS",
            "netzob.Model.Vocabulary.Domain.Variables.StateVariable",
            "netzob.Model.Vocabulary.Domain.Variables.all",
            "netzob.Model.Vocabulary.Domain.all",
            "netzob.Model.Vocabulary.EmptySymbol",
            "netzob.Model.Vocabulary.Field",
            "netzob.Model.Vocabulary.Functions",
            "netzob.Model.Vocabulary.Functions.EncodingFunction",
            "netzob.Model.Vocabulary.Functions.EncodingFunctions",
            "netzob.Model.Vocabulary.Functions.EncodingFunctions.DomainEncodingFunction",
            "netzob.Model.Vocabulary.Functions.EncodingFunctions.TypeEncodingFunction",
            "netzob.Model.Vocabulary.Functions.EncodingFunctions.all",
            "netzob.Model.Vocabulary.Functions.FunctionApplicationTable",
            "netzob.Model.Vocabulary.Functions.TransformationFunction",
            "netzob.Model.Vocabulary.Functions.VisualizationFunction",
            "netzob.Model.Vocabulary.Functions.VisualizationFunctions",
            "netzob.Model.Vocabulary.Functions.VisualizationFunctions.HighlightFunction",
            "netzob.Model.Vocabulary.Functions.VisualizationFunctions.all",
            "netzob.Model.Vocabulary.Functions.all",
            "netzob.Model.Vocabulary.Messages",
            "netzob.Model.Vocabulary.Messages.AbstractMessage",
            "netzob.Model.Vocabulary.Messages.L2NetworkMessage",
            "netzob.Model.Vocabulary.Messages.L3NetworkMessage",
            "netzob.Model.Vocabulary.Messages.L4NetworkMessage",
            "netzob.Model.Vocabulary.Messages.RawMessage",
            "netzob.Model.Vocabulary.Messages.all",
            "netzob.Model.Vocabulary.Session",
            "netzob.Model.Vocabulary.Symbol",
            "netzob.Model.Vocabulary.UnknownSymbol",
            "netzob.Model.Vocabulary.all",
            "netzob.Model.all",
            "netzob.NetzobInteractiveSessionController",
            "netzob.NetzobResources",
            "netzob.Simulator",
            "netzob.Simulator.AbstractionLayer",
            "netzob.Simulator.Actor",
            "netzob.Simulator.Channels",
            "netzob.Simulator.Channels.AbstractChannel",
            "netzob.Simulator.Channels.RawIPClient",
            "netzob.Simulator.Channels.SSLClient",
            "netzob.Simulator.Channels.TCPClient",
            "netzob.Simulator.Channels.TCPServer",
            "netzob.Simulator.Channels.UDPClient",
            "netzob.Simulator.Channels.UDPServer",
            "netzob.Simulator.Channels.all",
            "netzob.Simulator.all",
            "netzob.all",
            "netzob.release"
        ],
        "version": "1.1.dev0"
    },
    "neuauth": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neucleus": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neupy": {
        "cmdline": [],
        "modules": [
            "examples",
            "examples.autoencoder",
            "examples.autoencoder.conv_autoencoder",
            "examples.autoencoder.denoising_autoencoder",
            "examples.autoencoder.stacked_conv_autoencoders",
            "examples.autoencoder.variational_autoencoder",
            "neupy",
            "neupy.algorithms",
            "neupy.algorithms.associative",
            "neupy.algorithms.associative.base",
            "neupy.algorithms.associative.hebb",
            "neupy.algorithms.associative.instar",
            "neupy.algorithms.associative.kohonen",
            "neupy.algorithms.associative.oja",
            "neupy.algorithms.base",
            "neupy.algorithms.competitive",
            "neupy.algorithms.competitive.art",
            "neupy.algorithms.competitive.lvq",
            "neupy.algorithms.competitive.sofm",
            "neupy.algorithms.constructor",
            "neupy.algorithms.ensemble",
            "neupy.algorithms.ensemble.base",
            "neupy.algorithms.ensemble.dan",
            "neupy.algorithms.ensemble.mixture_of_experts",
            "neupy.algorithms.gd",
            "neupy.algorithms.gd.adadelta",
            "neupy.algorithms.gd.adagrad",
            "neupy.algorithms.gd.adam",
            "neupy.algorithms.gd.adamax",
            "neupy.algorithms.gd.base",
            "neupy.algorithms.gd.conjgrad",
            "neupy.algorithms.gd.errors",
            "neupy.algorithms.gd.hessdiag",
            "neupy.algorithms.gd.hessian",
            "neupy.algorithms.gd.lev_marq",
            "neupy.algorithms.gd.momentum",
            "neupy.algorithms.gd.quasi_newton",
            "neupy.algorithms.gd.quickprop",
            "neupy.algorithms.gd.rmsprop",
            "neupy.algorithms.gd.rprop",
            "neupy.algorithms.linear",
            "neupy.algorithms.linear.base",
            "neupy.algorithms.linear.lms",
            "neupy.algorithms.linear.modify_relaxation",
            "neupy.algorithms.linear.perceptron",
            "neupy.algorithms.memory",
            "neupy.algorithms.memory.bam",
            "neupy.algorithms.memory.base",
            "neupy.algorithms.memory.cmac",
            "neupy.algorithms.memory.discrete_hopfield_network",
            "neupy.algorithms.memory.utils",
            "neupy.algorithms.rbfn",
            "neupy.algorithms.rbfn.grnn",
            "neupy.algorithms.rbfn.learning",
            "neupy.algorithms.rbfn.pnn",
            "neupy.algorithms.rbfn.rbf_kmeans",
            "neupy.algorithms.rbfn.utils",
            "neupy.algorithms.rbm",
            "neupy.algorithms.regularization",
            "neupy.algorithms.regularization.base",
            "neupy.algorithms.regularization.weight_decay",
            "neupy.algorithms.regularization.weight_elimination",
            "neupy.algorithms.step_update",
            "neupy.algorithms.step_update.base",
            "neupy.algorithms.step_update.delta_bar_delta",
            "neupy.algorithms.step_update.errdiff",
            "neupy.algorithms.step_update.leak_step",
            "neupy.algorithms.step_update.linear_search",
            "neupy.algorithms.step_update.search_then_converge",
            "neupy.algorithms.step_update.step_decay",
            "neupy.algorithms.summary_info",
            "neupy.algorithms.utils",
            "neupy.core",
            "neupy.core.base",
            "neupy.core.config",
            "neupy.core.docs",
            "neupy.core.properties",
            "neupy.datasets",
            "neupy.datasets.digits",
            "neupy.datasets.reber",
            "neupy.environment",
            "neupy.estimators",
            "neupy.exceptions",
            "neupy.helpers",
            "neupy.helpers.logs",
            "neupy.helpers.progressbar",
            "neupy.helpers.table",
            "neupy.helpers.terminal",
            "neupy.init",
            "neupy.layers",
            "neupy.layers.activations",
            "neupy.layers.base",
            "neupy.layers.connections",
            "neupy.layers.connections.base",
            "neupy.layers.connections.graph",
            "neupy.layers.connections.utils",
            "neupy.layers.convolutions",
            "neupy.layers.embedding",
            "neupy.layers.input",
            "neupy.layers.merge",
            "neupy.layers.normalization",
            "neupy.layers.pooling",
            "neupy.layers.recurrent",
            "neupy.layers.reshape",
            "neupy.layers.stochastic",
            "neupy.layers.utils",
            "neupy.optimizations",
            "neupy.optimizations.golden_search",
            "neupy.optimizations.wolfe",
            "neupy.plots",
            "neupy.plots.error_plot",
            "neupy.plots.hinton",
            "neupy.plots.layer_structure",
            "neupy.plots.saliency_map",
            "neupy.storage",
            "neupy.utils"
        ],
        "version": "0.5.1"
    },
    "neural": {
        "cmdline": [],
        "modules": [
            "neural",
            "neural.neural"
        ],
        "version": "0.1.0"
    },
    "neural-fmri": {
        "cmdline": [],
        "modules": [
            "neural",
            "neural.alignment",
            "neural.connectivity",
            "neural.decon",
            "neural.dicom",
            "neural.driver",
            "neural.dsets",
            "neural.eprime",
            "neural.freesurfer",
            "neural.general",
            "neural.notification",
            "neural.personality",
            "neural.preprocess",
            "neural.qc",
            "neural.scheduler",
            "neural.stats",
            "neural.term",
            "neural.utils",
            "neural.wrappers",
            "neural.wrappers.afni",
            "neural.wrappers.common",
            "neural.wrappers.fsl"
        ],
        "version": "1.2.5"
    },
    "neural-image-analogies": {
        "cmdline": [],
        "modules": [
            "image_analogy",
            "image_analogy.argparser",
            "image_analogy.img_utils",
            "image_analogy.losses",
            "image_analogy.losses.analogy",
            "image_analogy.losses.core",
            "image_analogy.losses.mrf",
            "image_analogy.losses.neural_style",
            "image_analogy.losses.nnf",
            "image_analogy.losses.patch_matcher",
            "image_analogy.losses.patches",
            "image_analogy.main",
            "image_analogy.models",
            "image_analogy.models.analogy",
            "image_analogy.models.base",
            "image_analogy.models.nnf",
            "image_analogy.optimizer",
            "image_analogy.vgg16"
        ],
        "version": "0.1.2"
    },
    "neural-network": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neural-python": {
        "cmdline": [],
        "modules": [
            "examples",
            "examples.boston_price_prediction",
            "examples.gradient_descent_optimizations",
            "examples.hamming_network",
            "examples.plots",
            "examples.pnn",
            "examples.sofm",
            "neuralpy",
            "neuralpy.algorithms",
            "neuralpy.algorithms.associative",
            "neuralpy.algorithms.associative.base",
            "neuralpy.algorithms.associative.hebb",
            "neuralpy.algorithms.associative.instar",
            "neuralpy.algorithms.associative.kohonen",
            "neuralpy.algorithms.associative.oja",
            "neuralpy.algorithms.backprop",
            "neuralpy.algorithms.backprop.backpropagation",
            "neuralpy.algorithms.backprop.conjugate_gradient",
            "neuralpy.algorithms.backprop.gradient_descent",
            "neuralpy.algorithms.backprop.hessian_diagonal",
            "neuralpy.algorithms.backprop.levenberg_marquardt",
            "neuralpy.algorithms.backprop.momentum",
            "neuralpy.algorithms.backprop.quasi_newton",
            "neuralpy.algorithms.backprop.quickprop",
            "neuralpy.algorithms.backprop.rprop",
            "neuralpy.algorithms.backprop.steps",
            "neuralpy.algorithms.backprop.steps.base",
            "neuralpy.algorithms.backprop.steps.delta_bar_delta",
            "neuralpy.algorithms.backprop.steps.error_difference_update",
            "neuralpy.algorithms.backprop.steps.leak_step",
            "neuralpy.algorithms.backprop.steps.linear_search",
            "neuralpy.algorithms.backprop.steps.search_then_converge",
            "neuralpy.algorithms.backprop.steps.simple_step_minimization",
            "neuralpy.algorithms.backprop.steps.wolfe_search",
            "neuralpy.algorithms.backprop.weights",
            "neuralpy.algorithms.backprop.weights.base",
            "neuralpy.algorithms.backprop.weights.weight_decay",
            "neuralpy.algorithms.backprop.weights.weight_elimination",
            "neuralpy.algorithms.basics",
            "neuralpy.algorithms.basics.base",
            "neuralpy.algorithms.basics.lms",
            "neuralpy.algorithms.basics.modify_relaxation",
            "neuralpy.algorithms.basics.perceptron",
            "neuralpy.algorithms.competitive",
            "neuralpy.algorithms.competitive.art",
            "neuralpy.algorithms.competitive.sofm",
            "neuralpy.algorithms.feedforward",
            "neuralpy.algorithms.memory",
            "neuralpy.algorithms.memory.bam",
            "neuralpy.algorithms.memory.base",
            "neuralpy.algorithms.memory.cmac",
            "neuralpy.algorithms.memory.discrete_hopfield_network",
            "neuralpy.algorithms.memory.utils",
            "neuralpy.algorithms.rbfn",
            "neuralpy.algorithms.rbfn.grnn",
            "neuralpy.algorithms.rbfn.pnn",
            "neuralpy.algorithms.rbfn.rbf_kmeans",
            "neuralpy.algorithms.rbfn.utils",
            "neuralpy.algorithms.utils",
            "neuralpy.commands",
            "neuralpy.commands.list",
            "neuralpy.commands.main",
            "neuralpy.commands.new",
            "neuralpy.core",
            "neuralpy.core.base",
            "neuralpy.core.config",
            "neuralpy.core.docs",
            "neuralpy.core.properties",
            "neuralpy.datasets",
            "neuralpy.datasets.reber",
            "neuralpy.ensemble",
            "neuralpy.ensemble.base",
            "neuralpy.ensemble.dan",
            "neuralpy.ensemble.mixture_of_experts",
            "neuralpy.functions",
            "neuralpy.functions.activations",
            "neuralpy.functions.base",
            "neuralpy.functions.errors",
            "neuralpy.helpers",
            "neuralpy.helpers.base",
            "neuralpy.helpers.logs",
            "neuralpy.helpers.sms",
            "neuralpy.layers",
            "neuralpy.layers.base",
            "neuralpy.layers.layers",
            "neuralpy.layers.output",
            "neuralpy.layers.utils",
            "neuralpy.network",
            "neuralpy.network.base",
            "neuralpy.network.connections",
            "neuralpy.network.learning",
            "neuralpy.network.types",
            "neuralpy.network.utils"
        ],
        "version": "0.0.7"
    },
    "neuralcli": {
        "cmdline": [],
        "modules": [
            "neuralcli",
            "neuralcli.cli",
            "neuralcli.neuralnet",
            "neuralcli.writer"
        ],
        "version": "1.6"
    },
    "neuralist": {
        "cmdline": [],
        "modules": [
            "neuralist"
        ],
        "version": "0.51"
    },
    "neuralpy": {
        "cmdline": [],
        "modules": [
            "neuralpy",
            "neuralpy.activations",
            "neuralpy.colors",
            "neuralpy.costs",
            "neuralpy.data",
            "neuralpy.iterators",
            "neuralpy.iterators.iterator",
            "neuralpy.iterators.layer_iterator",
            "neuralpy.layers",
            "neuralpy.layers.input_",
            "neuralpy.layers.layer",
            "neuralpy.layers.mlp",
            "neuralpy.neural2"
        ],
        "version": "1.3.0"
    },
    "neurio": {
        "cmdline": [],
        "modules": [
            "neurio"
        ],
        "version": "0.3.1"
    },
    "neuro-athelets": {
        "cmdline": [],
        "modules": [
            "neuro_athelets",
            "neuro_athelets.analytics_engine",
            "neuro_athelets.eeg_utilities",
            "neuro_athelets.file_utilities",
            "neuro_athelets.process_wfft",
            "neuro_athelets.read_csv",
            "neuro_athelets.read_csv_anova",
            "neuro_athelets.read_csv_get_individual",
            "neuro_athelets.read_csv_wilcox",
            "neuro_athelets.read_linr",
            "neuro_athelets.txt_utilities"
        ],
        "version": "0.11"
    },
    "neuro-pypes": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neurobank": {
        "cmdline": [],
        "modules": [
            "neurobank",
            "neurobank.catalog",
            "neurobank.nbank",
            "neurobank.script",
            "neurobank.tbl2json",
            "neurobank.util"
        ],
        "version": "0.5.1"
    },
    "neurocurator": {
        "cmdline": [],
        "modules": [
            "neurocurator",
            "neurocurator.annotWidgets",
            "neurocurator.annotationListModel",
            "neurocurator.approximateMatchDlg",
            "neurocurator.areaSelector",
            "neurocurator.autocomplete",
            "neurocurator.experimentalPropertyWgt",
            "neurocurator.itemDelegates",
            "neurocurator.jsonDlg",
            "neurocurator.main",
            "neurocurator.mainWin",
            "neurocurator.modParamWidgets",
            "neurocurator.paramFunctionWgt",
            "neurocurator.paramRelationWgt",
            "neurocurator.paramTraceWgt",
            "neurocurator.paramValueWgt",
            "neurocurator.proposer",
            "neurocurator.qtOntoTrees",
            "neurocurator.searchInterface",
            "neurocurator.searchOntoWgt",
            "neurocurator.settingsDlg",
            "neurocurator.suggestedTagMng",
            "neurocurator.tagWidget",
            "neurocurator.uiUtilities",
            "neurocurator.variableTableWgt",
            "neurocurator.zoteroWrap",
            "notebooks"
        ],
        "version": "0.3.2"
    },
    "neurodesign": {
        "cmdline": [],
        "modules": [
            "src",
            "src.generate",
            "src.geneticalgorithm",
            "src.msequence",
            "src.report"
        ],
        "version": "0.0.9"
    },
    "neurodynex": {
        "cmdline": [],
        "modules": [
            "neurodynex",
            "neurodynex.adex_model",
            "neurodynex.adex_model.AdEx",
            "neurodynex.brunel_model",
            "neurodynex.brunel_model.LIF_spiking_network",
            "neurodynex.cable_equation",
            "neurodynex.cable_equation.passive_cable",
            "neurodynex.competing_populations",
            "neurodynex.competing_populations.decision_making",
            "neurodynex.exponential_integrate_fire",
            "neurodynex.exponential_integrate_fire.exp_IF",
            "neurodynex.hodgkin_huxley",
            "neurodynex.hodgkin_huxley.HH",
            "neurodynex.hopfield_network",
            "neurodynex.hopfield_network.demo",
            "neurodynex.hopfield_network.network",
            "neurodynex.hopfield_network.pattern_tools",
            "neurodynex.hopfield_network.plot_tools",
            "neurodynex.leaky_integrate_and_fire",
            "neurodynex.leaky_integrate_and_fire.LIF",
            "neurodynex.neuron_type",
            "neurodynex.neuron_type.neurons",
            "neurodynex.ojas_rule",
            "neurodynex.ojas_rule.oja",
            "neurodynex.phase_plane_analysis",
            "neurodynex.phase_plane_analysis.fitzhugh_nagumo",
            "neurodynex.test",
            "neurodynex.test.test_AdEx",
            "neurodynex.test.test_HH",
            "neurodynex.test.test_LIF",
            "neurodynex.test.test_LIF_spiking_network",
            "neurodynex.test.test_cable_equation",
            "neurodynex.test.test_decision_making",
            "neurodynex.test.test_exponential_IF",
            "neurodynex.test.test_hopfield",
            "neurodynex.test.test_nagumo",
            "neurodynex.test.test_neuron_type",
            "neurodynex.test.test_oja",
            "neurodynex.test.test_spike_tools",
            "neurodynex.test.test_working_memory",
            "neurodynex.tools",
            "neurodynex.tools.input_factory",
            "neurodynex.tools.plot_tools",
            "neurodynex.tools.spike_tools",
            "neurodynex.working_memory_network",
            "neurodynex.working_memory_network.wm_model"
        ],
        "version": "0.3.4"
    },
    "neuroelectro": {
        "cmdline": [],
        "modules": [
            "neuroelectro",
            "neuroelectro.db_functions",
            "neuroelectro.db_functions.countries",
            "neuroelectro.local_settings",
            "neuroelectro.manage",
            "neuroelectro.models",
            "neuroelectro.settings",
            "neuroelectro.tests"
        ],
        "version": "0.0.2.3"
    },
    "neurofinder": {
        "cmdline": [],
        "modules": [
            "neurofinder",
            "neurofinder.cli",
            "neurofinder.commands",
            "neurofinder.commands.evaluate",
            "neurofinder.main"
        ],
        "version": "1.1.1"
    },
    "neuroflux": {
        "cmdline": [],
        "modules": [
            "neuroflux"
        ],
        "version": "0.0.0"
    },
    "neuroglancer": {
        "cmdline": [],
        "modules": [
            "neuroglancer",
            "neuroglancer.base_viewer",
            "neuroglancer.chunks",
            "neuroglancer.downsample",
            "neuroglancer.downsample_scales",
            "neuroglancer.server",
            "neuroglancer.static",
            "neuroglancer.token",
            "neuroglancer.viewer",
            "neuroglancer.volume"
        ],
        "version": "0.0.8"
    },
    "neuroinfo-toolkit": {
        "cmdline": [],
        "modules": [
            "neuro",
            "neuro.algorithms",
            "neuro.algorithms.correlation",
            "neuro.algorithms.cpu",
            "neuro.algorithms.cpu.pearson",
            "neuro.algorithms.gpu",
            "neuro.algorithms.gpu.pearson",
            "neuro.app",
            "neuro.apps",
            "neuro.apps.xnat",
            "neuro.arrays",
            "neuro.base",
            "neuro.classifiers",
            "neuro.classifiers.svm",
            "neuro.command",
            "neuro.common",
            "neuro.config",
            "neuro.contrib",
            "neuro.contrib.icog",
            "neuro.db",
            "neuro.diff",
            "neuro.exceptions",
            "neuro.filesystem",
            "neuro.models",
            "neuro.models.dicom",
            "neuro.models.nifti",
            "neuro.models.resource",
            "neuro.models.scanners",
            "neuro.models.xml",
            "neuro.net",
            "neuro.net.http",
            "neuro.net.transport",
            "neuro.psych",
            "neuro.psych.formulas",
            "neuro.strings",
            "neuro.system"
        ],
        "version": "1.5.1"
    },
    "neurokit": {
        "cmdline": [],
        "modules": [
            "neurokit",
            "neurokit.bio",
            "neurokit.bio.bio_data",
            "neurokit.bio.bio_ecg",
            "neurokit.bio.bio_eda",
            "neurokit.bio.bio_emg",
            "neurokit.bio.bio_meta",
            "neurokit.bio.bio_rsp",
            "neurokit.eeg",
            "neurokit.eeg.eeg_algorithms",
            "neurokit.eeg.eeg_complexity",
            "neurokit.eeg.eeg_data",
            "neurokit.eeg.eeg_erp",
            "neurokit.eeg.eeg_microstates",
            "neurokit.eeg.eeg_preprocessing",
            "neurokit.eeg.eeg_time_frequency",
            "neurokit.miscellaneous",
            "neurokit.miscellaneous.data",
            "neurokit.miscellaneous.miscellaneous",
            "neurokit.signal",
            "neurokit.signal.complexity",
            "neurokit.signal.events",
            "neurokit.signal.evoked",
            "neurokit.signal.signal",
            "neurokit.statistics",
            "neurokit.statistics.feature_reduction",
            "neurokit.statistics.plot",
            "neurokit.statistics.statistics",
            "tests",
            "tests.test_bio",
            "tests.test_misc"
        ],
        "version": "0.1.3"
    },
    "neurolab": {
        "cmdline": [],
        "modules": [
            "neurolab",
            "neurolab.core",
            "neurolab.error",
            "neurolab.init",
            "neurolab.layer",
            "neurolab.net",
            "neurolab.tool",
            "neurolab.train",
            "neurolab.train.delta",
            "neurolab.train.gd",
            "neurolab.train.lvq",
            "neurolab.train.spo",
            "neurolab.train.wta",
            "neurolab.trans"
        ],
        "version": "0.3.5"
    },
    "neurom": {
        "cmdline": [
            "morph_check",
            "morph_stats",
            "raw_data_check"
        ],
        "modules": [
            "neurom",
            "neurom._compat",
            "neurom.apps",
            "neurom.apps.morph_stats",
            "neurom.check",
            "neurom.check.morphtree",
            "neurom.check.neuron_checks",
            "neurom.check.runner",
            "neurom.check.structural_checks",
            "neurom.core",
            "neurom.core._neuron",
            "neurom.core._soma",
            "neurom.core.dataformat",
            "neurom.core.log",
            "neurom.core.point",
            "neurom.core.population",
            "neurom.core.tree",
            "neurom.core.types",
            "neurom.exceptions",
            "neurom.fst",
            "neurom.fst._bifurcationfunc",
            "neurom.fst._core",
            "neurom.fst._neuritefunc",
            "neurom.fst._neuronfunc",
            "neurom.fst.sectionfunc",
            "neurom.geom",
            "neurom.geom.transform",
            "neurom.io",
            "neurom.io.datawrapper",
            "neurom.io.hdf5",
            "neurom.io.neurolucida",
            "neurom.io.swc",
            "neurom.io.utils",
            "neurom.morphmath",
            "neurom.stats",
            "neurom.utils",
            "neurom.version",
            "neurom.view",
            "neurom.view._dendrogram",
            "neurom.view.common",
            "neurom.view.tests",
            "neurom.view.tests.test_common",
            "neurom.view.tests.test_dendrogram",
            "neurom.view.tests.test_view",
            "neurom.view.tests.utils",
            "neurom.view.view",
            "neurom.viewer"
        ],
        "version": "1.4.2"
    },
    "neuron": {
        "cmdline": [],
        "modules": [
            "neuron",
            "neuron.doc",
            "neuron.gui",
            "neuron.sections",
            "neuron.tests",
            "neuron.tests.test_all",
            "neuron.tests.test_vector"
        ],
        "version": "7.2.536.16"
    },
    "neuron-model": {
        "cmdline": [],
        "modules": [
            "neuron_model"
        ],
        "version": "1.0.0"
    },
    "neuron-ui": {
        "cmdline": [
            "NEURON-UI"
        ],
        "modules": [
            "neuron_ui",
            "neuron_ui.analysis",
            "neuron_ui.cell_builder",
            "neuron_ui.models",
            "neuron_ui.models.CA3_pyramidal",
            "neuron_ui.models.PTcell",
            "neuron_ui.models.ball_and_stick",
            "neuron_ui.models.ring",
            "neuron_ui.models.simple_cell",
            "neuron_ui.models.simple_network_old",
            "neuron_ui.models.verysimple_cell",
            "neuron_ui.neuron_geometries_utils",
            "neuron_ui.neuron_geppetto",
            "neuron_ui.neuron_menu",
            "neuron_ui.neuron_utils",
            "neuron_ui.point_process",
            "neuron_ui.run_control",
            "neuron_ui.sample_models",
            "neuron_ui.singleton",
            "neuron_ui.space_plot"
        ],
        "version": "0.0.1"
    },
    "neuronc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neuroner": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "neuronjs": {
        "cmdline": [],
        "modules": [
            "neuronjs",
            "neuronjs.main",
            "neuronjs.module",
            "neuronjs.tools",
            "neuronjs.walker"
        ],
        "version": "2.3.1"
    },
    "neuronpy": {
        "cmdline": [],
        "modules": [
            "neuronpy",
            "neuronpy.graphics",
            "neuronpy.graphics.spikeparams",
            "neuronpy.graphics.spikeplot",
            "neuronpy.graphics.spikesum",
            "neuronpy.graphics.spiketimehistogram",
            "neuronpy.math",
            "neuronpy.math.kernel",
            "neuronpy.nrnobjects",
            "neuronpy.nrnobjects.cell",
            "neuronpy.util",
            "neuronpy.util.decorators",
            "neuronpy.util.dictdb",
            "neuronpy.util.hgutil",
            "neuronpy.util.hoctranslate",
            "neuronpy.util.hocvar",
            "neuronpy.util.listutil",
            "neuronpy.util.paraminit",
            "neuronpy.util.platforminfo",
            "neuronpy.util.spiketrain",
            "neuronpy.util.vartest"
        ],
        "version": "0.1.6"
    },
    "neurons": {
        "cmdline": [],
        "modules": [
            "neurons",
            "neurons.application",
            "neurons.base",
            "neurons.base.const",
            "neurons.base.context",
            "neurons.base.error",
            "neurons.base.event",
            "neurons.base.model",
            "neurons.base.screen",
            "neurons.base.service",
            "neurons.base.session",
            "neurons.daemon",
            "neurons.daemon.autorel",
            "neurons.daemon.cli",
            "neurons.daemon.config",
            "neurons.daemon.daemonize",
            "neurons.daemon.dowser",
            "neurons.daemon.dowser.app",
            "neurons.daemon.dowser.const",
            "neurons.daemon.dowser.reftree",
            "neurons.daemon.dowser.service",
            "neurons.daemon.ipc",
            "neurons.daemon.main",
            "neurons.daemon.store",
            "neurons.daemon.test",
            "neurons.daemon.test.test_config",
            "neurons.form",
            "neurons.form.const",
            "neurons.form.form",
            "neurons.form.table",
            "neurons.form.test",
            "neurons.form.test.test_form",
            "neurons.form.test.test_form_table",
            "neurons.form.widget",
            "neurons.geojson",
            "neurons.jsutil",
            "neurons.log",
            "neurons.log.model",
            "neurons.model",
            "neurons.polymer",
            "neurons.polymer.app",
            "neurons.polymer.const",
            "neurons.polymer.const.comp",
            "neurons.polymer.model",
            "neurons.polymer.protocol",
            "neurons.polymer.protocol.form",
            "neurons.polymer.protocol.widget",
            "neurons.polymer.service",
            "neurons.polymer.test",
            "neurons.polymer.test.test_jsutil",
            "neurons.polymer.test.test_widget"
        ],
        "version": "0.7.0"
    },
    "neuronunit": {
        "cmdline": [],
        "modules": [
            "neuronunit",
            "neuronunit.aibs",
            "neuronunit.capabilities",
            "neuronunit.capabilities.channel",
            "neuronunit.capabilities.spike_functions",
            "neuronunit.models",
            "neuronunit.models.channel",
            "neuronunit.models.reduced",
            "neuronunit.neuroconstruct",
            "neuronunit.neuroconstruct.capabilities",
            "neuronunit.neuroconstruct.models",
            "neuronunit.neuroelectro",
            "neuronunit.neuron",
            "neuronunit.neuron.capabilities",
            "neuronunit.neuron.models",
            "neuronunit.plottools",
            "neuronunit.tests",
            "neuronunit.tests.channel",
            "neuronunit.tests.dynamics"
        ],
        "version": "0.1.8.2"
    },
    "neuronvisio": {
        "cmdline": [],
        "modules": [
            "neuronvisio",
            "neuronvisio.colorbutton",
            "neuronvisio.command_line",
            "neuronvisio.controls",
            "neuronvisio.manager",
            "neuronvisio.modeldb",
            "neuronvisio.modeldb.BeautifulSoup",
            "neuronvisio.modeldb.ModelDB",
            "neuronvisio.modeldb.ModelsTree",
            "neuronvisio.modeldb.Updater",
            "neuronvisio.res",
            "neuronvisio.visio"
        ],
        "version": "0.9.1"
    },
    "neuropi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neuropower": {
        "cmdline": [],
        "modules": [
            "neuropower",
            "neuropower.BUM",
            "neuropower.cluster",
            "neuropower.neuropowermodels",
            "neuropower.peakdistribution",
            "neuropower.tests",
            "neuropower.tests.test_bum",
            "neuropower.tests.test_cluster",
            "neuropower.tests.test_neuropowermodels",
            "neuropower.tests.test_peakdistribution"
        ],
        "version": "0.2.8"
    },
    "neuropredict": {
        "cmdline": [],
        "modules": [
            "neuropredict",
            "neuropredict.config_neuropredict",
            "neuropredict.freesurfer",
            "neuropredict.model_comparison",
            "neuropredict.neuropredict",
            "neuropredict.rhst",
            "neuropredict.test_figure_generation",
            "neuropredict.test_multiarg",
            "neuropredict.test_rhst",
            "neuropredict.visualize"
        ],
        "version": "0.2.4.5"
    },
    "neuropsydia": {
        "cmdline": [],
        "modules": [
            "neuropsydia",
            "neuropsydia.ask",
            "neuropsydia.choice",
            "neuropsydia.core",
            "neuropsydia.files",
            "neuropsydia.files.binary",
            "neuropsydia.files.font",
            "neuropsydia.files.logo",
            "neuropsydia.image",
            "neuropsydia.io",
            "neuropsydia.meta",
            "neuropsydia.miscellaneous",
            "neuropsydia.path",
            "neuropsydia.procedures",
            "neuropsydia.scale",
            "neuropsydia.screen",
            "neuropsydia.start",
            "neuropsydia.tests",
            "neuropsydia.tests.test_color",
            "neuropsydia.write"
        ],
        "version": "1.0.4"
    },
    "neuropy": {
        "cmdline": [],
        "modules": [
            "NeuroPy",
            "NeuroPy.NeuroPy"
        ],
        "version": "0.1"
    },
    "neuropyl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neuropythy": {
        "cmdline": [],
        "modules": [
            "neuropythy",
            "neuropythy.commands",
            "neuropythy.commands.benson14_retinotopy",
            "neuropythy.commands.register_retinotopy",
            "neuropythy.commands.surface_to_ribbon",
            "neuropythy.cortex",
            "neuropythy.freesurfer",
            "neuropythy.freesurfer.subject",
            "neuropythy.geometry",
            "neuropythy.geometry.mesh",
            "neuropythy.geometry.util",
            "neuropythy.immutable",
            "neuropythy.java",
            "neuropythy.registration",
            "neuropythy.registration.core",
            "neuropythy.topology",
            "neuropythy.util",
            "neuropythy.util.command",
            "neuropythy.vision",
            "neuropythy.vision.cmag",
            "neuropythy.vision.models",
            "neuropythy.vision.retinotopy"
        ],
        "version": "0.2.26"
    },
    "neuroscipy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neuroshare": {
        "cmdline": [],
        "modules": [
            "neuroshare",
            "neuroshare.AnalogEntity",
            "neuroshare.Entity",
            "neuroshare.EventEntity",
            "neuroshare.File",
            "neuroshare.Library",
            "neuroshare.NeuralEntity",
            "neuroshare.SegmentEntity"
        ],
        "version": "0.9.3"
    },
    "neurospaces": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0-alpha"
    },
    "neurosynth": {
        "cmdline": [],
        "modules": [
            "neurosynth",
            "neurosynth.analysis",
            "neurosynth.analysis.classify",
            "neurosynth.analysis.cluster",
            "neurosynth.analysis.decode",
            "neurosynth.analysis.meta",
            "neurosynth.analysis.meta (pilab's conflicted copy 2016-01-12)",
            "neurosynth.analysis.network",
            "neurosynth.analysis.plotutils",
            "neurosynth.analysis.reduce",
            "neurosynth.analysis.stats",
            "neurosynth.base",
            "neurosynth.base.dataset",
            "neurosynth.base.imageutils",
            "neurosynth.base.lexparser",
            "neurosynth.base.lextab",
            "neurosynth.base.mappable",
            "neurosynth.base.mask",
            "neurosynth.base.parsetab",
            "neurosynth.base.transformations",
            "neurosynth.tests",
            "neurosynth.tests.test_analysis",
            "neurosynth.tests.test_base",
            "neurosynth.tests.test_kraut",
            "neurosynth.tests.test_utils",
            "neurosynth.tests.utils",
            "neurosynth.utils",
            "neurosynth.version"
        ],
        "version": "0.3.5"
    },
    "neurotools": {
        "cmdline": [],
        "modules": [
            "NeuroTools",
            "NeuroTools.analysis",
            "NeuroTools.datastore",
            "NeuroTools.datastore.interface",
            "NeuroTools.datastore.keygenerators",
            "NeuroTools.datastore.shelve_ds",
            "NeuroTools.export",
            "NeuroTools.io",
            "NeuroTools.optimize",
            "NeuroTools.optimize.optimizers",
            "NeuroTools.optimize.parameter_search",
            "NeuroTools.parameters",
            "NeuroTools.parameters.validators",
            "NeuroTools.plotting",
            "NeuroTools.random",
            "NeuroTools.sandbox",
            "NeuroTools.signals",
            "NeuroTools.signals.analogs",
            "NeuroTools.signals.intervals",
            "NeuroTools.signals.pairs",
            "NeuroTools.signals.spikes",
            "NeuroTools.spike2",
            "NeuroTools.spike2.sonpy",
            "NeuroTools.spike2.sonpy._marker",
            "NeuroTools.spike2.sonpy._waveform",
            "NeuroTools.spike2.sonpy.son",
            "NeuroTools.spike2.spike2channels",
            "NeuroTools.stgen",
            "NeuroTools.tisean",
            "NeuroTools.tisean.tisean",
            "NeuroTools.utilities",
            "NeuroTools.visual_logging"
        ],
        "version": "0.3.1"
    },
    "neurounits": {
        "cmdline": [],
        "modules": [
            "neurounits",
            "neurounits.ast",
            "neurounits.ast.astobjects",
            "neurounits.ast.astobjects_nineml",
            "neurounits.ast.astobjects_randomvariables",
            "neurounits.ast.base",
            "neurounits.ast.compoundports",
            "neurounits.ast.eqnset",
            "neurounits.ast_annotations",
            "neurounits.ast_annotations.bases",
            "neurounits.ast_annotations.common",
            "neurounits.ast_annotations.node_fixedpointannotator",
            "neurounits.ast_annotations.node_range_byoptimiser",
            "neurounits.ast_annotations.node_rangeexpander",
            "neurounits.ast_annotations.node_tagger",
            "neurounits.ast_annotations.node_toint",
            "neurounits.ast_builder",
            "neurounits.ast_builder.builder_visitor_propogate_dimensions",
            "neurounits.ast_builder.builder_visitor_remove_proxies",
            "neurounits.ast_builder.eqnsetbuilder",
            "neurounits.ast_builder.eqnsetbuilder_io",
            "neurounits.ast_builder.eqnsetbuilder_io.io_str_parser",
            "neurounits.ast_builder.eqnsetbuilder_symbol_proxy",
            "neurounits.ast_builder.io_types",
            "neurounits.ast_operations",
            "neurounits.ast_operations.merge_components",
            "neurounits.codegen",
            "neurounits.codegen.cffi_functor",
            "neurounits.codegen.cpp",
            "neurounits.codegen.cpp.fixed_point",
            "neurounits.codegen.cpp.fixed_point.fixed_point_common",
            "neurounits.codegen.cpp.fixed_point.fixed_point_network_writer",
            "neurounits.codegen.nmodl",
            "neurounits.codegen.nmodl.neuron_constants",
            "neurounits.codegen.nmodl.section_writers",
            "neurounits.codegen.population_infrastructure",
            "neurounits.codegen.python_functor",
            "neurounits.codegen.python_functor.functor_generator",
            "neurounits.codegen.python_functor.simulate_component",
            "neurounits.codegen.utils",
            "neurounits.codegen.utils.c_compilation",
            "neurounits.frontend",
            "neurounits.frontend.cmdline",
            "neurounits.frontend.cmdline.neurounits",
            "neurounits.frontend.cmdline.nineml_fe",
            "neurounits.frontend.cmdline.nineml_fe_coverage",
            "neurounits.frontend.cmdline.nineml_fe_simulate",
            "neurounits.frontend.cmdline.nineml_fe_summarise",
            "neurounits.frontend.cmdline.nineml_fe_utils",
            "neurounits.frontend.gui",
            "neurounits.frontend.gui.ninegui",
            "neurounits.importers",
            "neurounits.importers.neuroml",
            "neurounits.importers.neuroml.errors",
            "neurounits.importers.neuroml.neuroml_xml_data",
            "neurounits.importers.neuroml.neuroml_xml_to_eqnset",
            "neurounits.librarymanager",
            "neurounits.locations",
            "neurounits.misc",
            "neurounits.neurounitparser",
            "neurounits.nulogging",
            "neurounits.nuts_io",
            "neurounits.simulation_io",
            "neurounits.simulation_io.results",
            "neurounits.simulation_io.simulationstatedata",
            "neurounits.unit_data",
            "neurounits.unit_data.units_data_unitterms",
            "neurounits.unit_errors",
            "neurounits.unit_expr_parsing",
            "neurounits.unit_expr_parsing.units_expr_lexer",
            "neurounits.unit_expr_parsing.units_expr_parsetypes",
            "neurounits.unit_expr_parsing.units_expr_preprocessing",
            "neurounits.unit_expr_parsing.units_expr_yacc",
            "neurounits.unit_term_parsing",
            "neurounits.unit_term_parsing.unitterm_lexing",
            "neurounits.unit_term_parsing.unitterm_parsing",
            "neurounits.units_backends",
            "neurounits.units_backends.bases",
            "neurounits.units_backends.mh",
            "neurounits.units_backends.pquantities",
            "neurounits.units_misc",
            "neurounits.visitors",
            "neurounits.visitors.bases",
            "neurounits.visitors.bases.base_actioner",
            "neurounits.visitors.bases.base_actioner_default",
            "neurounits.visitors.bases.base_actioner_default_ignoremissing",
            "neurounits.visitors.bases.base_visitor",
            "neurounits.visitors.common",
            "neurounits.visitors.common.ast_cloning",
            "neurounits.visitors.common.ast_node_connections",
            "neurounits.visitors.common.ast_replace_node",
            "neurounits.visitors.common.ast_symbol_dependancies",
            "neurounits.visitors.common.ast_symbol_dependancies_new",
            "neurounits.visitors.common.clone_from_eqnset",
            "neurounits.visitors.common.equation_optimisations",
            "neurounits.visitors.common.function_expander",
            "neurounits.visitors.common.node_label_with_integers",
            "neurounits.visitors.common.plot_networkx",
            "neurounits.visitors.common.simplify_symbolic_constants",
            "neurounits.visitors.common.terminal_node_collector",
            "neurounits.visualisation",
            "neurounits.visualisation.mredoc",
            "neurounits.visualisation.mredoc.writer_ast_to_mredoc",
            "neurounits.visualisation.networkx",
            "neurounitscontrib",
            "neurounitscontrib.demo",
            "neurounitscontrib.demo.plugins",
            "neurounitscontrib.demo.plugins.demo1",
            "neurounitscontrib.demo.plugins.demo2",
            "neurounitscontrib.demo.plugins.demo3",
            "neurounitscontrib.demo.plugins.demo4",
            "neurounitscontrib.demo.plugins.demo5",
            "neurounitscontrib.demo.plugins.demo6",
            "neurounitscontrib.test",
            "neurounitscontrib.test.plugins",
            "neurounitscontrib.test.plugins.t01_validate_nuts",
            "neurounitscontrib.test.plugins.t11_lorenz",
            "neurounitscontrib.test.plugins.t12_van_de_pol"
        ],
        "version": "0.1.2"
    },
    "neutrino": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "neutron": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neutron-beam": {
        "cmdline": [],
        "modules": [
            "nbeam",
            "nbeam.file_handlers",
            "nbeam.handlers",
            "nbeam.run",
            "nbeam.server",
            "nbeam.utils",
            "nbeam.version"
        ],
        "version": "16.8.2"
    },
    "neutron-dynamic-routing": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neutron-fixtureless": {
        "cmdline": [],
        "modules": [
            "fixtureless",
            "fixtureless.constants",
            "fixtureless.exceptions",
            "fixtureless.factory",
            "fixtureless.generator",
            "fixtureless.utils"
        ],
        "version": "1.4.3.3"
    },
    "neutron-lbaas-dashboard": {
        "cmdline": [],
        "modules": [],
        "version": "3.0.0.0b1"
    },
    "neutron-lib": {
        "cmdline": [],
        "modules": [],
        "version": "1.6.0"
    },
    "neutron-ml2-driver-apic": {
        "cmdline": [],
        "modules": [
            "apic_ml2",
            "apic_ml2.neutron",
            "apic_ml2.neutron.agent",
            "apic_ml2.neutron.agent.linux",
            "apic_ml2.neutron.agent.linux.apic_dhcp",
            "apic_ml2.neutron.agent.metadata",
            "apic_ml2.neutron.agent.metadata.namespace_proxy",
            "apic_ml2.neutron.db",
            "apic_ml2.neutron.db.migration",
            "apic_ml2.neutron.db.migration.alembic_migrations",
            "apic_ml2.neutron.db.migration.alembic_migrations.env",
            "apic_ml2.neutron.db.migration.cli",
            "apic_ml2.neutron.db.migration.models",
            "apic_ml2.neutron.db.migration.models.head",
            "apic_ml2.neutron.db.port_ha_ipaddress_binding",
            "apic_ml2.neutron.plugins",
            "apic_ml2.neutron.plugins.ml2",
            "apic_ml2.neutron.plugins.ml2.drivers",
            "apic_ml2.neutron.plugins.ml2.drivers.cisco",
            "apic_ml2.neutron.plugins.ml2.drivers.cisco.apic",
            "apic_ml2.neutron.plugins.ml2.drivers.cisco.apic.apic_sync",
            "apic_ml2.neutron.plugins.ml2.drivers.cisco.apic.apic_topology",
            "apic_ml2.neutron.plugins.ml2.drivers.cisco.apic.attestation",
            "apic_ml2.neutron.plugins.ml2.drivers.cisco.apic.config",
            "apic_ml2.neutron.plugins.ml2.drivers.cisco.apic.mechanism_apic",
            "apic_ml2.neutron.plugins.ml2.drivers.cisco.apic.nova_client",
            "apic_ml2.neutron.plugins.ml2.drivers.cisco.apic.rpc",
            "apic_ml2.neutron.services",
            "apic_ml2.neutron.services.l3_router",
            "apic_ml2.neutron.services.l3_router.l3_apic",
            "apic_ml2.neutron.tests",
            "apic_ml2.neutron.tests.unit",
            "apic_ml2.neutron.tests.unit.db",
            "apic_ml2.neutron.tests.unit.db.test_port_ha_ipaddress_binding",
            "apic_ml2.neutron.tests.unit.ml2",
            "apic_ml2.neutron.tests.unit.ml2.drivers",
            "apic_ml2.neutron.tests.unit.ml2.drivers.cisco",
            "apic_ml2.neutron.tests.unit.ml2.drivers.cisco.apic",
            "apic_ml2.neutron.tests.unit.ml2.drivers.cisco.apic.test_cisco_apic_common",
            "apic_ml2.neutron.tests.unit.ml2.drivers.cisco.apic.test_cisco_apic_mechanism_driver",
            "apic_ml2.neutron.tests.unit.ml2.drivers.cisco.apic.test_cisco_apic_sync",
            "apic_ml2.neutron.tests.unit.ml2.drivers.cisco.apic.test_cisco_apic_topology_agent",
            "apic_ml2.neutron.tests.unit.services",
            "apic_ml2.neutron.tests.unit.services.l3_router",
            "apic_ml2.neutron.tests.unit.services.l3_router.test_l3_apic_plugin",
            "apic_ml2.tests",
            "apic_ml2.tests.base",
            "apic_ml2.tests.test_apic_ml2"
        ],
        "version": "2014.2.2"
    },
    "neutron-opflex-agent": {
        "cmdline": [],
        "modules": [
            "opflexagent",
            "opflexagent.as_metadata_manager",
            "opflexagent.constants",
            "opflexagent.gbp_ovs_agent",
            "opflexagent.opflex_notify",
            "opflexagent.rpc",
            "opflexagent.snat_iptables_manager",
            "opflexagent.test",
            "opflexagent.test.test_gbp_ovs_agent",
            "opflexagent.type_opflex"
        ],
        "version": "2014.2.0"
    },
    "neutron-pardnet-lbaas": {
        "cmdline": [],
        "modules": [
            "neutron_pardnet_lbaas",
            "neutron_pardnet_lbaas.pardnet_client",
            "neutron_pardnet_lbaas.pardnet_driver"
        ],
        "version": "0.0.1"
    },
    "neutron-plugin-contrail": {
        "cmdline": [],
        "modules": [
            "neutron_plugin_contrail",
            "neutron_plugin_contrail.extensions",
            "neutron_plugin_contrail.extensions.contrail",
            "neutron_plugin_contrail.extensions.ipam",
            "neutron_plugin_contrail.extensions.policy",
            "neutron_plugin_contrail.extensions.vpcroutetable",
            "neutron_plugin_contrail.plugins",
            "neutron_plugin_contrail.plugins.opencontrail",
            "neutron_plugin_contrail.plugins.opencontrail.agent",
            "neutron_plugin_contrail.plugins.opencontrail.agent.contrail_vif_driver",
            "neutron_plugin_contrail.plugins.opencontrail.contrail_plugin",
            "neutron_plugin_contrail.plugins.opencontrail.contrail_plugin_ipam",
            "neutron_plugin_contrail.plugins.opencontrail.contrail_plugin_policy",
            "neutron_plugin_contrail.plugins.opencontrail.contrail_plugin_vpc",
            "neutron_plugin_contrail.plugins.opencontrail.loadbalancer",
            "neutron_plugin_contrail.plugins.opencontrail.loadbalancer.loadbalancer_db",
            "neutron_plugin_contrail.plugins.opencontrail.loadbalancer.loadbalancer_healthmonitor",
            "neutron_plugin_contrail.plugins.opencontrail.loadbalancer.loadbalancer_member",
            "neutron_plugin_contrail.plugins.opencontrail.loadbalancer.loadbalancer_pool",
            "neutron_plugin_contrail.plugins.opencontrail.loadbalancer.plugin",
            "neutron_plugin_contrail.plugins.opencontrail.loadbalancer.resource_manager",
            "neutron_plugin_contrail.plugins.opencontrail.loadbalancer.utils",
            "neutron_plugin_contrail.plugins.opencontrail.loadbalancer.virtual_ip",
            "neutron_plugin_contrail.plugins.opencontrail.quota",
            "neutron_plugin_contrail.plugins.opencontrail.quota.driver",
            "neutron_plugin_contrail.tests",
            "neutron_plugin_contrail.tests.loadbalancer",
            "neutron_plugin_contrail.tests.loadbalancer.test_driver",
            "neutron_plugin_contrail.tests.loadbalancer.test_plugin",
            "neutron_plugin_contrail.tests.test_plugins_opencontrail_quota_driver",
            "neutron_plugin_contrail.tests.unit",
            "neutron_plugin_contrail.tests.unit.opencontrail",
            "neutron_plugin_contrail.tests.unit.opencontrail.test_contrail_plugin"
        ],
        "version": "0.1.2"
    },
    "neutron-plugin-pluribus": {
        "cmdline": [],
        "modules": [
            "pluribus",
            "pluribus.plugins",
            "pluribus.plugins.ml2",
            "pluribus.plugins.ml2.config",
            "pluribus.plugins.ml2.mech_pluribus",
            "pluribus.plugins.pn_plugin"
        ],
        "version": "3.0"
    },
    "neutron-powervm": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neutron-radware-lbaas": {
        "cmdline": [],
        "modules": [
            "neutron_radware_lbaas",
            "neutron_radware_lbaas.driver",
            "neutron_radware_lbaas.exceptions"
        ],
        "version": "2.20.00-13"
    },
    "neutron-radware-lbaas-v2": {
        "cmdline": [],
        "modules": [
            "neutron_radware_lbaas_v2",
            "neutron_radware_lbaas_v2.base_v2_driver",
            "neutron_radware_lbaas_v2.exceptions",
            "neutron_radware_lbaas_v2.rest_client",
            "neutron_radware_lbaas_v2.v2_driver"
        ],
        "version": "3.20.0-6"
    },
    "neutron-vpnaas": {
        "cmdline": [],
        "modules": [],
        "version": "10.0.0"
    },
    "neutron-zvm-plugin": {
        "cmdline": [],
        "modules": [],
        "version": "8.0.1.dev4"
    },
    "neutronbraggedge": {
        "cmdline": [],
        "modules": [
            "neutronbraggedge",
            "neutronbraggedge.braggedge",
            "neutronbraggedge.braggedges_handler",
            "neutronbraggedge.braggedges_handler.braggedge_calculator",
            "neutronbraggedge.braggedges_handler.structure_handler",
            "neutronbraggedge.config",
            "neutronbraggedge.constants",
            "neutronbraggedge.data",
            "neutronbraggedge.experiment_handler",
            "neutronbraggedge.experiment_handler.experiment",
            "neutronbraggedge.experiment_handler.lambda_wavelength",
            "neutronbraggedge.experiment_handler.tof",
            "neutronbraggedge.lattice_handler",
            "neutronbraggedge.lattice_handler.lattice",
            "neutronbraggedge.material_handler",
            "neutronbraggedge.material_handler.retrieve_material_metadata",
            "neutronbraggedge.material_handler.retrieve_metadata_table",
            "neutronbraggedge.utilities"
        ],
        "version": "2.0.0"
    },
    "neutronpy": {
        "cmdline": [],
        "modules": [
            "neutronpy",
            "neutronpy.constants",
            "neutronpy.crystal",
            "neutronpy.crystal.atom",
            "neutronpy.crystal.lattice",
            "neutronpy.crystal.material",
            "neutronpy.crystal.plot",
            "neutronpy.crystal.sample",
            "neutronpy.crystal.structure_factors",
            "neutronpy.crystal.symmetry",
            "neutronpy.data",
            "neutronpy.data.analysis",
            "neutronpy.data.data",
            "neutronpy.data.plot",
            "neutronpy.data.scans",
            "neutronpy.energy",
            "neutronpy.exceptions",
            "neutronpy.fileio",
            "neutronpy.fileio.data",
            "neutronpy.fileio.instrument",
            "neutronpy.fileio.loaders",
            "neutronpy.fileio.loaders.dcs_mslice",
            "neutronpy.fileio.loaders.grasp",
            "neutronpy.fileio.loaders.ice",
            "neutronpy.fileio.loaders.icp",
            "neutronpy.fileio.loaders.mad",
            "neutronpy.fileio.loaders.neutronpy",
            "neutronpy.fileio.loaders.spice",
            "neutronpy.fileio.material",
            "neutronpy.fileio.sample",
            "neutronpy.functions",
            "neutronpy.gui",
            "neutronpy.instrument",
            "neutronpy.instrument.analyzer",
            "neutronpy.instrument.goniometer",
            "neutronpy.instrument.instrument",
            "neutronpy.instrument.monochromator",
            "neutronpy.instrument.plot",
            "neutronpy.instrument.tools",
            "neutronpy.logger",
            "neutronpy.lsfit",
            "neutronpy.lsfit.fitter",
            "neutronpy.lsfit.plot",
            "neutronpy.lsfit.tools",
            "neutronpy.models",
            "neutronpy.scattering",
            "neutronpy.scattering.pattern",
            "neutronpy.scattering.polarimetry",
            "neutronpy.scattering.polarization",
            "neutronpy.spurion"
        ],
        "version": "1.0.4"
    },
    "neverbounce": {
        "cmdline": [],
        "modules": [
            "neverbounce",
            "neverbounce.client",
            "neverbounce.exceptions",
            "neverbounce.objects"
        ],
        "version": "0.2.0"
    },
    "neveredit": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "neverfails": {
        "cmdline": [],
        "modules": [
            "neverfails",
            "neverfails.fails",
            "neverfails.neverfails",
            "neverfails.terrain"
        ],
        "version": "0.0.1"
    },
    "nevermore": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.0"
    },
    "nevow": {
        "cmdline": [
            "nevow-xmlgettext",
            "nit"
        ],
        "modules": [
            "formless",
            "formless.annotate",
            "formless.configurable",
            "formless.formutils",
            "formless.iformless",
            "formless.processors",
            "formless.test",
            "formless.test.test_formless",
            "formless.test.test_freeform",
            "formless.webform",
            "nevow",
            "nevow._flat",
            "nevow._version",
            "nevow._widget_plugin",
            "nevow.accessors",
            "nevow.appserver",
            "nevow.athena",
            "nevow.blocks",
            "nevow.canvas",
            "nevow.compression",
            "nevow.compy",
            "nevow.context",
            "nevow.dirlist",
            "nevow.entities",
            "nevow.errors",
            "nevow.events",
            "nevow.failure",
            "nevow.flat",
            "nevow.flat.flatmdom",
            "nevow.flat.flatsax",
            "nevow.flat.flatstan",
            "nevow.flat.ten",
            "nevow.flat.twist",
            "nevow.guard",
            "nevow.i18n",
            "nevow.inevow",
            "nevow.itaglibrary",
            "nevow.json",
            "nevow.jsutil",
            "nevow.livetrial",
            "nevow.livetrial.runner",
            "nevow.livetrial.testcase",
            "nevow.loaders",
            "nevow.page",
            "nevow.plugins",
            "nevow.plugins.nevow_package",
            "nevow.query",
            "nevow.rend",
            "nevow.scripts",
            "nevow.scripts.nit",
            "nevow.scripts.xmlgettext",
            "nevow.stan",
            "nevow.static",
            "nevow.taglibrary",
            "nevow.taglibrary.cal",
            "nevow.taglibrary.tabbedPane",
            "nevow.tags",
            "nevow.test",
            "nevow.test.acceptance",
            "nevow.test.acceptance.reconnect",
            "nevow.test.acceptance.tabbedpane",
            "nevow.test.livetest_athena",
            "nevow.test.livetest_runtime",
            "nevow.test.test_accessors",
            "nevow.test.test_appserver",
            "nevow.test.test_athena",
            "nevow.test.test_compression",
            "nevow.test.test_consolejstest",
            "nevow.test.test_context",
            "nevow.test.test_disktemplate",
            "nevow.test.test_element",
            "nevow.test.test_errorhandler",
            "nevow.test.test_flatsax",
            "nevow.test.test_flatstan",
            "nevow.test.test_flatten",
            "nevow.test.test_guard",
            "nevow.test.test_howtolistings",
            "nevow.test.test_i18n",
            "nevow.test.test_javascript",
            "nevow.test.test_json",
            "nevow.test.test_later",
            "nevow.test.test_loaders",
            "nevow.test.test_newflat",
            "nevow.test.test_nit",
            "nevow.test.test_package",
            "nevow.test.test_passobj",
            "nevow.test.test_query",
            "nevow.test.test_rend",
            "nevow.test.test_stan",
            "nevow.test.test_static",
            "nevow.test.test_tabbedpane",
            "nevow.test.test_tags",
            "nevow.test.test_testutil",
            "nevow.test.test_url",
            "nevow.test.test_useragent",
            "nevow.test.test_utils",
            "nevow.testutil",
            "nevow.url",
            "nevow.useragent",
            "nevow.util",
            "nevow.vhost",
            "twisted.plugins.nevow_widget"
        ],
        "version": "0.14.2"
    },
    "new": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "new-1": {
        "cmdline": [],
        "modules": [
            "new_1"
        ],
        "version": "1.2.0"
    },
    "new-demo": {
        "cmdline": [],
        "modules": [
            "new_demo",
            "new_demo.new_demo"
        ],
        "version": "0.1.1"
    },
    "new-html": {
        "cmdline": [],
        "modules": [
            "new_html",
            "new_html.new_html",
            "new_html.stuff"
        ],
        "version": "0.6.0"
    },
    "new-my-json": {
        "cmdline": [],
        "modules": [
            "new_my_json",
            "new_my_json.new_my_json"
        ],
        "version": "1.0.1"
    },
    "new-nester": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "new-nesterprint": {
        "cmdline": [],
        "modules": [
            "new_nesterprint"
        ],
        "version": "1.3.0"
    },
    "new-nexus": {
        "cmdline": [],
        "modules": [
            "example_module",
            "example_module.models",
            "example_module.nexus_modules",
            "example_project",
            "example_project.manage",
            "example_project.settings",
            "example_project.urls",
            "nexus",
            "nexus.conf",
            "nexus.models",
            "nexus.modules",
            "nexus.nexus_modules",
            "nexus.sites",
            "nexus.templatetags",
            "nexus.templatetags.nexus_admin",
            "nexus.templatetags.nexus_helpers"
        ],
        "version": "0.3.1"
    },
    "new-package1": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "new-pip": {
        "cmdline": [],
        "modules": [
            "new_pip"
        ],
        "version": "0.1"
    },
    "new-python": {
        "cmdline": [],
        "modules": [
            "new_python",
            "new_python.creator",
            "new_python.template"
        ],
        "version": "0.2"
    },
    "newbar-afisha": {
        "cmdline": [
            "newbar-afisha"
        ],
        "modules": [
            "newbar_afisha"
        ],
        "version": "0.0.7"
    },
    "newer": {
        "cmdline": [],
        "modules": [
            "new"
        ],
        "version": "1.0.0"
    },
    "newer-than": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.12"
    },
    "newer0-nester": {
        "cmdline": [],
        "modules": [
            "newer0_nester"
        ],
        "version": "1.3.0"
    },
    "newernester": {
        "cmdline": [],
        "modules": [
            "newernester"
        ],
        "version": "1.0.0"
    },
    "newevidence": {
        "cmdline": [],
        "modules": [
            "evidence",
            "evidence.plugs",
            "evidence.plugs.axiom",
            "evidence.plugs.blocking",
            "evidence.plugs.consider",
            "evidence.plugs.fact",
            "evidence.plugs.making",
            "evidence.plugs.mention",
            "evidence.plugs.missing",
            "evidence.plugs.notice",
            "evidence.plugs.question",
            "evidence.plugs.seen",
            "evidence.plugs.warning"
        ],
        "version": "4"
    },
    "newick": {
        "cmdline": [],
        "modules": [
            "newick",
            "tests"
        ],
        "version": "0.7.0"
    },
    "newlinejson": {
        "cmdline": [],
        "modules": [
            "newlinejson",
            "newlinejson.core"
        ],
        "version": "1.0"
    },
    "newman": {
        "cmdline": [],
        "modules": [
            "newman",
            "newman.argument",
            "newman.color",
            "newman.core",
            "newman.decorators"
        ],
        "version": "0.6.7"
    },
    "newnester": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "newpacktest": {
        "cmdline": [],
        "modules": [
            "newpacktest",
            "newpacktest.third"
        ],
        "version": "1.0.1"
    },
    "newportesp": {
        "cmdline": [],
        "modules": [
            "newportESP"
        ],
        "version": "1.1"
    },
    "newprint": {
        "cmdline": [],
        "modules": [
            "newprint"
        ],
        "version": "1.0.1"
    },
    "newproject": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "newpy": {
        "cmdline": [],
        "modules": [
            "resources",
            "resources.Logger",
            "resources.py_skeleton",
            "resources.py_skeleton_with_logger",
            "resources.setup"
        ],
        "version": "1.1.16"
    },
    "newrelic": {
        "cmdline": [
            "newrelic-admin"
        ],
        "modules": [
            "newrelic",
            "newrelic.admin",
            "newrelic.admin.data_source",
            "newrelic.admin.debug_console",
            "newrelic.admin.generate_config",
            "newrelic.admin.license_info",
            "newrelic.admin.license_key",
            "newrelic.admin.local_config",
            "newrelic.admin.network_config",
            "newrelic.admin.record_deploy",
            "newrelic.admin.run_program",
            "newrelic.admin.run_python",
            "newrelic.admin.server_config",
            "newrelic.admin.validate_config",
            "newrelic.agent",
            "newrelic.api",
            "newrelic.api.application",
            "newrelic.api.background_task",
            "newrelic.api.database_trace",
            "newrelic.api.datastore_trace",
            "newrelic.api.error_trace",
            "newrelic.api.exceptions",
            "newrelic.api.external_trace",
            "newrelic.api.function_profile",
            "newrelic.api.function_trace",
            "newrelic.api.generator_trace",
            "newrelic.api.html_insertion",
            "newrelic.api.import_hook",
            "newrelic.api.in_function",
            "newrelic.api.memcache_trace",
            "newrelic.api.name_transaction",
            "newrelic.api.object_wrapper",
            "newrelic.api.out_function",
            "newrelic.api.post_function",
            "newrelic.api.pre_function",
            "newrelic.api.profile_trace",
            "newrelic.api.settings",
            "newrelic.api.solr_trace",
            "newrelic.api.time_trace",
            "newrelic.api.transaction",
            "newrelic.api.transaction_name",
            "newrelic.api.web_transaction",
            "newrelic.bootstrap",
            "newrelic.bootstrap.sitecustomize",
            "newrelic.build",
            "newrelic.common",
            "newrelic.common.certs",
            "newrelic.common.encoding_utils",
            "newrelic.common.log_file",
            "newrelic.common.object_names",
            "newrelic.common.object_wrapper",
            "newrelic.common.stopwatch",
            "newrelic.common.system_info",
            "newrelic.common.utilization",
            "newrelic.config",
            "newrelic.console",
            "newrelic.core",
            "newrelic.core.agent",
            "newrelic.core.application",
            "newrelic.core.attribute",
            "newrelic.core.attribute_filter",
            "newrelic.core.config",
            "newrelic.core.custom_event",
            "newrelic.core.data_collector",
            "newrelic.core.database_node",
            "newrelic.core.database_utils",
            "newrelic.core.datastore_node",
            "newrelic.core.environment",
            "newrelic.core.error_collector",
            "newrelic.core.error_node",
            "newrelic.core.external_node",
            "newrelic.core.function_node",
            "newrelic.core.internal_metrics",
            "newrelic.core.memcache_node",
            "newrelic.core.metric",
            "newrelic.core.profile_sessions",
            "newrelic.core.rules_engine",
            "newrelic.core.solr_node",
            "newrelic.core.stack_trace",
            "newrelic.core.stats_engine",
            "newrelic.core.string_table",
            "newrelic.core.thread_utilization",
            "newrelic.core.trace_node",
            "newrelic.core.transaction_cache",
            "newrelic.core.transaction_node",
            "newrelic.core.xray_session",
            "newrelic.extras",
            "newrelic.extras.framework_django",
            "newrelic.extras.framework_django.templatetags",
            "newrelic.extras.framework_django.templatetags.newrelic_tags",
            "newrelic.hooks",
            "newrelic.hooks.adapter_cherrypy",
            "newrelic.hooks.adapter_flup",
            "newrelic.hooks.adapter_gevent",
            "newrelic.hooks.adapter_gunicorn",
            "newrelic.hooks.adapter_meinheld",
            "newrelic.hooks.adapter_paste",
            "newrelic.hooks.adapter_waitress",
            "newrelic.hooks.adapter_wsgiref",
            "newrelic.hooks.application_celery",
            "newrelic.hooks.application_gearman",
            "newrelic.hooks.component_cornice",
            "newrelic.hooks.component_djangorestframework",
            "newrelic.hooks.component_piston",
            "newrelic.hooks.component_tastypie",
            "newrelic.hooks.coroutines_gevent",
            "newrelic.hooks.database_cx_oracle",
            "newrelic.hooks.database_dbapi2",
            "newrelic.hooks.database_ibm_db_dbi",
            "newrelic.hooks.database_mysql",
            "newrelic.hooks.database_mysqldb",
            "newrelic.hooks.database_oursql",
            "newrelic.hooks.database_postgresql",
            "newrelic.hooks.database_psycopg2",
            "newrelic.hooks.database_psycopg2cffi",
            "newrelic.hooks.database_psycopg2ct",
            "newrelic.hooks.database_pymssql",
            "newrelic.hooks.database_pymysql",
            "newrelic.hooks.database_pyodbc",
            "newrelic.hooks.database_sqlite",
            "newrelic.hooks.datastore_bmemcached",
            "newrelic.hooks.datastore_elasticsearch",
            "newrelic.hooks.datastore_memcache",
            "newrelic.hooks.datastore_motor",
            "newrelic.hooks.datastore_pyelasticsearch",
            "newrelic.hooks.datastore_pylibmc",
            "newrelic.hooks.datastore_pymemcache",
            "newrelic.hooks.datastore_pymongo",
            "newrelic.hooks.datastore_pysolr",
            "newrelic.hooks.datastore_redis",
            "newrelic.hooks.datastore_solrpy",
            "newrelic.hooks.datastore_umemcache",
            "newrelic.hooks.external_botocore",
            "newrelic.hooks.external_dropbox",
            "newrelic.hooks.external_facepy",
            "newrelic.hooks.external_feedparser",
            "newrelic.hooks.external_httplib",
            "newrelic.hooks.external_httplib2",
            "newrelic.hooks.external_pywapi",
            "newrelic.hooks.external_requests",
            "newrelic.hooks.external_thrift",
            "newrelic.hooks.external_urllib",
            "newrelic.hooks.external_urllib2",
            "newrelic.hooks.external_urllib3",
            "newrelic.hooks.external_xmlrpclib",
            "newrelic.hooks.framework_bottle",
            "newrelic.hooks.framework_cherrypy",
            "newrelic.hooks.framework_django",
            "newrelic.hooks.framework_flask",
            "newrelic.hooks.framework_pylons",
            "newrelic.hooks.framework_pyramid",
            "newrelic.hooks.framework_tornado",
            "newrelic.hooks.framework_tornado.curl_httpclient",
            "newrelic.hooks.framework_tornado.gen",
            "newrelic.hooks.framework_tornado.httpserver",
            "newrelic.hooks.framework_tornado.httputil",
            "newrelic.hooks.framework_tornado.ioloop",
            "newrelic.hooks.framework_tornado.iostream",
            "newrelic.hooks.framework_tornado.simple_httpclient",
            "newrelic.hooks.framework_tornado.stack_context",
            "newrelic.hooks.framework_tornado.template",
            "newrelic.hooks.framework_tornado.web",
            "newrelic.hooks.framework_tornado.wsgi",
            "newrelic.hooks.framework_tornado_r1",
            "newrelic.hooks.framework_tornado_r3",
            "newrelic.hooks.framework_tornado_r3.concurrent",
            "newrelic.hooks.framework_tornado_r3.curl_httpclient",
            "newrelic.hooks.framework_tornado_r3.gen",
            "newrelic.hooks.framework_tornado_r3.http1connection",
            "newrelic.hooks.framework_tornado_r3.httpclient",
            "newrelic.hooks.framework_tornado_r3.httpserver",
            "newrelic.hooks.framework_tornado_r3.httputil",
            "newrelic.hooks.framework_tornado_r3.ioloop",
            "newrelic.hooks.framework_tornado_r3.stack_context",
            "newrelic.hooks.framework_tornado_r3.util",
            "newrelic.hooks.framework_tornado_r3.web",
            "newrelic.hooks.framework_twisted",
            "newrelic.hooks.framework_web2py",
            "newrelic.hooks.framework_webpy",
            "newrelic.hooks.memcache_memcache",
            "newrelic.hooks.memcache_pylibmc",
            "newrelic.hooks.memcache_umemcache",
            "newrelic.hooks.middleware_flask_compress",
            "newrelic.hooks.middleware_weberror",
            "newrelic.hooks.newrelic_agent",
            "newrelic.hooks.nosql_pymongo",
            "newrelic.hooks.nosql_redis",
            "newrelic.hooks.solr_pysolr",
            "newrelic.hooks.solr_solrpy",
            "newrelic.hooks.template_genshi",
            "newrelic.hooks.template_jinja2",
            "newrelic.hooks.template_mako",
            "newrelic.network",
            "newrelic.network.addresses",
            "newrelic.network.exceptions",
            "newrelic.network.platform_api",
            "newrelic.platform",
            "newrelic.samplers",
            "newrelic.samplers.cpu_usage",
            "newrelic.samplers.data_sampler",
            "newrelic.samplers.decorators",
            "newrelic.samplers.memory_usage",
            "newrelic/packages",
            "newrelic/packages.six",
            "newrelic/packages/requests",
            "newrelic/packages/requests.adapters",
            "newrelic/packages/requests.api",
            "newrelic/packages/requests.auth",
            "newrelic/packages/requests.certs",
            "newrelic/packages/requests.compat",
            "newrelic/packages/requests.cookies",
            "newrelic/packages/requests.exceptions",
            "newrelic/packages/requests.hooks",
            "newrelic/packages/requests.models",
            "newrelic/packages/requests.sessions",
            "newrelic/packages/requests.status_codes",
            "newrelic/packages/requests.structures",
            "newrelic/packages/requests.utils",
            "newrelic/packages/requests/packages",
            "newrelic/packages/requests/packages/chardet",
            "newrelic/packages/requests/packages/chardet.big5freq",
            "newrelic/packages/requests/packages/chardet.big5prober",
            "newrelic/packages/requests/packages/chardet.chardetect",
            "newrelic/packages/requests/packages/chardet.chardistribution",
            "newrelic/packages/requests/packages/chardet.charsetgroupprober",
            "newrelic/packages/requests/packages/chardet.charsetprober",
            "newrelic/packages/requests/packages/chardet.codingstatemachine",
            "newrelic/packages/requests/packages/chardet.compat",
            "newrelic/packages/requests/packages/chardet.constants",
            "newrelic/packages/requests/packages/chardet.cp949prober",
            "newrelic/packages/requests/packages/chardet.escprober",
            "newrelic/packages/requests/packages/chardet.escsm",
            "newrelic/packages/requests/packages/chardet.eucjpprober",
            "newrelic/packages/requests/packages/chardet.euckrfreq",
            "newrelic/packages/requests/packages/chardet.euckrprober",
            "newrelic/packages/requests/packages/chardet.euctwfreq",
            "newrelic/packages/requests/packages/chardet.euctwprober",
            "newrelic/packages/requests/packages/chardet.gb2312freq",
            "newrelic/packages/requests/packages/chardet.gb2312prober",
            "newrelic/packages/requests/packages/chardet.hebrewprober",
            "newrelic/packages/requests/packages/chardet.jisfreq",
            "newrelic/packages/requests/packages/chardet.jpcntx",
            "newrelic/packages/requests/packages/chardet.langbulgarianmodel",
            "newrelic/packages/requests/packages/chardet.langcyrillicmodel",
            "newrelic/packages/requests/packages/chardet.langgreekmodel",
            "newrelic/packages/requests/packages/chardet.langhebrewmodel",
            "newrelic/packages/requests/packages/chardet.langhungarianmodel",
            "newrelic/packages/requests/packages/chardet.langthaimodel",
            "newrelic/packages/requests/packages/chardet.latin1prober",
            "newrelic/packages/requests/packages/chardet.mbcharsetprober",
            "newrelic/packages/requests/packages/chardet.mbcsgroupprober",
            "newrelic/packages/requests/packages/chardet.mbcssm",
            "newrelic/packages/requests/packages/chardet.sbcharsetprober",
            "newrelic/packages/requests/packages/chardet.sbcsgroupprober",
            "newrelic/packages/requests/packages/chardet.sjisprober",
            "newrelic/packages/requests/packages/chardet.universaldetector",
            "newrelic/packages/requests/packages/chardet.utf8prober",
            "newrelic/packages/requests/packages/urllib3",
            "newrelic/packages/requests/packages/urllib3._collections",
            "newrelic/packages/requests/packages/urllib3.connection",
            "newrelic/packages/requests/packages/urllib3.connectionpool",
            "newrelic/packages/requests/packages/urllib3.exceptions",
            "newrelic/packages/requests/packages/urllib3.fields",
            "newrelic/packages/requests/packages/urllib3.filepost",
            "newrelic/packages/requests/packages/urllib3.poolmanager",
            "newrelic/packages/requests/packages/urllib3.request",
            "newrelic/packages/requests/packages/urllib3.response",
            "newrelic/packages/requests/packages/urllib3/packages",
            "newrelic/packages/requests/packages/urllib3/packages.ordered_dict",
            "newrelic/packages/requests/packages/urllib3/packages.six",
            "newrelic/packages/requests/packages/urllib3/packages/ssl_match_hostname",
            "newrelic/packages/requests/packages/urllib3/packages/ssl_match_hostname._implementation",
            "newrelic/packages/requests/packages/urllib3/util",
            "newrelic/packages/requests/packages/urllib3/util.connection",
            "newrelic/packages/requests/packages/urllib3/util.request",
            "newrelic/packages/requests/packages/urllib3/util.response",
            "newrelic/packages/requests/packages/urllib3/util.retry",
            "newrelic/packages/requests/packages/urllib3/util.ssl_",
            "newrelic/packages/requests/packages/urllib3/util.timeout",
            "newrelic/packages/requests/packages/urllib3/util.url",
            "newrelic/packages/wrapt",
            "newrelic/packages/wrapt.arguments",
            "newrelic/packages/wrapt.decorators",
            "newrelic/packages/wrapt.importer",
            "newrelic/packages/wrapt.wrappers"
        ],
        "version": "2.86.1.66"
    },
    "newrelic-api": {
        "cmdline": [],
        "modules": [
            "newrelic_api",
            "newrelic_api.alert_policies",
            "newrelic_api.application_hosts",
            "newrelic_api.application_instances",
            "newrelic_api.applications",
            "newrelic_api.base",
            "newrelic_api.browser_applications",
            "newrelic_api.components",
            "newrelic_api.exceptions",
            "newrelic_api.key_transactions",
            "newrelic_api.labels",
            "newrelic_api.notification_channels",
            "newrelic_api.plugins",
            "newrelic_api.servers",
            "newrelic_api.tests",
            "newrelic_api.tests.alert_policies_tests",
            "newrelic_api.tests.application_hosts_tests",
            "newrelic_api.tests.application_instances_tests",
            "newrelic_api.tests.applications_tests",
            "newrelic_api.tests.base_tests",
            "newrelic_api.tests.browser_applications_tests",
            "newrelic_api.tests.components_tests",
            "newrelic_api.tests.key_transactions_tests",
            "newrelic_api.tests.labels_tests",
            "newrelic_api.tests.notification_channels_tests",
            "newrelic_api.tests.plugins_tests",
            "newrelic_api.tests.servers_tests",
            "newrelic_api.tests.user_tests",
            "newrelic_api.users",
            "newrelic_api.version"
        ],
        "version": "1.0.4"
    },
    "newrelic-cli": {
        "cmdline": [],
        "modules": [
            "newrelic_cli",
            "newrelic_cli.alerts",
            "newrelic_cli.base",
            "newrelic_cli.cli",
            "newrelic_cli.exceptions",
            "newrelic_cli.model",
            "newrelic_cli.synthetics",
            "newrelic_cli.tests",
            "newrelic_cli.tests.test_alerts",
            "newrelic_cli.tests.test_base",
            "newrelic_cli.tests.test_synthetics",
            "newrelic_cli.version"
        ],
        "version": "1.0.0"
    },
    "newrelic-marklogic-plugin": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "newrelic-ops": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "newrelic-plugin-agent": {
        "cmdline": [],
        "modules": [
            "newrelic_plugin_agent",
            "newrelic_plugin_agent.agent",
            "newrelic_plugin_agent.plugins",
            "newrelic_plugin_agent.plugins.apache_httpd",
            "newrelic_plugin_agent.plugins.base",
            "newrelic_plugin_agent.plugins.couchdb",
            "newrelic_plugin_agent.plugins.elasticsearch",
            "newrelic_plugin_agent.plugins.haproxy",
            "newrelic_plugin_agent.plugins.memcached",
            "newrelic_plugin_agent.plugins.mongodb",
            "newrelic_plugin_agent.plugins.nginx",
            "newrelic_plugin_agent.plugins.pgbouncer",
            "newrelic_plugin_agent.plugins.php_apc",
            "newrelic_plugin_agent.plugins.php_fpm",
            "newrelic_plugin_agent.plugins.postgresql",
            "newrelic_plugin_agent.plugins.rabbitmq",
            "newrelic_plugin_agent.plugins.redis",
            "newrelic_plugin_agent.plugins.riak",
            "newrelic_plugin_agent.plugins.uwsgi"
        ],
        "version": "1.3.0"
    },
    "news": {
        "cmdline": [],
        "modules": [
            "news_module"
        ],
        "version": "1.0"
    },
    "news-corpus-builder": {
        "cmdline": [],
        "modules": [
            "news_corpus_builder",
            "news_corpus_builder.news_corpus_generator"
        ],
        "version": "0.1.4"
    },
    "news-please": {
        "cmdline": [],
        "modules": [
            "newsplease",
            "newsplease.config",
            "newsplease.crawler",
            "newsplease.crawler.items",
            "newsplease.crawler.spiders",
            "newsplease.crawler.spiders.download_crawler",
            "newsplease.crawler.spiders.recursive_crawler",
            "newsplease.crawler.spiders.recursive_sitemap_crawler",
            "newsplease.crawler.spiders.rss_crawler",
            "newsplease.crawler.spiders.sitemap_crawler",
            "newsplease.helper",
            "newsplease.helper_classes",
            "newsplease.helper_classes.heuristics",
            "newsplease.helper_classes.parse_crawler",
            "newsplease.helper_classes.savepath_parser",
            "newsplease.helper_classes.sub_classes",
            "newsplease.helper_classes.sub_classes.heuristics_manager",
            "newsplease.helper_classes.url_extractor",
            "newsplease.pipeline",
            "newsplease.pipeline.extractor",
            "newsplease.pipeline.extractor.article_candidate",
            "newsplease.pipeline.extractor.article_extractor",
            "newsplease.pipeline.extractor.cleaner",
            "newsplease.pipeline.extractor.comparer",
            "newsplease.pipeline.extractor.comparer.comparer",
            "newsplease.pipeline.extractor.comparer.comparer_Language",
            "newsplease.pipeline.extractor.comparer.comparer_author",
            "newsplease.pipeline.extractor.comparer.comparer_date",
            "newsplease.pipeline.extractor.comparer.comparer_description",
            "newsplease.pipeline.extractor.comparer.comparer_text",
            "newsplease.pipeline.extractor.comparer.comparer_title",
            "newsplease.pipeline.extractor.comparer.comparer_topimage",
            "newsplease.pipeline.extractor.extractors",
            "newsplease.pipeline.extractor.extractors.abstract_extractor",
            "newsplease.pipeline.extractor.extractors.date_extractor",
            "newsplease.pipeline.extractor.extractors.lang_detect_extractor",
            "newsplease.pipeline.extractor.extractors.newspaper_extractor",
            "newsplease.pipeline.extractor.extractors.readability_extractor",
            "newsplease.pipeline.pipelines",
            "newsplease.single_crawler",
            "newsplease.tests"
        ],
        "version": "1.1.21"
    },
    "news-popularity-prediction": {
        "cmdline": [],
        "modules": [
            "news_popularity_prediction",
            "news_popularity_prediction.datautil",
            "news_popularity_prediction.datautil.common",
            "news_popularity_prediction.datautil.feature_rw",
            "news_popularity_prediction.entry_points",
            "news_popularity_prediction.entry_points.snow_2016_workshop",
            "news_popularity_prediction.entry_points.snow_2016_workshop.barrapunto_entry",
            "news_popularity_prediction.entry_points.snow_2016_workshop.reddit_news_entry",
            "news_popularity_prediction.entry_points.snow_2016_workshop.run_all_experiments",
            "news_popularity_prediction.entry_points.snow_2016_workshop.slashdot_entry",
            "news_popularity_prediction.features",
            "news_popularity_prediction.features.basic",
            "news_popularity_prediction.features.basic_wrappers",
            "news_popularity_prediction.features.branching",
            "news_popularity_prediction.features.branching_wrappers",
            "news_popularity_prediction.features.common",
            "news_popularity_prediction.features.intermediate",
            "news_popularity_prediction.features.temporal",
            "news_popularity_prediction.features.temporal_wrappers",
            "news_popularity_prediction.features.user_graph",
            "news_popularity_prediction.features.user_graph_wrappers",
            "news_popularity_prediction.learning",
            "news_popularity_prediction.learning.cascade_lifetime",
            "news_popularity_prediction.learning.concatenate_features",
            "news_popularity_prediction.learning.ranking",
            "news_popularity_prediction.learning.single_experiment",
            "news_popularity_prediction.vizualization"
        ],
        "version": "0.1.1"
    },
    "news-scraper": {
        "cmdline": [
            "news-scraper"
        ],
        "modules": [
            "news_scraper",
            "news_scraper.article",
            "news_scraper.display",
            "news_scraper.scrape",
            "news_scraper.ui"
        ],
        "version": "0.4.0"
    },
    "newsapi": {
        "cmdline": [],
        "modules": [
            "newsapi",
            "newsapi.articles",
            "newsapi.base_news",
            "newsapi.sources"
        ],
        "version": "0.1.1"
    },
    "newsapi-cli": {
        "cmdline": [],
        "modules": [
            "newsapi",
            "newsapi.cli",
            "newsapi.commands",
            "newsapi.commands.base",
            "newsapi.commands.headlines",
            "newsapi.commands.sources"
        ],
        "version": "1.0.3"
    },
    "newsblur-api": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "newsboard": {
        "cmdline": [],
        "modules": [
            "newsboard",
            "newsboard.admin",
            "newsboard.admin.forms",
            "newsboard.admin.modeladmins",
            "newsboard.apps",
            "newsboard.feeds",
            "newsboard.feeds.base",
            "newsboard.feeds.facebookfeed",
            "newsboard.feeds.rss",
            "newsboard.feeds.sitemap",
            "newsboard.functional_tests",
            "newsboard.log",
            "newsboard.migrations",
            "newsboard.migrations.0001_initial",
            "newsboard.models",
            "newsboard.periodic_tasks",
            "newsboard.settings",
            "newsboard.tasks",
            "newsboard.tests",
            "newsboard.tests.celery",
            "newsboard.tests.factories",
            "newsboard.tests.settings",
            "newsboard.tests.test_models",
            "newsboard.tests.test_tasks",
            "newsboard.tests.urls",
            "newsboard.tests.utils",
            "newsboard.themes",
            "newsboard.themes.bootstrap",
            "newsboard.urls",
            "newsboard.views"
        ],
        "version": "0.1.1"
    },
    "newscenter": {
        "cmdline": [],
        "modules": [
            "cmsplugin_newscenter",
            "cmsplugin_newscenter.admin",
            "cmsplugin_newscenter.cms_apps",
            "cmsplugin_newscenter.cms_plugins",
            "cmsplugin_newscenter.cms_toolbars",
            "cmsplugin_newscenter.cms_wizards",
            "cmsplugin_newscenter.migrations",
            "cmsplugin_newscenter.migrations.0001_initial",
            "cmsplugin_newscenter.models",
            "cmsplugin_newscenter.tests",
            "cmsplugin_newscenter.views",
            "newscenter",
            "newscenter.admin",
            "newscenter.feeds",
            "newscenter.forms",
            "newscenter.managers",
            "newscenter.migrations",
            "newscenter.migrations.0001_initial",
            "newscenter.migrations.0002_auto_20170124_1042",
            "newscenter.migrations.0003_newsroom_website",
            "newscenter.models",
            "newscenter.sitemaps",
            "newscenter.templatetags",
            "newscenter.templatetags.newscenter_tags",
            "newscenter.tests",
            "newscenter.urls",
            "newscenter.views",
            "newscenter.widgets"
        ],
        "version": "2.0.6"
    },
    "newschimp": {
        "cmdline": [
            "chimpgen"
        ],
        "modules": [
            "newschimp",
            "newschimp.cli",
            "newschimp.core",
            "newschimp.renderer",
            "newschimp.sender",
            "newschimp.social",
            "newschimp.social.fb",
            "newschimp.social.gg",
            "newschimp.social.lanyrd",
            "newschimp.utils"
        ],
        "version": "0.1.4"
    },
    "newscraper": {
        "cmdline": [],
        "modules": [
            "newscraper",
            "newscraper.commons",
            "newscraper.newscrape",
            "newscraper.sites"
        ],
        "version": "0.2"
    },
    "newsfeed": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "newsfeedclassifier-cs331": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.1"
    },
    "newsfeedclassifierbayesiancs331": {
        "cmdline": [],
        "modules": [
            "newsFeedClassifierBayesianCS331",
            "newsFeedClassifierBayesianCS331.ExceptionNotSeen",
            "newsFeedClassifierBayesianCS331.classifier",
            "newsFeedClassifierBayesianCS331.tokenizer",
            "newsFeedClassifierBayesianCS331.trainedData",
            "newsFeedClassifierBayesianCS331.trainer"
        ],
        "version": "2.0.1"
    },
    "newsfeedclassifiercs331": {
        "cmdline": [],
        "modules": [
            "newsFeedClassifierCS331",
            "newsFeedClassifierCS331.ExceptionNotSeen",
            "newsFeedClassifierCS331.classifier",
            "newsFeedClassifierCS331.tokenizer",
            "newsFeedClassifierCS331.trainedData",
            "newsFeedClassifierCS331.trainer"
        ],
        "version": "2.0.1"
    },
    "newsharvest": {
        "cmdline": [],
        "modules": [
            "NewsHarvest",
            "NewsHarvest.NewsHarvest",
            "NewsHarvest.utilities"
        ],
        "version": "1.2.0"
    },
    "newsletter": {
        "cmdline": [],
        "modules": [
            "newsletter",
            "newsletter.base",
            "newsletter.base.base",
            "newsletter.base.base_test",
            "newsletter.newsletterapp",
            "newsletter.newsletterapp.newsletterapp",
            "newsletter.newsletterapp.test_newsletterapp",
            "newsletter.tests"
        ],
        "version": "0.1.22pre"
    },
    "newslynx": {
        "cmdline": [],
        "modules": [
            "newslynx",
            "newslynx.cli",
            "newslynx.cli.api",
            "newslynx.cli.common",
            "newslynx.cli.cron",
            "newslynx.cli.db",
            "newslynx.cli.debug",
            "newslynx.cli.dev",
            "newslynx.cli.echo",
            "newslynx.cli.init",
            "newslynx.cli.sc_create",
            "newslynx.cli.sc_docs",
            "newslynx.cli.sc_install",
            "newslynx.cli.sc_run",
            "newslynx.cli.sc_sync",
            "newslynx.cli.version",
            "newslynx.client",
            "newslynx.constants",
            "newslynx.core",
            "newslynx.defaults",
            "newslynx.dev",
            "newslynx.dev.random_data",
            "newslynx.exc",
            "newslynx.init",
            "newslynx.lib",
            "newslynx.lib.article",
            "newslynx.lib.author",
            "newslynx.lib.common",
            "newslynx.lib.dates",
            "newslynx.lib.doc",
            "newslynx.lib.embed",
            "newslynx.lib.html",
            "newslynx.lib.image",
            "newslynx.lib.mail",
            "newslynx.lib.meta",
            "newslynx.lib.network",
            "newslynx.lib.pkg",
            "newslynx.lib.pkg.crontab",
            "newslynx.lib.pkg.pandoc",
            "newslynx.lib.pkg.validate_email",
            "newslynx.lib.regex",
            "newslynx.lib.search",
            "newslynx.lib.serialize",
            "newslynx.lib.stats",
            "newslynx.lib.text",
            "newslynx.lib.url",
            "newslynx.logs",
            "newslynx.merlynne",
            "newslynx.models",
            "newslynx.models.auth",
            "newslynx.models.author",
            "newslynx.models.cache",
            "newslynx.models.compare_cache",
            "newslynx.models.computed_metric_schema",
            "newslynx.models.content_item",
            "newslynx.models.content_metric",
            "newslynx.models.event",
            "newslynx.models.extract_cache",
            "newslynx.models.metric",
            "newslynx.models.org",
            "newslynx.models.org_metric",
            "newslynx.models.recipe",
            "newslynx.models.recipe_schema",
            "newslynx.models.relations",
            "newslynx.models.report",
            "newslynx.models.setting",
            "newslynx.models.sous_chef",
            "newslynx.models.sous_chef_schema",
            "newslynx.models.tag",
            "newslynx.models.template",
            "newslynx.models.user",
            "newslynx.models.util",
            "newslynx.notify",
            "newslynx.sc",
            "newslynx.sc.internal",
            "newslynx.sc.internal.util",
            "newslynx.sc.sc_docs",
            "newslynx.sc.sc_exec",
            "newslynx.sc.sc_module",
            "newslynx.sc.sc_sync",
            "newslynx.scheduler",
            "newslynx.settings",
            "newslynx.tasks",
            "newslynx.tasks.compare_metric",
            "newslynx.tasks.default",
            "newslynx.tasks.facet",
            "newslynx.tasks.ingest",
            "newslynx.tasks.load",
            "newslynx.tasks.query_metric",
            "newslynx.tasks.rollup_metric",
            "newslynx.tasks.util",
            "newslynx.util",
            "newslynx.views",
            "newslynx.views.admin",
            "newslynx.views.api",
            "newslynx.views.api.authors_api",
            "newslynx.views.api.comparisons_api",
            "newslynx.views.api.content_api",
            "newslynx.views.api.content_summary_api",
            "newslynx.views.api.content_timeseries_api",
            "newslynx.views.api.events_api",
            "newslynx.views.api.extract_api",
            "newslynx.views.api.jobs_api",
            "newslynx.views.api.metrics_api",
            "newslynx.views.api.org_metrics_api",
            "newslynx.views.api.orgs_api",
            "newslynx.views.api.recipes_api",
            "newslynx.views.api.settings_api",
            "newslynx.views.api.souf_chefs_api",
            "newslynx.views.api.sql_api",
            "newslynx.views.api.tags_api",
            "newslynx.views.api.tmpl_api",
            "newslynx.views.api.users_api",
            "newslynx.views.auth",
            "newslynx.views.auth.all_auth",
            "newslynx.views.auth.facebook_auth",
            "newslynx.views.auth.google_analytics_auth",
            "newslynx.views.auth.twitter_auth",
            "newslynx.views.decorators",
            "newslynx.views.util",
            "tests",
            "tests.tests"
        ],
        "version": "1.2.2"
    },
    "newslynx-sc-example": {
        "cmdline": [],
        "modules": [
            "newslynx_sc_example"
        ],
        "version": "0.0.1"
    },
    "newslynx-sc-homepage": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "newslynx-sc-rss": {
        "cmdline": [],
        "modules": [
            "newslynx_sc_rss",
            "newslynx_sc_rss.common",
            "newslynx_sc_rss.feed",
            "newslynx_sc_rss.google_alerts",
            "newslynx_sc_rss.lib",
            "newslynx_sc_rss.lib.feedparser"
        ],
        "version": "0.0.5"
    },
    "newslynx-url": {
        "cmdline": [],
        "modules": [
            "newslynx_url",
            "newslynx_url.regex",
            "newslynx_url.tools"
        ],
        "version": "0.1.0"
    },
    "newspaper": {
        "cmdline": [],
        "modules": [
            "newspaper",
            "newspaper.api",
            "newspaper.article",
            "newspaper.cleaners",
            "newspaper.configuration",
            "newspaper.extractors",
            "newspaper.images",
            "newspaper.mthreading",
            "newspaper.network",
            "newspaper.nlp",
            "newspaper.outputformatters",
            "newspaper.parsers",
            "newspaper.settings",
            "newspaper.source",
            "newspaper.text",
            "newspaper.urls",
            "newspaper.utils",
            "newspaper.version",
            "newspaper.videos",
            "newspaper.videos.extractors",
            "newspaper.videos.videos"
        ],
        "version": "0.0.9.8"
    },
    "newspaper3k": {
        "cmdline": [],
        "modules": [
            "newspaper",
            "newspaper.api",
            "newspaper.article",
            "newspaper.cleaners",
            "newspaper.configuration",
            "newspaper.extractors",
            "newspaper.images",
            "newspaper.mthreading",
            "newspaper.network",
            "newspaper.nlp",
            "newspaper.outputformatters",
            "newspaper.parsers",
            "newspaper.settings",
            "newspaper.source",
            "newspaper.text",
            "newspaper.urls",
            "newspaper.utils",
            "newspaper.version",
            "newspaper.videos",
            "newspaper.videos.extractors",
            "newspaper.videos.videos"
        ],
        "version": "0.1.9"
    },
    "newsparser": {
        "cmdline": [],
        "modules": [
            "newsParser",
            "newsParser.NewsParser",
            "newsParser.strategies",
            "newsParser.strategies.AbstractNewsParseStrategy",
            "newsParser.strategies.AnntwNewsParseStrategy",
            "newsParser.strategies.CoolLoudParseStrategy",
            "newsParser.strategies.LtnNewsParseStrategy",
            "newsParser.strategies.PeopleNewsParseStrategy",
            "newsParser.strategies.UdnNewsParseStrategy",
            "newsParser.strategies.WorldYamParseStrategy"
        ],
        "version": "0.0.6"
    },
    "newspeak": {
        "cmdline": [],
        "modules": [
            "newspeak",
            "newspeak.admin",
            "newspeak.conf",
            "newspeak.conf.default",
            "newspeak.conf.initial",
            "newspeak.conf.newspeak",
            "newspeak.conf.urls",
            "newspeak.crawler",
            "newspeak.feeds",
            "newspeak.management",
            "newspeak.management.commands",
            "newspeak.management.commands.update_feeds",
            "newspeak.migrations",
            "newspeak.migrations.0001_initial",
            "newspeak.migrations.0002_auto__add_field_feed_error_state__add_field_feed_error_description__ad",
            "newspeak.migrations.0003_auto__chg_field_feedentry_entry_id__del_unique_feedentry_entry_id",
            "newspeak.migrations.0004_auto__chg_field_feedentry_link",
            "newspeak.migrations.0005_auto__add_field_feedentry_author",
            "newspeak.migrations.0006_auto__add_field_feed_last_modified__add_field_feed_etag",
            "newspeak.migrations.0007_auto__add_field_keywordfilter_active__add_field_keywordfilter_filter_i",
            "newspeak.migrations.0008_auto__chg_field_feedentry_link",
            "newspeak.migrations.0009_auto__add_feedenclosure__add_feedcontent",
            "newspeak.migrations.0010_auto__add_field_feed_enclosure_xpath__add_field_feed_enclosure_mime_ty",
            "newspeak.migrations.0011_auto__add_field_feed_content_xpath__add_field_feed_content_mime_type__",
            "newspeak.migrations.0012_auto__chg_field_feedenclosure_href__chg_field_feed_url__chg_field_feed",
            "newspeak.migrations.0013_auto__chg_field_feedenclosure_href",
            "newspeak.migrations.0014_auto__add_field_keywordfilter_sort_order",
            "newspeak.migrations.0015_keywordfilter_sort_order",
            "newspeak.migrations.0016_auto__chg_field_keywordfilter_sort_order__add_unique_keywordfilter_sor",
            "newspeak.models",
            "newspeak.runner",
            "newspeak.tests",
            "newspeak.urls",
            "newspeak.utils",
            "newspeak.views"
        ],
        "version": "0.1"
    },
    "newspider": {
        "cmdline": [],
        "modules": [
            "newspider",
            "newspider.comm",
            "newspider.comm.guarder",
            "newspider.comm.req",
            "newspider.comm.urlrecoder",
            "newspider.comm.utils",
            "newspider.interfaces",
            "newspider.spider"
        ],
        "version": "0.9.9"
    },
    "newsstand-db": {
        "cmdline": [],
        "modules": [
            "newsstand_db",
            "newsstand_db.cmd",
            "newsstand_db.csvreader"
        ],
        "version": "0.5.1"
    },
    "newster": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "newstitle": {
        "cmdline": [],
        "modules": [
            "newstitle",
            "newstitle.gettitle",
            "newstitle.gettitle.appledaily",
            "newstitle.gettitle.chinatimes",
            "newstitle.gettitle.libertytimes",
            "newstitle.gettitle.udn",
            "newstitle.newstitle_test"
        ],
        "version": "0.1.0"
    },
    "newstressedflux": {
        "cmdline": [],
        "modules": [
            "newStressedFlux"
        ],
        "version": "1.2"
    },
    "newsuper": {
        "cmdline": [],
        "modules": [
            "newsuper",
            "newsuper._newsuper",
            "newsuper.test"
        ],
        "version": "0.3c"
    },
    "newt.db": {
        "cmdline": [],
        "modules": [
            "newt",
            "newt.db",
            "newt.db._adapter",
            "newt.db._db",
            "newt.db._object",
            "newt.db._ook",
            "newt.db._util",
            "newt.db.component",
            "newt.db.follow",
            "newt.db.jsonpickle",
            "newt.db.search",
            "newt.db.updater",
            "newt.db.zodburi"
        ],
        "version": "0.6.0"
    },
    "newt.qbe": {
        "cmdline": [],
        "modules": [
            "newt",
            "newt.qbe",
            "newt.qbe.tests"
        ],
        "version": "0.1.0"
    },
    "newtabmagic": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "newtex": {
        "cmdline": [],
        "modules": [
            "newtex",
            "newtex._git",
            "newtex._version"
        ],
        "version": "0.3.5"
    },
    "newworld": {
        "cmdline": [],
        "modules": [
            "newworld"
        ],
        "version": "1.0.0"
    },
    "newyork": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nex2py": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nexg": {
        "cmdline": [],
        "modules": [
            "nexg"
        ],
        "version": "0.0.1"
    },
    "nexiles.fabric.tasks": {
        "cmdline": [],
        "modules": [
            "nexiles",
            "nexiles.fabric",
            "nexiles.fabric.tasks",
            "nexiles.fabric.tasks.docs",
            "nexiles.fabric.tasks.environment",
            "nexiles.fabric.tasks.gateway",
            "nexiles.fabric.tasks.log",
            "nexiles.fabric.tasks.release",
            "nexiles.fabric.tasks.utils",
            "nexiles.fabric.tasks.windchill"
        ],
        "version": "0.1.4"
    },
    "nexiles.tools.api": {
        "cmdline": [],
        "modules": [
            "tools",
            "tools.api",
            "tools.api.apps",
            "tools.api.checkinout",
            "tools.api.content",
            "tools.api.defaults",
            "tools.api.document",
            "tools.api.files",
            "tools.api.log",
            "tools.api.main",
            "tools.api.query",
            "tools.api.serve",
            "tools.api.slumber",
            "tools.api.slumber.exceptions",
            "tools.api.slumber.serialize",
            "tools.api.tests",
            "tools.api.tests.test_defaults",
            "tools.api.tests.test_document",
            "tools.api.tests.test_main",
            "tools.api.tests.test_query",
            "tools.api.tests.test_tree",
            "tools.api.tests.test_validators",
            "tools.api.tree",
            "tools.api.utils",
            "tools.api.validators",
            "tools.api.version",
            "tools.api.zip"
        ],
        "version": "0.5.dev0"
    },
    "nexmo": {
        "cmdline": [],
        "modules": [
            "nexmo"
        ],
        "version": "1.4.0"
    },
    "nexmo-api": {
        "cmdline": [],
        "modules": [
            "nexmo",
            "nexmo.account",
            "nexmo.base",
            "nexmo.sms"
        ],
        "version": "0.1.1"
    },
    "nexodyne": {
        "cmdline": [],
        "modules": [
            "nexodyne"
        ],
        "version": "1.0"
    },
    "nexpy": {
        "cmdline": [],
        "modules": [
            "chopper",
            "chopper.convert_qe",
            "chopper.get_ei",
            "nexpy",
            "nexpy._version",
            "nexpy.api",
            "nexpy.api.frills",
            "nexpy.api.frills.fit",
            "nexpy.api.frills.functions",
            "nexpy.api.frills.functions.gaussian",
            "nexpy.api.frills.functions.linear",
            "nexpy.api.frills.functions.lorentzian",
            "nexpy.api.frills.functions.polynomial",
            "nexpy.api.frills.functions.pseudovoigt",
            "nexpy.api.nexus",
            "nexpy.api.nexus.tree",
            "nexpy.api.nexus.unit",
            "nexpy.definitions",
            "nexpy.gui",
            "nexpy.gui.consoleapp",
            "nexpy.gui.datadialogs",
            "nexpy.gui.fitdialogs",
            "nexpy.gui.importdialog",
            "nexpy.gui.mainwindow",
            "nexpy.gui.plotview",
            "nexpy.gui.pyqt",
            "nexpy.gui.scripteditor",
            "nexpy.gui.treeview",
            "nexpy.gui.utils",
            "nexpy.nexpygui",
            "nexpy.plugins",
            "nexpy.readers",
            "nexpy.readers.readcatalog",
            "nexpy.readers.readcbf",
            "nexpy.readers.readimage",
            "nexpy.readers.readspe",
            "nexpy.readers.readspec",
            "nexpy.readers.readstack",
            "nexpy.readers.readtiff",
            "nexpy.readers.readtxt",
            "nexpy.requires"
        ],
        "version": "0.10.0"
    },
    "next": {
        "cmdline": [],
        "modules": [
            "next"
        ],
        "version": "0.0.1"
    },
    "next-review": {
        "cmdline": [],
        "modules": [],
        "version": "1.6.0"
    },
    "nextbus": {
        "cmdline": [],
        "modules": [
            "nextbus",
            "nextbus.nextbus"
        ],
        "version": "0.1"
    },
    "nextcloud-news-updater": {
        "cmdline": [],
        "modules": [
            "nextcloud_news_updater",
            "nextcloud_news_updater.api",
            "nextcloud_news_updater.api.api",
            "nextcloud_news_updater.api.cli",
            "nextcloud_news_updater.api.updater",
            "nextcloud_news_updater.api.web",
            "nextcloud_news_updater.common",
            "nextcloud_news_updater.common.argumentparser",
            "nextcloud_news_updater.common.logger",
            "nextcloud_news_updater.config",
            "nextcloud_news_updater.container",
            "nextcloud_news_updater.dependencyinjection",
            "nextcloud_news_updater.dependencyinjection.container",
            "nextcloud_news_updater.version",
            "tests",
            "tests.nextcloud_news_updater",
            "tests.nextcloud_news_updater.api",
            "tests.nextcloud_news_updater.api.test_cli",
            "tests.nextcloud_news_updater.api.test_web",
            "tests.nextcloud_news_updater.dependencyinjection",
            "tests.nextcloud_news_updater.dependencyinjection.test_container",
            "tests.nextcloud_news_updater.test_config",
            "tests.nextcloud_news_updater.updaters"
        ],
        "version": "9.0.2"
    },
    "nextepisode": {
        "cmdline": [],
        "modules": [
            "nextepisode",
            "nextepisode.cache",
            "nextepisode.regexp",
            "nextepisode.time"
        ],
        "version": "0.5.8"
    },
    "nexter": {
        "cmdline": [],
        "modules": [
            "nexter"
        ],
        "version": "1.0.0"
    },
    "nexter0805": {
        "cmdline": [],
        "modules": [
            "nexter0805"
        ],
        "version": "1.3.0"
    },
    "nextf1race": {
        "cmdline": [],
        "modules": [
            "nextf1race",
            "nextf1race.nextf1race",
            "race_data",
            "race_data.info"
        ],
        "version": "0.1.4"
    },
    "nexttest": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nextversion": {
        "cmdline": [],
        "modules": [
            "nextversion",
            "nextversion.test",
            "nextversion.test.test_nextversion"
        ],
        "version": "1.1.dev0"
    },
    "nexus": {
        "cmdline": [],
        "modules": [
            "example_module",
            "example_module.models",
            "example_module.nexus_modules",
            "example_project",
            "example_project.manage",
            "example_project.settings",
            "example_project.urls",
            "nexus",
            "nexus.conf",
            "nexus.models",
            "nexus.modules",
            "nexus.nexus_modules",
            "nexus.sites",
            "nexus.templatetags",
            "nexus.templatetags.nexus_admin",
            "nexus.templatetags.nexus_helpers"
        ],
        "version": "0.3.1"
    },
    "nexus-ansible": {
        "cmdline": [],
        "modules": [],
        "version": "0.4"
    },
    "nexus-celery": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nexus-client": {
        "cmdline": [],
        "modules": [
            "nexus_client",
            "nexus_client.nexus"
        ],
        "version": "0.1.1"
    },
    "nexus-memcache": {
        "cmdline": [],
        "modules": [
            "nexus_memcache",
            "nexus_memcache.conf",
            "nexus_memcache.models",
            "nexus_memcache.nexus_modules",
            "nexus_memcache.templatetags",
            "nexus_memcache.templatetags.memcache_helpers"
        ],
        "version": "0.3.6"
    },
    "nexus-redis": {
        "cmdline": [],
        "modules": [
            "nexus_redis",
            "nexus_redis..___init__",
            "nexus_redis.._conf",
            "nexus_redis.._helpers",
            "nexus_redis.._models",
            "nexus_redis.._nexus_modules",
            "nexus_redis.conf",
            "nexus_redis.helpers",
            "nexus_redis.models",
            "nexus_redis.nexus_modules",
            "nexus_redis.templatetags",
            "nexus_redis.templatetags..___init__",
            "nexus_redis.templatetags.._redis_helpers",
            "nexus_redis.templatetags.redis_helpers"
        ],
        "version": "0.3"
    },
    "nexus-uploader": {
        "cmdline": [],
        "modules": [
            "nexus_uploader",
            "nexus_uploader.nexus",
            "nexus_uploader.nexus_upload_cmd",
            "nexus_uploader.pip_compile",
            "nexus_uploader.pypi",
            "nexus_uploader.pyrequirements2nexus",
            "nexus_uploader.requirements",
            "nexus_uploader.utils",
            "tests",
            "tests.conftest",
            "tests.pytest_markers",
            "tests.smoke_test_extract_classifier_and_extension",
            "tests.test_extract_classifier_and_extension",
            "tests.test_get_package_release_from_pypi",
            "tests.test_nexus",
            "tests.test_pip_compile"
        ],
        "version": "1.0.8"
    },
    "nexus-yplan": {
        "cmdline": [],
        "modules": [
            "nexus",
            "nexus.apps",
            "nexus.checks",
            "nexus.compat",
            "nexus.conf",
            "nexus.modules",
            "nexus.sites",
            "nexus.templatetags",
            "nexus.templatetags.nexus_helpers"
        ],
        "version": "1.5.0"
    },
    "nexusadspy": {
        "cmdline": [],
        "modules": [
            "nexusadspy",
            "nexusadspy.client",
            "nexusadspy.exceptions",
            "nexusadspy.report",
            "nexusadspy.segment"
        ],
        "version": "0.3.2"
    },
    "nexusformat": {
        "cmdline": [],
        "modules": [
            "nexusformat",
            "nexusformat._version",
            "nexusformat.nexus",
            "nexusformat.nexus.plot",
            "nexusformat.nexus.remote",
            "nexusformat.nexus.tree",
            "nexusformat.requires",
            "nexusformat.scripts",
            "nexusformat.scripts.nxstack"
        ],
        "version": "0.4.6"
    },
    "nexuspy": {
        "cmdline": [],
        "modules": [
            "nexuspy",
            "nexuspy.nexus"
        ],
        "version": "0.1.0"
    },
    "nfapws": {
        "cmdline": [],
        "modules": [
            "fapws",
            "fapws.base",
            "fapws.config",
            "fapws.contrib",
            "fapws.contrib.cgiapp",
            "fapws.contrib.django_handler",
            "fapws.contrib.headers",
            "fapws.contrib.log",
            "fapws.contrib.views",
            "fapws.contrib.zip"
        ],
        "version": "0.3.2"
    },
    "nfasd": {
        "cmdline": [],
        "modules": [
            "nfasd"
        ],
        "version": "0.15"
    },
    "nfcpy": {
        "cmdline": [],
        "modules": [
            "nfc",
            "nfc.clf",
            "nfc.clf.acr122",
            "nfc.clf.arygon",
            "nfc.clf.device",
            "nfc.clf.pn531",
            "nfc.clf.pn532",
            "nfc.clf.pn533",
            "nfc.clf.pn53x",
            "nfc.clf.rcs380",
            "nfc.clf.rcs956",
            "nfc.clf.transport",
            "nfc.clf.udp",
            "nfc.dep",
            "nfc.handover",
            "nfc.handover.client",
            "nfc.handover.server",
            "nfc.llcp",
            "nfc.llcp.err",
            "nfc.llcp.llc",
            "nfc.llcp.opt",
            "nfc.llcp.pdu",
            "nfc.llcp.sec",
            "nfc.llcp.socket",
            "nfc.llcp.tco",
            "nfc.ndef",
            "nfc.ndef.bt_record",
            "nfc.ndef.error",
            "nfc.ndef.handover",
            "nfc.ndef.message",
            "nfc.ndef.record",
            "nfc.ndef.smart_poster",
            "nfc.ndef.text_record",
            "nfc.ndef.uri_record",
            "nfc.ndef.wifi_record",
            "nfc.snep",
            "nfc.snep.client",
            "nfc.snep.server",
            "nfc.tag",
            "nfc.tag.tt1",
            "nfc.tag.tt1_broadcom",
            "nfc.tag.tt2",
            "nfc.tag.tt2_nxp",
            "nfc.tag.tt3",
            "nfc.tag.tt3_sony",
            "nfc.tag.tt4"
        ],
        "version": "0.13.0"
    },
    "nfcu": {
        "cmdline": [],
        "modules": [
            "nfcu",
            "nfcu.exceptions"
        ],
        "version": "0.1.2"
    },
    "nfd2nfc": {
        "cmdline": [],
        "modules": [
            "nfd2nfc"
        ],
        "version": "0.1.0"
    },
    "nfft": {
        "cmdline": [],
        "modules": [
            "nfft",
            "nfft.core",
            "nfft.kernels",
            "nfft.tests",
            "nfft.tests.test_core",
            "nfft.tests.test_kernels",
            "nfft.tests.test_utils",
            "nfft.utils",
            "nfft.version"
        ],
        "version": "0.1"
    },
    "nfft-cffi": {
        "cmdline": [],
        "modules": [
            "nfft",
            "nfft._wrappers",
            "nfft.nfft"
        ],
        "version": "0.1"
    },
    "nfg.ideal": {
        "cmdline": [],
        "modules": [
            "nfg",
            "nfg.ideal",
            "nfg.ideal.ideal",
            "nfg.ideal.tests"
        ],
        "version": "0.4"
    },
    "nfg.mt940": {
        "cmdline": [],
        "modules": [
            "nfg",
            "nfg.mt940",
            "nfg.mt940.parser",
            "nfg.mt940.tests"
        ],
        "version": "0.2dev"
    },
    "nfg.ratedreactions": {
        "cmdline": [],
        "modules": [
            "nfg",
            "nfg.ratedreactions",
            "nfg.ratedreactions.browser",
            "nfg.ratedreactions.browser.dbsettings",
            "nfg.ratedreactions.browser.interfaces",
            "nfg.ratedreactions.browser.viewlets",
            "nfg.ratedreactions.db",
            "nfg.ratedreactions.enabler",
            "nfg.ratedreactions.interfaces",
            "nfg.ratedreactions.tests"
        ],
        "version": "1.0dev"
    },
    "nfg.textimage": {
        "cmdline": [],
        "modules": [
            "nfg",
            "nfg.textimage",
            "nfg.textimage.generator"
        ],
        "version": "0.6dev"
    },
    "nfg.webfonts": {
        "cmdline": [],
        "modules": [
            "nfg",
            "nfg.webfonts",
            "nfg.webfonts.browser",
            "nfg.webfonts.interfaces",
            "nfg.webfonts.tests"
        ],
        "version": "1.1dev"
    },
    "nfl-draftkings": {
        "cmdline": [],
        "modules": [
            "NFL_Draftkings",
            "NFL_Draftkings.ConvertToDraftKings",
            "NFL_Draftkings.GatherPlayerData",
            "NFL_Draftkings.GetPlayerDKScores",
            "NFL_Draftkings.GetPlayerStats",
            "NFL_Draftkings.ProcessPlayerStats",
            "NFL_Draftkings.constants",
            "NFL_Draftkings.run"
        ],
        "version": "2"
    },
    "nfl-stats": {
        "cmdline": [],
        "modules": [
            "pynfl",
            "pynfl.schedule",
            "pynfl.stats",
            "pynfl.utils"
        ],
        "version": "0.0.5"
    },
    "nflcmd": {
        "cmdline": [
            "nflstats"
        ],
        "modules": [
            "nflcmd",
            "nflcmd.version",
            "nflcmd/cmds",
            "nflcmd/cmds.rank",
            "nflcmd/cmds.stats"
        ],
        "version": "0.1.4"
    },
    "nfldb": {
        "cmdline": [
            "nfldb-update"
        ],
        "modules": [
            "nfldb",
            "nfldb.category",
            "nfldb.db",
            "nfldb.query",
            "nfldb.sql",
            "nfldb.team",
            "nfldb.types",
            "nfldb.update",
            "nfldb.version"
        ],
        "version": "0.2.17"
    },
    "nflfan": {
        "cmdline": [
            "nflfan-update"
        ],
        "modules": [
            "nflfan",
            "nflfan.config",
            "nflfan.provider",
            "nflfan.score",
            "nflfan.version"
        ],
        "version": "0.2.0"
    },
    "nflgame": {
        "cmdline": [
            "nflgame-update-players"
        ],
        "modules": [
            "nflgame",
            "nflgame.alert",
            "nflgame.game",
            "nflgame.live",
            "nflgame.player",
            "nflgame.sched",
            "nflgame.seq",
            "nflgame.statmap",
            "nflgame.update_players",
            "nflgame.update_sched",
            "nflgame.version"
        ],
        "version": "1.2.20"
    },
    "nflgame3": {
        "cmdline": [],
        "modules": [
            "nflgame",
            "nflgame.alert",
            "nflgame.game",
            "nflgame.live",
            "nflgame.player",
            "nflgame.sched",
            "nflgame.seq",
            "nflgame.statmap",
            "nflgame.update_players",
            "nflgame.update_sched",
            "nflgame.version"
        ],
        "version": "0.1"
    },
    "nflog": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "nflvid": {
        "cmdline": [
            "nflvid-footage",
            "nflvid-incomplete",
            "nflvid-slice",
            "nflvid-watch"
        ],
        "modules": [
            "nflvid",
            "nflvid.version",
            "nflvid.vlc"
        ],
        "version": "0.2.2"
    },
    "nflwin": {
        "cmdline": [],
        "modules": [
            "nflwin",
            "nflwin._version",
            "nflwin.model",
            "nflwin.preprocessing",
            "nflwin.utilities"
        ],
        "version": "1.0.0"
    },
    "nflx-genie-client": {
        "cmdline": [],
        "modules": [
            "genie2",
            "genie2.client",
            "genie2.client.V2Api",
            "genie2.client.api_client",
            "genie2.client.wrapper",
            "genie2.exception",
            "genie2.exception.genie_exception",
            "genie2.model",
            "genie2.model.Application",
            "genie2.model.Cluster",
            "genie2.model.ClusterCriteria",
            "genie2.model.Command",
            "genie2.model.FileAttachment",
            "genie2.model.Job",
            "pygenie",
            "pygenie.adapter",
            "pygenie.adapter.adapter",
            "pygenie.adapter.genie_2",
            "pygenie.adapter.genie_3",
            "pygenie.adapter.genie_3.copy",
            "pygenie.adapter.genie_x",
            "pygenie.auth",
            "pygenie.client",
            "pygenie.conf",
            "pygenie.exceptions",
            "pygenie.jobs",
            "pygenie.jobs.core",
            "pygenie.jobs.hadoop",
            "pygenie.jobs.hive",
            "pygenie.jobs.pig",
            "pygenie.jobs.presto",
            "pygenie.jobs.running",
            "pygenie.jobs.sqoop",
            "pygenie.jobs.utils",
            "pygenie.utils"
        ],
        "version": "3.3.3"
    },
    "nfogen": {
        "cmdline": [],
        "modules": [
            "nfogen"
        ],
        "version": "0.0.4"
    },
    "nfogen-xbmc": {
        "cmdline": [],
        "modules": [
            "nfogen_xbmc"
        ],
        "version": "0.1"
    },
    "nforge-migration": {
        "cmdline": [],
        "modules": [
            "cli",
            "cli.github_migration_cli",
            "cli.nforge_parser_cli",
            "migration",
            "migration.exception",
            "migration.github",
            "migration.helper",
            "migration.nforge"
        ],
        "version": "1.1.0.post2"
    },
    "nfq": {
        "cmdline": [],
        "modules": [
            "nfq"
        ],
        "version": "0.1.1"
    },
    "nfqp3": {
        "cmdline": [],
        "modules": [],
        "version": "0.11"
    },
    "nfsinkhole": {
        "cmdline": [
            "nfsinkhole-service.py",
            "nfsinkhole-setup.py"
        ],
        "modules": [
            "nfsinkhole",
            "nfsinkhole.apparmor",
            "nfsinkhole.exceptions",
            "nfsinkhole.iptables",
            "nfsinkhole.rsyslog",
            "nfsinkhole.selinux",
            "nfsinkhole.service",
            "nfsinkhole.syslog_ng",
            "nfsinkhole.tcpdump",
            "nfsinkhole.utils"
        ],
        "version": "0.1.0"
    },
    "nfsnapi": {
        "cmdline": [],
        "modules": [
            "nfsnapi"
        ],
        "version": "0.3.0"
    },
    "nfv-filters": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nfv-manager": {
        "cmdline": [],
        "modules": [
            "eu",
            "eu.softfire",
            "eu.softfire.core",
            "eu.softfire.core.NfvManager",
            "eu.softfire.main",
            "eu.softfire.main.Manager",
            "eu.softfire.messaging",
            "eu.softfire.messaging.MessagingAgent",
            "eu.softfire.messaging.grpc",
            "eu.softfire.messaging.grpc.messages_pb2",
            "eu.softfire.messaging.grpc.messages_pb2_grpc",
            "eu.softfire.utils",
            "eu.softfire.utils.exceptions",
            "eu.softfire.utils.os_utils",
            "eu.softfire.utils.static_config",
            "eu.softfire.utils.utils",
            "tests",
            "tests.ob_test",
            "tests.test_os_utils"
        ],
        "version": "0.1.1b3"
    },
    "nfw": {
        "cmdline": [],
        "modules": [
            "NFW",
            "NFW.mass_concentration",
            "NFW.nfw"
        ],
        "version": "0.2.0.dev1"
    },
    "ng-factory": {
        "cmdline": [],
        "modules": [
            "ng_factory",
            "ng_factory.factory"
        ],
        "version": "0.1.2"
    },
    "ng-mini": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ng.adapter": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.adapter",
            "ng.adapter.adaptiveurl",
            "ng.adapter.adaptiveurl.adaptiveurl",
            "ng.adapter.adaptiveurl.browser",
            "ng.adapter.adaptiveurl.interfaces",
            "ng.adapter.breadcrumb",
            "ng.adapter.breadcrumb.breadcrumbbase",
            "ng.adapter.breadcrumb.breadcrumbnamespace",
            "ng.adapter.breadcrumb.contained2breadcrumbadapter",
            "ng.adapter.breadcrumb.interfaces",
            "ng.adapter.breadcrumb.stop2breadcrumbadapter",
            "ng.adapter.checksublocation",
            "ng.adapter.checksublocation.checksublocation",
            "ng.adapter.checksublocation.interfaces",
            "ng.adapter.checktocontain",
            "ng.adapter.checktocontain.checktocontain",
            "ng.adapter.ianytitle",
            "ng.adapter.ianytitle.anytitlesubscriberbase",
            "ng.adapter.ianytitle.ianytitleadapter",
            "ng.adapter.ianytitle.interfaces",
            "ng.adapter.ianytitle.zdc2titlesubsriber",
            "ng.adapter.mtime",
            "ng.adapter.mtime.interfaces",
            "ng.adapter.mtime.mtimeadapter",
            "ng.adapter.namechooser",
            "ng.adapter.namechooser.interfaces",
            "ng.adapter.namechooser.namechooser",
            "ng.adapter.nsinterface",
            "ng.adapter.nsinterface.nsinterface",
            "ng.adapter.nullsublocations",
            "ng.adapter.nullsublocations.nullsublocations",
            "ng.adapter.pager",
            "ng.adapter.pager.container2pagersourceadapter",
            "ng.adapter.pager.interfaces",
            "ng.adapter.pager.orderedcontainer2pagersourceadapter",
            "ng.adapter.pager.pageradapter",
            "ng.adapter.pager.resultset2pagersourceadapter",
            "ng.adapter.path",
            "ng.adapter.path.any2pathadapter",
            "ng.adapter.path.contained2pathadapter",
            "ng.adapter.path.interfaces",
            "ng.adapter.path.pathadapterbase",
            "ng.adapter.recordsize",
            "ng.adapter.recordsize.interfaces",
            "ng.adapter.recordsize.recordsize",
            "ng.adapter.requestcache",
            "ng.adapter.requestcache.interfaces",
            "ng.adapter.requestcache.requestcache",
            "ng.adapter.requestext",
            "ng.adapter.requestext.interfaces",
            "ng.adapter.requestext.libIIGFS",
            "ng.adapter.requestext.requestext",
            "ng.adapter.title",
            "ng.adapter.title.any2titleadapter",
            "ng.adapter.title.contained2titleadapter",
            "ng.adapter.title.interfaces",
            "ng.adapter.title.titleadapterbase",
            "ng.adapter.title.zdc2titleadapter",
            "ng.adapter.toolchanger",
            "ng.adapter.toolchanger.interfaces",
            "ng.adapter.toolchanger.tool",
            "ng.adapter.toolchanger.toolhistory",
            "ng.adapter.toolchanger.toolhistoryannotationadapter",
            "ng.adapter.toolchanger.toolurl"
        ],
        "version": "0.2.1"
    },
    "ng.app.converter": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.app",
            "ng.app.converter",
            "ng.app.converter.cachehandler",
            "ng.app.converter.cachehandler.cachehandler",
            "ng.app.converter.cachehandler.demo",
            "ng.app.converter.cachehandler.interfaces",
            "ng.app.converter.cachestore",
            "ng.app.converter.cachestore.browser",
            "ng.app.converter.cachestore.browser.statistic",
            "ng.app.converter.cachestore.cachestore",
            "ng.app.converter.cachestore.interfaces",
            "ng.app.converter.cachestoreitem",
            "ng.app.converter.cachestoreitem.browser",
            "ng.app.converter.cachestoreitem.cachestoreitem",
            "ng.app.converter.cachestoreitem.interfaces",
            "ng.app.converter.convertadapterzcml",
            "ng.app.converter.convertadapterzcml.convertadapter",
            "ng.app.converter.convertadapterzcml.metaconfigure",
            "ng.app.converter.convertadapterzcml.metadirectives",
            "ng.app.converter.converter",
            "ng.app.converter.converter.browser",
            "ng.app.converter.converter.browser.interfaces",
            "ng.app.converter.converter.browser.test",
            "ng.app.converter.converter.converter",
            "ng.app.converter.converter.converterannotator",
            "ng.app.converter.converter.converterannotator.browser",
            "ng.app.converter.converter.converterannotator.converterannotator",
            "ng.app.converter.converter.converterannotator.interfaces",
            "ng.app.converter.converter.converterchain",
            "ng.app.converter.converter.converterchain.browser",
            "ng.app.converter.converter.converterchain.converterchain",
            "ng.app.converter.converter.converterchain.interfaces",
            "ng.app.converter.converter.convertercontainer",
            "ng.app.converter.converter.convertercontainer.browser",
            "ng.app.converter.converter.convertercontainer.convertercontainer",
            "ng.app.converter.converter.convertercontainer.interfaces",
            "ng.app.converter.converter.converterdictproxy",
            "ng.app.converter.converter.converterdictproxy.browser",
            "ng.app.converter.converter.converterdictproxy.converterdictproxy",
            "ng.app.converter.converter.converterdictproxy.interfaces",
            "ng.app.converter.converter.converterhead",
            "ng.app.converter.converter.converterhead.browser",
            "ng.app.converter.converter.converterhead.converterhead",
            "ng.app.converter.converter.converterhead.interfaces",
            "ng.app.converter.converter.converterkeyword",
            "ng.app.converter.converter.converterkeyword.browser",
            "ng.app.converter.converter.converterkeyword.converterkeyword",
            "ng.app.converter.converter.converterkeyword.interfaces",
            "ng.app.converter.converter.converterlightrest",
            "ng.app.converter.converter.converterlightrest.browser",
            "ng.app.converter.converter.converterlightrest.converterlightrest",
            "ng.app.converter.converter.converterlightrest.interfaces",
            "ng.app.converter.converter.convertermultiregexpbase",
            "ng.app.converter.converter.converternamespace",
            "ng.app.converter.converter.converterregexp",
            "ng.app.converter.converter.converterregexp.browser",
            "ng.app.converter.converter.converterregexp.converterregexp",
            "ng.app.converter.converter.converterregexp.interfaces",
            "ng.app.converter.converter.converterrest",
            "ng.app.converter.converter.converterrest.browser",
            "ng.app.converter.converter.converterrest.converterrest",
            "ng.app.converter.converter.converterrest.interfaces",
            "ng.app.converter.converter.converterselect",
            "ng.app.converter.converter.converterselect.browser",
            "ng.app.converter.converter.converterselect.converterselect",
            "ng.app.converter.converter.converterselect.interfaces",
            "ng.app.converter.converter.converterst",
            "ng.app.converter.converter.converterst.browser",
            "ng.app.converter.converter.converterst.converterst",
            "ng.app.converter.converter.converterst.interfaces",
            "ng.app.converter.converter.converterxslt",
            "ng.app.converter.converter.converterxslt.browser",
            "ng.app.converter.converter.converterxslt.charsetvocabulary",
            "ng.app.converter.converter.converterxslt.converterxslt",
            "ng.app.converter.converter.converterxslt.interfaces",
            "ng.app.converter.converter.converterxslt.xslt",
            "ng.app.converter.converter.interfaces",
            "ng.app.converter.convertervocabulary",
            "ng.app.converter.mapper",
            "ng.app.converter.mapper.mapperattribute",
            "ng.app.converter.mapper.mapperattribute.browser",
            "ng.app.converter.mapper.mapperattribute.interfaces",
            "ng.app.converter.mapper.mapperattribute.mapperattribute",
            "ng.app.converter.mapper.mapperattribute.mapperattributenamechooser",
            "ng.app.converter.mapper.mapperattributeannotation",
            "ng.app.converter.mapper.mapperattributeannotation.browser",
            "ng.app.converter.mapper.mapperattributeannotation.browser.mapperattributeannotableedit",
            "ng.app.converter.mapper.mapperattributeannotation.interfaces",
            "ng.app.converter.mapper.mapperattributeannotation.mapperattributeannotableadapter",
            "ng.app.converter.mapper.mapperattributeitem",
            "ng.app.converter.mapper.mapperattributeitem.browser",
            "ng.app.converter.mapper.mapperattributeitem.interfaces",
            "ng.app.converter.mapper.mapperattributeitem.mapperattributeitem",
            "ng.app.converter.mapper.mapperinterface",
            "ng.app.converter.mapper.mapperinterface.browser",
            "ng.app.converter.mapper.mapperinterface.interfaces",
            "ng.app.converter.mapper.mapperinterface.mapperinteracenamevocabulary",
            "ng.app.converter.mapper.mapperinterface.mapperinterface",
            "ng.app.converter.mapper.mapperinterface.mapperinterfacenamechooser",
            "ng.app.converter.mapper.mapperinterfaceannotation",
            "ng.app.converter.mapper.mapperinterfaceannotation.browser",
            "ng.app.converter.mapper.mapperinterfaceannotation.browser.mapperinterfaceannotableedit",
            "ng.app.converter.mapper.mapperinterfaceannotation.demo",
            "ng.app.converter.mapper.mapperinterfaceannotation.interfaces",
            "ng.app.converter.mapper.mapperinterfaceannotation.mapperinterfaceannotableadapter",
            "ng.app.converter.mapper.mapperobject",
            "ng.app.converter.mapper.mapperobject.browser",
            "ng.app.converter.mapper.mapperobject.interfaces",
            "ng.app.converter.mapper.mapperobject.mapperobject",
            "ng.app.converter.mapper.mapperobject.mapperobjectnamechooser",
            "ng.app.converter.object2psadapter",
            "ng.app.converter.object2psadapter.browser",
            "ng.app.converter.object2psadapter.browser.propertysheet",
            "ng.app.converter.object2psadapter.interfaces",
            "ng.app.converter.object2psadapter.object2psadapter",
            "ng.app.converter.propertysheetwidget",
            "ng.app.converter.propertysheetwidget.propertysheetwidget"
        ],
        "version": "1.0.8"
    },
    "ng.app.link": {
        "cmdline": [],
        "modules": [
            "src",
            "src.ng",
            "src.ng.app",
            "src.ng.app.link",
            "src.ng.app.link.browser",
            "src.ng.app.link.interfaces",
            "src.ng.app.link.link",
            "src.ng.app.link.link2obadapter",
            "src.ng.app.link.link2obadapter.link2obadapter",
            "src.ng.app.link.linkbackreference",
            "src.ng.app.link.linkbackreference.browser",
            "src.ng.app.link.linkbackreference.interfaces",
            "src.ng.app.link.linkbackreference.linkbackreference",
            "src.ng.app.link.linkbackreference.linkbackreferenceitems",
            "src.ng.app.link.linkhandler",
            "src.ng.app.link.linkhandler.linkhandler",
            "src.ng.app.link.obhandler",
            "src.ng.app.link.obhandler.obhandler"
        ],
        "version": "1.0.0"
    },
    "ng.app.mailfeed": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.app",
            "ng.app.mailfeed",
            "ng.app.mailfeed.addresses",
            "ng.app.mailfeed.addresses.addresses",
            "ng.app.mailfeed.addresses.addressesannotableadapter",
            "ng.app.mailfeed.addresses.addressesutilitableadapter",
            "ng.app.mailfeed.addresses.browser",
            "ng.app.mailfeed.addresses.browser.widgets",
            "ng.app.mailfeed.addresses.interfaces",
            "ng.app.mailfeed.interfaces",
            "ng.app.mailfeed.mailfeed",
            "ng.app.mailfeed.mailtemplate",
            "ng.app.mailfeed.mailtemplate.browser",
            "ng.app.mailfeed.mailtemplate.interfaces",
            "ng.app.mailfeed.mailtemplate.mailtemplate",
            "ng.app.mailfeed.mailtemplate.mailtemplateannotableadapter",
            "ng.app.mailfeed.mailtemplate.mailtemplateutilitableadapter",
            "ng.app.mailfeed.sender",
            "ng.app.mailfeed.sender.browser",
            "ng.app.mailfeed.sender.interfaces",
            "ng.app.mailfeed.sender.sender",
            "ng.app.mailfeed.sender.senderannotableadapter",
            "ng.app.mailfeed.sender.senderutilitableadapter"
        ],
        "version": "0.0.2"
    },
    "ng.app.mailform": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.app",
            "ng.app.mailform",
            "ng.app.mailform.browser",
            "ng.app.mailform.interfaces",
            "ng.app.mailform.mailform",
            "ng.app.mailform.mailform2formsave"
        ],
        "version": "0.0.2"
    },
    "ng.app.objectqueue": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.app",
            "ng.app.objectqueue",
            "ng.app.objectqueue.browser",
            "ng.app.objectqueue.demo",
            "ng.app.objectqueue.interfaces",
            "ng.app.objectqueue.objectqueue",
            "ng.app.objectqueue.objectqueueannotationadapter",
            "ng.app.objectqueue.objectqueuehandle",
            "ng.app.objectqueue.objectqueuehandle.objectqueuealladapter",
            "ng.app.objectqueue.objectqueuehandle.objectqueuehandler",
            "ng.app.objectqueue.objectqueuehandle.objectqueueutilities",
            "ng.app.objectqueue.objectqueueutilityadapter",
            "ng.app.objectqueue.queueutility",
            "ng.app.objectqueue.queueutility.queueutility"
        ],
        "version": "0.0.8"
    },
    "ng.app.openid": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.app",
            "ng.app.openid",
            "ng.app.openid.browser",
            "ng.app.openid.browser.logout",
            "ng.app.openid.cookiecredentials",
            "ng.app.openid.interfaces",
            "ng.app.openid.logincredentials",
            "ng.app.openid.openidauthenticator",
            "ng.app.openid.openidcredentials",
            "ng.app.openid.openiderrormessage",
            "ng.app.openid.openiderrormessageadapter"
        ],
        "version": "0.0.2"
    },
    "ng.app.photo": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.app",
            "ng.app.photo",
            "ng.app.photo.browser",
            "ng.app.photo.browser.editphoto",
            "ng.app.photo.browser.photoadapter",
            "ng.app.photo.browser.widgets",
            "ng.app.photo.interfaces",
            "ng.app.photo.photo",
            "ng.app.photo.phototoolfiltersvocabulary",
            "ng.app.photo.phototools"
        ],
        "version": "0.0.2"
    },
    "ng.app.quota": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.app",
            "ng.app.quota",
            "ng.app.quota.browser",
            "ng.app.quota.browser.histogram",
            "ng.app.quota.browser.quotareindex",
            "ng.app.quota.demo",
            "ng.app.quota.interfaces",
            "ng.app.quota.quota",
            "ng.app.quota.quotaannotationadapter",
            "ng.app.quota.quotahandle",
            "ng.app.quota.quotahandle.handle",
            "ng.app.quota.quotahandle.quotaalladapter",
            "ng.app.quota.quotahandle.quotautilities",
            "ng.app.quota.quotautilityadapter"
        ],
        "version": "1.1.0"
    },
    "ng.app.registry": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.app",
            "ng.app.registry",
            "ng.app.registry.browser",
            "ng.app.registry.browser.registryedit",
            "ng.app.registry.interfaces",
            "ng.app.registry.registry",
            "ng.app.registry.registryadapter",
            "ng.app.registry.registryadapter.registryadapter",
            "ng.app.registry.registryint",
            "ng.app.registry.registrynamespace",
            "ng.app.registry.registrynamespace.registrynamespace",
            "ng.app.registry.registrytext",
            "ng.app.registry.registrytextline",
            "ng.app.registry.registryvocabulary"
        ],
        "version": "0.1.2"
    },
    "ng.app.remotefs": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.app",
            "ng.app.remotefs",
            "ng.app.remotefs.browser",
            "ng.app.remotefs.browser.remoteobject",
            "ng.app.remotefs.exceptions",
            "ng.app.remotefs.interfaces",
            "ng.app.remotefs.remoteconnector",
            "ng.app.remotefs.remoteconnector.browser",
            "ng.app.remotefs.remoteconnector.interfaces",
            "ng.app.remotefs.remoteconnector.remoteconnector",
            "ng.app.remotefs.remoteconnector.remoteconnectorhttp",
            "ng.app.remotefs.remoteconnector.remoteconnectorsvn",
            "ng.app.remotefs.remoteconnector.svntest",
            "ng.app.remotefs.remoteconnector.svnwrapper",
            "ng.app.remotefs.remoteconnectorvocabulary",
            "ng.app.remotefs.remoteconnectorvocabulary.remoteconnectorvocabulary",
            "ng.app.remotefs.remotecontainer",
            "ng.app.remotefs.remotecontainer.browser",
            "ng.app.remotefs.remotecontainer.interfaces",
            "ng.app.remotefs.remotecontainer.remotecontainer",
            "ng.app.remotefs.remotefactory",
            "ng.app.remotefs.remotefactory.interfaces",
            "ng.app.remotefs.remotefactory.remoteobject",
            "ng.app.remotefs.remotefile",
            "ng.app.remotefs.remotefile.browser",
            "ng.app.remotefs.remotefile.browser.body",
            "ng.app.remotefs.remotefile.browser.view",
            "ng.app.remotefs.remotefile.interfaces",
            "ng.app.remotefs.remotefile.remotefile",
            "ng.app.remotefs.remoteobject",
            "ng.app.remotefs.remoteregistry",
            "ng.app.remotefs.remoteregistry.browser",
            "ng.app.remotefs.remoteregistry.interfaces",
            "ng.app.remotefs.remoteregistry.remoteregistry",
            "ng.app.remotefs.remoteregistry.remoteregistryhandler",
            "ng.app.remotefs.remoteregistry.remoteregistryitem",
            "ng.app.remotefs.remoteupdate",
            "ng.app.remotefs.remoteupdate.browser",
            "ng.app.remotefs.remoteupdate.browser.demo",
            "ng.app.remotefs.remoteupdate.browser.update",
            "ng.app.remotefs.remoteupdate.browser.xmlrpc",
            "ng.app.remotefs.remoteupdate.interfaces",
            "ng.app.remotefs.remoteupdate.remoteupdate"
        ],
        "version": "1.0.1"
    },
    "ng.app.rss": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.app",
            "ng.app.rss",
            "ng.app.rss.browser",
            "ng.app.rss.interfaces",
            "ng.app.rss.rss",
            "ng.app.rss.rssadapter",
            "ng.app.rss.rssview",
            "ng.app.rss.rssview.rssview",
            "ng.app.rss.zdc2rssentryadapter"
        ],
        "version": "0.0.5"
    },
    "ng.app.rubricator": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.app",
            "ng.app.rubricator",
            "ng.app.rubricator.filterannotation",
            "ng.app.rubricator.filterannotation.browser",
            "ng.app.rubricator.filterannotation.browser.filterannotableedit",
            "ng.app.rubricator.filterannotation.demo",
            "ng.app.rubricator.filterannotation.filterannotableadapter",
            "ng.app.rubricator.filterannotation.filterannotation",
            "ng.app.rubricator.filterannotation.interfaces",
            "ng.app.rubricator.interfaces",
            "ng.app.rubricator.newsref",
            "ng.app.rubricator.newsref.newshandler",
            "ng.app.rubricator.newsref.newshandler.newshandler",
            "ng.app.rubricator.newsref.newsref",
            "ng.app.rubricator.newsref.newsref.browser",
            "ng.app.rubricator.newsref.newsref.interfaces",
            "ng.app.rubricator.newsref.newsref.newsref",
            "ng.app.rubricator.newsref.newsref2newsadapter",
            "ng.app.rubricator.newsref.newsref2newsadapter.newsref2newsadapter",
            "ng.app.rubricator.newsref.newsrefbackreference",
            "ng.app.rubricator.newsref.newsrefbackreference.browser",
            "ng.app.rubricator.newsref.newsrefbackreference.interfaces",
            "ng.app.rubricator.newsref.newsrefbackreference.newsrefbackreference",
            "ng.app.rubricator.newsref.newsrefbackreference.newsrefbackreferenceitems",
            "ng.app.rubricator.newsref.newsrefbackreference.vocabulary",
            "ng.app.rubricator.newsref.newsrefhandler",
            "ng.app.rubricator.newsref.newsrefhandler.newsrefhandler",
            "ng.app.rubricator.rubricalgorithm",
            "ng.app.rubricator.rubricalgorithm.browser",
            "ng.app.rubricator.rubricalgorithm.browser.reindex",
            "ng.app.rubricator.rubricalgorithm.interfaces",
            "ng.app.rubricator.rubricalgorithm.rubricalgorithm",
            "ng.app.rubricator.rubricalgorithm.rulesetevaluatorvocabulary",
            "ng.app.rubricator.rubricalgorithm.rulesetevaluatorvocabulary.rulesetevaluatorvocabulary",
            "ng.app.rubricator.rubrichandler",
            "ng.app.rubricator.rubrichandler.rubrichandler",
            "ng.app.rubricator.rulehandler",
            "ng.app.rubricator.rulehandler.interfaces",
            "ng.app.rubricator.rulehandler.rulehandler",
            "ng.app.rubricator.ruleset2z",
            "ng.app.rubricator.ruleset2z.browser",
            "ng.app.rubricator.ruleset2z.interfaces",
            "ng.app.rubricator.ruleset2z.ruleset2z",
            "ng.app.rubricator.rulesetevaluator",
            "ng.app.rubricator.rulesetevaluator.browser",
            "ng.app.rubricator.rulesetevaluator.interfaces",
            "ng.app.rubricator.rulesetevaluator.rulesetevaluator",
            "ng.app.rubricator.ruletraverser",
            "ng.app.rubricator.ruletraverser.ruletraverser"
        ],
        "version": "0.2.3"
    },
    "ng.app.rubricator.algorithm.base": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.app",
            "ng.app.rubricator",
            "ng.app.rubricator.algorithm",
            "ng.app.rubricator.algorithm.base",
            "ng.app.rubricator.algorithm.base.browser",
            "ng.app.rubricator.algorithm.base.browser.reindex",
            "ng.app.rubricator.algorithm.base.exceptions",
            "ng.app.rubricator.algorithm.base.handler",
            "ng.app.rubricator.algorithm.base.handler.rubrichandler",
            "ng.app.rubricator.algorithm.base.interfaces",
            "ng.app.rubricator.algorithm.base.rubricalgorithmbase"
        ],
        "version": "1.0.1"
    },
    "ng.app.rubricator.algorithm.tag": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.app",
            "ng.app.rubricator",
            "ng.app.rubricator.algorithm",
            "ng.app.rubricator.algorithm.tag",
            "ng.app.rubricator.algorithm.tag.browser",
            "ng.app.rubricator.algorithm.tag.interfaces",
            "ng.app.rubricator.algorithm.tag.rubricalgorithmtag"
        ],
        "version": "1.0.0"
    },
    "ng.app.rubricator.tag": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.app",
            "ng.app.rubricator",
            "ng.app.rubricator.tag",
            "ng.app.rubricator.tag.tagitemannotation",
            "ng.app.rubricator.tag.tagitemannotation.browser",
            "ng.app.rubricator.tag.tagitemannotation.interfaces",
            "ng.app.rubricator.tag.tagitemannotation.tagitemannotation",
            "ng.app.rubricator.tag.tagitemannotation.tagitemannotationableadapter",
            "ng.app.rubricator.tag.tagrubricannotation",
            "ng.app.rubricator.tag.tagrubricannotation.browser",
            "ng.app.rubricator.tag.tagrubricannotation.interfaces",
            "ng.app.rubricator.tag.tagrubricannotation.tagrubricannotation",
            "ng.app.rubricator.tag.tagrubricannotation.tagrubricannotationableadapter",
            "ng.app.rubricator.tag.tagrubricannotation.tagrubricsearchadapter",
            "ng.app.rubricator.tag.tagvocabulary",
            "ng.app.rubricator.tag.tagvocabulary.tagvocabulary"
        ],
        "version": "0.0.2"
    },
    "ng.app.skinswitch": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.app",
            "ng.app.skinswitch",
            "ng.app.skinswitch.browser",
            "ng.app.skinswitch.interfaces",
            "ng.app.skinswitch.skinswitchableadapter",
            "ng.app.skinswitch.skinswitchannotation",
            "ng.app.skinswitch.skinswitchhandler"
        ],
        "version": "0.0.1"
    },
    "ng.app.smartbanner": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.app",
            "ng.app.smartbanner",
            "ng.app.smartbanner.smartbanner",
            "ng.app.smartbanner.smartbanner.browser",
            "ng.app.smartbanner.smartbanner.browser.smartbannerview",
            "ng.app.smartbanner.smartbanner.interfaces",
            "ng.app.smartbanner.smartbanner.smartbanner",
            "ng.app.smartbanner.smartbanner.smartbannerdumb",
            "ng.app.smartbanner.smartbanneralgorithm",
            "ng.app.smartbanner.smartbanneralgorithm.interfaces",
            "ng.app.smartbanner.smartbanneralgorithm.smartbanneralgorithm",
            "ng.app.smartbanner.smartbanneralgorithm.smartbanneralgorithmvocabulary",
            "ng.app.smartbanner.smartbannercontainer",
            "ng.app.smartbanner.smartbannercontainer.browser",
            "ng.app.smartbanner.smartbannercontainer.interfaces",
            "ng.app.smartbanner.smartbannercontainer.smartbannercontainer",
            "ng.app.smartbanner.smartbannercontainernamespace",
            "ng.app.smartbanner.smartbannercontainernamespace.smartbannercontainernamespace",
            "ng.app.smartbanner.smartbannernamespace",
            "ng.app.smartbanner.smartbannernamespace.interfaces",
            "ng.app.smartbanner.smartbannernamespace.smartbannernamespace",
            "ng.app.smartbanner.smartbannerrandnamespace",
            "ng.app.smartbanner.smartbannerrandnamespace.smartbannerrandnamespace",
            "ng.app.smartbanner.smartbannerview",
            "ng.app.smartbanner.smartbannerview.smartbannerview"
        ],
        "version": "0.1.2"
    },
    "ng.base.form": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.base",
            "ng.base.form",
            "ng.base.form.browser",
            "ng.base.form.browser.dialog",
            "ng.base.form.browser.dialognamespace",
            "ng.base.form.browser.formedit",
            "ng.base.form.browser.formsave",
            "ng.base.form.formcontainer",
            "ng.base.form.formint",
            "ng.base.form.formitembase",
            "ng.base.form.formregexp",
            "ng.base.form.formtext",
            "ng.base.form.formtextline",
            "ng.base.form.interfaces"
        ],
        "version": "0.0.3"
    },
    "ng.base.itemsfilter": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.base",
            "ng.base.itemsfilter",
            "ng.base.itemsfilter.interfaces",
            "ng.base.itemsfilter.itemsfilter",
            "ng.base.itemsfilter.itemsfiltercondition",
            "ng.base.itemsfilter.itemsfilterrecord"
        ],
        "version": "0.0.2"
    },
    "ng.content.annotation": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.content",
            "ng.content.annotation",
            "ng.content.annotation.annotationswitcher",
            "ng.content.annotation.annotationswitcher.demo",
            "ng.content.annotation.annotationswitcher.demo.interfaces",
            "ng.content.annotation.annotationswitcher.interfaces",
            "ng.content.annotation.dictannotation",
            "ng.content.annotation.dictannotation.browser",
            "ng.content.annotation.dictannotation.dictannotation",
            "ng.content.annotation.dictannotation.dictannotation2titlesubscriber",
            "ng.content.annotation.dictannotation.dictannotationableadapter",
            "ng.content.annotation.dictannotation.interfaces",
            "ng.content.annotation.docshortannotation",
            "ng.content.annotation.docshortannotation.browser",
            "ng.content.annotation.docshortannotation.docshortannotation",
            "ng.content.annotation.docshortannotation.docshortannotation2titlesubscriber",
            "ng.content.annotation.docshortannotation.docshortannotationableadapter",
            "ng.content.annotation.docshortannotation.interfaces",
            "ng.content.annotation.eventannotation",
            "ng.content.annotation.eventannotation.browser",
            "ng.content.annotation.eventannotation.eventannotation",
            "ng.content.annotation.eventannotation.eventannotation2titlesubscriber",
            "ng.content.annotation.eventannotation.eventannotationableadapter",
            "ng.content.annotation.eventannotation.interfaces",
            "ng.content.annotation.productannotation",
            "ng.content.annotation.productannotation.browser",
            "ng.content.annotation.productannotation.interfaces",
            "ng.content.annotation.productannotation.productannotation",
            "ng.content.annotation.productannotation.productannotation2titlesubscriber",
            "ng.content.annotation.productannotation.productannotationableadapter",
            "ng.content.annotation.redirectannotation",
            "ng.content.annotation.redirectannotation.browser",
            "ng.content.annotation.redirectannotation.interfaces",
            "ng.content.annotation.redirectannotation.redirectannotation",
            "ng.content.annotation.redirectannotation.redirectannotationableadapter"
        ],
        "version": "0.1.0"
    },
    "ng.content.article": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.content",
            "ng.content.article",
            "ng.content.article.adapter",
            "ng.content.article.adapter.containeradapter",
            "ng.content.article.article",
            "ng.content.article.article.article",
            "ng.content.article.article.articlelink",
            "ng.content.article.article.browser",
            "ng.content.article.article.interfaces",
            "ng.content.article.browser",
            "ng.content.article.browser.export",
            "ng.content.article.division",
            "ng.content.article.division.browser",
            "ng.content.article.division.division",
            "ng.content.article.division.interfaces",
            "ng.content.article.ftp",
            "ng.content.article.ftp.article2attributediradapter",
            "ng.content.article.ftp.directoryfactory",
            "ng.content.article.ftp.division2attributediradapter",
            "ng.content.article.ftp.remotearticle2attributediradapter",
            "ng.content.article.interfaces",
            "ng.content.article.maincontainer",
            "ng.content.article.maincontainer.browser",
            "ng.content.article.maincontainer.browser.widgets",
            "ng.content.article.maincontainer.interfaces",
            "ng.content.article.maincontainer.maincontainer",
            "ng.content.article.maincontainer.urldescriptor"
        ],
        "version": "1.0.9"
    },
    "ng.content.comment": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.content",
            "ng.content.comment",
            "ng.content.comment.browser",
            "ng.content.comment.comment",
            "ng.content.comment.commentannotation",
            "ng.content.comment.commentannotationableadapter",
            "ng.content.comment.interfaces"
        ],
        "version": "0.0.1"
    },
    "ng.content.location": {
        "cmdline": [],
        "modules": [
            "src",
            "src.ng",
            "src.ng.content",
            "src.ng.content.location",
            "src.ng.content.location.browser",
            "src.ng.content.location.browser.viewlocationannotation",
            "src.ng.content.location.geolocationadapter",
            "src.ng.content.location.interfaces",
            "src.ng.content.location.locationannotation",
            "src.ng.content.location.locationannotationableadapter"
        ],
        "version": "1.0.3"
    },
    "ng.content.profile": {
        "cmdline": [],
        "modules": [
            "src",
            "src.ng",
            "src.ng.content",
            "src.ng.content.profile",
            "src.ng.content.profile.communityobjectqueueannotation",
            "src.ng.content.profile.communityobjectqueueannotation.browser",
            "src.ng.content.profile.communityobjectqueueannotation.communityobjectqueueannotationableadapter",
            "src.ng.content.profile.communityobjectqueueannotation.interfaces",
            "src.ng.content.profile.exchangeannotation",
            "src.ng.content.profile.exchangeannotation.browser",
            "src.ng.content.profile.exchangeannotation.browser.messageadd",
            "src.ng.content.profile.exchangeannotation.exchange",
            "src.ng.content.profile.exchangeannotation.exchangeannotationableadapter",
            "src.ng.content.profile.exchangeannotation.interfaces",
            "src.ng.content.profile.exchangeannotation.mailbox",
            "src.ng.content.profile.exchangeannotation.message",
            "src.ng.content.profile.friendobjectqueueannotation",
            "src.ng.content.profile.friendobjectqueueannotation.browser",
            "src.ng.content.profile.friendobjectqueueannotation.friendobjectqueueannotation",
            "src.ng.content.profile.friendobjectqueueannotation.friendobjectqueueannotationableadapter",
            "src.ng.content.profile.friendobjectqueueannotation.friendobjectqueuehandler",
            "src.ng.content.profile.friendobjectqueueannotation.friendshipadapter",
            "src.ng.content.profile.friendobjectqueueannotation.interfaces",
            "src.ng.content.profile.friendshipannotation",
            "src.ng.content.profile.friendshipannotation.browser",
            "src.ng.content.profile.friendshipannotation.browser.friendlist",
            "src.ng.content.profile.friendshipannotation.friend",
            "src.ng.content.profile.friendshipannotation.friendshipannotation",
            "src.ng.content.profile.friendshipannotation.friendshipannotationableadapter",
            "src.ng.content.profile.friendshipannotation.interfaces",
            "src.ng.content.profile.friendshipannotation.mycommunityvocabulary",
            "src.ng.content.profile.profileannotation",
            "src.ng.content.profile.profileannotation.browser",
            "src.ng.content.profile.profileannotation.interfaces",
            "src.ng.content.profile.profileannotation.profileannotation",
            "src.ng.content.profile.profileannotation.profileannotation2titlesubscriber",
            "src.ng.content.profile.profileannotation.profileannotationableadapter"
        ],
        "version": "0.0.4"
    },
    "ng.content.remote": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.content",
            "ng.content.remotearticle",
            "ng.content.remotearticle.remotearticle",
            "ng.content.remotearticle.remotearticle.browser",
            "ng.content.remotearticle.remotearticle.browser.editform",
            "ng.content.remotearticle.remotearticle.interfaces",
            "ng.content.remotearticle.remotearticle.remotearticle"
        ],
        "version": "1.0.1"
    },
    "ng.content.remotearticle": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.content",
            "ng.content.remotearticle",
            "ng.content.remotearticle.remotearticle",
            "ng.content.remotearticle.remotearticle.browser",
            "ng.content.remotearticle.remotearticle.browser.editform",
            "ng.content.remotearticle.remotearticle.interfaces",
            "ng.content.remotearticle.remotearticle.remotearticle"
        ],
        "version": "1.0.2"
    },
    "ng.ftp": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.ftp",
            "ng.ftp.attributefactory",
            "ng.ftp.default",
            "ng.ftp.default.attributediradapter",
            "ng.ftp.default.directoryfactory",
            "ng.ftp.interfaces",
            "ng.ftp.nsat",
            "ng.ftp.readannotations",
            "ng.ftp.readattribute",
            "ng.ftp.readattributes",
            "ng.ftp.readdirectory",
            "ng.ftp.readnotdirectory",
            "ng.ftp.utils",
            "ng.ftp.widget",
            "ng.ftp.widget.ftpinterfacewidget",
            "ng.ftp.widget.ftpobjectwidget",
            "ng.ftp.widget.ftpwidget",
            "ng.ftp.widget.interfaces",
            "ng.ftp.widget.nsannotations4object",
            "ng.ftp.widget.nsat4object",
            "ng.ftp.writeattribute",
            "ng.ftp.writeattributes",
            "ng.ftp.writedirectory"
        ],
        "version": "0.1.2"
    },
    "ng.fuzzytraverser": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.fuzzytraverser",
            "ng.fuzzytraverser.demo",
            "ng.fuzzytraverser.fuzzytraverser",
            "ng.fuzzytraverser.fuzzytraverserannotation",
            "ng.fuzzytraverser.fuzzytraverserannotation.browser",
            "ng.fuzzytraverser.fuzzytraverserannotation.browser.fuzzytraverserannotableedit",
            "ng.fuzzytraverser.fuzzytraverserannotation.fuzzytraverserannotableadapter",
            "ng.fuzzytraverser.fuzzytraverserannotation.interfaces",
            "ng.fuzzytraverser.fuzzytraverserinfo",
            "ng.fuzzytraverser.fuzzytraverserinfo.fuzzytraverserinfo",
            "ng.fuzzytraverser.fuzzytraverserinfo.interfaces",
            "ng.fuzzytraverser.fuzzytraverserproperties",
            "ng.fuzzytraverser.fuzzytraverserproperties.browser",
            "ng.fuzzytraverser.fuzzytraverserproperties.fuzzytraverserproperties",
            "ng.fuzzytraverser.fuzzytraverserproperties.interfaces",
            "ng.fuzzytraverser.interfaces"
        ],
        "version": "1.0.1"
    },
    "ng.index.area": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.index",
            "ng.index.area",
            "ng.index.area.areabase",
            "ng.index.area.areaindex",
            "ng.index.area.browser",
            "ng.index.area.geoellipsoidprojection",
            "ng.index.area.interfaces"
        ],
        "version": "0.0.2"
    },
    "ng.index.topology": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.index",
            "ng.index.topology",
            "ng.index.topology.browser",
            "ng.index.topology.interfaces",
            "ng.index.topology.topologybase",
            "ng.index.topology.topologycontainer",
            "ng.index.topology.topologyhandler",
            "ng.index.topology.topologyindex",
            "ng.index.topology.topologyitem",
            "ng.index.topology.topologyitemvocabulary"
        ],
        "version": "0.0.3"
    },
    "ng.kit": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.kit",
            "ng.kit.annotationremover",
            "ng.kit.annotationremover.annotationremover",
            "ng.kit.annotationremover.browser",
            "ng.kit.annotationremover.browser.editform",
            "ng.kit.annotationremover.interfaces",
            "ng.kit.fixintid",
            "ng.kit.fixintid.fixintid",
            "ng.kit.fixintid.interfaces",
            "ng.kit.fixparent",
            "ng.kit.fixparent.browser",
            "ng.kit.fixparent.browser.editform",
            "ng.kit.fixparent.fixparent",
            "ng.kit.fixparent.interfaces",
            "ng.kit.interfaceswitcher",
            "ng.kit.interfaceswitcher.interfaces",
            "ng.kit.interfaceswitcher.interfaceswitcher",
            "ng.kit.interfaceswitcher.interfacevocabulary"
        ],
        "version": "0.0.2"
    },
    "ng.lib": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.lib",
            "ng.lib.containconstraint",
            "ng.lib.dynamicdefault",
            "ng.lib.editannotationnotify",
            "ng.lib.indexvocabulary",
            "ng.lib.interface",
            "ng.lib.interfaces",
            "ng.lib.objectwidget",
            "ng.lib.orderinformation",
            "ng.lib.registryvocabulary",
            "ng.lib.simplevocabulary",
            "ng.lib.utilityvocabulary",
            "ng.lib.viewletbase",
            "ng.lib.walk"
        ],
        "version": "0.0.8"
    },
    "ng.registry": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.registry",
            "ng.registry.browser",
            "ng.registry.interfaces"
        ],
        "version": "0.0.1"
    },
    "ng.schema": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.schema",
            "ng.schema.dropdowndatewidget",
            "ng.schema.dropdowndatewidget.dropdowndatewidget",
            "ng.schema.floatdaytime",
            "ng.schema.floatdaytime.floatdaytime",
            "ng.schema.interfaceswitcher",
            "ng.schema.interfaceswitcher.interfacechoicefield",
            "ng.schema.interfaceswitcher.interfaces",
            "ng.schema.interfaceswitcher.interfacesetfield",
            "ng.schema.interfaceswitcher.interfacevocabulary",
            "ng.schema.multiselectwidget",
            "ng.schema.multiselectwidget.demo",
            "ng.schema.multiselectwidget.demo.browser",
            "ng.schema.multiselectwidget.demo.demomultiselectwidget",
            "ng.schema.multiselectwidget.demo.interfaces",
            "ng.schema.multiselectwidget.multiselectwidget",
            "ng.schema.principalidwidget",
            "ng.schema.principalidwidget.principalidwidget",
            "ng.schema.regexp",
            "ng.schema.regexp.interfaces",
            "ng.schema.regexp.regexpfield"
        ],
        "version": "0.0.6"
    },
    "ng.site.addon.comment": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.site",
            "ng.site.addon",
            "ng.site.addon.comment",
            "ng.site.addon.comment.comment",
            "ng.site.addon.comment.convert",
            "ng.site.addon.comment.install",
            "ng.site.addon.comment.install.install_converter",
            "ng.site.addon.comment.profile",
            "ng.site.addon.comment.profile.create_profile_handle"
        ],
        "version": "1.1.2"
    },
    "ng.site.addon.community": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.site",
            "ng.site.addon",
            "ng.site.addon.community",
            "ng.site.addon.community.communityfactory",
            "ng.site.addon.community.communityfactory.community",
            "ng.site.addon.community.communityfactory.interfaces",
            "ng.site.addon.community.contain",
            "ng.site.addon.community.contain.interfaces",
            "ng.site.addon.community.install",
            "ng.site.addon.community.install.install_content",
            "ng.site.addon.community.profile",
            "ng.site.addon.community.profile.create_profile_handle"
        ],
        "version": "1.1.2"
    },
    "ng.site.addon.extension": {
        "cmdline": [],
        "modules": [
            "src",
            "src.ng",
            "src.ng.site",
            "src.ng.site.addon",
            "src.ng.site.addon.extension",
            "src.ng.site.addon.extension.fuzzytraverser",
            "src.ng.site.addon.extension.install",
            "src.ng.site.addon.extension.install.install_fuzzytraverser",
            "src.ng.site.addon.extension.install.install_quota",
            "src.ng.site.addon.extension.quota"
        ],
        "version": "1.1.4"
    },
    "ng.site.addon.profile": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.site",
            "ng.site.addon",
            "ng.site.addon.profile",
            "ng.site.addon.profile.breadcrumbadapter",
            "ng.site.addon.profile.contain",
            "ng.site.addon.profile.install",
            "ng.site.addon.profile.install.install_auth",
            "ng.site.addon.profile.install.install_content",
            "ng.site.addon.profile.install.install_index",
            "ng.site.addon.profile.profileadapter",
            "ng.site.addon.profile.profileadapter.interfaces",
            "ng.site.addon.profile.profileadapter.profileadapter",
            "ng.site.addon.profile.profilefactory",
            "ng.site.addon.profile.profilefactory.browser",
            "ng.site.addon.profile.profilefactory.interfaces",
            "ng.site.addon.profile.profilefactory.profile"
        ],
        "version": "1.1.1"
    },
    "ng.site.addon.remotefs": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.site",
            "ng.site.addon",
            "ng.site.addon.remotefs",
            "ng.site.addon.remotefs.adapter",
            "ng.site.addon.remotefs.adapter.remoteobject2titlesubscriber",
            "ng.site.addon.remotefs.annotation",
            "ng.site.addon.remotefs.annotationswitcher",
            "ng.site.addon.remotefs.contain",
            "ng.site.addon.remotefs.convert",
            "ng.site.addon.remotefs.fuzzytraverser",
            "ng.site.addon.remotefs.install",
            "ng.site.addon.remotefs.install.install_content",
            "ng.site.addon.remotefs.install.install_converter",
            "ng.site.addon.remotefs.install.install_index",
            "ng.site.addon.remotefs.rss",
            "ng.site.addon.remotefs.search"
        ],
        "version": "1.1.3"
    },
    "ng.site.addon.rubricator": {
        "cmdline": [],
        "modules": [
            "src",
            "src.ng",
            "src.ng.site",
            "src.ng.site.addon",
            "src.ng.site.addon.rubricator",
            "src.ng.site.addon.rubricator.contain",
            "src.ng.site.addon.rubricator.contain.interfaces",
            "src.ng.site.addon.rubricator.install",
            "src.ng.site.addon.rubricator.install.install_content",
            "src.ng.site.addon.rubricator.install.install_rubricator",
            "src.ng.site.addon.rubricator.rubric"
        ],
        "version": "1.1.2"
    },
    "ng.site.addon.tag": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.site",
            "ng.site.addon",
            "ng.site.addon.tag",
            "ng.site.addon.tag.install",
            "ng.site.addon.tag.install.install_content",
            "ng.site.addon.tag.install.install_index",
            "ng.site.addon.tag.install.install_rubricator",
            "ng.site.addon.tag.wave",
            "ng.site.addon.tag.wave.interfaces"
        ],
        "version": "1.1.1"
    },
    "ng.site.content": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.site",
            "ng.site.content",
            "ng.site.content.adapter",
            "ng.site.content.adapter.convertable2titlesubscriber",
            "ng.site.content.adapter.doctitle2titleadapter",
            "ng.site.content.adapter.doctitle2titlesubscriber",
            "ng.site.content.adapter.readcontainer2pagersourceadapter",
            "ng.site.content.adaptiveurlroot",
            "ng.site.content.annotation",
            "ng.site.content.contain",
            "ng.site.content.convert",
            "ng.site.content.grant",
            "ng.site.content.install",
            "ng.site.content.install.install_banner",
            "ng.site.content.install.install_catalog",
            "ng.site.content.install.install_content",
            "ng.site.content.install.install_converter",
            "ng.site.content.install.install_intids",
            "ng.site.content.install.install_logo",
            "ng.site.content.install.install_main",
            "ng.site.content.install.install_objectqueue",
            "ng.site.content.install.install_registry",
            "ng.site.content.install.install_rss",
            "ng.site.content.install.install_sm",
            "ng.site.content.install.install_smartimage",
            "ng.site.content.install.interfaces",
            "ng.site.content.install.logo",
            "ng.site.content.install.rubricdescription",
            "ng.site.content.install.widgets",
            "ng.site.content.owner2nicknameadapter",
            "ng.site.content.owner2nicknameadapter.interfaces",
            "ng.site.content.owner2nicknameadapter.owner2nicknameadapter",
            "ng.site.content.rename",
            "ng.site.content.rename.interfaces",
            "ng.site.content.rename.renameexception",
            "ng.site.content.rename.renamehandler",
            "ng.site.content.rename.renameview",
            "ng.site.content.rss",
            "ng.site.content.rss.article2rssentryadapter",
            "ng.site.content.search",
            "ng.site.content.search.interfaces",
            "ng.site.content.search.photosearchadapter",
            "ng.site.content.search.searchadapter",
            "ng.site.content.search.searchbackkeywordadapter",
            "ng.site.content.search.searchbacknameadapter",
            "ng.site.content.search.searchclassadapter",
            "ng.site.content.search.searchnameadapter",
            "ng.site.content.switcher",
            "ng.site.content.switcher.interfaces"
        ],
        "version": "1.1.5"
    },
    "ng.site.crosswiki": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.site",
            "ng.site.crosswiki",
            "ng.site.crosswiki.install"
        ],
        "version": "0.0.3"
    },
    "ng.site.greenpsy": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.site",
            "ng.site.greenpsy",
            "ng.site.greenpsy.install"
        ],
        "version": "1.0.0"
    },
    "ng.site.npclider": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.site",
            "ng.site.npclider",
            "ng.site.npclider.projectannotation",
            "ng.site.npclider.projectannotation.browser",
            "ng.site.npclider.projectannotation.interfaces",
            "ng.site.npclider.projectannotation.projectannotation",
            "ng.site.npclider.projectannotation.projectannotationableadapter"
        ],
        "version": "0.0.3"
    },
    "ng.skin.base": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.skin",
            "ng.skin.base",
            "ng.skin.base.adapter",
            "ng.skin.base.adapter.viewmain",
            "ng.skin.base.adapter.viewmain.main",
            "ng.skin.base.adapter.viewnextprev",
            "ng.skin.base.adapter.viewnextprev.interfaces",
            "ng.skin.base.adapter.viewnextprev.nextprev",
            "ng.skin.base.adapter.viewword",
            "ng.skin.base.adapter.viewword.viewword",
            "ng.skin.base.interfaces",
            "ng.skin.base.orderinformation",
            "ng.skin.base.page",
            "ng.skin.base.page.add",
            "ng.skin.base.page.add.imageadd",
            "ng.skin.base.page.add.nexturl",
            "ng.skin.base.page.addimagesequence",
            "ng.skin.base.page.addimagesequence.addimagesequence",
            "ng.skin.base.page.addimagesequence.interfaces",
            "ng.skin.base.page.autherror",
            "ng.skin.base.page.autherror.unauthorizedview",
            "ng.skin.base.page.comments",
            "ng.skin.base.page.commonedit",
            "ng.skin.base.page.commonedit.interfaces",
            "ng.skin.base.page.contentlet",
            "ng.skin.base.page.contentlet.interfaces",
            "ng.skin.base.page.contentlet.viewletabstract",
            "ng.skin.base.page.contentlet.viewletabstract.abstract",
            "ng.skin.base.page.contentlet.viewletabstract.abstractannotation",
            "ng.skin.base.page.contentlet.viewletbackref",
            "ng.skin.base.page.contentlet.viewletbackref.viewletbackref",
            "ng.skin.base.page.contentlet.viewletblog",
            "ng.skin.base.page.contentlet.viewletblog.blog",
            "ng.skin.base.page.contentlet.viewletblog.interfaces",
            "ng.skin.base.page.contentlet.viewletbody",
            "ng.skin.base.page.contentlet.viewletbody.body",
            "ng.skin.base.page.contentlet.viewletcomment",
            "ng.skin.base.page.contentlet.viewletcomment.addcomment",
            "ng.skin.base.page.contentlet.viewletcomment.comment",
            "ng.skin.base.page.contentlet.viewletcontent",
            "ng.skin.base.page.contentlet.viewletcontent.content",
            "ng.skin.base.page.contentlet.viewletcontenticons",
            "ng.skin.base.page.contentlet.viewletcontenticons.contenticons",
            "ng.skin.base.page.contentlet.viewletfacebook",
            "ng.skin.base.page.contentlet.viewletfacebook.facebook",
            "ng.skin.base.page.contentlet.viewletinbody",
            "ng.skin.base.page.contentlet.viewletinbody.inbody",
            "ng.skin.base.page.contentlet.viewletphoto",
            "ng.skin.base.page.contentlet.viewletprofile",
            "ng.skin.base.page.contentlet.viewletprofile.profileabstract",
            "ng.skin.base.page.contentlet.viewletshareit",
            "ng.skin.base.page.contentlet.viewletshareit.shareit",
            "ng.skin.base.page.contents",
            "ng.skin.base.page.dictionary",
            "ng.skin.base.page.dictionary.dictionary",
            "ng.skin.base.page.editphoto",
            "ng.skin.base.page.exception",
            "ng.skin.base.page.exception.errorview",
            "ng.skin.base.page.exception.interfaces",
            "ng.skin.base.page.exception.redirectexception",
            "ng.skin.base.page.fullimage",
            "ng.skin.base.page.home",
            "ng.skin.base.page.home.home",
            "ng.skin.base.page.main",
            "ng.skin.base.page.main.main",
            "ng.skin.base.page.robots",
            "ng.skin.base.page.robots.robots",
            "ng.skin.base.page.search",
            "ng.skin.base.page.search.searchpage",
            "ng.skin.base.page.topdict",
            "ng.skin.base.page.topdict.topdict",
            "ng.skin.base.page.wiki",
            "ng.skin.base.page.wiki.dictionaryitem",
            "ng.skin.base.page.wiki.dictionaryitemadapter",
            "ng.skin.base.page.wiki.interfaces",
            "ng.skin.base.page.wiki.joininterfaceadapterfactory",
            "ng.skin.base.page.wiki.undefined",
            "ng.skin.base.view",
            "ng.skin.base.view.docshortview",
            "ng.skin.base.view.docshortview.docshortview",
            "ng.skin.base.view.docshortview.linkview",
            "ng.skin.base.view.photoshortview",
            "ng.skin.base.view.photoshortview.photoshortview",
            "ng.skin.base.view.remotecontainerview",
            "ng.skin.base.view.remotecontainerview.remotecontainerview",
            "ng.skin.base.viewlet",
            "ng.skin.base.viewlet.interfaces",
            "ng.skin.base.viewlet.viewletdictannotation",
            "ng.skin.base.viewlet.viewletdictannotation.viewletdictannotation",
            "ng.skin.base.viewlet.viewleteventannotation",
            "ng.skin.base.viewlet.viewleteventannotation.viewleteventannotation",
            "ng.skin.base.viewlet.viewletgallery",
            "ng.skin.base.viewlet.viewletgallery.gallerybox",
            "ng.skin.base.viewlet.viewletgallery.interfaces",
            "ng.skin.base.viewlet.viewletloginbox",
            "ng.skin.base.viewlet.viewletloginbox.interfaces",
            "ng.skin.base.viewlet.viewletloginbox.loginbox",
            "ng.skin.base.viewlet.viewletmain",
            "ng.skin.base.viewlet.viewletmain.currentbox",
            "ng.skin.base.viewlet.viewletmain.interfaces",
            "ng.skin.base.viewlet.viewletmain.mainbox",
            "ng.skin.base.viewlet.viewletmain.newslistbox",
            "ng.skin.base.viewlet.viewletproductannotation",
            "ng.skin.base.viewlet.viewletproductannotation.viewletproductannotation",
            "ng.skin.base.viewlet.viewletprofileannotation",
            "ng.skin.base.viewlet.viewletprofileannotation.viewletprofileannotation",
            "ng.skin.base.viewlet.viewletrubriclist",
            "ng.skin.base.viewlet.viewletrubriclist.interfaces",
            "ng.skin.base.viewlet.viewletrubriclist.rubriccloud",
            "ng.skin.base.viewlet.viewletrubriclist.rubriclist",
            "ng.skin.base.viewlet.viewletsearch",
            "ng.skin.base.viewlet.viewletsearch.interfaces",
            "ng.skin.base.viewlet.viewletsubscribe",
            "ng.skin.base.viewlet.viewletsubscribe.interfaces",
            "ng.skin.base.viewlet.viewlettoolbox",
            "ng.skin.base.viewlet.viewlettoolbox.interfaces",
            "ng.skin.base.viewlet.viewlettopcommunities",
            "ng.skin.base.viewlet.viewlettopcommunities.interfaces",
            "ng.skin.base.viewlet.viewlettopcommunities.topcommunitiesbox"
        ],
        "version": "0.2.3"
    },
    "ng.skin.crosswiki": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.skin",
            "ng.skin.crosswiki",
            "ng.skin.crosswiki.interfaces",
            "ng.skin.crosswiki.page",
            "ng.skin.crosswiki.page.main",
            "ng.skin.crosswiki.page.main.main",
            "ng.skin.crosswiki.page.search",
            "ng.skin.crosswiki.page.search.interfaces",
            "ng.skin.crosswiki.page.search.searchpage",
            "ng.skin.crosswiki.page.wiki",
            "ng.skin.crosswiki.page.wiki.dictionaryitem",
            "ng.skin.crosswiki.page.wiki.dictionaryreferenceadapter",
            "ng.skin.crosswiki.page.wiki.interfaces",
            "ng.skin.crosswiki.page.wiki.nexturl"
        ],
        "version": "0.0.3"
    },
    "ng.skin.dreambot": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.skin",
            "ng.skin.dreambot",
            "ng.skin.dreambot.interfaces",
            "ng.skin.dreambot.main",
            "ng.skin.dreambot.product",
            "ng.skin.dreambot.product.product"
        ],
        "version": "0.0.7"
    },
    "ng.skin.eaglenest": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.skin",
            "ng.skin.eaglenest",
            "ng.skin.eaglenest.article",
            "ng.skin.eaglenest.article.article",
            "ng.skin.eaglenest.interfaces",
            "ng.skin.eaglenest.main"
        ],
        "version": "0.0.5"
    },
    "ng.skin.freeyellow": {
        "cmdline": [],
        "modules": [
            "freeyellow",
            "freeyellow.interfaces",
            "freeyellow.orderinformation",
            "freeyellow.viewlet",
            "freeyellow.viewlet.viewletprojectbox",
            "freeyellow.viewlet.viewletprojectbox.interfaces",
            "freeyellow.viewlet.viewletprojectbox.projectbox",
            "freeyellow.viewlet.viewletsearchbox",
            "freeyellow.viewlet.viewletsearchbox.interfaces",
            "freeyellow.viewletleftcolumn",
            "freeyellow.viewletleftcolumn.interfaces",
            "ng"
        ],
        "version": "0.0.2"
    },
    "ng.skin.greenpsy": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.skin",
            "ng.skin.greenpsy",
            "ng.skin.greenpsy.interfaces",
            "ng.skin.greenpsy.orderinformation",
            "ng.skin.greenpsy.page",
            "ng.skin.greenpsy.page.add",
            "ng.skin.greenpsy.page.addcommunity",
            "ng.skin.greenpsy.page.addcommunity.addcommunity",
            "ng.skin.greenpsy.page.chat",
            "ng.skin.greenpsy.page.chat.chat",
            "ng.skin.greenpsy.page.commonedit",
            "ng.skin.greenpsy.page.communitychoice",
            "ng.skin.greenpsy.page.communitychoice.communitychoice",
            "ng.skin.greenpsy.page.communitychoice.interfaces",
            "ng.skin.greenpsy.page.contentanons",
            "ng.skin.greenpsy.page.contentlet",
            "ng.skin.greenpsy.page.contentlet.viewletblog",
            "ng.skin.greenpsy.page.contentlet.viewletcommunityblog",
            "ng.skin.greenpsy.page.contentlet.viewletcommunityblog.communityblog",
            "ng.skin.greenpsy.page.friendblog",
            "ng.skin.greenpsy.page.friendblog.friendblog",
            "ng.skin.greenpsy.page.friendlist",
            "ng.skin.greenpsy.page.friendlist.friendlist",
            "ng.skin.greenpsy.page.main",
            "ng.skin.greenpsy.page.redirect",
            "ng.skin.greenpsy.page.redirect.redirect",
            "ng.skin.greenpsy.page.register",
            "ng.skin.greenpsy.page.register.interfaces",
            "ng.skin.greenpsy.page.register.register",
            "ng.skin.greenpsy.page.statistic",
            "ng.skin.greenpsy.page.statistic.statistic",
            "ng.skin.greenpsy.viewletfastsearch",
            "ng.skin.greenpsy.viewletfastsearch.interfaces",
            "ng.skin.greenpsy.viewletgoogleads",
            "ng.skin.greenpsy.viewletgoogleads.interfaces",
            "ng.skin.greenpsy.viewletleftcolumn",
            "ng.skin.greenpsy.viewletleftcolumn.interfaces",
            "ng.skin.greenpsy.viewletmembers",
            "ng.skin.greenpsy.viewletmembers.interfaces",
            "ng.skin.greenpsy.viewletrightcolumn",
            "ng.skin.greenpsy.viewletrightcolumn.interfaces"
        ],
        "version": "0.1.1"
    },
    "ng.skin.neural": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.skin",
            "ng.skin.neural",
            "ng.skin.neural.interfaces",
            "ng.skin.neural.main"
        ],
        "version": "2.0.2"
    },
    "ng.skin.npclider": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ng.skin.ultor": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.skin",
            "ng.skin.ultor",
            "ng.skin.ultor.interfaces",
            "ng.skin.ultor.orderinformation",
            "ng.skin.ultor.page",
            "ng.skin.ultor.page.blog",
            "ng.skin.ultor.page.blog.blog",
            "ng.skin.ultor.page.commonedit",
            "ng.skin.ultor.page.contentlet",
            "ng.skin.ultor.page.main",
            "ng.skin.ultor.viewlet",
            "ng.skin.ultor.viewlet.interfaces"
        ],
        "version": "0.0.2"
    },
    "ng.skin.webtogether": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ng.skin.zopelada": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.skin",
            "ng.skin.zopelada",
            "ng.skin.zopelada.idea",
            "ng.skin.zopelada.idea.idea",
            "ng.skin.zopelada.interfaces",
            "ng.skin.zopelada.main"
        ],
        "version": "0.0.5"
    },
    "ng.utility": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.utility",
            "ng.utility.interfacewave",
            "ng.utility.interfacewave.interfaces",
            "ng.utility.interfacewave.interfacewave",
            "ng.utility.intidsvocabulary",
            "ng.utility.intidsvocabulary.intidsvocabulary",
            "ng.utility.objecteventchannel",
            "ng.utility.objecteventchannel.objecteventchannel"
        ],
        "version": "1.0.3"
    },
    "ng.xmlrpcscan": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.xmlrpcscan",
            "ng.xmlrpcscan.browser",
            "ng.xmlrpcscan.browser.xmlrpcedit",
            "ng.xmlrpcscan.ngxmlrpcscan"
        ],
        "version": "0.0.6"
    },
    "ng.zcmljunction": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.zcmljunction",
            "ng.zcmljunction.junction",
            "ng.zcmljunction.metaconfigure",
            "ng.zcmljunction.metadirectives"
        ],
        "version": "1.0.3"
    },
    "ng.zcmlmultiform": {
        "cmdline": [],
        "modules": [
            "ng",
            "ng.zcmlmultiform",
            "ng.zcmlmultiform.interfaces",
            "ng.zcmlmultiform.metaconfigure",
            "ng.zcmlmultiform.metadirectives",
            "ng.zcmlmultiform.multiform",
            "ng.zcmlmultiform.multiformitem",
            "ng.zcmlmultiform.viewletbase"
        ],
        "version": "0.0.5"
    },
    "ngage": {
        "cmdline": [],
        "modules": [
            "ngage",
            "ngage.cli",
            "ngage.config",
            "ngage.exceptions",
            "ngage.plugins",
            "ngage.plugins.eznc",
            "ngage.plugins.napalm"
        ],
        "version": "0.1.0"
    },
    "ngalerie": {
        "cmdline": [],
        "modules": [
            "ngalerie"
        ],
        "version": "1.0.1"
    },
    "ngblog": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "ngcgh": {
        "cmdline": [
            "cgh2seg",
            "convert2nexus",
            "ngCGH"
        ],
        "modules": [
            "ngcgh"
        ],
        "version": "0.4.4"
    },
    "ngcloud": {
        "cmdline": [],
        "modules": [
            "ngcloud",
            "ngcloud.info",
            "ngcloud.pipe",
            "ngcloud.pipe.tuxedo",
            "ngcloud.report",
            "ngcloud.util"
        ],
        "version": "0.3.3"
    },
    "ngen": {
        "cmdline": [],
        "modules": [
            "ngen",
            "ngen.exceptions",
            "ngen.parsers",
            "ngen.singletons",
            "ngen.test",
            "ngen.test.test_parsers",
            "ngen.test.test_singletons",
            "ngen.test.test_tid",
            "ngen.test.test_timers",
            "ngen.test.test_transitions",
            "ngen.test.test_utils",
            "ngen.test.test_validators",
            "ngen.tid",
            "ngen.transitions",
            "ngen.utils",
            "ngen.validators"
        ],
        "version": "0.0.6"
    },
    "ngender": {
        "cmdline": [],
        "modules": [
            "ngender",
            "ngender.cli",
            "ngender.ngender"
        ],
        "version": "0.1.1"
    },
    "ngenix-hackergraph": {
        "cmdline": [],
        "modules": [
            "hackergraph"
        ],
        "version": "0.0.1"
    },
    "ngg2": {
        "cmdline": [],
        "modules": [
            "ngg2"
        ],
        "version": "1.3.0"
    },
    "ngi.notify.datadog": {
        "cmdline": [],
        "modules": [
            "ngi",
            "ngi.notify",
            "ngi.notify.datadog",
            "ngi.notify.datadog.browser",
            "ngi.notify.datadog.browser.cron_dd",
            "ngi.notify.datadog.controlpanel",
            "ngi.notify.datadog.dd",
            "ngi.notify.datadog.events",
            "ngi.notify.datadog.testing",
            "ngi.notify.datadog.tests",
            "ngi.notify.datadog.tests.test_setup"
        ],
        "version": "1.2"
    },
    "ngi.site.notification": {
        "cmdline": [],
        "modules": [
            "ngi",
            "ngi.site",
            "ngi.site.notification",
            "ngi.site.notification.controlpanel",
            "ngi.site.notification.controlpanel.cp",
            "ngi.site.notification.events",
            "ngi.site.notification.interfaces",
            "ngi.site.notification.tests"
        ],
        "version": "1.0"
    },
    "ngi.theme.simple": {
        "cmdline": [],
        "modules": [
            "ngi",
            "ngi.theme",
            "ngi.theme.simple",
            "ngi.theme.simple.browser",
            "ngi.theme.simple.browser.footer",
            "ngi.theme.simple.browser.logo",
            "ngi.theme.simple.browser.pref_form",
            "ngi.theme.simple.config",
            "ngi.theme.simple.interfaces",
            "ngi.theme.simple.tests"
        ],
        "version": "1.0b7"
    },
    "nginc": {
        "cmdline": [],
        "modules": [
            "nginc"
        ],
        "version": "0.0.4"
    },
    "nginx-config-builder": {
        "cmdline": [],
        "modules": [
            "nginx",
            "nginx.config",
            "nginx.config.api",
            "nginx.config.api.base",
            "nginx.config.api.blocks",
            "nginx.config.api.options",
            "nginx.config.builder",
            "nginx.config.builder.baseplugins",
            "nginx.config.builder.exceptions",
            "nginx.config.builder.plugins",
            "nginx.config.common",
            "nginx.config.helpers"
        ],
        "version": "0.0.2"
    },
    "nginx-parser": {
        "cmdline": [],
        "modules": [
            "src",
            "src.conf",
            "src.parser",
            "src.picasso",
            "src.store"
        ],
        "version": "0.1"
    },
    "nginx-redis-cache": {
        "cmdline": [],
        "modules": [
            "nginx_redis_cache",
            "nginx_redis_cache.clients",
            "nginx_redis_cache.decorators",
            "nginx_redis_cache.middleware"
        ],
        "version": "0.1"
    },
    "nginx-signing": {
        "cmdline": [],
        "modules": [
            "nginx_signing",
            "nginx_signing.signing"
        ],
        "version": "0.1.6"
    },
    "nginx-sites": {
        "cmdline": [],
        "modules": [
            "nginx_sites",
            "nginx_sites.colorize",
            "nginx_sites.nginx_sites"
        ],
        "version": "0.1.6"
    },
    "nginx-sso-dpaw": {
        "cmdline": [],
        "modules": [
            "nginx_sso",
            "nginx_sso.django",
            "nginx_sso.django.backends",
            "nginx_sso.django.forms",
            "nginx_sso.django.middleware",
            "nginx_sso.django.models",
            "nginx_sso.django.urls",
            "nginx_sso.django.views"
        ],
        "version": "0.2rc1"
    },
    "nginxauthdaemon": {
        "cmdline": [],
        "modules": [
            "nginxauthdaemon",
            "nginxauthdaemon.auth",
            "nginxauthdaemon.config",
            "nginxauthdaemon.crowdauth",
            "nginxauthdaemon.nginxauthdaemon"
        ],
        "version": "1.0.0"
    },
    "nginxctl": {
        "cmdline": [],
        "modules": [
            "nginxctl",
            "nginxctl.nginxctl"
        ],
        "version": "1.1.2"
    },
    "nginxhosts": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "nginxparser": {
        "cmdline": [],
        "modules": [
            "nginxparser",
            "nginxparser.core",
            "nginxparser.patterns"
        ],
        "version": "1.0.1"
    },
    "nginxparser-eb": {
        "cmdline": [],
        "modules": [
            "nginxparser_eb",
            "nginxparser_eb.tests",
            "nginxparser_eb.tests.nginxparser_test"
        ],
        "version": "0.0.9"
    },
    "ngl-utils": {
        "cmdline": [],
        "modules": [
            "ngl_utils",
            "ngl_utils.messages",
            "ngl_utils.nbitmap",
            "ngl_utils.nbitmap.converter",
            "ngl_utils.nbitmap.nbitmap",
            "ngl_utils.ncodegenerator",
            "ngl_utils.nfont",
            "ngl_utils.nfont.codeview",
            "ngl_utils.nfont.consolewidget",
            "ngl_utils.nfont.converter",
            "ngl_utils.nfont.converterwidget",
            "ngl_utils.nfont.cparser",
            "ngl_utils.nfont.editwidget",
            "ngl_utils.nfont.nfont",
            "ngl_utils.nfont.nfonts_rc",
            "ngl_utils.ngluic",
            "ngl_utils.nplugins",
            "ngl_utils.nplugins.nplugins",
            "ngl_utils.nplugins.python",
            "ngl_utils.nplugins.python.ngl_base_qplugin",
            "ngl_utils.nplugins.python.ngl_bitmap_plugin",
            "ngl_utils.nplugins.python.ngl_button_plugin",
            "ngl_utils.nplugins.python.ngl_checkbox_plugin",
            "ngl_utils.nplugins.python.ngl_fillbar_plugin",
            "ngl_utils.nplugins.python.ngl_graph_scale_plugin",
            "ngl_utils.nplugins.python.ngl_label_plugin",
            "ngl_utils.nplugins.python.ngl_line_plugin",
            "ngl_utils.nplugins.python.ngl_rect_plugin",
            "ngl_utils.nplugins.python.ngl_seekbar_plugin",
            "ngl_utils.nplugins.widgets",
            "ngl_utils.nplugins.widgets.ngl_base",
            "ngl_utils.nplugins.widgets.ngl_bitmap",
            "ngl_utils.nplugins.widgets.ngl_button",
            "ngl_utils.nplugins.widgets.ngl_checkbox",
            "ngl_utils.nplugins.widgets.ngl_colors",
            "ngl_utils.nplugins.widgets.ngl_fillbar",
            "ngl_utils.nplugins.widgets.ngl_graph_scale",
            "ngl_utils.nplugins.widgets.ngl_label",
            "ngl_utils.nplugins.widgets.ngl_line",
            "ngl_utils.nplugins.widgets.ngl_rect",
            "ngl_utils.nplugins.widgets.ngl_seekbar",
            "ngl_utils.nplugins.widgets.qstyle_parser",
            "ngl_utils.rle",
            "ngl_utils.uiparser"
        ],
        "version": "1.5.0"
    },
    "ngless-cwl": {
        "cmdline": [
            "ngless-count.py",
            "ngless-map.py",
            "ngless-mapstats.py",
            "ngless-select.py",
            "ngless-trim.py",
            "ngless-unique.py"
        ],
        "modules": [
            "ngless",
            "ngless.wrap"
        ],
        "version": "0.0.2"
    },
    "nglview": {
        "cmdline": [],
        "modules": [
            "nglview",
            "nglview._version",
            "nglview.adaptor",
            "nglview.base_adaptor",
            "nglview.color",
            "nglview.config",
            "nglview.contrib",
            "nglview.contrib.movie",
            "nglview.datafiles",
            "nglview.default",
            "nglview.interpolate",
            "nglview.layout",
            "nglview.parameters",
            "nglview.player",
            "nglview.remote_thread",
            "nglview.representation",
            "nglview.sandbox",
            "nglview.sandbox.amber",
            "nglview.sandbox.base",
            "nglview.scripts",
            "nglview.scripts.app",
            "nglview.scripts.cmd_example",
            "nglview.scripts.nglview",
            "nglview.shape",
            "nglview.show",
            "nglview.static",
            "nglview.tests.make_dummy_comm",
            "nglview.tests.test_cli",
            "nglview.tests.test_docs",
            "nglview.tests.test_movie_maker",
            "nglview.tests.test_show",
            "nglview.tests.test_utils",
            "nglview.tests.test_widget",
            "nglview.tests.utils",
            "nglview.theme",
            "nglview.theme.theme",
            "nglview.utils",
            "nglview.utils.js_utils",
            "nglview.utils.py_utils",
            "nglview.utils.widget_utils",
            "nglview.viewer_control",
            "nglview.widget",
            "nglview.widget_box"
        ],
        "version": "0.6.3"
    },
    "ngmeli": {
        "cmdline": [],
        "modules": [
            "ng_meli",
            "ng_meli.ng_meli"
        ],
        "version": "0.0.7"
    },
    "ngpy": {
        "cmdline": [],
        "modules": [
            "ngpy",
            "ngpy.config",
            "ngpy.forms",
            "ngpy.ngofflattice_kooi",
            "ngpy.ngplot",
            "ngpy.ngrun",
            "ngpy.ngutil",
            "ngpy.ngzodb",
            "ngpy.particle",
            "ngpy.vector2d",
            "ngpy.views"
        ],
        "version": "0.3"
    },
    "ngram": {
        "cmdline": [],
        "modules": [],
        "version": "3.3.0"
    },
    "ngrams": {
        "cmdline": [],
        "modules": [
            "ngrams",
            "ngrams.generate"
        ],
        "version": "1.0.3"
    },
    "ngs-plumbing": {
        "cmdline": [],
        "modules": [
            "ngs_plumbing",
            "ngs_plumbing._libdna_test",
            "ngs_plumbing._libdnaqual_test",
            "ngs_plumbing._libxsq_test",
            "ngs_plumbing.bam",
            "ngs_plumbing.colorspace",
            "ngs_plumbing.dna",
            "ngs_plumbing.dna_test",
            "ngs_plumbing.dnaqual",
            "ngs_plumbing.dnaqual_test",
            "ngs_plumbing.fasta",
            "ngs_plumbing.fasta_test",
            "ngs_plumbing.fastq",
            "ngs_plumbing.fastq_test",
            "ngs_plumbing.intervals",
            "ngs_plumbing.intervals_test",
            "ngs_plumbing.kmers",
            "ngs_plumbing.kmers_test",
            "ngs_plumbing.ngsp_string",
            "ngs_plumbing.ngsp_string_test",
            "ngs_plumbing.parsing",
            "ngs_plumbing.parsing_test",
            "ngs_plumbing.report",
            "ngs_plumbing.sampling",
            "ngs_plumbing.sampling_test",
            "ngs_plumbing.scons",
            "ngs_plumbing.tapir",
            "ngs_plumbing.tests",
            "ngs_plumbing.xsq",
            "ngs_plumbing.xsq_test",
            "ngs_plumbing.xsqconvert"
        ],
        "version": "0.13.1"
    },
    "ngsbq.main": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ngse": {
        "cmdline": [],
        "modules": [
            "ngSe",
            "ngSe.browser",
            "ngSe.by",
            "ngSe.contract",
            "ngSe.exceptions",
            "ngSe.page",
            "ngSe.utils"
        ],
        "version": "0.1.11"
    },
    "ngsequtils": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ngsfig": {
        "cmdline": [],
        "modules": [
            "ngsfig",
            "ngsfig.graphics",
            "ngsfig.graphics.trinucleotide",
            "ngsfig.utils",
            "ngsfig.utils.dna"
        ],
        "version": "0.1.1"
    },
    "ngslib": {
        "cmdline": [],
        "modules": [
            "src",
            "src.fdr",
            "src.lprob",
            "src.misc",
            "src.wStats",
            "src.wplot"
        ],
        "version": "1.1.19"
    },
    "ngspicepy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ngspicetomodelica": {
        "cmdline": [],
        "modules": [
            "NgspicetoModelica"
        ],
        "version": "0.3dev1"
    },
    "ngspy": {
        "cmdline": [],
        "modules": [
            "ngspy",
            "ngspy.MIL",
            "ngspy.Promotor",
            "ngspy.RNAseq",
            "ngspy.Scoring",
            "ngspy.SlidingBox",
            "ngspy/Formats",
            "ngspy/Formats._ngsData",
            "ngspy/Formats.ngsBED",
            "ngspy/Formats.ngsBedGraph",
            "ngspy/Formats.ngsConverter",
            "ngspy/Formats.ngsENCODE",
            "ngspy/Formats.ngsGFF",
            "ngspy/Formats.ngsWIG"
        ],
        "version": "0.1.0"
    },
    "ngsutils": {
        "cmdline": [
            "bamutils",
            "bedutils",
            "fastqutils",
            "gtfutils",
            "ngsutils"
        ],
        "modules": [
            "ngsutils",
            "ngsutils.bam",
            "ngsutils.bam.basecall",
            "ngsutils.bam.best",
            "ngsutils.bam.check",
            "ngsutils.bam.cims",
            "ngsutils.bam.cleancigar",
            "ngsutils.bam.convertregion",
            "ngsutils.bam.count",
            "ngsutils.bam.export",
            "ngsutils.bam.expressed",
            "ngsutils.bam.extract",
            "ngsutils.bam.filter",
            "ngsutils.bam.innerdist",
            "ngsutils.bam.junctioncount",
            "ngsutils.bam.keepbest",
            "ngsutils.bam.merge",
            "ngsutils.bam.minorallele",
            "ngsutils.bam.nearest",
            "ngsutils.bam.pair",
            "ngsutils.bam.pcrdup",
            "ngsutils.bam.peakheight",
            "ngsutils.bam.removeclipping",
            "ngsutils.bam.renamepair",
            "ngsutils.bam.split",
            "ngsutils.bam.stats",
            "ngsutils.bam.tag",
            "ngsutils.bam.tobed",
            "ngsutils.bam.tobedgraph",
            "ngsutils.bam.tofasta",
            "ngsutils.bam.tofastq",
            "ngsutils.bed",
            "ngsutils.bed.annotate",
            "ngsutils.bed.clean",
            "ngsutils.bed.cleanbg",
            "ngsutils.bed.extend",
            "ngsutils.bed.frombasecall",
            "ngsutils.bed.fromprimers",
            "ngsutils.bed.fromvcf",
            "ngsutils.bed.nearest",
            "ngsutils.bed.overlap",
            "ngsutils.bed.reduce",
            "ngsutils.bed.refcount",
            "ngsutils.bed.sizes",
            "ngsutils.bed.stats",
            "ngsutils.bed.subtract",
            "ngsutils.bed.tobed3",
            "ngsutils.bed.tobed6",
            "ngsutils.bed.tobedgraph",
            "ngsutils.bed.tofasta",
            "ngsutils.fastq",
            "ngsutils.fastq.barcode_split",
            "ngsutils.fastq.bfq",
            "ngsutils.fastq.convertqual",
            "ngsutils.fastq.csencode",
            "ngsutils.fastq.filter",
            "ngsutils.fastq.fromfasta",
            "ngsutils.fastq.fromqseq",
            "ngsutils.fastq.merge",
            "ngsutils.fastq.names",
            "ngsutils.fastq.properpairs",
            "ngsutils.fastq.revcomp",
            "ngsutils.fastq.sort",
            "ngsutils.fastq.split",
            "ngsutils.fastq.stats",
            "ngsutils.fastq.tag",
            "ngsutils.fastq.tile",
            "ngsutils.fastq.tobam",
            "ngsutils.fastq.tofasta",
            "ngsutils.fastq.trim",
            "ngsutils.fastq.truncate",
            "ngsutils.fastq.unmerge",
            "ngsutils.gtf",
            "ngsutils.gtf.add_isoform",
            "ngsutils.gtf.add_reflink",
            "ngsutils.gtf.add_xref",
            "ngsutils.gtf.annotate",
            "ngsutils.gtf.filter",
            "ngsutils.gtf.fromgff",
            "ngsutils.gtf.genesize",
            "ngsutils.gtf.junctions",
            "ngsutils.gtf.query",
            "ngsutils.gtf.remove_dup",
            "ngsutils.gtf.tobed",
            "ngsutils.ngs",
            "ngsutils.ngs.bgtowig",
            "ngsutils.ngs.repeat2fasta",
            "ngsutils.ngs.strip_fasta",
            "ngsutils.ngs.tag_fasta",
            "ngsutils.support",
            "ngsutils.support.bgzip",
            "ngsutils.support.dbsnp",
            "ngsutils.support.llh",
            "ngsutils.support.ngs_utils",
            "ngsutils.support.regions",
            "ngsutils.support.stats"
        ],
        "version": "0.5.9"
    },
    "ngtpl": {
        "cmdline": [],
        "modules": [
            "ngtpl"
        ],
        "version": "0.2.2"
    },
    "ngtsio": {
        "cmdline": [],
        "modules": [
            "ngtsio",
            "ngtsio.ngtsio",
            "ngtsio.ngtsio_examples",
            "ngtsio.test_ngtsio"
        ],
        "version": "1.1.1"
    },
    "ngtsiotest": {
        "cmdline": [],
        "modules": [
            "ngtsio",
            "ngtsio.ngtsio",
            "ngtsio.ngtsio_examples",
            "ngtsio.test_ngtsio"
        ],
        "version": "0.9.2"
    },
    "ngxtop": {
        "cmdline": [],
        "modules": [
            "ngxtop",
            "ngxtop.config_parser",
            "ngxtop.ngxtop",
            "ngxtop.utils"
        ],
        "version": "0.0.2"
    },
    "nh-embedded-list-printer": {
        "cmdline": [],
        "modules": [
            "nh_embedded_list_printer"
        ],
        "version": "1.3.0"
    },
    "nhaystack": {
        "cmdline": [],
        "modules": [
            "nhaystack",
            "nhaystack.backends",
            "nhaystack.backends.elasticsearch",
            "nhaystack.indexes",
            "nhaystack.routers",
            "nhaystack.signals",
            "nhaystack.utils",
            "nhaystack.utils.connection_url",
            "nhaystack.utils.languages",
            "nhaystack.utils.test"
        ],
        "version": "0.0.5"
    },
    "nhcalc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nhentai": {
        "cmdline": [],
        "modules": [
            "nhentai",
            "nhentai.cmdline",
            "nhentai.command",
            "nhentai.constant",
            "nhentai.doujinshi",
            "nhentai.downloader",
            "nhentai.logger",
            "nhentai.parser",
            "nhentai.utils"
        ],
        "version": "0.2.5"
    },
    "nhentai.py": {
        "cmdline": [],
        "modules": [
            "nhentai",
            "nhentai.nhentai"
        ],
        "version": "0.0.3"
    },
    "nhk-api": {
        "cmdline": [],
        "modules": [
            "nhk",
            "nhk.area",
            "nhk.client",
            "nhk.genre",
            "nhk.service",
            "nhk.util"
        ],
        "version": "0.0.2"
    },
    "nhl": {
        "cmdline": [],
        "modules": [
            "nhl"
        ],
        "version": "4.0"
    },
    "nhlscrapi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nhs": {
        "cmdline": [],
        "modules": [
            "nhs"
        ],
        "version": "2.0.0"
    },
    "nhspy": {
        "cmdline": [],
        "modules": [
            "nhspy",
            "nhspy.nhspy",
            "tests",
            "tests.test_nhspy"
        ],
        "version": "0.1.0"
    },
    "ni": {
        "cmdline": [],
        "modules": [
            "ni"
        ],
        "version": "0.0.1"
    },
    "niaopendata": {
        "cmdline": [],
        "modules": [
            "niaopendata",
            "niaopendata.api",
            "niaopendata.members",
            "niaopendata.organisations"
        ],
        "version": "0.0.1"
    },
    "nib": {
        "cmdline": [
            "nib"
        ],
        "modules": [
            "nib",
            "nib.build",
            "nib.config",
            "nib.document",
            "nib.plugins",
            "nib.plugins.blog",
            "nib.plugins.breadcrumbs",
            "nib.plugins.indexpages",
            "nib.plugins.lesscss",
            "nib.plugins.markdown",
            "nib.plugins.pages",
            "nib.plugins.pagination",
            "nib.plugins.prettyurls",
            "nib.plugins.sass",
            "nib.plugins.smartypants",
            "nib.plugins.time",
            "nib.processor",
            "nib.render",
            "nib.resource",
            "nib.yaml"
        ],
        "version": "0.5.7"
    },
    "nibabel": {
        "cmdline": [],
        "modules": [
            "nibabel",
            "nibabel.affines",
            "nibabel.analyze",
            "nibabel.arrayproxy",
            "nibabel.arraywriters",
            "nibabel.batteryrunners",
            "nibabel.benchmarks",
            "nibabel.benchmarks.bench_array_to_file",
            "nibabel.benchmarks.bench_fileslice",
            "nibabel.benchmarks.bench_finite_range",
            "nibabel.benchmarks.bench_load_save",
            "nibabel.benchmarks.bench_streamlines",
            "nibabel.benchmarks.butils",
            "nibabel.casting",
            "nibabel.checkwarns",
            "nibabel.data",
            "nibabel.deprecated",
            "nibabel.deprecator",
            "nibabel.dft",
            "nibabel.ecat",
            "nibabel.environment",
            "nibabel.eulerangles",
            "nibabel.externals",
            "nibabel.externals.netcdf",
            "nibabel.externals.ordereddict",
            "nibabel.externals.six",
            "nibabel.externals.tests",
            "nibabel.externals.tests.test_netcdf",
            "nibabel.externals.tests.test_ordereddict",
            "nibabel.filebasedimages",
            "nibabel.fileholders",
            "nibabel.filename_parser",
            "nibabel.fileslice",
            "nibabel.fileutils",
            "nibabel.freesurfer",
            "nibabel.freesurfer.io",
            "nibabel.freesurfer.mghformat",
            "nibabel.freesurfer.tests",
            "nibabel.freesurfer.tests.test_io",
            "nibabel.freesurfer.tests.test_mghformat",
            "nibabel.funcs",
            "nibabel.gifti",
            "nibabel.gifti.gifti",
            "nibabel.gifti.giftiio",
            "nibabel.gifti.parse_gifti_fast",
            "nibabel.gifti.tests",
            "nibabel.gifti.tests.test_1",
            "nibabel.gifti.tests.test_gifti",
            "nibabel.gifti.tests.test_giftiio",
            "nibabel.gifti.tests.test_parse_gifti_fast",
            "nibabel.gifti.util",
            "nibabel.imageclasses",
            "nibabel.imageglobals",
            "nibabel.info",
            "nibabel.keywordonly",
            "nibabel.loadsave",
            "nibabel.minc",
            "nibabel.minc1",
            "nibabel.minc2",
            "nibabel.mriutils",
            "nibabel.nicom",
            "nibabel.nicom.csareader",
            "nibabel.nicom.dicomreaders",
            "nibabel.nicom.dicomwrappers",
            "nibabel.nicom.dwiparams",
            "nibabel.nicom.structreader",
            "nibabel.nicom.tests",
            "nibabel.nicom.tests.data_pkgs",
            "nibabel.nicom.tests.test_csareader",
            "nibabel.nicom.tests.test_dicomreaders",
            "nibabel.nicom.tests.test_dicomwrappers",
            "nibabel.nicom.tests.test_dwiparams",
            "nibabel.nicom.tests.test_structreader",
            "nibabel.nicom.tests.test_utils",
            "nibabel.nicom.utils",
            "nibabel.nifti1",
            "nibabel.nifti2",
            "nibabel.onetime",
            "nibabel.openers",
            "nibabel.optpkg",
            "nibabel.orientations",
            "nibabel.parrec",
            "nibabel.parrec2nii_cmd",
            "nibabel.pkg_info",
            "nibabel.processing",
            "nibabel.py3k",
            "nibabel.pydicom_compat",
            "nibabel.quaternions",
            "nibabel.rstutils",
            "nibabel.spaces",
            "nibabel.spatialimages",
            "nibabel.spm2analyze",
            "nibabel.spm99analyze",
            "nibabel.streamlines",
            "nibabel.streamlines.array_sequence",
            "nibabel.streamlines.header",
            "nibabel.streamlines.tests",
            "nibabel.streamlines.tests.test_array_sequence",
            "nibabel.streamlines.tests.test_streamlines",
            "nibabel.streamlines.tests.test_tractogram",
            "nibabel.streamlines.tests.test_tractogram_file",
            "nibabel.streamlines.tests.test_trk",
            "nibabel.streamlines.tests.test_utils",
            "nibabel.streamlines.tractogram",
            "nibabel.streamlines.tractogram_file",
            "nibabel.streamlines.trk",
            "nibabel.streamlines.utils",
            "nibabel.testing",
            "nibabel.testing.np_features",
            "nibabel.tests",
            "nibabel.tests.nibabel_data",
            "nibabel.tests.scriptrunner",
            "nibabel.tests.test_affines",
            "nibabel.tests.test_analyze",
            "nibabel.tests.test_api_validators",
            "nibabel.tests.test_arrayproxy",
            "nibabel.tests.test_arraywriters",
            "nibabel.tests.test_batteryrunners",
            "nibabel.tests.test_casting",
            "nibabel.tests.test_checkwarns",
            "nibabel.tests.test_data",
            "nibabel.tests.test_deprecated",
            "nibabel.tests.test_deprecator",
            "nibabel.tests.test_dft",
            "nibabel.tests.test_ecat",
            "nibabel.tests.test_ecat_data",
            "nibabel.tests.test_endiancodes",
            "nibabel.tests.test_environment",
            "nibabel.tests.test_euler",
            "nibabel.tests.test_filehandles",
            "nibabel.tests.test_fileholders",
            "nibabel.tests.test_filename_parser",
            "nibabel.tests.test_files_interface",
            "nibabel.tests.test_fileslice",
            "nibabel.tests.test_fileutils",
            "nibabel.tests.test_floating",
            "nibabel.tests.test_funcs",
            "nibabel.tests.test_helpers",
            "nibabel.tests.test_image_api",
            "nibabel.tests.test_image_load_save",
            "nibabel.tests.test_image_types",
            "nibabel.tests.test_imageclasses",
            "nibabel.tests.test_imageglobals",
            "nibabel.tests.test_info",
            "nibabel.tests.test_keywordonly",
            "nibabel.tests.test_loadsave",
            "nibabel.tests.test_minc1",
            "nibabel.tests.test_minc2",
            "nibabel.tests.test_minc2_data",
            "nibabel.tests.test_mriutils",
            "nibabel.tests.test_nibabel_data",
            "nibabel.tests.test_nifti1",
            "nibabel.tests.test_nifti2",
            "nibabel.tests.test_openers",
            "nibabel.tests.test_optpkg",
            "nibabel.tests.test_orientations",
            "nibabel.tests.test_parrec",
            "nibabel.tests.test_parrec2nii",
            "nibabel.tests.test_parrec_data",
            "nibabel.tests.test_processing",
            "nibabel.tests.test_proxy_api",
            "nibabel.tests.test_quaternions",
            "nibabel.tests.test_recoder",
            "nibabel.tests.test_round_trip",
            "nibabel.tests.test_rstutils",
            "nibabel.tests.test_scaling",
            "nibabel.tests.test_scripts",
            "nibabel.tests.test_spaces",
            "nibabel.tests.test_spatialimages",
            "nibabel.tests.test_spm2analyze",
            "nibabel.tests.test_spm99analyze",
            "nibabel.tests.test_testing",
            "nibabel.tests.test_tmpdirs",
            "nibabel.tests.test_trackvis",
            "nibabel.tests.test_tripwire",
            "nibabel.tests.test_utils",
            "nibabel.tests.test_viewers",
            "nibabel.tests.test_wrapstruct",
            "nibabel.tmpdirs",
            "nibabel.trackvis",
            "nibabel.tripwire",
            "nibabel.viewers",
            "nibabel.volumeutils",
            "nibabel.wrapstruct",
            "nibabel.xmlutils",
            "nisext",
            "nisext.py3builder",
            "nisext.sexts",
            "nisext.testers",
            "nisext.tests",
            "nisext.tests.test_sexts",
            "nisext.tests.test_testers"
        ],
        "version": "2.1.0"
    },
    "nibble": {
        "cmdline": [],
        "modules": [
            "nibble",
            "nibble.tests"
        ],
        "version": "0.0.0"
    },
    "nibbler-python": {
        "cmdline": [],
        "modules": [
            "nibbler",
            "nibbler.parser",
            "test",
            "test.test_parser"
        ],
        "version": "0.0.2"
    },
    "nibelis-dl": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nicai-athletelist": {
        "cmdline": [],
        "modules": [
            "nicai_AthleteList"
        ],
        "version": "1.1.0"
    },
    "nice": {
        "cmdline": [],
        "modules": [
            "nice"
        ],
        "version": "1.1"
    },
    "nice-containers": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nicecall": {
        "cmdline": [],
        "modules": [
            "nicecall",
            "nicecall.filters",
            "nicecall.logger",
            "nicecall.process",
            "nicecall.tests",
            "nicecall.tests.null_process",
            "nicecall.tests.process_mock_context",
            "nicecall.tests.process_stub"
        ],
        "version": "1.0.10"
    },
    "nicecommits": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "niceconf": {
        "cmdline": [],
        "modules": [
            "niceconf",
            "niceconf.source"
        ],
        "version": "0.1.2"
    },
    "nicedice": {
        "cmdline": [],
        "modules": [
            "nicedice",
            "nicedice.ircformat",
            "nicedice.nicedice"
        ],
        "version": "1.0.1"
    },
    "nicedjango": {
        "cmdline": [],
        "modules": [
            "nicedjango",
            "nicedjango._compat",
            "nicedjango.graph",
            "nicedjango.graph.dumper",
            "nicedjango.graph.graph",
            "nicedjango.graph.loader",
            "nicedjango.graph.node",
            "nicedjango.graph.relation",
            "nicedjango.graph.utils",
            "nicedjango.management",
            "nicedjango.management.commands",
            "nicedjango.management.commands.dump_graph",
            "nicedjango.management.commands.load_graph",
            "nicedjango.models",
            "nicedjango.serializers",
            "nicedjango.serializers.compact_base",
            "nicedjango.serializers.compact_csv",
            "nicedjango.serializers.compact_python",
            "nicedjango.serializers.compact_yaml",
            "nicedjango.utils",
            "nicedjango.utils.bulk",
            "nicedjango.utils.compact_csv",
            "nicedjango.utils.fields",
            "nicedjango.utils.label",
            "nicedjango.utils.models",
            "nicedjango.utils.py",
            "nicedjango.utils.py.args",
            "nicedjango.utils.py.chunk",
            "nicedjango.utils.py.collections",
            "nicedjango.utils.py.file",
            "nicedjango.utils.py.iter",
            "nicedjango.utils.py.operator",
            "nicedjango.utils.py.string",
            "nicedjango.utils.queries",
            "tests",
            "tests.a1",
            "tests.a1.models",
            "tests.a1.urls",
            "tests.a2",
            "tests.a2.models",
            "tests.a2.urls",
            "tests.a3",
            "tests.a3.models",
            "tests.a3.urls",
            "tests.conftest",
            "tests.manage",
            "tests.samples",
            "tests.samples_compact_csv",
            "tests.samples_compact_python",
            "tests.samples_compact_yaml",
            "tests.samples_pks",
            "tests.test_compact_csv",
            "tests.test_compact_csv_reader",
            "tests.test_compact_python",
            "tests.test_compact_yaml",
            "tests.test_graph_build",
            "tests.test_pks",
            "tests.test_py_chunk",
            "tests.test_py_collections",
            "tests.test_relation",
            "tests.test_utils",
            "tests.utils"
        ],
        "version": "1.2.0"
    },
    "nicelib": {
        "cmdline": [],
        "modules": [
            "nicelib",
            "nicelib.__about__",
            "nicelib.build",
            "nicelib.nicelib",
            "nicelib.platform",
            "nicelib.process",
            "nicelib.util"
        ],
        "version": "0.3"
    },
    "nicelistnested": {
        "cmdline": [],
        "modules": [
            "nicelistnested"
        ],
        "version": "1.1.0"
    },
    "nicelog": {
        "cmdline": [],
        "modules": [
            "nicelog",
            "nicelog.colorers",
            "nicelog.colorers.base",
            "nicelog.colorers.terminal",
            "nicelog.formatters",
            "nicelog.styles",
            "nicelog.styles.base",
            "nicelog.utils"
        ],
        "version": "0.2.1"
    },
    "nicer": {
        "cmdline": [],
        "modules": [
            "nicer",
            "nicer.bits",
            "nicer.eqs",
            "nicer.slices",
            "nicer.times",
            "nicer.version"
        ],
        "version": "0.0.36"
    },
    "nicer-tests": {
        "cmdline": [],
        "modules": [
            "nicer_tests",
            "nicer_tests.tests"
        ],
        "version": "0.1.0"
    },
    "nicetypes": {
        "cmdline": [],
        "modules": [
            "nicetypes",
            "nicetypes.dicts",
            "nicetypes.lists"
        ],
        "version": "0.3.2"
    },
    "nicevirus": {
        "cmdline": [],
        "modules": [
            "nicevirus",
            "nicevirus.app",
            "nicevirus.backends",
            "nicevirus.backends.base",
            "nicevirus.backends.clamav",
            "nicevirus.cli",
            "nicevirus.scanner"
        ],
        "version": "0.0.7"
    },
    "niceware": {
        "cmdline": [],
        "modules": [
            "niceware",
            "niceware.wordlist"
        ],
        "version": "0.2.1"
    },
    "nicfit.py": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.15"
    },
    "nickel": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nickmab.async-util": {
        "cmdline": [],
        "modules": [
            "nickmab",
            "nickmab.async_util",
            "nickmab.async_util._exceptions",
            "nickmab.async_util._utils",
            "nickmab.async_util.subprocs",
            "nickmab.async_util.threads",
            "nickmab.async_util.web"
        ],
        "version": "1.1.2"
    },
    "nickyyyyy-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.0"
    },
    "nicnames": {
        "cmdline": [],
        "modules": [
            "nicnames",
            "nicnames.nicnames",
            "nicnames.tld_data",
            "nicnames.utilities"
        ],
        "version": "0.1.2"
    },
    "nico-nester": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nico-nester1": {
        "cmdline": [],
        "modules": [
            "nico_nester1"
        ],
        "version": "1.3.0"
    },
    "nicoerenkuk": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "nicolas-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.3.0"
    },
    "niconico-translator": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.5"
    },
    "nicopy": {
        "cmdline": [],
        "modules": [
            "nicopy",
            "nicopy.exception",
            "nicopy.nicopy"
        ],
        "version": "1.2.1"
    },
    "nicosearch": {
        "cmdline": [],
        "modules": [
            "nicosearch",
            "nicosearch.api",
            "nicosearch.config"
        ],
        "version": "0.2.4"
    },
    "nicotools": {
        "cmdline": [],
        "modules": [
            "nicotools",
            "nicotools.nicodown",
            "nicotools.nicodown_async",
            "nicotools.nicoml",
            "nicotools.nicoml_async",
            "nicotools.utils"
        ],
        "version": "1.0.2"
    },
    "nicovideo": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nictools": {
        "cmdline": [],
        "modules": [
            "nictools",
            "nictools.CalTempFromBias",
            "nictools.SP_FirstDerivatives",
            "nictools.SP_LeastSquares",
            "nictools.SP_numpy",
            "nictools.finesky",
            "nictools.fsutil",
            "nictools.makemedmask",
            "nictools.nic_rem_persist",
            "nictools.opusutil",
            "nictools.persutil",
            "nictools.puftcorr",
            "nictools.readTDD",
            "nictools.rnlincor",
            "nictools.saaclean",
            "nictools.tfbutil",
            "nictools.version"
        ],
        "version": "1.1.1"
    },
    "nicwaller.yq": {
        "cmdline": [],
        "modules": [
            "yq",
            "yq.yq"
        ],
        "version": "0.1.3"
    },
    "nidaba": {
        "cmdline": [],
        "modules": [],
        "version": "2.0.1"
    },
    "nidaba-client": {
        "cmdline": [],
        "modules": [],
        "version": "2.0.1"
    },
    "nidaqmx": {
        "cmdline": [],
        "modules": [
            "nidaqmx",
            "nidaqmx._lib",
            "nidaqmx.constants",
            "nidaqmx.error_codes",
            "nidaqmx.errors",
            "nidaqmx.scale",
            "nidaqmx.stream_readers",
            "nidaqmx.stream_writers",
            "nidaqmx.task",
            "nidaqmx.types",
            "nidaqmx.utils"
        ],
        "version": "0.5.2"
    },
    "nideep": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nidhogg": {
        "cmdline": [],
        "modules": [
            "nidhogg",
            "nidhogg.clustermode",
            "nidhogg.compatible",
            "nidhogg.core",
            "nidhogg.http",
            "nidhogg.sevenmode",
            "nidhogg.utils",
            "tests",
            "tests.conftest",
            "tests.test_compatible",
            "tests.test_core_clustered",
            "tests.test_core_create_request",
            "tests.test_core_do",
            "tests.test_core_getattr",
            "tests.test_core_ontapi",
            "tests.test_core_vserver",
            "tests.test_create_cifs_share",
            "tests.test_create_qtree",
            "tests.test_create_snapshot",
            "tests.test_delete_cifs_acl",
            "tests.test_delete_cifs_share",
            "tests.test_delete_qtree",
            "tests.test_delete_snapshot",
            "tests.test_get_best_volume",
            "tests.test_get_quota",
            "tests.test_get_snapmirror_status",
            "tests.test_get_snapmirror_volume_status",
            "tests.test_get_volume_for_home",
            "tests.test_http",
            "tests.test_list_apis",
            "tests.test_list_cifs_acls",
            "tests.test_list_cifs_shares",
            "tests.test_list_qtrees",
            "tests.test_list_quotas",
            "tests.test_list_snapable_volumes",
            "tests.test_list_snapshots",
            "tests.test_list_volumes",
            "tests.test_nidhogg",
            "tests.test_set_cifs_acl",
            "tests.test_set_quota",
            "tests.test_set_quota_timeout",
            "tests.test_snapmirror",
            "tests.test_snapmirror_params",
            "tests.test_utils_safe_get",
            "tests.test_utils_underline_to_dash",
            "tests.test_volume_info"
        ],
        "version": "3.3"
    },
    "nidm": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nidmfsl": {
        "cmdline": [
            "nidmfsl"
        ],
        "modules": [
            "nidmfsl",
            "nidmfsl.fsl_exporter",
            "nidmfsl.fsl_exporter.fsl_exporter",
            "nidmfsl.fsl_exporter.objects",
            "nidmfsl.fsl_exporter.objects.fsl_objects",
            "test",
            "test.export_test_battery",
            "test.test_fsl_export",
            "test.test_install"
        ],
        "version": "1.2.1"
    },
    "nidmresults": {
        "cmdline": [],
        "modules": [
            "nidmresults",
            "nidmresults.exporter",
            "nidmresults.graph",
            "nidmresults.objects",
            "nidmresults.objects.constants",
            "nidmresults.objects.constants_rdflib",
            "nidmresults.objects.contrast",
            "nidmresults.objects.generic",
            "nidmresults.objects.inference",
            "nidmresults.objects.modelfitting",
            "nidmresults.owl",
            "nidmresults.owl.owl_reader",
            "nidmresults.test",
            "nidmresults.test.check_consistency",
            "nidmresults.test.test_commons",
            "nidmresults.test.test_results_doc",
            "test",
            "test.test_reader"
        ],
        "version": "1.2.1"
    },
    "nidmviewer": {
        "cmdline": [],
        "modules": [
            "nidmviewer",
            "nidmviewer.browser",
            "nidmviewer.convert",
            "nidmviewer.data",
            "nidmviewer.scripts",
            "nidmviewer.sparql",
            "nidmviewer.template",
            "nidmviewer.templates",
            "nidmviewer.utils",
            "nidmviewer.viewer"
        ],
        "version": "0.1.3"
    },
    "nielsen": {
        "cmdline": [],
        "modules": [
            "nielsen",
            "nielsen.api",
            "nielsen.config",
            "nielsen.titles"
        ],
        "version": "0.9.6"
    },
    "niff": {
        "cmdline": [],
        "modules": [
            "Niff",
            "Niff.agents",
            "Niff.config",
            "Niff.keyboard",
            "Niff.lib",
            "Niff.log",
            "Niff.main",
            "Niff.netlib",
            "Niff.payloads",
            "Niff.terminal"
        ],
        "version": "0.4"
    },
    "nifpga": {
        "cmdline": [],
        "modules": [
            "nifpga",
            "nifpga.bitfile",
            "nifpga.nifpga",
            "nifpga.session",
            "nifpga.status",
            "nifpga.statuscheckedlibrary",
            "nifpga.tests",
            "nifpga.tests.test_nifpga"
        ],
        "version": "17.0.0.post2"
    },
    "niftianon": {
        "cmdline": [],
        "modules": [
            "niftianon",
            "niftianon.anonymiser",
            "niftianon.cli"
        ],
        "version": "0.1.1"
    },
    "nifty": {
        "cmdline": [],
        "modules": [
            "nifty",
            "nifty.common",
            "nifty.input_prompt",
            "nifty.nifty",
            "nifty.nifty_handler",
            "nifty.recursive_transformer",
            "nifty.utils",
            "nifty.validators",
            "nifty.version"
        ],
        "version": "1.6.3"
    },
    "niftyclient": {
        "cmdline": [],
        "modules": [
            "niftyclient",
            "niftyclient.exceptions",
            "niftyclient.schema",
            "niftyclient.signed_request_auth",
            "niftyclient.wallet_client"
        ],
        "version": "0.2.1"
    },
    "niftynet": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "niftypy": {
        "cmdline": [],
        "modules": [
            "NiftyPy",
            "NiftyPy.Common",
            "NiftyPy.NiftyRec",
            "NiftyPy.NiftyRec.NiftyRec",
            "NiftyPy.NiftyRec.NiftyRec_bk",
            "NiftyPy.NiftyReg",
            "NiftyPy.NiftyReg.NiftyReg",
            "NiftyPy.NiftySeg",
            "NiftyPy.test"
        ],
        "version": "0.4.0"
    },
    "nigaohsang": {
        "cmdline": [],
        "modules": [
            "nigaoshang"
        ],
        "version": "1.0.0"
    },
    "night": {
        "cmdline": [],
        "modules": [
            "night"
        ],
        "version": "0.1.0"
    },
    "nightmare-pdf": {
        "cmdline": [],
        "modules": [
            "nightmare_pdf",
            "nightmare_pdf.admin",
            "nightmare_pdf.apps",
            "nightmare_pdf.generators",
            "nightmare_pdf.migrations",
            "nightmare_pdf.models",
            "nightmare_pdf.settings",
            "nightmare_pdf.tests",
            "nightmare_pdf.views"
        ],
        "version": "0.1.0"
    },
    "nights-watch": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nightshades": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nihao-yuan-0": {
        "cmdline": [],
        "modules": [
            "nihao_yuan_0"
        ],
        "version": "1.0.0"
    },
    "nihil": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nihilo": {
        "cmdline": [],
        "modules": [
            "nihilo"
        ],
        "version": "0.1"
    },
    "niice": {
        "cmdline": [],
        "modules": [
            "niice",
            "niice.manage",
            "niice.server",
            "niice.server_configuration",
            "niice.subscriber",
            "niice.tasks",
            "niice.tasks.basetask",
            "niice.tasks.median_15_seconds",
            "niice.tasks.sanitizer",
            "niice.utils",
            "niice_client",
            "niice_client.basic_configuration",
            "niice_client.client",
            "niice_client.client_configuration",
            "niice_client.event"
        ],
        "version": "0.0.1.0"
    },
    "niiu": {
        "cmdline": [],
        "modules": [
            "niiu",
            "niiu.nana",
            "niiu.niiu"
        ],
        "version": "0.8.9"
    },
    "nik2img": {
        "cmdline": [
            "nik2img.py"
        ],
        "modules": [
            "mapnik_utils",
            "mapnik_utils.compatibility",
            "mapnik_utils.composer",
            "mapnik_utils.fonts",
            "mapnik_utils.loader",
            "mapnik_utils.metaclass_injectors",
            "mapnik_utils.projection",
            "mapnik_utils.renderer",
            "mapnik_utils.tools",
            "mapnik_utils.version_adapter"
        ],
        "version": "0.8.0"
    },
    "nik4": {
        "cmdline": [
            "nik4.py"
        ],
        "modules": [],
        "version": "1.6.0"
    },
    "nikeplus": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nikeplusapi": {
        "cmdline": [],
        "modules": [
            "nikeplusapi",
            "nikeplusapi.export"
        ],
        "version": "0.4.1"
    },
    "niki": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "nikiforov": {
        "cmdline": [],
        "modules": [
            "Nikiforov"
        ],
        "version": "0.1.0"
    },
    "nikinfo": {
        "cmdline": [
            "nikinfo.py"
        ],
        "modules": [
            "nikinfo"
        ],
        "version": "0.1.0"
    },
    "nikitin": {
        "cmdline": [],
        "modules": [
            "Nikitin"
        ],
        "version": "0.1.0"
    },
    "nikola": {
        "cmdline": [],
        "modules": [
            "nikola",
            "nikola.filters",
            "nikola.image_processing",
            "nikola.nikola",
            "nikola.packages",
            "nikola.packages.datecond",
            "nikola.packages.tzlocal",
            "nikola.packages.tzlocal.darwin",
            "nikola.packages.tzlocal.unix",
            "nikola.packages.tzlocal.win32",
            "nikola.packages.tzlocal.windows_tz",
            "nikola.plugin_categories",
            "nikola.plugins",
            "nikola.plugins.basic_import",
            "nikola.plugins.command",
            "nikola.plugins.command.auto",
            "nikola.plugins.command.bootswatch_theme",
            "nikola.plugins.command.check",
            "nikola.plugins.command.console",
            "nikola.plugins.command.deploy",
            "nikola.plugins.command.github_deploy",
            "nikola.plugins.command.import_wordpress",
            "nikola.plugins.command.init",
            "nikola.plugins.command.install_theme",
            "nikola.plugins.command.new_page",
            "nikola.plugins.command.new_post",
            "nikola.plugins.command.orphans",
            "nikola.plugins.command.plugin",
            "nikola.plugins.command.rst2html",
            "nikola.plugins.command.serve",
            "nikola.plugins.command.status",
            "nikola.plugins.command.theme",
            "nikola.plugins.command.version",
            "nikola.plugins.compile",
            "nikola.plugins.compile.html",
            "nikola.plugins.compile.ipynb",
            "nikola.plugins.compile.markdown",
            "nikola.plugins.compile.markdown.mdx_gist",
            "nikola.plugins.compile.markdown.mdx_nikola",
            "nikola.plugins.compile.markdown.mdx_podcast",
            "nikola.plugins.compile.pandoc",
            "nikola.plugins.compile.php",
            "nikola.plugins.compile.rest",
            "nikola.plugins.compile.rest.chart",
            "nikola.plugins.compile.rest.doc",
            "nikola.plugins.compile.rest.gist",
            "nikola.plugins.compile.rest.listing",
            "nikola.plugins.compile.rest.media",
            "nikola.plugins.compile.rest.post_list",
            "nikola.plugins.compile.rest.slides",
            "nikola.plugins.compile.rest.soundcloud",
            "nikola.plugins.compile.rest.thumbnail",
            "nikola.plugins.compile.rest.vimeo",
            "nikola.plugins.compile.rest.youtube",
            "nikola.plugins.misc",
            "nikola.plugins.misc.post_encryption",
            "nikola.plugins.misc.scan_posts",
            "nikola.plugins.misc.taxonomies_classifier",
            "nikola.plugins.task",
            "nikola.plugins.task.archive",
            "nikola.plugins.task.authors",
            "nikola.plugins.task.bundles",
            "nikola.plugins.task.categories",
            "nikola.plugins.task.copy_assets",
            "nikola.plugins.task.copy_files",
            "nikola.plugins.task.galleries",
            "nikola.plugins.task.gzip",
            "nikola.plugins.task.indexes",
            "nikola.plugins.task.listings",
            "nikola.plugins.task.page_index",
            "nikola.plugins.task.pages",
            "nikola.plugins.task.posts",
            "nikola.plugins.task.py3_switch",
            "nikola.plugins.task.redirect",
            "nikola.plugins.task.robots",
            "nikola.plugins.task.scale_images",
            "nikola.plugins.task.sections",
            "nikola.plugins.task.sitemap",
            "nikola.plugins.task.sources",
            "nikola.plugins.task.tagcloud",
            "nikola.plugins.task.tags",
            "nikola.plugins.task.taxonomies",
            "nikola.plugins.template",
            "nikola.plugins.template.jinja",
            "nikola.plugins.template.mako",
            "nikola.post",
            "nikola.rc4",
            "nikola.shortcodes",
            "nikola.state",
            "nikola.utils",
            "nikola.winutils"
        ],
        "version": "7.8.5"
    },
    "nikolaev": {
        "cmdline": [],
        "modules": [
            "Nikolaev"
        ],
        "version": "0.1.0"
    },
    "nikolskii": {
        "cmdline": [],
        "modules": [
            "Nikolskii"
        ],
        "version": "0.1.0"
    },
    "nikonov": {
        "cmdline": [],
        "modules": [
            "Nikonov"
        ],
        "version": "0.1.0"
    },
    "nikopackage": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "niku": {
        "cmdline": [],
        "modules": [],
        "version": "2.0.1"
    },
    "nikulin": {
        "cmdline": [],
        "modules": [
            "Nikulin"
        ],
        "version": "0.1.0"
    },
    "nikunjlistfunctions": {
        "cmdline": [],
        "modules": [
            "NikunjListFunctions"
        ],
        "version": "1.3.0"
    },
    "nikweb": {
        "cmdline": [],
        "modules": [
            "nikweb",
            "nikweb.http",
            "nikweb.http.django_views",
            "nikweb.http.webob_server",
            "nikweb.render"
        ],
        "version": "0.1.0"
    },
    "nikwus": {
        "cmdline": [],
        "modules": [
            "nikwus"
        ],
        "version": "0.5.4"
    },
    "nil": {
        "cmdline": [],
        "modules": [
            "nil",
            "nil.clean"
        ],
        "version": "0.2.0"
    },
    "nilas": {
        "cmdline": [],
        "modules": [
            "nilas"
        ],
        "version": "0.1.4"
    },
    "nilearn": {
        "cmdline": [],
        "modules": [
            "nilearn",
            "nilearn._utils",
            "nilearn._utils.cache_mixin",
            "nilearn._utils.class_inspect",
            "nilearn._utils.compat",
            "nilearn._utils.exceptions",
            "nilearn._utils.extmath",
            "nilearn._utils.fixes",
            "nilearn._utils.fixes.matplotlib_backports",
            "nilearn._utils.fixes.sklearn_validation",
            "nilearn._utils.logger",
            "nilearn._utils.ndimage",
            "nilearn._utils.niimg",
            "nilearn._utils.niimg_conversions",
            "nilearn._utils.numpy_conversions",
            "nilearn._utils.param_validation",
            "nilearn._utils.segmentation",
            "nilearn._utils.testing",
            "nilearn.connectome",
            "nilearn.connectome.connectivity_matrices",
            "nilearn.connectome.group_sparse_cov",
            "nilearn.connectome.tests",
            "nilearn.connectome.tests.test_connectivity_matrices",
            "nilearn.connectome.tests.test_group_sparse_cov",
            "nilearn.datasets",
            "nilearn.datasets.atlas",
            "nilearn.datasets.data",
            "nilearn.datasets.description",
            "nilearn.datasets.func",
            "nilearn.datasets.struct",
            "nilearn.datasets.tests",
            "nilearn.datasets.tests.data",
            "nilearn.datasets.tests.test_atlas",
            "nilearn.datasets.tests.test_func",
            "nilearn.datasets.tests.test_struct",
            "nilearn.datasets.tests.test_utils",
            "nilearn.datasets.utils",
            "nilearn.decoding",
            "nilearn.decoding.fista",
            "nilearn.decoding.objective_functions",
            "nilearn.decoding.proximal_operators",
            "nilearn.decoding.searchlight",
            "nilearn.decoding.space_net",
            "nilearn.decoding.space_net_solvers",
            "nilearn.decoding.tests",
            "nilearn.decoding.tests.simulate_graph_net_data",
            "nilearn.decoding.tests.test_fista",
            "nilearn.decoding.tests.test_graph_net",
            "nilearn.decoding.tests.test_objective_functions",
            "nilearn.decoding.tests.test_operators",
            "nilearn.decoding.tests.test_same_api",
            "nilearn.decoding.tests.test_searchlight",
            "nilearn.decoding.tests.test_sklearn_compatibility",
            "nilearn.decoding.tests.test_space_net",
            "nilearn.decoding.tests.test_tv",
            "nilearn.decomposition",
            "nilearn.decomposition.base",
            "nilearn.decomposition.canica",
            "nilearn.decomposition.dict_learning",
            "nilearn.decomposition.multi_pca",
            "nilearn.decomposition.tests",
            "nilearn.decomposition.tests.test_base",
            "nilearn.decomposition.tests.test_canica",
            "nilearn.decomposition.tests.test_dict_learning",
            "nilearn.decomposition.tests.test_multi_pca",
            "nilearn.image",
            "nilearn.image.image",
            "nilearn.image.resampling",
            "nilearn.image.tests",
            "nilearn.image.tests.data",
            "nilearn.image.tests.test_image",
            "nilearn.image.tests.test_resampling",
            "nilearn.input_data",
            "nilearn.input_data.base_masker",
            "nilearn.input_data.masker_validation",
            "nilearn.input_data.multi_nifti_masker",
            "nilearn.input_data.nifti_labels_masker",
            "nilearn.input_data.nifti_maps_masker",
            "nilearn.input_data.nifti_masker",
            "nilearn.input_data.nifti_spheres_masker",
            "nilearn.input_data.tests",
            "nilearn.input_data.tests.test_base_masker",
            "nilearn.input_data.tests.test_masker_validation",
            "nilearn.input_data.tests.test_multi_nifti_masker",
            "nilearn.input_data.tests.test_nifti_labels_masker",
            "nilearn.input_data.tests.test_nifti_maps_masker",
            "nilearn.input_data.tests.test_nifti_masker",
            "nilearn.input_data.tests.test_nifti_spheres_masker",
            "nilearn.masking",
            "nilearn.mass_univariate",
            "nilearn.mass_univariate.permuted_least_squares",
            "nilearn.mass_univariate.tests",
            "nilearn.mass_univariate.tests.test_permuted_least_squares",
            "nilearn.plotting",
            "nilearn.plotting.cm",
            "nilearn.plotting.displays",
            "nilearn.plotting.edge_detect",
            "nilearn.plotting.find_cuts",
            "nilearn.plotting.glass_brain",
            "nilearn.plotting.glass_brain_files",
            "nilearn.plotting.glass_brain_files.plot_align_svg",
            "nilearn.plotting.glass_brain_files.svg_to_json_converter",
            "nilearn.plotting.img_plotting",
            "nilearn.plotting.surf_plotting",
            "nilearn.plotting.tests",
            "nilearn.plotting.tests.data",
            "nilearn.plotting.tests.test_cm",
            "nilearn.plotting.tests.test_displays",
            "nilearn.plotting.tests.test_edge_detect",
            "nilearn.plotting.tests.test_find_cuts",
            "nilearn.plotting.tests.test_img_plotting",
            "nilearn.plotting.tests.test_surf_plotting",
            "nilearn.regions",
            "nilearn.regions.region_extractor",
            "nilearn.regions.signal_extraction",
            "nilearn.regions.tests",
            "nilearn.regions.tests.test_region_extractor",
            "nilearn.regions.tests.test_signal_extraction",
            "nilearn.signal",
            "nilearn.tests",
            "nilearn.tests.data",
            "nilearn.tests.test_cache_mixin",
            "nilearn.tests.test_class_inspect",
            "nilearn.tests.test_extmath",
            "nilearn.tests.test_logger",
            "nilearn.tests.test_masking",
            "nilearn.tests.test_ndimage",
            "nilearn.tests.test_niimg",
            "nilearn.tests.test_niimg_conversions",
            "nilearn.tests.test_numpy_conversions",
            "nilearn.tests.test_param_validation",
            "nilearn.tests.test_segmentation",
            "nilearn.tests.test_signal",
            "nilearn.tests.test_testing",
            "nilearn.version"
        ],
        "version": "0.3.0"
    },
    "nilm": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nilm-metadata": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nilo.webgallery": {
        "cmdline": [],
        "modules": [
            "nilo",
            "nilo.webgallery",
            "nilo.webgallery.handler",
            "nilo.webgallery.publisher",
            "nilo.webgallery.runscript",
            "nilo.webgallery.server",
            "nilo.webgallery.template",
            "nilo.webgallery.thumbnailer"
        ],
        "version": "0.2.5"
    },
    "nilsimsa": {
        "cmdline": [],
        "modules": [
            "nilsimsa",
            "nilsimsa.test"
        ],
        "version": "0.3.8"
    },
    "nim": {
        "cmdline": [],
        "modules": [
            "nim",
            "nim.nim"
        ],
        "version": "0.1.0"
    },
    "nim-install": {
        "cmdline": [],
        "modules": [
            "nim_install"
        ],
        "version": "0.2.2"
    },
    "nimbits": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "nimbixappdef": {
        "cmdline": [
            "nimbixappdef"
        ],
        "modules": [
            "nimbixappdef",
            "nimbixappdef.AppDef"
        ],
        "version": "0.9.2"
    },
    "nimble": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nimblenet": {
        "cmdline": [],
        "modules": [
            "nimblenet",
            "nimblenet.activation_functions",
            "nimblenet.cost_functions",
            "nimblenet.data_structures",
            "nimblenet.evaluation_functions",
            "nimblenet.learning_algorithms",
            "nimblenet.learning_algorithms.backpropagation",
            "nimblenet.learning_algorithms.backpropagation.base",
            "nimblenet.learning_algorithms.backpropagation.variations",
            "nimblenet.learning_algorithms.commons",
            "nimblenet.learning_algorithms.commons.utils",
            "nimblenet.learning_algorithms.generalized_hebbian",
            "nimblenet.learning_algorithms.resilient_backpropagation",
            "nimblenet.learning_algorithms.scaled_conjugate_gradient",
            "nimblenet.learning_algorithms.scipyoptimize",
            "nimblenet.neuralnet",
            "nimblenet.preprocessing",
            "nimblenet.tools"
        ],
        "version": "0.2.1"
    },
    "nimbstor": {
        "cmdline": [],
        "modules": [
            "nimbstor",
            "nimbstor.combine_backend",
            "nimbstor.directory_backend",
            "nimbstor.imap_backend",
            "nimbstor.sftp_backend",
            "nimbstor.stor",
            "nimbstor.tar",
            "nimbstor.tests",
            "nimbstor.webdav_backend"
        ],
        "version": "1.0.1"
    },
    "nimbus": {
        "cmdline": [],
        "modules": [
            "nimbus",
            "nimbus.aws",
            "nimbus.cli",
            "nimbus.config",
            "nimbus.errors",
            "nimbus.logs",
            "nimbus.saml",
            "nimbus.utils"
        ],
        "version": "0.0.3"
    },
    "nimbus-sat": {
        "cmdline": [],
        "modules": [
            "nimbus"
        ],
        "version": "1.0.1"
    },
    "nimbusdrivers": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nimfa": {
        "cmdline": [],
        "modules": [
            "nimfa",
            "nimfa.datasets",
            "nimfa.examples",
            "nimfa.examples.all_aml",
            "nimfa.examples.cbcl_images",
            "nimfa.examples.documents",
            "nimfa.examples.gene_func_prediction",
            "nimfa.examples.medulloblastoma",
            "nimfa.examples.orl_images",
            "nimfa.examples.recommendations",
            "nimfa.examples.synthetic",
            "nimfa.methods",
            "nimfa.methods.factorization",
            "nimfa.methods.factorization.bd",
            "nimfa.methods.factorization.bmf",
            "nimfa.methods.factorization.icm",
            "nimfa.methods.factorization.lfnmf",
            "nimfa.methods.factorization.lsnmf",
            "nimfa.methods.factorization.nmf",
            "nimfa.methods.factorization.nsnmf",
            "nimfa.methods.factorization.pmf",
            "nimfa.methods.factorization.pmfcc",
            "nimfa.methods.factorization.psmf",
            "nimfa.methods.factorization.sepnmf",
            "nimfa.methods.factorization.snmf",
            "nimfa.methods.factorization.snmnmf",
            "nimfa.methods.seeding",
            "nimfa.methods.seeding.fixed",
            "nimfa.methods.seeding.nndsvd",
            "nimfa.methods.seeding.random",
            "nimfa.methods.seeding.random_c",
            "nimfa.methods.seeding.random_vcol",
            "nimfa.models",
            "nimfa.models.mf_fit",
            "nimfa.models.mf_track",
            "nimfa.models.nmf",
            "nimfa.models.nmf_mm",
            "nimfa.models.nmf_ns",
            "nimfa.models.nmf_std",
            "nimfa.models.smf",
            "nimfa.tests",
            "nimfa.tests.test_examples",
            "nimfa.utils",
            "nimfa.utils.linalg",
            "nimfa.utils.utils",
            "nimfa.version"
        ],
        "version": "1.3.2"
    },
    "niml": {
        "cmdline": [
            "niml"
        ],
        "modules": [
            "niml",
            "niml.jinja",
            "niml.niml",
            "niml.nodes",
            "niml.printer"
        ],
        "version": "0.12.7"
    },
    "nimoy": {
        "cmdline": [],
        "modules": [
            "nimoy",
            "nimoy.backends",
            "nimoy.backends.base",
            "nimoy.backends.dynamodb",
            "nimoy.backends.es",
            "nimoy.backends.in_memory",
            "nimoy.connection",
            "nimoy.exceptions",
            "nimoy.fields",
            "nimoy.fields.composite",
            "nimoy.fields.scalar",
            "nimoy.hexadapter",
            "nimoy.schemas",
            "nimoy.utils",
            "nimoy.version"
        ],
        "version": "0.8.3"
    },
    "nimp": {
        "cmdline": [],
        "modules": [
            "nimp"
        ],
        "version": "0.9.2"
    },
    "nimp-cli": {
        "cmdline": [],
        "modules": [
            "nimp",
            "nimp.build",
            "nimp.command",
            "nimp.commands",
            "nimp.commands.build",
            "nimp.commands.check",
            "nimp.commands.commandlet",
            "nimp.commands.deploy",
            "nimp.commands.fileset",
            "nimp.commands.p4",
            "nimp.commands.publish",
            "nimp.commands.run",
            "nimp.commands.ship",
            "nimp.environment",
            "nimp.nimp_cli",
            "nimp.p4",
            "nimp.system",
            "nimp.torrent",
            "nimp.unreal"
        ],
        "version": "0.0.12"
    },
    "nimsp": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.4"
    },
    "nimvelo": {
        "cmdline": [],
        "modules": [
            "nimvelo",
            "nimvelo.stream"
        ],
        "version": "0.1.4"
    },
    "ninarow": {
        "cmdline": [],
        "modules": [
            "ninarow",
            "ninarow.gui",
            "ninarow.gui.gui",
            "ninarow.logic",
            "ninarow.logic.AI",
            "ninarow.logic.game",
            "ninarow.utils",
            "ninarow.utils.tree"
        ],
        "version": "0.0.3"
    },
    "ninchanese-cjklib": {
        "cmdline": [],
        "modules": [
            "cjklib",
            "cjklib.build",
            "cjklib.build.builder",
            "cjklib.build.cli",
            "cjklib.characterlookup",
            "cjklib.cjknife",
            "cjklib.dbconnector",
            "cjklib.dictionary",
            "cjklib.dictionary.entry",
            "cjklib.dictionary.format",
            "cjklib.dictionary.install",
            "cjklib.dictionary.search",
            "cjklib.exception",
            "cjklib.reading",
            "cjklib.reading.converter",
            "cjklib.reading.operator",
            "cjklib.test",
            "cjklib.test.build",
            "cjklib.test.characterlookup",
            "cjklib.test.dictionary",
            "cjklib.test.readingconverter",
            "cjklib.test.readingoperator",
            "cjklib.util"
        ],
        "version": "0.3.4"
    },
    "ninchanese-datatables": {
        "cmdline": [],
        "modules": [
            "datatables"
        ],
        "version": "0.5.1"
    },
    "nine": {
        "cmdline": [],
        "modules": [
            "nine",
            "nine.decorator",
            "nine.test_nine"
        ],
        "version": "1.0.0"
    },
    "ninepatch": {
        "cmdline": [],
        "modules": [
            "ninepatch"
        ],
        "version": "0.1.20"
    },
    "ninja": {
        "cmdline": [],
        "modules": [
            "ninja",
            "ninja._version"
        ],
        "version": "1.7.2"
    },
    "ninja-ide": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ninja-ide.contrib.plugins.plugin-creator": {
        "cmdline": [],
        "modules": [
            "ninja_ide",
            "ninja_ide.contrib",
            "ninja_ide.contrib.plugins",
            "ninja_ide.contrib.plugins.plugin_creator",
            "ninja_ide.contrib.plugins.plugin_creator.plugin_creator"
        ],
        "version": "0.1.1"
    },
    "ninja-syntax": {
        "cmdline": [],
        "modules": [
            "ninja_syntax"
        ],
        "version": "1.7.2"
    },
    "ninja2": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "ninjag": {
        "cmdline": [],
        "modules": [
            "ninjag",
            "ninjag.cli",
            "ninjag.core",
            "ninjag.core.ninja_build",
            "ninjag.core.ninja_build_pipe",
            "ninjag.core.ninja_def",
            "ninjag.core.ninja_generate",
            "ninjag.core.ninja_io",
            "ninjag.core.ninja_key_value_pairs",
            "ninjag.core.ninja_phony",
            "ninjag.core.ninja_rule",
            "ninjag.io",
            "ninjag.io.read",
            "ninjag.io.read.assert_any",
            "ninjag.io.read.check_input",
            "ninjag.io.read.check_tasks",
            "ninjag.io.read.check_types",
            "ninjag.io.read.default_config",
            "ninjag.io.read.read_config_files",
            "ninjag.main",
            "ninjag.show_usage",
            "ninjag.tk",
            "ninjag.tk.dictTK",
            "ninjag.tk.dictTK.merge",
            "ninjag.tk.dictTK.merge2",
            "ninjag.tk.fnTK",
            "ninjag.tk.fnTK.compose",
            "ninjag.tk.fnTK.compose2",
            "ninjag.tk.fnTK.reduce",
            "ninjag.tk.ioTK",
            "ninjag.tk.ioTK.read_all",
            "ninjag.tk.ioTK.save_text"
        ],
        "version": "0.3.6"
    },
    "ninjalog": {
        "cmdline": [],
        "modules": [
            "ninjalog"
        ],
        "version": "0.3"
    },
    "ninjaturtle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ninka": {
        "cmdline": [],
        "modules": [
            "ninka",
            "ninka.indieauth",
            "ninka.micropub"
        ],
        "version": "0.3.4"
    },
    "ninopianino": {
        "cmdline": [
            "pianize"
        ],
        "modules": [
            "ninopianino",
            "ninopianino.block_to_generator",
            "ninopianino.decision_maker",
            "ninopianino.fast",
            "ninopianino.general_user",
            "ninopianino.generator",
            "ninopianino.markov_trainer",
            "ninopianino.music_models",
            "ninopianino.normie",
            "ninopianino.note_timing",
            "ninopianino.omega",
            "ninopianino.sample_config",
            "ninopianino.sample_markov",
            "ninopianino.song_generator",
            "ninopianino.template_utils"
        ],
        "version": "0.1.12"
    },
    "nio": {
        "cmdline": [],
        "modules": [
            "nio",
            "nio.block",
            "nio.block.base",
            "nio.block.context",
            "nio.block.generator_block",
            "nio.block.mixins",
            "nio.block.mixins.collector",
            "nio.block.mixins.collector.collector",
            "nio.block.mixins.enrich",
            "nio.block.mixins.enrich.enrich_signals",
            "nio.block.mixins.group_by",
            "nio.block.mixins.group_by.group_by",
            "nio.block.mixins.limit_lock",
            "nio.block.mixins.limit_lock.limit_lock",
            "nio.block.mixins.persistence",
            "nio.block.mixins.persistence.persistence",
            "nio.block.mixins.retry",
            "nio.block.mixins.retry.retry",
            "nio.block.mixins.retry.strategies",
            "nio.block.mixins.retry.strategies.exponential",
            "nio.block.mixins.retry.strategies.linear",
            "nio.block.mixins.retry.strategy",
            "nio.block.terminals",
            "nio.block.terminator_block",
            "nio.command",
            "nio.command.base",
            "nio.command.decorator",
            "nio.command.holder",
            "nio.command.params",
            "nio.command.params.base",
            "nio.command.params.dict",
            "nio.command.params.float",
            "nio.command.params.int",
            "nio.command.params.list",
            "nio.command.params.string",
            "nio.modules",
            "nio.modules.communication",
            "nio.modules.communication.matching",
            "nio.modules.communication.module",
            "nio.modules.communication.publisher",
            "nio.modules.communication.subscriber",
            "nio.modules.communication.topic",
            "nio.modules.context",
            "nio.modules.initializer",
            "nio.modules.module",
            "nio.modules.persistence",
            "nio.modules.persistence.module",
            "nio.modules.persistence.persistence",
            "nio.modules.proxy",
            "nio.modules.scheduler",
            "nio.modules.scheduler.job",
            "nio.modules.scheduler.module",
            "nio.modules.security",
            "nio.modules.security.access",
            "nio.modules.security.authenticator",
            "nio.modules.security.authorizer",
            "nio.modules.security.module",
            "nio.modules.security.permissions",
            "nio.modules.security.permissions.line",
            "nio.modules.security.permissions.permissions",
            "nio.modules.security.task",
            "nio.modules.security.user",
            "nio.modules.settings",
            "nio.modules.settings.module",
            "nio.modules.settings.settings",
            "nio.modules.web",
            "nio.modules.web.engine",
            "nio.modules.web.exceptions",
            "nio.modules.web.handlers",
            "nio.modules.web.handlers.rest",
            "nio.modules.web.handlers.static",
            "nio.modules.web.handlers.web",
            "nio.modules.web.http",
            "nio.modules.web.module",
            "nio.modules.web.request",
            "nio.modules.web.response",
            "nio.modules.web.server",
            "nio.project",
            "nio.project.block",
            "nio.project.configuration",
            "nio.project.entity",
            "nio.project.project",
            "nio.project.serializers",
            "nio.project.serializers.binary",
            "nio.project.serializers.binary.serializer",
            "nio.project.serializers.file",
            "nio.project.serializers.file.serializer",
            "nio.project.serializers.serializer",
            "nio.project.service",
            "nio.properties",
            "nio.properties.base",
            "nio.properties.bool",
            "nio.properties.exceptions",
            "nio.properties.file",
            "nio.properties.float",
            "nio.properties.holder",
            "nio.properties.int",
            "nio.properties.list",
            "nio.properties.object",
            "nio.properties.property",
            "nio.properties.select",
            "nio.properties.string",
            "nio.properties.timedelta",
            "nio.properties.util",
            "nio.properties.util.evaluator",
            "nio.properties.util.object_type",
            "nio.properties.util.parser",
            "nio.properties.util.property_value",
            "nio.properties.version",
            "nio.router",
            "nio.router.base",
            "nio.router.context",
            "nio.router.thread_pool_executor",
            "nio.router.threaded",
            "nio.service",
            "nio.service.base",
            "nio.service.context",
            "nio.signal",
            "nio.signal.base",
            "nio.signal.management",
            "nio.signal.status",
            "nio.testing",
            "nio.testing.block",
            "nio.testing.block.router",
            "nio.testing.block.test_case",
            "nio.testing.block_test_case",
            "nio.testing.condition",
            "nio.testing.module_initializer",
            "nio.testing.modules",
            "nio.testing.modules.communication",
            "nio.testing.modules.communication.manager",
            "nio.testing.modules.communication.module",
            "nio.testing.modules.communication.publisher",
            "nio.testing.modules.communication.subscriber",
            "nio.testing.modules.persistence",
            "nio.testing.modules.persistence.module",
            "nio.testing.modules.persistence.persistence",
            "nio.testing.modules.scheduler",
            "nio.testing.modules.scheduler.job",
            "nio.testing.modules.scheduler.module",
            "nio.testing.modules.scheduler.scheduler",
            "nio.testing.modules.security",
            "nio.testing.modules.security.authenticator",
            "nio.testing.modules.security.authorizer",
            "nio.testing.modules.security.module",
            "nio.testing.modules.settings",
            "nio.testing.modules.settings.module",
            "nio.testing.modules.settings.settings",
            "nio.testing.modules.web",
            "nio.testing.modules.web.engine",
            "nio.testing.modules.web.http",
            "nio.testing.modules.web.module",
            "nio.testing.modules.web.server",
            "nio.testing.test_case",
            "nio.testing.web_test_case",
            "nio.types",
            "nio.types.base",
            "nio.types.bool",
            "nio.types.dict",
            "nio.types.file",
            "nio.types.float",
            "nio.types.int",
            "nio.types.list",
            "nio.types.select",
            "nio.types.string",
            "nio.types.timedelta",
            "nio.util",
            "nio.util.cache",
            "nio.util.class_attributes",
            "nio.util.codec",
            "nio.util.discovery",
            "nio.util.ensure_types",
            "nio.util.flags_enum",
            "nio.util.logging",
            "nio.util.logging.adapter",
            "nio.util.logging.filter",
            "nio.util.logging.handlers",
            "nio.util.logging.handlers.file_handler",
            "nio.util.logging.handlers.publisher",
            "nio.util.logging.handlers.publisher.cache",
            "nio.util.logging.handlers.publisher.cache_filter",
            "nio.util.logging.handlers.publisher.handler",
            "nio.util.logging.handlers.publisher.log_signal",
            "nio.util.logging.handlers.publisher.log_signal_filter",
            "nio.util.logging.handlers.publisher.proxy",
            "nio.util.logging.helper",
            "nio.util.logging.levels",
            "nio.util.runner",
            "nio.util.scheduler",
            "nio.util.scheduler.job",
            "nio.util.scheduler.scheduler",
            "nio.util.threading",
            "nio.util.threading.spawn",
            "nio.util.threading.thread",
            "nio.util.versioning",
            "nio.util.versioning.check",
            "nio.util.versioning.dependency"
        ],
        "version": "2.1.0"
    },
    "nio-cli": {
        "cmdline": [],
        "modules": [
            "nio_cli",
            "nio_cli.cli",
            "nio_cli.commands",
            "nio_cli.commands.add",
            "nio_cli.commands.base",
            "nio_cli.commands.build",
            "nio_cli.commands.cfg",
            "nio_cli.commands.co",
            "nio_cli.commands.command",
            "nio_cli.commands.config",
            "nio_cli.commands.list",
            "nio_cli.commands.ln",
            "nio_cli.commands.ls",
            "nio_cli.commands.new",
            "nio_cli.commands.server",
            "nio_cli.commands.shutdown",
            "nio_cli.commands.update"
        ],
        "version": "0.3.3"
    },
    "nip": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nipaputils": {
        "cmdline": [],
        "modules": [
            "NipapUtils"
        ],
        "version": "0.1"
    },
    "nipper": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nippoh": {
        "cmdline": [],
        "modules": [
            "nippoh"
        ],
        "version": "0.0.2"
    },
    "niprov": {
        "cmdline": [],
        "modules": [
            "acceptance",
            "acceptance.test_api",
            "acceptance.test_contextAPI",
            "acceptance.test_mongo_backend",
            "acceptance.test_terminal",
            "niprov",
            "niprov.adding",
            "niprov.approval",
            "niprov.basefile",
            "niprov.camera",
            "niprov.capturing",
            "niprov.clock",
            "niprov.cnt",
            "niprov.commandline",
            "niprov.comparing",
            "niprov.config",
            "niprov.context",
            "niprov.dcm",
            "niprov.dependencies",
            "niprov.diff",
            "niprov.discovery",
            "niprov.exceptions",
            "niprov.exporting",
            "niprov.externals",
            "niprov.fif",
            "niprov.filefilter",
            "niprov.files",
            "niprov.filesystem",
            "niprov.format",
            "niprov.formatdict",
            "niprov.formatfactory",
            "niprov.formatjson",
            "niprov.formatnarrated",
            "niprov.formatobject",
            "niprov.formatsimple",
            "niprov.formatxml",
            "niprov.hashing",
            "niprov.importing",
            "niprov.inheriting",
            "niprov.inspection",
            "niprov.jsonfile",
            "niprov.libraries",
            "niprov.location",
            "niprov.locationfactory",
            "niprov.logging",
            "niprov.mediumdirect",
            "niprov.mediumfactory",
            "niprov.mediumfile",
            "niprov.mediumstdout",
            "niprov.mediumviewer",
            "niprov.mnefunsupport",
            "niprov.mongo",
            "niprov.nifti",
            "niprov.parrec",
            "niprov.pictures",
            "niprov.pipeline",
            "niprov.pipelinefactory",
            "niprov.querying",
            "niprov.recording",
            "niprov.renaming",
            "niprov.repository",
            "niprov.searching",
            "niprov.users",
            "niprov.views",
            "niprov.webapp",
            "niprov.xmllib",
            "tests",
            "tests.ditest",
            "tests.test_Configuration",
            "tests.test_MongoRepo",
            "tests.test_add",
            "tests.test_approval",
            "tests.test_basefile",
            "tests.test_camera",
            "tests.test_clock",
            "tests.test_cnt",
            "tests.test_commandline",
            "tests.test_comparer",
            "tests.test_context",
            "tests.test_dependencies",
            "tests.test_dicomfile",
            "tests.test_diff",
            "tests.test_discovery",
            "tests.test_exporting",
            "tests.test_fif",
            "tests.test_filecomparison",
            "tests.test_filefactory",
            "tests.test_filefilter",
            "tests.test_format",
            "tests.test_formatdict",
            "tests.test_formatfactory",
            "tests.test_formatjson",
            "tests.test_formatnarrated",
            "tests.test_formatobject",
            "tests.test_formatsimple",
            "tests.test_formatxml",
            "tests.test_importing",
            "tests.test_inheriting",
            "tests.test_inspection",
            "tests.test_jsonfile",
            "tests.test_location",
            "tests.test_logging",
            "tests.test_mediumdirect",
            "tests.test_mediumfactory",
            "tests.test_mediumfile",
            "tests.test_mediumstdout",
            "tests.test_mediumviewer",
            "tests.test_mnefun_integration",
            "tests.test_nifti",
            "tests.test_parrec",
            "tests.test_pictures",
            "tests.test_pipeline",
            "tests.test_pipelinefactory",
            "tests.test_query",
            "tests.test_recording",
            "tests.test_search",
            "tests.test_users",
            "tests.test_webviews"
        ],
        "version": "0.5"
    },
    "nipy": {
        "cmdline": [],
        "modules": [
            "nipy",
            "nipy.algorithms",
            "nipy.algorithms.clustering",
            "nipy.algorithms.clustering.bgmm",
            "nipy.algorithms.clustering.ggmixture",
            "nipy.algorithms.clustering.gmm",
            "nipy.algorithms.clustering.hierarchical_clustering",
            "nipy.algorithms.clustering.imm",
            "nipy.algorithms.clustering.setup",
            "nipy.algorithms.clustering.tests",
            "nipy.algorithms.clustering.tests.test_bgmm",
            "nipy.algorithms.clustering.tests.test_clustering",
            "nipy.algorithms.clustering.tests.test_ggm",
            "nipy.algorithms.clustering.tests.test_gmm",
            "nipy.algorithms.clustering.tests.test_hierarchical_clustering",
            "nipy.algorithms.clustering.tests.test_imm",
            "nipy.algorithms.clustering.tests.test_vmm",
            "nipy.algorithms.clustering.utils",
            "nipy.algorithms.clustering.von_mises_fisher_mixture",
            "nipy.algorithms.diagnostics",
            "nipy.algorithms.diagnostics.commands",
            "nipy.algorithms.diagnostics.screens",
            "nipy.algorithms.diagnostics.setup",
            "nipy.algorithms.diagnostics.tests",
            "nipy.algorithms.diagnostics.tests.test_commands",
            "nipy.algorithms.diagnostics.tests.test_screen",
            "nipy.algorithms.diagnostics.tests.test_time_difference",
            "nipy.algorithms.diagnostics.timediff",
            "nipy.algorithms.diagnostics.tsdiffplot",
            "nipy.algorithms.fwhm",
            "nipy.algorithms.graph",
            "nipy.algorithms.graph.bipartite_graph",
            "nipy.algorithms.graph.field",
            "nipy.algorithms.graph.forest",
            "nipy.algorithms.graph.graph",
            "nipy.algorithms.graph.setup",
            "nipy.algorithms.graph.tests",
            "nipy.algorithms.graph.tests.test_bipartite_graph",
            "nipy.algorithms.graph.tests.test_field",
            "nipy.algorithms.graph.tests.test_forest",
            "nipy.algorithms.graph.tests.test_graph",
            "nipy.algorithms.group",
            "nipy.algorithms.group.parcel_analysis",
            "nipy.algorithms.group.setup",
            "nipy.algorithms.group.tests",
            "nipy.algorithms.group.tests.test_parcel_analysis",
            "nipy.algorithms.interpolation",
            "nipy.algorithms.kernel_smooth",
            "nipy.algorithms.optimize",
            "nipy.algorithms.registration",
            "nipy.algorithms.registration.affine",
            "nipy.algorithms.registration.chain_transform",
            "nipy.algorithms.registration.groupwise_registration",
            "nipy.algorithms.registration.histogram_registration",
            "nipy.algorithms.registration.optimizer",
            "nipy.algorithms.registration.polyaffine",
            "nipy.algorithms.registration.resample",
            "nipy.algorithms.registration.scripting",
            "nipy.algorithms.registration.setup",
            "nipy.algorithms.registration.similarity_measures",
            "nipy.algorithms.registration.tests",
            "nipy.algorithms.registration.tests.test_affine",
            "nipy.algorithms.registration.tests.test_chain_transforms",
            "nipy.algorithms.registration.tests.test_cubic_spline",
            "nipy.algorithms.registration.tests.test_fmri_realign4d",
            "nipy.algorithms.registration.tests.test_histogram_registration",
            "nipy.algorithms.registration.tests.test_polyaffine",
            "nipy.algorithms.registration.tests.test_register",
            "nipy.algorithms.registration.tests.test_resample",
            "nipy.algorithms.registration.tests.test_scripting",
            "nipy.algorithms.registration.tests.test_slice_timing",
            "nipy.algorithms.registration.tests.test_transform",
            "nipy.algorithms.registration.transform",
            "nipy.algorithms.registration.type_check",
            "nipy.algorithms.resample",
            "nipy.algorithms.segmentation",
            "nipy.algorithms.segmentation.brain_segmentation",
            "nipy.algorithms.segmentation.segmentation",
            "nipy.algorithms.segmentation.setup",
            "nipy.algorithms.segmentation.tests",
            "nipy.algorithms.segmentation.tests.test_segmentation",
            "nipy.algorithms.setup",
            "nipy.algorithms.slicetiming",
            "nipy.algorithms.slicetiming.setup",
            "nipy.algorithms.slicetiming.tests",
            "nipy.algorithms.slicetiming.tests.test_timefuncs",
            "nipy.algorithms.slicetiming.timefuncs",
            "nipy.algorithms.statistics",
            "nipy.algorithms.statistics.api",
            "nipy.algorithms.statistics.bayesian_mixed_effects",
            "nipy.algorithms.statistics.bench",
            "nipy.algorithms.statistics.bench.bench_intvol",
            "nipy.algorithms.statistics.empirical_pvalue",
            "nipy.algorithms.statistics.formula",
            "nipy.algorithms.statistics.formula.formulae",
            "nipy.algorithms.statistics.formula.setup",
            "nipy.algorithms.statistics.formula.tests",
            "nipy.algorithms.statistics.formula.tests.test_formula",
            "nipy.algorithms.statistics.mixed_effects_stat",
            "nipy.algorithms.statistics.models",
            "nipy.algorithms.statistics.models.family",
            "nipy.algorithms.statistics.models.family.family",
            "nipy.algorithms.statistics.models.family.links",
            "nipy.algorithms.statistics.models.family.varfuncs",
            "nipy.algorithms.statistics.models.glm",
            "nipy.algorithms.statistics.models.info",
            "nipy.algorithms.statistics.models.model",
            "nipy.algorithms.statistics.models.nlsmodel",
            "nipy.algorithms.statistics.models.regression",
            "nipy.algorithms.statistics.models.setup",
            "nipy.algorithms.statistics.models.setupscons",
            "nipy.algorithms.statistics.models.tests",
            "nipy.algorithms.statistics.models.tests.exampledata",
            "nipy.algorithms.statistics.models.tests.test_anova",
            "nipy.algorithms.statistics.models.tests.test_ar",
            "nipy.algorithms.statistics.models.tests.test_estimable",
            "nipy.algorithms.statistics.models.tests.test_glm",
            "nipy.algorithms.statistics.models.tests.test_model",
            "nipy.algorithms.statistics.models.tests.test_olsR",
            "nipy.algorithms.statistics.models.tests.test_regression",
            "nipy.algorithms.statistics.models.tests.test_utils",
            "nipy.algorithms.statistics.models.utils",
            "nipy.algorithms.statistics.onesample",
            "nipy.algorithms.statistics.rft",
            "nipy.algorithms.statistics.setup",
            "nipy.algorithms.statistics.tests",
            "nipy.algorithms.statistics.tests.test_empirical_pvalue",
            "nipy.algorithms.statistics.tests.test_histogram",
            "nipy.algorithms.statistics.tests.test_intrinsic_volumes",
            "nipy.algorithms.statistics.tests.test_mixed_effects",
            "nipy.algorithms.statistics.tests.test_onesample",
            "nipy.algorithms.statistics.tests.test_quantile",
            "nipy.algorithms.statistics.tests.test_rft",
            "nipy.algorithms.statistics.tests.test_utils",
            "nipy.algorithms.statistics.utils",
            "nipy.algorithms.tests",
            "nipy.algorithms.tests.test_interpolator",
            "nipy.algorithms.tests.test_kernel_smooth",
            "nipy.algorithms.tests.test_resample",
            "nipy.algorithms.utils",
            "nipy.algorithms.utils.fast_distance",
            "nipy.algorithms.utils.matrices",
            "nipy.algorithms.utils.pca",
            "nipy.algorithms.utils.setup",
            "nipy.algorithms.utils.tests",
            "nipy.algorithms.utils.tests.test_fast_distance",
            "nipy.algorithms.utils.tests.test_matrices",
            "nipy.algorithms.utils.tests.test_pca",
            "nipy.algorithms.utils.tests.test_pca_image",
            "nipy.core",
            "nipy.core.api",
            "nipy.core.image",
            "nipy.core.image.image",
            "nipy.core.image.image_list",
            "nipy.core.image.image_spaces",
            "nipy.core.image.roi",
            "nipy.core.image.setup",
            "nipy.core.image.tests",
            "nipy.core.image.tests.test_image",
            "nipy.core.image.tests.test_image_list",
            "nipy.core.image.tests.test_image_spaces",
            "nipy.core.image.tests.test_rollimg",
            "nipy.core.reference",
            "nipy.core.reference.array_coords",
            "nipy.core.reference.coordinate_map",
            "nipy.core.reference.coordinate_system",
            "nipy.core.reference.setup",
            "nipy.core.reference.slices",
            "nipy.core.reference.spaces",
            "nipy.core.reference.tests",
            "nipy.core.reference.tests.matrix_groups",
            "nipy.core.reference.tests.test_array_coords",
            "nipy.core.reference.tests.test_coordinate_map",
            "nipy.core.reference.tests.test_coordinate_system",
            "nipy.core.reference.tests.test_matrix_groups",
            "nipy.core.reference.tests.test_parametrized_surface",
            "nipy.core.reference.tests.test_slices",
            "nipy.core.reference.tests.test_spaces",
            "nipy.core.setup",
            "nipy.core.utils",
            "nipy.core.utils.generators",
            "nipy.core.utils.setup",
            "nipy.core.utils.tests",
            "nipy.core.utils.tests.test_generators",
            "nipy.externals",
            "nipy.externals.argparse",
            "nipy.externals.configobj",
            "nipy.externals.setup",
            "nipy.externals.six",
            "nipy.externals.transforms3d",
            "nipy.externals.transforms3d.quaternions",
            "nipy.externals.transforms3d.setup",
            "nipy.externals.transforms3d.taitbryan",
            "nipy.externals.transforms3d.tests",
            "nipy.externals.transforms3d.tests.samples",
            "nipy.externals.transforms3d.tests.test_quaternions",
            "nipy.externals.transforms3d.tests.test_taitbryan",
            "nipy.externals.transforms3d.utils",
            "nipy.externals.validate",
            "nipy.fixes",
            "nipy.fixes.nibabel",
            "nipy.fixes.nibabel.orientations",
            "nipy.fixes.numpy",
            "nipy.fixes.numpy.testing",
            "nipy.fixes.numpy.testing.noseclasses",
            "nipy.fixes.numpy.testing.nosetester",
            "nipy.fixes.numpy.testing.utils",
            "nipy.fixes.scipy",
            "nipy.fixes.scipy.ndimage",
            "nipy.fixes.setup",
            "nipy.info",
            "nipy.interfaces",
            "nipy.interfaces.matlab",
            "nipy.interfaces.setup",
            "nipy.interfaces.spm",
            "nipy.interfaces.tests",
            "nipy.interfaces.tests.test_mlabtemp",
            "nipy.io",
            "nipy.io.api",
            "nipy.io.files",
            "nipy.io.imageformats",
            "nipy.io.nibcompat",
            "nipy.io.nifti_ref",
            "nipy.io.setup",
            "nipy.io.tests",
            "nipy.io.tests.test_image_io",
            "nipy.io.tests.test_nibcompat",
            "nipy.io.tests.test_nifti_ref",
            "nipy.io.tests.test_save",
            "nipy.labs",
            "nipy.labs.bindings",
            "nipy.labs.bindings.benchmarks",
            "nipy.labs.bindings.benchmarks.bench_numpy",
            "nipy.labs.bindings.setup",
            "nipy.labs.bindings.tests",
            "nipy.labs.bindings.tests.test_array",
            "nipy.labs.bindings.tests.test_blas1",
            "nipy.labs.bindings.tests.test_blas3",
            "nipy.labs.bindings.tests.test_linalg",
            "nipy.labs.bindings.tests.test_numpy",
            "nipy.labs.datasets",
            "nipy.labs.datasets.converters",
            "nipy.labs.datasets.setup",
            "nipy.labs.datasets.tests",
            "nipy.labs.datasets.tests.test_converters",
            "nipy.labs.datasets.transforms",
            "nipy.labs.datasets.transforms.affine_transform",
            "nipy.labs.datasets.transforms.affine_utils",
            "nipy.labs.datasets.transforms.setup",
            "nipy.labs.datasets.transforms.tests",
            "nipy.labs.datasets.transforms.tests.test_affine_transform",
            "nipy.labs.datasets.transforms.tests.test_affine_utils",
            "nipy.labs.datasets.transforms.tests.test_transform",
            "nipy.labs.datasets.transforms.transform",
            "nipy.labs.datasets.volumes",
            "nipy.labs.datasets.volumes.setup",
            "nipy.labs.datasets.volumes.tests",
            "nipy.labs.datasets.volumes.tests.test_volume_data",
            "nipy.labs.datasets.volumes.tests.test_volume_field",
            "nipy.labs.datasets.volumes.tests.test_volume_grid",
            "nipy.labs.datasets.volumes.tests.test_volume_img",
            "nipy.labs.datasets.volumes.volume_data",
            "nipy.labs.datasets.volumes.volume_field",
            "nipy.labs.datasets.volumes.volume_grid",
            "nipy.labs.datasets.volumes.volume_img",
            "nipy.labs.glm",
            "nipy.labs.glm.benchmarks",
            "nipy.labs.glm.benchmarks.bench_glm",
            "nipy.labs.glm.glm",
            "nipy.labs.glm.setup",
            "nipy.labs.glm.tests",
            "nipy.labs.glm.tests.test_glm",
            "nipy.labs.group",
            "nipy.labs.group.permutation_test",
            "nipy.labs.group.setup",
            "nipy.labs.group.tests",
            "nipy.labs.group.tests.test_onesample_stat",
            "nipy.labs.group.tests.test_permutation_test",
            "nipy.labs.mask",
            "nipy.labs.setup",
            "nipy.labs.spatial_models",
            "nipy.labs.spatial_models.bayesian_structural_analysis",
            "nipy.labs.spatial_models.bsa_io",
            "nipy.labs.spatial_models.discrete_domain",
            "nipy.labs.spatial_models.hierarchical_parcellation",
            "nipy.labs.spatial_models.hroi",
            "nipy.labs.spatial_models.mroi",
            "nipy.labs.spatial_models.parcel_io",
            "nipy.labs.spatial_models.parcellation",
            "nipy.labs.spatial_models.setup",
            "nipy.labs.spatial_models.structural_bfls",
            "nipy.labs.spatial_models.tests",
            "nipy.labs.spatial_models.tests.test_bsa",
            "nipy.labs.spatial_models.tests.test_bsa_io",
            "nipy.labs.spatial_models.tests.test_discrete_domain",
            "nipy.labs.spatial_models.tests.test_hroi",
            "nipy.labs.spatial_models.tests.test_mroi",
            "nipy.labs.spatial_models.tests.test_parcel",
            "nipy.labs.spatial_models.tests.test_parcel_io",
            "nipy.labs.statistical_mapping",
            "nipy.labs.tests",
            "nipy.labs.tests.test_mask",
            "nipy.labs.tests.test_statistical_mapping",
            "nipy.labs.utils",
            "nipy.labs.utils.mask",
            "nipy.labs.utils.reproducibility_measures",
            "nipy.labs.utils.setup",
            "nipy.labs.utils.simul_multisubject_fmri_dataset",
            "nipy.labs.utils.tests",
            "nipy.labs.utils.tests.test_misc",
            "nipy.labs.utils.tests.test_repro",
            "nipy.labs.utils.tests.test_simul_multisubject_fmri_dataset",
            "nipy.labs.utils.zscore",
            "nipy.labs.viz",
            "nipy.labs.viz3d",
            "nipy.labs.viz_tools",
            "nipy.labs.viz_tools.activation_maps",
            "nipy.labs.viz_tools.anat_cache",
            "nipy.labs.viz_tools.cm",
            "nipy.labs.viz_tools.coord_tools",
            "nipy.labs.viz_tools.edge_detect",
            "nipy.labs.viz_tools.maps_3d",
            "nipy.labs.viz_tools.setup",
            "nipy.labs.viz_tools.slicers",
            "nipy.labs.viz_tools.test",
            "nipy.labs.viz_tools.test.test_activation_maps",
            "nipy.labs.viz_tools.test.test_cm",
            "nipy.labs.viz_tools.test.test_coord_tools",
            "nipy.labs.viz_tools.test.test_edge_detect",
            "nipy.labs.viz_tools.test.test_slicers",
            "nipy.modalities",
            "nipy.modalities.fmri",
            "nipy.modalities.fmri.api",
            "nipy.modalities.fmri.design",
            "nipy.modalities.fmri.design_matrix",
            "nipy.modalities.fmri.experimental_paradigm",
            "nipy.modalities.fmri.fmri",
            "nipy.modalities.fmri.fmristat",
            "nipy.modalities.fmri.fmristat.api",
            "nipy.modalities.fmri.fmristat.hrf",
            "nipy.modalities.fmri.fmristat.invert",
            "nipy.modalities.fmri.fmristat.model",
            "nipy.modalities.fmri.fmristat.outputters",
            "nipy.modalities.fmri.fmristat.setup",
            "nipy.modalities.fmri.fmristat.tests",
            "nipy.modalities.fmri.fmristat.tests.FIACdesigns",
            "nipy.modalities.fmri.fmristat.tests.test_FIAC",
            "nipy.modalities.fmri.fmristat.tests.test_hrf",
            "nipy.modalities.fmri.fmristat.tests.test_iterables",
            "nipy.modalities.fmri.fmristat.tests.test_model",
            "nipy.modalities.fmri.fmristat.tests.test_outputters",
            "nipy.modalities.fmri.glm",
            "nipy.modalities.fmri.hemodynamic_models",
            "nipy.modalities.fmri.hrf",
            "nipy.modalities.fmri.realfuncs",
            "nipy.modalities.fmri.setup",
            "nipy.modalities.fmri.spm",
            "nipy.modalities.fmri.spm.correlation",
            "nipy.modalities.fmri.spm.model",
            "nipy.modalities.fmri.spm.reml",
            "nipy.modalities.fmri.spm.trace",
            "nipy.modalities.fmri.tests",
            "nipy.modalities.fmri.tests.test_aliases",
            "nipy.modalities.fmri.tests.test_design",
            "nipy.modalities.fmri.tests.test_dmtx",
            "nipy.modalities.fmri.tests.test_fmri",
            "nipy.modalities.fmri.tests.test_glm",
            "nipy.modalities.fmri.tests.test_hemodynamic_models",
            "nipy.modalities.fmri.tests.test_hrf",
            "nipy.modalities.fmri.tests.test_iterators",
            "nipy.modalities.fmri.tests.test_paradigm",
            "nipy.modalities.fmri.tests.test_realfuncs",
            "nipy.modalities.fmri.tests.test_utils",
            "nipy.modalities.fmri.utils",
            "nipy.modalities.setup",
            "nipy.pkg_info",
            "nipy.setup",
            "nipy.testing",
            "nipy.testing.decorators",
            "nipy.testing.doctester",
            "nipy.testing.nosetester",
            "nipy.testing.setup",
            "nipy.testing.tests",
            "nipy.testing.tests.test_doctester",
            "nipy.testing.tests.test_doctesting",
            "nipy.testing.tests.test_images",
            "nipy.tests",
            "nipy.tests.scriptrunner",
            "nipy.tests.test_scripts",
            "nipy.utils",
            "nipy.utils.arrays",
            "nipy.utils.compat3",
            "nipy.utils.perlpie",
            "nipy.utils.setup",
            "nipy.utils.skip_test",
            "nipy.utils.tests",
            "nipy.utils.tests.test_arrays",
            "nipy.utils.tests.test_compat3",
            "nipy.utils.tests.test_skip_test",
            "nipy.utils.tests.test_utilities",
            "nipy.utils.utilities",
            "numpy_ext",
            "numpy_ext.docscrape",
            "numpy_ext.docscrape_sphinx",
            "numpy_ext.numpydoc"
        ],
        "version": "0.4.1"
    },
    "nipype": {
        "cmdline": [],
        "modules": [
            "nipype",
            "nipype.algorithms",
            "nipype.algorithms.confounds",
            "nipype.algorithms.icc",
            "nipype.algorithms.mesh",
            "nipype.algorithms.metrics",
            "nipype.algorithms.misc",
            "nipype.algorithms.modelgen",
            "nipype.algorithms.rapidart",
            "nipype.algorithms.tests",
            "nipype.algorithms.tests.test_auto_ACompCor",
            "nipype.algorithms.tests.test_auto_AddCSVColumn",
            "nipype.algorithms.tests.test_auto_AddCSVRow",
            "nipype.algorithms.tests.test_auto_AddNoise",
            "nipype.algorithms.tests.test_auto_ArtifactDetect",
            "nipype.algorithms.tests.test_auto_CalculateNormalizedMoments",
            "nipype.algorithms.tests.test_auto_ComputeDVARS",
            "nipype.algorithms.tests.test_auto_ComputeMeshWarp",
            "nipype.algorithms.tests.test_auto_CreateNifti",
            "nipype.algorithms.tests.test_auto_Distance",
            "nipype.algorithms.tests.test_auto_FramewiseDisplacement",
            "nipype.algorithms.tests.test_auto_FuzzyOverlap",
            "nipype.algorithms.tests.test_auto_Gunzip",
            "nipype.algorithms.tests.test_auto_ICC",
            "nipype.algorithms.tests.test_auto_Matlab2CSV",
            "nipype.algorithms.tests.test_auto_MergeCSVFiles",
            "nipype.algorithms.tests.test_auto_MergeROIs",
            "nipype.algorithms.tests.test_auto_MeshWarpMaths",
            "nipype.algorithms.tests.test_auto_ModifyAffine",
            "nipype.algorithms.tests.test_auto_NonSteadyStateDetector",
            "nipype.algorithms.tests.test_auto_NormalizeProbabilityMapSet",
            "nipype.algorithms.tests.test_auto_P2PDistance",
            "nipype.algorithms.tests.test_auto_PickAtlas",
            "nipype.algorithms.tests.test_auto_Similarity",
            "nipype.algorithms.tests.test_auto_SimpleThreshold",
            "nipype.algorithms.tests.test_auto_SpecifyModel",
            "nipype.algorithms.tests.test_auto_SpecifySPMModel",
            "nipype.algorithms.tests.test_auto_SpecifySparseModel",
            "nipype.algorithms.tests.test_auto_SplitROIs",
            "nipype.algorithms.tests.test_auto_StimulusCorrelation",
            "nipype.algorithms.tests.test_auto_TCompCor",
            "nipype.algorithms.tests.test_auto_TVTKBaseInterface",
            "nipype.algorithms.tests.test_auto_WarpPoints",
            "nipype.algorithms.tests.test_compcor",
            "nipype.algorithms.tests.test_confounds",
            "nipype.algorithms.tests.test_errormap",
            "nipype.algorithms.tests.test_icc_anova",
            "nipype.algorithms.tests.test_mesh_ops",
            "nipype.algorithms.tests.test_misc",
            "nipype.algorithms.tests.test_modelgen",
            "nipype.algorithms.tests.test_moments",
            "nipype.algorithms.tests.test_normalize_tpms",
            "nipype.algorithms.tests.test_overlap",
            "nipype.algorithms.tests.test_rapidart",
            "nipype.algorithms.tests.test_splitmerge",
            "nipype.algorithms.tests.test_tsnr",
            "nipype.caching",
            "nipype.caching.memory",
            "nipype.caching.tests",
            "nipype.caching.tests.test_memory",
            "nipype.external",
            "nipype.external.cloghandler",
            "nipype.external.due",
            "nipype.external.fsl_imglob",
            "nipype.external.portalocker",
            "nipype.info",
            "nipype.interfaces",
            "nipype.interfaces.afni",
            "nipype.interfaces.afni.base",
            "nipype.interfaces.afni.preprocess",
            "nipype.interfaces.afni.svm",
            "nipype.interfaces.afni.tests",
            "nipype.interfaces.afni.tests.test_auto_AFNICommand",
            "nipype.interfaces.afni.tests.test_auto_AFNICommandBase",
            "nipype.interfaces.afni.tests.test_auto_AFNItoNIFTI",
            "nipype.interfaces.afni.tests.test_auto_Allineate",
            "nipype.interfaces.afni.tests.test_auto_AutoTcorrelate",
            "nipype.interfaces.afni.tests.test_auto_Autobox",
            "nipype.interfaces.afni.tests.test_auto_Automask",
            "nipype.interfaces.afni.tests.test_auto_Bandpass",
            "nipype.interfaces.afni.tests.test_auto_BlurInMask",
            "nipype.interfaces.afni.tests.test_auto_BlurToFWHM",
            "nipype.interfaces.afni.tests.test_auto_BrickStat",
            "nipype.interfaces.afni.tests.test_auto_Calc",
            "nipype.interfaces.afni.tests.test_auto_ClipLevel",
            "nipype.interfaces.afni.tests.test_auto_Copy",
            "nipype.interfaces.afni.tests.test_auto_DegreeCentrality",
            "nipype.interfaces.afni.tests.test_auto_Despike",
            "nipype.interfaces.afni.tests.test_auto_Detrend",
            "nipype.interfaces.afni.tests.test_auto_ECM",
            "nipype.interfaces.afni.tests.test_auto_Eval",
            "nipype.interfaces.afni.tests.test_auto_FWHMx",
            "nipype.interfaces.afni.tests.test_auto_Fim",
            "nipype.interfaces.afni.tests.test_auto_Fourier",
            "nipype.interfaces.afni.tests.test_auto_Hist",
            "nipype.interfaces.afni.tests.test_auto_LFCD",
            "nipype.interfaces.afni.tests.test_auto_MaskTool",
            "nipype.interfaces.afni.tests.test_auto_Maskave",
            "nipype.interfaces.afni.tests.test_auto_Means",
            "nipype.interfaces.afni.tests.test_auto_Merge",
            "nipype.interfaces.afni.tests.test_auto_Notes",
            "nipype.interfaces.afni.tests.test_auto_OutlierCount",
            "nipype.interfaces.afni.tests.test_auto_QualityIndex",
            "nipype.interfaces.afni.tests.test_auto_QwarpPlusMinus",
            "nipype.interfaces.afni.tests.test_auto_ROIStats",
            "nipype.interfaces.afni.tests.test_auto_Refit",
            "nipype.interfaces.afni.tests.test_auto_Resample",
            "nipype.interfaces.afni.tests.test_auto_Retroicor",
            "nipype.interfaces.afni.tests.test_auto_SVMTest",
            "nipype.interfaces.afni.tests.test_auto_SVMTrain",
            "nipype.interfaces.afni.tests.test_auto_Seg",
            "nipype.interfaces.afni.tests.test_auto_SkullStrip",
            "nipype.interfaces.afni.tests.test_auto_TCat",
            "nipype.interfaces.afni.tests.test_auto_TCorr1D",
            "nipype.interfaces.afni.tests.test_auto_TCorrMap",
            "nipype.interfaces.afni.tests.test_auto_TCorrelate",
            "nipype.interfaces.afni.tests.test_auto_TShift",
            "nipype.interfaces.afni.tests.test_auto_TStat",
            "nipype.interfaces.afni.tests.test_auto_To3D",
            "nipype.interfaces.afni.tests.test_auto_Unifize",
            "nipype.interfaces.afni.tests.test_auto_Volreg",
            "nipype.interfaces.afni.tests.test_auto_Warp",
            "nipype.interfaces.afni.tests.test_auto_ZCutUp",
            "nipype.interfaces.afni.utils",
            "nipype.interfaces.ants",
            "nipype.interfaces.ants.base",
            "nipype.interfaces.ants.legacy",
            "nipype.interfaces.ants.registration",
            "nipype.interfaces.ants.resampling",
            "nipype.interfaces.ants.segmentation",
            "nipype.interfaces.ants.tests",
            "nipype.interfaces.ants.tests.test_auto_ANTS",
            "nipype.interfaces.ants.tests.test_auto_ANTSCommand",
            "nipype.interfaces.ants.tests.test_auto_AffineInitializer",
            "nipype.interfaces.ants.tests.test_auto_AntsJointFusion",
            "nipype.interfaces.ants.tests.test_auto_ApplyTransforms",
            "nipype.interfaces.ants.tests.test_auto_ApplyTransformsToPoints",
            "nipype.interfaces.ants.tests.test_auto_Atropos",
            "nipype.interfaces.ants.tests.test_auto_AverageAffineTransform",
            "nipype.interfaces.ants.tests.test_auto_AverageImages",
            "nipype.interfaces.ants.tests.test_auto_BrainExtraction",
            "nipype.interfaces.ants.tests.test_auto_ConvertScalarImageToRGB",
            "nipype.interfaces.ants.tests.test_auto_CorticalThickness",
            "nipype.interfaces.ants.tests.test_auto_CreateJacobianDeterminantImage",
            "nipype.interfaces.ants.tests.test_auto_CreateTiledMosaic",
            "nipype.interfaces.ants.tests.test_auto_DenoiseImage",
            "nipype.interfaces.ants.tests.test_auto_GenWarpFields",
            "nipype.interfaces.ants.tests.test_auto_JointFusion",
            "nipype.interfaces.ants.tests.test_auto_KellyKapowski",
            "nipype.interfaces.ants.tests.test_auto_LaplacianThickness",
            "nipype.interfaces.ants.tests.test_auto_MultiplyImages",
            "nipype.interfaces.ants.tests.test_auto_N4BiasFieldCorrection",
            "nipype.interfaces.ants.tests.test_auto_Registration",
            "nipype.interfaces.ants.tests.test_auto_WarpImageMultiTransform",
            "nipype.interfaces.ants.tests.test_auto_WarpTimeSeriesImageMultiTransform",
            "nipype.interfaces.ants.tests.test_auto_antsBrainExtraction",
            "nipype.interfaces.ants.tests.test_auto_antsCorticalThickness",
            "nipype.interfaces.ants.tests.test_auto_antsIntroduction",
            "nipype.interfaces.ants.tests.test_auto_buildtemplateparallel",
            "nipype.interfaces.ants.tests.test_spec_JointFusion",
            "nipype.interfaces.ants.utils",
            "nipype.interfaces.ants.visualization",
            "nipype.interfaces.base",
            "nipype.interfaces.brainsuite",
            "nipype.interfaces.brainsuite.brainsuite",
            "nipype.interfaces.brainsuite.tests",
            "nipype.interfaces.brainsuite.tests.test_auto_BDP",
            "nipype.interfaces.brainsuite.tests.test_auto_Bfc",
            "nipype.interfaces.brainsuite.tests.test_auto_Bse",
            "nipype.interfaces.brainsuite.tests.test_auto_Cerebro",
            "nipype.interfaces.brainsuite.tests.test_auto_Cortex",
            "nipype.interfaces.brainsuite.tests.test_auto_Dewisp",
            "nipype.interfaces.brainsuite.tests.test_auto_Dfs",
            "nipype.interfaces.brainsuite.tests.test_auto_Hemisplit",
            "nipype.interfaces.brainsuite.tests.test_auto_Pialmesh",
            "nipype.interfaces.brainsuite.tests.test_auto_Pvc",
            "nipype.interfaces.brainsuite.tests.test_auto_SVReg",
            "nipype.interfaces.brainsuite.tests.test_auto_Scrubmask",
            "nipype.interfaces.brainsuite.tests.test_auto_Skullfinder",
            "nipype.interfaces.brainsuite.tests.test_auto_Tca",
            "nipype.interfaces.brainsuite.tests.test_auto_ThicknessPVC",
            "nipype.interfaces.bru2nii",
            "nipype.interfaces.c3",
            "nipype.interfaces.camino",
            "nipype.interfaces.camino.calib",
            "nipype.interfaces.camino.connectivity",
            "nipype.interfaces.camino.convert",
            "nipype.interfaces.camino.dti",
            "nipype.interfaces.camino.odf",
            "nipype.interfaces.camino.tests",
            "nipype.interfaces.camino.tests.test_auto_AnalyzeHeader",
            "nipype.interfaces.camino.tests.test_auto_ComputeEigensystem",
            "nipype.interfaces.camino.tests.test_auto_ComputeFractionalAnisotropy",
            "nipype.interfaces.camino.tests.test_auto_ComputeMeanDiffusivity",
            "nipype.interfaces.camino.tests.test_auto_ComputeTensorTrace",
            "nipype.interfaces.camino.tests.test_auto_Conmat",
            "nipype.interfaces.camino.tests.test_auto_DT2NIfTI",
            "nipype.interfaces.camino.tests.test_auto_DTIFit",
            "nipype.interfaces.camino.tests.test_auto_DTLUTGen",
            "nipype.interfaces.camino.tests.test_auto_DTMetric",
            "nipype.interfaces.camino.tests.test_auto_FSL2Scheme",
            "nipype.interfaces.camino.tests.test_auto_Image2Voxel",
            "nipype.interfaces.camino.tests.test_auto_ImageStats",
            "nipype.interfaces.camino.tests.test_auto_LinRecon",
            "nipype.interfaces.camino.tests.test_auto_MESD",
            "nipype.interfaces.camino.tests.test_auto_ModelFit",
            "nipype.interfaces.camino.tests.test_auto_NIfTIDT2Camino",
            "nipype.interfaces.camino.tests.test_auto_PicoPDFs",
            "nipype.interfaces.camino.tests.test_auto_ProcStreamlines",
            "nipype.interfaces.camino.tests.test_auto_QBallMX",
            "nipype.interfaces.camino.tests.test_auto_SFLUTGen",
            "nipype.interfaces.camino.tests.test_auto_SFPICOCalibData",
            "nipype.interfaces.camino.tests.test_auto_SFPeaks",
            "nipype.interfaces.camino.tests.test_auto_Shredder",
            "nipype.interfaces.camino.tests.test_auto_Track",
            "nipype.interfaces.camino.tests.test_auto_TrackBallStick",
            "nipype.interfaces.camino.tests.test_auto_TrackBayesDirac",
            "nipype.interfaces.camino.tests.test_auto_TrackBedpostxDeter",
            "nipype.interfaces.camino.tests.test_auto_TrackBedpostxProba",
            "nipype.interfaces.camino.tests.test_auto_TrackBootstrap",
            "nipype.interfaces.camino.tests.test_auto_TrackDT",
            "nipype.interfaces.camino.tests.test_auto_TrackPICo",
            "nipype.interfaces.camino.tests.test_auto_TractShredder",
            "nipype.interfaces.camino.tests.test_auto_VtkStreamlines",
            "nipype.interfaces.camino.utils",
            "nipype.interfaces.camino2trackvis",
            "nipype.interfaces.camino2trackvis.convert",
            "nipype.interfaces.camino2trackvis.tests",
            "nipype.interfaces.camino2trackvis.tests.test_auto_Camino2Trackvis",
            "nipype.interfaces.camino2trackvis.tests.test_auto_Trackvis2Camino",
            "nipype.interfaces.cmtk",
            "nipype.interfaces.cmtk.cmtk",
            "nipype.interfaces.cmtk.convert",
            "nipype.interfaces.cmtk.nbs",
            "nipype.interfaces.cmtk.nx",
            "nipype.interfaces.cmtk.parcellation",
            "nipype.interfaces.cmtk.tests",
            "nipype.interfaces.cmtk.tests.test_auto_AverageNetworks",
            "nipype.interfaces.cmtk.tests.test_auto_CFFConverter",
            "nipype.interfaces.cmtk.tests.test_auto_CreateMatrix",
            "nipype.interfaces.cmtk.tests.test_auto_CreateNodes",
            "nipype.interfaces.cmtk.tests.test_auto_MergeCNetworks",
            "nipype.interfaces.cmtk.tests.test_auto_NetworkBasedStatistic",
            "nipype.interfaces.cmtk.tests.test_auto_NetworkXMetrics",
            "nipype.interfaces.cmtk.tests.test_auto_Parcellate",
            "nipype.interfaces.cmtk.tests.test_auto_ROIGen",
            "nipype.interfaces.dcm2nii",
            "nipype.interfaces.dcmstack",
            "nipype.interfaces.diffusion_toolkit",
            "nipype.interfaces.diffusion_toolkit.base",
            "nipype.interfaces.diffusion_toolkit.dti",
            "nipype.interfaces.diffusion_toolkit.odf",
            "nipype.interfaces.diffusion_toolkit.postproc",
            "nipype.interfaces.diffusion_toolkit.tests",
            "nipype.interfaces.diffusion_toolkit.tests.test_auto_DTIRecon",
            "nipype.interfaces.diffusion_toolkit.tests.test_auto_DTITracker",
            "nipype.interfaces.diffusion_toolkit.tests.test_auto_HARDIMat",
            "nipype.interfaces.diffusion_toolkit.tests.test_auto_ODFRecon",
            "nipype.interfaces.diffusion_toolkit.tests.test_auto_ODFTracker",
            "nipype.interfaces.diffusion_toolkit.tests.test_auto_SplineFilter",
            "nipype.interfaces.diffusion_toolkit.tests.test_auto_TrackMerge",
            "nipype.interfaces.dipy",
            "nipype.interfaces.dipy.base",
            "nipype.interfaces.dipy.preprocess",
            "nipype.interfaces.dipy.reconstruction",
            "nipype.interfaces.dipy.setup",
            "nipype.interfaces.dipy.simulate",
            "nipype.interfaces.dipy.tensors",
            "nipype.interfaces.dipy.tests",
            "nipype.interfaces.dipy.tests.test_auto_CSD",
            "nipype.interfaces.dipy.tests.test_auto_DTI",
            "nipype.interfaces.dipy.tests.test_auto_Denoise",
            "nipype.interfaces.dipy.tests.test_auto_DipyBaseInterface",
            "nipype.interfaces.dipy.tests.test_auto_DipyDiffusionInterface",
            "nipype.interfaces.dipy.tests.test_auto_EstimateResponseSH",
            "nipype.interfaces.dipy.tests.test_auto_RESTORE",
            "nipype.interfaces.dipy.tests.test_auto_Resample",
            "nipype.interfaces.dipy.tests.test_auto_SimulateMultiTensor",
            "nipype.interfaces.dipy.tests.test_auto_StreamlineTractography",
            "nipype.interfaces.dipy.tests.test_auto_TensorMode",
            "nipype.interfaces.dipy.tests.test_auto_TrackDensityMap",
            "nipype.interfaces.dipy.tracks",
            "nipype.interfaces.dynamic_slicer",
            "nipype.interfaces.elastix",
            "nipype.interfaces.elastix.base",
            "nipype.interfaces.elastix.registration",
            "nipype.interfaces.elastix.tests",
            "nipype.interfaces.elastix.tests.test_auto_AnalyzeWarp",
            "nipype.interfaces.elastix.tests.test_auto_ApplyWarp",
            "nipype.interfaces.elastix.tests.test_auto_EditTransform",
            "nipype.interfaces.elastix.tests.test_auto_PointsWarp",
            "nipype.interfaces.elastix.tests.test_auto_Registration",
            "nipype.interfaces.elastix.utils",
            "nipype.interfaces.freesurfer",
            "nipype.interfaces.freesurfer.base",
            "nipype.interfaces.freesurfer.longitudinal",
            "nipype.interfaces.freesurfer.model",
            "nipype.interfaces.freesurfer.preprocess",
            "nipype.interfaces.freesurfer.registration",
            "nipype.interfaces.freesurfer.tests",
            "nipype.interfaces.freesurfer.tests.test_BBRegister",
            "nipype.interfaces.freesurfer.tests.test_FSSurfaceCommand",
            "nipype.interfaces.freesurfer.tests.test_auto_AddXFormToHeader",
            "nipype.interfaces.freesurfer.tests.test_auto_Aparc2Aseg",
            "nipype.interfaces.freesurfer.tests.test_auto_Apas2Aseg",
            "nipype.interfaces.freesurfer.tests.test_auto_ApplyMask",
            "nipype.interfaces.freesurfer.tests.test_auto_ApplyVolTransform",
            "nipype.interfaces.freesurfer.tests.test_auto_Binarize",
            "nipype.interfaces.freesurfer.tests.test_auto_CALabel",
            "nipype.interfaces.freesurfer.tests.test_auto_CANormalize",
            "nipype.interfaces.freesurfer.tests.test_auto_CARegister",
            "nipype.interfaces.freesurfer.tests.test_auto_CheckTalairachAlignment",
            "nipype.interfaces.freesurfer.tests.test_auto_Concatenate",
            "nipype.interfaces.freesurfer.tests.test_auto_ConcatenateLTA",
            "nipype.interfaces.freesurfer.tests.test_auto_Contrast",
            "nipype.interfaces.freesurfer.tests.test_auto_Curvature",
            "nipype.interfaces.freesurfer.tests.test_auto_CurvatureStats",
            "nipype.interfaces.freesurfer.tests.test_auto_DICOMConvert",
            "nipype.interfaces.freesurfer.tests.test_auto_EMRegister",
            "nipype.interfaces.freesurfer.tests.test_auto_EditWMwithAseg",
            "nipype.interfaces.freesurfer.tests.test_auto_EulerNumber",
            "nipype.interfaces.freesurfer.tests.test_auto_ExtractMainComponent",
            "nipype.interfaces.freesurfer.tests.test_auto_FSCommand",
            "nipype.interfaces.freesurfer.tests.test_auto_FSCommandOpenMP",
            "nipype.interfaces.freesurfer.tests.test_auto_FSScriptCommand",
            "nipype.interfaces.freesurfer.tests.test_auto_FitMSParams",
            "nipype.interfaces.freesurfer.tests.test_auto_FixTopology",
            "nipype.interfaces.freesurfer.tests.test_auto_FuseSegmentations",
            "nipype.interfaces.freesurfer.tests.test_auto_GLMFit",
            "nipype.interfaces.freesurfer.tests.test_auto_ImageInfo",
            "nipype.interfaces.freesurfer.tests.test_auto_Jacobian",
            "nipype.interfaces.freesurfer.tests.test_auto_Label2Annot",
            "nipype.interfaces.freesurfer.tests.test_auto_Label2Label",
            "nipype.interfaces.freesurfer.tests.test_auto_Label2Vol",
            "nipype.interfaces.freesurfer.tests.test_auto_MNIBiasCorrection",
            "nipype.interfaces.freesurfer.tests.test_auto_MPRtoMNI305",
            "nipype.interfaces.freesurfer.tests.test_auto_MRIConvert",
            "nipype.interfaces.freesurfer.tests.test_auto_MRIFill",
            "nipype.interfaces.freesurfer.tests.test_auto_MRIMarchingCubes",
            "nipype.interfaces.freesurfer.tests.test_auto_MRIPretess",
            "nipype.interfaces.freesurfer.tests.test_auto_MRISPreproc",
            "nipype.interfaces.freesurfer.tests.test_auto_MRISPreprocReconAll",
            "nipype.interfaces.freesurfer.tests.test_auto_MRITessellate",
            "nipype.interfaces.freesurfer.tests.test_auto_MRIsCALabel",
            "nipype.interfaces.freesurfer.tests.test_auto_MRIsCalc",
            "nipype.interfaces.freesurfer.tests.test_auto_MRIsCombine",
            "nipype.interfaces.freesurfer.tests.test_auto_MRIsConvert",
            "nipype.interfaces.freesurfer.tests.test_auto_MRIsExpand",
            "nipype.interfaces.freesurfer.tests.test_auto_MRIsInflate",
            "nipype.interfaces.freesurfer.tests.test_auto_MS_LDA",
            "nipype.interfaces.freesurfer.tests.test_auto_MakeAverageSubject",
            "nipype.interfaces.freesurfer.tests.test_auto_MakeSurfaces",
            "nipype.interfaces.freesurfer.tests.test_auto_Normalize",
            "nipype.interfaces.freesurfer.tests.test_auto_OneSampleTTest",
            "nipype.interfaces.freesurfer.tests.test_auto_Paint",
            "nipype.interfaces.freesurfer.tests.test_auto_ParcellationStats",
            "nipype.interfaces.freesurfer.tests.test_auto_ParseDICOMDir",
            "nipype.interfaces.freesurfer.tests.test_auto_ReconAll",
            "nipype.interfaces.freesurfer.tests.test_auto_Register",
            "nipype.interfaces.freesurfer.tests.test_auto_RegisterAVItoTalairach",
            "nipype.interfaces.freesurfer.tests.test_auto_RelabelHypointensities",
            "nipype.interfaces.freesurfer.tests.test_auto_RemoveIntersection",
            "nipype.interfaces.freesurfer.tests.test_auto_RemoveNeck",
            "nipype.interfaces.freesurfer.tests.test_auto_Resample",
            "nipype.interfaces.freesurfer.tests.test_auto_RobustRegister",
            "nipype.interfaces.freesurfer.tests.test_auto_RobustTemplate",
            "nipype.interfaces.freesurfer.tests.test_auto_SampleToSurface",
            "nipype.interfaces.freesurfer.tests.test_auto_SegStats",
            "nipype.interfaces.freesurfer.tests.test_auto_SegStatsReconAll",
            "nipype.interfaces.freesurfer.tests.test_auto_SegmentCC",
            "nipype.interfaces.freesurfer.tests.test_auto_SegmentWM",
            "nipype.interfaces.freesurfer.tests.test_auto_Smooth",
            "nipype.interfaces.freesurfer.tests.test_auto_SmoothTessellation",
            "nipype.interfaces.freesurfer.tests.test_auto_Sphere",
            "nipype.interfaces.freesurfer.tests.test_auto_SphericalAverage",
            "nipype.interfaces.freesurfer.tests.test_auto_Surface2VolTransform",
            "nipype.interfaces.freesurfer.tests.test_auto_SurfaceSmooth",
            "nipype.interfaces.freesurfer.tests.test_auto_SurfaceSnapshots",
            "nipype.interfaces.freesurfer.tests.test_auto_SurfaceTransform",
            "nipype.interfaces.freesurfer.tests.test_auto_SynthesizeFLASH",
            "nipype.interfaces.freesurfer.tests.test_auto_TalairachAVI",
            "nipype.interfaces.freesurfer.tests.test_auto_TalairachQC",
            "nipype.interfaces.freesurfer.tests.test_auto_Tkregister2",
            "nipype.interfaces.freesurfer.tests.test_auto_UnpackSDICOMDir",
            "nipype.interfaces.freesurfer.tests.test_auto_VolumeMask",
            "nipype.interfaces.freesurfer.tests.test_auto_WatershedSkullStrip",
            "nipype.interfaces.freesurfer.tests.test_model",
            "nipype.interfaces.freesurfer.tests.test_preprocess",
            "nipype.interfaces.freesurfer.tests.test_utils",
            "nipype.interfaces.freesurfer.utils",
            "nipype.interfaces.fsl",
            "nipype.interfaces.fsl.ICA_AROMA",
            "nipype.interfaces.fsl.base",
            "nipype.interfaces.fsl.dti",
            "nipype.interfaces.fsl.epi",
            "nipype.interfaces.fsl.fix",
            "nipype.interfaces.fsl.maths",
            "nipype.interfaces.fsl.model",
            "nipype.interfaces.fsl.possum",
            "nipype.interfaces.fsl.preprocess",
            "nipype.interfaces.fsl.tests",
            "nipype.interfaces.fsl.tests.test_FILMGLS",
            "nipype.interfaces.fsl.tests.test_Level1Design_functions",
            "nipype.interfaces.fsl.tests.test_auto_AR1Image",
            "nipype.interfaces.fsl.tests.test_auto_AccuracyTester",
            "nipype.interfaces.fsl.tests.test_auto_ApplyMask",
            "nipype.interfaces.fsl.tests.test_auto_ApplyTOPUP",
            "nipype.interfaces.fsl.tests.test_auto_ApplyWarp",
            "nipype.interfaces.fsl.tests.test_auto_ApplyXFM",
            "nipype.interfaces.fsl.tests.test_auto_AvScale",
            "nipype.interfaces.fsl.tests.test_auto_B0Calc",
            "nipype.interfaces.fsl.tests.test_auto_BEDPOSTX5",
            "nipype.interfaces.fsl.tests.test_auto_BET",
            "nipype.interfaces.fsl.tests.test_auto_BinaryMaths",
            "nipype.interfaces.fsl.tests.test_auto_ChangeDataType",
            "nipype.interfaces.fsl.tests.test_auto_Classifier",
            "nipype.interfaces.fsl.tests.test_auto_Cleaner",
            "nipype.interfaces.fsl.tests.test_auto_Cluster",
            "nipype.interfaces.fsl.tests.test_auto_Complex",
            "nipype.interfaces.fsl.tests.test_auto_ContrastMgr",
            "nipype.interfaces.fsl.tests.test_auto_ConvertWarp",
            "nipype.interfaces.fsl.tests.test_auto_ConvertXFM",
            "nipype.interfaces.fsl.tests.test_auto_CopyGeom",
            "nipype.interfaces.fsl.tests.test_auto_DTIFit",
            "nipype.interfaces.fsl.tests.test_auto_DilateImage",
            "nipype.interfaces.fsl.tests.test_auto_DistanceMap",
            "nipype.interfaces.fsl.tests.test_auto_EPIDeWarp",
            "nipype.interfaces.fsl.tests.test_auto_Eddy",
            "nipype.interfaces.fsl.tests.test_auto_EddyCorrect",
            "nipype.interfaces.fsl.tests.test_auto_EpiReg",
            "nipype.interfaces.fsl.tests.test_auto_ErodeImage",
            "nipype.interfaces.fsl.tests.test_auto_ExtractROI",
            "nipype.interfaces.fsl.tests.test_auto_FAST",
            "nipype.interfaces.fsl.tests.test_auto_FEAT",
            "nipype.interfaces.fsl.tests.test_auto_FEATModel",
            "nipype.interfaces.fsl.tests.test_auto_FEATRegister",
            "nipype.interfaces.fsl.tests.test_auto_FIRST",
            "nipype.interfaces.fsl.tests.test_auto_FLAMEO",
            "nipype.interfaces.fsl.tests.test_auto_FLIRT",
            "nipype.interfaces.fsl.tests.test_auto_FNIRT",
            "nipype.interfaces.fsl.tests.test_auto_FSLCommand",
            "nipype.interfaces.fsl.tests.test_auto_FSLXCommand",
            "nipype.interfaces.fsl.tests.test_auto_FUGUE",
            "nipype.interfaces.fsl.tests.test_auto_FeatureExtractor",
            "nipype.interfaces.fsl.tests.test_auto_FilterRegressor",
            "nipype.interfaces.fsl.tests.test_auto_FindTheBiggest",
            "nipype.interfaces.fsl.tests.test_auto_GLM",
            "nipype.interfaces.fsl.tests.test_auto_ICA_AROMA",
            "nipype.interfaces.fsl.tests.test_auto_ImageMaths",
            "nipype.interfaces.fsl.tests.test_auto_ImageMeants",
            "nipype.interfaces.fsl.tests.test_auto_ImageStats",
            "nipype.interfaces.fsl.tests.test_auto_InvWarp",
            "nipype.interfaces.fsl.tests.test_auto_IsotropicSmooth",
            "nipype.interfaces.fsl.tests.test_auto_L2Model",
            "nipype.interfaces.fsl.tests.test_auto_Level1Design",
            "nipype.interfaces.fsl.tests.test_auto_MCFLIRT",
            "nipype.interfaces.fsl.tests.test_auto_MELODIC",
            "nipype.interfaces.fsl.tests.test_auto_MakeDyadicVectors",
            "nipype.interfaces.fsl.tests.test_auto_MathsCommand",
            "nipype.interfaces.fsl.tests.test_auto_MaxImage",
            "nipype.interfaces.fsl.tests.test_auto_MaxnImage",
            "nipype.interfaces.fsl.tests.test_auto_MeanImage",
            "nipype.interfaces.fsl.tests.test_auto_MedianImage",
            "nipype.interfaces.fsl.tests.test_auto_Merge",
            "nipype.interfaces.fsl.tests.test_auto_MinImage",
            "nipype.interfaces.fsl.tests.test_auto_MotionOutliers",
            "nipype.interfaces.fsl.tests.test_auto_MultiImageMaths",
            "nipype.interfaces.fsl.tests.test_auto_MultipleRegressDesign",
            "nipype.interfaces.fsl.tests.test_auto_Overlay",
            "nipype.interfaces.fsl.tests.test_auto_PRELUDE",
            "nipype.interfaces.fsl.tests.test_auto_PercentileImage",
            "nipype.interfaces.fsl.tests.test_auto_PlotMotionParams",
            "nipype.interfaces.fsl.tests.test_auto_PlotTimeSeries",
            "nipype.interfaces.fsl.tests.test_auto_PowerSpectrum",
            "nipype.interfaces.fsl.tests.test_auto_PrepareFieldmap",
            "nipype.interfaces.fsl.tests.test_auto_ProbTrackX",
            "nipype.interfaces.fsl.tests.test_auto_ProbTrackX2",
            "nipype.interfaces.fsl.tests.test_auto_ProjThresh",
            "nipype.interfaces.fsl.tests.test_auto_Randomise",
            "nipype.interfaces.fsl.tests.test_auto_Reorient2Std",
            "nipype.interfaces.fsl.tests.test_auto_RobustFOV",
            "nipype.interfaces.fsl.tests.test_auto_SMM",
            "nipype.interfaces.fsl.tests.test_auto_SUSAN",
            "nipype.interfaces.fsl.tests.test_auto_SigLoss",
            "nipype.interfaces.fsl.tests.test_auto_SliceTimer",
            "nipype.interfaces.fsl.tests.test_auto_Slicer",
            "nipype.interfaces.fsl.tests.test_auto_Smooth",
            "nipype.interfaces.fsl.tests.test_auto_SmoothEstimate",
            "nipype.interfaces.fsl.tests.test_auto_SpatialFilter",
            "nipype.interfaces.fsl.tests.test_auto_Split",
            "nipype.interfaces.fsl.tests.test_auto_StdImage",
            "nipype.interfaces.fsl.tests.test_auto_SwapDimensions",
            "nipype.interfaces.fsl.tests.test_auto_TOPUP",
            "nipype.interfaces.fsl.tests.test_auto_TemporalFilter",
            "nipype.interfaces.fsl.tests.test_auto_Threshold",
            "nipype.interfaces.fsl.tests.test_auto_TractSkeleton",
            "nipype.interfaces.fsl.tests.test_auto_Training",
            "nipype.interfaces.fsl.tests.test_auto_TrainingSetCreator",
            "nipype.interfaces.fsl.tests.test_auto_UnaryMaths",
            "nipype.interfaces.fsl.tests.test_auto_VecReg",
            "nipype.interfaces.fsl.tests.test_auto_WarpPoints",
            "nipype.interfaces.fsl.tests.test_auto_WarpPointsToStd",
            "nipype.interfaces.fsl.tests.test_auto_WarpUtils",
            "nipype.interfaces.fsl.tests.test_auto_XFibres5",
            "nipype.interfaces.fsl.tests.test_base",
            "nipype.interfaces.fsl.tests.test_dti",
            "nipype.interfaces.fsl.tests.test_epi",
            "nipype.interfaces.fsl.tests.test_maths",
            "nipype.interfaces.fsl.tests.test_model",
            "nipype.interfaces.fsl.tests.test_preprocess",
            "nipype.interfaces.fsl.tests.test_utils",
            "nipype.interfaces.fsl.utils",
            "nipype.interfaces.io",
            "nipype.interfaces.matlab",
            "nipype.interfaces.meshfix",
            "nipype.interfaces.minc",
            "nipype.interfaces.minc.base",
            "nipype.interfaces.minc.minc",
            "nipype.interfaces.minc.testdata",
            "nipype.interfaces.minc.tests",
            "nipype.interfaces.minc.tests.test_auto_Average",
            "nipype.interfaces.minc.tests.test_auto_BBox",
            "nipype.interfaces.minc.tests.test_auto_Beast",
            "nipype.interfaces.minc.tests.test_auto_BestLinReg",
            "nipype.interfaces.minc.tests.test_auto_BigAverage",
            "nipype.interfaces.minc.tests.test_auto_Blob",
            "nipype.interfaces.minc.tests.test_auto_Blur",
            "nipype.interfaces.minc.tests.test_auto_Calc",
            "nipype.interfaces.minc.tests.test_auto_Convert",
            "nipype.interfaces.minc.tests.test_auto_Copy",
            "nipype.interfaces.minc.tests.test_auto_Dump",
            "nipype.interfaces.minc.tests.test_auto_Extract",
            "nipype.interfaces.minc.tests.test_auto_Gennlxfm",
            "nipype.interfaces.minc.tests.test_auto_Math",
            "nipype.interfaces.minc.tests.test_auto_NlpFit",
            "nipype.interfaces.minc.tests.test_auto_Norm",
            "nipype.interfaces.minc.tests.test_auto_Pik",
            "nipype.interfaces.minc.tests.test_auto_Resample",
            "nipype.interfaces.minc.tests.test_auto_Reshape",
            "nipype.interfaces.minc.tests.test_auto_ToEcat",
            "nipype.interfaces.minc.tests.test_auto_ToRaw",
            "nipype.interfaces.minc.tests.test_auto_VolSymm",
            "nipype.interfaces.minc.tests.test_auto_Volcentre",
            "nipype.interfaces.minc.tests.test_auto_Voliso",
            "nipype.interfaces.minc.tests.test_auto_Volpad",
            "nipype.interfaces.minc.tests.test_auto_XfmAvg",
            "nipype.interfaces.minc.tests.test_auto_XfmConcat",
            "nipype.interfaces.minc.tests.test_auto_XfmInvert",
            "nipype.interfaces.mipav",
            "nipype.interfaces.mipav.developer",
            "nipype.interfaces.mipav.generate_classes",
            "nipype.interfaces.mipav.tests",
            "nipype.interfaces.mipav.tests.test_auto_JistBrainMgdmSegmentation",
            "nipype.interfaces.mipav.tests.test_auto_JistBrainMp2rageDuraEstimation",
            "nipype.interfaces.mipav.tests.test_auto_JistBrainMp2rageSkullStripping",
            "nipype.interfaces.mipav.tests.test_auto_JistBrainPartialVolumeFilter",
            "nipype.interfaces.mipav.tests.test_auto_JistCortexSurfaceMeshInflation",
            "nipype.interfaces.mipav.tests.test_auto_JistIntensityMp2rageMasking",
            "nipype.interfaces.mipav.tests.test_auto_JistLaminarProfileCalculator",
            "nipype.interfaces.mipav.tests.test_auto_JistLaminarProfileGeometry",
            "nipype.interfaces.mipav.tests.test_auto_JistLaminarProfileSampling",
            "nipype.interfaces.mipav.tests.test_auto_JistLaminarROIAveraging",
            "nipype.interfaces.mipav.tests.test_auto_JistLaminarVolumetricLayering",
            "nipype.interfaces.mipav.tests.test_auto_MedicAlgorithmImageCalculator",
            "nipype.interfaces.mipav.tests.test_auto_MedicAlgorithmLesionToads",
            "nipype.interfaces.mipav.tests.test_auto_MedicAlgorithmMipavReorient",
            "nipype.interfaces.mipav.tests.test_auto_MedicAlgorithmN3",
            "nipype.interfaces.mipav.tests.test_auto_MedicAlgorithmSPECTRE2010",
            "nipype.interfaces.mipav.tests.test_auto_MedicAlgorithmThresholdToBinaryMask",
            "nipype.interfaces.mipav.tests.test_auto_RandomVol",
            "nipype.interfaces.mne",
            "nipype.interfaces.mne.base",
            "nipype.interfaces.mne.tests",
            "nipype.interfaces.mne.tests.test_auto_WatershedBEM",
            "nipype.interfaces.mrtrix",
            "nipype.interfaces.mrtrix.convert",
            "nipype.interfaces.mrtrix.preprocess",
            "nipype.interfaces.mrtrix.tensors",
            "nipype.interfaces.mrtrix.tests",
            "nipype.interfaces.mrtrix.tests.test_auto_ConstrainedSphericalDeconvolution",
            "nipype.interfaces.mrtrix.tests.test_auto_DWI2SphericalHarmonicsImage",
            "nipype.interfaces.mrtrix.tests.test_auto_DWI2Tensor",
            "nipype.interfaces.mrtrix.tests.test_auto_DiffusionTensorStreamlineTrack",
            "nipype.interfaces.mrtrix.tests.test_auto_Directions2Amplitude",
            "nipype.interfaces.mrtrix.tests.test_auto_Erode",
            "nipype.interfaces.mrtrix.tests.test_auto_EstimateResponseForSH",
            "nipype.interfaces.mrtrix.tests.test_auto_FSL2MRTrix",
            "nipype.interfaces.mrtrix.tests.test_auto_FilterTracks",
            "nipype.interfaces.mrtrix.tests.test_auto_FindShPeaks",
            "nipype.interfaces.mrtrix.tests.test_auto_GenerateDirections",
            "nipype.interfaces.mrtrix.tests.test_auto_GenerateWhiteMatterMask",
            "nipype.interfaces.mrtrix.tests.test_auto_MRConvert",
            "nipype.interfaces.mrtrix.tests.test_auto_MRMultiply",
            "nipype.interfaces.mrtrix.tests.test_auto_MRTransform",
            "nipype.interfaces.mrtrix.tests.test_auto_MRTrix2TrackVis",
            "nipype.interfaces.mrtrix.tests.test_auto_MRTrixInfo",
            "nipype.interfaces.mrtrix.tests.test_auto_MRTrixViewer",
            "nipype.interfaces.mrtrix.tests.test_auto_MedianFilter3D",
            "nipype.interfaces.mrtrix.tests.test_auto_ProbabilisticSphericallyDeconvolutedStreamlineTrack",
            "nipype.interfaces.mrtrix.tests.test_auto_SphericallyDeconvolutedStreamlineTrack",
            "nipype.interfaces.mrtrix.tests.test_auto_StreamlineTrack",
            "nipype.interfaces.mrtrix.tests.test_auto_Tensor2ApparentDiffusion",
            "nipype.interfaces.mrtrix.tests.test_auto_Tensor2FractionalAnisotropy",
            "nipype.interfaces.mrtrix.tests.test_auto_Tensor2Vector",
            "nipype.interfaces.mrtrix.tests.test_auto_Threshold",
            "nipype.interfaces.mrtrix.tests.test_auto_Tracks2Prob",
            "nipype.interfaces.mrtrix.tracking",
            "nipype.interfaces.mrtrix3",
            "nipype.interfaces.mrtrix3.base",
            "nipype.interfaces.mrtrix3.connectivity",
            "nipype.interfaces.mrtrix3.preprocess",
            "nipype.interfaces.mrtrix3.reconst",
            "nipype.interfaces.mrtrix3.tests",
            "nipype.interfaces.mrtrix3.tests.test_auto_ACTPrepareFSL",
            "nipype.interfaces.mrtrix3.tests.test_auto_BrainMask",
            "nipype.interfaces.mrtrix3.tests.test_auto_BuildConnectome",
            "nipype.interfaces.mrtrix3.tests.test_auto_ComputeTDI",
            "nipype.interfaces.mrtrix3.tests.test_auto_EstimateFOD",
            "nipype.interfaces.mrtrix3.tests.test_auto_FitTensor",
            "nipype.interfaces.mrtrix3.tests.test_auto_Generate5tt",
            "nipype.interfaces.mrtrix3.tests.test_auto_LabelConfig",
            "nipype.interfaces.mrtrix3.tests.test_auto_MRTrix3Base",
            "nipype.interfaces.mrtrix3.tests.test_auto_Mesh2PVE",
            "nipype.interfaces.mrtrix3.tests.test_auto_ReplaceFSwithFIRST",
            "nipype.interfaces.mrtrix3.tests.test_auto_ResponseSD",
            "nipype.interfaces.mrtrix3.tests.test_auto_TCK2VTK",
            "nipype.interfaces.mrtrix3.tests.test_auto_TensorMetrics",
            "nipype.interfaces.mrtrix3.tests.test_auto_Tractography",
            "nipype.interfaces.mrtrix3.tracking",
            "nipype.interfaces.mrtrix3.utils",
            "nipype.interfaces.niftyfit",
            "nipype.interfaces.niftyfit.asl",
            "nipype.interfaces.niftyfit.base",
            "nipype.interfaces.niftyfit.dwi",
            "nipype.interfaces.niftyfit.qt1",
            "nipype.interfaces.niftyfit.tests",
            "nipype.interfaces.niftyfit.tests.test_asl",
            "nipype.interfaces.niftyfit.tests.test_auto_DwiTool",
            "nipype.interfaces.niftyfit.tests.test_auto_FitAsl",
            "nipype.interfaces.niftyfit.tests.test_auto_FitDwi",
            "nipype.interfaces.niftyfit.tests.test_auto_FitQt1",
            "nipype.interfaces.niftyfit.tests.test_auto_NiftyFitCommand",
            "nipype.interfaces.niftyfit.tests.test_dwi",
            "nipype.interfaces.niftyfit.tests.test_qt1",
            "nipype.interfaces.niftyreg",
            "nipype.interfaces.niftyreg.base",
            "nipype.interfaces.niftyreg.reg",
            "nipype.interfaces.niftyreg.regutils",
            "nipype.interfaces.niftyreg.tests",
            "nipype.interfaces.niftyreg.tests.test_auto_NiftyRegCommand",
            "nipype.interfaces.niftyreg.tests.test_auto_RegAladin",
            "nipype.interfaces.niftyreg.tests.test_auto_RegAverage",
            "nipype.interfaces.niftyreg.tests.test_auto_RegF3D",
            "nipype.interfaces.niftyreg.tests.test_auto_RegJacobian",
            "nipype.interfaces.niftyreg.tests.test_auto_RegMeasure",
            "nipype.interfaces.niftyreg.tests.test_auto_RegResample",
            "nipype.interfaces.niftyreg.tests.test_auto_RegTools",
            "nipype.interfaces.niftyreg.tests.test_auto_RegTransform",
            "nipype.interfaces.niftyreg.tests.test_reg",
            "nipype.interfaces.niftyreg.tests.test_regutils",
            "nipype.interfaces.niftyseg",
            "nipype.interfaces.niftyseg.base",
            "nipype.interfaces.niftyseg.em",
            "nipype.interfaces.niftyseg.label_fusion",
            "nipype.interfaces.niftyseg.lesions",
            "nipype.interfaces.niftyseg.maths",
            "nipype.interfaces.niftyseg.patchmatch",
            "nipype.interfaces.niftyseg.stats",
            "nipype.interfaces.niftyseg.tests",
            "nipype.interfaces.niftyseg.tests.test_auto_BinaryMaths",
            "nipype.interfaces.niftyseg.tests.test_auto_BinaryMathsInteger",
            "nipype.interfaces.niftyseg.tests.test_auto_BinaryStats",
            "nipype.interfaces.niftyseg.tests.test_auto_CalcTopNCC",
            "nipype.interfaces.niftyseg.tests.test_auto_EM",
            "nipype.interfaces.niftyseg.tests.test_auto_FillLesions",
            "nipype.interfaces.niftyseg.tests.test_auto_LabelFusion",
            "nipype.interfaces.niftyseg.tests.test_auto_MathsCommand",
            "nipype.interfaces.niftyseg.tests.test_auto_Merge",
            "nipype.interfaces.niftyseg.tests.test_auto_NiftySegCommand",
            "nipype.interfaces.niftyseg.tests.test_auto_StatsCommand",
            "nipype.interfaces.niftyseg.tests.test_auto_TupleMaths",
            "nipype.interfaces.niftyseg.tests.test_auto_UnaryMaths",
            "nipype.interfaces.niftyseg.tests.test_auto_UnaryStats",
            "nipype.interfaces.niftyseg.tests.test_em_interfaces",
            "nipype.interfaces.niftyseg.tests.test_label_fusion",
            "nipype.interfaces.niftyseg.tests.test_lesions",
            "nipype.interfaces.niftyseg.tests.test_maths",
            "nipype.interfaces.niftyseg.tests.test_patchmatch",
            "nipype.interfaces.niftyseg.tests.test_stats",
            "nipype.interfaces.nilearn",
            "nipype.interfaces.nipy",
            "nipype.interfaces.nipy.model",
            "nipype.interfaces.nipy.preprocess",
            "nipype.interfaces.nipy.tests",
            "nipype.interfaces.nipy.tests.test_auto_ComputeMask",
            "nipype.interfaces.nipy.tests.test_auto_EstimateContrast",
            "nipype.interfaces.nipy.tests.test_auto_FitGLM",
            "nipype.interfaces.nipy.tests.test_auto_FmriRealign4d",
            "nipype.interfaces.nipy.tests.test_auto_Similarity",
            "nipype.interfaces.nipy.tests.test_auto_SpaceTimeRealigner",
            "nipype.interfaces.nipy.tests.test_auto_Trim",
            "nipype.interfaces.nipy.utils",
            "nipype.interfaces.nitime",
            "nipype.interfaces.nitime.analysis",
            "nipype.interfaces.nitime.tests",
            "nipype.interfaces.nitime.tests.test_auto_CoherenceAnalyzer",
            "nipype.interfaces.nitime.tests.test_nitime",
            "nipype.interfaces.petpvc",
            "nipype.interfaces.semtools",
            "nipype.interfaces.semtools.brains",
            "nipype.interfaces.semtools.brains.classify",
            "nipype.interfaces.semtools.brains.segmentation",
            "nipype.interfaces.semtools.brains.tests",
            "nipype.interfaces.semtools.brains.tests.test_auto_BRAINSPosteriorToContinuousClass",
            "nipype.interfaces.semtools.brains.tests.test_auto_BRAINSTalairach",
            "nipype.interfaces.semtools.brains.tests.test_auto_BRAINSTalairachMask",
            "nipype.interfaces.semtools.brains.tests.test_auto_GenerateEdgeMapImage",
            "nipype.interfaces.semtools.brains.tests.test_auto_GeneratePurePlugMask",
            "nipype.interfaces.semtools.brains.tests.test_auto_HistogramMatchingFilter",
            "nipype.interfaces.semtools.brains.tests.test_auto_SimilarityIndex",
            "nipype.interfaces.semtools.brains.utilities",
            "nipype.interfaces.semtools.converters",
            "nipype.interfaces.semtools.diffusion",
            "nipype.interfaces.semtools.diffusion.diffusion",
            "nipype.interfaces.semtools.diffusion.gtract",
            "nipype.interfaces.semtools.diffusion.maxcurvature",
            "nipype.interfaces.semtools.diffusion.tests",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_DWIConvert",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_compareTractInclusion",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_dtiaverage",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_dtiestim",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_dtiprocess",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_extractNrrdVectorIndex",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractAnisotropyMap",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractAverageBvalues",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractClipAnisotropy",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractCoRegAnatomy",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractConcatDwi",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractCopyImageOrientation",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractCoregBvalues",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractCostFastMarching",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractCreateGuideFiber",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractFastMarchingTracking",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractFiberTracking",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractImageConformity",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractInvertBSplineTransform",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractInvertDisplacementField",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractInvertRigidTransform",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractResampleAnisotropy",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractResampleB0",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractResampleCodeImage",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractResampleDWIInPlace",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractResampleFibers",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractTensor",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_gtractTransformToDisplacementField",
            "nipype.interfaces.semtools.diffusion.tests.test_auto_maxcurvature",
            "nipype.interfaces.semtools.diffusion.tractography",
            "nipype.interfaces.semtools.diffusion.tractography.commandlineonly",
            "nipype.interfaces.semtools.diffusion.tractography.fiberprocess",
            "nipype.interfaces.semtools.diffusion.tractography.fibertrack",
            "nipype.interfaces.semtools.diffusion.tractography.tests",
            "nipype.interfaces.semtools.diffusion.tractography.tests.test_auto_UKFTractography",
            "nipype.interfaces.semtools.diffusion.tractography.tests.test_auto_fiberprocess",
            "nipype.interfaces.semtools.diffusion.tractography.tests.test_auto_fiberstats",
            "nipype.interfaces.semtools.diffusion.tractography.tests.test_auto_fibertrack",
            "nipype.interfaces.semtools.diffusion.tractography.ukftractography",
            "nipype.interfaces.semtools.featurecreator",
            "nipype.interfaces.semtools.filtering",
            "nipype.interfaces.semtools.filtering.denoising",
            "nipype.interfaces.semtools.filtering.featuredetection",
            "nipype.interfaces.semtools.filtering.tests",
            "nipype.interfaces.semtools.filtering.tests.test_auto_CannyEdge",
            "nipype.interfaces.semtools.filtering.tests.test_auto_CannySegmentationLevelSetImageFilter",
            "nipype.interfaces.semtools.filtering.tests.test_auto_DilateImage",
            "nipype.interfaces.semtools.filtering.tests.test_auto_DilateMask",
            "nipype.interfaces.semtools.filtering.tests.test_auto_DistanceMaps",
            "nipype.interfaces.semtools.filtering.tests.test_auto_DumpBinaryTrainingVectors",
            "nipype.interfaces.semtools.filtering.tests.test_auto_ErodeImage",
            "nipype.interfaces.semtools.filtering.tests.test_auto_FlippedDifference",
            "nipype.interfaces.semtools.filtering.tests.test_auto_GenerateBrainClippedImage",
            "nipype.interfaces.semtools.filtering.tests.test_auto_GenerateSummedGradientImage",
            "nipype.interfaces.semtools.filtering.tests.test_auto_GenerateTestImage",
            "nipype.interfaces.semtools.filtering.tests.test_auto_GradientAnisotropicDiffusionImageFilter",
            "nipype.interfaces.semtools.filtering.tests.test_auto_HammerAttributeCreator",
            "nipype.interfaces.semtools.filtering.tests.test_auto_NeighborhoodMean",
            "nipype.interfaces.semtools.filtering.tests.test_auto_NeighborhoodMedian",
            "nipype.interfaces.semtools.filtering.tests.test_auto_STAPLEAnalysis",
            "nipype.interfaces.semtools.filtering.tests.test_auto_TextureFromNoiseImageFilter",
            "nipype.interfaces.semtools.filtering.tests.test_auto_TextureMeasureFilter",
            "nipype.interfaces.semtools.filtering.tests.test_auto_UnbiasedNonLocalMeans",
            "nipype.interfaces.semtools.legacy",
            "nipype.interfaces.semtools.legacy.registration",
            "nipype.interfaces.semtools.legacy.tests",
            "nipype.interfaces.semtools.legacy.tests.test_auto_scalartransform",
            "nipype.interfaces.semtools.registration",
            "nipype.interfaces.semtools.registration.brainsfit",
            "nipype.interfaces.semtools.registration.brainsresample",
            "nipype.interfaces.semtools.registration.brainsresize",
            "nipype.interfaces.semtools.registration.specialized",
            "nipype.interfaces.semtools.registration.tests",
            "nipype.interfaces.semtools.registration.tests.test_auto_BRAINSDemonWarp",
            "nipype.interfaces.semtools.registration.tests.test_auto_BRAINSFit",
            "nipype.interfaces.semtools.registration.tests.test_auto_BRAINSResample",
            "nipype.interfaces.semtools.registration.tests.test_auto_BRAINSResize",
            "nipype.interfaces.semtools.registration.tests.test_auto_BRAINSTransformFromFiducials",
            "nipype.interfaces.semtools.registration.tests.test_auto_VBRAINSDemonWarp",
            "nipype.interfaces.semtools.segmentation",
            "nipype.interfaces.semtools.segmentation.specialized",
            "nipype.interfaces.semtools.segmentation.tests",
            "nipype.interfaces.semtools.segmentation.tests.test_auto_BRAINSABC",
            "nipype.interfaces.semtools.segmentation.tests.test_auto_BRAINSConstellationDetector",
            "nipype.interfaces.semtools.segmentation.tests.test_auto_BRAINSCreateLabelMapFromProbabilityMaps",
            "nipype.interfaces.semtools.segmentation.tests.test_auto_BRAINSCut",
            "nipype.interfaces.semtools.segmentation.tests.test_auto_BRAINSMultiSTAPLE",
            "nipype.interfaces.semtools.segmentation.tests.test_auto_BRAINSROIAuto",
            "nipype.interfaces.semtools.segmentation.tests.test_auto_BinaryMaskEditorBasedOnLandmarks",
            "nipype.interfaces.semtools.segmentation.tests.test_auto_ESLR",
            "nipype.interfaces.semtools.testing",
            "nipype.interfaces.semtools.testing.featuredetection",
            "nipype.interfaces.semtools.testing.generateaveragelmkfile",
            "nipype.interfaces.semtools.testing.landmarkscompare",
            "nipype.interfaces.semtools.tests",
            "nipype.interfaces.semtools.tests.test_auto_DWICompare",
            "nipype.interfaces.semtools.tests.test_auto_DWISimpleCompare",
            "nipype.interfaces.semtools.tests.test_auto_GenerateCsfClippedFromClassifiedImage",
            "nipype.interfaces.semtools.utilities",
            "nipype.interfaces.semtools.utilities.brains",
            "nipype.interfaces.semtools.utilities.tests",
            "nipype.interfaces.semtools.utilities.tests.test_auto_BRAINSAlignMSP",
            "nipype.interfaces.semtools.utilities.tests.test_auto_BRAINSClipInferior",
            "nipype.interfaces.semtools.utilities.tests.test_auto_BRAINSConstellationModeler",
            "nipype.interfaces.semtools.utilities.tests.test_auto_BRAINSEyeDetector",
            "nipype.interfaces.semtools.utilities.tests.test_auto_BRAINSInitializedControlPoints",
            "nipype.interfaces.semtools.utilities.tests.test_auto_BRAINSLandmarkInitializer",
            "nipype.interfaces.semtools.utilities.tests.test_auto_BRAINSLinearModelerEPCA",
            "nipype.interfaces.semtools.utilities.tests.test_auto_BRAINSLmkTransform",
            "nipype.interfaces.semtools.utilities.tests.test_auto_BRAINSMush",
            "nipype.interfaces.semtools.utilities.tests.test_auto_BRAINSSnapShotWriter",
            "nipype.interfaces.semtools.utilities.tests.test_auto_BRAINSTransformConvert",
            "nipype.interfaces.semtools.utilities.tests.test_auto_BRAINSTrimForegroundInDirection",
            "nipype.interfaces.semtools.utilities.tests.test_auto_CleanUpOverlapLabels",
            "nipype.interfaces.semtools.utilities.tests.test_auto_FindCenterOfBrain",
            "nipype.interfaces.semtools.utilities.tests.test_auto_GenerateLabelMapFromProbabilityMap",
            "nipype.interfaces.semtools.utilities.tests.test_auto_ImageRegionPlotter",
            "nipype.interfaces.semtools.utilities.tests.test_auto_JointHistogram",
            "nipype.interfaces.semtools.utilities.tests.test_auto_ShuffleVectorsModule",
            "nipype.interfaces.semtools.utilities.tests.test_auto_fcsv_to_hdf5",
            "nipype.interfaces.semtools.utilities.tests.test_auto_insertMidACPCpoint",
            "nipype.interfaces.semtools.utilities.tests.test_auto_landmarksConstellationAligner",
            "nipype.interfaces.semtools.utilities.tests.test_auto_landmarksConstellationWeights",
            "nipype.interfaces.setup",
            "nipype.interfaces.slicer",
            "nipype.interfaces.slicer.base",
            "nipype.interfaces.slicer.converters",
            "nipype.interfaces.slicer.diffusion",
            "nipype.interfaces.slicer.diffusion.diffusion",
            "nipype.interfaces.slicer.diffusion.tests",
            "nipype.interfaces.slicer.diffusion.tests.test_auto_DTIexport",
            "nipype.interfaces.slicer.diffusion.tests.test_auto_DTIimport",
            "nipype.interfaces.slicer.diffusion.tests.test_auto_DWIJointRicianLMMSEFilter",
            "nipype.interfaces.slicer.diffusion.tests.test_auto_DWIRicianLMMSEFilter",
            "nipype.interfaces.slicer.diffusion.tests.test_auto_DWIToDTIEstimation",
            "nipype.interfaces.slicer.diffusion.tests.test_auto_DiffusionTensorScalarMeasurements",
            "nipype.interfaces.slicer.diffusion.tests.test_auto_DiffusionWeightedVolumeMasking",
            "nipype.interfaces.slicer.diffusion.tests.test_auto_ResampleDTIVolume",
            "nipype.interfaces.slicer.diffusion.tests.test_auto_TractographyLabelMapSeeding",
            "nipype.interfaces.slicer.filtering",
            "nipype.interfaces.slicer.filtering.arithmetic",
            "nipype.interfaces.slicer.filtering.checkerboardfilter",
            "nipype.interfaces.slicer.filtering.denoising",
            "nipype.interfaces.slicer.filtering.extractskeleton",
            "nipype.interfaces.slicer.filtering.histogrammatching",
            "nipype.interfaces.slicer.filtering.imagelabelcombine",
            "nipype.interfaces.slicer.filtering.morphology",
            "nipype.interfaces.slicer.filtering.n4itkbiasfieldcorrection",
            "nipype.interfaces.slicer.filtering.resamplescalarvectordwivolume",
            "nipype.interfaces.slicer.filtering.tests",
            "nipype.interfaces.slicer.filtering.tests.test_auto_AddScalarVolumes",
            "nipype.interfaces.slicer.filtering.tests.test_auto_CastScalarVolume",
            "nipype.interfaces.slicer.filtering.tests.test_auto_CheckerBoardFilter",
            "nipype.interfaces.slicer.filtering.tests.test_auto_CurvatureAnisotropicDiffusion",
            "nipype.interfaces.slicer.filtering.tests.test_auto_ExtractSkeleton",
            "nipype.interfaces.slicer.filtering.tests.test_auto_GaussianBlurImageFilter",
            "nipype.interfaces.slicer.filtering.tests.test_auto_GradientAnisotropicDiffusion",
            "nipype.interfaces.slicer.filtering.tests.test_auto_GrayscaleFillHoleImageFilter",
            "nipype.interfaces.slicer.filtering.tests.test_auto_GrayscaleGrindPeakImageFilter",
            "nipype.interfaces.slicer.filtering.tests.test_auto_HistogramMatching",
            "nipype.interfaces.slicer.filtering.tests.test_auto_ImageLabelCombine",
            "nipype.interfaces.slicer.filtering.tests.test_auto_MaskScalarVolume",
            "nipype.interfaces.slicer.filtering.tests.test_auto_MedianImageFilter",
            "nipype.interfaces.slicer.filtering.tests.test_auto_MultiplyScalarVolumes",
            "nipype.interfaces.slicer.filtering.tests.test_auto_N4ITKBiasFieldCorrection",
            "nipype.interfaces.slicer.filtering.tests.test_auto_ResampleScalarVectorDWIVolume",
            "nipype.interfaces.slicer.filtering.tests.test_auto_SubtractScalarVolumes",
            "nipype.interfaces.slicer.filtering.tests.test_auto_ThresholdScalarVolume",
            "nipype.interfaces.slicer.filtering.tests.test_auto_VotingBinaryHoleFillingImageFilter",
            "nipype.interfaces.slicer.filtering.thresholdscalarvolume",
            "nipype.interfaces.slicer.filtering.votingbinaryholefillingimagefilter",
            "nipype.interfaces.slicer.generate_classes",
            "nipype.interfaces.slicer.legacy",
            "nipype.interfaces.slicer.legacy.converters",
            "nipype.interfaces.slicer.legacy.diffusion",
            "nipype.interfaces.slicer.legacy.diffusion.denoising",
            "nipype.interfaces.slicer.legacy.diffusion.tests",
            "nipype.interfaces.slicer.legacy.diffusion.tests.test_auto_DWIUnbiasedNonLocalMeansFilter",
            "nipype.interfaces.slicer.legacy.filtering",
            "nipype.interfaces.slicer.legacy.registration",
            "nipype.interfaces.slicer.legacy.segmentation",
            "nipype.interfaces.slicer.legacy.tests",
            "nipype.interfaces.slicer.legacy.tests.test_auto_AffineRegistration",
            "nipype.interfaces.slicer.legacy.tests.test_auto_BSplineDeformableRegistration",
            "nipype.interfaces.slicer.legacy.tests.test_auto_BSplineToDeformationField",
            "nipype.interfaces.slicer.legacy.tests.test_auto_ExpertAutomatedRegistration",
            "nipype.interfaces.slicer.legacy.tests.test_auto_LinearRegistration",
            "nipype.interfaces.slicer.legacy.tests.test_auto_MultiResolutionAffineRegistration",
            "nipype.interfaces.slicer.legacy.tests.test_auto_OtsuThresholdImageFilter",
            "nipype.interfaces.slicer.legacy.tests.test_auto_OtsuThresholdSegmentation",
            "nipype.interfaces.slicer.legacy.tests.test_auto_ResampleScalarVolume",
            "nipype.interfaces.slicer.legacy.tests.test_auto_RigidRegistration",
            "nipype.interfaces.slicer.quantification",
            "nipype.interfaces.slicer.quantification.changequantification",
            "nipype.interfaces.slicer.quantification.petstandarduptakevaluecomputation",
            "nipype.interfaces.slicer.quantification.tests",
            "nipype.interfaces.slicer.quantification.tests.test_auto_IntensityDifferenceMetric",
            "nipype.interfaces.slicer.quantification.tests.test_auto_PETStandardUptakeValueComputation",
            "nipype.interfaces.slicer.registration",
            "nipype.interfaces.slicer.registration.brainsfit",
            "nipype.interfaces.slicer.registration.brainsresample",
            "nipype.interfaces.slicer.registration.specialized",
            "nipype.interfaces.slicer.registration.tests",
            "nipype.interfaces.slicer.registration.tests.test_auto_ACPCTransform",
            "nipype.interfaces.slicer.registration.tests.test_auto_BRAINSDemonWarp",
            "nipype.interfaces.slicer.registration.tests.test_auto_BRAINSFit",
            "nipype.interfaces.slicer.registration.tests.test_auto_BRAINSResample",
            "nipype.interfaces.slicer.registration.tests.test_auto_FiducialRegistration",
            "nipype.interfaces.slicer.registration.tests.test_auto_VBRAINSDemonWarp",
            "nipype.interfaces.slicer.segmentation",
            "nipype.interfaces.slicer.segmentation.simpleregiongrowingsegmentation",
            "nipype.interfaces.slicer.segmentation.specialized",
            "nipype.interfaces.slicer.segmentation.tests",
            "nipype.interfaces.slicer.segmentation.tests.test_auto_BRAINSROIAuto",
            "nipype.interfaces.slicer.segmentation.tests.test_auto_EMSegmentCommandLine",
            "nipype.interfaces.slicer.segmentation.tests.test_auto_RobustStatisticsSegmenter",
            "nipype.interfaces.slicer.segmentation.tests.test_auto_SimpleRegionGrowingSegmentation",
            "nipype.interfaces.slicer.surface",
            "nipype.interfaces.slicer.tests",
            "nipype.interfaces.slicer.tests.test_auto_DicomToNrrdConverter",
            "nipype.interfaces.slicer.tests.test_auto_EMSegmentTransformToNewFormat",
            "nipype.interfaces.slicer.tests.test_auto_GrayscaleModelMaker",
            "nipype.interfaces.slicer.tests.test_auto_LabelMapSmoothing",
            "nipype.interfaces.slicer.tests.test_auto_MergeModels",
            "nipype.interfaces.slicer.tests.test_auto_ModelMaker",
            "nipype.interfaces.slicer.tests.test_auto_ModelToLabelMap",
            "nipype.interfaces.slicer.tests.test_auto_OrientScalarVolume",
            "nipype.interfaces.slicer.tests.test_auto_ProbeVolumeWithModel",
            "nipype.interfaces.slicer.tests.test_auto_SlicerCommandLine",
            "nipype.interfaces.slicer.utilities",
            "nipype.interfaces.spm",
            "nipype.interfaces.spm.base",
            "nipype.interfaces.spm.model",
            "nipype.interfaces.spm.preprocess",
            "nipype.interfaces.spm.tests",
            "nipype.interfaces.spm.tests.test_auto_Analyze2nii",
            "nipype.interfaces.spm.tests.test_auto_ApplyDeformations",
            "nipype.interfaces.spm.tests.test_auto_ApplyInverseDeformation",
            "nipype.interfaces.spm.tests.test_auto_ApplyTransform",
            "nipype.interfaces.spm.tests.test_auto_CalcCoregAffine",
            "nipype.interfaces.spm.tests.test_auto_Coregister",
            "nipype.interfaces.spm.tests.test_auto_CreateWarped",
            "nipype.interfaces.spm.tests.test_auto_DARTEL",
            "nipype.interfaces.spm.tests.test_auto_DARTELNorm2MNI",
            "nipype.interfaces.spm.tests.test_auto_DicomImport",
            "nipype.interfaces.spm.tests.test_auto_EstimateContrast",
            "nipype.interfaces.spm.tests.test_auto_EstimateModel",
            "nipype.interfaces.spm.tests.test_auto_FactorialDesign",
            "nipype.interfaces.spm.tests.test_auto_Level1Design",
            "nipype.interfaces.spm.tests.test_auto_MultipleRegressionDesign",
            "nipype.interfaces.spm.tests.test_auto_NewSegment",
            "nipype.interfaces.spm.tests.test_auto_Normalize",
            "nipype.interfaces.spm.tests.test_auto_Normalize12",
            "nipype.interfaces.spm.tests.test_auto_OneSampleTTestDesign",
            "nipype.interfaces.spm.tests.test_auto_PairedTTestDesign",
            "nipype.interfaces.spm.tests.test_auto_Realign",
            "nipype.interfaces.spm.tests.test_auto_Reslice",
            "nipype.interfaces.spm.tests.test_auto_ResliceToReference",
            "nipype.interfaces.spm.tests.test_auto_SPMCommand",
            "nipype.interfaces.spm.tests.test_auto_Segment",
            "nipype.interfaces.spm.tests.test_auto_SliceTiming",
            "nipype.interfaces.spm.tests.test_auto_Smooth",
            "nipype.interfaces.spm.tests.test_auto_Threshold",
            "nipype.interfaces.spm.tests.test_auto_ThresholdStatistics",
            "nipype.interfaces.spm.tests.test_auto_TwoSampleTTestDesign",
            "nipype.interfaces.spm.tests.test_auto_VBMSegment",
            "nipype.interfaces.spm.tests.test_base",
            "nipype.interfaces.spm.tests.test_model",
            "nipype.interfaces.spm.tests.test_preprocess",
            "nipype.interfaces.spm.tests.test_utils",
            "nipype.interfaces.spm.utils",
            "nipype.interfaces.tests",
            "nipype.interfaces.tests.test_auto_BaseInterface",
            "nipype.interfaces.tests.test_auto_Bru2",
            "nipype.interfaces.tests.test_auto_C3dAffineTool",
            "nipype.interfaces.tests.test_auto_CommandLine",
            "nipype.interfaces.tests.test_auto_CopyMeta",
            "nipype.interfaces.tests.test_auto_DataFinder",
            "nipype.interfaces.tests.test_auto_DataGrabber",
            "nipype.interfaces.tests.test_auto_DataSink",
            "nipype.interfaces.tests.test_auto_Dcm2nii",
            "nipype.interfaces.tests.test_auto_Dcm2niix",
            "nipype.interfaces.tests.test_auto_DcmStack",
            "nipype.interfaces.tests.test_auto_FreeSurferSource",
            "nipype.interfaces.tests.test_auto_GroupAndStack",
            "nipype.interfaces.tests.test_auto_IOBase",
            "nipype.interfaces.tests.test_auto_JSONFileGrabber",
            "nipype.interfaces.tests.test_auto_JSONFileSink",
            "nipype.interfaces.tests.test_auto_LookupMeta",
            "nipype.interfaces.tests.test_auto_MatlabCommand",
            "nipype.interfaces.tests.test_auto_MergeNifti",
            "nipype.interfaces.tests.test_auto_MeshFix",
            "nipype.interfaces.tests.test_auto_MpiCommandLine",
            "nipype.interfaces.tests.test_auto_MySQLSink",
            "nipype.interfaces.tests.test_auto_NiftiGeneratorBase",
            "nipype.interfaces.tests.test_auto_PETPVC",
            "nipype.interfaces.tests.test_auto_S3DataGrabber",
            "nipype.interfaces.tests.test_auto_SEMLikeCommandLine",
            "nipype.interfaces.tests.test_auto_SQLiteSink",
            "nipype.interfaces.tests.test_auto_SSHDataGrabber",
            "nipype.interfaces.tests.test_auto_SelectFiles",
            "nipype.interfaces.tests.test_auto_SignalExtraction",
            "nipype.interfaces.tests.test_auto_SlicerCommandLine",
            "nipype.interfaces.tests.test_auto_SplitNifti",
            "nipype.interfaces.tests.test_auto_StdOutCommandLine",
            "nipype.interfaces.tests.test_auto_XNATSink",
            "nipype.interfaces.tests.test_auto_XNATSource",
            "nipype.interfaces.tests.test_base",
            "nipype.interfaces.tests.test_io",
            "nipype.interfaces.tests.test_matlab",
            "nipype.interfaces.tests.test_nilearn",
            "nipype.interfaces.tests.test_runtime_profiler",
            "nipype.interfaces.traits_extension",
            "nipype.interfaces.utility",
            "nipype.interfaces.utility.base",
            "nipype.interfaces.utility.csv",
            "nipype.interfaces.utility.tests",
            "nipype.interfaces.utility.tests.test_auto_AssertEqual",
            "nipype.interfaces.utility.tests.test_auto_CSVReader",
            "nipype.interfaces.utility.tests.test_auto_Function",
            "nipype.interfaces.utility.tests.test_auto_IdentityInterface",
            "nipype.interfaces.utility.tests.test_auto_Merge",
            "nipype.interfaces.utility.tests.test_auto_Rename",
            "nipype.interfaces.utility.tests.test_auto_Select",
            "nipype.interfaces.utility.tests.test_auto_Split",
            "nipype.interfaces.utility.tests.test_base",
            "nipype.interfaces.utility.tests.test_csv",
            "nipype.interfaces.utility.tests.test_wrappers",
            "nipype.interfaces.utility.wrappers",
            "nipype.interfaces.vista",
            "nipype.interfaces.vista.tests",
            "nipype.interfaces.vista.tests.test_auto_Vnifti2Image",
            "nipype.interfaces.vista.tests.test_auto_VtoMat",
            "nipype.interfaces.vista.vista",
            "nipype.interfaces.vtkbase",
            "nipype.pipeline",
            "nipype.pipeline.engine",
            "nipype.pipeline.engine.base",
            "nipype.pipeline.engine.nodes",
            "nipype.pipeline.engine.tests",
            "nipype.pipeline.engine.tests.test_engine",
            "nipype.pipeline.engine.tests.test_join",
            "nipype.pipeline.engine.tests.test_utils",
            "nipype.pipeline.engine.utils",
            "nipype.pipeline.engine.workflows",
            "nipype.pipeline.plugins",
            "nipype.pipeline.plugins.base",
            "nipype.pipeline.plugins.callback_log",
            "nipype.pipeline.plugins.condor",
            "nipype.pipeline.plugins.dagman",
            "nipype.pipeline.plugins.debug",
            "nipype.pipeline.plugins.ipython",
            "nipype.pipeline.plugins.ipythonx",
            "nipype.pipeline.plugins.linear",
            "nipype.pipeline.plugins.lsf",
            "nipype.pipeline.plugins.multiproc",
            "nipype.pipeline.plugins.oar",
            "nipype.pipeline.plugins.pbs",
            "nipype.pipeline.plugins.pbsgraph",
            "nipype.pipeline.plugins.semaphore_singleton",
            "nipype.pipeline.plugins.sge",
            "nipype.pipeline.plugins.sgegraph",
            "nipype.pipeline.plugins.slurm",
            "nipype.pipeline.plugins.slurmgraph",
            "nipype.pipeline.plugins.somaflow",
            "nipype.pipeline.plugins.tests",
            "nipype.pipeline.plugins.tests.test_base",
            "nipype.pipeline.plugins.tests.test_callback",
            "nipype.pipeline.plugins.tests.test_debug",
            "nipype.pipeline.plugins.tests.test_linear",
            "nipype.pipeline.plugins.tests.test_multiproc",
            "nipype.pipeline.plugins.tests.test_multiproc_nondaemon",
            "nipype.pipeline.plugins.tests.test_oar",
            "nipype.pipeline.plugins.tests.test_pbs",
            "nipype.pipeline.plugins.tests.test_somaflow",
            "nipype.pkg_info",
            "nipype.refs",
            "nipype.scripts",
            "nipype.scripts.cli",
            "nipype.scripts.crash_files",
            "nipype.scripts.instance",
            "nipype.scripts.utils",
            "nipype.sphinxext",
            "nipype.sphinxext.plot_workflow",
            "nipype.testing",
            "nipype.testing.decorators",
            "nipype.testing.fixtures",
            "nipype.testing.utils",
            "nipype.tests",
            "nipype.tests.test_nipype",
            "nipype.utils",
            "nipype.utils.config",
            "nipype.utils.docparse",
            "nipype.utils.draw_gantt_chart",
            "nipype.utils.filemanip",
            "nipype.utils.logger",
            "nipype.utils.matlabtools",
            "nipype.utils.misc",
            "nipype.utils.nipype2boutiques",
            "nipype.utils.nipype_cmd",
            "nipype.utils.onetime",
            "nipype.utils.provenance",
            "nipype.utils.spm_docs",
            "nipype.utils.tests",
            "nipype.utils.tests.test_cmd",
            "nipype.utils.tests.test_docparse",
            "nipype.utils.tests.test_filemanip",
            "nipype.utils.tests.test_misc",
            "nipype.utils.tests.test_provenance",
            "nipype.utils.tmpdirs",
            "nipype.workflows",
            "nipype.workflows.data",
            "nipype.workflows.dmri",
            "nipype.workflows.dmri.camino",
            "nipype.workflows.dmri.camino.connectivity_mapping",
            "nipype.workflows.dmri.camino.diffusion",
            "nipype.workflows.dmri.camino.group_connectivity",
            "nipype.workflows.dmri.connectivity",
            "nipype.workflows.dmri.connectivity.group_connectivity",
            "nipype.workflows.dmri.connectivity.nx",
            "nipype.workflows.dmri.dipy",
            "nipype.workflows.dmri.dipy.denoise",
            "nipype.workflows.dmri.fsl",
            "nipype.workflows.dmri.fsl.artifacts",
            "nipype.workflows.dmri.fsl.dti",
            "nipype.workflows.dmri.fsl.epi",
            "nipype.workflows.dmri.fsl.tbss",
            "nipype.workflows.dmri.fsl.tests",
            "nipype.workflows.dmri.fsl.tests.test_dti",
            "nipype.workflows.dmri.fsl.tests.test_epi",
            "nipype.workflows.dmri.fsl.tests.test_tbss",
            "nipype.workflows.dmri.fsl.utils",
            "nipype.workflows.dmri.mrtrix",
            "nipype.workflows.dmri.mrtrix.connectivity_mapping",
            "nipype.workflows.dmri.mrtrix.diffusion",
            "nipype.workflows.dmri.mrtrix.group_connectivity",
            "nipype.workflows.fmri",
            "nipype.workflows.fmri.fsl",
            "nipype.workflows.fmri.fsl.estimate",
            "nipype.workflows.fmri.fsl.preprocess",
            "nipype.workflows.fmri.fsl.tests",
            "nipype.workflows.fmri.spm",
            "nipype.workflows.fmri.spm.estimate",
            "nipype.workflows.fmri.spm.preprocess",
            "nipype.workflows.fmri.spm.tests",
            "nipype.workflows.graph",
            "nipype.workflows.misc",
            "nipype.workflows.misc.utils",
            "nipype.workflows.rsfmri",
            "nipype.workflows.rsfmri.fsl",
            "nipype.workflows.rsfmri.fsl.resting",
            "nipype.workflows.rsfmri.fsl.tests",
            "nipype.workflows.rsfmri.fsl.tests.test_resting",
            "nipype.workflows.smri",
            "nipype.workflows.smri.ants",
            "nipype.workflows.smri.ants.ANTSBuildTemplate",
            "nipype.workflows.smri.ants.antsRegistrationBuildTemplate",
            "nipype.workflows.smri.freesurfer",
            "nipype.workflows.smri.freesurfer.autorecon1",
            "nipype.workflows.smri.freesurfer.autorecon2",
            "nipype.workflows.smri.freesurfer.autorecon3",
            "nipype.workflows.smri.freesurfer.ba_maps",
            "nipype.workflows.smri.freesurfer.bem",
            "nipype.workflows.smri.freesurfer.recon",
            "nipype.workflows.smri.freesurfer.utils",
            "nipype.workflows.smri.niftyreg",
            "nipype.workflows.smri.niftyreg.groupwise",
            "nipype.workflows.warp"
        ],
        "version": "0.13.0"
    },
    "niquery": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nirjam": {
        "cmdline": [],
        "modules": [
            "nirjam",
            "nirjam.traffic",
            "nirjam.traffic.network",
            "nirjam.ultrasonic"
        ],
        "version": "0.1.3"
    },
    "nirnaor": {
        "cmdline": [],
        "modules": [
            "nirnaor"
        ],
        "version": "1.0.0"
    },
    "nirum": {
        "cmdline": [],
        "modules": [
            "nirum",
            "nirum._compat",
            "nirum.constructs",
            "nirum.datastructures",
            "nirum.deserialize",
            "nirum.exc",
            "nirum.func",
            "nirum.rpc",
            "nirum.serialize",
            "nirum.test",
            "nirum.validate"
        ],
        "version": "0.4.1"
    },
    "nirvana": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nirvana-cli": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nirvanachow": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.2.3"
    },
    "nistbeacon": {
        "cmdline": [],
        "modules": [
            "nistbeacon",
            "nistbeacon.nistbeacon",
            "nistbeacon.nistbeaconcrypto",
            "nistbeacon.nistbeaconvalue"
        ],
        "version": "0.9.2"
    },
    "nisteag": {
        "cmdline": [],
        "modules": [
            "nisteag",
            "nisteag.entropy",
            "nisteag.errors",
            "nisteag.scripts",
            "nisteag.scripts.checkers",
            "nisteag.threats",
            "nisteag.threats.throttling",
            "nisteag.token",
            "nisteag.token.requirements",
            "nisteag.token.requirements.memorized",
            "scripts",
            "scripts.test_checkers",
            "threats",
            "threats.test_throttling",
            "token",
            "token.requirements",
            "token.requirements.test_memorized",
            "token.test_entropy"
        ],
        "version": "0.4.0"
    },
    "niteoweb.aweber": {
        "cmdline": [],
        "modules": [
            "niteoweb",
            "niteoweb.aweber",
            "niteoweb.aweber.Extensions",
            "niteoweb.aweber.Extensions.install",
            "niteoweb.aweber.aweberapi",
            "niteoweb.aweber.controlpanel",
            "niteoweb.aweber.interfaces",
            "niteoweb.aweber.testing",
            "niteoweb.aweber.tests",
            "niteoweb.aweber.tests.test_aweber",
            "niteoweb.aweber.tests.test_setup"
        ],
        "version": "0.1"
    },
    "niteoweb.click2sell": {
        "cmdline": [],
        "modules": [
            "niteoweb",
            "niteoweb.click2sell",
            "niteoweb.click2sell.browser",
            "niteoweb.click2sell.browser.click2sell",
            "niteoweb.click2sell.browser.controlpanel",
            "niteoweb.click2sell.config",
            "niteoweb.click2sell.interfaces",
            "niteoweb.click2sell.tests",
            "niteoweb.click2sell.tests.base",
            "niteoweb.click2sell.tests.test_click2sell",
            "niteoweb.click2sell.tests.test_doctest",
            "niteoweb.click2sell.tests.test_setup",
            "niteoweb.click2sell.upgrades",
            "niteoweb.click2sell.upgrades.upgrade_0_to_0400"
        ],
        "version": "0.4.5"
    },
    "niteoweb.clickbank": {
        "cmdline": [],
        "modules": [
            "niteoweb",
            "niteoweb.clickbank",
            "niteoweb.clickbank.browser",
            "niteoweb.clickbank.browser.clickbank",
            "niteoweb.clickbank.browser.configure_clickbank",
            "niteoweb.clickbank.clickbank_settings",
            "niteoweb.clickbank.config",
            "niteoweb.clickbank.interfaces",
            "niteoweb.clickbank.tests",
            "niteoweb.clickbank.tests.test_clickbank",
            "niteoweb.clickbank.tests.test_doctest",
            "niteoweb.clickbank.tests.test_setup"
        ],
        "version": "0.5.1"
    },
    "niteoweb.downloadcounter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "niteoweb.fabfile": {
        "cmdline": [],
        "modules": [
            "niteoweb",
            "niteoweb.fabfile",
            "niteoweb.fabfile.project",
            "niteoweb.fabfile.server"
        ],
        "version": "2.2.3"
    },
    "niteoweb.ipn.core": {
        "cmdline": [],
        "modules": [
            "niteoweb",
            "niteoweb.ipn",
            "niteoweb.ipn.core",
            "niteoweb.ipn.core.interfaces",
            "niteoweb.ipn.core.ipn",
            "niteoweb.ipn.core.setuphandlers",
            "niteoweb.ipn.core.testing",
            "niteoweb.ipn.core.tests",
            "niteoweb.ipn.core.tests.test_disable",
            "niteoweb.ipn.core.tests.test_enable",
            "niteoweb.ipn.core.tests.test_setup",
            "niteoweb.ipn.core.tests.test_validity",
            "niteoweb.ipn.core.validity"
        ],
        "version": "1.5.3"
    },
    "niteoweb.ipn.jvzoo": {
        "cmdline": [],
        "modules": [
            "niteoweb",
            "niteoweb.ipn",
            "niteoweb.ipn.jvzoo",
            "niteoweb.ipn.jvzoo.interfaces",
            "niteoweb.ipn.jvzoo.jvzoo",
            "niteoweb.ipn.jvzoo.testing",
            "niteoweb.ipn.jvzoo.tests",
            "niteoweb.ipn.jvzoo.tests.test_jvzoo",
            "niteoweb.ipn.jvzoo.tests.test_setup",
            "niteoweb.ipn.jvzoo.upgrades",
            "niteoweb.ipn.jvzoo.upgrades.upgrades"
        ],
        "version": "1.5"
    },
    "niteoweb.jvzoo": {
        "cmdline": [],
        "modules": [
            "niteoweb",
            "niteoweb.jvzoo",
            "niteoweb.jvzoo.browser",
            "niteoweb.jvzoo.browser.controlpanel",
            "niteoweb.jvzoo.browser.jvzoo",
            "niteoweb.jvzoo.config",
            "niteoweb.jvzoo.interfaces",
            "niteoweb.jvzoo.tests",
            "niteoweb.jvzoo.tests.base",
            "niteoweb.jvzoo.tests.test_doctest",
            "niteoweb.jvzoo.tests.test_jvzoo",
            "niteoweb.jvzoo.tests.test_setup"
        ],
        "version": "0.3"
    },
    "niteoweb.loginas": {
        "cmdline": [],
        "modules": [
            "niteoweb",
            "niteoweb.loginas",
            "niteoweb.loginas.browser",
            "niteoweb.loginas.browser.login_as"
        ],
        "version": "0.2"
    },
    "niteoweb.transmogrifier.simpleusage": {
        "cmdline": [],
        "modules": [
            "niteoweb",
            "niteoweb.transmogrifier",
            "niteoweb.transmogrifier.simpleusage",
            "niteoweb.transmogrifier.simpleusage.browser",
            "niteoweb.transmogrifier.simpleusage.browser.import",
            "niteoweb.transmogrifier.simpleusage.transmogrifier"
        ],
        "version": "1.0.1"
    },
    "niteoweb.windmill": {
        "cmdline": [],
        "modules": [
            "niteoweb",
            "niteoweb.windmill",
            "niteoweb.windmill.tests",
            "niteoweb.windmill.tests.test_windmill",
            "niteoweb.windmill.zserver"
        ],
        "version": "0.3.2"
    },
    "niteowl": {
        "cmdline": [],
        "modules": [
            "niteowl"
        ],
        "version": "0.1"
    },
    "nithin": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nitime": {
        "cmdline": [],
        "modules": [
            "nitime",
            "nitime._mpl_units",
            "nitime.algorithms",
            "nitime.algorithms.autoregressive",
            "nitime.algorithms.cohere",
            "nitime.algorithms.correlation",
            "nitime.algorithms.event_related",
            "nitime.algorithms.filter",
            "nitime.algorithms.spectral",
            "nitime.algorithms.tests",
            "nitime.algorithms.tests.test_autoregressive",
            "nitime.algorithms.tests.test_coherence",
            "nitime.algorithms.tests.test_correlation",
            "nitime.algorithms.tests.test_event_related",
            "nitime.algorithms.tests.test_spectral",
            "nitime.algorithms.wavelet",
            "nitime.analysis",
            "nitime.analysis.base",
            "nitime.analysis.coherence",
            "nitime.analysis.correlation",
            "nitime.analysis.event_related",
            "nitime.analysis.granger",
            "nitime.analysis.normalization",
            "nitime.analysis.snr",
            "nitime.analysis.spectral",
            "nitime.analysis.tests",
            "nitime.analysis.tests.test_base",
            "nitime.analysis.tests.test_coherence",
            "nitime.analysis.tests.test_correlation",
            "nitime.analysis.tests.test_granger",
            "nitime.analysis.tests.test_snr",
            "nitime.descriptors",
            "nitime.fmri",
            "nitime.fmri.hrf",
            "nitime.fmri.io",
            "nitime.fmri.tests",
            "nitime.fmri.tests.test_io",
            "nitime.index_utils",
            "nitime.lazy",
            "nitime.lazyimports",
            "nitime.six",
            "nitime.tests",
            "nitime.tests.test_algorithms",
            "nitime.tests.test_analysis",
            "nitime.tests.test_descriptors",
            "nitime.tests.test_lazy",
            "nitime.tests.test_timeseries",
            "nitime.tests.test_utils",
            "nitime.tests.test_viz",
            "nitime.timeseries",
            "nitime.utils",
            "nitime.version",
            "nitime.viz"
        ],
        "version": "0.7"
    },
    "nitingdedao": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nitlab": {
        "cmdline": [],
        "modules": [
            "nitlab_api"
        ],
        "version": "0.2dev"
    },
    "nitor-deploy-tools": {
        "cmdline": [
            "bake-image.sh",
            "create-shell-archive.sh",
            "deploy-stack.sh",
            "encrypt-and-mount.sh",
            "ensure-letsencrypt-certs.sh",
            "hook.sh",
            "lastpass-fetch-notes.sh",
            "lastpass-login.sh",
            "lastpass-logout.sh",
            "letsencrypt.sh",
            "lpssh",
            "s3-role-download.sh",
            "setup-fetch-secrets.sh",
            "show-stack-params-and-outputs.sh",
            "snapshot-from-volume.sh",
            "source_infra_properties.sh",
            "ssh-hostkeys-collect.sh",
            "undeploy-stack.sh",
            "volume-from-snapshot.sh"
        ],
        "modules": [
            "n_utils",
            "n_utils.aws_infra_util",
            "n_utils.cf_bootstrap",
            "n_utils.cf_deploy",
            "n_utils.cf_utils",
            "n_utils.cli",
            "n_utils.log_events",
            "n_utils.maven_utils",
            "n_utils.volumes"
        ],
        "version": "0.99"
    },
    "nitor-vault": {
        "cmdline": [],
        "modules": [
            "n_vault",
            "n_vault.cli",
            "n_vault.vault"
        ],
        "version": "0.4"
    },
    "nitpycker": {
        "cmdline": [],
        "modules": [
            "nitpycker",
            "nitpycker.logger",
            "nitpycker.plugins",
            "nitpycker.plugins.attribute_filter",
            "nitpycker.plugins.coverage",
            "nitpycker.plugins.manager",
            "nitpycker.plugins.text_reporter",
            "nitpycker.plugins.xunit",
            "nitpycker.result",
            "nitpycker.runners"
        ],
        "version": "0.1"
    },
    "nitrate": {
        "cmdline": [],
        "modules": [
            "nitrate",
            "nitrate.base",
            "nitrate.cache",
            "nitrate.config",
            "nitrate.containers",
            "nitrate.immutable",
            "nitrate.mutable",
            "nitrate.teiid",
            "nitrate.tests",
            "nitrate.utils",
            "nitrate.version",
            "nitrate.xmlrpc"
        ],
        "version": "1.3.1"
    },
    "nitrate-xml2dict": {
        "cmdline": [],
        "modules": [
            "decoder",
            "encoder"
        ],
        "version": "0.2.2.1"
    },
    "nitratexml2dict": {
        "cmdline": [],
        "modules": [
            "decoder",
            "encoder"
        ],
        "version": "0.2.2"
    },
    "nitro": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nitroapi": {
        "cmdline": [],
        "modules": [
            "nitroapi",
            "nitroapi.cli",
            "nitroapi.nitroapi"
        ],
        "version": "0.1.0"
    },
    "nitrogen": {
        "cmdline": [],
        "modules": [
            "nitrogen",
            "nitrogen.api",
            "nitrogen.async",
            "nitrogen.bucket",
            "nitrogen.config",
            "nitrogen.config.base",
            "nitrogen.config.tools",
            "nitrogen.crypto",
            "nitrogen.crypto.password",
            "nitrogen.debug",
            "nitrogen.editable",
            "nitrogen.error",
            "nitrogen.flickr",
            "nitrogen.http",
            "nitrogen.http.encode",
            "nitrogen.http.etag",
            "nitrogen.http.status",
            "nitrogen.http.time",
            "nitrogen.imgsizer",
            "nitrogen.lipsum",
            "nitrogen.logs",
            "nitrogen.mail",
            "nitrogen.markdown",
            "nitrogen.model",
            "nitrogen.model.context",
            "nitrogen.model.crud",
            "nitrogen.model.declarative",
            "nitrogen.model.session",
            "nitrogen.pager",
            "nitrogen.request",
            "nitrogen.route",
            "nitrogen.route.apache",
            "nitrogen.route.chain",
            "nitrogen.route.core",
            "nitrogen.route.hexer",
            "nitrogen.route.maprouter",
            "nitrogen.route.modulerouter",
            "nitrogen.route.rawrerouter",
            "nitrogen.route.rerouter",
            "nitrogen.route.selfrouter",
            "nitrogen.route.signer",
            "nitrogen.route.test",
            "nitrogen.route.test.apache",
            "nitrogen.route.test.hexer",
            "nitrogen.route.test.maprouter",
            "nitrogen.route.test.modulerouter",
            "nitrogen.route.test.rerouter",
            "nitrogen.route.test.selfrouter",
            "nitrogen.route.test.signer",
            "nitrogen.session",
            "nitrogen.uri",
            "nitrogen.uri.path",
            "nitrogen.uri.query",
            "nitrogen.uri.transcode",
            "nitrogen.uri.userinfo",
            "nitrogen.users",
            "nitrogen.users.anon",
            "nitrogen.users.context",
            "nitrogen.users.controller",
            "nitrogen.users.perms",
            "nitrogen.view",
            "nitrogen.view.context",
            "nitrogen.view.defaults",
            "nitrogen.view.form",
            "nitrogen.view.textblob",
            "nitrogen.view.util",
            "nitrogen.vps",
            "nitrogen.webio",
            "nitrogen.webio.body",
            "nitrogen.webio.cookies",
            "nitrogen.webio.headers",
            "nitrogen.webio.query",
            "nitrogen.wsgi",
            "nitrogen.wsgi.buffer",
            "nitrogen.wsgi.run",
            "nitrogen.wsgi.server",
            "nitrogen.wsgi.server.cgi",
            "nitrogen.wsgi.server.fcgi",
            "nitrogen.wsgi.server.socket",
            "nitrogen.wsgi.unicode"
        ],
        "version": "0.2a.dev"
    },
    "niunan-nester": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.3"
    },
    "nivad": {
        "cmdline": [],
        "modules": [
            "nivad",
            "nivad.push",
            "nivad.push_click_action",
            "nivad.push_filters"
        ],
        "version": "0.0.3"
    },
    "nive": {
        "cmdline": [],
        "modules": [
            "nive",
            "nive.adminview",
            "nive.adminview.tests",
            "nive.adminview.tests.test_configuration",
            "nive.adminview.tests.test_views",
            "nive.adminview.view",
            "nive.application",
            "nive.components",
            "nive.components.baseobjects",
            "nive.components.objects",
            "nive.components.objects.base",
            "nive.components.reform",
            "nive.components.reform.decorator",
            "nive.components.reform.exception",
            "nive.components.reform.field",
            "nive.components.reform.form",
            "nive.components.reform.interfaces",
            "nive.components.reform.reformed",
            "nive.components.reform.schema",
            "nive.components.reform.template",
            "nive.components.reform.tests",
            "nive.components.reform.tests.test_api",
            "nive.components.reform.tests.test_configuration",
            "nive.components.reform.tests.test_decorator",
            "nive.components.reform.tests.test_exception",
            "nive.components.reform.tests.test_field",
            "nive.components.reform.tests.test_form",
            "nive.components.reform.tests.test_functional",
            "nive.components.reform.tests.test_reformed",
            "nive.components.reform.tests.test_schema",
            "nive.components.reform.tests.test_template",
            "nive.components.reform.tests.test_widget",
            "nive.components.reform.widget",
            "nive.container",
            "nive.definitions",
            "nive.events",
            "nive.extensions",
            "nive.extensions.filename",
            "nive.extensions.localgroups",
            "nive.extensions.persistence",
            "nive.extensions.persistentRoot",
            "nive.extensions.tests",
            "nive.extensions.tests.test_persistence",
            "nive.forms",
            "nive.helper",
            "nive.i18n",
            "nive.objects",
            "nive.portal",
            "nive.search",
            "nive.security",
            "nive.tests",
            "nive.tests.appPy_batch",
            "nive.tests.db_app",
            "nive.tests.test_application",
            "nive.tests.test_baseobjects",
            "nive.tests.test_container",
            "nive.tests.test_definitions",
            "nive.tests.test_events",
            "nive.tests.test_forms",
            "nive.tests.test_helper",
            "nive.tests.test_i18n",
            "nive.tests.test_objects",
            "nive.tests.test_portal",
            "nive.tests.test_registry",
            "nive.tests.test_search",
            "nive.tests.test_security",
            "nive.tests.test_tool",
            "nive.tests.test_view",
            "nive.tests.test_workflow",
            "nive.tool",
            "nive.tools",
            "nive.tools.cmsstatistics",
            "nive.tools.dbJsonDump",
            "nive.tools.dbSqlDump",
            "nive.tools.dbStructureUpdater",
            "nive.tools.example",
            "nive.tools.exportJson",
            "nive.tools.gcdump",
            "nive.tools.sendMail",
            "nive.tools.sendMailTester",
            "nive.tools.tests",
            "nive.tools.tests.test_cmsstatistics",
            "nive.tools.tests.test_dbJsonDump",
            "nive.tools.tests.test_dbSqlDump",
            "nive.tools.tests.test_dbStructureUpdater",
            "nive.tools.tests.test_exportJson",
            "nive.tools.tests.test_sendMail",
            "nive.utils",
            "nive.utils.country_data",
            "nive.utils.dataPool2",
            "nive.utils.dataPool2.base",
            "nive.utils.dataPool2.connection",
            "nive.utils.dataPool2.dbManager",
            "nive.utils.dataPool2.files",
            "nive.utils.dataPool2.mysql",
            "nive.utils.dataPool2.mysql.dbManager",
            "nive.utils.dataPool2.mysql.mySqlPool",
            "nive.utils.dataPool2.mysql.tests",
            "nive.utils.dataPool2.mysql.tests.test_MySql",
            "nive.utils.dataPool2.postgres",
            "nive.utils.dataPool2.postgres.dbManager",
            "nive.utils.dataPool2.postgres.postgreSqlPool",
            "nive.utils.dataPool2.postgres.tests",
            "nive.utils.dataPool2.postgres.tests.test_PostgreSql",
            "nive.utils.dataPool2.sqlite",
            "nive.utils.dataPool2.sqlite.dbManager",
            "nive.utils.dataPool2.sqlite.sqlite3Pool",
            "nive.utils.dataPool2.sqlite.tests",
            "nive.utils.dataPool2.sqlite.tests.test_DBManager",
            "nive.utils.dataPool2.sqlite.tests.test_Sqlite3",
            "nive.utils.dataPool2.structure",
            "nive.utils.dataPool2.tests",
            "nive.utils.dataPool2.tests.Sqlite3_threads",
            "nive.utils.dataPool2.tests.batchcreate",
            "nive.utils.dataPool2.tests.performance_test",
            "nive.utils.dataPool2.tests.slow_queries",
            "nive.utils.dataPool2.tests.test_Base",
            "nive.utils.dataPool2.tests.test_connection",
            "nive.utils.dataPool2.tests.test_db",
            "nive.utils.dataPool2.tests.test_files",
            "nive.utils.dataPool2.tests.test_structure",
            "nive.utils.language",
            "nive.utils.language_data",
            "nive.utils.path",
            "nive.utils.tests",
            "nive.utils.tests.test_country",
            "nive.utils.tests.test_language",
            "nive.utils.tests.test_path",
            "nive.utils.tests.test_utils",
            "nive.utils.utils",
            "nive.views",
            "nive.workflow"
        ],
        "version": "1.0rc2"
    },
    "nive-cms": {
        "cmdline": [],
        "modules": [
            "nive_cms",
            "nive_cms.app",
            "nive_cms.baseobjects",
            "nive_cms.box",
            "nive_cms.cmsview",
            "nive_cms.cmsview.admin",
            "nive_cms.cmsview.cmsroot",
            "nive_cms.cmsview.cutcopy",
            "nive_cms.cmsview.sort",
            "nive_cms.cmsview.tests",
            "nive_cms.cmsview.tests.test_configuration",
            "nive_cms.cmsview.tests.test_cutcopy",
            "nive_cms.cmsview.tests.test_sort",
            "nive_cms.cmsview.tests.test_views",
            "nive_cms.cmsview.view",
            "nive_cms.codeblock",
            "nive_cms.column",
            "nive_cms.extensions",
            "nive_cms.extensions.fulltextpage",
            "nive_cms.extensions.images",
            "nive_cms.extensions.localgroups",
            "nive_cms.extensions.pages",
            "nive_cms.extensions.path",
            "nive_cms.extensions.tests",
            "nive_cms.extensions.tests.test_path",
            "nive_cms.file",
            "nive_cms.i18n",
            "nive_cms.image",
            "nive_cms.link",
            "nive_cms.media",
            "nive_cms.menublock",
            "nive_cms.news",
            "nive_cms.note",
            "nive_cms.page",
            "nive_cms.root",
            "nive_cms.scaffolds",
            "nive_cms.spacer",
            "nive_cms.tests",
            "nive_cms.tests.__local",
            "nive_cms.tests.db_app",
            "nive_cms.tests.test_app",
            "nive_cms.tests.test_configuration",
            "nive_cms.text",
            "nive_cms.workflow",
            "nive_cms.workflow.tests",
            "nive_cms.workflow.tests.test_configuration",
            "nive_cms.workflow.tests.test_views",
            "nive_cms.workflow.view",
            "nive_cms.workflow.wf"
        ],
        "version": "1.0rc2"
    },
    "nive-cms-design-bs-grayscale": {
        "cmdline": [],
        "modules": [
            "nive_cms_design_bs_grayscale",
            "nive_cms_design_bs_grayscale.tests",
            "nive_cms_design_bs_grayscale.tests.test_configuration",
            "nive_cms_design_bs_grayscale.tests.test_views",
            "nive_cms_design_bs_grayscale.view"
        ],
        "version": "0.1.1"
    },
    "nive-cms-design-bs3": {
        "cmdline": [],
        "modules": [
            "nive_cms_design_bs3",
            "nive_cms_design_bs3.elementcss",
            "nive_cms_design_bs3.tests",
            "nive_cms_design_bs3.tests.test_configuration",
            "nive_cms_design_bs3.tests.test_views",
            "nive_cms_design_bs3.view"
        ],
        "version": "0.1.1"
    },
    "nive-markdowntext": {
        "cmdline": [],
        "modules": [
            "nive_markdowntext",
            "nive_markdowntext.mtext",
            "nive_markdowntext.tests"
        ],
        "version": "0.1.2"
    },
    "nive-userdb": {
        "cmdline": [],
        "modules": [
            "nive_userdb",
            "nive_userdb.app",
            "nive_userdb.extensions",
            "nive_userdb.extensions.sessionuser",
            "nive_userdb.extensions.tests",
            "nive_userdb.extensions.tests.test_sessionuser",
            "nive_userdb.i18n",
            "nive_userdb.root",
            "nive_userdb.tests",
            "nive_userdb.tests.__local",
            "nive_userdb.tests.db_app",
            "nive_userdb.tests.test_app",
            "nive_userdb.tests.test_configuration",
            "nive_userdb.user",
            "nive_userdb.useradmin",
            "nive_userdb.useradmin.adminroot",
            "nive_userdb.useradmin.tests",
            "nive_userdb.useradmin.tests.test_configuration",
            "nive_userdb.useradmin.tests.test_views",
            "nive_userdb.useradmin.view",
            "nive_userdb.userview",
            "nive_userdb.userview.tests",
            "nive_userdb.userview.tests.test_configuration",
            "nive_userdb.userview.tests.test_views",
            "nive_userdb.userview.view"
        ],
        "version": "1.0rc1"
    },
    "niwlittleutils": {
        "cmdline": [],
        "modules": [
            "NIWLittleUtils",
            "NIWLittleUtils.codec",
            "NIWLittleUtils.filesystem",
            "NIWLittleUtils.random_tool"
        ],
        "version": "0.1.0.dev9"
    },
    "niworkflows": {
        "cmdline": [],
        "modules": [
            "niworkflows",
            "niworkflows.anat",
            "niworkflows.anat.mni",
            "niworkflows.anat.skullstrip",
            "niworkflows.common",
            "niworkflows.common.orient",
            "niworkflows.common.report",
            "niworkflows.data",
            "niworkflows.data.getters",
            "niworkflows.data.utils",
            "niworkflows.due",
            "niworkflows.dwi",
            "niworkflows.func",
            "niworkflows.info",
            "niworkflows.interfaces",
            "niworkflows.interfaces.masks",
            "niworkflows.interfaces.registration",
            "niworkflows.interfaces.segmentation",
            "niworkflows.viz",
            "niworkflows.viz.utils",
            "niworkflows.viz.validators"
        ],
        "version": "0.0.6.post3"
    },
    "nix": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nix-nox": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.5"
    },
    "nix-visualize": {
        "cmdline": [],
        "modules": [
            "nix_visualize",
            "nix_visualize.graph_objects",
            "nix_visualize.util",
            "nix_visualize.visualize_tree"
        ],
        "version": "1.0.4"
    },
    "nix1947": {
        "cmdline": [],
        "modules": [
            "nix1947"
        ],
        "version": "1.0.0"
    },
    "nixcms": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nixgateway": {
        "cmdline": [],
        "modules": [
            "nixgateway",
            "nixgateway.api"
        ],
        "version": "0.8"
    },
    "nixio": {
        "cmdline": [],
        "modules": [
            "nixio",
            "nixio.block",
            "nixio.data_array",
            "nixio.dimension_type",
            "nixio.entity_with_sources",
            "nixio.file",
            "nixio.group",
            "nixio.info",
            "nixio.link_type",
            "nixio.multi_tag",
            "nixio.property",
            "nixio.pycore",
            "nixio.pycore.block",
            "nixio.pycore.data_array",
            "nixio.pycore.data_view",
            "nixio.pycore.dimensions",
            "nixio.pycore.entity",
            "nixio.pycore.entity_with_metadata",
            "nixio.pycore.entity_with_sources",
            "nixio.pycore.exceptions",
            "nixio.pycore.exceptions.exceptions",
            "nixio.pycore.feature",
            "nixio.pycore.file",
            "nixio.pycore.group",
            "nixio.pycore.h5dataset",
            "nixio.pycore.h5group",
            "nixio.pycore.multi_tag",
            "nixio.pycore.property",
            "nixio.pycore.section",
            "nixio.pycore.source",
            "nixio.pycore.tag",
            "nixio.pycore.util",
            "nixio.pycore.util.names",
            "nixio.pycore.util.units",
            "nixio.pycore.util.util",
            "nixio.section",
            "nixio.source",
            "nixio.tag",
            "nixio.util",
            "nixio.util.find",
            "nixio.util.inject",
            "nixio.util.proxy_list",
            "nixio.value"
        ],
        "version": "1.3.0"
    },
    "nixpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nixstatsagent": {
        "cmdline": [],
        "modules": [
            "nixstatsagent",
            "nixstatsagent.nixstatsagent",
            "nixstatsagent.plugins",
            "nixstatsagent.plugins.cpu",
            "nixstatsagent.plugins.diskusage",
            "nixstatsagent.plugins.httpd",
            "nixstatsagent.plugins.iostat",
            "nixstatsagent.plugins.loadavg",
            "nixstatsagent.plugins.memory",
            "nixstatsagent.plugins.mongodb",
            "nixstatsagent.plugins.mysql",
            "nixstatsagent.plugins.network",
            "nixstatsagent.plugins.nginx",
            "nixstatsagent.plugins.phpfpm",
            "nixstatsagent.plugins.ping",
            "nixstatsagent.plugins.plugins",
            "nixstatsagent.plugins.process",
            "nixstatsagent.plugins.sleeper",
            "nixstatsagent.plugins.swap",
            "nixstatsagent.plugins.system"
        ],
        "version": "1.1.18"
    },
    "nixtest": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nixtla": {
        "cmdline": [],
        "modules": [
            "nixtla",
            "nixtla.core",
            "nixtla.core.annotation",
            "nixtla.core.annotation.elan",
            "nixtla.core.annotation.markers",
            "nixtla.core.base_adapter",
            "nixtla.core.base_module",
            "nixtla.core.exceptions",
            "nixtla.core.interfaces",
            "nixtla.core.module_parser",
            "nixtla.core.pipeline",
            "nixtla.core.tools",
            "nixtla.core.tools.corpora",
            "nixtla.core.tools.corpora.dictasign",
            "nixtla.core.tools.corpora.markers",
            "nixtla.core.tools.database_parser",
            "nixtla.core.tools.guis",
            "nixtla.core.tools.guis.qt_gui",
            "nixtla.core.tools.infix",
            "nixtla.core.tools.magic_win",
            "nixtla.core.tools.model",
            "nixtla.core.tools.model.concurrent_history",
            "nixtla.core.tools.model.interfaces",
            "nixtla.core.tools.model.rules",
            "nixtla.core.tools.model.state",
            "nixtla.core.tools.model.transition",
            "nixtla.core.tools.ordered_set",
            "nixtla.core.tools.pdlsl",
            "nixtla.core.tools.pympi",
            "nixtla.core.tools.pympi.EafIO",
            "nixtla.core.tools.pympi.Elan",
            "nixtla.core.tools.pympi.Praat",
            "nixtla.core.tools.spacedata",
            "nixtla.launch_qt",
            "nixtla.modelling",
            "nixtla.modelling.channel_based",
            "nixtla.modelling.channel_based.implementation",
            "nixtla.modelling.channel_based.markers",
            "nixtla.modelling.interface",
            "nixtla.res",
            "nixtla.rulesets",
            "nixtla.rulesets.hands_2d_only",
            "nixtla.rulesets.hands_2d_only.lies_in",
            "nixtla.rulesets.hands_2d_only.located_in",
            "nixtla.rulesets.hands_2d_only.moves_to",
            "nixtla.rulesets.hands_2d_only.rotates",
            "nixtla.rulesets.hands_2d_only.rotates_cl",
            "nixtla.rulesets.hands_2d_only.rotates_co",
            "nixtla.rulesets.hands_2d_only.touches",
            "nixtla.rulesets.hands_2d_only.trills",
            "nixtla.segmentation",
            "nixtla.segmentation.handspeed_based",
            "nixtla.segmentation.handspeed_based.adapters",
            "nixtla.segmentation.handspeed_based.implementation",
            "nixtla.segmentation.handspeed_based.markers",
            "nixtla.segmentation.handspeed_based.tools",
            "nixtla.segmentation.interface",
            "nixtla.start",
            "nixtla.tracking",
            "nixtla.tracking.interface",
            "nixtla.tracking.text_based",
            "nixtla.tracking.text_based.implementation",
            "nixtla.tracking.text_based.markers",
            "nixtla.verification",
            "nixtla.verification.interface",
            "nixtla.verification.simple_method",
            "nixtla.verification.simple_method.adapters",
            "nixtla.verification.simple_method.implementation",
            "nixtla.verification.simple_method.markers"
        ],
        "version": "5.3.7"
    },
    "nkf": {
        "cmdline": [],
        "modules": [
            "nkf_codecs"
        ],
        "version": "0.2.0"
    },
    "nkit4py": {
        "cmdline": [],
        "modules": [],
        "version": "2.4.2"
    },
    "nknu-410131230": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nknu410075006": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nknu410175024": {
        "cmdline": [],
        "modules": [
            "NKNU410175024"
        ],
        "version": "1.0.0"
    },
    "nl": {
        "cmdline": [],
        "modules": [
            "nl",
            "nl.clps",
            "nl.conf",
            "nl.examples",
            "nl.examples.cms",
            "nl.examples.cms2",
            "nl.examples.cms3",
            "nl.examples.modality",
            "nl.examples.nouns",
            "nl.examples.people",
            "nl.examples.physics",
            "nl.examples.physics22",
            "nl.examples.trac",
            "nl.exceptions",
            "nl.kb",
            "nl.log",
            "nl.metanl",
            "nl.nltime",
            "nl.prop",
            "nl.rule",
            "nl.state",
            "nl.test",
            "nl.test.functional_test",
            "nl.thing",
            "nl.utils"
        ],
        "version": "0.102"
    },
    "nl-gist": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nlab": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "nlcalc": {
        "cmdline": [],
        "modules": [
            "nlcalc",
            "nlcalc.calculator",
            "nlcalc.context",
            "nlcalc.operations",
            "nlcalc.utils"
        ],
        "version": "0.1.1"
    },
    "nlcd": {
        "cmdline": [],
        "modules": [
            "nlcd"
        ],
        "version": "0.2"
    },
    "nled": {
        "cmdline": [],
        "modules": [
            "nled"
        ],
        "version": "1.2.0"
    },
    "nlgen": {
        "cmdline": [],
        "modules": [
            "nlgen",
            "nlgen.cfg",
            "nlgen.cfg.cfg",
            "nlgen.cfg.feature",
            "nlgen.cfg.markup",
            "nlgen.cfg.markup_parser",
            "nlgen.cfg.production",
            "nlgen.cfg.result",
            "nlgen.compat",
            "nlgen.exception",
            "nlgen.tests",
            "nlgen.tests.cfg",
            "nlgen.tests.cfg.test_cfg",
            "nlgen.tests.cfg.test_feature",
            "nlgen.tests.cfg.test_full",
            "nlgen.tests.cfg.test_markup",
            "nlgen.tests.cfg.test_production_list",
            "nlgen.tests.cfg.test_production_ref",
            "nlgen.tests.cfg.test_production_union",
            "nlgen.tests.cfg.test_terminal",
            "nlgen.tests.cfg.test_tutorial"
        ],
        "version": "0.1.2"
    },
    "nlgeojson": {
        "cmdline": [],
        "modules": [
            "nlgeojson"
        ],
        "version": "1.1"
    },
    "nlgserv": {
        "cmdline": [],
        "modules": [
            "nlgserv",
            "nlgserv._controller",
            "nlgserv._server",
            "nlgserv.bottle",
            "nlgserv.tests",
            "nlgserv.tests.server-test"
        ],
        "version": "0.2.3"
    },
    "nlib": {
        "cmdline": [],
        "modules": [],
        "version": "0.6"
    },
    "nlist": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "nlmpy": {
        "cmdline": [],
        "modules": [
            "nlmpy",
            "nlmpy.nlmpy"
        ],
        "version": "0.1.5"
    },
    "nlnormaliz": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "nlog": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nlp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nlp-services": {
        "cmdline": [],
        "modules": [
            "nlp_services",
            "nlp_services.api",
            "nlp_services.api.app",
            "nlp_services.authority",
            "nlp_services.caching",
            "nlp_services.discourse",
            "nlp_services.discourse.entities",
            "nlp_services.discourse.sentiment",
            "nlp_services.document_access",
            "nlp_services.pooling",
            "nlp_services.scripts",
            "nlp_services.scripts.distributed_entities",
            "nlp_services.scripts.refresh_titles",
            "nlp_services.syntax",
            "nlp_services.test",
            "nlp_services.test.test_document_access",
            "nlp_services.title_confirmation",
            "nlp_services.title_confirmation.wikia",
            "nlp_services.title_confirmation.wikipedia",
            "nlp_services.wikia_utils"
        ],
        "version": "0.0.1"
    },
    "nlp-sketch": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nlpbox": {
        "cmdline": [],
        "modules": [
            "nlpbox",
            "nlpbox.charnum",
            "nlpbox.clean",
            "nlpbox.thesaurus"
        ],
        "version": "1.1.2"
    },
    "nlper": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "nlpia": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.9"
    },
    "nlpipe": {
        "cmdline": [],
        "modules": [
            "nlpipe",
            "nlpipe.client",
            "nlpipe.module",
            "nlpipe.nlpamcat",
            "nlpipe.restserver",
            "nlpipe.worker"
        ],
        "version": "0.46"
    },
    "nlpkit": {
        "cmdline": [
            "corenlp-tag.py",
            "mate-parse.py"
        ],
        "modules": [
            "nlpkit",
            "nlpkit.cmd",
            "nlpkit.conll",
            "nlpkit.conll09",
            "nlpkit.corenlp",
            "nlpkit.entities",
            "nlpkit.greet",
            "nlpkit.io",
            "nlpkit.mattr",
            "nlpkit.parse",
            "nlpkit.parse.mate",
            "nlpkit.parse.test_mate",
            "nlpkit.paths",
            "nlpkit.preprocessing",
            "nlpkit.preprocessing.markup",
            "nlpkit.preprocessing.ngram",
            "nlpkit.preprocessing.tag",
            "nlpkit.sbd",
            "nlpkit.scoring",
            "nlpkit.svmrank_format",
            "nlpkit.tagmap",
            "nlpkit.test_conll09",
            "nlpkit.wordnet",
            "nlpkit.wordnet.dannet",
            "nlpkit.wordnet.germanet",
            "nlpkit.wordnet.ukb",
            "nlpkit.wordnet.universal",
            "nlpkit.wordnet.wn30"
        ],
        "version": "0.35"
    },
    "nlplab": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "nlplib": {
        "cmdline": [],
        "modules": [
            "nlplib",
            "nlplib.base"
        ],
        "version": "0.0.1"
    },
    "nlpnet": {
        "cmdline": [
            "nlpnet-load-embeddings.py",
            "nlpnet-tag.py",
            "nlpnet-test.py",
            "nlpnet-train.py"
        ],
        "modules": [
            "nlpnet",
            "nlpnet.arguments",
            "nlpnet.attributes",
            "nlpnet.config",
            "nlpnet.metadata",
            "nlpnet.parse",
            "nlpnet.parse.parse_reader",
            "nlpnet.pos",
            "nlpnet.pos.macmorphoreader",
            "nlpnet.pos.pos_reader",
            "nlpnet.reader",
            "nlpnet.srl",
            "nlpnet.srl.srl_reader",
            "nlpnet.srl.train_srl",
            "nlpnet.taggers",
            "nlpnet.utils",
            "nlpnet.word_dictionary"
        ],
        "version": "1.2.1"
    },
    "nlpnet-py3-mirror": {
        "cmdline": [
            "nlpnet-load-embeddings.py",
            "nlpnet-tag.py",
            "nlpnet-test.py",
            "nlpnet-train.py"
        ],
        "modules": [
            "nlpnet",
            "nlpnet.arguments",
            "nlpnet.attributes",
            "nlpnet.config",
            "nlpnet.metadata",
            "nlpnet.parse",
            "nlpnet.parse.parse_reader",
            "nlpnet.pos",
            "nlpnet.pos.macmorphoreader",
            "nlpnet.pos.pos_reader",
            "nlpnet.reader",
            "nlpnet.srl",
            "nlpnet.srl.srl_reader",
            "nlpnet.srl.train_srl",
            "nlpnet.taggers",
            "nlpnet.utils",
            "nlpnet.word_dictionary"
        ],
        "version": "1.2.2"
    },
    "nlppln": {
        "cmdline": [],
        "modules": [
            "nlppln",
            "nlppln.commands",
            "nlppln.commands.apachetika",
            "nlppln.commands.download",
            "nlppln.commands.encode_files",
            "nlppln.commands.freqs",
            "nlppln.commands.frog_to_saf",
            "nlppln.commands.guess_language",
            "nlppln.commands.inspect_ne",
            "nlppln.commands.liwc",
            "nlppln.commands.ls",
            "nlppln.commands.rename-and-copy-files",
            "nlppln.commands.replace_ner",
            "nlppln.commands.saf_to_freqs",
            "nlppln.commands.saf_to_txt",
            "nlppln.commands.save_ner_data",
            "nlppln.commands.worddocx2txt",
            "nlppln.commands.xml_to_text",
            "nlppln.cwl",
            "nlppln.cwl.create_file_list",
            "nlppln.generate",
            "nlppln.gui",
            "nlppln.gui.server",
            "nlppln.gui.utils",
            "nlppln.utils",
            "nlppln.wfgenerator"
        ],
        "version": "0.1.0"
    },
    "nlptool": {
        "cmdline": [],
        "modules": [
            "nlptool",
            "nlptool.distance",
            "nlptool.pinyin",
            "nlptool.simhash",
            "nlptool.test"
        ],
        "version": "0.0.2"
    },
    "nlpy": {
        "cmdline": [],
        "modules": [
            "bin",
            "bin.lemmatize",
            "bin.lowercase",
            "bin.tokenizer",
            "nlpy",
            "nlpy.basic",
            "nlpy.basic.abstract_tokenizer",
            "nlpy.basic.contentfulness",
            "nlpy.basic.nltk_lemmatizer",
            "nlpy.basic.nltk_tokenizers",
            "nlpy.basic.recase",
            "nlpy.classification",
            "nlpy.classification.logistic_regression",
            "nlpy.dataset",
            "nlpy.dataset.abstract_dataset",
            "nlpy.dataset.heart_scale",
            "nlpy.dataset.mini_batch",
            "nlpy.dataset.mnist",
            "nlpy.deep",
            "nlpy.deep.conf",
            "nlpy.deep.conf.nn_config",
            "nlpy.deep.conf.trainer_config",
            "nlpy.deep.functions",
            "nlpy.deep.networks",
            "nlpy.deep.networks.auto_encoder",
            "nlpy.deep.networks.basic_nn",
            "nlpy.deep.networks.classifier",
            "nlpy.deep.networks.classifier_runner",
            "nlpy.deep.networks.conv",
            "nlpy.deep.networks.layer",
            "nlpy.deep.networks.lstm",
            "nlpy.deep.networks.mlp",
            "nlpy.deep.networks.recurrent",
            "nlpy.deep.networks.recursive",
            "nlpy.deep.networks.regressor",
            "nlpy.deep.networks.simple_rnn",
            "nlpy.deep.nnprocessors",
            "nlpy.deep.trainers",
            "nlpy.deep.trainers.hf",
            "nlpy.deep.trainers.hf_trainer",
            "nlpy.deep.trainers.minibatch_optimizer",
            "nlpy.deep.trainers.optimize",
            "nlpy.deep.trainers.other_trainers",
            "nlpy.deep.trainers.scipy_trainer",
            "nlpy.deep.trainers.trainer",
            "nlpy.ex",
            "nlpy.ex.keyword",
            "nlpy.ex.keyword.frequency_keyword_extractor",
            "nlpy.examples",
            "nlpy.examples.mnist_feed_forward_nn",
            "nlpy.examples.mnist_logistic_regression",
            "nlpy.lm",
            "nlpy.lm.data_generator",
            "nlpy.lm.vocab",
            "nlpy.mt",
            "nlpy.rep",
            "nlpy.rep.word2vec",
            "nlpy.rep.word_recurrent_encoder",
            "nlpy.rep.word_recursive_encoder",
            "nlpy.server",
            "nlpy.syntax",
            "nlpy.syntax.cfg",
            "nlpy.tasks",
            "nlpy.tasks.keyword_extraction",
            "nlpy.tasks.paraphrase",
            "nlpy.tasks.paraphrase.classifier",
            "nlpy.tasks.paraphrase.encoder",
            "nlpy.tasks.paraphrase.rae",
            "nlpy.tasks.paraphrase.sequentialize",
            "nlpy.tasks.semantic_search",
            "nlpy.test",
            "nlpy.test.basic",
            "nlpy.test.basic.contentfullness",
            "nlpy.test.deep",
            "nlpy.test.deep.auto_encoder",
            "nlpy.test.deep.feed_forward",
            "nlpy.test.deep.functions",
            "nlpy.test.deep.rnn",
            "nlpy.test.ex",
            "nlpy.test.ex.FrequencyKeywordExtractorTest",
            "nlpy.test.lm",
            "nlpy.test.lm.rnn_lm",
            "nlpy.test.lm.vocab",
            "nlpy.test.pca",
            "nlpy.test.pca.pcab",
            "nlpy.test.pca.theano_test",
            "nlpy.test.rep",
            "nlpy.test.rep.Word2VecRepresentationTest",
            "nlpy.test.syntax",
            "nlpy.test.syntax.cfg",
            "nlpy.test.util",
            "nlpy.test.util.feature_container",
            "nlpy.util",
            "nlpy.util.fake_generator",
            "nlpy.util.feature_container",
            "nlpy.util.line_iterator",
            "nlpy.util.nbest_list",
            "play",
            "play.click_comp",
            "play.lstm_test",
            "play.mnist_mlp",
            "play.nn_topic_predicting",
            "play.rnn_classify",
            "play.rnn_lm",
            "play.rnn_topic_tracking",
            "play.simple_recursive",
            "play.situation_searcher"
        ],
        "version": "0.0.9"
    },
    "nlring": {
        "cmdline": [],
        "modules": [
            "nlring",
            "nlring.ring",
            "nlring.ssh"
        ],
        "version": "1.0.1"
    },
    "nls": {
        "cmdline": [],
        "modules": [
            "nls",
            "nls.animation",
            "nls.model",
            "nls.nls_test",
            "nls.pumping",
            "nls.solver",
            "nls.version"
        ],
        "version": "0.2.0"
    },
    "nltk": {
        "cmdline": [],
        "modules": [
            "nltk",
            "nltk.app",
            "nltk.app.chartparser_app",
            "nltk.app.chunkparser_app",
            "nltk.app.collocations_app",
            "nltk.app.concordance_app",
            "nltk.app.nemo_app",
            "nltk.app.rdparser_app",
            "nltk.app.srparser_app",
            "nltk.app.wordfreq_app",
            "nltk.app.wordnet_app",
            "nltk.book",
            "nltk.ccg",
            "nltk.ccg.api",
            "nltk.ccg.chart",
            "nltk.ccg.combinator",
            "nltk.ccg.lexicon",
            "nltk.ccg.logic",
            "nltk.chat",
            "nltk.chat.eliza",
            "nltk.chat.iesha",
            "nltk.chat.rude",
            "nltk.chat.suntsu",
            "nltk.chat.util",
            "nltk.chat.zen",
            "nltk.chunk",
            "nltk.chunk.api",
            "nltk.chunk.named_entity",
            "nltk.chunk.regexp",
            "nltk.chunk.util",
            "nltk.classify",
            "nltk.classify.api",
            "nltk.classify.decisiontree",
            "nltk.classify.maxent",
            "nltk.classify.megam",
            "nltk.classify.naivebayes",
            "nltk.classify.positivenaivebayes",
            "nltk.classify.rte_classify",
            "nltk.classify.scikitlearn",
            "nltk.classify.senna",
            "nltk.classify.svm",
            "nltk.classify.tadm",
            "nltk.classify.textcat",
            "nltk.classify.util",
            "nltk.classify.weka",
            "nltk.cluster",
            "nltk.cluster.api",
            "nltk.cluster.em",
            "nltk.cluster.gaac",
            "nltk.cluster.kmeans",
            "nltk.cluster.util",
            "nltk.collections",
            "nltk.collocations",
            "nltk.compat",
            "nltk.corpus",
            "nltk.corpus.europarl_raw",
            "nltk.corpus.reader",
            "nltk.corpus.reader.aligned",
            "nltk.corpus.reader.api",
            "nltk.corpus.reader.bnc",
            "nltk.corpus.reader.bracket_parse",
            "nltk.corpus.reader.categorized_sents",
            "nltk.corpus.reader.chasen",
            "nltk.corpus.reader.childes",
            "nltk.corpus.reader.chunked",
            "nltk.corpus.reader.cmudict",
            "nltk.corpus.reader.comparative_sents",
            "nltk.corpus.reader.conll",
            "nltk.corpus.reader.crubadan",
            "nltk.corpus.reader.dependency",
            "nltk.corpus.reader.framenet",
            "nltk.corpus.reader.ieer",
            "nltk.corpus.reader.indian",
            "nltk.corpus.reader.ipipan",
            "nltk.corpus.reader.knbc",
            "nltk.corpus.reader.lin",
            "nltk.corpus.reader.mte",
            "nltk.corpus.reader.nkjp",
            "nltk.corpus.reader.nombank",
            "nltk.corpus.reader.nps_chat",
            "nltk.corpus.reader.opinion_lexicon",
            "nltk.corpus.reader.panlex_lite",
            "nltk.corpus.reader.pl196x",
            "nltk.corpus.reader.plaintext",
            "nltk.corpus.reader.ppattach",
            "nltk.corpus.reader.propbank",
            "nltk.corpus.reader.pros_cons",
            "nltk.corpus.reader.reviews",
            "nltk.corpus.reader.rte",
            "nltk.corpus.reader.semcor",
            "nltk.corpus.reader.senseval",
            "nltk.corpus.reader.sentiwordnet",
            "nltk.corpus.reader.sinica_treebank",
            "nltk.corpus.reader.string_category",
            "nltk.corpus.reader.switchboard",
            "nltk.corpus.reader.tagged",
            "nltk.corpus.reader.timit",
            "nltk.corpus.reader.toolbox",
            "nltk.corpus.reader.twitter",
            "nltk.corpus.reader.udhr",
            "nltk.corpus.reader.util",
            "nltk.corpus.reader.verbnet",
            "nltk.corpus.reader.wordlist",
            "nltk.corpus.reader.wordnet",
            "nltk.corpus.reader.xmldocs",
            "nltk.corpus.reader.ycoe",
            "nltk.corpus.util",
            "nltk.data",
            "nltk.decorators",
            "nltk.downloader",
            "nltk.draw",
            "nltk.draw.cfg",
            "nltk.draw.dispersion",
            "nltk.draw.table",
            "nltk.draw.tree",
            "nltk.draw.util",
            "nltk.featstruct",
            "nltk.grammar",
            "nltk.help",
            "nltk.inference",
            "nltk.inference.api",
            "nltk.inference.discourse",
            "nltk.inference.mace",
            "nltk.inference.nonmonotonic",
            "nltk.inference.prover9",
            "nltk.inference.resolution",
            "nltk.inference.tableau",
            "nltk.internals",
            "nltk.jsontags",
            "nltk.lazyimport",
            "nltk.metrics",
            "nltk.metrics.agreement",
            "nltk.metrics.aline",
            "nltk.metrics.association",
            "nltk.metrics.confusionmatrix",
            "nltk.metrics.distance",
            "nltk.metrics.paice",
            "nltk.metrics.scores",
            "nltk.metrics.segmentation",
            "nltk.metrics.spearman",
            "nltk.misc",
            "nltk.misc.babelfish",
            "nltk.misc.chomsky",
            "nltk.misc.minimalset",
            "nltk.misc.sort",
            "nltk.misc.wordfinder",
            "nltk.parse",
            "nltk.parse.api",
            "nltk.parse.bllip",
            "nltk.parse.chart",
            "nltk.parse.corenlp",
            "nltk.parse.dependencygraph",
            "nltk.parse.earleychart",
            "nltk.parse.evaluate",
            "nltk.parse.featurechart",
            "nltk.parse.generate",
            "nltk.parse.malt",
            "nltk.parse.nonprojectivedependencyparser",
            "nltk.parse.pchart",
            "nltk.parse.projectivedependencyparser",
            "nltk.parse.recursivedescent",
            "nltk.parse.shiftreduce",
            "nltk.parse.stanford",
            "nltk.parse.transitionparser",
            "nltk.parse.util",
            "nltk.parse.viterbi",
            "nltk.probability",
            "nltk.sem",
            "nltk.sem.boxer",
            "nltk.sem.chat80",
            "nltk.sem.cooper_storage",
            "nltk.sem.drt",
            "nltk.sem.drt_glue_demo",
            "nltk.sem.evaluate",
            "nltk.sem.glue",
            "nltk.sem.hole",
            "nltk.sem.lfg",
            "nltk.sem.linearlogic",
            "nltk.sem.logic",
            "nltk.sem.relextract",
            "nltk.sem.skolemize",
            "nltk.sem.util",
            "nltk.sentiment",
            "nltk.sentiment.sentiment_analyzer",
            "nltk.sentiment.util",
            "nltk.sentiment.vader",
            "nltk.stem",
            "nltk.stem.api",
            "nltk.stem.isri",
            "nltk.stem.lancaster",
            "nltk.stem.porter",
            "nltk.stem.regexp",
            "nltk.stem.rslp",
            "nltk.stem.snowball",
            "nltk.stem.util",
            "nltk.stem.wordnet",
            "nltk.tag",
            "nltk.tag.api",
            "nltk.tag.brill",
            "nltk.tag.brill_trainer",
            "nltk.tag.crf",
            "nltk.tag.hmm",
            "nltk.tag.hunpos",
            "nltk.tag.mapping",
            "nltk.tag.perceptron",
            "nltk.tag.senna",
            "nltk.tag.sequential",
            "nltk.tag.stanford",
            "nltk.tag.tnt",
            "nltk.tag.util",
            "nltk.tbl",
            "nltk.tbl.api",
            "nltk.tbl.demo",
            "nltk.tbl.erroranalysis",
            "nltk.tbl.feature",
            "nltk.tbl.rule",
            "nltk.tbl.template",
            "nltk.test",
            "nltk.test.all",
            "nltk.test.childes_fixt",
            "nltk.test.classify_fixt",
            "nltk.test.compat_fixt",
            "nltk.test.corpus_fixt",
            "nltk.test.discourse_fixt",
            "nltk.test.doctest_nose_plugin",
            "nltk.test.gensim_fixt",
            "nltk.test.gluesemantics_malt_fixt",
            "nltk.test.inference_fixt",
            "nltk.test.nonmonotonic_fixt",
            "nltk.test.portuguese_en_fixt",
            "nltk.test.probability_fixt",
            "nltk.test.runtests",
            "nltk.test.segmentation_fixt",
            "nltk.test.semantics_fixt",
            "nltk.test.translate_fixt",
            "nltk.test.unit",
            "nltk.test.unit.test_2x_compat",
            "nltk.test.unit.test_aline",
            "nltk.test.unit.test_chunk",
            "nltk.test.unit.test_classify",
            "nltk.test.unit.test_collocations",
            "nltk.test.unit.test_corpora",
            "nltk.test.unit.test_corpus_views",
            "nltk.test.unit.test_hmm",
            "nltk.test.unit.test_json2csv_corpus",
            "nltk.test.unit.test_naivebayes",
            "nltk.test.unit.test_seekable_unicode_stream_reader",
            "nltk.test.unit.test_senna",
            "nltk.test.unit.test_stem",
            "nltk.test.unit.test_tag",
            "nltk.test.unit.test_tgrep",
            "nltk.test.unit.test_tokenize",
            "nltk.test.unit.test_twitter_auth",
            "nltk.test.unit.translate",
            "nltk.test.unit.translate.test_bleu",
            "nltk.test.unit.translate.test_ibm1",
            "nltk.test.unit.translate.test_ibm2",
            "nltk.test.unit.translate.test_ibm3",
            "nltk.test.unit.translate.test_ibm4",
            "nltk.test.unit.translate.test_ibm5",
            "nltk.test.unit.translate.test_ibm_model",
            "nltk.test.unit.translate.test_stack_decoder",
            "nltk.test.unit.utils",
            "nltk.test.wordnet_fixt",
            "nltk.text",
            "nltk.tgrep",
            "nltk.tokenize",
            "nltk.tokenize.api",
            "nltk.tokenize.casual",
            "nltk.tokenize.moses",
            "nltk.tokenize.mwe",
            "nltk.tokenize.punkt",
            "nltk.tokenize.regexp",
            "nltk.tokenize.repp",
            "nltk.tokenize.sexpr",
            "nltk.tokenize.simple",
            "nltk.tokenize.stanford",
            "nltk.tokenize.stanford_segmenter",
            "nltk.tokenize.texttiling",
            "nltk.tokenize.toktok",
            "nltk.tokenize.treebank",
            "nltk.tokenize.util",
            "nltk.toolbox",
            "nltk.translate",
            "nltk.translate.api",
            "nltk.translate.bleu_score",
            "nltk.translate.chrf_score",
            "nltk.translate.gale_church",
            "nltk.translate.gdfa",
            "nltk.translate.gleu_score",
            "nltk.translate.ibm1",
            "nltk.translate.ibm2",
            "nltk.translate.ibm3",
            "nltk.translate.ibm4",
            "nltk.translate.ibm5",
            "nltk.translate.ibm_model",
            "nltk.translate.metrics",
            "nltk.translate.phrase_based",
            "nltk.translate.ribes_score",
            "nltk.translate.stack_decoder",
            "nltk.tree",
            "nltk.treeprettyprinter",
            "nltk.treetransforms",
            "nltk.twitter",
            "nltk.twitter.api",
            "nltk.twitter.common",
            "nltk.twitter.twitter_demo",
            "nltk.twitter.twitterclient",
            "nltk.twitter.util",
            "nltk.util",
            "nltk.wsd"
        ],
        "version": "3.2.3"
    },
    "nltk-tgrep": {
        "cmdline": [],
        "modules": [
            "nltk_tgrep",
            "nltk_tgrep.tests",
            "nltk_tgrep.tests.test_tgrep",
            "nltk_tgrep.tgrep"
        ],
        "version": "1.0.6"
    },
    "nltkrest": {
        "cmdline": [],
        "modules": [
            "nltkrest",
            "nltkrest.server"
        ],
        "version": "0.12"
    },
    "nltokeniz": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.4"
    },
    "nltools": {
        "cmdline": [],
        "modules": [
            "nltools",
            "nltools.analysis",
            "nltools.cross_validation",
            "nltools.data",
            "nltools.datasets",
            "nltools.file_reader",
            "nltools.mask",
            "nltools.pbs_job",
            "nltools.plotting",
            "nltools.searchlight",
            "nltools.simulator",
            "nltools.stats",
            "nltools.utils",
            "nltools.version"
        ],
        "version": "0.2.8"
    },
    "nlup": {
        "cmdline": [],
        "modules": [
            "nlup",
            "nlup.confusion",
            "nlup.decorators",
            "nlup.jsonable",
            "nlup.perceptron",
            "nlup.pklable",
            "nlup.readers",
            "nlup.timer",
            "nlup.util"
        ],
        "version": "0.5"
    },
    "nm-tool": {
        "cmdline": [],
        "modules": [
            "nm_tool"
        ],
        "version": "0.6"
    },
    "nm53": {
        "cmdline": [
            "NM53"
        ],
        "modules": [
            "NM53"
        ],
        "version": "2017.4.10.1851"
    },
    "nma-python": {
        "cmdline": [],
        "modules": [
            "nma",
            "nma.nma"
        ],
        "version": "0.2.4"
    },
    "nmap": {
        "cmdline": [],
        "modules": [
            "nmap",
            "nmap.nmap"
        ],
        "version": "0.0.1"
    },
    "nmap-parser": {
        "cmdline": [],
        "modules": [
            "nmap_parser",
            "nmap_parser.parser"
        ],
        "version": "0.0.0"
    },
    "nmapparser": {
        "cmdline": [],
        "modules": [
            "nmapparser",
            "nmapparser._nmapxmlparser"
        ],
        "version": "0.2.5"
    },
    "nmapy": {
        "cmdline": [
            "nmapy.py"
        ],
        "modules": [
            "nmapy"
        ],
        "version": "1.0"
    },
    "nmcc-acis": {
        "cmdline": [],
        "modules": [
            "nmccacis",
            "nmccacis.stndata",
            "nmccacis.stndata.dailydata2pointsdatadict",
            "nmccacis.stndata.dailydatalisting",
            "nmccacis.stndata.dailydatatempgraph"
        ],
        "version": "0.0.3"
    },
    "nmcc-etmodels": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nmd.plonelinkasvideoembed": {
        "cmdline": [],
        "modules": [
            "nmd",
            "nmd.plonelinkasvideoembed",
            "nmd.plonelinkasvideoembed.browser",
            "nmd.plonelinkasvideoembed.browser.link",
            "nmd.plonelinkasvideoembed.testifaces",
            "nmd.plonelinkasvideoembed.tests"
        ],
        "version": "0.6"
    },
    "nmeautils": {
        "cmdline": [],
        "modules": [
            "nmeautils"
        ],
        "version": "1.0"
    },
    "nmevent": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.2"
    },
    "nmfishingreport": {
        "cmdline": [],
        "modules": [
            "nmfishingreport",
            "nmfishingreport.internet_on",
            "nmfishingreport.nmfishingreport"
        ],
        "version": "0.1.0"
    },
    "nmi-mysql": {
        "cmdline": [],
        "modules": [
            "nmi_mysql",
            "nmi_mysql.nmi_mysql",
            "nmi_mysql.utils"
        ],
        "version": "0.77"
    },
    "nml": {
        "cmdline": [],
        "modules": [
            "nml",
            "nml.actions",
            "nml.actions.action0",
            "nml.actions.action0properties",
            "nml.actions.action1",
            "nml.actions.action10",
            "nml.actions.action11",
            "nml.actions.action12",
            "nml.actions.action14",
            "nml.actions.action2",
            "nml.actions.action2layout",
            "nml.actions.action2production",
            "nml.actions.action2random",
            "nml.actions.action2real",
            "nml.actions.action2var",
            "nml.actions.action2var_variables",
            "nml.actions.action3",
            "nml.actions.action3_callbacks",
            "nml.actions.action4",
            "nml.actions.action5",
            "nml.actions.action6",
            "nml.actions.action7",
            "nml.actions.action8",
            "nml.actions.actionA",
            "nml.actions.actionB",
            "nml.actions.actionD",
            "nml.actions.actionE",
            "nml.actions.actionF",
            "nml.actions.base_action",
            "nml.actions.real_sprite",
            "nml.actions.sprite_count",
            "nml.ast",
            "nml.ast.alt_sprites",
            "nml.ast.assignment",
            "nml.ast.base_sprites",
            "nml.ast.base_statement",
            "nml.ast.basecost",
            "nml.ast.cargotable",
            "nml.ast.conditional",
            "nml.ast.deactivate",
            "nml.ast.disable_item",
            "nml.ast.error",
            "nml.ast.font",
            "nml.ast.general",
            "nml.ast.grf",
            "nml.ast.item",
            "nml.ast.loop",
            "nml.ast.override",
            "nml.ast.produce",
            "nml.ast.railtypetable",
            "nml.ast.replace",
            "nml.ast.skipall",
            "nml.ast.snowline",
            "nml.ast.sort_vehicles",
            "nml.ast.spriteblock",
            "nml.ast.switch",
            "nml.ast.tilelayout",
            "nml.ast.townnames",
            "nml.expression",
            "nml.expression.array",
            "nml.expression.base_expression",
            "nml.expression.bin_not",
            "nml.expression.binop",
            "nml.expression.bitmask",
            "nml.expression.boolean",
            "nml.expression.functioncall",
            "nml.expression.functionptr",
            "nml.expression.identifier",
            "nml.expression.parameter",
            "nml.expression.patch_variable",
            "nml.expression.special_parameter",
            "nml.expression.spritegroup_ref",
            "nml.expression.storage_op",
            "nml.expression.string",
            "nml.expression.string_literal",
            "nml.expression.ternaryop",
            "nml.expression.variable",
            "nml.free_number_list",
            "nml.generic",
            "nml.global_constants",
            "nml.grfstrings",
            "nml.lz77",
            "nml.main",
            "nml.nmlop",
            "nml.output_base",
            "nml.output_dep",
            "nml.output_grf",
            "nml.output_nfo",
            "nml.output_nml",
            "nml.palette",
            "nml.parser",
            "nml.tokens",
            "nml.unit",
            "nml.version_info"
        ],
        "version": "0.2.4"
    },
    "nmmd": {
        "cmdline": [],
        "modules": [
            "nmmd",
            "nmmd.base",
            "nmmd.ext",
            "nmmd.ext.regex"
        ],
        "version": "0.0.3"
    },
    "nmoldyn": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nmongo": {
        "cmdline": [],
        "modules": [
            "nmongo"
        ],
        "version": "0.4.0"
    },
    "nmrglue": {
        "cmdline": [],
        "modules": [
            "nmrglue",
            "nmrglue.analysis",
            "nmrglue.analysis.analysisbase",
            "nmrglue.analysis.helpers",
            "nmrglue.analysis.integration",
            "nmrglue.analysis.leastsqbound",
            "nmrglue.analysis.linesh",
            "nmrglue.analysis.lineshapes1d",
            "nmrglue.analysis.peakpick",
            "nmrglue.analysis.segmentation",
            "nmrglue.analysis.tests.test_analysis_integration",
            "nmrglue.fileio",
            "nmrglue.fileio.bruker",
            "nmrglue.fileio.convert",
            "nmrglue.fileio.fileiobase",
            "nmrglue.fileio.glue",
            "nmrglue.fileio.nmrml",
            "nmrglue.fileio.pipe",
            "nmrglue.fileio.rnmrtk",
            "nmrglue.fileio.simpson",
            "nmrglue.fileio.sparky",
            "nmrglue.fileio.table",
            "nmrglue.fileio.tecmag",
            "nmrglue.fileio.tests.test_fileiobase",
            "nmrglue.fileio.tests.test_pipe",
            "nmrglue.fileio.varian",
            "nmrglue.process",
            "nmrglue.process.nmrtxt",
            "nmrglue.process.nmrtxt.rance_kay",
            "nmrglue.process.pipe_proc",
            "nmrglue.process.proc_autophase",
            "nmrglue.process.proc_base",
            "nmrglue.process.proc_bl",
            "nmrglue.process.proc_lp",
            "nmrglue.util",
            "nmrglue.util.misc"
        ],
        "version": "0.6"
    },
    "nmrml2isa": {
        "cmdline": [],
        "modules": [
            "nmrml2isa",
            "nmrml2isa.isa",
            "nmrml2isa.nmrml",
            "nmrml2isa.parsing",
            "nmrml2isa.usermeta",
            "nmrml2isa.utils",
            "tests",
            "tests.abstract_test_isa",
            "tests.test_mtbls",
            "tests.test_nmrml_examples",
            "tests.utils"
        ],
        "version": "0.3.1"
    },
    "nmrml2isa-qt": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nmrpro": {
        "cmdline": [],
        "modules": [
            "nmrpro",
            "nmrpro.NMRFileManager",
            "nmrpro.R",
            "nmrpro.classes",
            "nmrpro.classes.NMRSpectrum",
            "nmrpro.classes.test_classes",
            "nmrpro.decorators",
            "nmrpro.exceptions",
            "nmrpro.icoshift2",
            "nmrpro.ipynb",
            "nmrpro.libs",
            "nmrpro.libs.decorator",
            "nmrpro.plugins",
            "nmrpro.plugins.FFT",
            "nmrpro.plugins.FFT.fft",
            "nmrpro.plugins.FFT.test_fft",
            "nmrpro.plugins.JSinput",
            "nmrpro.plugins.JSinput2",
            "nmrpro.plugins.PluginMount",
            "nmrpro.plugins.ZF",
            "nmrpro.plugins.ZF.test_zf",
            "nmrpro.plugins.ZF.zf",
            "nmrpro.plugins.apodization",
            "nmrpro.plugins.apodization.apod",
            "nmrpro.plugins.apodization.test_apod",
            "nmrpro.plugins.baseline",
            "nmrpro.plugins.baseline.bl",
            "nmrpro.plugins.baseline.bl_airPLS",
            "nmrpro.plugins.peakpick",
            "nmrpro.plugins.peakpick.peakpick",
            "nmrpro.plugins.phasing",
            "nmrpro.plugins.phasing.ps",
            "nmrpro.readers",
            "nmrpro.utils",
            "nmrpro.workflows"
        ],
        "version": "0.2.7"
    },
    "nmrpyschedule": {
        "cmdline": [],
        "modules": [
            "nmrpyschedule",
            "nmrpyschedule.format",
            "nmrpyschedule.generator"
        ],
        "version": "0.0.1"
    },
    "nmrpystar": {
        "cmdline": [],
        "modules": [
            "nmrpystar",
            "nmrpystar.cleantokens",
            "nmrpystar.examples",
            "nmrpystar.examples.full",
            "nmrpystar.examples.loading",
            "nmrpystar.examples.profile",
            "nmrpystar.examples.queries",
            "nmrpystar.hierarchical",
            "nmrpystar.nmrstarast",
            "nmrpystar.parser",
            "nmrpystar.scanner",
            "nmrpystar.starast",
            "nmrpystar.test",
            "nmrpystar.test.testcleantokens",
            "nmrpystar.test.testhierarchical",
            "nmrpystar.test.testparser",
            "nmrpystar.test.testscanner",
            "nmrpystar.test.teststarast",
            "nmrpystar.unparse",
            "nmrpystar.unparse.combinators",
            "nmrpystar.unparse.cst",
            "nmrpystar.unparse.maybeerror"
        ],
        "version": "0.1.0"
    },
    "nmrstarlib": {
        "cmdline": [],
        "modules": [
            "nmrstarlib",
            "nmrstarlib.bmrblex",
            "nmrstarlib.converter",
            "nmrstarlib.csviewer",
            "nmrstarlib.nmrstarlib",
            "nmrstarlib.noise",
            "nmrstarlib.plsimulator",
            "nmrstarlib.profile",
            "nmrstarlib.profile_pycallgraph",
            "nmrstarlib.translator"
        ],
        "version": "2.0.1"
    },
    "nn-wtf": {
        "cmdline": [],
        "modules": [
            "nn_wtf",
            "nn_wtf.data_set_base",
            "nn_wtf.data_sets",
            "nn_wtf.images_labels_data_set",
            "nn_wtf.input_data",
            "nn_wtf.mnist_data_sets",
            "nn_wtf.mnist_graph",
            "nn_wtf.neural_network_graph",
            "nn_wtf.neural_network_graph_base",
            "nn_wtf.neural_network_graph_mixin",
            "nn_wtf.predictor",
            "nn_wtf.saver_mixin",
            "nn_wtf.summary_writer_mixin",
            "nn_wtf.tests",
            "nn_wtf.tests.images_labels_data_set_test",
            "nn_wtf.tests.input_data_test",
            "nn_wtf.tests.neural_network_graph_test",
            "nn_wtf.tests.neural_network_optimizer_test",
            "nn_wtf.tests.predictor_test",
            "nn_wtf.tests.run_tests",
            "nn_wtf.tests.save_and_restore_test",
            "nn_wtf.tests.trainer_test",
            "nn_wtf.tests.util",
            "nn_wtf.trainer"
        ],
        "version": "0.1.7"
    },
    "nn1": {
        "cmdline": [],
        "modules": [
            "nn1",
            "nn1.NN1_API",
            "nn1.n1_apidemo",
            "nn1.version"
        ],
        "version": "0.1.0.2"
    },
    "nnester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nnet-ts": {
        "cmdline": [],
        "modules": [
            "nnet_ts",
            "nnet_ts.TimeSeriesNnet"
        ],
        "version": "1.0"
    },
    "nninit": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.dev2"
    },
    "nnipy": {
        "cmdline": [],
        "modules": [
            "nnipy",
            "nnipy.nnipy"
        ],
        "version": "0.1.1"
    },
    "nnlab": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.1"
    },
    "nnn": {
        "cmdline": [],
        "modules": [
            "mmm",
            "mmm.Reverse_Int"
        ],
        "version": "1.0.0"
    },
    "nnnester": {
        "cmdline": [],
        "modules": [
            "nnnester"
        ],
        "version": "2.0.0"
    },
    "nnpack": {
        "cmdline": [],
        "modules": [
            "nnpack",
            "nnpack.engines",
            "nnpack.engines._tensorflow",
            "nnpack.models",
            "nnpack.scaffolds"
        ],
        "version": "0.1.0"
    },
    "nnpy": {
        "cmdline": [],
        "modules": [
            "nnpy",
            "nnpy.constants",
            "nnpy.errors",
            "nnpy.socket",
            "nnpy.tests"
        ],
        "version": "1.3"
    },
    "nnresample": {
        "cmdline": [],
        "modules": [
            "nnresample"
        ],
        "version": "0.1.2"
    },
    "nnsearch": {
        "cmdline": [],
        "modules": [
            "nnsearch",
            "nnsearch.algos",
            "nnsearch.algos.BoundaryForest",
            "nnsearch.algos.pmtree",
            "nnsearch.algos.rstartree",
            "nnsearch.algos.rtree",
            "nnsearch.algos.utils",
            "nnsearch.algos.utils.entry",
            "nnsearch.algos.utils.nodes",
            "nnsearch.algos.utils.rectangle",
            "nnsearch.approx",
            "nnsearch.approx.Annoy",
            "nnsearch.approx.BF",
            "nnsearch.approx.FlannAuto",
            "nnsearch.approx.KMeans",
            "nnsearch.approx.LSHFlann",
            "nnsearch.approx.LSHNearPy",
            "nnsearch.approx.RKDTree",
            "nnsearch.baseindex",
            "nnsearch.datasets",
            "nnsearch.datasets.datasets",
            "nnsearch.datasets.density",
            "nnsearch.distances",
            "nnsearch.exact",
            "nnsearch.exact.BallTreeScikit",
            "nnsearch.exact.BruteFlann",
            "nnsearch.exact.KDFlann",
            "nnsearch.exact.KDTreeScikit",
            "nnsearch.exact.PMTree",
            "nnsearch.exact.RSTreeIndex",
            "nnsearch.exact.RTreeIndex",
            "nnsearch.flannindex"
        ],
        "version": "0.1"
    },
    "nnter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nntoolkit": {
        "cmdline": [],
        "modules": [
            "nntoolkit",
            "nntoolkit.activation_functions",
            "nntoolkit.create",
            "nntoolkit.evaluate",
            "nntoolkit.test",
            "nntoolkit.train",
            "nntoolkit.utils"
        ],
        "version": "0.1.29"
    },
    "nnyaaa": {
        "cmdline": [],
        "modules": [
            "nnyaaa"
        ],
        "version": "1.1.1"
    },
    "no": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "no-cloud": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.8"
    },
    "no-comments": {
        "cmdline": [
            "no_comments"
        ],
        "modules": [],
        "version": "0.1"
    },
    "no-limit-nester": {
        "cmdline": [],
        "modules": [
            "no_limit_nester"
        ],
        "version": "1.3.0"
    },
    "no-manylinux1": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "noa": {
        "cmdline": [],
        "modules": [
            "noa"
        ],
        "version": "0.1.0"
    },
    "noaa": {
        "cmdline": [],
        "modules": [
            "noaa",
            "noaa.exceptions",
            "noaa.forecast",
            "noaa.geocode",
            "noaa.models",
            "noaa.utils"
        ],
        "version": "0.2.1"
    },
    "noaa-radar": {
        "cmdline": [],
        "modules": [
            "noaa_radar",
            "noaa_radar.radar",
            "noaa_radar.utilities",
            "scripts",
            "scripts.fetch_radar_image_cli"
        ],
        "version": "0.7.2"
    },
    "noaaclass": {
        "cmdline": [],
        "modules": [
            "noaaclass",
            "noaaclass.core",
            "noaaclass.noaaclass",
            "noaaclass.product",
            "noaaclass.product.gvar_img"
        ],
        "version": "0.0.23"
    },
    "noaadata-py": {
        "cmdline": [
            "Makefile",
            "ais-db",
            "ais-db-rebuild-cache-tables",
            "ais-net-to-postgis",
            "ais-port-forward",
            "ais-process-day.bash",
            "ais-receive-bbox",
            "ais_5report.py",
            "ais_bin_msgs.py",
            "ais_build_postgis.py",
            "ais_build_sqlite.py",
            "ais_build_sqlite3.py",
            "ais_decimate_traffic.py",
            "ais_distance.py",
            "ais_dump_mmsi.py",
            "ais_dumpnames.py",
            "ais_filter.py",
            "ais_info.py",
            "ais_liststations.py",
            "ais_names.py",
            "ais_nmea_find_matches.py",
            "ais_nmea_info.py",
            "ais_nmea_remove_dups.py",
            "ais_nmea_uptime.py",
            "ais_nmea_uptime2.py",
            "ais_nmea_uscg_timeshift.py",
            "ais_normalize.py",
            "ais_oldlog2newlog.py",
            "ais_pg_create_transit_table.py",
            "ais_pg_grid.py",
            "ais_pg_grid_transits.py",
            "ais_pg_transitlines.py",
            "ais_pg_transitlines_noMakeLine.py",
            "ais_position_in_polygon.py",
            "ais_positions.py",
            "ais_sqlite_bsreport_analysis.py",
            "ais_towersplit.py",
            "ais_traffic_analysis.py",
            "ais_transits.py",
            "ais_uniq.py",
            "ais_uscg_splitstations.py",
            "aisuser_monitor.py",
            "aisxml2wxpy.py",
            "aisxmlbinmsg2py.py",
            "bbox-to-kml",
            "daily.sh",
            "decimate",
            "dump_wl.py",
            "find_missing_logs.py",
            "jpegexif2kml.py",
            "log_udp.py",
            "logger_handlers.py",
            "nais2postgis.py",
            "nais_pg_realtime_reaper.py",
            "port_server.py",
            "serial-logger",
            "serial-logger2.py",
            "serial_send.py",
            "serial_send2.py",
            "socket_logger.py",
            "socket_send.py",
            "stellwagen-crossings.bash",
            "stellwagen-shipreport.bash",
            "test_ais_server.py",
            "tide4_process_logs.py",
            "xy2kml",
            "xy2kmlline",
            "xy_pos_filter",
            "xymt2kml"
        ],
        "modules": [
            "ais",
            "ais.BitVector",
            "ais.ais_msg_1",
            "ais.ais_msg_10",
            "ais.ais_msg_11",
            "ais.ais_msg_12",
            "ais.ais_msg_14",
            "ais.ais_msg_15",
            "ais.ais_msg_17",
            "ais.ais_msg_18",
            "ais.ais_msg_19",
            "ais.ais_msg_1_handcoded",
            "ais.ais_msg_2",
            "ais.ais_msg_20",
            "ais.ais_msg_21",
            "ais.ais_msg_21_handcoded",
            "ais.ais_msg_22",
            "ais.ais_msg_23",
            "ais.ais_msg_24_handcoded",
            "ais.ais_msg_2_handcoded",
            "ais.ais_msg_3",
            "ais.ais_msg_3_handcoded",
            "ais.ais_msg_4",
            "ais.ais_msg_4_handcoded",
            "ais.ais_msg_5",
            "ais.ais_msg_5_utils",
            "ais.ais_msg_6",
            "ais.ais_msg_7",
            "ais.ais_msg_7_handcoded",
            "ais.ais_msg_8",
            "ais.ais_msg_9",
            "ais.aisfield",
            "ais.aisstring",
            "ais.allaistypes",
            "ais.binary",
            "ais.commstate",
            "ais.exampleParser",
            "ais.expandais",
            "ais.imo_001_11",
            "ais.imo_001_11_handcoded",
            "ais.imo_001_13",
            "ais.imo_001_14",
            "ais.nmea",
            "ais.sqlhelp",
            "ais.test",
            "ais.test_sls_waterlevel",
            "ais.timed_circular_notice",
            "ais.translators",
            "ais.waterlevel",
            "ais.waterlevel2",
            "ais.whalenotice",
            "ais.whalenotice1",
            "ais.whalenotice2",
            "aisutils",
            "aisutils.daemon",
            "aisutils.database",
            "aisutils.grid",
            "aisutils.nmea_ait",
            "aisutils.nmea_cnc",
            "aisutils.normalize",
            "aisutils.server",
            "aisutils.uscg",
            "aisutils.wkb",
            "nmea",
            "nmea.checksum",
            "nmea.gga",
            "nmea.nmea_error",
            "nmea.rmc",
            "nmea.zda",
            "nmea.znt",
            "noaadata",
            "noaadata.dumpallwl",
            "noaadata.stations",
            "noaadata.tideserver",
            "noaadata.waterlevel_dap",
            "noaadata.waterlevelraw"
        ],
        "version": "0.45"
    },
    "noaadem": {
        "cmdline": [],
        "modules": [
            "noaadem",
            "noaadem.instrument",
            "noaadem.tails",
            "tests",
            "tests.instrument_test"
        ],
        "version": "0.0.16"
    },
    "noaaweather": {
        "cmdline": [],
        "modules": [
            "noaaweather",
            "noaaweather.test",
            "noaaweather.weather"
        ],
        "version": "0.1.0"
    },
    "noah": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "noaho": {
        "cmdline": [],
        "modules": [],
        "version": "0.9.6.1"
    },
    "noat": {
        "cmdline": [],
        "modules": [
            "noat"
        ],
        "version": "1.0.2"
    },
    "noattr": {
        "cmdline": [],
        "modules": [
            "noattr"
        ],
        "version": "0.0.6"
    },
    "noauthsftp": {
        "cmdline": [],
        "modules": [
            "noauthsftp"
        ],
        "version": "0.4"
    },
    "nobel": {
        "cmdline": [],
        "modules": [
            "nobel",
            "nobel.api",
            "nobel.countries",
            "nobel.data",
            "nobel.laureates",
            "nobel.prizes"
        ],
        "version": "0.2"
    },
    "nobeldb": {
        "cmdline": [],
        "modules": [
            "nobeldb",
            "nobeldb.cli",
            "tests"
        ],
        "version": "0.2.0"
    },
    "nobot": {
        "cmdline": [],
        "modules": [
            "nobot",
            "nobot.client",
            "nobot.fields",
            "nobot.models",
            "nobot.tests",
            "nobot.tests.settings",
            "nobot.tests.test_client",
            "nobot.widgets"
        ],
        "version": "0.4.1"
    },
    "nobu": {
        "cmdline": [],
        "modules": [
            "nobu",
            "nobu.nobu"
        ],
        "version": "1.0.4"
    },
    "noc": {
        "cmdline": [],
        "modules": [
            "__init__",
            "cm",
            "cm.apps",
            "cm.apps.config",
            "cm.apps.config.tests",
            "cm.apps.config.tests.test",
            "cm.apps.config.views",
            "cm.apps.dns",
            "cm.apps.dns.tests",
            "cm.apps.dns.tests.test",
            "cm.apps.dns.views",
            "cm.apps.objectnotify",
            "cm.apps.objectnotify.tests",
            "cm.apps.objectnotify.tests.test",
            "cm.apps.objectnotify.views",
            "cm.apps.prefixlist",
            "cm.apps.prefixlist.tests",
            "cm.apps.prefixlist.tests.test",
            "cm.apps.prefixlist.views",
            "cm.apps.reportlatestchanges",
            "cm.apps.reportlatestchanges.tests",
            "cm.apps.reportlatestchanges.tests.test",
            "cm.apps.reportlatestchanges.views",
            "cm.apps.reportstaleconfigs",
            "cm.apps.reportstaleconfigs.tests",
            "cm.apps.reportstaleconfigs.tests.test",
            "cm.apps.reportstaleconfigs.views",
            "cm.apps.rpsl",
            "cm.apps.rpsl.tests",
            "cm.apps.rpsl.tests.test",
            "cm.apps.rpsl.views",
            "cm.management",
            "cm.management.commands",
            "cm.management.commands.pull",
            "cm.management.commands.push",
            "cm.migrations",
            "cm.migrations.0001_initial",
            "cm.migrations.0002_register_vcs",
            "cm.migrations.0003_access_profile",
            "cm.migrations.0004_split_object",
            "cm.migrations.0005_split_object_data",
            "cm.migrations.0006_rpsl",
            "cm.migrations.0007_last_modified",
            "cm.migrations.0008_notify",
            "cm.migrations.0009_access_and_notify",
            "cm.migrations.0010_trap_source_ip",
            "cm.migrations.0011_clean_up_config",
            "cm.migrations.0012_object_notify_add_notification_group",
            "cm.migrations.0013_create_notification_groups",
            "cm.migrations.0014_object_notifify_drop_emails",
            "cm.migrations.0015_tags",
            "cm.migrations.0016_no_objectgroup",
            "cm.models",
            "cm.periodics",
            "cm.periodics.config_pull",
            "cm.periodics.dns_pull",
            "cm.periodics.dns_push",
            "cm.periodics.prefix_list_pull",
            "cm.periodics.rpsl_pull",
            "cm.repoapp",
            "cm.templatetags",
            "cm.templatetags.cmtags",
            "cm.vcs",
            "cm.vcs.cvs",
            "cm.vcs.hg",
            "contrib.src.Jinja2.jinja2",
            "contrib.src.Jinja2.jinja2._ipysupport",
            "contrib.src.Jinja2.jinja2._stringdefs",
            "contrib.src.Jinja2.jinja2.bccache",
            "contrib.src.Jinja2.jinja2.compiler",
            "contrib.src.Jinja2.jinja2.constants",
            "contrib.src.Jinja2.jinja2.debug",
            "contrib.src.Jinja2.jinja2.defaults",
            "contrib.src.Jinja2.jinja2.environment",
            "contrib.src.Jinja2.jinja2.exceptions",
            "contrib.src.Jinja2.jinja2.ext",
            "contrib.src.Jinja2.jinja2.filters",
            "contrib.src.Jinja2.jinja2.lexer",
            "contrib.src.Jinja2.jinja2.loaders",
            "contrib.src.Jinja2.jinja2.meta",
            "contrib.src.Jinja2.jinja2.nodes",
            "contrib.src.Jinja2.jinja2.optimizer",
            "contrib.src.Jinja2.jinja2.parser",
            "contrib.src.Jinja2.jinja2.runtime",
            "contrib.src.Jinja2.jinja2.sandbox",
            "contrib.src.Jinja2.jinja2.tests",
            "contrib.src.Jinja2.jinja2.utils",
            "contrib.src.Jinja2.jinja2.visitor",
            "contrib.src.Jinja2.tests.loaderres",
            "contrib.src.Pygments.pygments",
            "contrib.src.Pygments.pygments.cmdline",
            "contrib.src.Pygments.pygments.console",
            "contrib.src.Pygments.pygments.filter",
            "contrib.src.Pygments.pygments.filters",
            "contrib.src.Pygments.pygments.formatter",
            "contrib.src.Pygments.pygments.formatters",
            "contrib.src.Pygments.pygments.formatters._mapping",
            "contrib.src.Pygments.pygments.formatters.bbcode",
            "contrib.src.Pygments.pygments.formatters.html",
            "contrib.src.Pygments.pygments.formatters.img",
            "contrib.src.Pygments.pygments.formatters.latex",
            "contrib.src.Pygments.pygments.formatters.other",
            "contrib.src.Pygments.pygments.formatters.rtf",
            "contrib.src.Pygments.pygments.formatters.svg",
            "contrib.src.Pygments.pygments.formatters.terminal",
            "contrib.src.Pygments.pygments.formatters.terminal256",
            "contrib.src.Pygments.pygments.lexer",
            "contrib.src.Pygments.pygments.lexers",
            "contrib.src.Pygments.pygments.lexers._asybuiltins",
            "contrib.src.Pygments.pygments.lexers._clbuiltins",
            "contrib.src.Pygments.pygments.lexers._luabuiltins",
            "contrib.src.Pygments.pygments.lexers._mapping",
            "contrib.src.Pygments.pygments.lexers._phpbuiltins",
            "contrib.src.Pygments.pygments.lexers._vimbuiltins",
            "contrib.src.Pygments.pygments.lexers.agile",
            "contrib.src.Pygments.pygments.lexers.asm",
            "contrib.src.Pygments.pygments.lexers.compiled",
            "contrib.src.Pygments.pygments.lexers.dotnet",
            "contrib.src.Pygments.pygments.lexers.functional",
            "contrib.src.Pygments.pygments.lexers.math",
            "contrib.src.Pygments.pygments.lexers.other",
            "contrib.src.Pygments.pygments.lexers.parsers",
            "contrib.src.Pygments.pygments.lexers.special",
            "contrib.src.Pygments.pygments.lexers.templates",
            "contrib.src.Pygments.pygments.lexers.text",
            "contrib.src.Pygments.pygments.lexers.web",
            "contrib.src.Pygments.pygments.plugin",
            "contrib.src.Pygments.pygments.scanner",
            "contrib.src.Pygments.pygments.style",
            "contrib.src.Pygments.pygments.styles",
            "contrib.src.Pygments.pygments.styles.autumn",
            "contrib.src.Pygments.pygments.styles.borland",
            "contrib.src.Pygments.pygments.styles.bw",
            "contrib.src.Pygments.pygments.styles.colorful",
            "contrib.src.Pygments.pygments.styles.default",
            "contrib.src.Pygments.pygments.styles.emacs",
            "contrib.src.Pygments.pygments.styles.friendly",
            "contrib.src.Pygments.pygments.styles.fruity",
            "contrib.src.Pygments.pygments.styles.manni",
            "contrib.src.Pygments.pygments.styles.monokai",
            "contrib.src.Pygments.pygments.styles.murphy",
            "contrib.src.Pygments.pygments.styles.native",
            "contrib.src.Pygments.pygments.styles.pastie",
            "contrib.src.Pygments.pygments.styles.perldoc",
            "contrib.src.Pygments.pygments.styles.tango",
            "contrib.src.Pygments.pygments.styles.trac",
            "contrib.src.Pygments.pygments.styles.vim",
            "contrib.src.Pygments.pygments.styles.vs",
            "contrib.src.Pygments.pygments.token",
            "contrib.src.Pygments.pygments.unistring",
            "contrib.src.Pygments.pygments.util",
            "contrib.src.Sphinx.sphinx",
            "contrib.src.Sphinx.sphinx.addnodes",
            "contrib.src.Sphinx.sphinx.application",
            "contrib.src.Sphinx.sphinx.builder",
            "contrib.src.Sphinx.sphinx.builders",
            "contrib.src.Sphinx.sphinx.builders.changes",
            "contrib.src.Sphinx.sphinx.builders.devhelp",
            "contrib.src.Sphinx.sphinx.builders.epub",
            "contrib.src.Sphinx.sphinx.builders.html",
            "contrib.src.Sphinx.sphinx.builders.htmlhelp",
            "contrib.src.Sphinx.sphinx.builders.latex",
            "contrib.src.Sphinx.sphinx.builders.linkcheck",
            "contrib.src.Sphinx.sphinx.builders.manpage",
            "contrib.src.Sphinx.sphinx.builders.qthelp",
            "contrib.src.Sphinx.sphinx.builders.text",
            "contrib.src.Sphinx.sphinx.cmdline",
            "contrib.src.Sphinx.sphinx.config",
            "contrib.src.Sphinx.sphinx.directives",
            "contrib.src.Sphinx.sphinx.directives.code",
            "contrib.src.Sphinx.sphinx.directives.desc",
            "contrib.src.Sphinx.sphinx.directives.other",
            "contrib.src.Sphinx.sphinx.domains",
            "contrib.src.Sphinx.sphinx.domains.c",
            "contrib.src.Sphinx.sphinx.domains.cpp",
            "contrib.src.Sphinx.sphinx.domains.javascript",
            "contrib.src.Sphinx.sphinx.domains.python",
            "contrib.src.Sphinx.sphinx.domains.rst",
            "contrib.src.Sphinx.sphinx.domains.std",
            "contrib.src.Sphinx.sphinx.environment",
            "contrib.src.Sphinx.sphinx.errors",
            "contrib.src.Sphinx.sphinx.ext",
            "contrib.src.Sphinx.sphinx.ext.autodoc",
            "contrib.src.Sphinx.sphinx.ext.autosummary",
            "contrib.src.Sphinx.sphinx.ext.autosummary.generate",
            "contrib.src.Sphinx.sphinx.ext.coverage",
            "contrib.src.Sphinx.sphinx.ext.doctest",
            "contrib.src.Sphinx.sphinx.ext.extlinks",
            "contrib.src.Sphinx.sphinx.ext.graphviz",
            "contrib.src.Sphinx.sphinx.ext.ifconfig",
            "contrib.src.Sphinx.sphinx.ext.inheritance_diagram",
            "contrib.src.Sphinx.sphinx.ext.intersphinx",
            "contrib.src.Sphinx.sphinx.ext.jsmath",
            "contrib.src.Sphinx.sphinx.ext.mathbase",
            "contrib.src.Sphinx.sphinx.ext.oldcmarkup",
            "contrib.src.Sphinx.sphinx.ext.pngmath",
            "contrib.src.Sphinx.sphinx.ext.refcounting",
            "contrib.src.Sphinx.sphinx.ext.todo",
            "contrib.src.Sphinx.sphinx.ext.viewcode",
            "contrib.src.Sphinx.sphinx.highlighting",
            "contrib.src.Sphinx.sphinx.jinja2glue",
            "contrib.src.Sphinx.sphinx.locale",
            "contrib.src.Sphinx.sphinx.pycode",
            "contrib.src.Sphinx.sphinx.pycode.nodes",
            "contrib.src.Sphinx.sphinx.pycode.pgen2",
            "contrib.src.Sphinx.sphinx.pycode.pgen2.driver",
            "contrib.src.Sphinx.sphinx.pycode.pgen2.grammar",
            "contrib.src.Sphinx.sphinx.pycode.pgen2.literals",
            "contrib.src.Sphinx.sphinx.pycode.pgen2.parse",
            "contrib.src.Sphinx.sphinx.pycode.pgen2.pgen",
            "contrib.src.Sphinx.sphinx.pycode.pgen2.token",
            "contrib.src.Sphinx.sphinx.pycode.pgen2.tokenize",
            "contrib.src.Sphinx.sphinx.quickstart",
            "contrib.src.Sphinx.sphinx.roles",
            "contrib.src.Sphinx.sphinx.search",
            "contrib.src.Sphinx.sphinx.setup_command",
            "contrib.src.Sphinx.sphinx.theming",
            "contrib.src.Sphinx.sphinx.util",
            "contrib.src.Sphinx.sphinx.util.compat",
            "contrib.src.Sphinx.sphinx.util.console",
            "contrib.src.Sphinx.sphinx.util.docfields",
            "contrib.src.Sphinx.sphinx.util.docstrings",
            "contrib.src.Sphinx.sphinx.util.inspect",
            "contrib.src.Sphinx.sphinx.util.jsdump",
            "contrib.src.Sphinx.sphinx.util.jsonimpl",
            "contrib.src.Sphinx.sphinx.util.matching",
            "contrib.src.Sphinx.sphinx.util.nodes",
            "contrib.src.Sphinx.sphinx.util.osutil",
            "contrib.src.Sphinx.sphinx.util.png",
            "contrib.src.Sphinx.sphinx.util.pycompat",
            "contrib.src.Sphinx.sphinx.util.smartypants",
            "contrib.src.Sphinx.sphinx.util.stemmer",
            "contrib.src.Sphinx.sphinx.util.tags",
            "contrib.src.Sphinx.sphinx.util.texescape",
            "contrib.src.Sphinx.sphinx.writers",
            "contrib.src.Sphinx.sphinx.writers.html",
            "contrib.src.Sphinx.sphinx.writers.latex",
            "contrib.src.Sphinx.sphinx.writers.manpage",
            "contrib.src.Sphinx.sphinx.writers.text",
            "contrib.src.Sphinx.tests.etree13",
            "contrib.src.Sphinx.tests.etree13.ElementPath",
            "contrib.src.Sphinx.tests.etree13.ElementTree",
            "contrib.src.Sphinx.tests.etree13.HTMLTreeBuilder",
            "contrib.src.coverage.coverage",
            "contrib.src.coverage.coverage.annotate",
            "contrib.src.coverage.coverage.backward",
            "contrib.src.coverage.coverage.bytecode",
            "contrib.src.coverage.coverage.cmdline",
            "contrib.src.coverage.coverage.codeunit",
            "contrib.src.coverage.coverage.collector",
            "contrib.src.coverage.coverage.config",
            "contrib.src.coverage.coverage.control",
            "contrib.src.coverage.coverage.data",
            "contrib.src.coverage.coverage.execfile",
            "contrib.src.coverage.coverage.files",
            "contrib.src.coverage.coverage.html",
            "contrib.src.coverage.coverage.misc",
            "contrib.src.coverage.coverage.parser",
            "contrib.src.coverage.coverage.phystokens",
            "contrib.src.coverage.coverage.report",
            "contrib.src.coverage.coverage.results",
            "contrib.src.coverage.coverage.summary",
            "contrib.src.coverage.coverage.templite",
            "contrib.src.coverage.coverage.xmlreport",
            "contrib.src.django-tagging.tagging",
            "contrib.src.django-tagging.tagging.admin",
            "contrib.src.django-tagging.tagging.fields",
            "contrib.src.django-tagging.tagging.forms",
            "contrib.src.django-tagging.tagging.generic",
            "contrib.src.django-tagging.tagging.managers",
            "contrib.src.django-tagging.tagging.models",
            "contrib.src.django-tagging.tagging.settings",
            "contrib.src.django-tagging.tagging.templatetags",
            "contrib.src.django-tagging.tagging.templatetags.tagging_tags",
            "contrib.src.django-tagging.tagging.tests",
            "contrib.src.django-tagging.tagging.tests.models",
            "contrib.src.django-tagging.tagging.tests.settings",
            "contrib.src.django-tagging.tagging.tests.tests",
            "contrib.src.django-tagging.tagging.utils",
            "contrib.src.django-tagging.tagging.views",
            "contrib.src.django.django",
            "contrib.src.django.django.bin",
            "contrib.src.django.django.bin.daily_cleanup",
            "contrib.src.django.django.bin.django-admin",
            "contrib.src.django.django.bin.profiling",
            "contrib.src.django.django.bin.profiling.gather_profile_stats",
            "contrib.src.django.django.bin.unique-messages",
            "contrib.src.django.django.conf",
            "contrib.src.django.django.conf.app_template",
            "contrib.src.django.django.conf.app_template.models",
            "contrib.src.django.django.conf.app_template.tests",
            "contrib.src.django.django.conf.app_template.views",
            "contrib.src.django.django.conf.global_settings",
            "contrib.src.django.django.conf.locale",
            "contrib.src.django.django.conf.locale.ar",
            "contrib.src.django.django.conf.locale.ar.formats",
            "contrib.src.django.django.conf.locale.bg",
            "contrib.src.django.django.conf.locale.bg.formats",
            "contrib.src.django.django.conf.locale.bn",
            "contrib.src.django.django.conf.locale.bn.formats",
            "contrib.src.django.django.conf.locale.bs",
            "contrib.src.django.django.conf.locale.bs.formats",
            "contrib.src.django.django.conf.locale.ca",
            "contrib.src.django.django.conf.locale.ca.formats",
            "contrib.src.django.django.conf.locale.cs",
            "contrib.src.django.django.conf.locale.cs.formats",
            "contrib.src.django.django.conf.locale.cy",
            "contrib.src.django.django.conf.locale.cy.formats",
            "contrib.src.django.django.conf.locale.da",
            "contrib.src.django.django.conf.locale.da.formats",
            "contrib.src.django.django.conf.locale.de",
            "contrib.src.django.django.conf.locale.de.formats",
            "contrib.src.django.django.conf.locale.el",
            "contrib.src.django.django.conf.locale.el.formats",
            "contrib.src.django.django.conf.locale.en",
            "contrib.src.django.django.conf.locale.en.formats",
            "contrib.src.django.django.conf.locale.en_GB",
            "contrib.src.django.django.conf.locale.en_GB.formats",
            "contrib.src.django.django.conf.locale.es",
            "contrib.src.django.django.conf.locale.es.formats",
            "contrib.src.django.django.conf.locale.es_AR",
            "contrib.src.django.django.conf.locale.es_AR.formats",
            "contrib.src.django.django.conf.locale.es_MX",
            "contrib.src.django.django.conf.locale.es_MX.formats",
            "contrib.src.django.django.conf.locale.es_NI",
            "contrib.src.django.django.conf.locale.es_NI.formats",
            "contrib.src.django.django.conf.locale.et",
            "contrib.src.django.django.conf.locale.et.formats",
            "contrib.src.django.django.conf.locale.eu",
            "contrib.src.django.django.conf.locale.eu.formats",
            "contrib.src.django.django.conf.locale.fa",
            "contrib.src.django.django.conf.locale.fa.formats",
            "contrib.src.django.django.conf.locale.fi",
            "contrib.src.django.django.conf.locale.fi.formats",
            "contrib.src.django.django.conf.locale.fr",
            "contrib.src.django.django.conf.locale.fr.formats",
            "contrib.src.django.django.conf.locale.fy_NL",
            "contrib.src.django.django.conf.locale.fy_NL.formats",
            "contrib.src.django.django.conf.locale.ga",
            "contrib.src.django.django.conf.locale.ga.formats",
            "contrib.src.django.django.conf.locale.gl",
            "contrib.src.django.django.conf.locale.gl.formats",
            "contrib.src.django.django.conf.locale.he",
            "contrib.src.django.django.conf.locale.he.formats",
            "contrib.src.django.django.conf.locale.hi",
            "contrib.src.django.django.conf.locale.hi.formats",
            "contrib.src.django.django.conf.locale.hr",
            "contrib.src.django.django.conf.locale.hr.formats",
            "contrib.src.django.django.conf.locale.hu",
            "contrib.src.django.django.conf.locale.hu.formats",
            "contrib.src.django.django.conf.locale.id",
            "contrib.src.django.django.conf.locale.id.formats",
            "contrib.src.django.django.conf.locale.is",
            "contrib.src.django.django.conf.locale.is.formats",
            "contrib.src.django.django.conf.locale.it",
            "contrib.src.django.django.conf.locale.it.formats",
            "contrib.src.django.django.conf.locale.ja",
            "contrib.src.django.django.conf.locale.ja.formats",
            "contrib.src.django.django.conf.locale.ka",
            "contrib.src.django.django.conf.locale.ka.formats",
            "contrib.src.django.django.conf.locale.km",
            "contrib.src.django.django.conf.locale.km.formats",
            "contrib.src.django.django.conf.locale.kn",
            "contrib.src.django.django.conf.locale.kn.formats",
            "contrib.src.django.django.conf.locale.ko",
            "contrib.src.django.django.conf.locale.ko.formats",
            "contrib.src.django.django.conf.locale.lt",
            "contrib.src.django.django.conf.locale.lt.formats",
            "contrib.src.django.django.conf.locale.lv",
            "contrib.src.django.django.conf.locale.lv.formats",
            "contrib.src.django.django.conf.locale.mk",
            "contrib.src.django.django.conf.locale.mk.formats",
            "contrib.src.django.django.conf.locale.ml",
            "contrib.src.django.django.conf.locale.ml.formats",
            "contrib.src.django.django.conf.locale.mn",
            "contrib.src.django.django.conf.locale.mn.formats",
            "contrib.src.django.django.conf.locale.nb",
            "contrib.src.django.django.conf.locale.nb.formats",
            "contrib.src.django.django.conf.locale.nl",
            "contrib.src.django.django.conf.locale.nl.formats",
            "contrib.src.django.django.conf.locale.nn",
            "contrib.src.django.django.conf.locale.nn.formats",
            "contrib.src.django.django.conf.locale.no",
            "contrib.src.django.django.conf.locale.no.formats",
            "contrib.src.django.django.conf.locale.pl",
            "contrib.src.django.django.conf.locale.pl.formats",
            "contrib.src.django.django.conf.locale.pt",
            "contrib.src.django.django.conf.locale.pt.formats",
            "contrib.src.django.django.conf.locale.pt_BR",
            "contrib.src.django.django.conf.locale.pt_BR.formats",
            "contrib.src.django.django.conf.locale.ro",
            "contrib.src.django.django.conf.locale.ro.formats",
            "contrib.src.django.django.conf.locale.ru",
            "contrib.src.django.django.conf.locale.ru.formats",
            "contrib.src.django.django.conf.locale.sk",
            "contrib.src.django.django.conf.locale.sk.formats",
            "contrib.src.django.django.conf.locale.sl",
            "contrib.src.django.django.conf.locale.sl.formats",
            "contrib.src.django.django.conf.locale.sq",
            "contrib.src.django.django.conf.locale.sq.formats",
            "contrib.src.django.django.conf.locale.sr",
            "contrib.src.django.django.conf.locale.sr.formats",
            "contrib.src.django.django.conf.locale.sr_Latn",
            "contrib.src.django.django.conf.locale.sr_Latn.formats",
            "contrib.src.django.django.conf.locale.sv",
            "contrib.src.django.django.conf.locale.sv.formats",
            "contrib.src.django.django.conf.locale.ta",
            "contrib.src.django.django.conf.locale.ta.formats",
            "contrib.src.django.django.conf.locale.te",
            "contrib.src.django.django.conf.locale.te.formats",
            "contrib.src.django.django.conf.locale.th",
            "contrib.src.django.django.conf.locale.th.formats",
            "contrib.src.django.django.conf.locale.tr",
            "contrib.src.django.django.conf.locale.tr.formats",
            "contrib.src.django.django.conf.locale.uk",
            "contrib.src.django.django.conf.locale.uk.formats",
            "contrib.src.django.django.conf.locale.vi",
            "contrib.src.django.django.conf.locale.vi.formats",
            "contrib.src.django.django.conf.locale.zh_CN",
            "contrib.src.django.django.conf.locale.zh_CN.formats",
            "contrib.src.django.django.conf.locale.zh_TW",
            "contrib.src.django.django.conf.locale.zh_TW.formats",
            "contrib.src.django.django.conf.project_template",
            "contrib.src.django.django.conf.project_template.manage",
            "contrib.src.django.django.conf.project_template.settings",
            "contrib.src.django.django.conf.project_template.urls",
            "contrib.src.django.django.conf.urls",
            "contrib.src.django.django.conf.urls.defaults",
            "contrib.src.django.django.conf.urls.i18n",
            "contrib.src.django.django.conf.urls.shortcut",
            "contrib.src.django.django.conf.urls.static",
            "contrib.src.django.django.contrib",
            "contrib.src.django.django.contrib.admin",
            "contrib.src.django.django.contrib.admin.actions",
            "contrib.src.django.django.contrib.admin.filterspecs",
            "contrib.src.django.django.contrib.admin.forms",
            "contrib.src.django.django.contrib.admin.helpers",
            "contrib.src.django.django.contrib.admin.models",
            "contrib.src.django.django.contrib.admin.options",
            "contrib.src.django.django.contrib.admin.sites",
            "contrib.src.django.django.contrib.admin.templatetags",
            "contrib.src.django.django.contrib.admin.templatetags.admin_list",
            "contrib.src.django.django.contrib.admin.templatetags.admin_modify",
            "contrib.src.django.django.contrib.admin.templatetags.adminmedia",
            "contrib.src.django.django.contrib.admin.templatetags.log",
            "contrib.src.django.django.contrib.admin.util",
            "contrib.src.django.django.contrib.admin.validation",
            "contrib.src.django.django.contrib.admin.views",
            "contrib.src.django.django.contrib.admin.views.decorators",
            "contrib.src.django.django.contrib.admin.views.main",
            "contrib.src.django.django.contrib.admin.widgets",
            "contrib.src.django.django.contrib.admindocs",
            "contrib.src.django.django.contrib.admindocs.models",
            "contrib.src.django.django.contrib.admindocs.tests",
            "contrib.src.django.django.contrib.admindocs.tests.fields",
            "contrib.src.django.django.contrib.admindocs.urls",
            "contrib.src.django.django.contrib.admindocs.utils",
            "contrib.src.django.django.contrib.admindocs.views",
            "contrib.src.django.django.contrib.auth",
            "contrib.src.django.django.contrib.auth.admin",
            "contrib.src.django.django.contrib.auth.backends",
            "contrib.src.django.django.contrib.auth.context_processors",
            "contrib.src.django.django.contrib.auth.create_superuser",
            "contrib.src.django.django.contrib.auth.decorators",
            "contrib.src.django.django.contrib.auth.forms",
            "contrib.src.django.django.contrib.auth.handlers",
            "contrib.src.django.django.contrib.auth.handlers.modpython",
            "contrib.src.django.django.contrib.auth.management",
            "contrib.src.django.django.contrib.auth.management.commands",
            "contrib.src.django.django.contrib.auth.management.commands.changepassword",
            "contrib.src.django.django.contrib.auth.management.commands.createsuperuser",
            "contrib.src.django.django.contrib.auth.middleware",
            "contrib.src.django.django.contrib.auth.models",
            "contrib.src.django.django.contrib.auth.signals",
            "contrib.src.django.django.contrib.auth.tests",
            "contrib.src.django.django.contrib.auth.tests.auth_backends",
            "contrib.src.django.django.contrib.auth.tests.basic",
            "contrib.src.django.django.contrib.auth.tests.decorators",
            "contrib.src.django.django.contrib.auth.tests.forms",
            "contrib.src.django.django.contrib.auth.tests.models",
            "contrib.src.django.django.contrib.auth.tests.permissions",
            "contrib.src.django.django.contrib.auth.tests.remote_user",
            "contrib.src.django.django.contrib.auth.tests.signals",
            "contrib.src.django.django.contrib.auth.tests.tokens",
            "contrib.src.django.django.contrib.auth.tests.urls",
            "contrib.src.django.django.contrib.auth.tests.views",
            "contrib.src.django.django.contrib.auth.tokens",
            "contrib.src.django.django.contrib.auth.urls",
            "contrib.src.django.django.contrib.auth.views",
            "contrib.src.django.django.contrib.comments",
            "contrib.src.django.django.contrib.comments.admin",
            "contrib.src.django.django.contrib.comments.feeds",
            "contrib.src.django.django.contrib.comments.forms",
            "contrib.src.django.django.contrib.comments.managers",
            "contrib.src.django.django.contrib.comments.models",
            "contrib.src.django.django.contrib.comments.moderation",
            "contrib.src.django.django.contrib.comments.signals",
            "contrib.src.django.django.contrib.comments.templatetags",
            "contrib.src.django.django.contrib.comments.templatetags.comments",
            "contrib.src.django.django.contrib.comments.urls",
            "contrib.src.django.django.contrib.comments.views",
            "contrib.src.django.django.contrib.comments.views.comments",
            "contrib.src.django.django.contrib.comments.views.moderation",
            "contrib.src.django.django.contrib.comments.views.utils",
            "contrib.src.django.django.contrib.contenttypes",
            "contrib.src.django.django.contrib.contenttypes.generic",
            "contrib.src.django.django.contrib.contenttypes.management",
            "contrib.src.django.django.contrib.contenttypes.models",
            "contrib.src.django.django.contrib.contenttypes.tests",
            "contrib.src.django.django.contrib.contenttypes.views",
            "contrib.src.django.django.contrib.csrf",
            "contrib.src.django.django.contrib.csrf.middleware",
            "contrib.src.django.django.contrib.databrowse",
            "contrib.src.django.django.contrib.databrowse.datastructures",
            "contrib.src.django.django.contrib.databrowse.plugins",
            "contrib.src.django.django.contrib.databrowse.plugins.calendars",
            "contrib.src.django.django.contrib.databrowse.plugins.fieldchoices",
            "contrib.src.django.django.contrib.databrowse.plugins.objects",
            "contrib.src.django.django.contrib.databrowse.sites",
            "contrib.src.django.django.contrib.databrowse.urls",
            "contrib.src.django.django.contrib.databrowse.views",
            "contrib.src.django.django.contrib.flatpages",
            "contrib.src.django.django.contrib.flatpages.admin",
            "contrib.src.django.django.contrib.flatpages.middleware",
            "contrib.src.django.django.contrib.flatpages.models",
            "contrib.src.django.django.contrib.flatpages.templatetags",
            "contrib.src.django.django.contrib.flatpages.templatetags.flatpages",
            "contrib.src.django.django.contrib.flatpages.tests",
            "contrib.src.django.django.contrib.flatpages.tests.csrf",
            "contrib.src.django.django.contrib.flatpages.tests.forms",
            "contrib.src.django.django.contrib.flatpages.tests.middleware",
            "contrib.src.django.django.contrib.flatpages.tests.templatetags",
            "contrib.src.django.django.contrib.flatpages.tests.urls",
            "contrib.src.django.django.contrib.flatpages.tests.views",
            "contrib.src.django.django.contrib.flatpages.urls",
            "contrib.src.django.django.contrib.flatpages.views",
            "contrib.src.django.django.contrib.formtools",
            "contrib.src.django.django.contrib.formtools.models",
            "contrib.src.django.django.contrib.formtools.preview",
            "contrib.src.django.django.contrib.formtools.tests",
            "contrib.src.django.django.contrib.formtools.tests.urls",
            "contrib.src.django.django.contrib.formtools.utils",
            "contrib.src.django.django.contrib.formtools.wizard",
            "contrib.src.django.django.contrib.gis",
            "contrib.src.django.django.contrib.gis.admin",
            "contrib.src.django.django.contrib.gis.admin.options",
            "contrib.src.django.django.contrib.gis.admin.widgets",
            "contrib.src.django.django.contrib.gis.db",
            "contrib.src.django.django.contrib.gis.db.backend",
            "contrib.src.django.django.contrib.gis.db.backends",
            "contrib.src.django.django.contrib.gis.db.backends.adapter",
            "contrib.src.django.django.contrib.gis.db.backends.base",
            "contrib.src.django.django.contrib.gis.db.backends.mysql",
            "contrib.src.django.django.contrib.gis.db.backends.mysql.base",
            "contrib.src.django.django.contrib.gis.db.backends.mysql.creation",
            "contrib.src.django.django.contrib.gis.db.backends.mysql.introspection",
            "contrib.src.django.django.contrib.gis.db.backends.mysql.operations",
            "contrib.src.django.django.contrib.gis.db.backends.oracle",
            "contrib.src.django.django.contrib.gis.db.backends.oracle.adapter",
            "contrib.src.django.django.contrib.gis.db.backends.oracle.base",
            "contrib.src.django.django.contrib.gis.db.backends.oracle.compiler",
            "contrib.src.django.django.contrib.gis.db.backends.oracle.creation",
            "contrib.src.django.django.contrib.gis.db.backends.oracle.introspection",
            "contrib.src.django.django.contrib.gis.db.backends.oracle.models",
            "contrib.src.django.django.contrib.gis.db.backends.oracle.operations",
            "contrib.src.django.django.contrib.gis.db.backends.postgis",
            "contrib.src.django.django.contrib.gis.db.backends.postgis.adapter",
            "contrib.src.django.django.contrib.gis.db.backends.postgis.base",
            "contrib.src.django.django.contrib.gis.db.backends.postgis.creation",
            "contrib.src.django.django.contrib.gis.db.backends.postgis.introspection",
            "contrib.src.django.django.contrib.gis.db.backends.postgis.models",
            "contrib.src.django.django.contrib.gis.db.backends.postgis.operations",
            "contrib.src.django.django.contrib.gis.db.backends.spatialite",
            "contrib.src.django.django.contrib.gis.db.backends.spatialite.adapter",
            "contrib.src.django.django.contrib.gis.db.backends.spatialite.base",
            "contrib.src.django.django.contrib.gis.db.backends.spatialite.client",
            "contrib.src.django.django.contrib.gis.db.backends.spatialite.compiler",
            "contrib.src.django.django.contrib.gis.db.backends.spatialite.creation",
            "contrib.src.django.django.contrib.gis.db.backends.spatialite.introspection",
            "contrib.src.django.django.contrib.gis.db.backends.spatialite.models",
            "contrib.src.django.django.contrib.gis.db.backends.spatialite.operations",
            "contrib.src.django.django.contrib.gis.db.backends.util",
            "contrib.src.django.django.contrib.gis.db.models",
            "contrib.src.django.django.contrib.gis.db.models.aggregates",
            "contrib.src.django.django.contrib.gis.db.models.fields",
            "contrib.src.django.django.contrib.gis.db.models.manager",
            "contrib.src.django.django.contrib.gis.db.models.proxy",
            "contrib.src.django.django.contrib.gis.db.models.query",
            "contrib.src.django.django.contrib.gis.db.models.sql",
            "contrib.src.django.django.contrib.gis.db.models.sql.aggregates",
            "contrib.src.django.django.contrib.gis.db.models.sql.compiler",
            "contrib.src.django.django.contrib.gis.db.models.sql.conversion",
            "contrib.src.django.django.contrib.gis.db.models.sql.query",
            "contrib.src.django.django.contrib.gis.db.models.sql.where",
            "contrib.src.django.django.contrib.gis.feeds",
            "contrib.src.django.django.contrib.gis.forms",
            "contrib.src.django.django.contrib.gis.forms.fields",
            "contrib.src.django.django.contrib.gis.gdal",
            "contrib.src.django.django.contrib.gis.gdal.base",
            "contrib.src.django.django.contrib.gis.gdal.datasource",
            "contrib.src.django.django.contrib.gis.gdal.driver",
            "contrib.src.django.django.contrib.gis.gdal.envelope",
            "contrib.src.django.django.contrib.gis.gdal.error",
            "contrib.src.django.django.contrib.gis.gdal.feature",
            "contrib.src.django.django.contrib.gis.gdal.field",
            "contrib.src.django.django.contrib.gis.gdal.geometries",
            "contrib.src.django.django.contrib.gis.gdal.geomtype",
            "contrib.src.django.django.contrib.gis.gdal.layer",
            "contrib.src.django.django.contrib.gis.gdal.libgdal",
            "contrib.src.django.django.contrib.gis.gdal.prototypes",
            "contrib.src.django.django.contrib.gis.gdal.prototypes.ds",
            "contrib.src.django.django.contrib.gis.gdal.prototypes.errcheck",
            "contrib.src.django.django.contrib.gis.gdal.prototypes.generation",
            "contrib.src.django.django.contrib.gis.gdal.prototypes.geom",
            "contrib.src.django.django.contrib.gis.gdal.prototypes.srs",
            "contrib.src.django.django.contrib.gis.gdal.srs",
            "contrib.src.django.django.contrib.gis.gdal.tests",
            "contrib.src.django.django.contrib.gis.gdal.tests.test_driver",
            "contrib.src.django.django.contrib.gis.gdal.tests.test_ds",
            "contrib.src.django.django.contrib.gis.gdal.tests.test_envelope",
            "contrib.src.django.django.contrib.gis.gdal.tests.test_geom",
            "contrib.src.django.django.contrib.gis.gdal.tests.test_srs",
            "contrib.src.django.django.contrib.gis.geometry",
            "contrib.src.django.django.contrib.gis.geometry.backend",
            "contrib.src.django.django.contrib.gis.geometry.backend.geos",
            "contrib.src.django.django.contrib.gis.geometry.regex",
            "contrib.src.django.django.contrib.gis.geometry.test_data",
            "contrib.src.django.django.contrib.gis.geos",
            "contrib.src.django.django.contrib.gis.geos.base",
            "contrib.src.django.django.contrib.gis.geos.collections",
            "contrib.src.django.django.contrib.gis.geos.coordseq",
            "contrib.src.django.django.contrib.gis.geos.error",
            "contrib.src.django.django.contrib.gis.geos.factory",
            "contrib.src.django.django.contrib.gis.geos.geometry",
            "contrib.src.django.django.contrib.gis.geos.io",
            "contrib.src.django.django.contrib.gis.geos.libgeos",
            "contrib.src.django.django.contrib.gis.geos.linestring",
            "contrib.src.django.django.contrib.gis.geos.mutable_list",
            "contrib.src.django.django.contrib.gis.geos.point",
            "contrib.src.django.django.contrib.gis.geos.polygon",
            "contrib.src.django.django.contrib.gis.geos.prepared",
            "contrib.src.django.django.contrib.gis.geos.prototypes",
            "contrib.src.django.django.contrib.gis.geos.prototypes.coordseq",
            "contrib.src.django.django.contrib.gis.geos.prototypes.errcheck",
            "contrib.src.django.django.contrib.gis.geos.prototypes.geom",
            "contrib.src.django.django.contrib.gis.geos.prototypes.io",
            "contrib.src.django.django.contrib.gis.geos.prototypes.misc",
            "contrib.src.django.django.contrib.gis.geos.prototypes.predicates",
            "contrib.src.django.django.contrib.gis.geos.prototypes.prepared",
            "contrib.src.django.django.contrib.gis.geos.prototypes.threadsafe",
            "contrib.src.django.django.contrib.gis.geos.prototypes.topology",
            "contrib.src.django.django.contrib.gis.geos.tests",
            "contrib.src.django.django.contrib.gis.geos.tests.test_geos",
            "contrib.src.django.django.contrib.gis.geos.tests.test_geos_mutation",
            "contrib.src.django.django.contrib.gis.geos.tests.test_io",
            "contrib.src.django.django.contrib.gis.geos.tests.test_mutable_list",
            "contrib.src.django.django.contrib.gis.management",
            "contrib.src.django.django.contrib.gis.management.base",
            "contrib.src.django.django.contrib.gis.management.commands",
            "contrib.src.django.django.contrib.gis.management.commands.inspectdb",
            "contrib.src.django.django.contrib.gis.management.commands.ogrinspect",
            "contrib.src.django.django.contrib.gis.maps",
            "contrib.src.django.django.contrib.gis.maps.google",
            "contrib.src.django.django.contrib.gis.maps.google.gmap",
            "contrib.src.django.django.contrib.gis.maps.google.overlays",
            "contrib.src.django.django.contrib.gis.maps.google.zoom",
            "contrib.src.django.django.contrib.gis.maps.openlayers",
            "contrib.src.django.django.contrib.gis.measure",
            "contrib.src.django.django.contrib.gis.models",
            "contrib.src.django.django.contrib.gis.shortcuts",
            "contrib.src.django.django.contrib.gis.sitemaps",
            "contrib.src.django.django.contrib.gis.sitemaps.georss",
            "contrib.src.django.django.contrib.gis.sitemaps.kml",
            "contrib.src.django.django.contrib.gis.sitemaps.views",
            "contrib.src.django.django.contrib.gis.tests",
            "contrib.src.django.django.contrib.gis.tests.distapp",
            "contrib.src.django.django.contrib.gis.tests.distapp.models",
            "contrib.src.django.django.contrib.gis.tests.distapp.tests",
            "contrib.src.django.django.contrib.gis.tests.geo3d",
            "contrib.src.django.django.contrib.gis.tests.geo3d.models",
            "contrib.src.django.django.contrib.gis.tests.geo3d.tests",
            "contrib.src.django.django.contrib.gis.tests.geo3d.views",
            "contrib.src.django.django.contrib.gis.tests.geoapp",
            "contrib.src.django.django.contrib.gis.tests.geoapp.feeds",
            "contrib.src.django.django.contrib.gis.tests.geoapp.models",
            "contrib.src.django.django.contrib.gis.tests.geoapp.sitemaps",
            "contrib.src.django.django.contrib.gis.tests.geoapp.test_feeds",
            "contrib.src.django.django.contrib.gis.tests.geoapp.test_regress",
            "contrib.src.django.django.contrib.gis.tests.geoapp.test_sitemaps",
            "contrib.src.django.django.contrib.gis.tests.geoapp.tests",
            "contrib.src.django.django.contrib.gis.tests.geoapp.urls",
            "contrib.src.django.django.contrib.gis.tests.geogapp",
            "contrib.src.django.django.contrib.gis.tests.geogapp.models",
            "contrib.src.django.django.contrib.gis.tests.geogapp.tests",
            "contrib.src.django.django.contrib.gis.tests.layermap",
            "contrib.src.django.django.contrib.gis.tests.layermap.models",
            "contrib.src.django.django.contrib.gis.tests.layermap.tests",
            "contrib.src.django.django.contrib.gis.tests.relatedapp",
            "contrib.src.django.django.contrib.gis.tests.relatedapp.models",
            "contrib.src.django.django.contrib.gis.tests.relatedapp.tests",
            "contrib.src.django.django.contrib.gis.tests.test_geoforms",
            "contrib.src.django.django.contrib.gis.tests.test_geoip",
            "contrib.src.django.django.contrib.gis.tests.test_measure",
            "contrib.src.django.django.contrib.gis.tests.test_spatialrefsys",
            "contrib.src.django.django.contrib.gis.tests.utils",
            "contrib.src.django.django.contrib.gis.utils",
            "contrib.src.django.django.contrib.gis.utils.geoip",
            "contrib.src.django.django.contrib.gis.utils.layermapping",
            "contrib.src.django.django.contrib.gis.utils.ogrinfo",
            "contrib.src.django.django.contrib.gis.utils.ogrinspect",
            "contrib.src.django.django.contrib.gis.utils.srs",
            "contrib.src.django.django.contrib.gis.utils.wkt",
            "contrib.src.django.django.contrib.humanize",
            "contrib.src.django.django.contrib.humanize.templatetags",
            "contrib.src.django.django.contrib.humanize.templatetags.humanize",
            "contrib.src.django.django.contrib.localflavor",
            "contrib.src.django.django.contrib.localflavor.ar",
            "contrib.src.django.django.contrib.localflavor.ar.ar_provinces",
            "contrib.src.django.django.contrib.localflavor.ar.forms",
            "contrib.src.django.django.contrib.localflavor.at",
            "contrib.src.django.django.contrib.localflavor.at.at_states",
            "contrib.src.django.django.contrib.localflavor.at.forms",
            "contrib.src.django.django.contrib.localflavor.au",
            "contrib.src.django.django.contrib.localflavor.au.au_states",
            "contrib.src.django.django.contrib.localflavor.au.forms",
            "contrib.src.django.django.contrib.localflavor.be",
            "contrib.src.django.django.contrib.localflavor.be.be_provinces",
            "contrib.src.django.django.contrib.localflavor.be.be_regions",
            "contrib.src.django.django.contrib.localflavor.be.forms",
            "contrib.src.django.django.contrib.localflavor.br",
            "contrib.src.django.django.contrib.localflavor.br.br_states",
            "contrib.src.django.django.contrib.localflavor.br.forms",
            "contrib.src.django.django.contrib.localflavor.ca",
            "contrib.src.django.django.contrib.localflavor.ca.ca_provinces",
            "contrib.src.django.django.contrib.localflavor.ca.forms",
            "contrib.src.django.django.contrib.localflavor.ch",
            "contrib.src.django.django.contrib.localflavor.ch.ch_states",
            "contrib.src.django.django.contrib.localflavor.ch.forms",
            "contrib.src.django.django.contrib.localflavor.cl",
            "contrib.src.django.django.contrib.localflavor.cl.cl_regions",
            "contrib.src.django.django.contrib.localflavor.cl.forms",
            "contrib.src.django.django.contrib.localflavor.cz",
            "contrib.src.django.django.contrib.localflavor.cz.cz_regions",
            "contrib.src.django.django.contrib.localflavor.cz.forms",
            "contrib.src.django.django.contrib.localflavor.de",
            "contrib.src.django.django.contrib.localflavor.de.de_states",
            "contrib.src.django.django.contrib.localflavor.de.forms",
            "contrib.src.django.django.contrib.localflavor.es",
            "contrib.src.django.django.contrib.localflavor.es.es_provinces",
            "contrib.src.django.django.contrib.localflavor.es.es_regions",
            "contrib.src.django.django.contrib.localflavor.es.forms",
            "contrib.src.django.django.contrib.localflavor.fi",
            "contrib.src.django.django.contrib.localflavor.fi.fi_municipalities",
            "contrib.src.django.django.contrib.localflavor.fi.forms",
            "contrib.src.django.django.contrib.localflavor.fr",
            "contrib.src.django.django.contrib.localflavor.fr.forms",
            "contrib.src.django.django.contrib.localflavor.fr.fr_department",
            "contrib.src.django.django.contrib.localflavor.generic",
            "contrib.src.django.django.contrib.localflavor.generic.forms",
            "contrib.src.django.django.contrib.localflavor.id",
            "contrib.src.django.django.contrib.localflavor.id.forms",
            "contrib.src.django.django.contrib.localflavor.id.id_choices",
            "contrib.src.django.django.contrib.localflavor.ie",
            "contrib.src.django.django.contrib.localflavor.ie.forms",
            "contrib.src.django.django.contrib.localflavor.ie.ie_counties",
            "contrib.src.django.django.contrib.localflavor.il",
            "contrib.src.django.django.contrib.localflavor.il.forms",
            "contrib.src.django.django.contrib.localflavor.in_",
            "contrib.src.django.django.contrib.localflavor.in_.forms",
            "contrib.src.django.django.contrib.localflavor.in_.in_states",
            "contrib.src.django.django.contrib.localflavor.is_",
            "contrib.src.django.django.contrib.localflavor.is_.forms",
            "contrib.src.django.django.contrib.localflavor.is_.is_postalcodes",
            "contrib.src.django.django.contrib.localflavor.it",
            "contrib.src.django.django.contrib.localflavor.it.forms",
            "contrib.src.django.django.contrib.localflavor.it.it_province",
            "contrib.src.django.django.contrib.localflavor.it.it_region",
            "contrib.src.django.django.contrib.localflavor.it.util",
            "contrib.src.django.django.contrib.localflavor.jp",
            "contrib.src.django.django.contrib.localflavor.jp.forms",
            "contrib.src.django.django.contrib.localflavor.jp.jp_prefectures",
            "contrib.src.django.django.contrib.localflavor.kw",
            "contrib.src.django.django.contrib.localflavor.kw.forms",
            "contrib.src.django.django.contrib.localflavor.mx",
            "contrib.src.django.django.contrib.localflavor.mx.forms",
            "contrib.src.django.django.contrib.localflavor.mx.mx_states",
            "contrib.src.django.django.contrib.localflavor.nl",
            "contrib.src.django.django.contrib.localflavor.nl.forms",
            "contrib.src.django.django.contrib.localflavor.nl.nl_provinces",
            "contrib.src.django.django.contrib.localflavor.no",
            "contrib.src.django.django.contrib.localflavor.no.forms",
            "contrib.src.django.django.contrib.localflavor.no.no_municipalities",
            "contrib.src.django.django.contrib.localflavor.pe",
            "contrib.src.django.django.contrib.localflavor.pe.forms",
            "contrib.src.django.django.contrib.localflavor.pe.pe_region",
            "contrib.src.django.django.contrib.localflavor.pl",
            "contrib.src.django.django.contrib.localflavor.pl.forms",
            "contrib.src.django.django.contrib.localflavor.pl.pl_administrativeunits",
            "contrib.src.django.django.contrib.localflavor.pl.pl_voivodeships",
            "contrib.src.django.django.contrib.localflavor.pt",
            "contrib.src.django.django.contrib.localflavor.pt.forms",
            "contrib.src.django.django.contrib.localflavor.ro",
            "contrib.src.django.django.contrib.localflavor.ro.forms",
            "contrib.src.django.django.contrib.localflavor.ro.ro_counties",
            "contrib.src.django.django.contrib.localflavor.se",
            "contrib.src.django.django.contrib.localflavor.se.forms",
            "contrib.src.django.django.contrib.localflavor.se.se_counties",
            "contrib.src.django.django.contrib.localflavor.se.utils",
            "contrib.src.django.django.contrib.localflavor.sk",
            "contrib.src.django.django.contrib.localflavor.sk.forms",
            "contrib.src.django.django.contrib.localflavor.sk.sk_districts",
            "contrib.src.django.django.contrib.localflavor.sk.sk_regions",
            "contrib.src.django.django.contrib.localflavor.tr",
            "contrib.src.django.django.contrib.localflavor.tr.forms",
            "contrib.src.django.django.contrib.localflavor.tr.tr_provinces",
            "contrib.src.django.django.contrib.localflavor.uk",
            "contrib.src.django.django.contrib.localflavor.uk.forms",
            "contrib.src.django.django.contrib.localflavor.uk.uk_regions",
            "contrib.src.django.django.contrib.localflavor.us",
            "contrib.src.django.django.contrib.localflavor.us.forms",
            "contrib.src.django.django.contrib.localflavor.us.models",
            "contrib.src.django.django.contrib.localflavor.us.us_states",
            "contrib.src.django.django.contrib.localflavor.uy",
            "contrib.src.django.django.contrib.localflavor.uy.forms",
            "contrib.src.django.django.contrib.localflavor.uy.util",
            "contrib.src.django.django.contrib.localflavor.uy.uy_departaments",
            "contrib.src.django.django.contrib.localflavor.za",
            "contrib.src.django.django.contrib.localflavor.za.forms",
            "contrib.src.django.django.contrib.localflavor.za.za_provinces",
            "contrib.src.django.django.contrib.markup",
            "contrib.src.django.django.contrib.markup.models",
            "contrib.src.django.django.contrib.markup.templatetags",
            "contrib.src.django.django.contrib.markup.templatetags.markup",
            "contrib.src.django.django.contrib.markup.tests",
            "contrib.src.django.django.contrib.messages",
            "contrib.src.django.django.contrib.messages.api",
            "contrib.src.django.django.contrib.messages.constants",
            "contrib.src.django.django.contrib.messages.context_processors",
            "contrib.src.django.django.contrib.messages.middleware",
            "contrib.src.django.django.contrib.messages.models",
            "contrib.src.django.django.contrib.messages.storage",
            "contrib.src.django.django.contrib.messages.storage.base",
            "contrib.src.django.django.contrib.messages.storage.cookie",
            "contrib.src.django.django.contrib.messages.storage.fallback",
            "contrib.src.django.django.contrib.messages.storage.session",
            "contrib.src.django.django.contrib.messages.storage.user_messages",
            "contrib.src.django.django.contrib.messages.tests",
            "contrib.src.django.django.contrib.messages.tests.base",
            "contrib.src.django.django.contrib.messages.tests.cookie",
            "contrib.src.django.django.contrib.messages.tests.fallback",
            "contrib.src.django.django.contrib.messages.tests.middleware",
            "contrib.src.django.django.contrib.messages.tests.session",
            "contrib.src.django.django.contrib.messages.tests.urls",
            "contrib.src.django.django.contrib.messages.tests.user_messages",
            "contrib.src.django.django.contrib.messages.utils",
            "contrib.src.django.django.contrib.redirects",
            "contrib.src.django.django.contrib.redirects.admin",
            "contrib.src.django.django.contrib.redirects.middleware",
            "contrib.src.django.django.contrib.redirects.models",
            "contrib.src.django.django.contrib.sessions",
            "contrib.src.django.django.contrib.sessions.backends",
            "contrib.src.django.django.contrib.sessions.backends.base",
            "contrib.src.django.django.contrib.sessions.backends.cache",
            "contrib.src.django.django.contrib.sessions.backends.cached_db",
            "contrib.src.django.django.contrib.sessions.backends.db",
            "contrib.src.django.django.contrib.sessions.backends.file",
            "contrib.src.django.django.contrib.sessions.middleware",
            "contrib.src.django.django.contrib.sessions.models",
            "contrib.src.django.django.contrib.sessions.tests",
            "contrib.src.django.django.contrib.sitemaps",
            "contrib.src.django.django.contrib.sitemaps.management",
            "contrib.src.django.django.contrib.sitemaps.management.commands",
            "contrib.src.django.django.contrib.sitemaps.management.commands.ping_google",
            "contrib.src.django.django.contrib.sitemaps.models",
            "contrib.src.django.django.contrib.sitemaps.tests",
            "contrib.src.django.django.contrib.sitemaps.tests.basic",
            "contrib.src.django.django.contrib.sitemaps.tests.urls",
            "contrib.src.django.django.contrib.sitemaps.views",
            "contrib.src.django.django.contrib.sites",
            "contrib.src.django.django.contrib.sites.admin",
            "contrib.src.django.django.contrib.sites.management",
            "contrib.src.django.django.contrib.sites.managers",
            "contrib.src.django.django.contrib.sites.models",
            "contrib.src.django.django.contrib.sites.tests",
            "contrib.src.django.django.contrib.staticfiles",
            "contrib.src.django.django.contrib.staticfiles.finders",
            "contrib.src.django.django.contrib.staticfiles.handlers",
            "contrib.src.django.django.contrib.staticfiles.management",
            "contrib.src.django.django.contrib.staticfiles.management.commands",
            "contrib.src.django.django.contrib.staticfiles.management.commands.collectstatic",
            "contrib.src.django.django.contrib.staticfiles.management.commands.findstatic",
            "contrib.src.django.django.contrib.staticfiles.management.commands.runserver",
            "contrib.src.django.django.contrib.staticfiles.models",
            "contrib.src.django.django.contrib.staticfiles.storage",
            "contrib.src.django.django.contrib.staticfiles.urls",
            "contrib.src.django.django.contrib.staticfiles.utils",
            "contrib.src.django.django.contrib.staticfiles.views",
            "contrib.src.django.django.contrib.syndication",
            "contrib.src.django.django.contrib.syndication.feeds",
            "contrib.src.django.django.contrib.syndication.views",
            "contrib.src.django.django.contrib.webdesign",
            "contrib.src.django.django.contrib.webdesign.lorem_ipsum",
            "contrib.src.django.django.contrib.webdesign.models",
            "contrib.src.django.django.contrib.webdesign.templatetags",
            "contrib.src.django.django.contrib.webdesign.templatetags.webdesign",
            "contrib.src.django.django.contrib.webdesign.tests",
            "contrib.src.django.django.core",
            "contrib.src.django.django.core.cache",
            "contrib.src.django.django.core.cache.backends",
            "contrib.src.django.django.core.cache.backends.base",
            "contrib.src.django.django.core.cache.backends.db",
            "contrib.src.django.django.core.cache.backends.dummy",
            "contrib.src.django.django.core.cache.backends.filebased",
            "contrib.src.django.django.core.cache.backends.locmem",
            "contrib.src.django.django.core.cache.backends.memcached",
            "contrib.src.django.django.core.context_processors",
            "contrib.src.django.django.core.exceptions",
            "contrib.src.django.django.core.files",
            "contrib.src.django.django.core.files.base",
            "contrib.src.django.django.core.files.images",
            "contrib.src.django.django.core.files.locks",
            "contrib.src.django.django.core.files.move",
            "contrib.src.django.django.core.files.storage",
            "contrib.src.django.django.core.files.temp",
            "contrib.src.django.django.core.files.uploadedfile",
            "contrib.src.django.django.core.files.uploadhandler",
            "contrib.src.django.django.core.files.utils",
            "contrib.src.django.django.core.handlers",
            "contrib.src.django.django.core.handlers.base",
            "contrib.src.django.django.core.handlers.modpython",
            "contrib.src.django.django.core.handlers.profiler-hotshot",
            "contrib.src.django.django.core.handlers.wsgi",
            "contrib.src.django.django.core.mail",
            "contrib.src.django.django.core.mail.backends",
            "contrib.src.django.django.core.mail.backends.base",
            "contrib.src.django.django.core.mail.backends.console",
            "contrib.src.django.django.core.mail.backends.dummy",
            "contrib.src.django.django.core.mail.backends.filebased",
            "contrib.src.django.django.core.mail.backends.locmem",
            "contrib.src.django.django.core.mail.backends.smtp",
            "contrib.src.django.django.core.mail.message",
            "contrib.src.django.django.core.mail.utils",
            "contrib.src.django.django.core.management",
            "contrib.src.django.django.core.management.base",
            "contrib.src.django.django.core.management.color",
            "contrib.src.django.django.core.management.commands",
            "contrib.src.django.django.core.management.commands.cleanup",
            "contrib.src.django.django.core.management.commands.compilemessages",
            "contrib.src.django.django.core.management.commands.createcachetable",
            "contrib.src.django.django.core.management.commands.dbshell",
            "contrib.src.django.django.core.management.commands.diffsettings",
            "contrib.src.django.django.core.management.commands.dumpdata",
            "contrib.src.django.django.core.management.commands.flush",
            "contrib.src.django.django.core.management.commands.inspectdb",
            "contrib.src.django.django.core.management.commands.loaddata",
            "contrib.src.django.django.core.management.commands.makemessages",
            "contrib.src.django.django.core.management.commands.reset",
            "contrib.src.django.django.core.management.commands.runfcgi",
            "contrib.src.django.django.core.management.commands.runserver",
            "contrib.src.django.django.core.management.commands.shell",
            "contrib.src.django.django.core.management.commands.sql",
            "contrib.src.django.django.core.management.commands.sqlall",
            "contrib.src.django.django.core.management.commands.sqlclear",
            "contrib.src.django.django.core.management.commands.sqlcustom",
            "contrib.src.django.django.core.management.commands.sqlflush",
            "contrib.src.django.django.core.management.commands.sqlindexes",
            "contrib.src.django.django.core.management.commands.sqlinitialdata",
            "contrib.src.django.django.core.management.commands.sqlreset",
            "contrib.src.django.django.core.management.commands.sqlsequencereset",
            "contrib.src.django.django.core.management.commands.startapp",
            "contrib.src.django.django.core.management.commands.startproject",
            "contrib.src.django.django.core.management.commands.syncdb",
            "contrib.src.django.django.core.management.commands.test",
            "contrib.src.django.django.core.management.commands.testserver",
            "contrib.src.django.django.core.management.commands.validate",
            "contrib.src.django.django.core.management.sql",
            "contrib.src.django.django.core.management.validation",
            "contrib.src.django.django.core.paginator",
            "contrib.src.django.django.core.serializers",
            "contrib.src.django.django.core.serializers.base",
            "contrib.src.django.django.core.serializers.json",
            "contrib.src.django.django.core.serializers.python",
            "contrib.src.django.django.core.serializers.pyyaml",
            "contrib.src.django.django.core.serializers.xml_serializer",
            "contrib.src.django.django.core.servers",
            "contrib.src.django.django.core.servers.basehttp",
            "contrib.src.django.django.core.servers.fastcgi",
            "contrib.src.django.django.core.signals",
            "contrib.src.django.django.core.template_loader",
            "contrib.src.django.django.core.urlresolvers",
            "contrib.src.django.django.core.validators",
            "contrib.src.django.django.core.xheaders",
            "contrib.src.django.django.db",
            "contrib.src.django.django.db.backends",
            "contrib.src.django.django.db.backends.creation",
            "contrib.src.django.django.db.backends.dummy",
            "contrib.src.django.django.db.backends.dummy.base",
            "contrib.src.django.django.db.backends.mysql",
            "contrib.src.django.django.db.backends.mysql.base",
            "contrib.src.django.django.db.backends.mysql.client",
            "contrib.src.django.django.db.backends.mysql.compiler",
            "contrib.src.django.django.db.backends.mysql.creation",
            "contrib.src.django.django.db.backends.mysql.introspection",
            "contrib.src.django.django.db.backends.mysql.validation",
            "contrib.src.django.django.db.backends.oracle",
            "contrib.src.django.django.db.backends.oracle.base",
            "contrib.src.django.django.db.backends.oracle.client",
            "contrib.src.django.django.db.backends.oracle.compiler",
            "contrib.src.django.django.db.backends.oracle.creation",
            "contrib.src.django.django.db.backends.oracle.introspection",
            "contrib.src.django.django.db.backends.postgresql",
            "contrib.src.django.django.db.backends.postgresql.base",
            "contrib.src.django.django.db.backends.postgresql.client",
            "contrib.src.django.django.db.backends.postgresql.creation",
            "contrib.src.django.django.db.backends.postgresql.introspection",
            "contrib.src.django.django.db.backends.postgresql.operations",
            "contrib.src.django.django.db.backends.postgresql.version",
            "contrib.src.django.django.db.backends.postgresql_psycopg2",
            "contrib.src.django.django.db.backends.postgresql_psycopg2.base",
            "contrib.src.django.django.db.backends.postgresql_psycopg2.introspection",
            "contrib.src.django.django.db.backends.signals",
            "contrib.src.django.django.db.backends.sqlite3",
            "contrib.src.django.django.db.backends.sqlite3.base",
            "contrib.src.django.django.db.backends.sqlite3.client",
            "contrib.src.django.django.db.backends.sqlite3.creation",
            "contrib.src.django.django.db.backends.sqlite3.introspection",
            "contrib.src.django.django.db.backends.util",
            "contrib.src.django.django.db.models",
            "contrib.src.django.django.db.models.aggregates",
            "contrib.src.django.django.db.models.base",
            "contrib.src.django.django.db.models.deletion",
            "contrib.src.django.django.db.models.expressions",
            "contrib.src.django.django.db.models.fields",
            "contrib.src.django.django.db.models.fields.files",
            "contrib.src.django.django.db.models.fields.proxy",
            "contrib.src.django.django.db.models.fields.related",
            "contrib.src.django.django.db.models.fields.subclassing",
            "contrib.src.django.django.db.models.loading",
            "contrib.src.django.django.db.models.manager",
            "contrib.src.django.django.db.models.options",
            "contrib.src.django.django.db.models.query",
            "contrib.src.django.django.db.models.query_utils",
            "contrib.src.django.django.db.models.related",
            "contrib.src.django.django.db.models.signals",
            "contrib.src.django.django.db.models.sql",
            "contrib.src.django.django.db.models.sql.aggregates",
            "contrib.src.django.django.db.models.sql.compiler",
            "contrib.src.django.django.db.models.sql.constants",
            "contrib.src.django.django.db.models.sql.datastructures",
            "contrib.src.django.django.db.models.sql.expressions",
            "contrib.src.django.django.db.models.sql.query",
            "contrib.src.django.django.db.models.sql.subqueries",
            "contrib.src.django.django.db.models.sql.where",
            "contrib.src.django.django.db.transaction",
            "contrib.src.django.django.db.utils",
            "contrib.src.django.django.dispatch",
            "contrib.src.django.django.dispatch.dispatcher",
            "contrib.src.django.django.dispatch.saferef",
            "contrib.src.django.django.forms",
            "contrib.src.django.django.forms.extras",
            "contrib.src.django.django.forms.extras.widgets",
            "contrib.src.django.django.forms.fields",
            "contrib.src.django.django.forms.forms",
            "contrib.src.django.django.forms.formsets",
            "contrib.src.django.django.forms.models",
            "contrib.src.django.django.forms.util",
            "contrib.src.django.django.forms.widgets",
            "contrib.src.django.django.http",
            "contrib.src.django.django.http.multipartparser",
            "contrib.src.django.django.http.utils",
            "contrib.src.django.django.middleware",
            "contrib.src.django.django.middleware.cache",
            "contrib.src.django.django.middleware.common",
            "contrib.src.django.django.middleware.csrf",
            "contrib.src.django.django.middleware.doc",
            "contrib.src.django.django.middleware.gzip",
            "contrib.src.django.django.middleware.http",
            "contrib.src.django.django.middleware.locale",
            "contrib.src.django.django.middleware.transaction",
            "contrib.src.django.django.shortcuts",
            "contrib.src.django.django.template",
            "contrib.src.django.django.template.base",
            "contrib.src.django.django.template.context",
            "contrib.src.django.django.template.debug",
            "contrib.src.django.django.template.defaultfilters",
            "contrib.src.django.django.template.defaulttags",
            "contrib.src.django.django.template.loader",
            "contrib.src.django.django.template.loader_tags",
            "contrib.src.django.django.template.loaders",
            "contrib.src.django.django.template.loaders.app_directories",
            "contrib.src.django.django.template.loaders.cached",
            "contrib.src.django.django.template.loaders.eggs",
            "contrib.src.django.django.template.loaders.filesystem",
            "contrib.src.django.django.template.response",
            "contrib.src.django.django.template.smartif",
            "contrib.src.django.django.templatetags",
            "contrib.src.django.django.templatetags.cache",
            "contrib.src.django.django.templatetags.future",
            "contrib.src.django.django.templatetags.i18n",
            "contrib.src.django.django.templatetags.l10n",
            "contrib.src.django.django.templatetags.static",
            "contrib.src.django.django.test",
            "contrib.src.django.django.test._doctest",
            "contrib.src.django.django.test.client",
            "contrib.src.django.django.test.signals",
            "contrib.src.django.django.test.simple",
            "contrib.src.django.django.test.testcases",
            "contrib.src.django.django.test.utils",
            "contrib.src.django.django.utils",
            "contrib.src.django.django.utils._os",
            "contrib.src.django.django.utils._threading_local",
            "contrib.src.django.django.utils.autoreload",
            "contrib.src.django.django.utils.cache",
            "contrib.src.django.django.utils.checksums",
            "contrib.src.django.django.utils.copycompat",
            "contrib.src.django.django.utils.crypto",
            "contrib.src.django.django.utils.daemonize",
            "contrib.src.django.django.utils.datastructures",
            "contrib.src.django.django.utils.dateformat",
            "contrib.src.django.django.utils.dates",
            "contrib.src.django.django.utils.datetime_safe",
            "contrib.src.django.django.utils.decorators",
            "contrib.src.django.django.utils.dictconfig",
            "contrib.src.django.django.utils.encoding",
            "contrib.src.django.django.utils.feedgenerator",
            "contrib.src.django.django.utils.formats",
            "contrib.src.django.django.utils.functional",
            "contrib.src.django.django.utils.hashcompat",
            "contrib.src.django.django.utils.html",
            "contrib.src.django.django.utils.http",
            "contrib.src.django.django.utils.importlib",
            "contrib.src.django.django.utils.itercompat",
            "contrib.src.django.django.utils.log",
            "contrib.src.django.django.utils.module_loading",
            "contrib.src.django.django.utils.numberformat",
            "contrib.src.django.django.utils.regex_helper",
            "contrib.src.django.django.utils.safestring",
            "contrib.src.django.django.utils.simplejson",
            "contrib.src.django.django.utils.simplejson.decoder",
            "contrib.src.django.django.utils.simplejson.encoder",
            "contrib.src.django.django.utils.simplejson.scanner",
            "contrib.src.django.django.utils.simplejson.tool",
            "contrib.src.django.django.utils.stopwords",
            "contrib.src.django.django.utils.synch",
            "contrib.src.django.django.utils.termcolors",
            "contrib.src.django.django.utils.text",
            "contrib.src.django.django.utils.timesince",
            "contrib.src.django.django.utils.translation",
            "contrib.src.django.django.utils.translation.trans_null",
            "contrib.src.django.django.utils.translation.trans_real",
            "contrib.src.django.django.utils.tree",
            "contrib.src.django.django.utils.tzinfo",
            "contrib.src.django.django.utils.unittest",
            "contrib.src.django.django.utils.unittest.case",
            "contrib.src.django.django.utils.unittest.collector",
            "contrib.src.django.django.utils.unittest.compatibility",
            "contrib.src.django.django.utils.unittest.loader",
            "contrib.src.django.django.utils.unittest.main",
            "contrib.src.django.django.utils.unittest.result",
            "contrib.src.django.django.utils.unittest.runner",
            "contrib.src.django.django.utils.unittest.signals",
            "contrib.src.django.django.utils.unittest.suite",
            "contrib.src.django.django.utils.unittest.util",
            "contrib.src.django.django.utils.version",
            "contrib.src.django.django.utils.xmlutils",
            "contrib.src.django.django.views",
            "contrib.src.django.django.views.csrf",
            "contrib.src.django.django.views.debug",
            "contrib.src.django.django.views.decorators",
            "contrib.src.django.django.views.decorators.cache",
            "contrib.src.django.django.views.decorators.csrf",
            "contrib.src.django.django.views.decorators.gzip",
            "contrib.src.django.django.views.decorators.http",
            "contrib.src.django.django.views.decorators.vary",
            "contrib.src.django.django.views.defaults",
            "contrib.src.django.django.views.generic",
            "contrib.src.django.django.views.generic.base",
            "contrib.src.django.django.views.generic.create_update",
            "contrib.src.django.django.views.generic.date_based",
            "contrib.src.django.django.views.generic.dates",
            "contrib.src.django.django.views.generic.detail",
            "contrib.src.django.django.views.generic.edit",
            "contrib.src.django.django.views.generic.list",
            "contrib.src.django.django.views.generic.list_detail",
            "contrib.src.django.django.views.generic.simple",
            "contrib.src.django.django.views.i18n",
            "contrib.src.django.django.views.static",
            "contrib.src.django.tests.modeltests",
            "contrib.src.django.tests.modeltests.aggregation",
            "contrib.src.django.tests.modeltests.aggregation.models",
            "contrib.src.django.tests.modeltests.aggregation.tests",
            "contrib.src.django.tests.modeltests.basic",
            "contrib.src.django.tests.modeltests.basic.models",
            "contrib.src.django.tests.modeltests.basic.tests",
            "contrib.src.django.tests.modeltests.choices",
            "contrib.src.django.tests.modeltests.choices.models",
            "contrib.src.django.tests.modeltests.choices.tests",
            "contrib.src.django.tests.modeltests.custom_columns",
            "contrib.src.django.tests.modeltests.custom_columns.models",
            "contrib.src.django.tests.modeltests.custom_columns.tests",
            "contrib.src.django.tests.modeltests.custom_managers",
            "contrib.src.django.tests.modeltests.custom_managers.models",
            "contrib.src.django.tests.modeltests.custom_managers.tests",
            "contrib.src.django.tests.modeltests.custom_methods",
            "contrib.src.django.tests.modeltests.custom_methods.models",
            "contrib.src.django.tests.modeltests.custom_methods.tests",
            "contrib.src.django.tests.modeltests.custom_pk",
            "contrib.src.django.tests.modeltests.custom_pk.fields",
            "contrib.src.django.tests.modeltests.custom_pk.models",
            "contrib.src.django.tests.modeltests.custom_pk.tests",
            "contrib.src.django.tests.modeltests.defer",
            "contrib.src.django.tests.modeltests.defer.models",
            "contrib.src.django.tests.modeltests.defer.tests",
            "contrib.src.django.tests.modeltests.delete",
            "contrib.src.django.tests.modeltests.delete.models",
            "contrib.src.django.tests.modeltests.delete.tests",
            "contrib.src.django.tests.modeltests.empty",
            "contrib.src.django.tests.modeltests.empty.models",
            "contrib.src.django.tests.modeltests.empty.tests",
            "contrib.src.django.tests.modeltests.expressions",
            "contrib.src.django.tests.modeltests.expressions.models",
            "contrib.src.django.tests.modeltests.expressions.tests",
            "contrib.src.django.tests.modeltests.field_defaults",
            "contrib.src.django.tests.modeltests.field_defaults.models",
            "contrib.src.django.tests.modeltests.field_defaults.tests",
            "contrib.src.django.tests.modeltests.field_subclassing",
            "contrib.src.django.tests.modeltests.field_subclassing.fields",
            "contrib.src.django.tests.modeltests.field_subclassing.models",
            "contrib.src.django.tests.modeltests.field_subclassing.tests",
            "contrib.src.django.tests.modeltests.files",
            "contrib.src.django.tests.modeltests.files.models",
            "contrib.src.django.tests.modeltests.files.tests",
            "contrib.src.django.tests.modeltests.files.tests_25",
            "contrib.src.django.tests.modeltests.fixtures",
            "contrib.src.django.tests.modeltests.fixtures.models",
            "contrib.src.django.tests.modeltests.fixtures.tests",
            "contrib.src.django.tests.modeltests.fixtures_model_package",
            "contrib.src.django.tests.modeltests.fixtures_model_package.models",
            "contrib.src.django.tests.modeltests.fixtures_model_package.tests",
            "contrib.src.django.tests.modeltests.force_insert_update",
            "contrib.src.django.tests.modeltests.force_insert_update.models",
            "contrib.src.django.tests.modeltests.force_insert_update.tests",
            "contrib.src.django.tests.modeltests.generic_relations",
            "contrib.src.django.tests.modeltests.generic_relations.models",
            "contrib.src.django.tests.modeltests.generic_relations.tests",
            "contrib.src.django.tests.modeltests.get_latest",
            "contrib.src.django.tests.modeltests.get_latest.models",
            "contrib.src.django.tests.modeltests.get_latest.tests",
            "contrib.src.django.tests.modeltests.get_object_or_404",
            "contrib.src.django.tests.modeltests.get_object_or_404.models",
            "contrib.src.django.tests.modeltests.get_object_or_404.tests",
            "contrib.src.django.tests.modeltests.get_or_create",
            "contrib.src.django.tests.modeltests.get_or_create.models",
            "contrib.src.django.tests.modeltests.get_or_create.tests",
            "contrib.src.django.tests.modeltests.invalid_models",
            "contrib.src.django.tests.modeltests.invalid_models.invalid_models",
            "contrib.src.django.tests.modeltests.invalid_models.invalid_models.models",
            "contrib.src.django.tests.modeltests.invalid_models.models",
            "contrib.src.django.tests.modeltests.invalid_models.tests",
            "contrib.src.django.tests.modeltests.lookup",
            "contrib.src.django.tests.modeltests.lookup.models",
            "contrib.src.django.tests.modeltests.lookup.tests",
            "contrib.src.django.tests.modeltests.m2m_and_m2o",
            "contrib.src.django.tests.modeltests.m2m_and_m2o.models",
            "contrib.src.django.tests.modeltests.m2m_and_m2o.tests",
            "contrib.src.django.tests.modeltests.m2m_intermediary",
            "contrib.src.django.tests.modeltests.m2m_intermediary.models",
            "contrib.src.django.tests.modeltests.m2m_intermediary.tests",
            "contrib.src.django.tests.modeltests.m2m_multiple",
            "contrib.src.django.tests.modeltests.m2m_multiple.models",
            "contrib.src.django.tests.modeltests.m2m_multiple.tests",
            "contrib.src.django.tests.modeltests.m2m_recursive",
            "contrib.src.django.tests.modeltests.m2m_recursive.models",
            "contrib.src.django.tests.modeltests.m2m_recursive.tests",
            "contrib.src.django.tests.modeltests.m2m_signals",
            "contrib.src.django.tests.modeltests.m2m_signals.models",
            "contrib.src.django.tests.modeltests.m2m_signals.tests",
            "contrib.src.django.tests.modeltests.m2m_through",
            "contrib.src.django.tests.modeltests.m2m_through.models",
            "contrib.src.django.tests.modeltests.m2m_through.tests",
            "contrib.src.django.tests.modeltests.m2o_recursive",
            "contrib.src.django.tests.modeltests.m2o_recursive.models",
            "contrib.src.django.tests.modeltests.m2o_recursive.tests",
            "contrib.src.django.tests.modeltests.many_to_many",
            "contrib.src.django.tests.modeltests.many_to_many.models",
            "contrib.src.django.tests.modeltests.many_to_many.tests",
            "contrib.src.django.tests.modeltests.many_to_one",
            "contrib.src.django.tests.modeltests.many_to_one.models",
            "contrib.src.django.tests.modeltests.many_to_one.tests",
            "contrib.src.django.tests.modeltests.many_to_one_null",
            "contrib.src.django.tests.modeltests.many_to_one_null.models",
            "contrib.src.django.tests.modeltests.many_to_one_null.tests",
            "contrib.src.django.tests.modeltests.model_forms",
            "contrib.src.django.tests.modeltests.model_forms.mforms",
            "contrib.src.django.tests.modeltests.model_forms.models",
            "contrib.src.django.tests.modeltests.model_forms.tests",
            "contrib.src.django.tests.modeltests.model_formsets",
            "contrib.src.django.tests.modeltests.model_formsets.models",
            "contrib.src.django.tests.modeltests.model_formsets.tests",
            "contrib.src.django.tests.modeltests.model_inheritance",
            "contrib.src.django.tests.modeltests.model_inheritance.models",
            "contrib.src.django.tests.modeltests.model_inheritance.tests",
            "contrib.src.django.tests.modeltests.model_inheritance_same_model_name",
            "contrib.src.django.tests.modeltests.model_inheritance_same_model_name.models",
            "contrib.src.django.tests.modeltests.model_inheritance_same_model_name.tests",
            "contrib.src.django.tests.modeltests.model_package",
            "contrib.src.django.tests.modeltests.model_package.models",
            "contrib.src.django.tests.modeltests.model_package.models.article",
            "contrib.src.django.tests.modeltests.model_package.models.publication",
            "contrib.src.django.tests.modeltests.model_package.tests",
            "contrib.src.django.tests.modeltests.mutually_referential",
            "contrib.src.django.tests.modeltests.mutually_referential.models",
            "contrib.src.django.tests.modeltests.mutually_referential.tests",
            "contrib.src.django.tests.modeltests.one_to_one",
            "contrib.src.django.tests.modeltests.one_to_one.models",
            "contrib.src.django.tests.modeltests.one_to_one.tests",
            "contrib.src.django.tests.modeltests.or_lookups",
            "contrib.src.django.tests.modeltests.or_lookups.models",
            "contrib.src.django.tests.modeltests.or_lookups.tests",
            "contrib.src.django.tests.modeltests.order_with_respect_to",
            "contrib.src.django.tests.modeltests.order_with_respect_to.models",
            "contrib.src.django.tests.modeltests.order_with_respect_to.tests",
            "contrib.src.django.tests.modeltests.ordering",
            "contrib.src.django.tests.modeltests.ordering.models",
            "contrib.src.django.tests.modeltests.ordering.tests",
            "contrib.src.django.tests.modeltests.pagination",
            "contrib.src.django.tests.modeltests.pagination.models",
            "contrib.src.django.tests.modeltests.pagination.tests",
            "contrib.src.django.tests.modeltests.properties",
            "contrib.src.django.tests.modeltests.properties.models",
            "contrib.src.django.tests.modeltests.properties.tests",
            "contrib.src.django.tests.modeltests.proxy_model_inheritance",
            "contrib.src.django.tests.modeltests.proxy_model_inheritance.app1",
            "contrib.src.django.tests.modeltests.proxy_model_inheritance.app1.models",
            "contrib.src.django.tests.modeltests.proxy_model_inheritance.app2",
            "contrib.src.django.tests.modeltests.proxy_model_inheritance.app2.models",
            "contrib.src.django.tests.modeltests.proxy_model_inheritance.models",
            "contrib.src.django.tests.modeltests.proxy_model_inheritance.tests",
            "contrib.src.django.tests.modeltests.proxy_models",
            "contrib.src.django.tests.modeltests.proxy_models.models",
            "contrib.src.django.tests.modeltests.proxy_models.tests",
            "contrib.src.django.tests.modeltests.raw_query",
            "contrib.src.django.tests.modeltests.raw_query.models",
            "contrib.src.django.tests.modeltests.raw_query.tests",
            "contrib.src.django.tests.modeltests.reserved_names",
            "contrib.src.django.tests.modeltests.reserved_names.models",
            "contrib.src.django.tests.modeltests.reserved_names.tests",
            "contrib.src.django.tests.modeltests.reverse_lookup",
            "contrib.src.django.tests.modeltests.reverse_lookup.models",
            "contrib.src.django.tests.modeltests.reverse_lookup.tests",
            "contrib.src.django.tests.modeltests.save_delete_hooks",
            "contrib.src.django.tests.modeltests.save_delete_hooks.models",
            "contrib.src.django.tests.modeltests.save_delete_hooks.tests",
            "contrib.src.django.tests.modeltests.select_related",
            "contrib.src.django.tests.modeltests.select_related.models",
            "contrib.src.django.tests.modeltests.select_related.tests",
            "contrib.src.django.tests.modeltests.serializers",
            "contrib.src.django.tests.modeltests.serializers.models",
            "contrib.src.django.tests.modeltests.serializers.tests",
            "contrib.src.django.tests.modeltests.signals",
            "contrib.src.django.tests.modeltests.signals.models",
            "contrib.src.django.tests.modeltests.signals.tests",
            "contrib.src.django.tests.modeltests.str",
            "contrib.src.django.tests.modeltests.str.models",
            "contrib.src.django.tests.modeltests.str.tests",
            "contrib.src.django.tests.modeltests.test_client",
            "contrib.src.django.tests.modeltests.test_client.models",
            "contrib.src.django.tests.modeltests.test_client.tests",
            "contrib.src.django.tests.modeltests.test_client.urls",
            "contrib.src.django.tests.modeltests.test_client.views",
            "contrib.src.django.tests.modeltests.transactions",
            "contrib.src.django.tests.modeltests.transactions.models",
            "contrib.src.django.tests.modeltests.transactions.tests",
            "contrib.src.django.tests.modeltests.transactions.tests_25",
            "contrib.src.django.tests.modeltests.unmanaged_models",
            "contrib.src.django.tests.modeltests.unmanaged_models.models",
            "contrib.src.django.tests.modeltests.unmanaged_models.tests",
            "contrib.src.django.tests.modeltests.update",
            "contrib.src.django.tests.modeltests.update.models",
            "contrib.src.django.tests.modeltests.update.tests",
            "contrib.src.django.tests.modeltests.user_commands",
            "contrib.src.django.tests.modeltests.user_commands.management",
            "contrib.src.django.tests.modeltests.user_commands.management.commands",
            "contrib.src.django.tests.modeltests.user_commands.management.commands.dance",
            "contrib.src.django.tests.modeltests.user_commands.models",
            "contrib.src.django.tests.modeltests.user_commands.tests",
            "contrib.src.django.tests.modeltests.validation",
            "contrib.src.django.tests.modeltests.validation.models",
            "contrib.src.django.tests.modeltests.validation.test_custom_messages",
            "contrib.src.django.tests.modeltests.validation.test_unique",
            "contrib.src.django.tests.modeltests.validation.tests",
            "contrib.src.django.tests.modeltests.validation.validators",
            "contrib.src.django.tests.modeltests.validators",
            "contrib.src.django.tests.modeltests.validators.models",
            "contrib.src.django.tests.modeltests.validators.tests",
            "contrib.src.django.tests.regressiontests",
            "contrib.src.django.tests.regressiontests.admin_changelist",
            "contrib.src.django.tests.regressiontests.admin_changelist.models",
            "contrib.src.django.tests.regressiontests.admin_changelist.tests",
            "contrib.src.django.tests.regressiontests.admin_filterspecs",
            "contrib.src.django.tests.regressiontests.admin_filterspecs.models",
            "contrib.src.django.tests.regressiontests.admin_filterspecs.tests",
            "contrib.src.django.tests.regressiontests.admin_inlines",
            "contrib.src.django.tests.regressiontests.admin_inlines.models",
            "contrib.src.django.tests.regressiontests.admin_inlines.tests",
            "contrib.src.django.tests.regressiontests.admin_ordering",
            "contrib.src.django.tests.regressiontests.admin_ordering.models",
            "contrib.src.django.tests.regressiontests.admin_ordering.tests",
            "contrib.src.django.tests.regressiontests.admin_registration",
            "contrib.src.django.tests.regressiontests.admin_registration.models",
            "contrib.src.django.tests.regressiontests.admin_registration.tests",
            "contrib.src.django.tests.regressiontests.admin_scripts",
            "contrib.src.django.tests.regressiontests.admin_scripts.app_with_import",
            "contrib.src.django.tests.regressiontests.admin_scripts.app_with_import.models",
            "contrib.src.django.tests.regressiontests.admin_scripts.broken_app",
            "contrib.src.django.tests.regressiontests.admin_scripts.broken_app.models",
            "contrib.src.django.tests.regressiontests.admin_scripts.complex_app",
            "contrib.src.django.tests.regressiontests.admin_scripts.complex_app.admin",
            "contrib.src.django.tests.regressiontests.admin_scripts.complex_app.admin.foo",
            "contrib.src.django.tests.regressiontests.admin_scripts.complex_app.models",
            "contrib.src.django.tests.regressiontests.admin_scripts.complex_app.models.bar",
            "contrib.src.django.tests.regressiontests.admin_scripts.complex_app.models.foo",
            "contrib.src.django.tests.regressiontests.admin_scripts.management",
            "contrib.src.django.tests.regressiontests.admin_scripts.management.commands",
            "contrib.src.django.tests.regressiontests.admin_scripts.management.commands.app_command",
            "contrib.src.django.tests.regressiontests.admin_scripts.management.commands.base_command",
            "contrib.src.django.tests.regressiontests.admin_scripts.management.commands.label_command",
            "contrib.src.django.tests.regressiontests.admin_scripts.management.commands.noargs_command",
            "contrib.src.django.tests.regressiontests.admin_scripts.models",
            "contrib.src.django.tests.regressiontests.admin_scripts.simple_app",
            "contrib.src.django.tests.regressiontests.admin_scripts.simple_app.models",
            "contrib.src.django.tests.regressiontests.admin_scripts.tests",
            "contrib.src.django.tests.regressiontests.admin_util",
            "contrib.src.django.tests.regressiontests.admin_util.models",
            "contrib.src.django.tests.regressiontests.admin_util.tests",
            "contrib.src.django.tests.regressiontests.admin_validation",
            "contrib.src.django.tests.regressiontests.admin_validation.models",
            "contrib.src.django.tests.regressiontests.admin_validation.tests",
            "contrib.src.django.tests.regressiontests.admin_views",
            "contrib.src.django.tests.regressiontests.admin_views.customadmin",
            "contrib.src.django.tests.regressiontests.admin_views.forms",
            "contrib.src.django.tests.regressiontests.admin_views.models",
            "contrib.src.django.tests.regressiontests.admin_views.tests",
            "contrib.src.django.tests.regressiontests.admin_views.urls",
            "contrib.src.django.tests.regressiontests.admin_views.views",
            "contrib.src.django.tests.regressiontests.admin_widgets",
            "contrib.src.django.tests.regressiontests.admin_widgets.models",
            "contrib.src.django.tests.regressiontests.admin_widgets.tests",
            "contrib.src.django.tests.regressiontests.admin_widgets.urls",
            "contrib.src.django.tests.regressiontests.admin_widgets.widgetadmin",
            "contrib.src.django.tests.regressiontests.aggregation_regress",
            "contrib.src.django.tests.regressiontests.aggregation_regress.models",
            "contrib.src.django.tests.regressiontests.aggregation_regress.tests",
            "contrib.src.django.tests.regressiontests.app_loading",
            "contrib.src.django.tests.regressiontests.app_loading.models",
            "contrib.src.django.tests.regressiontests.app_loading.parent",
            "contrib.src.django.tests.regressiontests.app_loading.parent.app",
            "contrib.src.django.tests.regressiontests.app_loading.parent.app1",
            "contrib.src.django.tests.regressiontests.app_loading.parent.app_2",
            "contrib.src.django.tests.regressiontests.app_loading.test_settings",
            "contrib.src.django.tests.regressiontests.app_loading.tests",
            "contrib.src.django.tests.regressiontests.backends",
            "contrib.src.django.tests.regressiontests.backends.models",
            "contrib.src.django.tests.regressiontests.backends.tests",
            "contrib.src.django.tests.regressiontests.bash_completion",
            "contrib.src.django.tests.regressiontests.bash_completion.management",
            "contrib.src.django.tests.regressiontests.bash_completion.management.commands",
            "contrib.src.django.tests.regressiontests.bash_completion.management.commands.test_command",
            "contrib.src.django.tests.regressiontests.bash_completion.models",
            "contrib.src.django.tests.regressiontests.bash_completion.tests",
            "contrib.src.django.tests.regressiontests.bug639",
            "contrib.src.django.tests.regressiontests.bug639.models",
            "contrib.src.django.tests.regressiontests.bug639.tests",
            "contrib.src.django.tests.regressiontests.bug8245",
            "contrib.src.django.tests.regressiontests.bug8245.admin",
            "contrib.src.django.tests.regressiontests.bug8245.models",
            "contrib.src.django.tests.regressiontests.bug8245.tests",
            "contrib.src.django.tests.regressiontests.builtin_server",
            "contrib.src.django.tests.regressiontests.builtin_server.models",
            "contrib.src.django.tests.regressiontests.builtin_server.tests",
            "contrib.src.django.tests.regressiontests.cache",
            "contrib.src.django.tests.regressiontests.cache.liberal_backend",
            "contrib.src.django.tests.regressiontests.cache.models",
            "contrib.src.django.tests.regressiontests.cache.tests",
            "contrib.src.django.tests.regressiontests.comment_tests",
            "contrib.src.django.tests.regressiontests.comment_tests.custom_comments",
            "contrib.src.django.tests.regressiontests.comment_tests.custom_comments.forms",
            "contrib.src.django.tests.regressiontests.comment_tests.custom_comments.models",
            "contrib.src.django.tests.regressiontests.comment_tests.custom_comments.views",
            "contrib.src.django.tests.regressiontests.comment_tests.models",
            "contrib.src.django.tests.regressiontests.comment_tests.tests",
            "contrib.src.django.tests.regressiontests.comment_tests.tests.app_api_tests",
            "contrib.src.django.tests.regressiontests.comment_tests.tests.comment_form_tests",
            "contrib.src.django.tests.regressiontests.comment_tests.tests.comment_utils_moderators_tests",
            "contrib.src.django.tests.regressiontests.comment_tests.tests.comment_view_tests",
            "contrib.src.django.tests.regressiontests.comment_tests.tests.feed_tests",
            "contrib.src.django.tests.regressiontests.comment_tests.tests.model_tests",
            "contrib.src.django.tests.regressiontests.comment_tests.tests.moderation_view_tests",
            "contrib.src.django.tests.regressiontests.comment_tests.tests.templatetag_tests",
            "contrib.src.django.tests.regressiontests.comment_tests.urls",
            "contrib.src.django.tests.regressiontests.comment_tests.urls_admin",
            "contrib.src.django.tests.regressiontests.conditional_processing",
            "contrib.src.django.tests.regressiontests.conditional_processing.models",
            "contrib.src.django.tests.regressiontests.conditional_processing.urls",
            "contrib.src.django.tests.regressiontests.conditional_processing.views",
            "contrib.src.django.tests.regressiontests.context_processors",
            "contrib.src.django.tests.regressiontests.context_processors.models",
            "contrib.src.django.tests.regressiontests.context_processors.tests",
            "contrib.src.django.tests.regressiontests.context_processors.urls",
            "contrib.src.django.tests.regressiontests.context_processors.views",
            "contrib.src.django.tests.regressiontests.csrf_tests",
            "contrib.src.django.tests.regressiontests.csrf_tests.models",
            "contrib.src.django.tests.regressiontests.csrf_tests.tests",
            "contrib.src.django.tests.regressiontests.custom_columns_regress",
            "contrib.src.django.tests.regressiontests.custom_columns_regress.models",
            "contrib.src.django.tests.regressiontests.custom_columns_regress.tests",
            "contrib.src.django.tests.regressiontests.custom_managers_regress",
            "contrib.src.django.tests.regressiontests.custom_managers_regress.models",
            "contrib.src.django.tests.regressiontests.custom_managers_regress.tests",
            "contrib.src.django.tests.regressiontests.datatypes",
            "contrib.src.django.tests.regressiontests.datatypes.models",
            "contrib.src.django.tests.regressiontests.datatypes.tests",
            "contrib.src.django.tests.regressiontests.dates",
            "contrib.src.django.tests.regressiontests.dates.models",
            "contrib.src.django.tests.regressiontests.dates.tests",
            "contrib.src.django.tests.regressiontests.db_typecasts",
            "contrib.src.django.tests.regressiontests.db_typecasts.models",
            "contrib.src.django.tests.regressiontests.db_typecasts.tests",
            "contrib.src.django.tests.regressiontests.decorators",
            "contrib.src.django.tests.regressiontests.decorators.models",
            "contrib.src.django.tests.regressiontests.decorators.tests",
            "contrib.src.django.tests.regressiontests.defaultfilters",
            "contrib.src.django.tests.regressiontests.defaultfilters.models",
            "contrib.src.django.tests.regressiontests.defaultfilters.tests",
            "contrib.src.django.tests.regressiontests.defer_regress",
            "contrib.src.django.tests.regressiontests.defer_regress.models",
            "contrib.src.django.tests.regressiontests.defer_regress.tests",
            "contrib.src.django.tests.regressiontests.delete_regress",
            "contrib.src.django.tests.regressiontests.delete_regress.models",
            "contrib.src.django.tests.regressiontests.delete_regress.tests",
            "contrib.src.django.tests.regressiontests.dispatch",
            "contrib.src.django.tests.regressiontests.dispatch.models",
            "contrib.src.django.tests.regressiontests.dispatch.tests",
            "contrib.src.django.tests.regressiontests.dispatch.tests.test_dispatcher",
            "contrib.src.django.tests.regressiontests.dispatch.tests.test_saferef",
            "contrib.src.django.tests.regressiontests.expressions_regress",
            "contrib.src.django.tests.regressiontests.expressions_regress.models",
            "contrib.src.django.tests.regressiontests.expressions_regress.tests",
            "contrib.src.django.tests.regressiontests.extra_regress",
            "contrib.src.django.tests.regressiontests.extra_regress.models",
            "contrib.src.django.tests.regressiontests.extra_regress.tests",
            "contrib.src.django.tests.regressiontests.file_storage",
            "contrib.src.django.tests.regressiontests.file_storage.models",
            "contrib.src.django.tests.regressiontests.file_storage.tests",
            "contrib.src.django.tests.regressiontests.file_uploads",
            "contrib.src.django.tests.regressiontests.file_uploads.models",
            "contrib.src.django.tests.regressiontests.file_uploads.tests",
            "contrib.src.django.tests.regressiontests.file_uploads.uploadhandler",
            "contrib.src.django.tests.regressiontests.file_uploads.urls",
            "contrib.src.django.tests.regressiontests.file_uploads.views",
            "contrib.src.django.tests.regressiontests.fixtures_regress",
            "contrib.src.django.tests.regressiontests.fixtures_regress.models",
            "contrib.src.django.tests.regressiontests.fixtures_regress.tests",
            "contrib.src.django.tests.regressiontests.forms",
            "contrib.src.django.tests.regressiontests.forms.localflavor",
            "contrib.src.django.tests.regressiontests.forms.localflavor.ar",
            "contrib.src.django.tests.regressiontests.forms.localflavor.at",
            "contrib.src.django.tests.regressiontests.forms.localflavor.au",
            "contrib.src.django.tests.regressiontests.forms.localflavor.be",
            "contrib.src.django.tests.regressiontests.forms.localflavor.br",
            "contrib.src.django.tests.regressiontests.forms.localflavor.ca",
            "contrib.src.django.tests.regressiontests.forms.localflavor.ch",
            "contrib.src.django.tests.regressiontests.forms.localflavor.cl",
            "contrib.src.django.tests.regressiontests.forms.localflavor.cz",
            "contrib.src.django.tests.regressiontests.forms.localflavor.de",
            "contrib.src.django.tests.regressiontests.forms.localflavor.es",
            "contrib.src.django.tests.regressiontests.forms.localflavor.fi",
            "contrib.src.django.tests.regressiontests.forms.localflavor.fr",
            "contrib.src.django.tests.regressiontests.forms.localflavor.generic",
            "contrib.src.django.tests.regressiontests.forms.localflavor.id",
            "contrib.src.django.tests.regressiontests.forms.localflavor.ie",
            "contrib.src.django.tests.regressiontests.forms.localflavor.il",
            "contrib.src.django.tests.regressiontests.forms.localflavor.is_",
            "contrib.src.django.tests.regressiontests.forms.localflavor.it",
            "contrib.src.django.tests.regressiontests.forms.localflavor.jp",
            "contrib.src.django.tests.regressiontests.forms.localflavor.kw",
            "contrib.src.django.tests.regressiontests.forms.localflavor.nl",
            "contrib.src.django.tests.regressiontests.forms.localflavor.pl",
            "contrib.src.django.tests.regressiontests.forms.localflavor.pt",
            "contrib.src.django.tests.regressiontests.forms.localflavor.ro",
            "contrib.src.django.tests.regressiontests.forms.localflavor.se",
            "contrib.src.django.tests.regressiontests.forms.localflavor.sk",
            "contrib.src.django.tests.regressiontests.forms.localflavor.tr",
            "contrib.src.django.tests.regressiontests.forms.localflavor.uk",
            "contrib.src.django.tests.regressiontests.forms.localflavor.us",
            "contrib.src.django.tests.regressiontests.forms.localflavor.utils",
            "contrib.src.django.tests.regressiontests.forms.localflavor.uy",
            "contrib.src.django.tests.regressiontests.forms.localflavor.za",
            "contrib.src.django.tests.regressiontests.forms.localflavortests",
            "contrib.src.django.tests.regressiontests.forms.models",
            "contrib.src.django.tests.regressiontests.forms.tests",
            "contrib.src.django.tests.regressiontests.forms.tests.error_messages",
            "contrib.src.django.tests.regressiontests.forms.tests.extra",
            "contrib.src.django.tests.regressiontests.forms.tests.fields",
            "contrib.src.django.tests.regressiontests.forms.tests.forms",
            "contrib.src.django.tests.regressiontests.forms.tests.formsets",
            "contrib.src.django.tests.regressiontests.forms.tests.input_formats",
            "contrib.src.django.tests.regressiontests.forms.tests.media",
            "contrib.src.django.tests.regressiontests.forms.tests.models",
            "contrib.src.django.tests.regressiontests.forms.tests.regressions",
            "contrib.src.django.tests.regressiontests.forms.tests.util",
            "contrib.src.django.tests.regressiontests.forms.tests.validators",
            "contrib.src.django.tests.regressiontests.forms.tests.widgets",
            "contrib.src.django.tests.regressiontests.formwizard",
            "contrib.src.django.tests.regressiontests.formwizard.forms",
            "contrib.src.django.tests.regressiontests.formwizard.models",
            "contrib.src.django.tests.regressiontests.formwizard.tests",
            "contrib.src.django.tests.regressiontests.formwizard.urls",
            "contrib.src.django.tests.regressiontests.generic_inline_admin",
            "contrib.src.django.tests.regressiontests.generic_inline_admin.models",
            "contrib.src.django.tests.regressiontests.generic_inline_admin.tests",
            "contrib.src.django.tests.regressiontests.generic_inline_admin.urls",
            "contrib.src.django.tests.regressiontests.generic_relations_regress",
            "contrib.src.django.tests.regressiontests.generic_relations_regress.models",
            "contrib.src.django.tests.regressiontests.generic_relations_regress.tests",
            "contrib.src.django.tests.regressiontests.generic_views",
            "contrib.src.django.tests.regressiontests.generic_views.base",
            "contrib.src.django.tests.regressiontests.generic_views.dates",
            "contrib.src.django.tests.regressiontests.generic_views.detail",
            "contrib.src.django.tests.regressiontests.generic_views.edit",
            "contrib.src.django.tests.regressiontests.generic_views.forms",
            "contrib.src.django.tests.regressiontests.generic_views.list",
            "contrib.src.django.tests.regressiontests.generic_views.models",
            "contrib.src.django.tests.regressiontests.generic_views.tests",
            "contrib.src.django.tests.regressiontests.generic_views.urls",
            "contrib.src.django.tests.regressiontests.generic_views.views",
            "contrib.src.django.tests.regressiontests.get_or_create_regress",
            "contrib.src.django.tests.regressiontests.get_or_create_regress.models",
            "contrib.src.django.tests.regressiontests.get_or_create_regress.tests",
            "contrib.src.django.tests.regressiontests.handlers",
            "contrib.src.django.tests.regressiontests.handlers.models",
            "contrib.src.django.tests.regressiontests.handlers.tests",
            "contrib.src.django.tests.regressiontests.httpwrappers",
            "contrib.src.django.tests.regressiontests.httpwrappers.models",
            "contrib.src.django.tests.regressiontests.httpwrappers.tests",
            "contrib.src.django.tests.regressiontests.humanize",
            "contrib.src.django.tests.regressiontests.humanize.models",
            "contrib.src.django.tests.regressiontests.humanize.tests",
            "contrib.src.django.tests.regressiontests.i18n",
            "contrib.src.django.tests.regressiontests.i18n.commands",
            "contrib.src.django.tests.regressiontests.i18n.commands.compilation",
            "contrib.src.django.tests.regressiontests.i18n.commands.extraction",
            "contrib.src.django.tests.regressiontests.i18n.commands.tests",
            "contrib.src.django.tests.regressiontests.i18n.forms",
            "contrib.src.django.tests.regressiontests.i18n.models",
            "contrib.src.django.tests.regressiontests.i18n.other",
            "contrib.src.django.tests.regressiontests.i18n.other.locale",
            "contrib.src.django.tests.regressiontests.i18n.other.locale.de",
            "contrib.src.django.tests.regressiontests.i18n.other.locale.de.formats",
            "contrib.src.django.tests.regressiontests.i18n.resolution",
            "contrib.src.django.tests.regressiontests.i18n.resolution.models",
            "contrib.src.django.tests.regressiontests.i18n.test_warnings",
            "contrib.src.django.tests.regressiontests.i18n.tests",
            "contrib.src.django.tests.regressiontests.initial_sql_regress",
            "contrib.src.django.tests.regressiontests.initial_sql_regress.models",
            "contrib.src.django.tests.regressiontests.initial_sql_regress.tests",
            "contrib.src.django.tests.regressiontests.inline_formsets",
            "contrib.src.django.tests.regressiontests.inline_formsets.models",
            "contrib.src.django.tests.regressiontests.inline_formsets.tests",
            "contrib.src.django.tests.regressiontests.inspectdb",
            "contrib.src.django.tests.regressiontests.inspectdb.models",
            "contrib.src.django.tests.regressiontests.inspectdb.tests",
            "contrib.src.django.tests.regressiontests.introspection",
            "contrib.src.django.tests.regressiontests.introspection.models",
            "contrib.src.django.tests.regressiontests.introspection.tests",
            "contrib.src.django.tests.regressiontests.localflavor",
            "contrib.src.django.tests.regressiontests.localflavor.models",
            "contrib.src.django.tests.regressiontests.localflavor.tests",
            "contrib.src.django.tests.regressiontests.localflavor.us",
            "contrib.src.django.tests.regressiontests.localflavor.us.forms",
            "contrib.src.django.tests.regressiontests.localflavor.us.models",
            "contrib.src.django.tests.regressiontests.localflavor.us.tests",
            "contrib.src.django.tests.regressiontests.m2m_regress",
            "contrib.src.django.tests.regressiontests.m2m_regress.models",
            "contrib.src.django.tests.regressiontests.m2m_regress.tests",
            "contrib.src.django.tests.regressiontests.m2m_through_regress",
            "contrib.src.django.tests.regressiontests.m2m_through_regress.models",
            "contrib.src.django.tests.regressiontests.m2m_through_regress.tests",
            "contrib.src.django.tests.regressiontests.mail",
            "contrib.src.django.tests.regressiontests.mail.custombackend",
            "contrib.src.django.tests.regressiontests.mail.models",
            "contrib.src.django.tests.regressiontests.mail.tests",
            "contrib.src.django.tests.regressiontests.managers_regress",
            "contrib.src.django.tests.regressiontests.managers_regress.models",
            "contrib.src.django.tests.regressiontests.managers_regress.tests",
            "contrib.src.django.tests.regressiontests.many_to_one_regress",
            "contrib.src.django.tests.regressiontests.many_to_one_regress.models",
            "contrib.src.django.tests.regressiontests.many_to_one_regress.tests",
            "contrib.src.django.tests.regressiontests.max_lengths",
            "contrib.src.django.tests.regressiontests.max_lengths.models",
            "contrib.src.django.tests.regressiontests.max_lengths.tests",
            "contrib.src.django.tests.regressiontests.middleware",
            "contrib.src.django.tests.regressiontests.middleware.cond_get_urls",
            "contrib.src.django.tests.regressiontests.middleware.extra_urls",
            "contrib.src.django.tests.regressiontests.middleware.models",
            "contrib.src.django.tests.regressiontests.middleware.tests",
            "contrib.src.django.tests.regressiontests.middleware.urls",
            "contrib.src.django.tests.regressiontests.middleware_exceptions",
            "contrib.src.django.tests.regressiontests.middleware_exceptions.models",
            "contrib.src.django.tests.regressiontests.middleware_exceptions.tests",
            "contrib.src.django.tests.regressiontests.middleware_exceptions.urls",
            "contrib.src.django.tests.regressiontests.middleware_exceptions.views",
            "contrib.src.django.tests.regressiontests.model_fields",
            "contrib.src.django.tests.regressiontests.model_fields.imagefield",
            "contrib.src.django.tests.regressiontests.model_fields.models",
            "contrib.src.django.tests.regressiontests.model_fields.tests",
            "contrib.src.django.tests.regressiontests.model_forms_regress",
            "contrib.src.django.tests.regressiontests.model_forms_regress.models",
            "contrib.src.django.tests.regressiontests.model_forms_regress.tests",
            "contrib.src.django.tests.regressiontests.model_formsets_regress",
            "contrib.src.django.tests.regressiontests.model_formsets_regress.models",
            "contrib.src.django.tests.regressiontests.model_formsets_regress.tests",
            "contrib.src.django.tests.regressiontests.model_inheritance_regress",
            "contrib.src.django.tests.regressiontests.model_inheritance_regress.models",
            "contrib.src.django.tests.regressiontests.model_inheritance_regress.tests",
            "contrib.src.django.tests.regressiontests.model_inheritance_select_related",
            "contrib.src.django.tests.regressiontests.model_inheritance_select_related.models",
            "contrib.src.django.tests.regressiontests.model_inheritance_select_related.tests",
            "contrib.src.django.tests.regressiontests.model_permalink",
            "contrib.src.django.tests.regressiontests.model_permalink.models",
            "contrib.src.django.tests.regressiontests.model_permalink.tests",
            "contrib.src.django.tests.regressiontests.model_permalink.urls",
            "contrib.src.django.tests.regressiontests.model_regress",
            "contrib.src.django.tests.regressiontests.model_regress.models",
            "contrib.src.django.tests.regressiontests.model_regress.tests",
            "contrib.src.django.tests.regressiontests.modeladmin",
            "contrib.src.django.tests.regressiontests.modeladmin.models",
            "contrib.src.django.tests.regressiontests.modeladmin.tests",
            "contrib.src.django.tests.regressiontests.multiple_database",
            "contrib.src.django.tests.regressiontests.multiple_database.models",
            "contrib.src.django.tests.regressiontests.multiple_database.tests",
            "contrib.src.django.tests.regressiontests.null_fk",
            "contrib.src.django.tests.regressiontests.null_fk.models",
            "contrib.src.django.tests.regressiontests.null_fk.tests",
            "contrib.src.django.tests.regressiontests.null_fk_ordering",
            "contrib.src.django.tests.regressiontests.null_fk_ordering.models",
            "contrib.src.django.tests.regressiontests.null_fk_ordering.tests",
            "contrib.src.django.tests.regressiontests.null_queries",
            "contrib.src.django.tests.regressiontests.null_queries.models",
            "contrib.src.django.tests.regressiontests.null_queries.tests",
            "contrib.src.django.tests.regressiontests.one_to_one_regress",
            "contrib.src.django.tests.regressiontests.one_to_one_regress.models",
            "contrib.src.django.tests.regressiontests.one_to_one_regress.tests",
            "contrib.src.django.tests.regressiontests.pagination_regress",
            "contrib.src.django.tests.regressiontests.pagination_regress.models",
            "contrib.src.django.tests.regressiontests.pagination_regress.tests",
            "contrib.src.django.tests.regressiontests.queries",
            "contrib.src.django.tests.regressiontests.queries.models",
            "contrib.src.django.tests.regressiontests.queries.tests",
            "contrib.src.django.tests.regressiontests.queryset_pickle",
            "contrib.src.django.tests.regressiontests.queryset_pickle.models",
            "contrib.src.django.tests.regressiontests.queryset_pickle.tests",
            "contrib.src.django.tests.regressiontests.requests",
            "contrib.src.django.tests.regressiontests.requests.models",
            "contrib.src.django.tests.regressiontests.requests.tests",
            "contrib.src.django.tests.regressiontests.reverse_single_related",
            "contrib.src.django.tests.regressiontests.reverse_single_related.models",
            "contrib.src.django.tests.regressiontests.reverse_single_related.tests",
            "contrib.src.django.tests.regressiontests.select_related_onetoone",
            "contrib.src.django.tests.regressiontests.select_related_onetoone.models",
            "contrib.src.django.tests.regressiontests.select_related_onetoone.tests",
            "contrib.src.django.tests.regressiontests.select_related_regress",
            "contrib.src.django.tests.regressiontests.select_related_regress.models",
            "contrib.src.django.tests.regressiontests.select_related_regress.tests",
            "contrib.src.django.tests.regressiontests.serializers_regress",
            "contrib.src.django.tests.regressiontests.serializers_regress.models",
            "contrib.src.django.tests.regressiontests.serializers_regress.tests",
            "contrib.src.django.tests.regressiontests.servers",
            "contrib.src.django.tests.regressiontests.servers.models",
            "contrib.src.django.tests.regressiontests.servers.tests",
            "contrib.src.django.tests.regressiontests.settings_tests",
            "contrib.src.django.tests.regressiontests.settings_tests.models",
            "contrib.src.django.tests.regressiontests.settings_tests.tests",
            "contrib.src.django.tests.regressiontests.signals_regress",
            "contrib.src.django.tests.regressiontests.signals_regress.models",
            "contrib.src.django.tests.regressiontests.signals_regress.tests",
            "contrib.src.django.tests.regressiontests.sites_framework",
            "contrib.src.django.tests.regressiontests.sites_framework.models",
            "contrib.src.django.tests.regressiontests.sites_framework.tests",
            "contrib.src.django.tests.regressiontests.special_headers",
            "contrib.src.django.tests.regressiontests.special_headers.models",
            "contrib.src.django.tests.regressiontests.special_headers.tests",
            "contrib.src.django.tests.regressiontests.special_headers.urls",
            "contrib.src.django.tests.regressiontests.special_headers.views",
            "contrib.src.django.tests.regressiontests.staticfiles_tests",
            "contrib.src.django.tests.regressiontests.staticfiles_tests.apps",
            "contrib.src.django.tests.regressiontests.staticfiles_tests.apps.no_label",
            "contrib.src.django.tests.regressiontests.staticfiles_tests.apps.no_label.models",
            "contrib.src.django.tests.regressiontests.staticfiles_tests.apps.test",
            "contrib.src.django.tests.regressiontests.staticfiles_tests.apps.test.models",
            "contrib.src.django.tests.regressiontests.staticfiles_tests.models",
            "contrib.src.django.tests.regressiontests.staticfiles_tests.storage",
            "contrib.src.django.tests.regressiontests.staticfiles_tests.tests",
            "contrib.src.django.tests.regressiontests.staticfiles_tests.urls",
            "contrib.src.django.tests.regressiontests.staticfiles_tests.urls.default",
            "contrib.src.django.tests.regressiontests.staticfiles_tests.urls.helper",
            "contrib.src.django.tests.regressiontests.string_lookup",
            "contrib.src.django.tests.regressiontests.string_lookup.models",
            "contrib.src.django.tests.regressiontests.string_lookup.tests",
            "contrib.src.django.tests.regressiontests.syndication",
            "contrib.src.django.tests.regressiontests.syndication.feeds",
            "contrib.src.django.tests.regressiontests.syndication.models",
            "contrib.src.django.tests.regressiontests.syndication.tests",
            "contrib.src.django.tests.regressiontests.syndication.urls",
            "contrib.src.django.tests.regressiontests.templates",
            "contrib.src.django.tests.regressiontests.templates.alternate_urls",
            "contrib.src.django.tests.regressiontests.templates.context",
            "contrib.src.django.tests.regressiontests.templates.custom",
            "contrib.src.django.tests.regressiontests.templates.filters",
            "contrib.src.django.tests.regressiontests.templates.loaders",
            "contrib.src.django.tests.regressiontests.templates.models",
            "contrib.src.django.tests.regressiontests.templates.nodelist",
            "contrib.src.django.tests.regressiontests.templates.parser",
            "contrib.src.django.tests.regressiontests.templates.response",
            "contrib.src.django.tests.regressiontests.templates.smartif",
            "contrib.src.django.tests.regressiontests.templates.templatetags",
            "contrib.src.django.tests.regressiontests.templates.templatetags.bad_tag",
            "contrib.src.django.tests.regressiontests.templates.templatetags.broken_tag",
            "contrib.src.django.tests.regressiontests.templates.templatetags.custom",
            "contrib.src.django.tests.regressiontests.templates.tests",
            "contrib.src.django.tests.regressiontests.templates.unicode",
            "contrib.src.django.tests.regressiontests.templates.urls",
            "contrib.src.django.tests.regressiontests.templates.views",
            "contrib.src.django.tests.regressiontests.test_client_regress",
            "contrib.src.django.tests.regressiontests.test_client_regress.models",
            "contrib.src.django.tests.regressiontests.test_client_regress.session",
            "contrib.src.django.tests.regressiontests.test_client_regress.urls",
            "contrib.src.django.tests.regressiontests.test_client_regress.views",
            "contrib.src.django.tests.regressiontests.test_runner",
            "contrib.src.django.tests.regressiontests.test_runner.models",
            "contrib.src.django.tests.regressiontests.test_runner.tests",
            "contrib.src.django.tests.regressiontests.test_utils",
            "contrib.src.django.tests.regressiontests.test_utils.models",
            "contrib.src.django.tests.regressiontests.test_utils.tests",
            "contrib.src.django.tests.regressiontests.test_utils.tests_25",
            "contrib.src.django.tests.regressiontests.test_utils.urls",
            "contrib.src.django.tests.regressiontests.test_utils.views",
            "contrib.src.django.tests.regressiontests.text",
            "contrib.src.django.tests.regressiontests.text.models",
            "contrib.src.django.tests.regressiontests.text.tests",
            "contrib.src.django.tests.regressiontests.transactions_regress",
            "contrib.src.django.tests.regressiontests.transactions_regress.models",
            "contrib.src.django.tests.regressiontests.transactions_regress.tests",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse.extra_urls",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse.included_named_urls",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse.included_named_urls2",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse.included_namespace_urls",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse.included_urls",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse.included_urls2",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse.middleware",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse.models",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse.named_urls",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse.namespace_urls",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse.no_urls",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse.tests",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse.urlconf_inner",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse.urlconf_outer",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse.urls",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse.urls_error_handlers",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse.urls_error_handlers_callables",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse.urls_without_full_import",
            "contrib.src.django.tests.regressiontests.urlpatterns_reverse.views",
            "contrib.src.django.tests.regressiontests.utils",
            "contrib.src.django.tests.regressiontests.utils.checksums",
            "contrib.src.django.tests.regressiontests.utils.datastructures",
            "contrib.src.django.tests.regressiontests.utils.dateformat",
            "contrib.src.django.tests.regressiontests.utils.datetime_safe",
            "contrib.src.django.tests.regressiontests.utils.decorators",
            "contrib.src.django.tests.regressiontests.utils.feedgenerator",
            "contrib.src.django.tests.regressiontests.utils.functional",
            "contrib.src.django.tests.regressiontests.utils.html",
            "contrib.src.django.tests.regressiontests.utils.http",
            "contrib.src.django.tests.regressiontests.utils.models",
            "contrib.src.django.tests.regressiontests.utils.module_loading",
            "contrib.src.django.tests.regressiontests.utils.simplelazyobject",
            "contrib.src.django.tests.regressiontests.utils.termcolors",
            "contrib.src.django.tests.regressiontests.utils.test_module",
            "contrib.src.django.tests.regressiontests.utils.test_module.bad_module",
            "contrib.src.django.tests.regressiontests.utils.test_module.good_module",
            "contrib.src.django.tests.regressiontests.utils.tests",
            "contrib.src.django.tests.regressiontests.utils.text",
            "contrib.src.django.tests.regressiontests.utils.timesince",
            "contrib.src.django.tests.regressiontests.utils.tzinfo",
            "contrib.src.django.tests.regressiontests.views",
            "contrib.src.django.tests.regressiontests.views.app0",
            "contrib.src.django.tests.regressiontests.views.app1",
            "contrib.src.django.tests.regressiontests.views.app2",
            "contrib.src.django.tests.regressiontests.views.app3",
            "contrib.src.django.tests.regressiontests.views.app4",
            "contrib.src.django.tests.regressiontests.views.models",
            "contrib.src.django.tests.regressiontests.views.templatetags",
            "contrib.src.django.tests.regressiontests.views.templatetags.debugtags",
            "contrib.src.django.tests.regressiontests.views.tests",
            "contrib.src.django.tests.regressiontests.views.tests.debug",
            "contrib.src.django.tests.regressiontests.views.tests.defaults",
            "contrib.src.django.tests.regressiontests.views.tests.generic",
            "contrib.src.django.tests.regressiontests.views.tests.generic.create_update",
            "contrib.src.django.tests.regressiontests.views.tests.generic.date_based",
            "contrib.src.django.tests.regressiontests.views.tests.generic.object_list",
            "contrib.src.django.tests.regressiontests.views.tests.generic.simple",
            "contrib.src.django.tests.regressiontests.views.tests.i18n",
            "contrib.src.django.tests.regressiontests.views.tests.shortcuts",
            "contrib.src.django.tests.regressiontests.views.tests.specials",
            "contrib.src.django.tests.regressiontests.views.tests.static",
            "contrib.src.django.tests.regressiontests.views.urls",
            "contrib.src.django.tests.regressiontests.views.views",
            "contrib.src.docutils.docutils",
            "contrib.src.docutils.docutils._compat",
            "contrib.src.docutils.docutils._string_template_compat",
            "contrib.src.docutils.docutils.core",
            "contrib.src.docutils.docutils.examples",
            "contrib.src.docutils.docutils.frontend",
            "contrib.src.docutils.docutils.io",
            "contrib.src.docutils.docutils.languages",
            "contrib.src.docutils.docutils.languages.af",
            "contrib.src.docutils.docutils.languages.ca",
            "contrib.src.docutils.docutils.languages.cs",
            "contrib.src.docutils.docutils.languages.de",
            "contrib.src.docutils.docutils.languages.en",
            "contrib.src.docutils.docutils.languages.eo",
            "contrib.src.docutils.docutils.languages.es",
            "contrib.src.docutils.docutils.languages.fi",
            "contrib.src.docutils.docutils.languages.fr",
            "contrib.src.docutils.docutils.languages.gl",
            "contrib.src.docutils.docutils.languages.he",
            "contrib.src.docutils.docutils.languages.it",
            "contrib.src.docutils.docutils.languages.ja",
            "contrib.src.docutils.docutils.languages.nl",
            "contrib.src.docutils.docutils.languages.pl",
            "contrib.src.docutils.docutils.languages.pt_br",
            "contrib.src.docutils.docutils.languages.ru",
            "contrib.src.docutils.docutils.languages.sk",
            "contrib.src.docutils.docutils.languages.sv",
            "contrib.src.docutils.docutils.languages.zh_cn",
            "contrib.src.docutils.docutils.languages.zh_tw",
            "contrib.src.docutils.docutils.nodes",
            "contrib.src.docutils.docutils.parsers",
            "contrib.src.docutils.docutils.parsers.null",
            "contrib.src.docutils.docutils.parsers.rst",
            "contrib.src.docutils.docutils.parsers.rst.directives",
            "contrib.src.docutils.docutils.parsers.rst.directives.admonitions",
            "contrib.src.docutils.docutils.parsers.rst.directives.body",
            "contrib.src.docutils.docutils.parsers.rst.directives.html",
            "contrib.src.docutils.docutils.parsers.rst.directives.images",
            "contrib.src.docutils.docutils.parsers.rst.directives.misc",
            "contrib.src.docutils.docutils.parsers.rst.directives.parts",
            "contrib.src.docutils.docutils.parsers.rst.directives.references",
            "contrib.src.docutils.docutils.parsers.rst.directives.tables",
            "contrib.src.docutils.docutils.parsers.rst.languages",
            "contrib.src.docutils.docutils.parsers.rst.languages.af",
            "contrib.src.docutils.docutils.parsers.rst.languages.ca",
            "contrib.src.docutils.docutils.parsers.rst.languages.cs",
            "contrib.src.docutils.docutils.parsers.rst.languages.de",
            "contrib.src.docutils.docutils.parsers.rst.languages.en",
            "contrib.src.docutils.docutils.parsers.rst.languages.eo",
            "contrib.src.docutils.docutils.parsers.rst.languages.es",
            "contrib.src.docutils.docutils.parsers.rst.languages.fi",
            "contrib.src.docutils.docutils.parsers.rst.languages.fr",
            "contrib.src.docutils.docutils.parsers.rst.languages.gl",
            "contrib.src.docutils.docutils.parsers.rst.languages.he",
            "contrib.src.docutils.docutils.parsers.rst.languages.it",
            "contrib.src.docutils.docutils.parsers.rst.languages.ja",
            "contrib.src.docutils.docutils.parsers.rst.languages.nl",
            "contrib.src.docutils.docutils.parsers.rst.languages.pl",
            "contrib.src.docutils.docutils.parsers.rst.languages.pt_br",
            "contrib.src.docutils.docutils.parsers.rst.languages.ru",
            "contrib.src.docutils.docutils.parsers.rst.languages.sk",
            "contrib.src.docutils.docutils.parsers.rst.languages.sv",
            "contrib.src.docutils.docutils.parsers.rst.languages.zh_cn",
            "contrib.src.docutils.docutils.parsers.rst.languages.zh_tw",
            "contrib.src.docutils.docutils.parsers.rst.roles",
            "contrib.src.docutils.docutils.parsers.rst.states",
            "contrib.src.docutils.docutils.parsers.rst.tableparser",
            "contrib.src.docutils.docutils.readers",
            "contrib.src.docutils.docutils.readers.doctree",
            "contrib.src.docutils.docutils.readers.pep",
            "contrib.src.docutils.docutils.readers.python",
            "contrib.src.docutils.docutils.readers.python.moduleparser",
            "contrib.src.docutils.docutils.readers.python.pynodes",
            "contrib.src.docutils.docutils.readers.standalone",
            "contrib.src.docutils.docutils.statemachine",
            "contrib.src.docutils.docutils.transforms",
            "contrib.src.docutils.docutils.transforms.components",
            "contrib.src.docutils.docutils.transforms.frontmatter",
            "contrib.src.docutils.docutils.transforms.misc",
            "contrib.src.docutils.docutils.transforms.parts",
            "contrib.src.docutils.docutils.transforms.peps",
            "contrib.src.docutils.docutils.transforms.references",
            "contrib.src.docutils.docutils.transforms.universal",
            "contrib.src.docutils.docutils.transforms.writer_aux",
            "contrib.src.docutils.docutils.urischemes",
            "contrib.src.docutils.docutils.utils",
            "contrib.src.docutils.docutils.writers",
            "contrib.src.docutils.docutils.writers.docutils_xml",
            "contrib.src.docutils.docutils.writers.html4css1",
            "contrib.src.docutils.docutils.writers.latex2e",
            "contrib.src.docutils.docutils.writers.manpage",
            "contrib.src.docutils.docutils.writers.newlatex2e",
            "contrib.src.docutils.docutils.writers.newlatex2e.unicode_map",
            "contrib.src.docutils.docutils.writers.null",
            "contrib.src.docutils.docutils.writers.odf_odt",
            "contrib.src.docutils.docutils.writers.odf_odt.pygmentsformatter",
            "contrib.src.docutils.docutils.writers.pep_html",
            "contrib.src.docutils.docutils.writers.pseudoxml",
            "contrib.src.docutils.docutils.writers.s5_html",
            "contrib.src.docutils.test.test_parsers",
            "contrib.src.docutils.test.test_parsers.test_parser",
            "contrib.src.docutils.test.test_parsers.test_rst",
            "contrib.src.docutils.test.test_parsers.test_rst.test_SimpleTableParser",
            "contrib.src.docutils.test.test_parsers.test_rst.test_TableParser",
            "contrib.src.docutils.test.test_parsers.test_rst.test_block_quotes",
            "contrib.src.docutils.test.test_parsers.test_rst.test_bullet_lists",
            "contrib.src.docutils.test.test_parsers.test_rst.test_citations",
            "contrib.src.docutils.test.test_parsers.test_rst.test_comments",
            "contrib.src.docutils.test.test_parsers.test_rst.test_definition_lists",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_admonitions",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_block_quotes",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_class",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_compound",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_container",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_contents",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_date",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_decorations",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_default_role",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_figures",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_images",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_include",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_line_blocks",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_meta",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_parsed_literals",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_raw",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_replace",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_role",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_rubrics",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_sectnum",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_sidebars",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_tables",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_target_notes",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_test_directives",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_title",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_topics",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_unicode",
            "contrib.src.docutils.test.test_parsers.test_rst.test_directives.test_unknown",
            "contrib.src.docutils.test.test_parsers.test_rst.test_doctest_blocks",
            "contrib.src.docutils.test.test_parsers.test_rst.test_east_asian_text",
            "contrib.src.docutils.test.test_parsers.test_rst.test_enumerated_lists",
            "contrib.src.docutils.test.test_parsers.test_rst.test_field_lists",
            "contrib.src.docutils.test.test_parsers.test_rst.test_footnotes",
            "contrib.src.docutils.test.test_parsers.test_rst.test_functions",
            "contrib.src.docutils.test.test_parsers.test_rst.test_inline_markup",
            "contrib.src.docutils.test.test_parsers.test_rst.test_interpreted",
            "contrib.src.docutils.test.test_parsers.test_rst.test_line_blocks",
            "contrib.src.docutils.test.test_parsers.test_rst.test_literal_blocks",
            "contrib.src.docutils.test.test_parsers.test_rst.test_option_lists",
            "contrib.src.docutils.test.test_parsers.test_rst.test_outdenting",
            "contrib.src.docutils.test.test_parsers.test_rst.test_paragraphs",
            "contrib.src.docutils.test.test_parsers.test_rst.test_section_headers",
            "contrib.src.docutils.test.test_parsers.test_rst.test_substitutions",
            "contrib.src.docutils.test.test_parsers.test_rst.test_tables",
            "contrib.src.docutils.test.test_parsers.test_rst.test_targets",
            "contrib.src.docutils.test.test_parsers.test_rst.test_transitions",
            "contrib.src.docutils.test.test_readers",
            "contrib.src.docutils.test.test_readers.test_pep",
            "contrib.src.docutils.test.test_readers.test_pep.test_inline_markup",
            "contrib.src.docutils.test.test_readers.test_pep.test_rfc2822",
            "contrib.src.docutils.test.test_readers.test_python",
            "contrib.src.docutils.test.test_readers.test_python.test_functions",
            "contrib.src.docutils.test.test_readers.test_python.test_parser",
            "contrib.src.docutils.test.test_readers.test_python.test_token_parser",
            "contrib.src.docutils.test.test_transforms",
            "contrib.src.docutils.test.test_transforms.test___init__",
            "contrib.src.docutils.test.test_transforms.test_class",
            "contrib.src.docutils.test.test_transforms.test_contents",
            "contrib.src.docutils.test.test_transforms.test_docinfo",
            "contrib.src.docutils.test.test_transforms.test_doctitle",
            "contrib.src.docutils.test.test_transforms.test_expose_internals",
            "contrib.src.docutils.test.test_transforms.test_filter",
            "contrib.src.docutils.test.test_transforms.test_footnotes",
            "contrib.src.docutils.test.test_transforms.test_hyperlinks",
            "contrib.src.docutils.test.test_transforms.test_messages",
            "contrib.src.docutils.test.test_transforms.test_peps",
            "contrib.src.docutils.test.test_transforms.test_sectnum",
            "contrib.src.docutils.test.test_transforms.test_strip_comments",
            "contrib.src.docutils.test.test_transforms.test_substitutions",
            "contrib.src.docutils.test.test_transforms.test_target_notes",
            "contrib.src.docutils.test.test_transforms.test_transitions",
            "contrib.src.docutils.test.test_transforms.test_writer_aux",
            "contrib.src.docutils.test.test_writers",
            "contrib.src.docutils.test.test_writers.test_docutils_xml",
            "contrib.src.docutils.test.test_writers.test_html4css1_misc",
            "contrib.src.docutils.test.test_writers.test_html4css1_parts",
            "contrib.src.docutils.test.test_writers.test_html4css1_template",
            "contrib.src.docutils.test.test_writers.test_latex2e",
            "contrib.src.docutils.test.test_writers.test_manpage",
            "contrib.src.docutils.test.test_writers.test_null",
            "contrib.src.docutils.test.test_writers.test_odt",
            "contrib.src.docutils.test.test_writers.test_pseudoxml",
            "contrib.src.docutils.test.test_writers.test_s5",
            "contrib.src.mongoengine.mongoengine",
            "contrib.src.mongoengine.mongoengine.base",
            "contrib.src.mongoengine.mongoengine.connection",
            "contrib.src.mongoengine.mongoengine.dereference",
            "contrib.src.mongoengine.mongoengine.django",
            "contrib.src.mongoengine.mongoengine.django.auth",
            "contrib.src.mongoengine.mongoengine.django.sessions",
            "contrib.src.mongoengine.mongoengine.django.shortcuts",
            "contrib.src.mongoengine.mongoengine.django.storage",
            "contrib.src.mongoengine.mongoengine.django.tests",
            "contrib.src.mongoengine.mongoengine.document",
            "contrib.src.mongoengine.mongoengine.fields",
            "contrib.src.mongoengine.mongoengine.queryset",
            "contrib.src.mongoengine.mongoengine.signals",
            "contrib.src.mongoengine.mongoengine.tests",
            "contrib.src.mongoengine.tests",
            "contrib.src.mongoengine.tests.dereference",
            "contrib.src.mongoengine.tests.django_tests",
            "contrib.src.mongoengine.tests.document",
            "contrib.src.mongoengine.tests.fields",
            "contrib.src.mongoengine.tests.fixtures",
            "contrib.src.mongoengine.tests.queryset",
            "contrib.src.mongoengine.tests.signals",
            "contrib.src.protobuf.google",
            "contrib.src.protobuf.google.protobuf",
            "contrib.src.protobuf.google.protobuf.descriptor",
            "contrib.src.protobuf.google.protobuf.descriptor_pb2",
            "contrib.src.protobuf.google.protobuf.internal",
            "contrib.src.protobuf.google.protobuf.internal.api_implementation",
            "contrib.src.protobuf.google.protobuf.internal.containers",
            "contrib.src.protobuf.google.protobuf.internal.cpp_message",
            "contrib.src.protobuf.google.protobuf.internal.decoder",
            "contrib.src.protobuf.google.protobuf.internal.descriptor_test",
            "contrib.src.protobuf.google.protobuf.internal.encoder",
            "contrib.src.protobuf.google.protobuf.internal.generator_test",
            "contrib.src.protobuf.google.protobuf.internal.message_listener",
            "contrib.src.protobuf.google.protobuf.internal.message_test",
            "contrib.src.protobuf.google.protobuf.internal.python_message",
            "contrib.src.protobuf.google.protobuf.internal.reflection_test",
            "contrib.src.protobuf.google.protobuf.internal.service_reflection_test",
            "contrib.src.protobuf.google.protobuf.internal.test_util",
            "contrib.src.protobuf.google.protobuf.internal.text_format_test",
            "contrib.src.protobuf.google.protobuf.internal.type_checkers",
            "contrib.src.protobuf.google.protobuf.internal.wire_format",
            "contrib.src.protobuf.google.protobuf.internal.wire_format_test",
            "contrib.src.protobuf.google.protobuf.message",
            "contrib.src.protobuf.google.protobuf.reflection",
            "contrib.src.protobuf.google.protobuf.service",
            "contrib.src.protobuf.google.protobuf.service_reflection",
            "contrib.src.protobuf.google.protobuf.text_format",
            "contrib.src.pyasn1.pyasn1",
            "contrib.src.pyasn1.pyasn1.codec",
            "contrib.src.pyasn1.pyasn1.codec.ber",
            "contrib.src.pyasn1.pyasn1.codec.ber.decoder",
            "contrib.src.pyasn1.pyasn1.codec.ber.encoder",
            "contrib.src.pyasn1.pyasn1.codec.ber.eoo",
            "contrib.src.pyasn1.pyasn1.codec.cer",
            "contrib.src.pyasn1.pyasn1.codec.cer.decoder",
            "contrib.src.pyasn1.pyasn1.codec.cer.encoder",
            "contrib.src.pyasn1.pyasn1.codec.der",
            "contrib.src.pyasn1.pyasn1.codec.der.decoder",
            "contrib.src.pyasn1.pyasn1.codec.der.encoder",
            "contrib.src.pyasn1.pyasn1.compat",
            "contrib.src.pyasn1.pyasn1.compat.octets",
            "contrib.src.pyasn1.pyasn1.error",
            "contrib.src.pyasn1.pyasn1.type",
            "contrib.src.pyasn1.pyasn1.type.base",
            "contrib.src.pyasn1.pyasn1.type.char",
            "contrib.src.pyasn1.pyasn1.type.constraint",
            "contrib.src.pyasn1.pyasn1.type.error",
            "contrib.src.pyasn1.pyasn1.type.namedtype",
            "contrib.src.pyasn1.pyasn1.type.namedval",
            "contrib.src.pyasn1.pyasn1.type.tag",
            "contrib.src.pyasn1.pyasn1.type.tagmap",
            "contrib.src.pyasn1.pyasn1.type.univ",
            "contrib.src.pyasn1.pyasn1.type.useful",
            "contrib.src.pyasn1.test",
            "contrib.src.pyasn1.test.codec",
            "contrib.src.pyasn1.test.codec.ber",
            "contrib.src.pyasn1.test.codec.ber.decoder",
            "contrib.src.pyasn1.test.codec.ber.encoder",
            "contrib.src.pyasn1.test.codec.ber.suite",
            "contrib.src.pyasn1.test.codec.cer",
            "contrib.src.pyasn1.test.codec.cer.decoder",
            "contrib.src.pyasn1.test.codec.cer.encoder",
            "contrib.src.pyasn1.test.codec.cer.suite",
            "contrib.src.pyasn1.test.codec.der",
            "contrib.src.pyasn1.test.codec.der.decoder",
            "contrib.src.pyasn1.test.codec.der.encoder",
            "contrib.src.pyasn1.test.codec.der.suite",
            "contrib.src.pyasn1.test.suite",
            "contrib.src.pyasn1.test.type",
            "contrib.src.pyasn1.test.type.constraint",
            "contrib.src.pyasn1.test.type.namedtype",
            "contrib.src.pyasn1.test.type.suite",
            "contrib.src.pyasn1.test.type.tag",
            "contrib.src.pyasn1.test.type.univ",
            "contrib.src.pysnmp.pysnmp",
            "contrib.src.pysnmp.pysnmp.cache",
            "contrib.src.pysnmp.pysnmp.carrier",
            "contrib.src.pysnmp.pysnmp.carrier.asynsock",
            "contrib.src.pysnmp.pysnmp.carrier.asynsock.base",
            "contrib.src.pysnmp.pysnmp.carrier.asynsock.dgram",
            "contrib.src.pysnmp.pysnmp.carrier.asynsock.dgram.base",
            "contrib.src.pysnmp.pysnmp.carrier.asynsock.dgram.udp",
            "contrib.src.pysnmp.pysnmp.carrier.asynsock.dgram.udp6",
            "contrib.src.pysnmp.pysnmp.carrier.asynsock.dgram.unix",
            "contrib.src.pysnmp.pysnmp.carrier.asynsock.dispatch",
            "contrib.src.pysnmp.pysnmp.carrier.base",
            "contrib.src.pysnmp.pysnmp.carrier.error",
            "contrib.src.pysnmp.pysnmp.carrier.twisted",
            "contrib.src.pysnmp.pysnmp.carrier.twisted.base",
            "contrib.src.pysnmp.pysnmp.carrier.twisted.dgram",
            "contrib.src.pysnmp.pysnmp.carrier.twisted.dgram.base",
            "contrib.src.pysnmp.pysnmp.carrier.twisted.dgram.udp",
            "contrib.src.pysnmp.pysnmp.carrier.twisted.dgram.unix",
            "contrib.src.pysnmp.pysnmp.carrier.twisted.dispatch",
            "contrib.src.pysnmp.pysnmp.debug",
            "contrib.src.pysnmp.pysnmp.entity",
            "contrib.src.pysnmp.pysnmp.entity.config",
            "contrib.src.pysnmp.pysnmp.entity.engine",
            "contrib.src.pysnmp.pysnmp.entity.rfc3413",
            "contrib.src.pysnmp.pysnmp.entity.rfc3413.cmdgen",
            "contrib.src.pysnmp.pysnmp.entity.rfc3413.cmdrsp",
            "contrib.src.pysnmp.pysnmp.entity.rfc3413.config",
            "contrib.src.pysnmp.pysnmp.entity.rfc3413.context",
            "contrib.src.pysnmp.pysnmp.entity.rfc3413.mibvar",
            "contrib.src.pysnmp.pysnmp.entity.rfc3413.ntforg",
            "contrib.src.pysnmp.pysnmp.entity.rfc3413.ntfrcv",
            "contrib.src.pysnmp.pysnmp.entity.rfc3413.oneliner",
            "contrib.src.pysnmp.pysnmp.entity.rfc3413.oneliner.cmdgen",
            "contrib.src.pysnmp.pysnmp.entity.rfc3413.oneliner.ntforg",
            "contrib.src.pysnmp.pysnmp.entity.rfc3413.twisted",
            "contrib.src.pysnmp.pysnmp.entity.rfc3413.twisted.cmdgen",
            "contrib.src.pysnmp.pysnmp.entity.rfc3413.twisted.ntforg",
            "contrib.src.pysnmp.pysnmp.error",
            "contrib.src.pysnmp.pysnmp.nextid",
            "contrib.src.pysnmp.pysnmp.proto",
            "contrib.src.pysnmp.pysnmp.proto.acmod",
            "contrib.src.pysnmp.pysnmp.proto.acmod.rfc3415",
            "contrib.src.pysnmp.pysnmp.proto.acmod.void",
            "contrib.src.pysnmp.pysnmp.proto.api",
            "contrib.src.pysnmp.pysnmp.proto.api.v1",
            "contrib.src.pysnmp.pysnmp.proto.api.v2c",
            "contrib.src.pysnmp.pysnmp.proto.api.verdec",
            "contrib.src.pysnmp.pysnmp.proto.cache",
            "contrib.src.pysnmp.pysnmp.proto.errind",
            "contrib.src.pysnmp.pysnmp.proto.error",
            "contrib.src.pysnmp.pysnmp.proto.mpmod",
            "contrib.src.pysnmp.pysnmp.proto.mpmod.base",
            "contrib.src.pysnmp.pysnmp.proto.mpmod.cache",
            "contrib.src.pysnmp.pysnmp.proto.mpmod.rfc2576",
            "contrib.src.pysnmp.pysnmp.proto.mpmod.rfc3412",
            "contrib.src.pysnmp.pysnmp.proto.proxy",
            "contrib.src.pysnmp.pysnmp.proto.proxy.rfc2576",
            "contrib.src.pysnmp.pysnmp.proto.rfc1155",
            "contrib.src.pysnmp.pysnmp.proto.rfc1157",
            "contrib.src.pysnmp.pysnmp.proto.rfc1902",
            "contrib.src.pysnmp.pysnmp.proto.rfc1905",
            "contrib.src.pysnmp.pysnmp.proto.rfc3411",
            "contrib.src.pysnmp.pysnmp.proto.rfc3412",
            "contrib.src.pysnmp.pysnmp.proto.secmod",
            "contrib.src.pysnmp.pysnmp.proto.secmod.base",
            "contrib.src.pysnmp.pysnmp.proto.secmod.cache",
            "contrib.src.pysnmp.pysnmp.proto.secmod.eso",
            "contrib.src.pysnmp.pysnmp.proto.secmod.eso.priv",
            "contrib.src.pysnmp.pysnmp.proto.secmod.eso.priv.aes192",
            "contrib.src.pysnmp.pysnmp.proto.secmod.eso.priv.aes256",
            "contrib.src.pysnmp.pysnmp.proto.secmod.eso.priv.des3",
            "contrib.src.pysnmp.pysnmp.proto.secmod.rfc2576",
            "contrib.src.pysnmp.pysnmp.proto.secmod.rfc3414",
            "contrib.src.pysnmp.pysnmp.proto.secmod.rfc3414.auth",
            "contrib.src.pysnmp.pysnmp.proto.secmod.rfc3414.auth.base",
            "contrib.src.pysnmp.pysnmp.proto.secmod.rfc3414.auth.hmacmd5",
            "contrib.src.pysnmp.pysnmp.proto.secmod.rfc3414.auth.hmacsha",
            "contrib.src.pysnmp.pysnmp.proto.secmod.rfc3414.auth.noauth",
            "contrib.src.pysnmp.pysnmp.proto.secmod.rfc3414.localkey",
            "contrib.src.pysnmp.pysnmp.proto.secmod.rfc3414.priv",
            "contrib.src.pysnmp.pysnmp.proto.secmod.rfc3414.priv.base",
            "contrib.src.pysnmp.pysnmp.proto.secmod.rfc3414.priv.des",
            "contrib.src.pysnmp.pysnmp.proto.secmod.rfc3414.priv.nopriv",
            "contrib.src.pysnmp.pysnmp.proto.secmod.rfc3414.service",
            "contrib.src.pysnmp.pysnmp.proto.secmod.rfc3826",
            "contrib.src.pysnmp.pysnmp.proto.secmod.rfc3826.priv",
            "contrib.src.pysnmp.pysnmp.proto.secmod.rfc3826.priv.aes",
            "contrib.src.pysnmp.pysnmp.smi",
            "contrib.src.pysnmp.pysnmp.smi.builder",
            "contrib.src.pysnmp.pysnmp.smi.error",
            "contrib.src.pysnmp.pysnmp.smi.exval",
            "contrib.src.pysnmp.pysnmp.smi.indices",
            "contrib.src.pysnmp.pysnmp.smi.instrum",
            "contrib.src.pysnmp.pysnmp.smi.mibs",
            "contrib.src.pysnmp.pysnmp.smi.mibs.ASN1",
            "contrib.src.pysnmp.pysnmp.smi.mibs.PYSNMP-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.PYSNMP-USM-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.RFC1155-SMI",
            "contrib.src.pysnmp.pysnmp.smi.mibs.RFC1213-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.SNMP-COMMUNITY-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.SNMP-FRAMEWORK-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.SNMP-MPD-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.SNMP-NOTIFICATION-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.SNMP-PROXY-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.SNMP-TARGET-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.SNMP-USER-BASED-SM-3DES-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.SNMP-USER-BASED-SM-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.SNMP-USM-AES-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.SNMP-VIEW-BASED-ACM-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.SNMPv2-CONF",
            "contrib.src.pysnmp.pysnmp.smi.mibs.SNMPv2-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.SNMPv2-SMI",
            "contrib.src.pysnmp.pysnmp.smi.mibs.SNMPv2-TC",
            "contrib.src.pysnmp.pysnmp.smi.mibs.SNMPv2-TM",
            "contrib.src.pysnmp.pysnmp.smi.mibs.TRANSPORT-ADDRESS-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.instances",
            "contrib.src.pysnmp.pysnmp.smi.mibs.instances.__PYSNMP-USM-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.instances.__SNMP-FRAMEWORK-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.instances.__SNMP-MPD-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.instances.__SNMP-TARGET-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.instances.__SNMP-USER-BASED-SM-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.instances.__SNMP-VIEW-BASED-ACM-MIB",
            "contrib.src.pysnmp.pysnmp.smi.mibs.instances.__SNMPv2-MIB",
            "contrib.src.pysnmp.pysnmp.smi.view",
            "contrib.src.python-creole.creole",
            "contrib.src.python-creole.creole.creole2html",
            "contrib.src.python-creole.creole.creole_parser",
            "contrib.src.python-creole.creole.default_macros",
            "contrib.src.python-creole.creole.html2creole",
            "contrib.src.python-creole.tests",
            "contrib.src.python-creole.tests.run_all_tests",
            "contrib.src.python-creole.tests.test_creole2html",
            "contrib.src.python-creole.tests.test_cross_compare",
            "contrib.src.python-creole.tests.test_html2creole",
            "contrib.src.python-creole.tests.utils",
            "contrib.src.python-creole.tests.utils.base_unittest",
            "contrib.src.python-creole.tests.utils.utils",
            "contrib.src.south.south",
            "contrib.src.south.south.creator",
            "contrib.src.south.south.creator.actions",
            "contrib.src.south.south.creator.changes",
            "contrib.src.south.south.creator.freezer",
            "contrib.src.south.south.db",
            "contrib.src.south.south.db.generic",
            "contrib.src.south.south.db.mysql",
            "contrib.src.south.south.db.oracle",
            "contrib.src.south.south.db.postgresql_psycopg2",
            "contrib.src.south.south.db.sql_server",
            "contrib.src.south.south.db.sql_server.pyodbc",
            "contrib.src.south.south.db.sqlite3",
            "contrib.src.south.south.exceptions",
            "contrib.src.south.south.hacks",
            "contrib.src.south.south.hacks.django_1_0",
            "contrib.src.south.south.introspection_plugins",
            "contrib.src.south.south.introspection_plugins.annoying_autoonetoone",
            "contrib.src.south.south.introspection_plugins.django_objectpermissions",
            "contrib.src.south.south.introspection_plugins.django_tagging",
            "contrib.src.south.south.introspection_plugins.django_taggit",
            "contrib.src.south.south.introspection_plugins.django_timezones",
            "contrib.src.south.south.introspection_plugins.geodjango",
            "contrib.src.south.south.logger",
            "contrib.src.south.south.management",
            "contrib.src.south.south.management.commands",
            "contrib.src.south.south.management.commands.convert_to_south",
            "contrib.src.south.south.management.commands.datamigration",
            "contrib.src.south.south.management.commands.graphmigrations",
            "contrib.src.south.south.management.commands.migrate",
            "contrib.src.south.south.management.commands.schemamigration",
            "contrib.src.south.south.management.commands.startmigration",
            "contrib.src.south.south.management.commands.syncdb",
            "contrib.src.south.south.management.commands.test",
            "contrib.src.south.south.management.commands.testserver",
            "contrib.src.south.south.migration",
            "contrib.src.south.south.migration.base",
            "contrib.src.south.south.migration.migrators",
            "contrib.src.south.south.migration.utils",
            "contrib.src.south.south.models",
            "contrib.src.south.south.modelsinspector",
            "contrib.src.south.south.orm",
            "contrib.src.south.south.signals",
            "contrib.src.south.south.tests",
            "contrib.src.south.south.tests.autodetection",
            "contrib.src.south.south.tests.brokenapp",
            "contrib.src.south.south.tests.brokenapp.migrations",
            "contrib.src.south.south.tests.brokenapp.migrations.0001_depends_on_unmigrated",
            "contrib.src.south.south.tests.brokenapp.migrations.0002_depends_on_unknown",
            "contrib.src.south.south.tests.brokenapp.migrations.0003_depends_on_higher",
            "contrib.src.south.south.tests.brokenapp.migrations.0004_higher",
            "contrib.src.south.south.tests.brokenapp.models",
            "contrib.src.south.south.tests.circular_a",
            "contrib.src.south.south.tests.circular_a.migrations",
            "contrib.src.south.south.tests.circular_a.migrations.0001_first",
            "contrib.src.south.south.tests.circular_a.models",
            "contrib.src.south.south.tests.circular_b",
            "contrib.src.south.south.tests.circular_b.migrations",
            "contrib.src.south.south.tests.circular_b.migrations.0001_first",
            "contrib.src.south.south.tests.circular_b.models",
            "contrib.src.south.south.tests.db",
            "contrib.src.south.south.tests.deps_a",
            "contrib.src.south.south.tests.deps_a.migrations",
            "contrib.src.south.south.tests.deps_a.migrations.0001_a",
            "contrib.src.south.south.tests.deps_a.migrations.0002_a",
            "contrib.src.south.south.tests.deps_a.migrations.0003_a",
            "contrib.src.south.south.tests.deps_a.migrations.0004_a",
            "contrib.src.south.south.tests.deps_a.migrations.0005_a",
            "contrib.src.south.south.tests.deps_a.models",
            "contrib.src.south.south.tests.deps_b",
            "contrib.src.south.south.tests.deps_b.migrations",
            "contrib.src.south.south.tests.deps_b.migrations.0001_b",
            "contrib.src.south.south.tests.deps_b.migrations.0002_b",
            "contrib.src.south.south.tests.deps_b.migrations.0003_b",
            "contrib.src.south.south.tests.deps_b.migrations.0004_b",
            "contrib.src.south.south.tests.deps_b.migrations.0005_b",
            "contrib.src.south.south.tests.deps_b.models",
            "contrib.src.south.south.tests.deps_c",
            "contrib.src.south.south.tests.deps_c.migrations",
            "contrib.src.south.south.tests.deps_c.migrations.0001_c",
            "contrib.src.south.south.tests.deps_c.migrations.0002_c",
            "contrib.src.south.south.tests.deps_c.migrations.0003_c",
            "contrib.src.south.south.tests.deps_c.migrations.0004_c",
            "contrib.src.south.south.tests.deps_c.migrations.0005_c",
            "contrib.src.south.south.tests.deps_c.models",
            "contrib.src.south.south.tests.emptyapp",
            "contrib.src.south.south.tests.emptyapp.migrations",
            "contrib.src.south.south.tests.emptyapp.models",
            "contrib.src.south.south.tests.fakeapp",
            "contrib.src.south.south.tests.fakeapp.migrations",
            "contrib.src.south.south.tests.fakeapp.migrations.0001_spam",
            "contrib.src.south.south.tests.fakeapp.migrations.0002_eggs",
            "contrib.src.south.south.tests.fakeapp.migrations.0003_alter_spam",
            "contrib.src.south.south.tests.fakeapp.models",
            "contrib.src.south.south.tests.inspector",
            "contrib.src.south.south.tests.logger",
            "contrib.src.south.south.tests.logic",
            "contrib.src.south.south.tests.otherfakeapp",
            "contrib.src.south.south.tests.otherfakeapp.migrations",
            "contrib.src.south.south.tests.otherfakeapp.migrations.0001_first",
            "contrib.src.south.south.tests.otherfakeapp.migrations.0002_second",
            "contrib.src.south.south.tests.otherfakeapp.migrations.0003_third",
            "contrib.src.south.south.tests.otherfakeapp.models",
            "contrib.src.south.south.utils",
            "contrib.src.south.south.v2",
            "contrib.src.tornado.tornado",
            "contrib.src.tornado.tornado.auth",
            "contrib.src.tornado.tornado.autoreload",
            "contrib.src.tornado.tornado.curl_httpclient",
            "contrib.src.tornado.tornado.database",
            "contrib.src.tornado.tornado.escape",
            "contrib.src.tornado.tornado.gen",
            "contrib.src.tornado.tornado.httpclient",
            "contrib.src.tornado.tornado.httpserver",
            "contrib.src.tornado.tornado.httputil",
            "contrib.src.tornado.tornado.ioloop",
            "contrib.src.tornado.tornado.iostream",
            "contrib.src.tornado.tornado.locale",
            "contrib.src.tornado.tornado.netutil",
            "contrib.src.tornado.tornado.options",
            "contrib.src.tornado.tornado.platform",
            "contrib.src.tornado.tornado.platform.auto",
            "contrib.src.tornado.tornado.platform.interface",
            "contrib.src.tornado.tornado.platform.posix",
            "contrib.src.tornado.tornado.platform.twisted",
            "contrib.src.tornado.tornado.platform.windows",
            "contrib.src.tornado.tornado.process",
            "contrib.src.tornado.tornado.simple_httpclient",
            "contrib.src.tornado.tornado.stack_context",
            "contrib.src.tornado.tornado.template",
            "contrib.src.tornado.tornado.test",
            "contrib.src.tornado.tornado.test.auth_test",
            "contrib.src.tornado.tornado.test.curl_httpclient_test",
            "contrib.src.tornado.tornado.test.escape_test",
            "contrib.src.tornado.tornado.test.gen_test",
            "contrib.src.tornado.tornado.test.httpclient_test",
            "contrib.src.tornado.tornado.test.httpserver_test",
            "contrib.src.tornado.tornado.test.httputil_test",
            "contrib.src.tornado.tornado.test.import_test",
            "contrib.src.tornado.tornado.test.ioloop_test",
            "contrib.src.tornado.tornado.test.iostream_test",
            "contrib.src.tornado.tornado.test.process_test",
            "contrib.src.tornado.tornado.test.run_pyversion_tests",
            "contrib.src.tornado.tornado.test.runtests",
            "contrib.src.tornado.tornado.test.simple_httpclient_test",
            "contrib.src.tornado.tornado.test.stack_context_test",
            "contrib.src.tornado.tornado.test.template_test",
            "contrib.src.tornado.tornado.test.testing_test",
            "contrib.src.tornado.tornado.test.twisted_test",
            "contrib.src.tornado.tornado.test.web_test",
            "contrib.src.tornado.tornado.test.wsgi_test",
            "contrib.src.tornado.tornado.testing",
            "contrib.src.tornado.tornado.util",
            "contrib.src.tornado.tornado.web",
            "contrib.src.tornado.tornado.websocket",
            "contrib.src.tornado.tornado.wsgi",
            "dns",
            "dns.apps",
            "dns.apps.dnsserver",
            "dns.apps.dnsserver.tests",
            "dns.apps.dnsserver.tests.test",
            "dns.apps.dnsserver.views",
            "dns.apps.dnszone",
            "dns.apps.dnszone.tests",
            "dns.apps.dnszone.tests.test",
            "dns.apps.dnszone.views",
            "dns.apps.dnszoneprofile",
            "dns.apps.dnszoneprofile.tests",
            "dns.apps.dnszoneprofile.tests.test",
            "dns.apps.dnszoneprofile.views",
            "dns.apps.reportduplicatedfqdns",
            "dns.apps.reportduplicatedfqdns.tests",
            "dns.apps.reportduplicatedfqdns.tests.test",
            "dns.apps.reportduplicatedfqdns.views",
            "dns.apps.reportexpiringdomains",
            "dns.apps.reportexpiringdomains.tests",
            "dns.apps.reportexpiringdomains.tests.test",
            "dns.apps.reportexpiringdomains.views",
            "dns.apps.reportmissedp2p",
            "dns.apps.reportmissedp2p.tests",
            "dns.apps.reportmissedp2p.tests.test",
            "dns.apps.reportmissedp2p.views",
            "dns.apps.reportmissedreverse",
            "dns.apps.reportmissedreverse.tests",
            "dns.apps.reportmissedreverse.tests.test",
            "dns.apps.reportmissedreverse.views",
            "dns.apps.reportnszonesummary",
            "dns.apps.reportnszonesummary.tests",
            "dns.apps.reportnszonesummary.tests.test",
            "dns.apps.reportnszonesummary.views",
            "dns.apps.reportsupportedns",
            "dns.apps.reportsupportedns.tests",
            "dns.apps.reportsupportedns.tests.test",
            "dns.apps.reportsupportedns.views",
            "dns.apps.rrtype",
            "dns.apps.rrtype.tests",
            "dns.apps.rrtype.tests.test",
            "dns.apps.rrtype.views",
            "dns.generators",
            "dns.generators.bindv9",
            "dns.migrations",
            "dns.migrations.0001_initial",
            "dns.migrations.0002_dnsrecordtype_is_visible",
            "dns.migrations.0003_dnszonerecordtype_initial_data",
            "dns.migrations.0004_register_dns",
            "dns.migrations.0005_dns_server_and_type",
            "dns.migrations.0006_type_bindv9",
            "dns.migrations.0007_migrate_ns_list",
            "dns.migrations.0008_dnsserver_provisioning",
            "dns.migrations.0009_unregister_dns",
            "dns.migrations.0010_dns_server_generator_name",
            "dns.migrations.0011_drop_dns_server_type",
            "dns.migrations.0012_dnszoneprofile_masters_and_slaves",
            "dns.migrations.0013_remove_dnszoneprofile_zone_transfer_acl",
            "dns.migrations.0014_dnsserver_ip",
            "dns.migrations.0015_dnszonerecordtype_validate",
            "dns.migrations.0016_autozones_path",
            "dns.migrations.0017_dnszone_paid_till",
            "dns.migrations.0018_domain_expired",
            "dns.migrations.0019_dnszoneprofile_description",
            "dns.migrations.0020_tags",
            "dns.migrations.0021_extend_dnszone_name",
            "dns.migrations.0022_notifications",
            "dns.migrations.0023_rename_rr_type_is_visible",
            "dns.models",
            "dns.periodics",
            "dns.periodics.check_domain_expiration",
            "dns.periodics.update_domain_expiration",
            "dns.tests",
            "dns.tests.dnszonerecordtype",
            "dns.tests.models",
            "fm",
            "fm.apps",
            "fm.apps.alarm",
            "fm.apps.alarm.tests",
            "fm.apps.alarm.tests.test",
            "fm.apps.alarm.views",
            "fm.apps.alarmclass",
            "fm.apps.alarmclass.tests",
            "fm.apps.alarmclass.tests.test",
            "fm.apps.alarmclass.views",
            "fm.apps.alarmseverity",
            "fm.apps.alarmseverity.tests",
            "fm.apps.alarmseverity.tests.test",
            "fm.apps.alarmseverity.views",
            "fm.apps.alarmtrigger",
            "fm.apps.alarmtrigger.tests",
            "fm.apps.alarmtrigger.tests.test",
            "fm.apps.alarmtrigger.views",
            "fm.apps.classificationrule",
            "fm.apps.classificationrule.tests",
            "fm.apps.classificationrule.tests.test",
            "fm.apps.classificationrule.views",
            "fm.apps.event",
            "fm.apps.event.tests",
            "fm.apps.event.tests.test",
            "fm.apps.event.views",
            "fm.apps.eventclass",
            "fm.apps.eventclass.tests",
            "fm.apps.eventclass.tests.test",
            "fm.apps.eventclass.views",
            "fm.apps.eventtrigger",
            "fm.apps.eventtrigger.tests",
            "fm.apps.eventtrigger.tests.test",
            "fm.apps.eventtrigger.views",
            "fm.apps.ignoreeventrules",
            "fm.apps.ignoreeventrules.tests",
            "fm.apps.ignoreeventrules.tests.test",
            "fm.apps.ignoreeventrules.views",
            "fm.apps.mib",
            "fm.apps.mib.tests",
            "fm.apps.mib.tests.test",
            "fm.apps.mib.views",
            "fm.apps.mibpreference",
            "fm.apps.mibpreference.tests",
            "fm.apps.mibpreference.tests.test",
            "fm.apps.mibpreference.views",
            "fm.apps.oidalias",
            "fm.apps.oidalias.tests",
            "fm.apps.oidalias.tests.test",
            "fm.apps.oidalias.views",
            "fm.apps.reportclassificationquality",
            "fm.apps.reportclassificationquality.tests",
            "fm.apps.reportclassificationquality.tests.test",
            "fm.apps.reportclassificationquality.views",
            "fm.apps.reportclassificationrule",
            "fm.apps.reportclassificationrule.tests",
            "fm.apps.reportclassificationrule.tests.test",
            "fm.apps.reportclassificationrule.views",
            "fm.apps.reporteventsummary",
            "fm.apps.reporteventsummary.tests",
            "fm.apps.reporteventsummary.tests.test",
            "fm.apps.reporteventsummary.views",
            "fm.apps.reporthierarchy",
            "fm.apps.reporthierarchy.tests",
            "fm.apps.reporthierarchy.tests.test",
            "fm.apps.reporthierarchy.views",
            "fm.apps.reportlocalrules",
            "fm.apps.reportlocalrules.tests",
            "fm.apps.reportlocalrules.tests.test",
            "fm.apps.reportlocalrules.views",
            "fm.apps.reportmibs",
            "fm.apps.reportmibs.tests",
            "fm.apps.reportmibs.tests.test",
            "fm.apps.reportmibs.views",
            "fm.apps.reportmissedmibs",
            "fm.apps.reportmissedmibs.tests",
            "fm.apps.reportmissedmibs.tests.test",
            "fm.apps.reportmissedmibs.views",
            "fm.apps.reportoverlappedoids",
            "fm.apps.reportoverlappedoids.tests",
            "fm.apps.reportoverlappedoids.tests.test",
            "fm.apps.reportoverlappedoids.views",
            "fm.apps.reportrulesbyprofile",
            "fm.apps.reportrulesbyprofile.tests",
            "fm.apps.reportrulesbyprofile.tests.test",
            "fm.apps.reportrulesbyprofile.views",
            "fm.apps.reportrulesetsummary",
            "fm.apps.reportrulesetsummary.tests",
            "fm.apps.reportrulesetsummary.tests.test",
            "fm.apps.reportrulesetsummary.views",
            "fm.apps.reportunclassifiedoids",
            "fm.apps.reportunclassifiedoids.tests",
            "fm.apps.reportunclassifiedoids.tests.test",
            "fm.apps.reportunclassifiedoids.views",
            "fm.classifier",
            "fm.correlator",
            "fm.management",
            "fm.management.commands",
            "fm.management.commands.compile-mib",
            "fm.management.commands.events",
            "fm.management.commands.import-mib",
            "fm.management.commands.inject-event",
            "fm.management.commands.lookup-mib",
            "fm.management.commands.sync-mibs",
            "fm.migrations",
            "fm.migrations.0001_initial",
            "fm.migrations.0002_event",
            "fm.migrations.0003_event_data",
            "fm.migrations.0004_priority_color",
            "fm.migrations.0005_default_colors",
            "fm.migrations.0006_rule_drop_event",
            "fm.migrations.0007_event_repeat",
            "fm.migrations.0008_enlarge_event_data_key",
            "fm.migrations.0009_mib_dependency",
            "fm.migrations.0010_event_class_trigger",
            "fm.migrations.0011_is_builtin",
            "fm.migrations.0012_update_event_classification",
            "fm.migrations.0013_event_lifecycle",
            "fm.migrations.0014_update_event_classification",
            "fm.migrations.0015_set_event_status",
            "fm.migrations.0016_event_correlation_rule",
            "fm.migrations.0017_event_log",
            "fm.migrations.0018_update_event_classification",
            "fm.migrations.0019_eventclassificationrule_action",
            "fm.migrations.0020_drop_eventclassificationrule_drop_event",
            "fm.migrations.0021_event_post_processing",
            "fm.migrations.0022_drop_update_event_classification",
            "fm.migrations.0023_eventclassificationre_expression",
            "fm.migrations.0024_event_correlation_rule",
            "fm.migrations.0025_eventarchivationrule",
            "fm.migrations.0026_postprocessingrule_params",
            "fm.migrations.0027_sp_delete_event",
            "fm.migrations.0028_change_eventarchivationrule",
            "fm.migrations.0029_sp_close_event",
            "fm.migrations.0030_event_indexes",
            "fm.migrations.0031_rule",
            "fm.migrations.0032_ingnore_event_rules",
            "fm.migrations.0033_classify_event",
            "fm.migrations.0034_severity_styles",
            "fm.migrations.0035_triggers",
            "fm.migrations.0036_refresh_config",
            "fm.migrations.0037_remove_old_tables",
            "fm.migrations.0038_alarm_reference",
            "fm.migrations.0039_event_start_repeat",
            "fm.models",
            "fm.periodics",
            "fm.periodics.archive",
            "fm.periodics.ping_check",
            "fm.tests",
            "fm.tests.classification_rule",
            "gis",
            "gis.apps",
            "gis.apps.area",
            "gis.apps.area.tests",
            "gis.apps.area.tests.test",
            "gis.apps.area.views",
            "gis.apps.map",
            "gis.apps.map.tests",
            "gis.apps.map.tests.test",
            "gis.apps.map.views",
            "gis.apps.overlay",
            "gis.apps.overlay.tests",
            "gis.apps.overlay.tests.test",
            "gis.apps.overlay.views",
            "gis.apps.reporttcsummary",
            "gis.apps.reporttcsummary.tests",
            "gis.apps.reporttcsummary.tests.test",
            "gis.apps.reporttcsummary.views",
            "gis.apps.srs",
            "gis.apps.srs.tests",
            "gis.apps.srs.views",
            "gis.apps.tms",
            "gis.apps.tms.tests",
            "gis.apps.tms.tests.test",
            "gis.apps.tms.views",
            "gis.geo",
            "gis.management",
            "gis.management.commands",
            "gis.management.commands.import-osm-data",
            "gis.management.commands.init-mapnik-map",
            "gis.management.commands.update-tilecache",
            "gis.mapxml",
            "gis.migrations",
            "gis.migrations.0001_check_postgis",
            "gis.migrations.0002_world_area",
            "gis.models",
            "gis.overlays",
            "gis.overlays.areas",
            "gis.overlays.base",
            "gis.overlays.points",
            "gis.tests",
            "gis.tests.geo",
            "gis.tests.srs",
            "gis.tile",
            "gis.utils",
            "inv",
            "inv.apps",
            "inv.apps.interface",
            "inv.apps.interface.tests",
            "inv.apps.interface.tests.test",
            "inv.apps.interface.views",
            "inv.apps.model",
            "inv.apps.model.tests",
            "inv.apps.model.tests.test",
            "inv.apps.model.views",
            "inv.apps.socket",
            "inv.apps.socket.tests",
            "inv.apps.socket.tests.test",
            "inv.apps.socket.views",
            "inv.apps.vendor",
            "inv.apps.vendor.tests",
            "inv.apps.vendor.tests.test",
            "inv.apps.vendor.views",
            "inv.datasources",
            "inv.discovery",
            "inv.discovery.daemon",
            "inv.management",
            "inv.management.commands",
            "inv.migrations",
            "inv.migrations.0001_subinterface_managed_object",
            "inv.models",
            "ip",
            "ip.apps",
            "ip.apps.addressrange",
            "ip.apps.addressrange.tests",
            "ip.apps.addressrange.tests.test",
            "ip.apps.addressrange.views",
            "ip.apps.ipam",
            "ip.apps.ipam.tests",
            "ip.apps.ipam.tests.test",
            "ip.apps.ipam.views",
            "ip.apps.prefixaccess",
            "ip.apps.prefixaccess.tests",
            "ip.apps.prefixaccess.tests.test",
            "ip.apps.prefixaccess.views",
            "ip.apps.reportallocated",
            "ip.apps.reportallocated.tests",
            "ip.apps.reportallocated.tests.test",
            "ip.apps.reportallocated.views",
            "ip.apps.reportexpanded",
            "ip.apps.reportexpanded.tests",
            "ip.apps.reportexpanded.tests.test",
            "ip.apps.reportexpanded.views",
            "ip.apps.reportfree",
            "ip.apps.reportfree.tests",
            "ip.apps.reportfree.tests.test",
            "ip.apps.reportfree.views",
            "ip.apps.reportipamsummary",
            "ip.apps.reportipamsummary.tests",
            "ip.apps.reportipamsummary.tests.test",
            "ip.apps.reportipamsummary.views",
            "ip.apps.reportipusage",
            "ip.apps.reportipusage.tests",
            "ip.apps.reportipusage.tests.test",
            "ip.apps.reportipusage.views",
            "ip.apps.reportsummary",
            "ip.apps.reportsummary.tests",
            "ip.apps.reportsummary.tests.test",
            "ip.apps.reportsummary.views",
            "ip.apps.routeimport",
            "ip.apps.routeimport.tests",
            "ip.apps.routeimport.tests.test",
            "ip.apps.routeimport.views",
            "ip.apps.tools",
            "ip.apps.tools.tests",
            "ip.apps.tools.tests.tools",
            "ip.apps.tools.views",
            "ip.apps.vrf",
            "ip.apps.vrf.tests",
            "ip.apps.vrf.tests.test",
            "ip.apps.vrf.views",
            "ip.apps.vrfgroup",
            "ip.apps.vrfgroup.tests",
            "ip.apps.vrfgroup.tests.test",
            "ip.apps.vrfgroup.views",
            "ip.migrations",
            "ip.migrations.0001_initial",
            "ip.migrations.0002_plpgsql_triggers_and_functions",
            "ip.migrations.0003_nocidr",
            "ip.migrations.0004_default_vrf",
            "ip.migrations.0005_free_ip",
            "ip.migrations.0006_vrf_description",
            "ip.migrations.0007_ipv4addressrange",
            "ip.migrations.0008_ipv4block_vc",
            "ip.migrations.0009_no_last_modified",
            "ip.migrations.0010_tags",
            "ip.migrations.0011_bookmarks",
            "ip.migrations.0012_address_mac",
            "ip.migrations.0013_ipv6_schema",
            "ip.migrations.0014_ipv6_data",
            "ip.migrations.0015_ipv6_cleanup",
            "ip.migrations.0016_resource_state",
            "ip.migrations.0017_default_state",
            "ip.migrations.0018_state_not_null",
            "ip.migrations.0019_drop_vrf_is_active",
            "ip.models",
            "ip.periodics",
            "ip.periodics.sync_macs",
            "ip.tests",
            "kb",
            "kb.apps",
            "kb.apps.globalbookmark",
            "kb.apps.globalbookmark.tests",
            "kb.apps.globalbookmark.tests.test",
            "kb.apps.globalbookmark.views",
            "kb.apps.index",
            "kb.apps.index.tests",
            "kb.apps.index.tests.test",
            "kb.apps.index.views",
            "kb.apps.kbentry",
            "kb.apps.kbentry.tests",
            "kb.apps.kbentry.tests.test",
            "kb.apps.kbentry.views",
            "kb.apps.kbentrytemplate",
            "kb.apps.kbentrytemplate.tests",
            "kb.apps.kbentrytemplate.tests.test",
            "kb.apps.kbentrytemplate.views",
            "kb.apps.userbookmark",
            "kb.apps.userbookmark.tests",
            "kb.apps.userbookmark.tests.test",
            "kb.apps.userbookmark.views",
            "kb.apps.view",
            "kb.apps.view.tests",
            "kb.apps.view.tests.test",
            "kb.apps.view.views",
            "kb.management",
            "kb.management.commands",
            "kb.management.commands.convert-moin",
            "kb.migrations",
            "kb.migrations.0001_initial",
            "kb.migrations.0002_kbentrypreviewlog",
            "kb.migrations.0003_kb_entry_attachment",
            "kb.migrations.0004_bookmarks",
            "kb.migrations.0005_kb_entry_template",
            "kb.migrations.0006_tags",
            "kb.migrations.0007_no_category",
            "kb.models",
            "kb.parsers",
            "kb.parsers.creole_parser",
            "kb.parsers.csv_parser",
            "kb.parsers.macros",
            "kb.parsers.macros.format",
            "kb.parsers.macros.now",
            "kb.parsers.macros.rack",
            "kb.parsers.macros.search",
            "kb.parsers.mediawiki_parser",
            "kb.parsers.plain_parser",
            "lib",
            "lib.admin_actions",
            "lib.app",
            "lib.app.access",
            "lib.app.application",
            "lib.app.extapplication",
            "lib.app.extdocapplication",
            "lib.app.extmodelapplication",
            "lib.app.modelapplication",
            "lib.app.reportapplication",
            "lib.app.saapplication",
            "lib.app.simplereport",
            "lib.app.site",
            "lib.app.treeapplication",
            "lib.cache",
            "lib.colors",
            "lib.convert",
            "lib.crypto",
            "lib.csvutils",
            "lib.daemon",
            "lib.database_storage",
            "lib.datasource",
            "lib.dateutils",
            "lib.db",
            "lib.debug",
            "lib.ecma48",
            "lib.escape",
            "lib.fields",
            "lib.fileutils",
            "lib.forms",
            "lib.fsm",
            "lib.gpg",
            "lib.highlight",
            "lib.ip",
            "lib.middleware",
            "lib.nbsocket",
            "lib.nbsocket.acceptedtcpsocket",
            "lib.nbsocket.acceptedtcpsslsocket",
            "lib.nbsocket.basesocket",
            "lib.nbsocket.connectedtcpsocket",
            "lib.nbsocket.connectedtcpsslsocket",
            "lib.nbsocket.exceptions",
            "lib.nbsocket.filewrapper",
            "lib.nbsocket.listentcpsocket",
            "lib.nbsocket.listenudpsocket",
            "lib.nbsocket.popen",
            "lib.nbsocket.protocols",
            "lib.nbsocket.protocols.base",
            "lib.nbsocket.protocols.line",
            "lib.nbsocket.protocols.telnet",
            "lib.nbsocket.ptysocket",
            "lib.nbsocket.socketfactory",
            "lib.nbsocket.tcpsocket",
            "lib.nbsocket.udpsocket",
            "lib.nosql",
            "lib.periodic",
            "lib.pmhash",
            "lib.pyquote",
            "lib.registry",
            "lib.rpsl",
            "lib.search",
            "lib.serialize",
            "lib.snmputils",
            "lib.sysutils",
            "lib.test",
            "lib.test.activatorstub",
            "lib.test.scripttestcase",
            "lib.test_runner",
            "lib.tests",
            "lib.tests.dateutils",
            "lib.tests.db",
            "lib.tests.fsm",
            "lib.tests.ip",
            "lib.tests.line_protocol",
            "lib.tests.nbsocket",
            "lib.tests.sysutils",
            "lib.tests.telnet_protocol",
            "lib.tests.version",
            "lib.text",
            "lib.threadpool",
            "lib.timepattern",
            "lib.tt",
            "lib.url",
            "lib.validators",
            "lib.version",
            "lib.widgets",
            "main",
            "main.apps",
            "main.apps.audittrail",
            "main.apps.audittrail.tests",
            "main.apps.audittrail.tests.test",
            "main.apps.audittrail.views",
            "main.apps.calculator",
            "main.apps.calculator.calculators",
            "main.apps.calculator.calculators.cir2cbr",
            "main.apps.calculator.calculators.dbm_to_mw",
            "main.apps.calculator.calculators.multicast",
            "main.apps.calculator.tests",
            "main.apps.calculator.tests.test",
            "main.apps.calculator.views",
            "main.apps.checkpoint",
            "main.apps.checkpoint.tests",
            "main.apps.checkpoint.tests.test",
            "main.apps.checkpoint.views",
            "main.apps.config",
            "main.apps.config.tests",
            "main.apps.config.tests.test",
            "main.apps.config.views",
            "main.apps.csv",
            "main.apps.csv.tests",
            "main.apps.csv.tests.test",
            "main.apps.csv.views",
            "main.apps.dbtrigger",
            "main.apps.dbtrigger.tests",
            "main.apps.dbtrigger.tests.test",
            "main.apps.dbtrigger.views",
            "main.apps.desktop",
            "main.apps.desktop.tests",
            "main.apps.desktop.tests.test",
            "main.apps.desktop.views",
            "main.apps.group",
            "main.apps.group.tests",
            "main.apps.group.tests.test",
            "main.apps.group.views",
            "main.apps.language",
            "main.apps.language.tests",
            "main.apps.language.tests.test",
            "main.apps.language.views",
            "main.apps.message",
            "main.apps.message.tests",
            "main.apps.message.tests.test",
            "main.apps.message.views",
            "main.apps.mimetype",
            "main.apps.mimetype.tests",
            "main.apps.mimetype.tests.test",
            "main.apps.mimetype.views",
            "main.apps.notificationgroup",
            "main.apps.notificationgroup.tests",
            "main.apps.notificationgroup.tests.test",
            "main.apps.notificationgroup.views",
            "main.apps.pendingnotifications",
            "main.apps.pendingnotifications.tests",
            "main.apps.pendingnotifications.tests.test",
            "main.apps.pendingnotifications.views",
            "main.apps.prefixtable",
            "main.apps.prefixtable.tests",
            "main.apps.prefixtable.tests.test",
            "main.apps.prefixtable.views",
            "main.apps.pyrule",
            "main.apps.pyrule.tests",
            "main.apps.pyrule.tests.test",
            "main.apps.pyrule.views",
            "main.apps.ref",
            "main.apps.ref.tests",
            "main.apps.ref.tests.test",
            "main.apps.ref.views",
            "main.apps.refbook",
            "main.apps.refbook.tests",
            "main.apps.refbook.tests.test",
            "main.apps.refbook.views",
            "main.apps.refbookadmin",
            "main.apps.refbookadmin.tests",
            "main.apps.refbookadmin.tests.test",
            "main.apps.refbookadmin.views",
            "main.apps.reportbackups",
            "main.apps.reportbackups.tests",
            "main.apps.reportbackups.tests.test",
            "main.apps.reportbackups.views",
            "main.apps.reportdbsummary",
            "main.apps.reportdbsummary.tests",
            "main.apps.reportdbsummary.tests.test",
            "main.apps.reportdbsummary.views",
            "main.apps.reportloc",
            "main.apps.reportloc.tests",
            "main.apps.reportloc.tests.test",
            "main.apps.reportloc.views",
            "main.apps.reportsystemversion",
            "main.apps.reportsystemversion.tests",
            "main.apps.reportsystemversion.tests.test",
            "main.apps.reportsystemversion.views",
            "main.apps.reporttaggedmodels",
            "main.apps.reporttaggedmodels.tests",
            "main.apps.reporttaggedmodels.tests.test",
            "main.apps.reporttaggedmodels.views",
            "main.apps.resourcestate",
            "main.apps.resourcestate.tests",
            "main.apps.resourcestate.tests.test",
            "main.apps.resourcestate.views",
            "main.apps.schedule",
            "main.apps.schedule.tests",
            "main.apps.schedule.tests.test",
            "main.apps.schedule.views",
            "main.apps.search",
            "main.apps.search.tests",
            "main.apps.search.tests.test",
            "main.apps.search.views",
            "main.apps.shard",
            "main.apps.shard.tests",
            "main.apps.shard.tests.test",
            "main.apps.shard.views",
            "main.apps.style",
            "main.apps.style.tests",
            "main.apps.style.tests.test",
            "main.apps.style.views",
            "main.apps.systemnotification",
            "main.apps.systemnotification.tests",
            "main.apps.systemnotification.tests.test",
            "main.apps.systemnotification.views",
            "main.apps.systemtemplate",
            "main.apps.systemtemplate.tests",
            "main.apps.systemtemplate.tests.test",
            "main.apps.systemtemplate.views",
            "main.apps.tag",
            "main.apps.tag.tests",
            "main.apps.tag.tests.test",
            "main.apps.tag.views",
            "main.apps.tagmanage",
            "main.apps.tagmanage.tests",
            "main.apps.tagmanage.tests.test",
            "main.apps.tagmanage.views",
            "main.apps.tags",
            "main.apps.tags.tests",
            "main.apps.tags.tests.test",
            "main.apps.tags.views",
            "main.apps.template",
            "main.apps.template.tests",
            "main.apps.template.tests.test",
            "main.apps.template.views",
            "main.apps.timepattern",
            "main.apps.timepattern.tests",
            "main.apps.timepattern.tests.test",
            "main.apps.timepattern.views",
            "main.apps.user",
            "main.apps.user.tests",
            "main.apps.user.tests.test",
            "main.apps.user.views",
            "main.apps.user.widgets",
            "main.apps.userprofile",
            "main.apps.userprofile.tests",
            "main.apps.userprofile.tests.test",
            "main.apps.userprofile.views",
            "main.apps.welcome",
            "main.apps.welcome.tests",
            "main.apps.welcome.tests.test",
            "main.apps.welcome.views",
            "main.auth",
            "main.auth.backends",
            "main.auth.backends.adbackend",
            "main.auth.backends.base",
            "main.auth.backends.httpbackend",
            "main.auth.backends.ldapbackend",
            "main.auth.backends.localbackend",
            "main.auth.backends.pyrulebackend",
            "main.calculator",
            "main.launcher",
            "main.management",
            "main.management.commands",
            "main.management.commands.build-manifest",
            "main.management.commands.csv-export",
            "main.management.commands.csv-import",
            "main.management.commands.dump-crashinfo",
            "main.management.commands.newapp",
            "main.management.commands.pythonpath",
            "main.management.commands.sync-collections",
            "main.management.commands.sync-doc",
            "main.management.commands.sync-perm",
            "main.management.commands.sync-pyrules",
            "main.management.commands.sync-refbooks",
            "main.management.commands.test",
            "main.management.commands.todos",
            "main.management.commands.unpickle",
            "main.management.commands.wipe",
            "main.migrations",
            "main.migrations.0001_initial",
            "main.migrations.0002_no_task_schedule",
            "main.migrations.0003_pg_dump",
            "main.migrations.0004_language",
            "main.migrations.0005_init_languages",
            "main.migrations.0006_database_storage",
            "main.migrations.0007_mimetype",
            "main.migrations.0008_default_mime_types",
            "main.migrations.0009_refbook",
            "main.migrations.0010_refbook_data_array",
            "main.migrations.0011_audit_trail",
            "main.migrations.0012_time_pattern",
            "main.migrations.0013_notifications",
            "main.migrations.0014_default_time_patterns",
            "main.migrations.0015_notification_link",
            "main.migrations.0016_user_profile",
            "main.migrations.0017_initial_userprofilecontacts",
            "main.migrations.0018_systemnotification",
            "main.migrations.0019_unhandled_exception",
            "main.migrations.0020_pyrule",
            "main.migrations.0021_permission",
            "main.migrations.0022_pyrule_is_builtin",
            "main.migrations.0023_cleanup",
            "main.migrations.0024_changes_quarantine",
            "main.migrations.0025_mac_sync_notification",
            "main.migrations.0026_enlarge_username",
            "main.migrations.0027_style",
            "main.migrations.0028_dbtrigger",
            "main.migrations.0029_version_inventory_notification",
            "main.migrations.0030_set_user_is_staff",
            "main.migrations.0031_schedule",
            "main.migrations.0032_schedule_migrate",
            "main.migrations.0033_shard",
            "main.migrations.0034_default_shard",
            "main.migrations.0035_prefix_table",
            "main.migrations.0036_profile_language",
            "main.migrations.0037_template",
            "main.migrations.0038_checkpoint",
            "main.migrations.0039_implied_permissions",
            "main.migrations.0040_profile_theme",
            "main.migrations.0041_inv_prefix_discovery_notification",
            "main.migrations.0042_resource_state",
            "main.migrations.0043_default_resourcestates",
            "main.models",
            "main.notifier",
            "main.notify",
            "main.notify.file",
            "main.notify.mail",
            "main.periodics",
            "main.periodics.backup",
            "main.periodics.cleanup",
            "main.periodics.collect_crashinfo",
            "main.periodics.update_refbook",
            "main.pyrules",
            "main.pyrules.drop_event",
            "main.pyrules.get_single_result",
            "main.pyrules.matrix_report",
            "main.pyrules.mrt_result",
            "main.pyrules.open_event",
            "main.pyrules.prefix_list_provisioning",
            "main.pyrules.refresh_config",
            "main.pyrules.result_report",
            "main.pyrules.vc_provisioning",
            "main.pyrules.version_inventory",
            "main.refbooks",
            "main.refbooks.downloaders",
            "main.refbooks.downloaders.url_csv",
            "main.refbooks.refbooks",
            "main.refbooks.refbooks.e164",
            "main.refbooks.refbooks.enterprise_numbers",
            "main.refbooks.refbooks.ieee",
            "main.refbooks.refbooks.iso3166",
            "main.refbooks.refbooks.q931",
            "main.refbooks.refbooks.russian_number_plan",
            "main.refbooks.refbooks.russian_number_registry",
            "main.scheduler",
            "main.templates.newapp.application",
            "main.templates.newapp.application.tests",
            "main.templates.newapp.application.tests.test",
            "main.templates.newapp.application.views",
            "main.templates.newapp.modelapplication",
            "main.templates.newapp.modelapplication.tests",
            "main.templates.newapp.modelapplication.tests.test",
            "main.templates.newapp.modelapplication.views",
            "main.templates.newapp.simplereport",
            "main.templates.newapp.simplereport.tests",
            "main.templates.newapp.simplereport.tests.test",
            "main.templates.newapp.simplereport.views",
            "main.templatetags",
            "main.templatetags.noctags",
            "main.templatetags.paginator",
            "main.templatetags.python",
            "main.templatetags.tags",
            "main.tests",
            "main.tests.auth_local",
            "main.tests.language",
            "main.tests.mimetype",
            "main.tests.permission",
            "main.tests.pyrule",
            "main.tests.refbook",
            "main.tests.shard",
            "main.tests.templatetags",
            "main.web",
            "manage",
            "peer",
            "peer.apps",
            "peer.apps.as",
            "peer.apps.as.tests",
            "peer.apps.as.tests.test",
            "peer.apps.as.views",
            "peer.apps.asset",
            "peer.apps.asset.tests",
            "peer.apps.asset.tests.test",
            "peer.apps.asset.views",
            "peer.apps.community",
            "peer.apps.community.tests",
            "peer.apps.community.tests.test",
            "peer.apps.community.views",
            "peer.apps.communitytype",
            "peer.apps.communitytype.tests",
            "peer.apps.communitytype.tests.test",
            "peer.apps.communitytype.views",
            "peer.apps.maintainer",
            "peer.apps.maintainer.tests",
            "peer.apps.maintainer.tests.test",
            "peer.apps.maintainer.views",
            "peer.apps.organisation",
            "peer.apps.organisation.tests",
            "peer.apps.organisation.tests.test",
            "peer.apps.organisation.views",
            "peer.apps.peer",
            "peer.apps.peer.tests",
            "peer.apps.peer.tests.test",
            "peer.apps.peer.views",
            "peer.apps.peergroup",
            "peer.apps.peergroup.tests",
            "peer.apps.peergroup.tests.test",
            "peer.apps.peergroup.views",
            "peer.apps.peeringpoint",
            "peer.apps.peeringpoint.tests",
            "peer.apps.peeringpoint.tests.test",
            "peer.apps.peeringpoint.views",
            "peer.apps.person",
            "peer.apps.person.tests",
            "peer.apps.person.tests.test",
            "peer.apps.person.views",
            "peer.apps.prefixlistbuilder",
            "peer.apps.prefixlistbuilder.tests",
            "peer.apps.prefixlistbuilder.tests.test",
            "peer.apps.prefixlistbuilder.views",
            "peer.apps.reportcone",
            "peer.apps.reportcone.views",
            "peer.apps.rir",
            "peer.apps.rir.tests",
            "peer.apps.rir.tests.test",
            "peer.apps.rir.views",
            "peer.datasources",
            "peer.migrations",
            "peer.migrations.0001_initial",
            "peer.migrations.0002_register_rconfig",
            "peer.migrations.0003_default_peeringpointtype",
            "peer.migrations.0004_lg_query",
            "peer.migrations.0005_lg_query_default_data",
            "peer.migrations.0007_peering_point_lg_url",
            "peer.migrations.0008_peering_point_location",
            "peer.migrations.0009_filter_name",
            "peer.migrations.0010_unregister_rconfig",
            "peer.migrations.0011_remove_peering_point_type",
            "peer.migrations.0012_community",
            "peer.migrations.0013_community_types",
            "peer.migrations.0014_inet_rtr",
            "peer.migrations.0015_maintainer",
            "peer.migrations.0016_no_lir",
            "peer.migrations.0017_default_maintainer",
            "peer.migrations.0018_no_lg",
            "peer.migrations.0019_no_rcmd",
            "peer.migrations.0020_no_masklen",
            "peer.migrations.0021_whois",
            "peer.migrations.0022_default_ripe_lookups",
            "peer.migrations.0023_peer_status",
            "peer.migrations.0024_as_name_and_routes_maintainer",
            "peer.migrations.0025_as_fields",
            "peer.migrations.0026_peer_remark",
            "peer.migrations.0027_maintainer_password",
            "peer.migrations.0028_prefix_list_cache",
            "peer.migrations.0029_peering_point_enable_provisioning",
            "peer.migrations.0030_peer_backup_ip",
            "peer.migrations.0031_compact_backup_peers",
            "peer.migrations.0032_med",
            "peer.migrations.0033_tags",
            "peer.migrations.0034_drop_cache_tables",
            "peer.models",
            "peer.periodics",
            "peer.periodics.prefix_list_provisioning",
            "peer.periodics.update_whois_cache",
            "peer.tests",
            "peer.tests.rir",
            "peer.tree",
            "peer.whois",
            "pm",
            "pm.apps",
            "pm.apps.chart",
            "pm.apps.chart.tests",
            "pm.apps.chart.tests.test",
            "pm.apps.chart.views",
            "pm.apps.timeseries",
            "pm.apps.timeseries.tests",
            "pm.apps.timeseries.tests.test",
            "pm.apps.timeseries.views",
            "pm.apps.view",
            "pm.apps.view.tests",
            "pm.apps.view.tests.test",
            "pm.apps.view.views",
            "pm.management",
            "pm.management.commands",
            "pm.management.commands.ts-export",
            "pm.management.commands.ts-list",
            "pm.management.commands.ts-rm",
            "pm.migrations",
            "pm.migrations.0001_initial",
            "pm.models",
            "pm.probe",
            "pm.probes",
            "pm.probes.fping",
            "pm.probes.http",
            "pm.probes.popen",
            "pm.probes.postgresql",
            "pm.probes.process",
            "pm.probes.smtp",
            "pm.probes.snmp",
            "pm.probes.snmp_interface",
            "pm.probes.ssh",
            "pm.probes.tcp",
            "pm.probes.test",
            "pm.tests",
            "pm.tests.timeseries",
            "sa",
            "sa.activator",
            "sa.activator.activator",
            "sa.activator.activator_socket",
            "sa.activator.event_collector",
            "sa.activator.fping_socket",
            "sa.activator.pm_collector_socket",
            "sa.activator.servers",
            "sa.activator.servers.ftp",
            "sa.activator.servers.http",
            "sa.activator.servers.tftp",
            "sa.activator.service",
            "sa.activator.syslog_collector",
            "sa.activator.trap_collector",
            "sa.apps",
            "sa.apps.activator",
            "sa.apps.activator.tests",
            "sa.apps.activator.tests.test",
            "sa.apps.activator.views",
            "sa.apps.activatorstatus",
            "sa.apps.activatorstatus.tests",
            "sa.apps.activatorstatus.tests.test",
            "sa.apps.activatorstatus.views",
            "sa.apps.administrativedomain",
            "sa.apps.administrativedomain.tests",
            "sa.apps.administrativedomain.tests.test",
            "sa.apps.administrativedomain.views",
            "sa.apps.commandsnippet",
            "sa.apps.commandsnippet.tests",
            "sa.apps.commandsnippet.tests.test",
            "sa.apps.commandsnippet.views",
            "sa.apps.groupaccess",
            "sa.apps.groupaccess.tests",
            "sa.apps.groupaccess.tests.test",
            "sa.apps.groupaccess.views",
            "sa.apps.macreport",
            "sa.apps.macreport.tests",
            "sa.apps.macreport.tests.test",
            "sa.apps.macreport.views",
            "sa.apps.managedobject",
            "sa.apps.managedobject.tests",
            "sa.apps.managedobject.tests.test",
            "sa.apps.managedobject.views",
            "sa.apps.managedobjectselector",
            "sa.apps.managedobjectselector.tests",
            "sa.apps.managedobjectselector.tests.test",
            "sa.apps.managedobjectselector.views",
            "sa.apps.mrt",
            "sa.apps.mrt.tests",
            "sa.apps.mrt.tests.test",
            "sa.apps.mrt.views",
            "sa.apps.mrtask",
            "sa.apps.mrtask.tests",
            "sa.apps.mrtask.tests.test",
            "sa.apps.mrtask.views",
            "sa.apps.mrtconfig",
            "sa.apps.mrtconfig.tests",
            "sa.apps.mrtconfig.tests.test",
            "sa.apps.mrtconfig.views",
            "sa.apps.reportmrtask",
            "sa.apps.reportmrtask.tests",
            "sa.apps.reportmrtask.tests.test",
            "sa.apps.reportmrtask.views",
            "sa.apps.reportobjectsummary",
            "sa.apps.reportobjectsummary.tests",
            "sa.apps.reportobjectsummary.tests.test",
            "sa.apps.reportobjectsummary.views",
            "sa.apps.reportsupportedequipment",
            "sa.apps.reportsupportedequipment.tests",
            "sa.apps.reportsupportedequipment.tests.test",
            "sa.apps.reportsupportedequipment.views",
            "sa.apps.runcommands",
            "sa.apps.runcommands.tests",
            "sa.apps.runcommands.tests.test",
            "sa.apps.runcommands.views",
            "sa.apps.runsnippet",
            "sa.apps.runsnippet.tests",
            "sa.apps.runsnippet.tests.test",
            "sa.apps.runsnippet.views",
            "sa.apps.setuntagged",
            "sa.apps.setuntagged.views",
            "sa.apps.showswitchports",
            "sa.apps.showswitchports.tests",
            "sa.apps.showswitchports.tests.test",
            "sa.apps.showswitchports.views",
            "sa.apps.switchportvalidation",
            "sa.apps.switchportvalidation.tests",
            "sa.apps.switchportvalidation.tests.test",
            "sa.apps.switchportvalidation.views",
            "sa.apps.topologydiscovery",
            "sa.apps.topologydiscovery.tests",
            "sa.apps.topologydiscovery.tests.test",
            "sa.apps.topologydiscovery.topology",
            "sa.apps.topologydiscovery.topology.base",
            "sa.apps.topologydiscovery.topology.cdp",
            "sa.apps.topologydiscovery.topology.fdp",
            "sa.apps.topologydiscovery.topology.lldp",
            "sa.apps.topologydiscovery.topology.mac",
            "sa.apps.topologydiscovery.topology.stp",
            "sa.apps.topologydiscovery.views",
            "sa.apps.useraccess",
            "sa.apps.useraccess.tests",
            "sa.apps.useraccess.tests.test",
            "sa.apps.useraccess.views",
            "sa.apps.versioninventory",
            "sa.apps.versioninventory.tests",
            "sa.apps.versioninventory.tests.test",
            "sa.apps.versioninventory.views",
            "sa.caches",
            "sa.interfaces",
            "sa.interfaces.base",
            "sa.interfaces.iaddvlan",
            "sa.interfaces.ialarmtrigger",
            "sa.interfaces.iauthenticationbackend",
            "sa.interfaces.iauthenticationform",
            "sa.interfaces.icommands",
            "sa.interfaces.iconfigdifffilter",
            "sa.interfaces.iconfigfilter",
            "sa.interfaces.iconfigvalidator",
            "sa.interfaces.idbpostdelete",
            "sa.interfaces.idbpostsave",
            "sa.interfaces.idbpredelete",
            "sa.interfaces.idbpresave",
            "sa.interfaces.idispositioncondition",
            "sa.interfaces.ievent",
            "sa.interfaces.ieventtrigger",
            "sa.interfaces.igetarp",
            "sa.interfaces.igetbfdsessions",
            "sa.interfaces.igetcdpneighbors",
            "sa.interfaces.igetchassisid",
            "sa.interfaces.igetconfig",
            "sa.interfaces.igetcoppertdrdiag",
            "sa.interfaces.igetdhcpbinding",
            "sa.interfaces.igetdictlist",
            "sa.interfaces.igetdomstatus",
            "sa.interfaces.igetdot11associations",
            "sa.interfaces.igetfdpneighbors",
            "sa.interfaces.igetfqdn",
            "sa.interfaces.igethttpget",
            "sa.interfaces.igetifindex",
            "sa.interfaces.igetinterfaces",
            "sa.interfaces.igetinterfacestatus",
            "sa.interfaces.igetipdiscovery",
            "sa.interfaces.igetipv6neighbor",
            "sa.interfaces.igetlicense",
            "sa.interfaces.igetlldpneighbors",
            "sa.interfaces.igetlocalusers",
            "sa.interfaces.igetmacaddresstable",
            "sa.interfaces.igetmplsvpn",
            "sa.interfaces.igetobjectsstatus",
            "sa.interfaces.igetobjectstatus",
            "sa.interfaces.igetportchannel",
            "sa.interfaces.igetresolverconfig",
            "sa.interfaces.igetsnmpget",
            "sa.interfaces.igetsnmpgetnext",
            "sa.interfaces.igetspanningtree",
            "sa.interfaces.igetswitchport",
            "sa.interfaces.igettopologydata",
            "sa.interfaces.igetversion",
            "sa.interfaces.igetvlans",
            "sa.interfaces.ihaslocaluser",
            "sa.interfaces.ihasvlan",
            "sa.interfaces.inotifysae",
            "sa.interfaces.iperiodictask",
            "sa.interfaces.iping",
            "sa.interfaces.ipingcheck",
            "sa.interfaces.ireducetask",
            "sa.interfaces.iremovevlan",
            "sa.interfaces.isetswitchport",
            "sa.interfaces.isyncprefixlists",
            "sa.interfaces.isyncvlans",
            "sa.management",
            "sa.management.commands",
            "sa.management.commands.debug-script",
            "sa.management.commands.generate-ssh-keys",
            "sa.management.commands.script-test",
            "sa.management.commands.topo-test",
            "sa.management.commands.versioninventory",
            "sa.menu",
            "sa.migrations",
            "sa.migrations.0001_initial",
            "sa.migrations.0002_trigger",
            "sa.migrations.0003_task_schedule",
            "sa.migrations.0004_no_task",
            "sa.migrations.0005_activator",
            "sa.migrations.0006_default_activator",
            "sa.migrations.0007_managed_object",
            "sa.migrations.0008_copy_objects",
            "sa.migrations.0009_snmp_community",
            "sa.migrations.0010_root_object",
            "sa.migrations.0011_managedobject_location",
            "sa.migrations.0012_managed_object_description",
            "sa.migrations.0013_rename_DES3xxx",
            "sa.migrations.0014_activator_to_ip",
            "sa.migrations.0015_managedobjectselector",
            "sa.migrations.0016_mapreduce",
            "sa.migrations.0017_object_selector_filter_activator",
            "sa.migrations.0018_rename_Alcatel_AOS",
            "sa.migrations.0019_rename_AddPac",
            "sa.migrations.0020_save_useraccess",
            "sa.migrations.0021_useraccess_selector",
            "sa.migrations.0022_restore_useraccess",
            "sa.migrations.0023_groupaccess",
            "sa.migrations.0024_alter_useraccess",
            "sa.migrations.0025_tags",
            "sa.migrations.0026_no_objectgroup",
            "sa.migrations.0027_reducetask_script",
            "sa.migrations.0028_noc_sae_profile",
            "sa.migrations.0029_managedobjectattribute",
            "sa.migrations.0030_merge_EdgeCore",
            "sa.migrations.0031_management_object_rules",
            "sa.migrations.0032_merge_DLink",
            "sa.migrations.0033_selector_by_attribute",
            "sa.migrations.0034_management_object_diff_filter_rule",
            "sa.migrations.0035_management_object_path_size",
            "sa.migrations.0036_command_snippet",
            "sa.migrations.0037_no_task_schedule",
            "sa.migrations.0038_activator_shard",
            "sa.migrations.0039_set_activator_shard",
            "sa.migrations.0040_activator_shard_not_null",
            "sa.migrations.0041_selector_shard_prefix",
            "sa.migrations.0042_object_max_scripts",
            "sa.migrations.0043_snippet_confirmation",
            "sa.migrations.0044_snippet_permissions",
            "sa.migrations.0045_snippet_ignore_errors",
            "sa.migrations.0046_rename_DES2108",
            "sa.migrations.0047_managedobject_vrf",
            "sa.models",
            "sa.periodics",
            "sa.periodics.version_inventory",
            "sa.profiles",
            "sa.profiles.3Com",
            "sa.profiles.3Com.SuperStack",
            "sa.profiles.3Com.SuperStack.get_mac_address_table",
            "sa.profiles.3Com.SuperStack.get_version",
            "sa.profiles.3Com.SuperStack.get_vlans",
            "sa.profiles.3Com.SuperStack.tests",
            "sa.profiles.3Com.SuperStack.tests.3Com_SuperStack_2_72_get_version_0001",
            "sa.profiles.3Com.SuperStack.tests.3Com_SuperStack_3_Switch_3300XM_2_72_get_mac_address_table_0001",
            "sa.profiles.3Com.SuperStack.tests.3Com_SuperStack_3_Switch_3300XM_2_72_get_mac_address_table_0002",
            "sa.profiles.3Com.SuperStack.tests.3Com_SuperStack_3_Switch_3300XM_2_72_get_version_0001",
            "sa.profiles.3Com.SuperStack.tests.3Com_SuperStack_3_Switch_3300XM_2_72_get_vlans_0001",
            "sa.profiles.3Com.SuperStack.tests.3Com_SuperStack_II_Switch_1100_2_72_get_mac_address_table_0001",
            "sa.profiles.3Com.SuperStack.tests.3Com_SuperStack_II_Switch_1100_2_72_get_version_0001",
            "sa.profiles.3Com.SuperStack.tests.3Com_SuperStack_II_Switch_610_2_72_get_vlans_0001",
            "sa.profiles.APC",
            "sa.profiles.APC.AOS",
            "sa.profiles.APC.AOS.get_version",
            "sa.profiles.APC.AOS.tests",
            "sa.profiles.APC.AOS.tests.APC_Smart_UPS_2200_3_5_5_get_version_0001",
            "sa.profiles.AddPac",
            "sa.profiles.AddPac.APOS",
            "sa.profiles.AddPac.APOS.get_config",
            "sa.profiles.AddPac.APOS.get_version",
            "sa.profiles.AddPac.APOS.highlight",
            "sa.profiles.Alcatel",
            "sa.profiles.Alcatel.AOS",
            "sa.profiles.Alcatel.AOS.get_config",
            "sa.profiles.Alcatel.AOS.get_version",
            "sa.profiles.Alcatel.AOS.get_vlans",
            "sa.profiles.Alcatel.OS62xx",
            "sa.profiles.Alcatel.OS62xx.get_config",
            "sa.profiles.Alcatel.OS62xx.get_mac_address_table",
            "sa.profiles.Alcatel.OS62xx.get_version",
            "sa.profiles.Alcatel.OS62xx.get_vlans",
            "sa.profiles.Alcatel.OS62xx.tests",
            "sa.profiles.Alcatel.OS62xx.tests.Alcatel_OmniStack_LS_6200_1_5_1_7_get_version_0001",
            "sa.profiles.Alcatel.OS62xx.tests.Alcatel_OmniStack_LS_6224_1_0_0_13_get_version_0001",
            "sa.profiles.Alcatel.TIMOS",
            "sa.profiles.Alcatel.TIMOS.get_config",
            "sa.profiles.Alcatel.TIMOS.get_version",
            "sa.profiles.Alcatel.TIMOS.tests",
            "sa.profiles.Alcatel.TIMOS.tests.Alcatel_Alcatel_TIMOS_C_8_0_R3_get_version_0001",
            "sa.profiles.Alentis",
            "sa.profiles.Alentis.NetPing",
            "sa.profiles.Alentis.NetPing.get_chassis_id",
            "sa.profiles.Alentis.NetPing.get_config",
            "sa.profiles.Alentis.NetPing.get_version",
            "sa.profiles.Alentis.NetPing.tests",
            "sa.profiles.Alentis.NetPing.tests.Alentis_UniPing_RS232_50_8_7_A_2_get_chassis_id_0001",
            "sa.profiles.Alentis.NetPing.tests.Alentis_UniPing_RS232_50_8_7_A_2_get_chassis_id_0002",
            "sa.profiles.Alentis.NetPing.tests.Alentis_UniPing_RS232_50_8_7_A_2_get_config_0001",
            "sa.profiles.Alentis.NetPing.tests.Alentis_UniPing_RS232_50_8_7_A_2_get_version_0001",
            "sa.profiles.Alentis.NetPing.tests.Alentis_UniPing_RS232_50_8_7_A_2_get_version_0002",
            "sa.profiles.AlliedTelesis",
            "sa.profiles.AlliedTelesis.AT8000S",
            "sa.profiles.AlliedTelesis.AT8000S.add_vlan",
            "sa.profiles.AlliedTelesis.AT8000S.get_arp",
            "sa.profiles.AlliedTelesis.AT8000S.get_config",
            "sa.profiles.AlliedTelesis.AT8000S.get_local_users",
            "sa.profiles.AlliedTelesis.AT8000S.get_mac_address_table",
            "sa.profiles.AlliedTelesis.AT8000S.get_version",
            "sa.profiles.AlliedTelesis.AT8000S.get_vlans",
            "sa.profiles.AlliedTelesis.AT8000S.highlight",
            "sa.profiles.AlliedTelesis.AT8000S.ping",
            "sa.profiles.AlliedTelesis.AT8000S.remove_vlan",
            "sa.profiles.AlliedTelesis.AT8500",
            "sa.profiles.AlliedTelesis.AT8500.get_config",
            "sa.profiles.AlliedTelesis.AT8500.get_mac_address_table",
            "sa.profiles.AlliedTelesis.AT8500.get_version",
            "sa.profiles.AlliedTelesis.AT8500.ping",
            "sa.profiles.AlliedTelesis.AT9400",
            "sa.profiles.AlliedTelesis.AT9400.get_arp",
            "sa.profiles.AlliedTelesis.AT9400.get_chassis_id",
            "sa.profiles.AlliedTelesis.AT9400.get_config",
            "sa.profiles.AlliedTelesis.AT9400.get_interface_status",
            "sa.profiles.AlliedTelesis.AT9400.get_mac_address_table",
            "sa.profiles.AlliedTelesis.AT9400.get_version",
            "sa.profiles.AlliedTelesis.AT9400.get_vlans",
            "sa.profiles.AlliedTelesis.AT9400.ping",
            "sa.profiles.AlliedTelesis.AT9400.tests",
            "sa.profiles.AlliedTelesis.AT9400.tests.AlliedTelesis_AT_9424T_SP_1_2_0_NE_get_arp_0001",
            "sa.profiles.AlliedTelesis.AT9400.tests.AlliedTelesis_AT_9424T_SP_1_2_0_NE_get_chassis_id_0001",
            "sa.profiles.AlliedTelesis.AT9400.tests.AlliedTelesis_AT_9424T_SP_1_2_0_NE_get_interface_status_0001",
            "sa.profiles.AlliedTelesis.AT9400.tests.AlliedTelesis_AT_9424T_SP_1_2_0_NE_get_mac_address_table_0001",
            "sa.profiles.AlliedTelesis.AT9400.tests.AlliedTelesis_AT_9424T_SP_1_2_0_NE_get_version_0001",
            "sa.profiles.AlliedTelesis.AT9400.tests.AlliedTelesis_AT_9424T_SP_1_2_0_NE_get_vlans_0001",
            "sa.profiles.AlliedTelesis.AT9400.tests.AlliedTelesis_AT_9424Ts_XP_ATS63_v4_0_0_P_02_get_version_0001",
            "sa.profiles.AlliedTelesis.AT9900",
            "sa.profiles.AlliedTelesis.AT9900.get_chassis_id",
            "sa.profiles.AlliedTelesis.AT9900.get_config",
            "sa.profiles.AlliedTelesis.AT9900.get_mac_address_table",
            "sa.profiles.AlliedTelesis.AT9900.get_version",
            "sa.profiles.AlliedTelesis.AT9900.get_vlans",
            "sa.profiles.AlliedTelesis.AT9900.ping",
            "sa.profiles.Audiocodes",
            "sa.profiles.Audiocodes.Mediant2000",
            "sa.profiles.Audiocodes.Mediant2000.get_config",
            "sa.profiles.Audiocodes.Mediant2000.get_version",
            "sa.profiles.Audiocodes.Mediant2000.highlight",
            "sa.profiles.Audiocodes.Mediant2000.tests",
            "sa.profiles.Audiocodes.Mediant2000.tests.Audiocodes_Mediant2000_5_2A_043_005_get_version_0001",
            "sa.profiles.Brocade",
            "sa.profiles.Brocade.FabricOS",
            "sa.profiles.Brocade.FabricOS.get_config",
            "sa.profiles.Brocade.FabricOS.get_version",
            "sa.profiles.Brocade.FabricOS.highlight",
            "sa.profiles.Brocade.FabricOS.tests",
            "sa.profiles.Brocade.FabricOS.tests.Brocade_SLKWRM0000300_6_4_1b_get_version_0001",
            "sa.profiles.Brocade.IronWare",
            "sa.profiles.Brocade.IronWare.add_vlan",
            "sa.profiles.Brocade.IronWare.get_arp",
            "sa.profiles.Brocade.IronWare.get_chassis_id",
            "sa.profiles.Brocade.IronWare.get_config",
            "sa.profiles.Brocade.IronWare.get_fdp_neighbors",
            "sa.profiles.Brocade.IronWare.get_fqdn",
            "sa.profiles.Brocade.IronWare.get_interfaces",
            "sa.profiles.Brocade.IronWare.get_mac_address_table",
            "sa.profiles.Brocade.IronWare.get_portchannel",
            "sa.profiles.Brocade.IronWare.get_spanning_tree",
            "sa.profiles.Brocade.IronWare.get_version",
            "sa.profiles.Brocade.IronWare.get_vlans",
            "sa.profiles.Brocade.IronWare.highlight",
            "sa.profiles.Brocade.IronWare.remove_vlan",
            "sa.profiles.Cisco",
            "sa.profiles.Cisco.ASA",
            "sa.profiles.Cisco.ASA.get_config",
            "sa.profiles.Cisco.ASA.get_interfaces",
            "sa.profiles.Cisco.ASA.get_version",
            "sa.profiles.Cisco.ASA.highlight",
            "sa.profiles.Cisco.ASA.tests",
            "sa.profiles.Cisco.ASA.tests.Cisco_ASA5520_8_2_2__get_version_0001",
            "sa.profiles.Cisco.AireOS",
            "sa.profiles.Cisco.AireOS.get_config",
            "sa.profiles.Cisco.AireOS.get_version",
            "sa.profiles.Cisco.AireOS.highlight",
            "sa.profiles.Cisco.CatOS",
            "sa.profiles.Cisco.CatOS.get_config",
            "sa.profiles.Cisco.CatOS.get_mac_address_table",
            "sa.profiles.Cisco.CatOS.get_version",
            "sa.profiles.Cisco.CatOS.get_vlans",
            "sa.profiles.Cisco.CatOS.highlight",
            "sa.profiles.Cisco.FWSM",
            "sa.profiles.Cisco.FWSM.get_config",
            "sa.profiles.Cisco.FWSM.get_version",
            "sa.profiles.Cisco.FWSM.highlight",
            "sa.profiles.Cisco.FWSM.tests",
            "sa.profiles.Cisco.FWSM.tests.Cisco_WS_SVC_FWM_1_4_0_2__get_version_0001",
            "sa.profiles.Cisco.IOS",
            "sa.profiles.Cisco.IOS.add_vlan",
            "sa.profiles.Cisco.IOS.get_arp",
            "sa.profiles.Cisco.IOS.get_cdp_neighbors",
            "sa.profiles.Cisco.IOS.get_chassis_id",
            "sa.profiles.Cisco.IOS.get_config",
            "sa.profiles.Cisco.IOS.get_copper_tdr_diag",
            "sa.profiles.Cisco.IOS.get_dhcp_binding",
            "sa.profiles.Cisco.IOS.get_dom_status",
            "sa.profiles.Cisco.IOS.get_dot11_associations",
            "sa.profiles.Cisco.IOS.get_fqdn",
            "sa.profiles.Cisco.IOS.get_interface_index",
            "sa.profiles.Cisco.IOS.get_interfaces",
            "sa.profiles.Cisco.IOS.get_ipv6_neighbor",
            "sa.profiles.Cisco.IOS.get_lldp_neighbors",
            "sa.profiles.Cisco.IOS.get_local_users",
            "sa.profiles.Cisco.IOS.get_mac_address_table",
            "sa.profiles.Cisco.IOS.get_mpls_vpn",
            "sa.profiles.Cisco.IOS.get_portchannel",
            "sa.profiles.Cisco.IOS.get_resolver_config",
            "sa.profiles.Cisco.IOS.get_spanning_tree",
            "sa.profiles.Cisco.IOS.get_switchport",
            "sa.profiles.Cisco.IOS.get_version",
            "sa.profiles.Cisco.IOS.get_vlans",
            "sa.profiles.Cisco.IOS.highlight",
            "sa.profiles.Cisco.IOS.ping",
            "sa.profiles.Cisco.IOS.remove_vlan",
            "sa.profiles.Cisco.IOS.set_switchport",
            "sa.profiles.Cisco.IOS.tests",
            "sa.profiles.Cisco.IOS.tests.Cisco_2800_12_4_21__get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_2800_12_4_25c__get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_3700_12_3_14_T7_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_3700_12_3_14_T7_get_vlans_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_3800_12_4_24_T1_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_3800_12_4_24_T1_get_vlans_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_7200_12_2_33_SRD3_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_7200_12_2_33_SRD3_get_vlans_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C1900_15_0_1_M1_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C2960_12_2_35_SE5_get_switchport_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C2960_12_2_40_SE_get_vlans_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C2960_12_2_52_SE_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3550_12_2_52_SE_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3560_12_2_25_SEE4_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3560_12_2_44_SE2_get_copper_trd_diag_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3560_12_2_44_SE2_get_copper_trd_diag_0002",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3560_12_2_44_SE2_get_copper_trd_diag_0003",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3560_12_2_44_SE2_get_portchannel_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3560_12_2_44_SE2_get_switchport_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3560_12_2_44_SE6_get_spanning_tree_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3560_12_2_46_SE_get_lldp_neighbors_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3560_12_2_46_SE_get_portchannel_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3560_12_2_52_SE_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3750_12_2_25_SEE_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3750_12_2_35_SE1_get_spanning_tree_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3750_12_2_35_SE2_get_chassis_id_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3750_12_2_35_SE2_get_mac_address_table_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3750_12_2_35_SE2_get_spanning_tree_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3750_12_2_35_SE2_get_spanning_tree_0002",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3750_12_2_35_SE2_get_vlans_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3750_12_2_37_SE_get_chassis_id_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3750_12_2_37_SE_get_lldp_neighbors_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3750_12_2_40_SE_get_lldp_neighbors_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3750_12_2_40_SE_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3750_12_2_53_SE2_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3750_12_2_53_SE2_get_version_0002",
            "sa.profiles.Cisco.IOS.tests.Cisco_C3750_12_2_55_SE1_get_vlans_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_CBS31X0_12_2_50_SE3_get_chassis_id_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_CBS31X0_12_2_50_SE3_get_fqdn_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_CBS31X0_12_2_50_SE3_get_lldp_neighbors_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_CBS31X0_12_2_50_SE3_get_mac_address_table_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_CBS31X0_12_2_50_SE3_get_spanning_tree_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_CBS31X0_12_2_50_SE3_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_CBS31X0_12_2_50_SE3_get_version_0002",
            "sa.profiles.Cisco.IOS.tests.Cisco_CBS31X0_12_2_50_SE3_get_vlans_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_CBS31X0_12_2_55_SE_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_Catalyst_4500_L3_Switch_12_2_31_SGA10_get_mac_address_table_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_Catalyst_4500_L3_Switch_12_2_37_SG1_get_chassis_id_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_Catalyst_4500_L3_Switch_12_2_37_SG1_get_mac_address_table_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_Catalyst_4500_L3_Switch_12_2_37_SG1_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_Catalyst_4500_L3_Switch_12_2_37_SG1_get_vlans_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_Catalyst_4500_L3_Switch_12_2_52_SG_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_EGR_12_3_17b_BC3_get_spanning_tree_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_IOS_XE_15_0_1_S4_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_IOS_XE_15_0_1_S4_get_vlans_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_ME340x_12_2_35_SE5_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_ME340x_12_2_40_SE_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_s222_rp_12_2_18_SXF13_get_mac_address_table_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_s72033_rp_12_2_18_SXF14_get_chassis_id_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_s72033_rp_12_2_18_SXF14_get_mac_address_table_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_s72033_rp_12_2_18_SXF14_get_spanning_tree_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_s72033_rp_12_2_18_SXF14_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_s72033_rp_12_2_18_SXF14_get_version_0002",
            "sa.profiles.Cisco.IOS.tests.Cisco_s72033_rp_12_2_18_SXF14_get_vlans_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_s72033_rp_12_2_18_SXF16_get_dom_status_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_s72033_rp_12_2_18_SXF16_get_switchport_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_s72033_rp_12_2_33_SXH2a_get_chassis_id_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_s72033_rp_12_2_33_SXH2a_get_mac_address_table_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_s72033_rp_12_2_33_SXH2a_get_spanning_tree_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_s72033_rp_12_2_33_SXH2a_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_s72033_rp_12_2_33_SXI2_get_mac_address_table_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_s72033_rp_12_2_33_SXI2_get_mac_address_table_0002",
            "sa.profiles.Cisco.IOS.tests.Cisco_s72033_rp_12_2_33_SXJ_get_vlans_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_uBR7114_12_3_23_BC5_get_interfaces_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_uBR7114_12_3_23_BC5_get_version_0001",
            "sa.profiles.Cisco.IOS.tests.Cisco_uBR7114_12_3_32_BC5_get_vlans_0001",
            "sa.profiles.Cisco.IOSXR",
            "sa.profiles.Cisco.IOSXR.get_arp",
            "sa.profiles.Cisco.IOSXR.get_config",
            "sa.profiles.Cisco.IOSXR.get_interfaces",
            "sa.profiles.Cisco.IOSXR.get_ipv6_neighbor",
            "sa.profiles.Cisco.IOSXR.get_mpls_vpn",
            "sa.profiles.Cisco.IOSXR.get_version",
            "sa.profiles.Cisco.IOSXR.highlight",
            "sa.profiles.Cisco.IOSXR.tests",
            "sa.profiles.Cisco.IOSXR.tests.Cisco_12406_3_9_2_00__get_version_0001",
            "sa.profiles.Cisco.NXOS",
            "sa.profiles.Cisco.NXOS.add_vlan",
            "sa.profiles.Cisco.NXOS.get_config",
            "sa.profiles.Cisco.NXOS.get_local_user",
            "sa.profiles.Cisco.NXOS.get_version",
            "sa.profiles.Cisco.NXOS.get_vlans",
            "sa.profiles.Cisco.NXOS.highlight",
            "sa.profiles.Cisco.NXOS.remove_vlan",
            "sa.profiles.DLink",
            "sa.profiles.DLink.DES21xx",
            "sa.profiles.DLink.DES21xx.add_vlan",
            "sa.profiles.DLink.DES21xx.get_chassis_id",
            "sa.profiles.DLink.DES21xx.get_interface_status",
            "sa.profiles.DLink.DES21xx.get_mac_address_table",
            "sa.profiles.DLink.DES21xx.get_switchport",
            "sa.profiles.DLink.DES21xx.get_version",
            "sa.profiles.DLink.DES21xx.get_vlans",
            "sa.profiles.DLink.DES21xx.remove_vlan",
            "sa.profiles.DLink.DES21xx.tests",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2108_3_00_04_add_vlan_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2108_3_00_04_get_chassis_id_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2108_3_00_04_get_interface_status_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2108_3_00_04_get_mac_address_table_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2108_3_00_04_get_switchport_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2108_3_00_04_get_version_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2108_3_00_04_get_vlans_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2108_3_00_04_remove_vlan_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2108_5_01_00_add_vlan_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2108_5_01_00_get_chassis_id_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2108_5_01_00_get_interface_status_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2108_5_01_00_get_mac_address_table_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2108_5_01_00_get_switchport_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2108_5_01_00_get_version_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2108_5_01_00_get_vlans_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2108_5_01_00_remove_vlan_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2110_3_00_18_add_vlan_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2110_3_00_18_get_chassis_id_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2110_3_00_18_get_interface_status_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2110_3_00_18_get_mac_address_table_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2110_3_00_18_get_switchport_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2110_3_00_18_get_version_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2110_3_00_18_get_vlans_0001",
            "sa.profiles.DLink.DES21xx.tests.DLink_DES_2110_3_00_18_remove_vlan_0001",
            "sa.profiles.DLink.DGS3100",
            "sa.profiles.DLink.DGS3100.add_vlan",
            "sa.profiles.DLink.DGS3100.get_arp",
            "sa.profiles.DLink.DGS3100.get_chassis_id",
            "sa.profiles.DLink.DGS3100.get_config",
            "sa.profiles.DLink.DGS3100.get_copper_tdr_diag",
            "sa.profiles.DLink.DGS3100.get_dom_status",
            "sa.profiles.DLink.DGS3100.get_interface_status",
            "sa.profiles.DLink.DGS3100.get_lldp_neighbors",
            "sa.profiles.DLink.DGS3100.get_local_users",
            "sa.profiles.DLink.DGS3100.get_mac_address_table",
            "sa.profiles.DLink.DGS3100.get_portchannel",
            "sa.profiles.DLink.DGS3100.get_version",
            "sa.profiles.DLink.DGS3100.get_vlans",
            "sa.profiles.DLink.DGS3100.highlight",
            "sa.profiles.DLink.DGS3100.ping",
            "sa.profiles.DLink.DGS3100.remove_vlan",
            "sa.profiles.DLink.DGS3100.tests",
            "sa.profiles.DLink.DGS3100.tests.DLink_DGS_3100_24TG_3_00_43_get_chassis_id_0001",
            "sa.profiles.DLink.DGS3100.tests.DLink_DGS_3100_24TG_3_00_43_get_interface_status_0001",
            "sa.profiles.DLink.DGS3100.tests.DLink_DGS_3100_24TG_3_00_43_get_lldp_neighbors_0001",
            "sa.profiles.DLink.DGS3100.tests.DLink_DGS_3100_24TG_3_00_43_get_mac_address_table_0001",
            "sa.profiles.DLink.DGS3100.tests.DLink_DGS_3100_24TG_3_00_43_get_version_0001",
            "sa.profiles.DLink.DGS3100.tests.DLink_DGS_3100_24TG_3_00_43_get_vlans_0001",
            "sa.profiles.DLink.DGS3100.tests.DLink_DGS_3100_24TG_3_60_24_get_dom_status_0001",
            "sa.profiles.DLink.DGS3100.tests.DLink_DGS_3100_24TG_3_60_24_get_interface_status_0001",
            "sa.profiles.DLink.DGS3100.tests.DLink_DGS_3100_24TG_3_60_24_get_lldp_neighbors_0001",
            "sa.profiles.DLink.DVG",
            "sa.profiles.DLink.DVG.get_arp",
            "sa.profiles.DLink.DVG.get_chassis_id",
            "sa.profiles.DLink.DVG.get_interface_status",
            "sa.profiles.DLink.DVG.get_version",
            "sa.profiles.DLink.DVG.ping",
            "sa.profiles.DLink.DVG.tests",
            "sa.profiles.DLink.DVG.tests.DLink_DVG_2102S_1_02_38_39_1651_get_chassis_id_0001",
            "sa.profiles.DLink.DVG.tests.DLink_DVG_2102S_1_02_38_39_1651_get_version_0001",
            "sa.profiles.DLink.DVG.tests.DLink_DVG_2102S_1_02_38_39_1651_ping_0001",
            "sa.profiles.DLink.DVG.tests.DLink_DVG_5004S_1_02_38_43_9367_get_interface_status_0001",
            "sa.profiles.DLink.DxS",
            "sa.profiles.DLink.DxS.add_vlan",
            "sa.profiles.DLink.DxS.get_arp",
            "sa.profiles.DLink.DxS.get_chassis_id",
            "sa.profiles.DLink.DxS.get_config",
            "sa.profiles.DLink.DxS.get_copper_tdr_diag",
            "sa.profiles.DLink.DxS.get_dhcp_binding",
            "sa.profiles.DLink.DxS.get_interface_status",
            "sa.profiles.DLink.DxS.get_lldp_neighbors",
            "sa.profiles.DLink.DxS.get_local_users",
            "sa.profiles.DLink.DxS.get_mac_address_table",
            "sa.profiles.DLink.DxS.get_portchannel",
            "sa.profiles.DLink.DxS.get_resolver_config",
            "sa.profiles.DLink.DxS.get_version",
            "sa.profiles.DLink.DxS.get_vlans",
            "sa.profiles.DLink.DxS.highlight",
            "sa.profiles.DLink.DxS.ping",
            "sa.profiles.DLink.DxS.remove_vlan",
            "sa.profiles.DLink.DxS.tests",
            "sa.profiles.DLink.DxS.tests.DLink_DES_3010G_4_20_B27_get_copper_tdr_diag_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DES_3010G_4_20_B27_get_version_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DES_3010G_4_30_B23_get_interface_status_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DES_3016_4_20_B27_get_version_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DES_3026_4_20_B27_get_version_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DES_3026_4_30_B16_get_mac_address_table_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DES_3028_2_42_B01_get_chassis_id_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DES_3028_2_42_B01_get_mac_address_table_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DES_3200_10_1_33_B007_get_version_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DES_3226S_4_03_B04_get_version_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DES_3326SR_4_03_B13_get_version_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DES_3526_6_00_B23_get_copper_tdr_diag_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DES_3526_6_00_B23_get_version_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DES_3526_6_00_B57_get_mac_address_table_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DES_3528_2_11_B020_get_copper_tdr_diag_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DES_3528_2_11_B020_get_version_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DES_3828_4_50_B22_get_version_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DES_3852_4_50_B12_get_version_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3120_24SC_1_03_B006_get_copper_tdr_diag_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3120_24SC_1_03_B006_get_version_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3120_24TC_1_00_028_get_interface_status_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3120_24TC_1_01_B033_get_arp_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3120_24TC_1_01_B033_get_chassis_id_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3120_24TC_1_01_B033_get_interface_status_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3120_24TC_1_01_B033_get_local_users_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3120_24TC_1_01_B033_get_mac_address_table_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3120_24TC_1_01_B033_get_version_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3120_24TC_1_01_B033_get_vlans_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3200_10_1_62_B017_get_version_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3312SR_3_60_S22_get_version_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3426G_2_70_B54_get_version_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3612G_2_82_B13_get_version_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3620_28SC_1_00_035_get_version_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3627G_2_55_B10_get_chassis_id_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3627G_2_55_B10_get_mac_address_table_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3627G_2_55_B10_get_portchannel_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3627G_2_82_B13_get_version_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3627G_2_82_B20_get_dhcp_binding_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3627G_2_82_B20_ping_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3627G_2_84_B10_get_copper_tdr_diag_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3627G_2_84_B10_get_resolver_config_0001",
            "sa.profiles.DLink.DxS.tests.DLink_DGS_3627G_2_84_B15_get_lldp_neighbors_0001",
            "sa.profiles.DLink.DxS_Cisco_CLI",
            "sa.profiles.DLink.DxS_Cisco_CLI.add_vlan",
            "sa.profiles.DLink.DxS_Cisco_CLI.get_arp",
            "sa.profiles.DLink.DxS_Cisco_CLI.get_config",
            "sa.profiles.DLink.DxS_Cisco_CLI.get_interface_status",
            "sa.profiles.DLink.DxS_Cisco_CLI.get_local_users",
            "sa.profiles.DLink.DxS_Cisco_CLI.get_mac_address_table",
            "sa.profiles.DLink.DxS_Cisco_CLI.get_portchannel",
            "sa.profiles.DLink.DxS_Cisco_CLI.get_switchport",
            "sa.profiles.DLink.DxS_Cisco_CLI.get_version",
            "sa.profiles.DLink.DxS_Cisco_CLI.get_vlans",
            "sa.profiles.DLink.DxS_Cisco_CLI.highlight",
            "sa.profiles.DLink.DxS_Cisco_CLI.ping",
            "sa.profiles.DLink.DxS_Cisco_CLI.remove_vlan",
            "sa.profiles.DLink.DxS_Cisco_CLI.tests",
            "sa.profiles.DLink.DxS_Cisco_CLI.tests.DLink_DGS_3610_26G_10_3_5T16_get_arp_0001",
            "sa.profiles.DLink.DxS_Cisco_CLI.tests.DLink_DGS_3610_26G_10_3_5T16_get_interface_status_0001",
            "sa.profiles.DLink.DxS_Cisco_CLI.tests.DLink_DGS_3610_26G_10_3_5T16_get_local_users_0001",
            "sa.profiles.DLink.DxS_Cisco_CLI.tests.DLink_DGS_3610_26G_10_3_5T16_get_mac_address_table_0001",
            "sa.profiles.DLink.DxS_Cisco_CLI.tests.DLink_DGS_3610_26G_10_3_5T16_get_portchannel_0001",
            "sa.profiles.DLink.DxS_Cisco_CLI.tests.DLink_DGS_3610_26G_10_3_5T16_get_switchport_0001",
            "sa.profiles.DLink.DxS_Cisco_CLI.tests.DLink_DGS_3610_26G_10_3_5T16_get_version_0001",
            "sa.profiles.DLink.DxS_Cisco_CLI.tests.DLink_DGS_3610_26G_10_3_5T16_get_vlans_0001",
            "sa.profiles.DLink.DxS_Cisco_CLI.tests.DLink_DGS_3610_26G_10_3_5T16_ping_0001",
            "sa.profiles.DLink.DxS_Smart",
            "sa.profiles.DLink.DxS_Smart.get_arp",
            "sa.profiles.DLink.DxS_Smart.get_chassis_id",
            "sa.profiles.DLink.DxS_Smart.get_mac_address_table",
            "sa.profiles.DLink.DxS_Smart.get_version",
            "sa.profiles.DLink.DxS_Smart.ping",
            "sa.profiles.DLink.DxS_Smart.tests",
            "sa.profiles.DLink.DxS_Smart.tests.DLink_DES_1210_28P_2_00_011_get_arp_0001",
            "sa.profiles.DLink.DxS_Smart.tests.DLink_DES_1210_28P_2_00_011_get_chassis_id_0001",
            "sa.profiles.DLink.DxS_Smart.tests.DLink_DES_1210_28P_2_00_011_get_mac_address_table_0001",
            "sa.profiles.DLink.DxS_Smart.tests.DLink_DES_1210_28P_2_00_011_get_version_0001",
            "sa.profiles.EdgeCore",
            "sa.profiles.EdgeCore.ES",
            "sa.profiles.EdgeCore.ES.add_vlan",
            "sa.profiles.EdgeCore.ES.get_arp",
            "sa.profiles.EdgeCore.ES.get_chassis_id",
            "sa.profiles.EdgeCore.ES.get_config",
            "sa.profiles.EdgeCore.ES.get_dhcp_binding",
            "sa.profiles.EdgeCore.ES.get_interface_status",
            "sa.profiles.EdgeCore.ES.get_lldp_neighbors",
            "sa.profiles.EdgeCore.ES.get_mac_address_table",
            "sa.profiles.EdgeCore.ES.get_portchannel",
            "sa.profiles.EdgeCore.ES.get_switchport",
            "sa.profiles.EdgeCore.ES.get_version",
            "sa.profiles.EdgeCore.ES.get_vlans",
            "sa.profiles.EdgeCore.ES.highlight",
            "sa.profiles.EdgeCore.ES.remove_vlan",
            "sa.profiles.EdgeCore.ES.tests",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3510MA_1_2_4_2_get_chassis_id_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3510MA_1_2_4_2_get_mac_address_table_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3510MA_1_2_4_2_get_version_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3510MA_1_2_4_2_get_vlans_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3510_1_1_0_26_get_version_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3510_1_1_0_26_get_vlans_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3510_1_1_0_29_get_version_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3526S_1_0_3_8_get_chassis_id_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3526S_1_0_3_8_get_mac_address_table_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3526S_1_0_3_8_get_version_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3526S_1_0_3_8_get_vlans_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3526XA_1_SL_38_2_3_4_16_get_version_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3526XA_1_SL_38_2_3_4_16_get_version_0002",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3526XA_1_SL_38_2_3_4_16_get_vlans_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3526XA_38_2_3_3_16_get_version_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3526XA_38_2_3_3_16_get_version_0002",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3526XA_38_2_3_3_16_get_vlans_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3526XA_V2_1_1_0_26_get_vlans_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3526XA_V2_1_1_0_29_get_chassis_id_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3526XA_V2_1_1_0_29_get_dhcp_binding_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3526XA_V2_1_1_0_29_get_mac_address_table_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3526XA_V2_1_1_0_29_get_switchport_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3526XA_V2_1_1_0_29_get_version_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3526XA_V2_1_1_0_29_get_version_0002",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3526XA_V2_1_1_0_29_get_vlans_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3528M-SFP_1_4_14_1_get_version_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES3528M-SFP_1_4_14_1_get_version_0002",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4612_1_0_6_5_get_arp_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4612_1_0_6_5_get_vlans_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4612_1_0_6_9_get_chassis_id_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4612_1_0_6_9_get_mac_address_table_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4612_1_0_6_9_get_mac_address_table_0002",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4612_1_0_6_9_get_portchannel_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4612_1_0_6_9_get_switchport_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4612_1_0_6_9_get_version_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4612_1_0_6_9_get_version_0002",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4612_1_0_6_9_get_vlans_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4626_SFP_5_4_146_0_get_mac_address_table_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4626_SFP_5_4_146_0_get_version_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4626_SFP_5_4_146_0_get_vlans_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4626_SFP_5_4_156_0_get_chassis_id_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4626_SFP_5_4_156_0_get_mac_address_table_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4626_SFP_5_4_156_0_get_mac_address_table_0002",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4626_SFP_5_4_156_0_get_portchannel_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4626_SFP_5_4_156_0_get_switchport_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4626_SFP_5_4_156_0_get_version_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4626_SFP_5_4_156_0_get_version_0002",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4626_SFP_5_4_156_0_get_vlans_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4626_SFP_6_0_220_33_get_arp_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4626_SFP_6_0_220_33_get_chassis_id_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4626_SFP_6_0_220_33_get_mac_address_table_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4626_SFP_6_0_220_33_get_version_0001",
            "sa.profiles.EdgeCore.ES.tests.EdgeCore_ES4626_SFP_6_0_220_33_get_version_0002",
            "sa.profiles.Eltex",
            "sa.profiles.Eltex.MES",
            "sa.profiles.Eltex.MES.add_vlan",
            "sa.profiles.Eltex.MES.get_arp",
            "sa.profiles.Eltex.MES.get_chassis_id",
            "sa.profiles.Eltex.MES.get_config",
            "sa.profiles.Eltex.MES.get_copper_tdr_diag",
            "sa.profiles.Eltex.MES.get_dhcp_binding",
            "sa.profiles.Eltex.MES.get_dom_status",
            "sa.profiles.Eltex.MES.get_fqdn",
            "sa.profiles.Eltex.MES.get_interface_status",
            "sa.profiles.Eltex.MES.get_interfaces",
            "sa.profiles.Eltex.MES.get_lldp_neighbors",
            "sa.profiles.Eltex.MES.get_local_users",
            "sa.profiles.Eltex.MES.get_mac_address_table",
            "sa.profiles.Eltex.MES.get_portchannel",
            "sa.profiles.Eltex.MES.get_switchport",
            "sa.profiles.Eltex.MES.get_version",
            "sa.profiles.Eltex.MES.get_vlans",
            "sa.profiles.Eltex.MES.highlight",
            "sa.profiles.Eltex.MES.ping",
            "sa.profiles.Eltex.MES.remove_vlan",
            "sa.profiles.Eltex.MES.set_switchport",
            "sa.profiles.Eltex.MES.tests",
            "sa.profiles.Eltex.MES.tests.Eltex_MES_1024_1_0_16_get_switchport_0001",
            "sa.profiles.Eltex.MES.tests.Eltex_MES_1024_1_0_16_get_version_0001",
            "sa.profiles.Eltex.MES.tests.Eltex_MES_3124F_2_1_7_add_vlan_0001",
            "sa.profiles.Eltex.MES.tests.Eltex_MES_3124F_2_1_7_add_vlan_0002",
            "sa.profiles.Eltex.MES.tests.Eltex_MES_3124F_2_1_7_get_arp_0001",
            "sa.profiles.Eltex.MES.tests.Eltex_MES_3124F_2_1_7_get_chassis_id_0001",
            "sa.profiles.Eltex.MES.tests.Eltex_MES_3124F_2_1_7_get_fqdn_0001",
            "sa.profiles.Eltex.MES.tests.Eltex_MES_3124F_2_1_7_get_interface_status_0001",
            "sa.profiles.Eltex.MES.tests.Eltex_MES_3124F_2_1_7_get_local_users_0001",
            "sa.profiles.Eltex.MES.tests.Eltex_MES_3124F_2_1_7_get_mac_address_table_0001",
            "sa.profiles.Eltex.MES.tests.Eltex_MES_3124F_2_1_7_get_portchannel_0001",
            "sa.profiles.Eltex.MES.tests.Eltex_MES_3124F_2_1_7_get_version_0001",
            "sa.profiles.Eltex.MES.tests.Eltex_MES_3124F_2_1_7_get_vlans_0001",
            "sa.profiles.Eltex.MES.tests.Eltex_MES_3124F_2_1_7_ping_0001",
            "sa.profiles.Eltex.MES.tests.Eltex_MES_3124F_2_1_7_ping_0002",
            "sa.profiles.Eltex.MES.tests.Eltex_MES_3124F_2_1_7_remove_vlan_0001",
            "sa.profiles.Ericsson",
            "sa.profiles.Ericsson.SEOS",
            "sa.profiles.Ericsson.SEOS.get_config",
            "sa.profiles.Ericsson.SEOS.get_version",
            "sa.profiles.Ericsson.SEOS.tests",
            "sa.profiles.Ericsson.SEOS.tests.Ericsson_SEOS_6_4_1_3_get_version_0001",
            "sa.profiles.Extreme",
            "sa.profiles.Extreme.XOS",
            "sa.profiles.Extreme.XOS.get_arp",
            "sa.profiles.Extreme.XOS.get_config",
            "sa.profiles.Extreme.XOS.get_interfaces",
            "sa.profiles.Extreme.XOS.get_mac_address_table",
            "sa.profiles.Extreme.XOS.get_version",
            "sa.profiles.Extreme.XOS.get_vlans",
            "sa.profiles.Extreme.XOS.highlight",
            "sa.profiles.Force10",
            "sa.profiles.Force10.FTOS",
            "sa.profiles.Force10.FTOS.add_vlan",
            "sa.profiles.Force10.FTOS.get_arp",
            "sa.profiles.Force10.FTOS.get_chassis_id",
            "sa.profiles.Force10.FTOS.get_config",
            "sa.profiles.Force10.FTOS.get_interface_status",
            "sa.profiles.Force10.FTOS.get_interfaces",
            "sa.profiles.Force10.FTOS.get_lldp_neighbors",
            "sa.profiles.Force10.FTOS.get_local_users",
            "sa.profiles.Force10.FTOS.get_mac_address_table",
            "sa.profiles.Force10.FTOS.get_portchannel",
            "sa.profiles.Force10.FTOS.get_spanning_tree",
            "sa.profiles.Force10.FTOS.get_switchport",
            "sa.profiles.Force10.FTOS.get_version",
            "sa.profiles.Force10.FTOS.get_vlans",
            "sa.profiles.Force10.FTOS.highlight",
            "sa.profiles.Force10.FTOS.ping",
            "sa.profiles.Force10.FTOS.remove_vlan",
            "sa.profiles.Force10.FTOS.set_switchport",
            "sa.profiles.Force10.FTOS.tests",
            "sa.profiles.Force10.FTOS.tests.Force10_C300_8_3_1_1_get_arp_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_C300_8_3_1_1_get_chassis_id_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_C300_8_3_1_1_get_lldp_neighbors_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_C300_8_3_1_1_get_lldp_neighbors_0002",
            "sa.profiles.Force10.FTOS.tests.Force10_C300_8_3_1_1_get_portchannel_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_C300_8_3_1_1_get_version_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_C300_8_3_1_1_get_version_0002",
            "sa.profiles.Force10.FTOS.tests.Force10_C300_8_3_2_0_get_version_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_C300_8_3_2_0_get_version_0002",
            "sa.profiles.Force10.FTOS.tests.Force10_E600i_8_3_1_3d_get_lldp_neighbors_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_E600i_8_3_1_3d_get_mac_address_table_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_E600i_8_3_1_3d_get_version_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_E600i_8_3_1_3d_get_version_0002",
            "sa.profiles.Force10.FTOS.tests.Force10_E600i_8_3_1_3e_get_chassis_id_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_E600i_8_3_1_3e_get_local_users_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_E600i_8_4_1_0_get_version_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_S25N_7_7_1_1_get_arp_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_S25N_7_7_1_1_get_spanning_tree_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_S25N_7_7_1_1_get_version_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_S25N_7_7_1_1_get_version_0002",
            "sa.profiles.Force10.FTOS.tests.Force10_S25N_7_7_7_1_get_interfaces_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_S25N_8_2_1_0_get_version_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_S25N_8_2_1_0_get_version_0002",
            "sa.profiles.Force10.FTOS.tests.Force10_S25N_8_4_2_4_get_portchannel_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_S25N_8_4_2_4_get_version_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_S50N_8_2_1_0_get_lldp_neighbors_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_S50N_8_2_1_0_get_lldp_neighbors_0002",
            "sa.profiles.Force10.FTOS.tests.Force10_S50N_8_2_1_0_get_version_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_S50N_8_2_1_0_get_version_0002",
            "sa.profiles.Force10.FTOS.tests.Force10_S50N_8_3_2_0_get_arp_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_S50N_8_3_2_0_get_chassis_id_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_S50N_8_3_2_0_get_interfaces_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_S50N_8_3_2_0_get_portchannel_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_S50N_8_3_2_0_get_spanning_tree_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_S50N_8_3_2_0_get_version_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_S50N_8_3_2_0_get_version_0002",
            "sa.profiles.Force10.FTOS.tests.Force10_S50N_8_4_2_1_get_version_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_S60_8_3_3_6_get_portchannel_0001",
            "sa.profiles.Force10.FTOS.tests.Force10_S60_8_3_3_6_get_version_0001",
            "sa.profiles.Force10.FTOS.tests.profile",
            "sa.profiles.Fortinet",
            "sa.profiles.Fortinet.Fortigate",
            "sa.profiles.Fortinet.Fortigate.get_config",
            "sa.profiles.Fortinet.Fortigate.get_version",
            "sa.profiles.Fortinet.Fortigate.highlight",
            "sa.profiles.Generic",
            "sa.profiles.Generic.commands",
            "sa.profiles.Generic.configure",
            "sa.profiles.Generic.get_http_get",
            "sa.profiles.Generic.get_ifindex",
            "sa.profiles.Generic.get_ip_discovery",
            "sa.profiles.Generic.get_snmp_get",
            "sa.profiles.Generic.get_snmp_getnext",
            "sa.profiles.Generic.get_topology_data",
            "sa.profiles.Generic.has_local_user",
            "sa.profiles.Generic.has_vlan",
            "sa.profiles.Generic.sync_vlans",
            "sa.profiles.H3C",
            "sa.profiles.H3C.VRP",
            "sa.profiles.H3C.VRP.get_arp",
            "sa.profiles.H3C.VRP.get_chassis_id",
            "sa.profiles.H3C.VRP.get_config",
            "sa.profiles.H3C.VRP.get_lldp_neighbors",
            "sa.profiles.H3C.VRP.get_mac_address_table",
            "sa.profiles.H3C.VRP.get_version",
            "sa.profiles.H3C.VRP.get_vlans",
            "sa.profiles.H3C.VRP.highlight",
            "sa.profiles.H3C.VRP.tests",
            "sa.profiles.H3C.VRP.tests.H3C_4200G_3_01_00s56_get_arp_0001",
            "sa.profiles.H3C.VRP.tests.H3C_4200G_3_01_00s56_get_chassis_id_0001",
            "sa.profiles.H3C.VRP.tests.H3C_4200G_3_01_00s56_get_mac_address_table_0001",
            "sa.profiles.H3C.VRP.tests.H3C_4200G_3_01_00s56_get_version_0001",
            "sa.profiles.H3C.VRP.tests.H3C_4200G_3_01_00s56_get_vlans_0001",
            "sa.profiles.H3C.VRP.tests.H3C_4500G_5_02_00s56p12_get_arp_0001",
            "sa.profiles.H3C.VRP.tests.H3C_4500G_5_02_00s56p12_get_chassis_id_0001",
            "sa.profiles.H3C.VRP.tests.H3C_4500G_5_02_00s56p12_get_lldp_neighbors_0001",
            "sa.profiles.H3C.VRP.tests.H3C_4500G_5_02_00s56p12_get_mac_address_table_0001",
            "sa.profiles.H3C.VRP.tests.H3C_4500G_5_02_00s56p12_get_version_0001",
            "sa.profiles.H3C.VRP.tests.H3C_4500G_5_02_00s56p12_get_vlans_0001",
            "sa.profiles.H3C.VRP.tests.H3C_4500_3_01_00s56p01_get_arp_0001",
            "sa.profiles.H3C.VRP.tests.H3C_4500_3_01_00s56p01_get_mac_address_table_0001",
            "sa.profiles.H3C.VRP.tests.H3C_4500_3_01_00s56p01_get_version_0001",
            "sa.profiles.H3C.VRP.tests.H3C_4500_3_03_02s56p05_get_arp_0001",
            "sa.profiles.H3C.VRP.tests.H3C_4500_3_03_02s56p05_get_chassis_id_0001",
            "sa.profiles.H3C.VRP.tests.H3C_4500_3_03_02s56p05_get_lldp_neighbors_0001",
            "sa.profiles.H3C.VRP.tests.H3C_4500_3_03_02s56p05_get_mac_address_table_0001",
            "sa.profiles.H3C.VRP.tests.H3C_4500_3_03_02s56p05_get_version_0001",
            "sa.profiles.H3C.VRP.tests.H3C_4500_3_03_02s56p05_get_vlans_0001",
            "sa.profiles.H3C.VRP.tests.H3C_5500G_EI_3_03_02s56p05_get_arp_0001",
            "sa.profiles.H3C.VRP.tests.H3C_5500G_EI_3_03_02s56p05_get_chassis_id_0001",
            "sa.profiles.H3C.VRP.tests.H3C_5500G_EI_3_03_02s56p05_get_lldp_neighbors_0001",
            "sa.profiles.H3C.VRP.tests.H3C_5500G_EI_3_03_02s56p05_get_mac_address_table_0001",
            "sa.profiles.H3C.VRP.tests.H3C_5500G_EI_3_03_02s56p05_get_version_0001",
            "sa.profiles.H3C.VRP.tests.H3C_5500G_EI_3_03_02s56p05_get_vlans_0001",
            "sa.profiles.H3C.VRP.tests.H3C_5500_EI_3_02_03s56_get_arp_0001",
            "sa.profiles.H3C.VRP.tests.H3C_5500_EI_3_02_03s56_get_chassis_id_0001",
            "sa.profiles.H3C.VRP.tests.H3C_5500_EI_3_02_03s56_get_mac_address_table_0001",
            "sa.profiles.H3C.VRP.tests.H3C_5500_EI_3_02_03s56_get_version_0001",
            "sa.profiles.H3C.VRP.tests.H3C_5500_EI_3_02_03s56_get_vlans_0001",
            "sa.profiles.H3C.VRP.tests.H3C_5500_EI_3_03_02s56ep05_get_arp_0001",
            "sa.profiles.H3C.VRP.tests.H3C_5500_EI_3_03_02s56ep05_get_chassis_id_0001",
            "sa.profiles.H3C.VRP.tests.H3C_5500_EI_3_03_02s56ep05_get_lldp_neighbors_0001",
            "sa.profiles.H3C.VRP.tests.H3C_5500_EI_3_03_02s56ep05_get_mac_address_table_0001",
            "sa.profiles.H3C.VRP.tests.H3C_5500_EI_3_03_02s56ep05_get_version_0001",
            "sa.profiles.H3C.VRP.tests.H3C_5500_EI_3_03_02s56ep05_get_vlans_0001",
            "sa.profiles.HP",
            "sa.profiles.HP.GbE2",
            "sa.profiles.HP.GbE2.add_vlan",
            "sa.profiles.HP.GbE2.get_arp",
            "sa.profiles.HP.GbE2.get_config",
            "sa.profiles.HP.GbE2.get_mac_address_table",
            "sa.profiles.HP.GbE2.get_version",
            "sa.profiles.HP.GbE2.get_vlans",
            "sa.profiles.HP.GbE2.highlight",
            "sa.profiles.HP.GbE2.remove_vlan",
            "sa.profiles.HP.GbE2.tests",
            "sa.profiles.HP.GbE2.tests.HP_GbE2c_2_0_0_get_version_0001",
            "sa.profiles.HP.ProCurve",
            "sa.profiles.HP.ProCurve.add_vlan",
            "sa.profiles.HP.ProCurve.get_arp",
            "sa.profiles.HP.ProCurve.get_chassis_id",
            "sa.profiles.HP.ProCurve.get_config",
            "sa.profiles.HP.ProCurve.get_interfaces",
            "sa.profiles.HP.ProCurve.get_lldp_neighbors",
            "sa.profiles.HP.ProCurve.get_mac_address_table",
            "sa.profiles.HP.ProCurve.get_portchannel",
            "sa.profiles.HP.ProCurve.get_spanning_tree",
            "sa.profiles.HP.ProCurve.get_version",
            "sa.profiles.HP.ProCurve.get_vlans",
            "sa.profiles.HP.ProCurve.highlight",
            "sa.profiles.HP.ProCurve.remove_vlan",
            "sa.profiles.HP.ProCurve.tests",
            "sa.profiles.HP.ProCurve.tests.HP_2510G_48_Y_11_16_get_arp_0001",
            "sa.profiles.HP.ProCurve.tests.HP_2510G_48_Y_11_16_get_chassis_id_0001",
            "sa.profiles.HP.ProCurve.tests.HP_2510G_48_Y_11_16_get_lldp_neighbors_0001",
            "sa.profiles.HP.ProCurve.tests.HP_2510G_48_Y_11_16_get_lldp_neighbors_0002",
            "sa.profiles.HP.ProCurve.tests.HP_2510G_48_Y_11_16_get_portchannel_0001",
            "sa.profiles.HP.ProCurve.tests.HP_2510G_48_Y_11_16_get_version_0001",
            "sa.profiles.HP.ProCurve.tests.HP_2510G_48_Y_11_16_get_vlans_0001",
            "sa.profiles.HP.ProCurve.tests.HP_2810_48G_N_11_09_get_arp_0001",
            "sa.profiles.HP.ProCurve.tests.HP_2810_48G_N_11_09_get_chassis_id_0001",
            "sa.profiles.HP.ProCurve.tests.HP_2810_48G_N_11_09_get_lldp_neighbors_0001",
            "sa.profiles.HP.ProCurve.tests.HP_2810_48G_N_11_09_get_lldp_neighbors_0002",
            "sa.profiles.HP.ProCurve.tests.HP_2810_48G_N_11_09_get_portchannel_0001",
            "sa.profiles.HP.ProCurve.tests.HP_2810_48G_N_11_09_get_spanning_tree_0001",
            "sa.profiles.HP.ProCurve.tests.HP_2810_48G_N_11_09_get_vlans_0001",
            "sa.profiles.HP.ProCurve.tests.HP_2848_I_10_43_get_arp_0001",
            "sa.profiles.HP.ProCurve.tests.HP_2848_I_10_43_get_chassis_id_0001",
            "sa.profiles.HP.ProCurve.tests.HP_2848_I_10_43_get_lldp_neighbors_0001",
            "sa.profiles.HP.ProCurve.tests.HP_2848_I_10_43_get_portchannel_0001",
            "sa.profiles.HP.ProCurve.tests.HP_2848_I_10_43_get_version_0001",
            "sa.profiles.HP.ProCurve.tests.HP_6120G_XG_Z_14_04_get_spanning_tree_0001",
            "sa.profiles.HP.ProCurve.tests.HP_6120G_XG_Z_14_08_get_arp_0001",
            "sa.profiles.HP.ProCurve.tests.HP_6120G_XG_Z_14_08_get_chassis_id_0001",
            "sa.profiles.HP.ProCurve.tests.HP_6120G_XG_Z_14_08_get_lldp_neighbors_0001",
            "sa.profiles.HP.ProCurve.tests.HP_6120G_XG_Z_14_08_get_mac_address_table_0001",
            "sa.profiles.HP.ProCurve.tests.HP_6120G_XG_Z_14_08_get_portchannel_0001",
            "sa.profiles.HP.ProCurve.tests.HP_6120G_XG_Z_14_08_get_version_0001",
            "sa.profiles.HP.ProCurve.tests.HP_6120G_XG_Z_14_08_get_vlans_0001",
            "sa.profiles.HP.ProCurve.tests.HP_6120G_XG_Z_14_22_get_version_0001",
            "sa.profiles.HP.ProCurve.tests.HP_6120XG_Z_14_08_get_lldp_neighbors_0001",
            "sa.profiles.HP.ProCurve.tests.HP_6120XG_Z_14_08_get_version_0001",
            "sa.profiles.HP.ProCurve.tests.profile",
            "sa.profiles.HP.ProCurve9xxx",
            "sa.profiles.HP.ProCurve9xxx.add_vlan",
            "sa.profiles.HP.ProCurve9xxx.get_arp",
            "sa.profiles.HP.ProCurve9xxx.get_chassis_id",
            "sa.profiles.HP.ProCurve9xxx.get_config",
            "sa.profiles.HP.ProCurve9xxx.get_fdp_neighbors",
            "sa.profiles.HP.ProCurve9xxx.get_fqdn",
            "sa.profiles.HP.ProCurve9xxx.get_interfaces",
            "sa.profiles.HP.ProCurve9xxx.get_mac_address_table",
            "sa.profiles.HP.ProCurve9xxx.get_portchannel",
            "sa.profiles.HP.ProCurve9xxx.get_spanning_tree",
            "sa.profiles.HP.ProCurve9xxx.get_version",
            "sa.profiles.HP.ProCurve9xxx.get_vlans",
            "sa.profiles.HP.ProCurve9xxx.highlight",
            "sa.profiles.HP.ProCurve9xxx.remove_vlan",
            "sa.profiles.HP.ProCurve9xxx.tests",
            "sa.profiles.HP.ProCurve9xxx.tests.HP_9304m_07_8_03T53_get_arp_0001",
            "sa.profiles.HP.ProCurve9xxx.tests.HP_9304m_07_8_03T53_get_chassis_id_0001",
            "sa.profiles.HP.ProCurve9xxx.tests.HP_9304m_07_8_03T53_get_fdp_neighbors_0001",
            "sa.profiles.HP.ProCurve9xxx.tests.HP_9304m_07_8_03T53_get_mac_address_table_0001",
            "sa.profiles.HP.ProCurve9xxx.tests.HP_9304m_07_8_03T53_get_portchannel_0001",
            "sa.profiles.HP.ProCurve9xxx.tests.HP_9304m_07_8_03T53_get_spanning_tree_0001",
            "sa.profiles.HP.ProCurve9xxx.tests.HP_9304m_07_8_03T53_get_version_0001",
            "sa.profiles.HP.ProCurve9xxx.tests.HP_9304m_07_8_03T53_get_vlans_0001",
            "sa.profiles.HP.iLO2",
            "sa.profiles.HP.iLO2.get_config",
            "sa.profiles.HP.iLO2.get_version",
            "sa.profiles.Huawei",
            "sa.profiles.Huawei.UMG8900",
            "sa.profiles.Huawei.UMG8900.get_config",
            "sa.profiles.Huawei.VRP",
            "sa.profiles.Huawei.VRP.add_vlan",
            "sa.profiles.Huawei.VRP.get_arp",
            "sa.profiles.Huawei.VRP.get_chassis_id",
            "sa.profiles.Huawei.VRP.get_config",
            "sa.profiles.Huawei.VRP.get_interface_status",
            "sa.profiles.Huawei.VRP.get_lldp_neighbors",
            "sa.profiles.Huawei.VRP.get_mac_address_table",
            "sa.profiles.Huawei.VRP.get_portchannel",
            "sa.profiles.Huawei.VRP.get_version",
            "sa.profiles.Huawei.VRP.get_vlans",
            "sa.profiles.Huawei.VRP.highlight",
            "sa.profiles.Huawei.VRP.remove_vlan",
            "sa.profiles.Huawei.VRP.tests",
            "sa.profiles.Huawei.VRP.tests.Huawei_Huawei_S2300_get_interface_status_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_Huawei_S2300_get_mac_address_table_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_Huawei_S2300_get_version_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_Huawei_S2300_get_vlans_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_MA5200G_8_5_30_get_version_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_NE40E_5_50_get_arp_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_NE40E_5_50_get_chassis_id_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_NE40E_5_50_get_interface_status_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_NE40E_5_50_get_interface_status_0002",
            "sa.profiles.Huawei.VRP.tests.Huawei_NE40E_5_50_get_lldp_neighbors_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_NE40E_5_50_get_mac_address_table_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_NE40E_5_50_get_portchannel_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_NE40E_5_50_get_version_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_NE40E_5_50_get_version_0002",
            "sa.profiles.Huawei.VRP.tests.Huawei_NE40E_5_50_get_vlans_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S2326TP-EI_5_70_get_arp_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S2326TP-EI_5_70_get_chassis_id_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S2326TP-EI_5_70_get_interface_status_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S2326TP-EI_5_70_get_mac_address_table_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S2326TP-EI_5_70_get_version_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S2326TP-EI_5_70_get_vlans_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S5328C_EI_24S_5_70_get_version_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S5328C_EI_24S_5_70_get_version_0002",
            "sa.profiles.Huawei.VRP.tests.Huawei_S8505_3_10_get_chassis_id_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S8505_3_10_get_version_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S8505_3_10_get_version_0002",
            "sa.profiles.Huawei.VRP.tests.Huawei_S8505_3_10_get_vlans_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S8512_3_10_get_arp_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S8512_3_10_get_chassis_id_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S8512_3_10_get_interface_status_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S8512_3_10_get_interface_status_0002",
            "sa.profiles.Huawei.VRP.tests.Huawei_S8512_3_10_get_version_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S8512_3_10_get_version_0002",
            "sa.profiles.Huawei.VRP.tests.Huawei_S8512_3_10_get_vlans_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S9303_5_70_get_version_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S9303_5_70_get_version_0002",
            "sa.profiles.Huawei.VRP.tests.Huawei_S9306_5_50_get_chassis_id_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S9306_5_50_get_lldp_neighbors_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S9306_5_50_get_lldp_neighbors_0002",
            "sa.profiles.Huawei.VRP.tests.Huawei_S9306_5_50_get_mac_address_table_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S9306_5_50_get_portchannel_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S9306_5_50_get_version_0001",
            "sa.profiles.Huawei.VRP.tests.Huawei_S9306_5_50_get_vlans_0001",
            "sa.profiles.Huawei.VRP3",
            "sa.profiles.Huawei.VRP3.get_chassis_id",
            "sa.profiles.Huawei.VRP3.get_config",
            "sa.profiles.Huawei.VRP3.get_mac_address_table",
            "sa.profiles.Huawei.VRP3.get_version",
            "sa.profiles.Huawei.VRP3.get_vlans",
            "sa.profiles.Huawei.VRP3.tests",
            "sa.profiles.Huawei.VRP3.tests.Huawei_MA5605_V100R011CHS_get_chassis_id_0001",
            "sa.profiles.Huawei.VRP3.tests.Huawei_MA5605_V100R011CHS_get_mac_address_table_0001",
            "sa.profiles.Huawei.VRP3.tests.Huawei_MA5605_V100R011CHS_get_version_0001",
            "sa.profiles.Huawei.VRP3.tests.Huawei_MA5605_V100R011CHS_get_vlans_0001",
            "sa.profiles.InfiNet",
            "sa.profiles.InfiNet.WANFlexX",
            "sa.profiles.InfiNet.WANFlexX.get_config",
            "sa.profiles.InfiNet.WANFlexX.get_version",
            "sa.profiles.Juniper",
            "sa.profiles.Juniper.JUNOS",
            "sa.profiles.Juniper.JUNOS.get_arp",
            "sa.profiles.Juniper.JUNOS.get_bfd_sessions",
            "sa.profiles.Juniper.JUNOS.get_config",
            "sa.profiles.Juniper.JUNOS.get_interfaces",
            "sa.profiles.Juniper.JUNOS.get_ipv6_neighbor",
            "sa.profiles.Juniper.JUNOS.get_lldp_neighbors",
            "sa.profiles.Juniper.JUNOS.get_mac_address_table",
            "sa.profiles.Juniper.JUNOS.get_mpls_vpn",
            "sa.profiles.Juniper.JUNOS.get_version",
            "sa.profiles.Juniper.JUNOS.get_vlans",
            "sa.profiles.Juniper.JUNOS.highlight",
            "sa.profiles.Juniper.JUNOS.sync_prefix_lists",
            "sa.profiles.Juniper.JUNOS.tests",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_ex3200_24t_10_0S1_1_get_lldp_neighbors_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_ex3200_24t_10_0S1_1_get_lldp_neighbors_0002",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_ex3200_24t_10_0S1_1_get_version_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_ex4200_24f_10_0R4_7_get_lldp_neighbors_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_ex4200_24f_10_0S1_1_get_version_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_ex4200_24t_10_4R6_5_get_version_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_j4350_10_0R3_10_get_version_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_mx480_10_2R2_11_get_version_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_mx480_9_3R4_4_get_version_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_mx480_9_6R1_13_get_version_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_mx80_11_1R3_5_get_version_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_mx80_11_2R1_10_get_version_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_olive_10_0R4_7_get_version_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_olive_10_4R5_5_get_bfd_sessions_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_olive_10_4R5_5_get_interfaces_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_olive_10_4R5_5_get_mpls_vpn_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_olive_10_4R5_5_get_version_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_olive_9_3R4_4_get_arp_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_olive_9_3R4_4_get_version_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_olive_9_3R4_4_get_version_0002",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_srx5600_10_0R2_10_get_version_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_srx650_10_3R1_9_get_version_0001",
            "sa.profiles.Juniper.JUNOS.tests.Juniper_srx650_10_4R2_7_get_version_0001",
            "sa.profiles.Juniper.JUNOSe",
            "sa.profiles.Juniper.JUNOSe.get_config",
            "sa.profiles.Juniper.JUNOSe.get_version",
            "sa.profiles.Juniper.JUNOSe.tests",
            "sa.profiles.Juniper.JUNOSe.tests.Juniper_ERX_310_10_0_0_release_0_0_get_version_0001",
            "sa.profiles.Juniper.JUNOSe.tests.Juniper_ERX_310_10_3_0_release_0_0_get_version_0001",
            "sa.profiles.Juniper.JUNOSe.tests.Juniper_ERX_310_9_2_0_patch_1_0_get_version_0001",
            "sa.profiles.Juniper.SRCPE",
            "sa.profiles.Juniper.SRCPE.get_config",
            "sa.profiles.Juniper.SRCPE.get_version",
            "sa.profiles.Juniper.ScreenOS",
            "sa.profiles.Juniper.ScreenOS.get_config",
            "sa.profiles.Juniper.ScreenOS.get_version",
            "sa.profiles.Juniper.ScreenOS.highlight",
            "sa.profiles.Juniper.ScreenOS.tests",
            "sa.profiles.Juniper.ScreenOS.tests.Juniper_NetScreen_2000_6_3_0r4_0_get_version_0001",
            "sa.profiles.Juniper.ScreenOS.tests.Juniper_NetScreen_204_5_4_0r18_0_get_version_0001",
            "sa.profiles.Linksys",
            "sa.profiles.Linksys.SPS2xx",
            "sa.profiles.Linksys.SPS2xx.add_vlan",
            "sa.profiles.Linksys.SPS2xx.get_arp",
            "sa.profiles.Linksys.SPS2xx.get_chassis_id",
            "sa.profiles.Linksys.SPS2xx.get_config",
            "sa.profiles.Linksys.SPS2xx.get_fqdn",
            "sa.profiles.Linksys.SPS2xx.get_interface_status",
            "sa.profiles.Linksys.SPS2xx.get_lldp_neighbors",
            "sa.profiles.Linksys.SPS2xx.get_local_users",
            "sa.profiles.Linksys.SPS2xx.get_mac_address_table",
            "sa.profiles.Linksys.SPS2xx.get_portchannel",
            "sa.profiles.Linksys.SPS2xx.get_switchport",
            "sa.profiles.Linksys.SPS2xx.get_version",
            "sa.profiles.Linksys.SPS2xx.get_vlans",
            "sa.profiles.Linksys.SPS2xx.highlight",
            "sa.profiles.Linksys.SPS2xx.ping",
            "sa.profiles.Linksys.SPS2xx.remove_vlan",
            "sa.profiles.Linksys.SPS2xx.tests",
            "sa.profiles.Linksys.SPS2xx.tests.Linksys_SPS_224G4_1_0_2_add_vlan_0001",
            "sa.profiles.Linksys.SPS2xx.tests.Linksys_SPS_224G4_1_0_2_get_arp_0001",
            "sa.profiles.Linksys.SPS2xx.tests.Linksys_SPS_224G4_1_0_2_get_chassis_id_0001",
            "sa.profiles.Linksys.SPS2xx.tests.Linksys_SPS_224G4_1_0_2_get_fqdn_0001",
            "sa.profiles.Linksys.SPS2xx.tests.Linksys_SPS_224G4_1_0_2_get_interface_status_0001",
            "sa.profiles.Linksys.SPS2xx.tests.Linksys_SPS_224G4_1_0_2_get_local_users_0001",
            "sa.profiles.Linksys.SPS2xx.tests.Linksys_SPS_224G4_1_0_2_get_mac_address_table_0001",
            "sa.profiles.Linksys.SPS2xx.tests.Linksys_SPS_224G4_1_0_2_get_switchport_0001",
            "sa.profiles.Linksys.SPS2xx.tests.Linksys_SPS_224G4_1_0_2_get_version_0001",
            "sa.profiles.Linksys.SPS2xx.tests.Linksys_SPS_224G4_1_0_2_get_vlans_0001",
            "sa.profiles.Linksys.SPS2xx.tests.Linksys_SPS_224G4_1_0_2_ping_0001",
            "sa.profiles.Linksys.SPS2xx.tests.Linksys_SPS_224G4_1_0_2_remove_vlan_0001",
            "sa.profiles.Linksys.VoIP",
            "sa.profiles.Linksys.VoIP.get_chassis_id",
            "sa.profiles.Linksys.VoIP.get_config",
            "sa.profiles.Linksys.VoIP.get_version",
            "sa.profiles.Linksys.VoIP.highlight",
            "sa.profiles.Linksys.VoIP.tests",
            "sa.profiles.Linksys.VoIP.tests.Linksys_PAP2T_5_1_5_LS__get_config_0001",
            "sa.profiles.Linksys.VoIP.tests.Linksys_PAP2T_5_1_5_LS__get_version_0001",
            "sa.profiles.Linksys.VoIP.tests.Linksys_SPA8000_6_1_10_001__get_config_0001",
            "sa.profiles.Linksys.VoIP.tests.Linksys_SPA8000_6_1_10_001__get_version_0001",
            "sa.profiles.Linksys.VoIP.tests.Linksys_SPA_2102_3_3_6_get_chassis_id_0001",
            "sa.profiles.Linksys.VoIP.tests.Linksys_SPA_2102_3_3_6_get_config_0001",
            "sa.profiles.Linksys.VoIP.tests.Linksys_SPA_2102_3_3_6_get_version_0001",
            "sa.profiles.Linksys.VoIP.tests.Linksys_SPA_962_6_1_5_a__get_config_0001",
            "sa.profiles.Linksys.VoIP.tests.Linksys_SPA_962_6_1_5_a__get_version_0001",
            "sa.profiles.MikroTik",
            "sa.profiles.MikroTik.RouterOS",
            "sa.profiles.MikroTik.RouterOS.get_arp",
            "sa.profiles.MikroTik.RouterOS.get_config",
            "sa.profiles.MikroTik.RouterOS.get_license",
            "sa.profiles.MikroTik.RouterOS.get_version",
            "sa.profiles.MikroTik.RouterOS.get_vlans",
            "sa.profiles.MikroTik.RouterOS.tests",
            "sa.profiles.MikroTik.RouterOS.tests.MikroTik_RB750GL_5_12_get_version_0001",
            "sa.profiles.MikroTik.RouterOS.tests.MikroTik_RB750GL_5_12_get_vlans_0001",
            "sa.profiles.MikroTik.RouterOS.tests.MikroTik_x86_5_4_get_arp_0001",
            "sa.profiles.MikroTik.RouterOS.tests.MikroTik_x86_5_4_get_license_0001",
            "sa.profiles.MikroTik.RouterOS.tests.MikroTik_x86_5_4_get_version_0001",
            "sa.profiles.NOC",
            "sa.profiles.NOC.SAE",
            "sa.profiles.NOC.SAE.get_activator_status",
            "sa.profiles.NOC.SAE.get_config",
            "sa.profiles.NOC.SAE.get_objects_status",
            "sa.profiles.NOC.SAE.get_version",
            "sa.profiles.NOC.SAE.notify",
            "sa.profiles.NOC.SAE.ping_check",
            "sa.profiles.NSN",
            "sa.profiles.NSN.hiX56xx",
            "sa.profiles.NSN.hiX56xx.get_arp",
            "sa.profiles.NSN.hiX56xx.get_config",
            "sa.profiles.NSN.hiX56xx.get_mac_address_table",
            "sa.profiles.NSN.hiX56xx.get_version",
            "sa.profiles.NSN.hiX56xx.get_vlans",
            "sa.profiles.NSN.hiX56xx.tests",
            "sa.profiles.NSN.hiX56xx.tests.NSN_hiX56xx_R2_8_get_arp_0001",
            "sa.profiles.NSN.hiX56xx.tests.NSN_hiX56xx_R2_8_get_mac_address_table_0001",
            "sa.profiles.NSN.hiX56xx.tests.NSN_hiX56xx_R2_8_get_version_0001",
            "sa.profiles.NSN.hiX56xx.tests.NSN_hiX56xx_R2_8_get_vlans_0001",
            "sa.profiles.Nortel",
            "sa.profiles.Nortel.BayStack425",
            "sa.profiles.Nortel.BayStack425.get_config",
            "sa.profiles.Nortel.BayStack425.get_mac_address_table",
            "sa.profiles.Nortel.BayStack425.get_version",
            "sa.profiles.Nortel.BayStack425.get_vlans",
            "sa.profiles.Nortel.BayStack425.highlight",
            "sa.profiles.Nortel.BayStack425.tests",
            "sa.profiles.Nortel.BayStack425.tests.Nortel_Ethernet_Switch_425_24T_v3_6_0_01_get_mac_address_table_0001",
            "sa.profiles.Nortel.BayStack425.tests.Nortel_Ethernet_Switch_425_24T_v3_6_0_01_get_version_0001",
            "sa.profiles.Nortel.BayStack425.tests.Nortel_Ethernet_Switch_425_24T_v3_6_0_01_get_vlans_0001",
            "sa.profiles.OS",
            "sa.profiles.OS.FreeBSD",
            "sa.profiles.OS.FreeBSD.get_arp",
            "sa.profiles.OS.FreeBSD.get_fqdn",
            "sa.profiles.OS.FreeBSD.get_interface_status",
            "sa.profiles.OS.FreeBSD.get_local_users",
            "sa.profiles.OS.FreeBSD.get_resolver_config",
            "sa.profiles.OS.FreeBSD.get_version",
            "sa.profiles.OS.FreeBSD.get_vlans",
            "sa.profiles.OS.FreeBSD.ping",
            "sa.profiles.OS.FreeBSD.tests",
            "sa.profiles.OS.FreeBSD.tests.OS_amd64_8_1_STABLE_get_arp_0001",
            "sa.profiles.OS.FreeBSD.tests.OS_amd64_8_1_STABLE_get_version_0001",
            "sa.profiles.OS.FreeBSD.tests.OS_amd64_8_2_PRERELEASE_get_fqdn_0001",
            "sa.profiles.OS.FreeBSD.tests.OS_amd64_8_2_PRERELEASE_get_vlans_0001",
            "sa.profiles.OS.FreeBSD.tests.OS_amd64_8_2_PRERELEASE_ping_0001",
            "sa.profiles.OS.FreeBSD.tests.OS_amd64_8_2_STABLE_get_interface_status_0001",
            "sa.profiles.OS.FreeBSD.tests.OS_amd64_8_2_STABLE_get_local_users_0001",
            "sa.profiles.OS.FreeBSD.tests.OS_i386_7_3_RELEASE_p3_get_interface_status_0001",
            "sa.profiles.OS.Linux",
            "sa.profiles.OS.Linux.get_arp",
            "sa.profiles.OS.Linux.get_chassis_id",
            "sa.profiles.OS.Linux.get_config",
            "sa.profiles.OS.Linux.get_fqdn",
            "sa.profiles.OS.Linux.get_interface_status",
            "sa.profiles.OS.Linux.get_local_users",
            "sa.profiles.OS.Linux.get_mac_address_table",
            "sa.profiles.OS.Linux.get_version",
            "sa.profiles.OS.Linux.get_vlans",
            "sa.profiles.OS.Linux.highlight",
            "sa.profiles.OS.Linux.ping",
            "sa.profiles.OS.Linux.tests",
            "sa.profiles.OS.Linux.tests.OS_NanoStation2_3_6_1_4866_110330_1244_get_arp_0001",
            "sa.profiles.OS.Linux.tests.OS_NanoStation2_3_6_1_4866_110330_1244_get_chassis_id_0001",
            "sa.profiles.OS.Linux.tests.OS_NanoStation2_3_6_1_4866_110330_1244_get_interface_status_0001",
            "sa.profiles.OS.Linux.tests.OS_NanoStation2_3_6_1_4866_110330_1244_get_local_users_0001",
            "sa.profiles.OS.Linux.tests.OS_NanoStation2_3_6_1_4866_110330_1244_get_version_0001",
            "sa.profiles.OS.Linux.tests.OS_NanoStation2_3_6_1_4866_110330_1244_get_vlans_0001",
            "sa.profiles.OS.Linux.tests.OS_NanoStation2_3_6_1_4866_110330_1244_ping_0001",
            "sa.profiles.OS.Linux.tests.OS_NanoStation2_3_6_1_4866_110330_1244_ping_0002",
            "sa.profiles.OS.Linux.tests.OS_RG_14xx_1_0_get_arp_0001",
            "sa.profiles.OS.Linux.tests.OS_RG_14xx_1_0_get_chassis_id_0001",
            "sa.profiles.OS.Linux.tests.OS_RG_14xx_1_0_get_fqdn_0001",
            "sa.profiles.OS.Linux.tests.OS_RG_14xx_1_0_get_interface_status_0001",
            "sa.profiles.OS.Linux.tests.OS_RG_14xx_1_0_get_local_users_0001",
            "sa.profiles.OS.Linux.tests.OS_RG_14xx_1_0_get_version_0001",
            "sa.profiles.OS.Linux.tests.OS_RG_14xx_1_0_get_vlans_0001",
            "sa.profiles.OS.Linux.tests.OS_RG_14xx_1_0_ping_0001",
            "sa.profiles.OS.Linux.tests.OS_RG_14xx_1_0_ping_0002",
            "sa.profiles.OS.Linux.tests.OS_i686_Gentoo_Base_System_release_2_0_3_get_arp_0001",
            "sa.profiles.OS.Linux.tests.OS_i686_Gentoo_Base_System_release_2_0_3_ping_0001",
            "sa.profiles.Protei",
            "sa.profiles.Protei.MediaGateway",
            "sa.profiles.Protei.MediaGateway.get_config",
            "sa.profiles.Protei.MediaGateway.get_version",
            "sa.profiles.Raisecom",
            "sa.profiles.Raisecom.ROS",
            "sa.profiles.Raisecom.ROS.get_config",
            "sa.profiles.Raisecom.ROS.get_version",
            "sa.profiles.Raisecom.ROS.highlight",
            "sa.profiles.Raritan",
            "sa.profiles.Raritan.DominionSX",
            "sa.profiles.Raritan.DominionSX.get_config",
            "sa.profiles.Raritan.DominionSX.get_version",
            "sa.profiles.Sun",
            "sa.profiles.Sun.iLOM3",
            "sa.profiles.Sun.iLOM3.get_config",
            "sa.profiles.Sun.iLOM3.get_version",
            "sa.profiles.Sun.iLOM3.highlight",
            "sa.profiles.Ubiquiti",
            "sa.profiles.Ubiquiti.AirOS",
            "sa.profiles.Ubiquiti.AirOS.get_config",
            "sa.profiles.Ubiquiti.AirOS.get_version",
            "sa.profiles.Vyatta",
            "sa.profiles.Vyatta.Vyatta",
            "sa.profiles.Vyatta.Vyatta.get_arp",
            "sa.profiles.Vyatta.Vyatta.get_config",
            "sa.profiles.Vyatta.Vyatta.get_version",
            "sa.profiles.Vyatta.Vyatta.tests",
            "sa.profiles.Vyatta.Vyatta.tests.Vyatta_VC_VC6_1_2010_08_20_get_arp_0001",
            "sa.profiles.Vyatta.Vyatta.tests.Vyatta_VC_VC6_1_2010_08_20_get_version_0001",
            "sa.profiles.Vyatta.Vyatta.tests.Vyatta_Vyatta_VC6_1_2010_10_16_get_arp_0001",
            "sa.profiles.Vyatta.Vyatta.tests.Vyatta_Vyatta_VC6_1_2010_10_16_get_version_0001",
            "sa.profiles.ZTE",
            "sa.profiles.ZTE.ZXDSL531",
            "sa.profiles.ZTE.ZXDSL531.get_config",
            "sa.profiles.ZTE.ZXDSL531.get_dot11_associations",
            "sa.profiles.ZTE.ZXDSL531.get_version",
            "sa.profiles.ZTE.ZXDSL531.highlight",
            "sa.profiles.ZTE.ZXR10",
            "sa.profiles.ZTE.ZXR10.get_config",
            "sa.profiles.ZTE.ZXR10.get_version",
            "sa.profiles.ZTE.ZXR10.tests",
            "sa.profiles.ZTE.ZXR10.tests.ZTE_ZXR10_8912_V2_8_02_C_43_P14_get_version_0001",
            "sa.profiles.Zebra",
            "sa.profiles.Zebra.Zebra",
            "sa.profiles.Zebra.Zebra.get_config",
            "sa.profiles.Zebra.Zebra.get_version",
            "sa.profiles.Zebra.Zebra.highlight",
            "sa.profiles.Zebra.Zebra.tests",
            "sa.profiles.Zebra.Zebra.tests.Zebra_Quagga_0_99_15_get_version_0001",
            "sa.profiles.Zyxel",
            "sa.profiles.Zyxel.ZyNOS",
            "sa.profiles.Zyxel.ZyNOS.add_vlan",
            "sa.profiles.Zyxel.ZyNOS.get_arp",
            "sa.profiles.Zyxel.ZyNOS.get_chassis_id",
            "sa.profiles.Zyxel.ZyNOS.get_config",
            "sa.profiles.Zyxel.ZyNOS.get_interface_status",
            "sa.profiles.Zyxel.ZyNOS.get_interfaces",
            "sa.profiles.Zyxel.ZyNOS.get_mac_address_table",
            "sa.profiles.Zyxel.ZyNOS.get_portchannel",
            "sa.profiles.Zyxel.ZyNOS.get_switchport",
            "sa.profiles.Zyxel.ZyNOS.get_version",
            "sa.profiles.Zyxel.ZyNOS.get_vlans",
            "sa.profiles.Zyxel.ZyNOS.highlight",
            "sa.profiles.Zyxel.ZyNOS.ping",
            "sa.profiles.Zyxel.ZyNOS.remove_vlan",
            "sa.profiles.Zyxel.ZyNOS.tests",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_ES_2024A_3_80_TX_0__get_chassis_id_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_ES_2024A_3_80_TX_0__get_portchannel_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_ES_2024A_3_80_TX_0__get_switchport_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_ES_2024A_3_80_TX_0__get_vlans_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_ES_2024A_3_80_TX_0__get_vlans_0002",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_ES_2024A_3_80_TX_0__ping_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_ES_2024A_3_90_TX_0__get_chassis_id_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_ES_2024A_3_90_TX_1__get_arp_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_ES_2024A_3_90_TX_1__get_interface_status_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_ES_2024A_3_90_TX_1__get_mac_address_table_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_ES_2024A_3_90_TX_1__get_version_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_ES_2108_G_3_70_ABL_0__get_version_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_ES_2108_G_3_80_ABL_0__get_arp_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_ES_2108_G_3_80_ABL_0__get_chassis_id_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_ES_2108_G_3_80_ABL_0__get_interface_status_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_ES_2108_G_3_80_ABL_0__get_interfaces_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_ES_2108_G_3_80_ABL_0__get_mac_address_table_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_ES_2108_G_3_80_ABL_0__get_vlans_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_ES_2108_G_3_80_ABL_0__ping_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_3012F_3_70_LR_1__get_version_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_3012F_3_80_LR_2__get_version_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_3012_3_80_LH_2__get_arp_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_3012_3_80_LH_2__get_chassis_id_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_3012_3_80_LH_2__get_interface_status_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_3012_3_80_LH_2__get_interfaces_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_3012_3_80_LH_2__get_mac_address_table_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_3012_3_80_LH_2__get_version_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_3012_3_80_LH_2__ping_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_4012F_3_70_TS_0__get_portchannel_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_4012F_3_70_TS_0__get_switchport_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_4012F_3_80_TS_0__get_interface_status_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_4012F_3_80_TS_4__get_arp_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_4012F_3_80_TS_4__get_chassis_id_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_4012F_3_80_TS_4__get_interfaces_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_4012F_3_80_TS_4__get_interfaces_0002",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_4012F_3_80_TS_4__get_mac_address_table_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_4012F_3_80_TS_4__get_switchport_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_4012F_3_80_TS_4__get_version_0001",
            "sa.profiles.Zyxel.ZyNOS.tests.Zyxel_GS_4012F_3_80_TS_4__ping_0001",
            "sa.profiles.Zyxel.ZyNOS_EE",
            "sa.profiles.Zyxel.ZyNOS_EE.get_arp",
            "sa.profiles.Zyxel.ZyNOS_EE.get_chassis_id",
            "sa.profiles.Zyxel.ZyNOS_EE.get_interface_status",
            "sa.profiles.Zyxel.ZyNOS_EE.get_mac_address_table",
            "sa.profiles.Zyxel.ZyNOS_EE.get_version",
            "sa.profiles.Zyxel.ZyNOS_EE.get_vlans",
            "sa.profiles.Zyxel.ZyNOS_EE.highlight",
            "sa.profiles.Zyxel.ZyNOS_EE.ping",
            "sa.profiles.Zyxel.ZyNOS_EE.tests",
            "sa.profiles.Zyxel.ZyNOS_EE.tests.Zyxel_ES_2024EE_3_50_LI_2__get_arp_0001",
            "sa.profiles.Zyxel.ZyNOS_EE.tests.Zyxel_ES_2024EE_3_50_LI_2__get_chassis_id_0001",
            "sa.profiles.Zyxel.ZyNOS_EE.tests.Zyxel_ES_2024EE_3_50_LI_2__get_interface_status_0001",
            "sa.profiles.Zyxel.ZyNOS_EE.tests.Zyxel_ES_2024EE_3_50_LI_2__get_mac_address_table_0001",
            "sa.profiles.Zyxel.ZyNOS_EE.tests.Zyxel_ES_2024EE_3_50_LI_2__get_version_0001",
            "sa.profiles.Zyxel.ZyNOS_EE.tests.Zyxel_ES_2024EE_3_50_LI_2__get_vlans_0001",
            "sa.profiles.Zyxel.ZyNOS_EE.tests.Zyxel_ES_4024EE_3_50_DU_1__get_arp_0001",
            "sa.profiles.Zyxel.ZyNOS_EE.tests.Zyxel_ES_4024EE_3_50_DU_1__get_chassis_id_0001",
            "sa.profiles.Zyxel.ZyNOS_EE.tests.Zyxel_ES_4024EE_3_50_DU_1__get_version_0001",
            "sa.profiles.Zyxel.ZyNOS_EE.tests.Zyxel_ES_4024EE_3_50_DU_1__get_vlans_0001",
            "sa.profiles.Zyxel.ZyNOSv2",
            "sa.profiles.Zyxel.ZyNOSv2.get_config",
            "sa.profiles.Zyxel.ZyNOSv2.get_version",
            "sa.profiles.Zyxel.ZyNOSv2.highlight",
            "sa.profiles.Zyxel.ZyNOSv2.tests",
            "sa.profiles.Zyxel.ZyNOSv2.tests.Zyxel_IES-1000_AAM1008-61_V2_05_DN_3_C0__get_version_0001",
            "sa.profiles.f5",
            "sa.profiles.f5.BIGIP",
            "sa.profiles.f5.BIGIP.get_arp",
            "sa.profiles.f5.BIGIP.get_config",
            "sa.profiles.f5.BIGIP.get_license",
            "sa.profiles.f5.BIGIP.get_version",
            "sa.profiles.f5.BIGIP.get_vlans",
            "sa.profiles.f5.BIGIP.highlight",
            "sa.profiles.f5.BIGIP.ping",
            "sa.profiles.f5.BIGIP.tests",
            "sa.profiles.f5.BIGIP.tests.f5_BIG_IP_10_2_0_1707_0_get_version_0001",
            "sa.profiles.f5.BIGIP.tests.f5_BIG_IP_10_2_0_1707_0_get_vlans_0001",
            "sa.profiles.f5.BIGIP.tests.f5_BIG_IP_10_2_1_297_0_get_license_0001",
            "sa.profiles.f5.BIGIP.tests.f5_BIG_IP_10_2_1_297_0_get_license_0002",
            "sa.protocols",
            "sa.protocols.pm_pb2",
            "sa.protocols.sae_pb2",
            "sa.rpc",
            "sa.sae",
            "sa.sae.sae",
            "sa.sae.sae_socket",
            "sa.sae.service",
            "sa.script",
            "sa.script.cli",
            "sa.script.context",
            "sa.script.exception",
            "sa.script.http",
            "sa.script.script",
            "sa.script.snmp",
            "sa.script.ssh",
            "sa.script.ssh.keys",
            "sa.script.ssh.transform",
            "sa.script.ssh.transport",
            "sa.script.ssh.util",
            "sa.script.telnet",
            "sa.tests",
            "sa.tests.activator",
            "sa.tests.interface",
            "sa.tests.mrt",
            "sa.tests.ssh_key",
            "settings",
            "tests",
            "tests.code",
            "tests.models",
            "tests.module_names",
            "urls",
            "vc",
            "vc.apps",
            "vc.apps.vc",
            "vc.apps.vc.tests",
            "vc.apps.vc.tests.test",
            "vc.apps.vc.views",
            "vc.apps.vcbindfilter",
            "vc.apps.vcbindfilter.tests",
            "vc.apps.vcbindfilter.tests.test",
            "vc.apps.vcbindfilter.views",
            "vc.apps.vcdomain",
            "vc.apps.vcdomain.tests",
            "vc.apps.vcdomain.tests.test",
            "vc.apps.vcdomain.views",
            "vc.apps.vcfilter",
            "vc.apps.vcfilter.tests",
            "vc.apps.vcfilter.tests.test",
            "vc.apps.vcfilter.views",
            "vc.apps.vctype",
            "vc.apps.vctype.tests",
            "vc.apps.vctype.tests.test",
            "vc.apps.vctype.views",
            "vc.caches",
            "vc.migrations",
            "vc.migrations.0001_initial",
            "vc.migrations.0002_default_vc_domain",
            "vc.migrations.0003_vc_type",
            "vc.migrations.0004_move_type",
            "vc.migrations.0005_alter_type",
            "vc.migrations.0006_vc_provisioning",
            "vc.migrations.0007_new_vcdomainprovisioningconfig",
            "vc.migrations.0008_vc_name",
            "vc.migrations.0009_vc_filter",
            "vc.migrations.0010_vcdomainprobvisioningconfig_vcfilter",
            "vc.migrations.0011_vc_bind_filter",
            "vc.migrations.0012_tags",
            "vc.migrations.0013_vcbindfilter_afi",
            "vc.migrations.0014_vc_domain_selector",
            "vc.migrations.0015_vc_style",
            "vc.models",
            "vc.periodics",
            "vc.periodics.update_cache",
            "vc.periodics.vc_provisioning",
            "vc.tests",
            "vc.tests.vc",
            "vc.tests.vctype"
        ],
        "version": "0.7(3)"
    },
    "nocaptcha": {
        "cmdline": [],
        "modules": [
            "nocaptcha",
            "nocaptcha.forms"
        ],
        "version": "0.3"
    },
    "nocase": {
        "cmdline": [],
        "modules": [
            "nocase",
            "nocase.nocase"
        ],
        "version": "1.1.2"
    },
    "nocexec": {
        "cmdline": [],
        "modules": [
            "nocexec",
            "nocexec.exception"
        ],
        "version": "0.2a0"
    },
    "nock": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.1"
    },
    "nocolon": {
        "cmdline": [],
        "modules": [
            "nocolon"
        ],
        "version": "0.0.2"
    },
    "nocrux": {
        "cmdline": [],
        "modules": [
            "nocrux"
        ],
        "version": "2.0.2"
    },
    "nod2svg": {
        "cmdline": [],
        "modules": [
            "nod2svg",
            "nod2svg.constants",
            "nod2svg.main"
        ],
        "version": "0.1.2"
    },
    "nodata": {
        "cmdline": [],
        "modules": [
            "nodata",
            "nodata.alphamask",
            "nodata.blob",
            "nodata.scripts",
            "nodata.scripts.alpha",
            "nodata.scripts.cli"
        ],
        "version": "0.4.2"
    },
    "nodb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nodder": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "node": {
        "cmdline": [],
        "modules": [
            "node",
            "node.base",
            "node.behaviors",
            "node.behaviors.alias",
            "node.behaviors.attributes",
            "node.behaviors.cache",
            "node.behaviors.common",
            "node.behaviors.fallback",
            "node.behaviors.lifecycle",
            "node.behaviors.mapping",
            "node.behaviors.nodespace",
            "node.behaviors.nodify",
            "node.behaviors.order",
            "node.behaviors.reference",
            "node.behaviors.storage",
            "node.events",
            "node.interfaces",
            "node.locking",
            "node.parts",
            "node.serializer",
            "node.testing",
            "node.testing.base",
            "node.testing.env",
            "node.testing.fullmapping",
            "node.testing.profiling",
            "node.tests",
            "node.utils"
        ],
        "version": "0.9.18.1"
    },
    "node-semver": {
        "cmdline": [],
        "modules": [
            "semver",
            "semver.tests",
            "semver.tests.test_comparators",
            "semver.tests.test_comparison",
            "semver.tests.test_equality",
            "semver.tests.test_increment_version",
            "semver.tests.test_invalid_version_number",
            "semver.tests.test_max_satisfying",
            "semver.tests.test_negative_range",
            "semver.tests.test_range",
            "semver.tests.test_recovery",
            "semver.tests.test_strict_vs_loose_version_number",
            "semver.tests.test_valid_range"
        ],
        "version": "0.1.1"
    },
    "node-vm2": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.1"
    },
    "node.ext.directory": {
        "cmdline": [],
        "modules": [
            "node",
            "node.ext",
            "node.ext.directory",
            "node.ext.directory.directory",
            "node.ext.directory.events",
            "node.ext.directory.interfaces",
            "node.ext.directory.tests"
        ],
        "version": "0.6"
    },
    "node.ext.ldap": {
        "cmdline": [],
        "modules": [
            "node",
            "node.ext",
            "node.ext.ldap",
            "node.ext.ldap._node",
            "node.ext.ldap.base",
            "node.ext.ldap.cache",
            "node.ext.ldap.events",
            "node.ext.ldap.filter",
            "node.ext.ldap.interfaces",
            "node.ext.ldap.main",
            "node.ext.ldap.properties",
            "node.ext.ldap.schema",
            "node.ext.ldap.scope",
            "node.ext.ldap.session",
            "node.ext.ldap.testing",
            "node.ext.ldap.tests",
            "node.ext.ldap.ugm",
            "node.ext.ldap.ugm._api",
            "node.ext.ldap.ugm.defaults",
            "node.ext.ldap.ugm.posix",
            "node.ext.ldap.ugm.samba",
            "node.ext.ldap.ugm.shadow"
        ],
        "version": "1.0b3"
    },
    "node.ext.python": {
        "cmdline": [],
        "modules": [
            "node",
            "node.ext",
            "node.ext.python",
            "node.ext.python.goparser",
            "node.ext.python.interfaces",
            "node.ext.python.nodes",
            "node.ext.python.parser",
            "node.ext.python.renderer",
            "node.ext.python.testing",
            "node.ext.python.tests",
            "node.ext.python.utils"
        ],
        "version": "0.1"
    },
    "node.ext.template": {
        "cmdline": [],
        "modules": [
            "node",
            "node.ext",
            "node.ext.template",
            "node.ext.template.codesectionhandler",
            "node.ext.template.interfaces",
            "node.ext.template.template",
            "node.ext.template.tests"
        ],
        "version": "0.1"
    },
    "node.ext.ugm": {
        "cmdline": [],
        "modules": [
            "node",
            "node.ext",
            "node.ext.ugm",
            "node.ext.ugm._api",
            "node.ext.ugm.file",
            "node.ext.ugm.interfaces",
            "node.ext.ugm.tests"
        ],
        "version": "0.9.8"
    },
    "node.ext.uml": {
        "cmdline": [],
        "modules": [
            "node",
            "node.ext",
            "node.ext.uml",
            "node.ext.uml.activities",
            "node.ext.uml.classes",
            "node.ext.uml.core",
            "node.ext.uml.interfaces",
            "node.ext.uml.testing",
            "node.ext.uml.testing.env",
            "node.ext.uml.tests",
            "node.ext.uml.utils"
        ],
        "version": "0.1"
    },
    "node.ext.xmi": {
        "cmdline": [],
        "modules": [
            "node",
            "node.ext",
            "node.ext.xmi",
            "node.ext.xmi._api",
            "node.ext.xmi.interfaces",
            "node.ext.xmi.testing",
            "node.ext.xmi.tests"
        ],
        "version": "0.1"
    },
    "node.ext.xml": {
        "cmdline": [],
        "modules": [
            "node",
            "node.ext",
            "node.ext.xml",
            "node.ext.xml._api",
            "node.ext.xml.interfaces",
            "node.ext.xml.testing",
            "node.ext.xml.tests"
        ],
        "version": "0.1"
    },
    "node.ext.zcml": {
        "cmdline": [],
        "modules": [
            "node",
            "node.ext",
            "node.ext.zcml",
            "node.ext.zcml._api",
            "node.ext.zcml.interfaces",
            "node.ext.zcml.testing",
            "node.ext.zcml.tests"
        ],
        "version": "0.1"
    },
    "node.ext.zodb": {
        "cmdline": [],
        "modules": [
            "node",
            "node.ext",
            "node.ext.zodb",
            "node.ext.zodb.behaviors",
            "node.ext.zodb.interfaces",
            "node.ext.zodb.tests",
            "node.ext.zodb.utils"
        ],
        "version": "1.0.1"
    },
    "node.py": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.19"
    },
    "nodebox": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nodebox-color": {
        "cmdline": [],
        "modules": [
            "colors",
            "colors.colors_example1",
            "colors.colors_example2",
            "colors.colors_example3",
            "colors.colors_example4",
            "colors.colors_example5",
            "colors.colors_example6",
            "colors.colors_example7",
            "colors.colors_example8",
            "colors.colors_example9",
            "colors.favorites"
        ],
        "version": "2.0.1"
    },
    "nodebox-for-opengl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nodebox-opengl": {
        "cmdline": [],
        "modules": [
            "nodebox",
            "nodebox.ext",
            "nodebox.ext.psyco",
            "nodebox.ext.psyco.classes",
            "nodebox.ext.psyco.core",
            "nodebox.ext.psyco.kdictproxy",
            "nodebox.ext.psyco.logger",
            "nodebox.ext.psyco.profiler",
            "nodebox.ext.psyco.support",
            "nodebox.ext.setup",
            "nodebox.graphics",
            "nodebox.graphics.bezier",
            "nodebox.graphics.context",
            "nodebox.graphics.geometry",
            "nodebox.graphics.noise",
            "nodebox.graphics.physics",
            "nodebox.graphics.shader",
            "nodebox.gui",
            "nodebox.gui.controls",
            "nodebox.sound",
            "nodebox.sound.osc",
            "nodebox.sound.process"
        ],
        "version": "1.6.1"
    },
    "nodechalk": {
        "cmdline": [],
        "modules": [
            "chalk",
            "chalk.SupportedColor",
            "chalk.chalk"
        ],
        "version": "0.1.2"
    },
    "nodeconductor": {
        "cmdline": [],
        "modules": [
            "nodeconductor",
            "nodeconductor.core",
            "nodeconductor.core.admin",
            "nodeconductor.core.apps",
            "nodeconductor.core.authentication",
            "nodeconductor.core.csv",
            "nodeconductor.core.docs",
            "nodeconductor.core.exceptions",
            "nodeconductor.core.executors",
            "nodeconductor.core.fields",
            "nodeconductor.core.filters",
            "nodeconductor.core.handlers",
            "nodeconductor.core.log",
            "nodeconductor.core.management",
            "nodeconductor.core.management.commands",
            "nodeconductor.core.management.commands.createstaffuser",
            "nodeconductor.core.management.commands.drfdocs",
            "nodeconductor.core.management.commands.export_api_docs",
            "nodeconductor.core.management.commands.pgmigrate",
            "nodeconductor.core.management.commands.removestalect",
            "nodeconductor.core.managers",
            "nodeconductor.core.migrations",
            "nodeconductor.core.migrations.0001_squashed_0003_ssh_key_name_length_changed",
            "nodeconductor.core.migrations.0002_enlarge_civil_number_user_field",
            "nodeconductor.core.migrations.0003_user_registration_method",
            "nodeconductor.core.migrations.0004_user_agreement_date",
            "nodeconductor.core.migrations.0005_add_user_language_and_competence",
            "nodeconductor.core.migrations.0006_user_is_support",
            "nodeconductor.core.migrations.0007_user_token_lifetime",
            "nodeconductor.core.mixins",
            "nodeconductor.core.models",
            "nodeconductor.core.pagination",
            "nodeconductor.core.permissions",
            "nodeconductor.core.renderers",
            "nodeconductor.core.routers",
            "nodeconductor.core.schemas",
            "nodeconductor.core.serializers",
            "nodeconductor.core.signals",
            "nodeconductor.core.tasks",
            "nodeconductor.core.utils",
            "nodeconductor.core.validators",
            "nodeconductor.core.views",
            "nodeconductor.cost_tracking",
            "nodeconductor.cost_tracking.admin",
            "nodeconductor.cost_tracking.apps",
            "nodeconductor.cost_tracking.exceptions",
            "nodeconductor.cost_tracking.filters",
            "nodeconductor.cost_tracking.handlers",
            "nodeconductor.cost_tracking.log",
            "nodeconductor.cost_tracking.management",
            "nodeconductor.cost_tracking.management.commands",
            "nodeconductor.cost_tracking.management.commands.delete_invalid_price_estimates",
            "nodeconductor.cost_tracking.management.commands.rebuildpriceestimates",
            "nodeconductor.cost_tracking.managers",
            "nodeconductor.cost_tracking.migrations",
            "nodeconductor.cost_tracking.migrations.0001_squashed_0012_fix_fields_length",
            "nodeconductor.cost_tracking.migrations.0013_remove_item_type_choices",
            "nodeconductor.cost_tracking.migrations.0014_more_digits_for_price",
            "nodeconductor.cost_tracking.migrations.0015_defaultpricelistitem_metadata",
            "nodeconductor.cost_tracking.migrations.0016_leaf_estimates_squashed_0022_priceestimate_leafs",
            "nodeconductor.cost_tracking.migrations.0023_consumptiondetails",
            "nodeconductor.cost_tracking.migrations.0024_refactor_price_estimate",
            "nodeconductor.cost_tracking.migrations.0025_increase_price_decimal_places",
            "nodeconductor.cost_tracking.models",
            "nodeconductor.cost_tracking.serializers",
            "nodeconductor.cost_tracking.tasks",
            "nodeconductor.cost_tracking.urls",
            "nodeconductor.cost_tracking.views",
            "nodeconductor.landing",
            "nodeconductor.logging",
            "nodeconductor.logging.admin",
            "nodeconductor.logging.apps",
            "nodeconductor.logging.elasticsearch_client",
            "nodeconductor.logging.filters",
            "nodeconductor.logging.handlers",
            "nodeconductor.logging.log",
            "nodeconductor.logging.loggers",
            "nodeconductor.logging.management",
            "nodeconductor.logging.management.commands",
            "nodeconductor.logging.management.commands.cleanup_stale_event_types",
            "nodeconductor.logging.managers",
            "nodeconductor.logging.middleware",
            "nodeconductor.logging.migrations",
            "nodeconductor.logging.migrations.0001_squashed_0003_emailhook_webhook",
            "nodeconductor.logging.migrations.0004_index_alert_type",
            "nodeconductor.logging.migrations.0005_add_alert_unique_together_constraint",
            "nodeconductor.logging.migrations.0006_pushhook_systemnotification",
            "nodeconductor.logging.migrations.0007_pushhook_unique_key",
            "nodeconductor.logging.migrations.0008_pushhook_token",
            "nodeconductor.logging.migrations.0009_add_device_metadata",
            "nodeconductor.logging.migrations.0010_add_event_groups",
            "nodeconductor.logging.models",
            "nodeconductor.logging.serializers",
            "nodeconductor.logging.tasks",
            "nodeconductor.logging.urls",
            "nodeconductor.logging.utils",
            "nodeconductor.logging.views",
            "nodeconductor.monitoring",
            "nodeconductor.monitoring.filters",
            "nodeconductor.monitoring.managers",
            "nodeconductor.monitoring.migrations",
            "nodeconductor.monitoring.migrations.0001_initial",
            "nodeconductor.monitoring.migrations.0002_sla",
            "nodeconductor.monitoring.models",
            "nodeconductor.monitoring.serializers",
            "nodeconductor.monitoring.urls",
            "nodeconductor.monitoring.utils",
            "nodeconductor.monitoring.views",
            "nodeconductor.quotas",
            "nodeconductor.quotas.admin",
            "nodeconductor.quotas.apps",
            "nodeconductor.quotas.exceptions",
            "nodeconductor.quotas.fields",
            "nodeconductor.quotas.filters",
            "nodeconductor.quotas.handlers",
            "nodeconductor.quotas.management",
            "nodeconductor.quotas.management.commands",
            "nodeconductor.quotas.management.commands.clearquotashistory",
            "nodeconductor.quotas.management.commands.initglobalquotashistory",
            "nodeconductor.quotas.management.commands.recalculatequotas",
            "nodeconductor.quotas.managers",
            "nodeconductor.quotas.migrations",
            "nodeconductor.quotas.migrations.0001_initial",
            "nodeconductor.quotas.migrations.0002_make_quota_scope_nullable",
            "nodeconductor.quotas.migrations.0003_index_quota_name",
            "nodeconductor.quotas.migrations.0004_quota_threshold",
            "nodeconductor.quotas.models",
            "nodeconductor.quotas.serializers",
            "nodeconductor.quotas.urls",
            "nodeconductor.quotas.utils",
            "nodeconductor.quotas.views",
            "nodeconductor.server",
            "nodeconductor.server.admin",
            "nodeconductor.server.admin.dashboard",
            "nodeconductor.server.admin.menu",
            "nodeconductor.server.admin.settings",
            "nodeconductor.server.base_settings",
            "nodeconductor.server.celery",
            "nodeconductor.server.doc_settings",
            "nodeconductor.server.manage",
            "nodeconductor.server.test_runner",
            "nodeconductor.server.test_settings",
            "nodeconductor.server.urls",
            "nodeconductor.server.wsgi",
            "nodeconductor.structure",
            "nodeconductor.structure.admin",
            "nodeconductor.structure.apps",
            "nodeconductor.structure.executors",
            "nodeconductor.structure.filters",
            "nodeconductor.structure.handlers",
            "nodeconductor.structure.images",
            "nodeconductor.structure.log",
            "nodeconductor.structure.management",
            "nodeconductor.structure.management.commands",
            "nodeconductor.structure.management.commands.cleanup_duplicate_spl",
            "nodeconductor.structure.management.commands.dumpusers",
            "nodeconductor.structure.managers",
            "nodeconductor.structure.metadata",
            "nodeconductor.structure.migrations",
            "nodeconductor.structure.migrations.0001_squashed_0021_balancehistory",
            "nodeconductor.structure.migrations.0022_init_global_count_quotas",
            "nodeconductor.structure.migrations.0023_add_creation_state",
            "nodeconductor.structure.migrations.0024_add_sugarcrm_to_settings",
            "nodeconductor.structure.migrations.0025_add_zabbix_to_settings",
            "nodeconductor.structure.migrations.0026_add_error_message",
            "nodeconductor.structure.migrations.0027_servicesettings_service_type",
            "nodeconductor.structure.migrations.0028_servicesettings_service_type2",
            "nodeconductor.structure.migrations.0031_add_options_default",
            "nodeconductor.structure.migrations.0032_make_options_optional",
            "nodeconductor.structure.migrations.0033_remove_servicesettings_dummy",
            "nodeconductor.structure.migrations.0034_change_service_settings_state_field",
            "nodeconductor.structure.migrations.0035_settings_tags_and_scope",
            "nodeconductor.structure.migrations.0036_add_vat_fields",
            "nodeconductor.structure.migrations.0037_remove_customer_billing_backend_id",
            "nodeconductor.structure.migrations.0038_add_project_and_customer_permissions",
            "nodeconductor.structure.migrations.0039_remove_permission_groups",
            "nodeconductor.structure.migrations.0040_make_is_active_nullable",
            "nodeconductor.structure.migrations.0041_servicesettings_domain",
            "nodeconductor.structure.migrations.0042_add_service_certification_homepage_and_terms",
            "nodeconductor.structure.migrations.0043_servicesettings_geolocations",
            "nodeconductor.structure.migrations.0044_terms_of_services_url",
            "nodeconductor.structure.migrations.0045_project_services_certifications",
            "nodeconductor.structure.migrations.0046_shared_service_settings_customer",
            "nodeconductor.structure.migrations.0047_privateservicesettings_sharedservicesettings",
            "nodeconductor.structure.migrations.0048_remove_balance",
            "nodeconductor.structure.migrations.0049_extend_abbreviation",
            "nodeconductor.structure.migrations.0050_reset_cloud_spl_quota_limits",
            "nodeconductor.structure.models",
            "nodeconductor.structure.permissions",
            "nodeconductor.structure.serializers",
            "nodeconductor.structure.signals",
            "nodeconductor.structure.tasks",
            "nodeconductor.structure.templatetags",
            "nodeconductor.structure.templatetags.nodeconductor_structure",
            "nodeconductor.structure.urls",
            "nodeconductor.structure.utils",
            "nodeconductor.structure.views",
            "nodeconductor.users",
            "nodeconductor.users.filters",
            "nodeconductor.users.migrations",
            "nodeconductor.users.migrations.0001_initial",
            "nodeconductor.users.migrations.0002_invitation_error_message",
            "nodeconductor.users.migrations.0003_invitation_civil_number",
            "nodeconductor.users.migrations.0004_migrate_to_new_permissions_model",
            "nodeconductor.users.models",
            "nodeconductor.users.serializers",
            "nodeconductor.users.tasks",
            "nodeconductor.users.urls",
            "nodeconductor.users.views"
        ],
        "version": "0.138.0"
    },
    "nodeconductor-auth-openid": {
        "cmdline": [],
        "modules": [
            "nodeconductor_auth_openid",
            "nodeconductor_auth_openid.admin",
            "nodeconductor_auth_openid.apps",
            "nodeconductor_auth_openid.auth",
            "nodeconductor_auth_openid.extension",
            "nodeconductor_auth_openid.filters",
            "nodeconductor_auth_openid.migrations",
            "nodeconductor_auth_openid.migrations.0001_update_nicknames",
            "nodeconductor_auth_openid.migrations.0002_username_uuid",
            "nodeconductor_auth_openid.models",
            "nodeconductor_auth_openid.serializers",
            "nodeconductor_auth_openid.urls",
            "nodeconductor_auth_openid.views"
        ],
        "version": "0.6.0"
    },
    "nodeconductor-auth-social": {
        "cmdline": [],
        "modules": [
            "nodeconductor_auth_social",
            "nodeconductor_auth_social.apps",
            "nodeconductor_auth_social.extension",
            "nodeconductor_auth_social.handlers",
            "nodeconductor_auth_social.migrations",
            "nodeconductor_auth_social.migrations.0001_initial",
            "nodeconductor_auth_social.models",
            "nodeconductor_auth_social.serializers",
            "nodeconductor_auth_social.tasks",
            "nodeconductor_auth_social.urls",
            "nodeconductor_auth_social.views"
        ],
        "version": "0.6.0"
    },
    "nodeconductor-auth-valimo": {
        "cmdline": [],
        "modules": [
            "nodeconductor_auth_valimo",
            "nodeconductor_auth_valimo.admin",
            "nodeconductor_auth_valimo.apps",
            "nodeconductor_auth_valimo.client",
            "nodeconductor_auth_valimo.executors",
            "nodeconductor_auth_valimo.extension",
            "nodeconductor_auth_valimo.filters",
            "nodeconductor_auth_valimo.migrations",
            "nodeconductor_auth_valimo.migrations.0001_initial",
            "nodeconductor_auth_valimo.models",
            "nodeconductor_auth_valimo.perms",
            "nodeconductor_auth_valimo.serializers",
            "nodeconductor_auth_valimo.tasks",
            "nodeconductor_auth_valimo.urls",
            "nodeconductor_auth_valimo.views"
        ],
        "version": "0.2.0"
    },
    "nodeconductor-aws": {
        "cmdline": [],
        "modules": [
            "nodeconductor_aws",
            "nodeconductor_aws.admin",
            "nodeconductor_aws.apps",
            "nodeconductor_aws.backend",
            "nodeconductor_aws.cost_tracking",
            "nodeconductor_aws.executors",
            "nodeconductor_aws.extension",
            "nodeconductor_aws.filters",
            "nodeconductor_aws.management",
            "nodeconductor_aws.management.commands",
            "nodeconductor_aws.management.commands.export_ami_catalog",
            "nodeconductor_aws.management.commands.import_ami_catalog",
            "nodeconductor_aws.migrations",
            "nodeconductor_aws.migrations.0001_initial",
            "nodeconductor_aws.migrations.0002_remove_awsservice_name",
            "nodeconductor_aws.migrations.0003_update_ip_addresses",
            "nodeconductor_aws.migrations.0004_remove_volume_start_time",
            "nodeconductor_aws.migrations.0005_instance_size_backend_id",
            "nodeconductor_aws.models",
            "nodeconductor_aws.serializers",
            "nodeconductor_aws.tasks",
            "nodeconductor_aws.urls",
            "nodeconductor_aws.views"
        ],
        "version": "0.7.0"
    },
    "nodeconductor-digitalocean": {
        "cmdline": [],
        "modules": [],
        "version": "0.6.0"
    },
    "nodeconductor-jira": {
        "cmdline": [],
        "modules": [
            "nodeconductor_jira",
            "nodeconductor_jira.admin",
            "nodeconductor_jira.apps",
            "nodeconductor_jira.backend",
            "nodeconductor_jira.executors",
            "nodeconductor_jira.extension",
            "nodeconductor_jira.filters",
            "nodeconductor_jira.handlers",
            "nodeconductor_jira.log",
            "nodeconductor_jira.migrations",
            "nodeconductor_jira.migrations.0001_initial",
            "nodeconductor_jira.migrations.0002_more_issue_fields",
            "nodeconductor_jira.migrations.0003_add_issue_fields",
            "nodeconductor_jira.migrations.0004_project_available_for_all",
            "nodeconductor_jira.models",
            "nodeconductor_jira.perms",
            "nodeconductor_jira.serializers",
            "nodeconductor_jira.urls",
            "nodeconductor_jira.views"
        ],
        "version": "0.4.0"
    },
    "nodeconductor-killbill": {
        "cmdline": [],
        "modules": [
            "nodeconductor_killbill",
            "nodeconductor_killbill.admin",
            "nodeconductor_killbill.apps",
            "nodeconductor_killbill.backend",
            "nodeconductor_killbill.extension",
            "nodeconductor_killbill.filters",
            "nodeconductor_killbill.handlers",
            "nodeconductor_killbill.log",
            "nodeconductor_killbill.migrations",
            "nodeconductor_killbill.migrations.0001_initial",
            "nodeconductor_killbill.models",
            "nodeconductor_killbill.perms",
            "nodeconductor_killbill.serializers",
            "nodeconductor_killbill.tasks",
            "nodeconductor_killbill.urls",
            "nodeconductor_killbill.views"
        ],
        "version": "0.5.1"
    },
    "nodeconductor-openstack": {
        "cmdline": [],
        "modules": [
            "nodeconductor_openstack",
            "nodeconductor_openstack.openstack",
            "nodeconductor_openstack.openstack.admin",
            "nodeconductor_openstack.openstack.apps",
            "nodeconductor_openstack.openstack.backend",
            "nodeconductor_openstack.openstack.executors",
            "nodeconductor_openstack.openstack.extension",
            "nodeconductor_openstack.openstack.filters",
            "nodeconductor_openstack.openstack.handlers",
            "nodeconductor_openstack.openstack.log",
            "nodeconductor_openstack.openstack.management",
            "nodeconductor_openstack.openstack.management.commands",
            "nodeconductor_openstack.openstack.management.commands.initsecuritygroups",
            "nodeconductor_openstack.openstack.migrations",
            "nodeconductor_openstack.openstack.migrations.0001_initial",
            "nodeconductor_openstack.openstack.migrations.0002_volume",
            "nodeconductor_openstack.openstack.migrations.0003_snapshot",
            "nodeconductor_openstack.openstack.migrations.0004_dr_and_volume_backups",
            "nodeconductor_openstack.openstack.migrations.0005_ipmapping",
            "nodeconductor_openstack.openstack.migrations.0006_backups_restorations",
            "nodeconductor_openstack.openstack.migrations.0007_add_instance_tenant",
            "nodeconductor_openstack.openstack.migrations.0008_require_instance_tenant",
            "nodeconductor_openstack.openstack.migrations.0009_add_security_group_tenant",
            "nodeconductor_openstack.openstack.migrations.0010_require_security_group_tenant",
            "nodeconductor_openstack.openstack.migrations.0011_add_floating_ip_tenant",
            "nodeconductor_openstack.openstack.migrations.0012_require_floating_ip_tenant",
            "nodeconductor_openstack.openstack.migrations.0013_add_dr_backups_to_schedule",
            "nodeconductor_openstack.openstack.migrations.0014_instance_volumes",
            "nodeconductor_openstack.openstack.migrations.0015_instance_runtime_state",
            "nodeconductor_openstack.openstack.migrations.0016_backup_state",
            "nodeconductor_openstack.openstack.migrations.0017_backup_snapshots_and_restorations",
            "nodeconductor_openstack.openstack.migrations.0018_replace_security_group",
            "nodeconductor_openstack.openstack.migrations.0019_remove_payable_mixin",
            "nodeconductor_openstack.openstack.migrations.0020_tenant_extra_configuration",
            "nodeconductor_openstack.openstack.migrations.0021_volume_instance",
            "nodeconductor_openstack.openstack.migrations.0022_volume_device",
            "nodeconductor_openstack.openstack.migrations.0023_instance_state",
            "nodeconductor_openstack.openstack.migrations.0024_network_subnet",
            "nodeconductor_openstack.openstack.migrations.0025_delete_tenant_models",
            "nodeconductor_openstack.openstack.migrations.0026_floating_ip_resource",
            "nodeconductor_openstack.openstack.migrations.0027_delete_floating_ip_status",
            "nodeconductor_openstack.openstack.migrations.0028_security_group_as_a_resource",
            "nodeconductor_openstack.openstack.migrations.0029_tenant_quotas",
            "nodeconductor_openstack.openstack.migrations.0030_subnet_dns_nameservers",
            "nodeconductor_openstack.openstack.migrations.0031_tenant_backup_storage",
            "nodeconductor_openstack.openstack.migrations.0032_service_setting_backend_url",
            "nodeconductor_openstack.openstack.migrations.0033_remove_openstackservice_name",
            "nodeconductor_openstack.openstack.migrations.0034_remove_start_time",
            "nodeconductor_openstack.openstack.migrations.0035_remove_ipmapping",
            "nodeconductor_openstack.openstack.models",
            "nodeconductor_openstack.openstack.serializers",
            "nodeconductor_openstack.openstack.tasks",
            "nodeconductor_openstack.openstack.tasks.base",
            "nodeconductor_openstack.openstack.urls",
            "nodeconductor_openstack.openstack.views",
            "nodeconductor_openstack.openstack_base",
            "nodeconductor_openstack.openstack_base.backend",
            "nodeconductor_openstack.openstack_base.models",
            "nodeconductor_openstack.openstack_tenant",
            "nodeconductor_openstack.openstack_tenant.admin",
            "nodeconductor_openstack.openstack_tenant.apps",
            "nodeconductor_openstack.openstack_tenant.backend",
            "nodeconductor_openstack.openstack_tenant.cost_tracking",
            "nodeconductor_openstack.openstack_tenant.executors",
            "nodeconductor_openstack.openstack_tenant.extension",
            "nodeconductor_openstack.openstack_tenant.fields",
            "nodeconductor_openstack.openstack_tenant.filters",
            "nodeconductor_openstack.openstack_tenant.handlers",
            "nodeconductor_openstack.openstack_tenant.log",
            "nodeconductor_openstack.openstack_tenant.migrations",
            "nodeconductor_openstack.openstack_tenant.migrations.0001_initial",
            "nodeconductor_openstack.openstack_tenant.migrations.0002_service_properties",
            "nodeconductor_openstack.openstack_tenant.migrations.0003_volume_and_snapshot",
            "nodeconductor_openstack.openstack_tenant.migrations.0004_instance",
            "nodeconductor_openstack.openstack_tenant.migrations.0005_resources_actions",
            "nodeconductor_openstack.openstack_tenant.migrations.0006_resource_action_details",
            "nodeconductor_openstack.openstack_tenant.migrations.0007_backup_backuprestoration",
            "nodeconductor_openstack.openstack_tenant.migrations.0008_backup_schedule",
            "nodeconductor_openstack.openstack_tenant.migrations.0009_tenant_service_verbose_name",
            "nodeconductor_openstack.openstack_tenant.migrations.0010_rename_floating_ip_status",
            "nodeconductor_openstack.openstack_tenant.migrations.0011_backupschedule_call_count",
            "nodeconductor_openstack.openstack_tenant.migrations.0012_backupschedule_resource",
            "nodeconductor_openstack.openstack_tenant.migrations.0013_init_backupschedule_spl",
            "nodeconductor_openstack.openstack_tenant.migrations.0014_make_backupschedule_spl_non_nullable",
            "nodeconductor_openstack.openstack_tenant.migrations.0015_snapshotrestoration",
            "nodeconductor_openstack.openstack_tenant.migrations.0016_network_subnet_internalip",
            "nodeconductor_openstack.openstack_tenant.migrations.0017_snapshot_schedule",
            "nodeconductor_openstack.openstack_tenant.migrations.0018_remove_openstacktenantservice_name",
            "nodeconductor_openstack.openstack_tenant.migrations.0019_migrate_to_single_external_ip",
            "nodeconductor_openstack.openstack_tenant.migrations.0020_remove_external_ips",
            "nodeconductor_openstack.openstack_tenant.migrations.0021_instance_subnets",
            "nodeconductor_openstack.openstack_tenant.migrations.0022_floatingip_internal_ip",
            "nodeconductor_openstack.openstack_tenant.migrations.0023_remove_instance_external_ip",
            "nodeconductor_openstack.openstack_tenant.migrations.0024_add_backup_size",
            "nodeconductor_openstack.openstack_tenant.migrations.0025_copy_certifications_from_existing_settings",
            "nodeconductor_openstack.openstack_tenant.migrations.0026_remove_start_time",
            "nodeconductor_openstack.openstack_tenant.migrations.0027_remove_duplicate_floating_ips",
            "nodeconductor_openstack.openstack_tenant.models",
            "nodeconductor_openstack.openstack_tenant.serializers",
            "nodeconductor_openstack.openstack_tenant.tasks",
            "nodeconductor_openstack.openstack_tenant.urls",
            "nodeconductor_openstack.openstack_tenant.views"
        ],
        "version": "0.26.0"
    },
    "nodeconductor-organization": {
        "cmdline": [],
        "modules": [
            "nodeconductor_organization",
            "nodeconductor_organization.admin",
            "nodeconductor_organization.apps",
            "nodeconductor_organization.extension",
            "nodeconductor_organization.filters",
            "nodeconductor_organization.handlers",
            "nodeconductor_organization.migrations",
            "nodeconductor_organization.migrations.0001_initial",
            "nodeconductor_organization.migrations.0002_change_customer_field",
            "nodeconductor_organization.models",
            "nodeconductor_organization.permissions",
            "nodeconductor_organization.serializers",
            "nodeconductor_organization.urls",
            "nodeconductor_organization.views"
        ],
        "version": "0.3.0"
    },
    "nodeconductor-paas-oracle": {
        "cmdline": [],
        "modules": [
            "nodeconductor_paas_oracle",
            "nodeconductor_paas_oracle.admin",
            "nodeconductor_paas_oracle.apps",
            "nodeconductor_paas_oracle.backend",
            "nodeconductor_paas_oracle.cost_tracking",
            "nodeconductor_paas_oracle.extension",
            "nodeconductor_paas_oracle.filters",
            "nodeconductor_paas_oracle.log",
            "nodeconductor_paas_oracle.migrations",
            "nodeconductor_paas_oracle.migrations.0001_squashed_0007_change_support_requests",
            "nodeconductor_paas_oracle.migrations.0002_ovm_iaas_support",
            "nodeconductor_paas_oracle.migrations.0003_auto_20160808_0900",
            "nodeconductor_paas_oracle.models",
            "nodeconductor_paas_oracle.perms",
            "nodeconductor_paas_oracle.serializers",
            "nodeconductor_paas_oracle.urls",
            "nodeconductor_paas_oracle.views"
        ],
        "version": "0.6.2"
    },
    "nodeconductor-paypal": {
        "cmdline": [],
        "modules": [
            "nodeconductor_paypal",
            "nodeconductor_paypal.admin",
            "nodeconductor_paypal.apps",
            "nodeconductor_paypal.backend",
            "nodeconductor_paypal.extension",
            "nodeconductor_paypal.filters",
            "nodeconductor_paypal.handlers",
            "nodeconductor_paypal.log",
            "nodeconductor_paypal.management",
            "nodeconductor_paypal.management.commands",
            "nodeconductor_paypal.management.commands.create_sample_invoices",
            "nodeconductor_paypal.migrations",
            "nodeconductor_paypal.migrations.0001_initial",
            "nodeconductor_paypal.migrations.0002_invoice_invoiceitem",
            "nodeconductor_paypal.migrations.0003_payment_token",
            "nodeconductor_paypal.migrations.0004_payment_error_message",
            "nodeconductor_paypal.migrations.0005_add_tax",
            "nodeconductor_paypal.models",
            "nodeconductor_paypal.perms",
            "nodeconductor_paypal.serializers",
            "nodeconductor_paypal.tasks",
            "nodeconductor_paypal.urls",
            "nodeconductor_paypal.views"
        ],
        "version": "0.5.0"
    },
    "nodeconductor-saltstack": {
        "cmdline": [],
        "modules": [
            "nodeconductor_saltstack",
            "nodeconductor_saltstack.exchange",
            "nodeconductor_saltstack.exchange.admin",
            "nodeconductor_saltstack.exchange.apps",
            "nodeconductor_saltstack.exchange.backend",
            "nodeconductor_saltstack.exchange.cost_tracking",
            "nodeconductor_saltstack.exchange.extension",
            "nodeconductor_saltstack.exchange.filters",
            "nodeconductor_saltstack.exchange.log",
            "nodeconductor_saltstack.exchange.migrations",
            "nodeconductor_saltstack.exchange.migrations.0001_initial",
            "nodeconductor_saltstack.exchange.migrations.0002_tenant_tags",
            "nodeconductor_saltstack.exchange.migrations.0003_rename_tenant_model",
            "nodeconductor_saltstack.exchange.migrations.0004_init_quotas",
            "nodeconductor_saltstack.exchange.migrations.0005_contact_group_user",
            "nodeconductor_saltstack.exchange.migrations.0006_group_manager_foreign_key",
            "nodeconductor_saltstack.exchange.migrations.0007_user_additional_fields",
            "nodeconductor_saltstack.exchange.migrations.0008_user_unique_together_fields",
            "nodeconductor_saltstack.exchange.migrations.0009_user_username_validation",
            "nodeconductor_saltstack.exchange.migrations.0010_group_members",
            "nodeconductor_saltstack.exchange.migrations.0011_conferenceroom",
            "nodeconductor_saltstack.exchange.migrations.0012_more_members_models",
            "nodeconductor_saltstack.exchange.migrations.0013_remove_group_delivery_members",
            "nodeconductor_saltstack.exchange.migrations.0014_group_delivery_members",
            "nodeconductor_saltstack.exchange.migrations.0015_remove_mailbox_size_max_users",
            "nodeconductor_saltstack.exchange.migrations.0016_remove_mailbox_size",
            "nodeconductor_saltstack.exchange.migrations.0017_exchangetenant_publishing_state",
            "nodeconductor_saltstack.exchange.migrations.0018_remove_payable_mixin",
            "nodeconductor_saltstack.exchange.models",
            "nodeconductor_saltstack.exchange.perms",
            "nodeconductor_saltstack.exchange.serializers",
            "nodeconductor_saltstack.exchange.tasks",
            "nodeconductor_saltstack.exchange.urls",
            "nodeconductor_saltstack.exchange.validators",
            "nodeconductor_saltstack.exchange.views",
            "nodeconductor_saltstack.saltstack",
            "nodeconductor_saltstack.saltstack.admin",
            "nodeconductor_saltstack.saltstack.apps",
            "nodeconductor_saltstack.saltstack.backend",
            "nodeconductor_saltstack.saltstack.extension",
            "nodeconductor_saltstack.saltstack.handlers",
            "nodeconductor_saltstack.saltstack.log",
            "nodeconductor_saltstack.saltstack.migrations",
            "nodeconductor_saltstack.saltstack.migrations.0001_initial",
            "nodeconductor_saltstack.saltstack.migrations.0002_init_exchange_quota",
            "nodeconductor_saltstack.saltstack.migrations.0003_unique_spl",
            "nodeconductor_saltstack.saltstack.migrations.0004_remove_spl_state",
            "nodeconductor_saltstack.saltstack.migrations.0005_label_change",
            "nodeconductor_saltstack.saltstack.models",
            "nodeconductor_saltstack.saltstack.perms",
            "nodeconductor_saltstack.saltstack.serializers",
            "nodeconductor_saltstack.saltstack.tasks",
            "nodeconductor_saltstack.saltstack.urls",
            "nodeconductor_saltstack.saltstack.utils",
            "nodeconductor_saltstack.saltstack.views",
            "nodeconductor_saltstack.sharepoint",
            "nodeconductor_saltstack.sharepoint.admin",
            "nodeconductor_saltstack.sharepoint.apps",
            "nodeconductor_saltstack.sharepoint.backend",
            "nodeconductor_saltstack.sharepoint.cost_tracking",
            "nodeconductor_saltstack.sharepoint.extension",
            "nodeconductor_saltstack.sharepoint.filters",
            "nodeconductor_saltstack.sharepoint.log",
            "nodeconductor_saltstack.sharepoint.migrations",
            "nodeconductor_saltstack.sharepoint.migrations.0001_initial",
            "nodeconductor_saltstack.sharepoint.migrations.0002_site_tags",
            "nodeconductor_saltstack.sharepoint.migrations.0003_new_models",
            "nodeconductor_saltstack.sharepoint.migrations.0004_sharepointtenant_storage_size",
            "nodeconductor_saltstack.sharepoint.migrations.0005_sharepointtenant_users_count",
            "nodeconductor_saltstack.sharepoint.migrations.0006_site_collections",
            "nodeconductor_saltstack.sharepoint.migrations.0007_site_collection_fields",
            "nodeconductor_saltstack.sharepoint.migrations.0008_extend_status_field",
            "nodeconductor_saltstack.sharepoint.migrations.0009_tenant_fields",
            "nodeconductor_saltstack.sharepoint.migrations.0010__site_collection_types_user_fields",
            "nodeconductor_saltstack.sharepoint.migrations.0011_sharepointtenant_publishing_state",
            "nodeconductor_saltstack.sharepoint.migrations.0012_remove_payable_mixin",
            "nodeconductor_saltstack.sharepoint.models",
            "nodeconductor_saltstack.sharepoint.perms",
            "nodeconductor_saltstack.sharepoint.serializers",
            "nodeconductor_saltstack.sharepoint.tasks",
            "nodeconductor_saltstack.sharepoint.urls",
            "nodeconductor_saltstack.sharepoint.views"
        ],
        "version": "0.5.0"
    },
    "nodeconductor-saml2": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.3"
    },
    "nodeconductor-sugarcrm": {
        "cmdline": [],
        "modules": [
            "nodeconductor_sugarcrm",
            "nodeconductor_sugarcrm.admin",
            "nodeconductor_sugarcrm.apps",
            "nodeconductor_sugarcrm.backend",
            "nodeconductor_sugarcrm.cost_tracking",
            "nodeconductor_sugarcrm.extension",
            "nodeconductor_sugarcrm.handlers",
            "nodeconductor_sugarcrm.log",
            "nodeconductor_sugarcrm.management",
            "nodeconductor_sugarcrm.management.commands",
            "nodeconductor_sugarcrm.management.commands.initcrminstanceurl",
            "nodeconductor_sugarcrm.migrations",
            "nodeconductor_sugarcrm.migrations.0001_squashed_0009_remove_crm_size_field",
            "nodeconductor_sugarcrm.migrations.0010_crm_instance_url",
            "nodeconductor_sugarcrm.migrations.0011_crm_publishing_state",
            "nodeconductor_sugarcrm.migrations.0012_remove_spl_state",
            "nodeconductor_sugarcrm.migrations.0013_remove_payable_mixin",
            "nodeconductor_sugarcrm.models",
            "nodeconductor_sugarcrm.perms",
            "nodeconductor_sugarcrm.serializers",
            "nodeconductor_sugarcrm.signals",
            "nodeconductor_sugarcrm.tasks",
            "nodeconductor_sugarcrm.urls",
            "nodeconductor_sugarcrm.utils",
            "nodeconductor_sugarcrm.views"
        ],
        "version": "0.5.0"
    },
    "nodeconductor-zabbix": {
        "cmdline": [],
        "modules": [
            "nodeconductor_zabbix",
            "nodeconductor_zabbix.admin",
            "nodeconductor_zabbix.apps",
            "nodeconductor_zabbix.backend",
            "nodeconductor_zabbix.executors",
            "nodeconductor_zabbix.extension",
            "nodeconductor_zabbix.filters",
            "nodeconductor_zabbix.handlers",
            "nodeconductor_zabbix.managers",
            "nodeconductor_zabbix.migrations",
            "nodeconductor_zabbix.migrations.0001_squashed_0007_add_sla",
            "nodeconductor_zabbix.migrations.0008_add_itservice_trigger",
            "nodeconductor_zabbix.migrations.0009_itservices_as_resource",
            "nodeconductor_zabbix.migrations.0010_remove_spl_state",
            "nodeconductor_zabbix.migrations.0011_migrate_state_field",
            "nodeconductor_zabbix.migrations.0012_users_and_groups",
            "nodeconductor_zabbix.migrations.0013_host_status_and_error",
            "nodeconductor_zabbix.migrations.0014_add_key_to_item",
            "nodeconductor_zabbix.migrations.0015_template_parents",
            "nodeconductor_zabbix.models",
            "nodeconductor_zabbix.perms",
            "nodeconductor_zabbix.serializers",
            "nodeconductor_zabbix.tasks",
            "nodeconductor_zabbix.urls",
            "nodeconductor_zabbix.utils",
            "nodeconductor_zabbix.views"
        ],
        "version": "0.6.0"
    },
    "nodeenv": {
        "cmdline": [],
        "modules": [
            "nodeenv"
        ],
        "version": "1.1.2"
    },
    "nodehunter": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nodejs": {
        "cmdline": [],
        "modules": [
            "nodejs",
            "nodejs.bindings",
            "nodejs.conf",
            "nodejs.exceptions",
            "nodejs.interrogate"
        ],
        "version": "0.1.1"
    },
    "nodeman": {
        "cmdline": [],
        "modules": [
            "index",
            "nodeman",
            "nodeman.config",
            "nodeman.utils"
        ],
        "version": "0.5.4"
    },
    "nodemaster": {
        "cmdline": [],
        "modules": [
            "nodemaster"
        ],
        "version": "2017.1.16.1608"
    },
    "nodemcu-kernel": {
        "cmdline": [],
        "modules": [
            "nodemcu_kernel",
            "nodemcu_kernel.install",
            "nodemcu_kernel.kernel",
            "nodemcu_kernel.nodemcu"
        ],
        "version": "0.1"
    },
    "nodemcu-uploader": {
        "cmdline": [],
        "modules": [
            "nodemcu_uploader",
            "nodemcu_uploader.exceptions",
            "nodemcu_uploader.luacode",
            "nodemcu_uploader.main",
            "nodemcu_uploader.term",
            "nodemcu_uploader.uploader",
            "nodemcu_uploader.utils",
            "nodemcu_uploader.version"
        ],
        "version": "0.4.1"
    },
    "nodemcuload": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "nodenet": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "nodepool": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.0"
    },
    "nodepy": {
        "cmdline": [],
        "modules": [
            "nodepy",
            "nodepy.convergence",
            "nodepy.downwind_runge_kutta_method",
            "nodepy.general_linear_method",
            "nodepy.graph",
            "nodepy.ivp",
            "nodepy.linear_multistep_method",
            "nodepy.loadmethod",
            "nodepy.low_storage_rk",
            "nodepy.oc_butcher",
            "nodepy.oc_butcher_high_order",
            "nodepy.ode_solver",
            "nodepy.rooted_trees",
            "nodepy.runge_kutta_method",
            "nodepy.semidisc",
            "nodepy.snp",
            "nodepy.stability_function",
            "nodepy.strmanip",
            "nodepy.twostep_runge_kutta_method",
            "nodepy.unit_tests",
            "nodepy.utils"
        ],
        "version": "0.7"
    },
    "nodered": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "noderoot": {
        "cmdline": [],
        "modules": [
            "noderoot",
            "noderoot.log",
            "noderoot.logging_subprocess",
            "noderoot.nfs",
            "noderoot.ssh_helpers"
        ],
        "version": "0.0.2"
    },
    "nodes": {
        "cmdline": [
            "gui.py",
            "test.py"
        ],
        "modules": [
            "BPGR",
            "nodes",
            "nodes.__version__",
            "nodes.basic",
            "nodes.construct",
            "nodes.core",
            "nodes.globs",
            "nodes.inspector",
            "nodes.knots.errors",
            "nodes.knots.juicer",
            "nodes.logger",
            "nodes.logic",
            "nodes.psycoptima",
            "nodes.sigmoids",
            "nodes.stacker",
            "nodes.stacker.connect",
            "nodes.stacker.types",
            "nodes.twist",
            "nodes.varios"
        ],
        "version": "1.2"
    },
    "nodeshot": {
        "cmdline": [],
        "modules": [
            "nodeshot",
            "nodeshot.community",
            "nodeshot.community.mailing",
            "nodeshot.community.mailing.admin",
            "nodeshot.community.mailing.models",
            "nodeshot.community.mailing.models.choices",
            "nodeshot.community.mailing.models.inward",
            "nodeshot.community.mailing.models.outward",
            "nodeshot.community.mailing.serializers",
            "nodeshot.community.mailing.settings",
            "nodeshot.community.mailing.tests",
            "nodeshot.community.mailing.urls",
            "nodeshot.community.mailing.views",
            "nodeshot.community.notifications",
            "nodeshot.community.notifications.admin",
            "nodeshot.community.notifications.management",
            "nodeshot.community.notifications.management.commands",
            "nodeshot.community.notifications.management.commands.purge_notifications",
            "nodeshot.community.notifications.models",
            "nodeshot.community.notifications.models.notification",
            "nodeshot.community.notifications.models.user_settings",
            "nodeshot.community.notifications.registrars",
            "nodeshot.community.notifications.registrars.nodes",
            "nodeshot.community.notifications.serializers",
            "nodeshot.community.notifications.settings",
            "nodeshot.community.notifications.tasks",
            "nodeshot.community.notifications.tests",
            "nodeshot.community.notifications.urls",
            "nodeshot.community.notifications.views",
            "nodeshot.community.participation",
            "nodeshot.community.participation.admin",
            "nodeshot.community.participation.models",
            "nodeshot.community.participation.models.base",
            "nodeshot.community.participation.models.comment",
            "nodeshot.community.participation.models.layer_participation_settings",
            "nodeshot.community.participation.models.node_participation_settings",
            "nodeshot.community.participation.models.node_rating_count",
            "nodeshot.community.participation.models.rating",
            "nodeshot.community.participation.models.vote",
            "nodeshot.community.participation.serializers",
            "nodeshot.community.participation.tasks",
            "nodeshot.community.participation.tests",
            "nodeshot.community.participation.urls",
            "nodeshot.community.participation.views",
            "nodeshot.community.profiles",
            "nodeshot.community.profiles.admin",
            "nodeshot.community.profiles.backends",
            "nodeshot.community.profiles.forms",
            "nodeshot.community.profiles.html_views",
            "nodeshot.community.profiles.models",
            "nodeshot.community.profiles.models.emailconfirmation",
            "nodeshot.community.profiles.models.password_reset",
            "nodeshot.community.profiles.models.profile",
            "nodeshot.community.profiles.models.social_link",
            "nodeshot.community.profiles.permissions",
            "nodeshot.community.profiles.serializers",
            "nodeshot.community.profiles.settings",
            "nodeshot.community.profiles.signals",
            "nodeshot.community.profiles.social_auth_extra",
            "nodeshot.community.profiles.social_auth_extra.github",
            "nodeshot.community.profiles.social_auth_extra.openwisp",
            "nodeshot.community.profiles.social_auth_extra.pipeline",
            "nodeshot.community.profiles.tests",
            "nodeshot.community.profiles.urls",
            "nodeshot.community.profiles.views",
            "nodeshot.conf",
            "nodeshot.conf.settings",
            "nodeshot.conf.urls",
            "nodeshot.conf.wsgi",
            "nodeshot.core",
            "nodeshot.core.api",
            "nodeshot.core.api.models",
            "nodeshot.core.api.settings",
            "nodeshot.core.api.tests",
            "nodeshot.core.api.urls",
            "nodeshot.core.api.views",
            "nodeshot.core.base",
            "nodeshot.core.base.admin",
            "nodeshot.core.base.cache",
            "nodeshot.core.base.choices",
            "nodeshot.core.base.exceptions",
            "nodeshot.core.base.fields",
            "nodeshot.core.base.managers",
            "nodeshot.core.base.mixins",
            "nodeshot.core.base.models",
            "nodeshot.core.base.serializers",
            "nodeshot.core.base.settings",
            "nodeshot.core.base.tests",
            "nodeshot.core.base.utils",
            "nodeshot.core.base.widgets",
            "nodeshot.core.cms",
            "nodeshot.core.cms.admin",
            "nodeshot.core.cms.migrations",
            "nodeshot.core.cms.migrations.0001_initial",
            "nodeshot.core.cms.migrations.0002_auto__add_field_menuitem_classes__add_field_menuitem_parent",
            "nodeshot.core.cms.models",
            "nodeshot.core.cms.serializers",
            "nodeshot.core.cms.tests",
            "nodeshot.core.cms.urls",
            "nodeshot.core.cms.views",
            "nodeshot.core.layers",
            "nodeshot.core.layers.admin",
            "nodeshot.core.layers.managers",
            "nodeshot.core.layers.models",
            "nodeshot.core.layers.models.layer",
            "nodeshot.core.layers.serializers",
            "nodeshot.core.layers.settings",
            "nodeshot.core.layers.signals",
            "nodeshot.core.layers.tests",
            "nodeshot.core.layers.urls",
            "nodeshot.core.layers.views",
            "nodeshot.core.nodes",
            "nodeshot.core.nodes.admin",
            "nodeshot.core.nodes.base",
            "nodeshot.core.nodes.migrations",
            "nodeshot.core.nodes.migrations.0001_initial",
            "nodeshot.core.nodes.migrations.0002_auto__del_statusicon__del_unique_statusicon_status_layer__add_field_st",
            "nodeshot.core.nodes.models",
            "nodeshot.core.nodes.models.image",
            "nodeshot.core.nodes.models.node",
            "nodeshot.core.nodes.models.status",
            "nodeshot.core.nodes.permissions",
            "nodeshot.core.nodes.serializers",
            "nodeshot.core.nodes.settings",
            "nodeshot.core.nodes.signals",
            "nodeshot.core.nodes.tests",
            "nodeshot.core.nodes.urls",
            "nodeshot.core.nodes.views",
            "nodeshot.core.websockets",
            "nodeshot.core.websockets.handlers",
            "nodeshot.core.websockets.management",
            "nodeshot.core.websockets.management.commands",
            "nodeshot.core.websockets.management.commands.start_websocket_server",
            "nodeshot.core.websockets.models",
            "nodeshot.core.websockets.registrars",
            "nodeshot.core.websockets.registrars.nodes",
            "nodeshot.core.websockets.registrars.notifications",
            "nodeshot.core.websockets.server",
            "nodeshot.core.websockets.settings",
            "nodeshot.core.websockets.tasks",
            "nodeshot.core.websockets.tests",
            "nodeshot.core.websockets.urls",
            "nodeshot.core.websockets.views",
            "nodeshot.dashboard",
            "nodeshot.extra",
            "nodeshot.extra.oldimporter",
            "nodeshot.extra.oldimporter.choices",
            "nodeshot.extra.oldimporter.db",
            "nodeshot.extra.oldimporter.management",
            "nodeshot.extra.oldimporter.management.commands",
            "nodeshot.extra.oldimporter.management.commands.import_old_nodeshot",
            "nodeshot.extra.oldimporter.models",
            "nodeshot.extra.oldimporter.settings",
            "nodeshot.extra.oldimporter.tasks",
            "nodeshot.extra.oldimporter.tests",
            "nodeshot.interop",
            "nodeshot.interop.sync",
            "nodeshot.interop.sync.admin",
            "nodeshot.interop.sync.management",
            "nodeshot.interop.sync.management.commands",
            "nodeshot.interop.sync.management.commands.sync",
            "nodeshot.interop.sync.models",
            "nodeshot.interop.sync.models.layer_external",
            "nodeshot.interop.sync.models.node_external",
            "nodeshot.interop.sync.settings",
            "nodeshot.interop.sync.synchronizers",
            "nodeshot.interop.sync.synchronizers.base",
            "nodeshot.interop.sync.synchronizers.citysdk_mobility",
            "nodeshot.interop.sync.synchronizers.citysdk_tourism",
            "nodeshot.interop.sync.synchronizers.geojson",
            "nodeshot.interop.sync.synchronizers.geojson_citysdk_mobility",
            "nodeshot.interop.sync.synchronizers.geojson_citysdk_tourism",
            "nodeshot.interop.sync.synchronizers.georss",
            "nodeshot.interop.sync.synchronizers.nodeshot",
            "nodeshot.interop.sync.synchronizers.openlabor",
            "nodeshot.interop.sync.synchronizers.openwisp",
            "nodeshot.interop.sync.synchronizers.openwisp_citysdk_tourism",
            "nodeshot.interop.sync.synchronizers.provincerometraffic",
            "nodeshot.interop.sync.synchronizers.provinciawifi",
            "nodeshot.interop.sync.synchronizers.provinciawifi_citysdk_mobility",
            "nodeshot.interop.sync.synchronizers.provinciawifi_citysdk_tourism",
            "nodeshot.interop.sync.tasks",
            "nodeshot.interop.sync.tests",
            "nodeshot.interop.sync.urls",
            "nodeshot.interop.sync.views",
            "nodeshot.networking",
            "nodeshot.networking.base",
            "nodeshot.networking.base.utils",
            "nodeshot.networking.connectors",
            "nodeshot.networking.connectors.admin",
            "nodeshot.networking.connectors.models",
            "nodeshot.networking.connectors.models.device_connector",
            "nodeshot.networking.connectors.settings",
            "nodeshot.networking.connectors.tests",
            "nodeshot.networking.hardware",
            "nodeshot.networking.hardware.admin",
            "nodeshot.networking.hardware.models",
            "nodeshot.networking.hardware.models.antenna",
            "nodeshot.networking.hardware.models.antenna_model",
            "nodeshot.networking.hardware.models.base",
            "nodeshot.networking.hardware.models.choices",
            "nodeshot.networking.hardware.models.device_model",
            "nodeshot.networking.hardware.models.device_to_model_rel",
            "nodeshot.networking.hardware.models.mac_prefix",
            "nodeshot.networking.hardware.models.manufacturer",
            "nodeshot.networking.hardware.models.radiation_pattern",
            "nodeshot.networking.hardware.tests",
            "nodeshot.networking.hardware.views",
            "nodeshot.networking.links",
            "nodeshot.networking.links.admin",
            "nodeshot.networking.links.models",
            "nodeshot.networking.links.models.choices",
            "nodeshot.networking.links.models.link",
            "nodeshot.networking.links.serializers",
            "nodeshot.networking.links.tests",
            "nodeshot.networking.links.urls",
            "nodeshot.networking.links.views",
            "nodeshot.networking.net",
            "nodeshot.networking.net.admin",
            "nodeshot.networking.net.fields",
            "nodeshot.networking.net.managers",
            "nodeshot.networking.net.models",
            "nodeshot.networking.net.models.choices",
            "nodeshot.networking.net.models.device",
            "nodeshot.networking.net.models.interface",
            "nodeshot.networking.net.models.interfaces",
            "nodeshot.networking.net.models.interfaces.bridge",
            "nodeshot.networking.net.models.interfaces.ethernet",
            "nodeshot.networking.net.models.interfaces.tunnel",
            "nodeshot.networking.net.models.interfaces.vap",
            "nodeshot.networking.net.models.interfaces.vlan",
            "nodeshot.networking.net.models.interfaces.wireless",
            "nodeshot.networking.net.models.ip",
            "nodeshot.networking.net.models.routing_protocol",
            "nodeshot.networking.net.permissions",
            "nodeshot.networking.net.serializers",
            "nodeshot.networking.net.tests",
            "nodeshot.networking.net.urls",
            "nodeshot.networking.net.views",
            "nodeshot.networking.planning",
            "nodeshot.networking.planning.models",
            "nodeshot.networking.planning.tests",
            "nodeshot.networking.planning.views",
            "nodeshot.networking.services",
            "nodeshot.networking.services.admin",
            "nodeshot.networking.services.models",
            "nodeshot.networking.services.models.category",
            "nodeshot.networking.services.models.choices",
            "nodeshot.networking.services.models.service",
            "nodeshot.networking.services.models.service_login",
            "nodeshot.networking.services.models.url",
            "nodeshot.networking.services.serializers",
            "nodeshot.networking.services.tests",
            "nodeshot.networking.services.urls",
            "nodeshot.networking.services.views",
            "nodeshot.open311",
            "nodeshot.open311.base",
            "nodeshot.open311.models",
            "nodeshot.open311.serializers",
            "nodeshot.open311.settings",
            "nodeshot.open311.tests",
            "nodeshot.open311.urls",
            "nodeshot.open311.views",
            "nodeshot.ui",
            "nodeshot.ui.default",
            "nodeshot.ui.default.models",
            "nodeshot.ui.default.settings",
            "nodeshot.ui.default.tests",
            "nodeshot.ui.default.urls",
            "nodeshot.ui.default.views",
            "nodeshot.ui.open311_demo",
            "nodeshot.ui.open311_demo.models",
            "nodeshot.ui.open311_demo.urls",
            "nodeshot.ui.open311_demo.views",
            "project_name",
            "project_name.settings",
            "project_name.urls",
            "project_name.wsgi"
        ],
        "version": "1.0.pre-alpha"
    },
    "nodeshot-citysdk-synchronizers": {
        "cmdline": [],
        "modules": [
            "nodeshot_citysdk_synchronizers",
            "nodeshot_citysdk_synchronizers.citysdk_mobility",
            "nodeshot_citysdk_synchronizers.citysdk_tourism",
            "nodeshot_citysdk_synchronizers.geojson_citysdk_mobility",
            "nodeshot_citysdk_synchronizers.geojson_citysdk_tourism",
            "nodeshot_citysdk_synchronizers.openwisp_citysdk_tourism",
            "nodeshot_citysdk_synchronizers.provincerometraffic",
            "nodeshot_citysdk_synchronizers.provinciawifi",
            "nodeshot_citysdk_synchronizers.provinciawifi_citysdk_mobility",
            "nodeshot_citysdk_synchronizers.provinciawifi_citysdk_tourism",
            "nodeshot_citysdk_synchronizers.settings",
            "nodeshot_citysdk_synchronizers.tests"
        ],
        "version": "0.3.1"
    },
    "nodetree": {
        "cmdline": [],
        "modules": [],
        "version": "0.3"
    },
    "nodetrie": {
        "cmdline": [],
        "modules": [
            "nodetrie",
            "nodetrie._version"
        ],
        "version": "1.0.5"
    },
    "nodev.specs": {
        "cmdline": [],
        "modules": [
            "nodev",
            "nodev.specs",
            "nodev.specs.generic"
        ],
        "version": "0.3.1"
    },
    "nodevers": {
        "cmdline": [],
        "modules": [
            "nodevers",
            "nodevers.cli",
            "nodevers.install",
            "nodevers.install_helper",
            "nodevers.remove",
            "nodevers.shared",
            "nodevers.use",
            "nodevers.version",
            "nodevers.versions"
        ],
        "version": "0.2.1"
    },
    "nodewire": {
        "cmdline": [
            "nw_client.py",
            "nw_gateway.py",
            "nw_script.py"
        ],
        "modules": [
            "nodewire",
            "nodewire.NodeWire",
            "nodewire.client",
            "nodewire.getip",
            "nodewire.node",
            "nodewire.splitter",
            "nodewire.tcpclient"
        ],
        "version": "0.6"
    },
    "nodewox-mqtt": {
        "cmdline": [],
        "modules": [
            "nodewox",
            "nodewox.mqtt",
            "nodewox.mqtt.client",
            "nodewox.mqtt.publish",
            "nodewox.mqtt.subscribe"
        ],
        "version": "1.2"
    },
    "nodewox-pything": {
        "cmdline": [],
        "modules": [
            "thing",
            "thing.channel",
            "thing.cmd_thing",
            "thing.messenger",
            "thing.node",
            "thing.param",
            "thing.store",
            "thing.thing"
        ],
        "version": "0.1.1"
    },
    "nodist": {
        "cmdline": [],
        "modules": [
            "nodist",
            "nodist.cli",
            "nodist.installer",
            "nodist.misc"
        ],
        "version": "0.3.1"
    },
    "nodo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nodular": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nodules": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "noeku.linguacollage": {
        "cmdline": [],
        "modules": [
            "noeku",
            "noeku.linguacollage",
            "noeku.linguacollage.browser",
            "noeku.linguacollage.interfaces",
            "noeku.linguacollage.patches",
            "noeku.linguacollage.setuphandlers",
            "noeku.linguacollage.subscriber",
            "noeku.linguacollage.testing",
            "noeku.linguacollage.tests",
            "noeku.linguacollage.tests.test_robot",
            "noeku.linguacollage.tests.test_setup",
            "noeku.linguacollage.tests.test_subscriber"
        ],
        "version": "1.0a1"
    },
    "noeq": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "noetic": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "noformat": {
        "cmdline": [],
        "modules": [
            "noformat",
            "noformat.main"
        ],
        "version": "0.1"
    },
    "noipclient": {
        "cmdline": [],
        "modules": [
            "noipclient",
            "noipclient.noipclient"
        ],
        "version": "0.0.7"
    },
    "noipy": {
        "cmdline": [],
        "modules": [
            "noipy",
            "noipy.authinfo",
            "noipy.dnsupdater",
            "noipy.main",
            "noipy.utils"
        ],
        "version": "1.5.0"
    },
    "noise": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.2"
    },
    "noise.py": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.4"
    },
    "noiselib": {
        "cmdline": [],
        "modules": [
            "noiselib",
            "noiselib._fBm",
            "noiselib._init",
            "noiselib.callbacks",
            "noiselib.modules",
            "noiselib.modules.main",
            "noiselib.modules.surfaces"
        ],
        "version": "1.5.1"
    },
    "noisily": {
        "cmdline": [],
        "modules": [
            "noisily"
        ],
        "version": "0.0.2"
    },
    "noisy": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "noisyopt": {
        "cmdline": [],
        "modules": [
            "noisyopt",
            "noisyopt.main",
            "noisyopt.tests",
            "noisyopt.tests.test_noisyopt",
            "noisyopt.version"
        ],
        "version": "0.2.2"
    },
    "nojoy-di": {
        "cmdline": [],
        "modules": [
            "NoJoy_DI",
            "NoJoy_DI.di",
            "NoJoy_DI.exceptions",
            "NoJoy_DI.patterns",
            "NoJoy_DI.service",
            "NoJoy_DI.utils"
        ],
        "version": "0.9.3"
    },
    "nokdoc": {
        "cmdline": [],
        "modules": [
            "nokdoc",
            "nokdoc.nokdoc"
        ],
        "version": "0.3.0"
    },
    "nokiartttl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nolds": {
        "cmdline": [],
        "modules": [
            "nolds",
            "nolds.examples",
            "nolds.measures",
            "nolds.test_measures"
        ],
        "version": "0.3.2"
    },
    "nolearn": {
        "cmdline": [],
        "modules": [
            "nolearn",
            "nolearn._compat",
            "nolearn.cache",
            "nolearn.caffe",
            "nolearn.dbn",
            "nolearn.decaf",
            "nolearn.grid_search",
            "nolearn.inischema",
            "nolearn.lasagne",
            "nolearn.lasagne.base",
            "nolearn.lasagne.handlers",
            "nolearn.lasagne.util",
            "nolearn.lasagne.visualize",
            "nolearn.metrics",
            "nolearn.overfeat",
            "nolearn.tests",
            "nolearn.tests.conftest",
            "nolearn.tests.test_cache",
            "nolearn.tests.test_grid_search",
            "nolearn.tests.test_inischema",
            "nolearn.tests.test_metrics",
            "nolearn.util"
        ],
        "version": "0.6.0"
    },
    "nolearn-utils": {
        "cmdline": [],
        "modules": [
            "examples",
            "examples.cifar10",
            "examples.cifar10.train",
            "nolearn_utils",
            "nolearn_utils.hooks",
            "nolearn_utils.image_utils",
            "nolearn_utils.iterators"
        ],
        "version": "0.2.2"
    },
    "nolp": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nom": {
        "cmdline": [],
        "modules": [
            "nom",
            "nom.cli",
            "nom.clipboard",
            "nom.compile",
            "nom.html2md",
            "nom.md2html",
            "nom.parsers",
            "nom.util",
            "nom.watch"
        ],
        "version": "1.2.0"
    },
    "nomad": {
        "cmdline": [],
        "modules": [
            "nomad",
            "nomad.engine",
            "nomad.engine.dbapi",
            "nomad.engine.sqla",
            "nomad.repo",
            "nomad.utils"
        ],
        "version": "1.19"
    },
    "nomad-script": {
        "cmdline": [],
        "modules": [
            "script",
            "script.bb_parameters",
            "script.bb_parser",
            "script.commands",
            "script.config",
            "script.exceptions",
            "script.instances",
            "script.nomad",
            "script.xml_manager"
        ],
        "version": "1.082"
    },
    "nomadgen": {
        "cmdline": [],
        "modules": [
            "nomadgen",
            "nomadgen.util",
            "nomadgen/jobspec",
            "nomadgen/jobspec.constants",
            "nomadgen/jobspec.ttypes"
        ],
        "version": "0.0.2"
    },
    "nomadic": {
        "cmdline": [],
        "modules": [
            "nomadic",
            "nomadic.cli",
            "nomadic.conf",
            "nomadic.daemon"
        ],
        "version": "1.1.1"
    },
    "nomanini.appengine": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "nomanini.appengine-scripts": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nomanini.ci": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nomanini.code": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "nomanini.documentation": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "nomanini.documentation-tools": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nomanini.gocd": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "nomanini.gocd-scripts": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "nomanini.promotion": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "nomanini.promotion-scripts": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nomanini.provisioning": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nomanini.schema-validator": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nomanini.service": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.0"
    },
    "nomen": {
        "cmdline": [],
        "modules": [
            "nomen",
            "nomen.config",
            "nomen.version"
        ],
        "version": "0.28"
    },
    "nomenclate": {
        "cmdline": [],
        "modules": [
            "nomenclate",
            "nomenclate.app",
            "nomenclate.core",
            "nomenclate.core.configurator",
            "nomenclate.core.exceptions",
            "nomenclate.core.nameparser",
            "nomenclate.core.nlog",
            "nomenclate.core.nomenclative",
            "nomenclate.core.nomenclature",
            "nomenclate.core.tools",
            "nomenclate.ui",
            "nomenclate.ui.nomenclate_UI",
            "tests",
            "tests.test_acceptance_workflow",
            "tests.test_configurator",
            "tests.test_nameparser",
            "tests.test_nomenclative",
            "tests.test_nomenclature",
            "tests.test_tools"
        ],
        "version": "1.0.6"
    },
    "nomenclature": {
        "cmdline": [],
        "modules": [
            "nomenclature",
            "nomenclature._lib",
            "nomenclature._version",
            "nomenclature.syscalls",
            "nomenclature.tests",
            "nomenclature.tests.test_syscalls"
        ],
        "version": "0.1.1"
    },
    "nomiepy": {
        "cmdline": [],
        "modules": [
            "nomiepy",
            "nomiepy.formatdate",
            "nomiepy.setup"
        ],
        "version": "0.1"
    },
    "nominaflora": {
        "cmdline": [],
        "modules": [
            "nominaflora",
            "nominaflora.NominaFlora"
        ],
        "version": "0.1.5"
    },
    "nominat": {
        "cmdline": [],
        "modules": [
            "nominat"
        ],
        "version": "0.2"
    },
    "nominatim": {
        "cmdline": [],
        "modules": [
            "nominatim",
            "nominatim.nominatim"
        ],
        "version": "0.1"
    },
    "nomine": {
        "cmdline": [],
        "modules": [
            "nomine",
            "nomine.generate",
            "nomine.random"
        ],
        "version": "0.0.2"
    },
    "nomit": {
        "cmdline": [],
        "modules": [
            "nomit",
            "nomit.constants",
            "nomit.handler"
        ],
        "version": "1.0"
    },
    "nonblockingloghandler": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.2"
    },
    "noncense": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nonconformist": {
        "cmdline": [],
        "modules": [
            "nonconformist",
            "nonconformist.acp",
            "nonconformist.base",
            "nonconformist.evaluation",
            "nonconformist.icp",
            "nonconformist.nc"
        ],
        "version": "2.0.0"
    },
    "noncrawl": {
        "cmdline": [
            "noncrawler",
            "noncrawlget"
        ],
        "modules": [
            "noncrawl",
            "noncrawl.crawler",
            "noncrawl.crawlers",
            "noncrawl.crawlers.htmlcrawler",
            "noncrawl.expression",
            "noncrawl.external",
            "noncrawl.external.htmlentitiesdecode",
            "noncrawl.generalinformation",
            "noncrawl.hostchecker",
            "noncrawl.parser",
            "noncrawl.statusprinter",
            "noncrawl.system",
            "noncrawl.various",
            "noncrawl.whiteblacklist"
        ],
        "version": "0.1"
    },
    "none": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "none-of-your-fucking-business": {
        "cmdline": [],
        "modules": [],
        "version": "69"
    },
    "noni": {
        "cmdline": [],
        "modules": [
            "noni",
            "noni.base",
            "noni.base.constant",
            "noni.base.singleton",
            "noni.config",
            "noni.config.config_loader",
            "noni.logger",
            "noni.logger.logger",
            "noni.scrapy",
            "noni.tests",
            "noni.tests.test_base",
            "noni.tests.test_base.test_constant",
            "noni.tests.test_base.test_singleton",
            "noni.tests.test_config",
            "noni.tests.test_config.test_config_loader",
            "noni.tests.test_logger",
            "noni.tests.test_logger.test_logger",
            "noni.tests.test_noni",
            "noni.tests.test_scrapy",
            "noni.tests.test_tornado",
            "noni.tests.test_tornado.test_http_client",
            "noni.tests.test_tornado.test_http_client.test_http_client",
            "noni.tests.test_twisted",
            "noni.tests.test_util",
            "noni.tornado",
            "noni.tornado.handler",
            "noni.tornado.handler.base_handler",
            "noni.tornado.http_client",
            "noni.tornado.http_client.http_client",
            "noni.tornado.timer",
            "noni.tornado.timer.timer_manager",
            "noni.twisted",
            "noni.util"
        ],
        "version": "0.0.1.dev6"
    },
    "nonlindyn": {
        "cmdline": [],
        "modules": [
            "nonlindyn",
            "nonlindyn.rk4"
        ],
        "version": "0.1"
    },
    "nonlinearleastsquares": {
        "cmdline": [],
        "modules": [
            "NonlinearLeastSquares",
            "NonlinearLeastSquares.NonlinearLeastSquares",
            "OptimizeSurfaceFit",
            "OptimizeSurfaceFit.OptimizeSurfaceFit"
        ],
        "version": "1.1.1"
    },
    "nonlineartmm": {
        "cmdline": [],
        "modules": [
            "NonlinearTMM",
            "NonlinearTMM._Material",
            "NonlinearTMM._NonlinearTMM",
            "NonlinearTMM._SecondOrderNLTMM"
        ],
        "version": "1.2.4"
    },
    "nonmockobjects": {
        "cmdline": [],
        "modules": [
            "nonmockobjects"
        ],
        "version": "0.2.1"
    },
    "nonnegmfpy": {
        "cmdline": [],
        "modules": [
            "NonnegMFPy",
            "NonnegMFPy.nmf"
        ],
        "version": "0.1.1"
    },
    "nonnewtonianicoflux": {
        "cmdline": [],
        "modules": [
            "nonNewtonianIcoFlux",
            "nonNewtonianIcoFlux.r1_6",
            "nonNewtonianIcoFlux.r1_6_dev",
            "nonNewtonianIcoFlux.r2_0_0",
            "nonNewtonianIcoFlux.r2_1_1"
        ],
        "version": "2.1"
    },
    "nonobvious": {
        "cmdline": [],
        "modules": [
            "nonobvious",
            "nonobvious.entities",
            "nonobvious.fields"
        ],
        "version": "0.1"
    },
    "nonofusedmadd": {
        "cmdline": [],
        "modules": [
            "nonofusedmadd"
        ],
        "version": "0.0.2"
    },
    "nonogram-solver": {
        "cmdline": [],
        "modules": [
            "nonogram_solver",
            "nonogram_solver.nonogram",
            "nonogram_solver.solver"
        ],
        "version": "0.1"
    },
    "nonprimary-foreignkey": {
        "cmdline": [],
        "modules": [
            "nonprimary_foreignkey",
            "nonprimary_foreignkey.fields"
        ],
        "version": "0.0.0"
    },
    "nonsense": {
        "cmdline": [],
        "modules": [
            "nonsense"
        ],
        "version": "0.1.0"
    },
    "nonsequitur": {
        "cmdline": [],
        "modules": [
            "nonsequitur"
        ],
        "version": "0.0.6"
    },
    "nonsqlite": {
        "cmdline": [],
        "modules": [
            "nonsqlite",
            "nonsqlite.Object",
            "nonsqlite.nonsqlite",
            "nonsqlite.test"
        ],
        "version": "0.6.12"
    },
    "nonstandard": {
        "cmdline": [],
        "modules": [
            "nonstandard",
            "nonstandard.core",
            "nonstandard.core.console",
            "nonstandard.core.import_hook",
            "nonstandard.core.transforms",
            "nonstandard.transformers",
            "nonstandard.transformers.convert_py2",
            "nonstandard.transformers.decrement",
            "nonstandard.transformers.french_syntax",
            "nonstandard.transformers.function_keyword",
            "nonstandard.transformers.increment",
            "nonstandard.transformers.nobreak_keyword",
            "nonstandard.transformers.pep542",
            "nonstandard.transformers.print_keyword",
            "nonstandard.transformers.repeat_keyword",
            "nonstandard.transformers.utils",
            "nonstandard.transformers.utils.one2one",
            "nonstandard.transformers.utils.simple2to3",
            "nonstandard.transformers.where_clause",
            "tests",
            "tests.common",
            "tests.decrement_testfile",
            "tests.french_testfile",
            "tests.function_testfile",
            "tests.increment_testfile",
            "tests.multiple_testfile",
            "tests.nobreak_testfile",
            "tests.pep542_testfile",
            "tests.print_testfile",
            "tests.repeat_testfile",
            "tests.test_decrement",
            "tests.test_french",
            "tests.test_function",
            "tests.test_increment",
            "tests.test_multiple_transforms",
            "tests.test_nobreak",
            "tests.test_pep542",
            "tests.test_print_keyword",
            "tests.test_repeat",
            "tests.test_where",
            "tests.where_testfile"
        ],
        "version": "0.9.3"
    },
    "nonstdlib": {
        "cmdline": [],
        "modules": [
            "nonstdlib",
            "nonstdlib.approx",
            "nonstdlib.cast",
            "nonstdlib.debug",
            "nonstdlib.fmt",
            "nonstdlib.io",
            "nonstdlib.meta",
            "nonstdlib.misc",
            "nonstdlib.sci",
            "nonstdlib.text"
        ],
        "version": "1.9.0"
    },
    "nontemplate": {
        "cmdline": [],
        "modules": [
            "nontemplate"
        ],
        "version": "0.13"
    },
    "nonude": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.1"
    },
    "nonzero": {
        "cmdline": [],
        "modules": [
            "nonzero"
        ],
        "version": "0.1.3"
    },
    "noobelectric": {
        "cmdline": [],
        "modules": [
            "noobee",
            "noobee.MM"
        ],
        "version": "0.5"
    },
    "noobhack": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "noodleflow": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "noodles": {
        "cmdline": [],
        "modules": [
            "noodles",
            "noodles.config",
            "noodles.display",
            "noodles.display.dumb_term",
            "noodles.display.lines",
            "noodles.display.pretty",
            "noodles.display.pretty_term",
            "noodles.display.simple",
            "noodles.display.simple_nc",
            "noodles.display.termapp",
            "noodles.draw_workflow",
            "noodles.files",
            "noodles.files.path",
            "noodles.files.registry",
            "noodles.interface",
            "noodles.interface.annotated_value",
            "noodles.interface.decorator",
            "noodles.interface.escalator",
            "noodles.interface.exceptions",
            "noodles.interface.functions",
            "noodles.prov",
            "noodles.prov.prov",
            "noodles.prov.workflow",
            "noodles.run",
            "noodles.run.config",
            "noodles.run.connection",
            "noodles.run.coroutine",
            "noodles.run.haploid",
            "noodles.run.hybrid",
            "noodles.run.job_keeper",
            "noodles.run.messages",
            "noodles.run.process",
            "noodles.run.protect",
            "noodles.run.queue",
            "noodles.run.run",
            "noodles.run.run_with_prov",
            "noodles.run.runners",
            "noodles.run.scheduler",
            "noodles.run.thread_pool",
            "noodles.run.worker",
            "noodles.run.xenon",
            "noodles.run.xenon.dynamic_pool",
            "noodles.run.xenon.runner",
            "noodles.run.xenon.xenon",
            "noodles.serial",
            "noodles.serial.as_dict",
            "noodles.serial.base",
            "noodles.serial.namedtuple",
            "noodles.serial.numpy",
            "noodles.serial.pickle",
            "noodles.serial.reasonable",
            "noodles.serial.registry",
            "noodles.storable",
            "noodles.tutorial",
            "noodles.utility",
            "noodles.worker",
            "noodles.workflow",
            "noodles.workflow.arguments",
            "noodles.workflow.create",
            "noodles.workflow.graphs",
            "noodles.workflow.model",
            "noodles.workflow.mutations"
        ],
        "version": "0.2.3"
    },
    "noody-utils": {
        "cmdline": [],
        "modules": [
            "noody",
            "noody.app",
            "noody.session"
        ],
        "version": "1.0.1"
    },
    "noolite": {
        "cmdline": [],
        "modules": [],
        "version": "1.4.0"
    },
    "noop": {
        "cmdline": [],
        "modules": [
            "noop"
        ],
        "version": "1.0"
    },
    "noophttp": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "noor": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "noora": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "noorm": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "nop": {
        "cmdline": [],
        "modules": [
            "nop",
            "nop.nop_base"
        ],
        "version": "0.1.1"
    },
    "nopassword": {
        "cmdline": [],
        "modules": [
            "nopassword",
            "nopassword.fs",
            "nopassword.keyfile",
            "nopassword.nopasslib"
        ],
        "version": "0.1.4"
    },
    "nope": {
        "cmdline": [
            "nope"
        ],
        "modules": [
            "nope",
            "nope.branches",
            "nope.builtin_types",
            "nope.builtins",
            "nope.caching",
            "nope.check",
            "nope.couscous",
            "nope.desugar",
            "nope.dispatch",
            "nope.environment",
            "nope.errors",
            "nope.files",
            "nope.identity_dict",
            "nope.inference",
            "nope.inference.assignment",
            "nope.inference.classes",
            "nope.inference.context",
            "nope.inference.ephemeral",
            "nope.inference.expressions",
            "nope.inference.statements",
            "nope.injection",
            "nope.iterables",
            "nope.lists",
            "nope.loop_control",
            "nope.main",
            "nope.module_resolution",
            "nope.modules",
            "nope.name_binding",
            "nope.name_declaration",
            "nope.name_resolution",
            "nope.nodes",
            "nope.parser",
            "nope.parser.transform",
            "nope.parser.typing",
            "nope.paths",
            "nope.platforms",
            "nope.platforms.dotnet",
            "nope.platforms.dotnet.codegeneration",
            "nope.platforms.dotnet.cs",
            "nope.platforms.nodejs",
            "nope.platforms.nodejs.codegeneration",
            "nope.platforms.nodejs.internals",
            "nope.platforms.nodejs.js",
            "nope.platforms.nodejs.operations",
            "nope.platforms.nodejs.transform",
            "nope.platforms.oo",
            "nope.platforms.python",
            "nope.returns",
            "nope.source",
            "nope.structure",
            "nope.textseek",
            "nope.transformers",
            "nope.types",
            "nope.types.attributes",
            "nope.types.classes",
            "nope.types.generics",
            "nope.types.structural",
            "nope.walk"
        ],
        "version": "0.1.0"
    },
    "norad": {
        "cmdline": [],
        "modules": [
            "norad",
            "norad.api",
            "norad.models"
        ],
        "version": "0.0.1"
    },
    "norcrawler": {
        "cmdline": [
            "NorCrawler"
        ],
        "modules": [],
        "version": "0.1"
    },
    "norduniclient": {
        "cmdline": [],
        "modules": [
            "norduniclient",
            "norduniclient.contextmanager",
            "norduniclient.core",
            "norduniclient.exceptions",
            "norduniclient.helpers",
            "norduniclient.models",
            "norduniclient.testing"
        ],
        "version": "1.0.9"
    },
    "nordvpn-converter": {
        "cmdline": [],
        "modules": [
            "nordvpn_converter",
            "nordvpn_converter.cli",
            "nordvpn_converter.converter"
        ],
        "version": "1.0.1"
    },
    "norecaptcha": {
        "cmdline": [],
        "modules": [
            "norecaptcha",
            "norecaptcha.captcha"
        ],
        "version": "0.3.0"
    },
    "norecaptcha-python3": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "norgepostnummer": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nori": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "norm": {
        "cmdline": [],
        "modules": [
            "norm",
            "norm.connection",
            "norm.norm",
            "norm.norm_psycopg2",
            "norm.norm_sqlite3",
            "norm.rows"
        ],
        "version": "1.1.3"
    },
    "normal": {
        "cmdline": [],
        "modules": [
            "normal"
        ],
        "version": "1.2.0"
    },
    "normalazy": {
        "cmdline": [],
        "modules": [
            "normalazy"
        ],
        "version": "0.0.3"
    },
    "normalise": {
        "cmdline": [],
        "modules": [
            "normalise",
            "normalise.class_ALPHA",
            "normalise.class_NUMB",
            "normalise.command_line",
            "normalise.data",
            "normalise.data.abbrev_dict",
            "normalise.data.contraction_list",
            "normalise.data.element_dict",
            "normalise.data.measurements",
            "normalise.data.pos_tag_dict",
            "normalise.data.tech_words",
            "normalise.data.timezones",
            "normalise.detect",
            "normalise.expand_EXPN",
            "normalise.expand_HTAG",
            "normalise.expand_NUMB",
            "normalise.expand_all",
            "normalise.normalisation",
            "normalise.spellcheck",
            "normalise.spelling",
            "normalise.splitter",
            "normalise.tag_MISC",
            "normalise.tagger"
        ],
        "version": "0.1.6"
    },
    "normality": {
        "cmdline": [],
        "modules": [
            "normality",
            "normality.cleaning",
            "normality.constants",
            "normality.encoding",
            "normality.ranges",
            "normality.stringify",
            "normality.transliteration"
        ],
        "version": "0.4.2"
    },
    "normalization": {
        "cmdline": [],
        "modules": [
            "normalization"
        ],
        "version": "0.4"
    },
    "normalize": {
        "cmdline": [],
        "modules": [
            "normalize",
            "normalize.coll",
            "normalize.diff",
            "normalize.empty",
            "normalize.exc",
            "normalize.identity",
            "normalize.property",
            "normalize.property.coll",
            "normalize.property.json",
            "normalize.property.meta",
            "normalize.property.types",
            "normalize.record",
            "normalize.record.json",
            "normalize.record.meta",
            "normalize.selector",
            "normalize.subtype",
            "normalize.visitor"
        ],
        "version": "1.0.4"
    },
    "normalize-cz-unicode": {
        "cmdline": [],
        "modules": [
            "normalize_cz_unicode"
        ],
        "version": "1.0.1"
    },
    "normalize-easy": {
        "cmdline": [],
        "modules": [
            "normalize_easy",
            "normalize_easy.normalize_easy"
        ],
        "version": "0.0.3"
    },
    "normalizepgn": {
        "cmdline": [],
        "modules": [
            "tmp",
            "tmp.db2pgn",
            "tmp.pgn2db"
        ],
        "version": "0.1.1"
    },
    "normalizer": {
        "cmdline": [],
        "modules": [
            "normalizer",
            "normalizer.core"
        ],
        "version": "0.2.1"
    },
    "normalizr": {
        "cmdline": [],
        "modules": [
            "normalizr",
            "normalizr.normalizr",
            "normalizr.regex"
        ],
        "version": "0.1.9"
    },
    "norman": {
        "cmdline": [],
        "modules": [
            "norman",
            "norman._database",
            "norman._except",
            "norman._field",
            "norman._query",
            "norman._six",
            "norman._store",
            "norman._table",
            "norman.serialise",
            "norman.validate"
        ],
        "version": "0.7.2"
    },
    "norman-join": {
        "cmdline": [],
        "modules": [
            "norman_join",
            "norman_join.norman_join"
        ],
        "version": "1.0.4"
    },
    "norman-list": {
        "cmdline": [],
        "modules": [
            "\u591a\u5c64\u9663\u5217\u6e05\u55ae\u53d6\u51fa"
        ],
        "version": "1.4.0"
    },
    "normdb": {
        "cmdline": [],
        "modules": [
            "backends",
            "backends.test_dbm_backend",
            "backends.test_fake_backend",
            "norm",
            "norm.backends",
            "norm.backends.dbm_backend",
            "norm.context",
            "norm.field",
            "norm.framework",
            "norm.model"
        ],
        "version": "0.0.4"
    },
    "normpy": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "normy": {
        "cmdline": [],
        "modules": [
            "normy",
            "normy.database"
        ],
        "version": "0.11"
    },
    "norns": {
        "cmdline": [],
        "modules": [
            "norns",
            "norns.__about__",
            "norns.cfg",
            "norns.exceptions"
        ],
        "version": "0.1.1"
    },
    "norsourceparser": {
        "cmdline": [],
        "modules": [
            "norsourceparser",
            "norsourceparser.core",
            "norsourceparser.core.config",
            "norsourceparser.core.constants",
            "norsourceparser.core.models",
            "norsourceparser.core.parser",
            "norsourceparser.core.rules",
            "norsourceparser.core.util",
            "norsourceparser.frontend"
        ],
        "version": "1.0.0rc2"
    },
    "nortek": {
        "cmdline": [],
        "modules": [
            "nortek",
            "nortek.arrays",
            "nortek.controls",
            "nortek.files",
            "nortek.structures"
        ],
        "version": "0.0.1"
    },
    "north": {
        "cmdline": [],
        "modules": [
            "north",
            "north.dbutils",
            "north.dbutils.dbutils_babel",
            "north.demo",
            "north.demo.settings",
            "north.dpy",
            "north.management",
            "north.management.commands",
            "north.management.commands.dump2py",
            "north.setup_info",
            "north.utils"
        ],
        "version": "0.1.7"
    },
    "norwind-nester": {
        "cmdline": [],
        "modules": [
            "norwind_nester"
        ],
        "version": "1.2.0"
    },
    "nos-python-sdk": {
        "cmdline": [],
        "modules": [
            "nos",
            "nos.client",
            "nos.client.auth",
            "nos.client.nos_client",
            "nos.client.utils",
            "nos.compat",
            "nos.connection",
            "nos.exceptions",
            "nos.serializer",
            "nos.transport",
            "test_nos",
            "test_nos.run_tests",
            "test_nos.simple_test",
            "test_nos.test_cases",
            "test_nos.test_client",
            "test_nos.test_client.test_auth",
            "test_nos.test_client.test_nos_client",
            "test_nos.test_connection",
            "test_nos.test_exceptions",
            "test_nos.test_serializer",
            "test_nos.test_smoke_test",
            "test_nos.test_transport"
        ],
        "version": "1.0.1"
    },
    "nosango": {
        "cmdline": [],
        "modules": [
            "nosango",
            "nosango.cases",
            "nosango.management",
            "nosango.management.commands",
            "nosango.management.commands.restore",
            "nosango.management.commands.truncate",
            "nosango.models",
            "nosango.plugin",
            "nosango.storage",
            "nosango.tools",
            "test_nosango",
            "test_nosango.test_tools"
        ],
        "version": "0.4"
    },
    "noscope": {
        "cmdline": [],
        "modules": [
            "noscope.make_me_an_offer"
        ],
        "version": "0.0.0"
    },
    "noscope.io": {
        "cmdline": [],
        "modules": [
            "noscope.make_me_an_offer"
        ],
        "version": "0.0.0"
    },
    "noscrapy": {
        "cmdline": [],
        "modules": [
            "noscrapy",
            "noscrapy.selectors",
            "noscrapy.selectors.base",
            "noscrapy.selectors.html",
            "noscrapy.selectors.link",
            "noscrapy.selectors.text",
            "noscrapy.utils",
            "noscrapy.utils.declarative",
            "noscrapy.utils.pyquery"
        ],
        "version": "0.0.2"
    },
    "nose": {
        "cmdline": [],
        "modules": [
            "_mypackage",
            "_mypackage._eggs",
            "_mypackage.bacon",
            "concurrent_shared",
            "concurrent_shared.test",
            "foo",
            "foo.bar",
            "foo.bar.buz",
            "foo.test_foo",
            "init_prefix_bug",
            "issue270",
            "issue270.foo_test",
            "mypackage",
            "mypackage.math",
            "mypackage.math.basic",
            "mypackage.strings",
            "mypublicpackage",
            "mypublicpackage._foo",
            "mypublicpackage.bar",
            "namespace_pkg",
            "namespace_pkg.example",
            "namespace_pkg.test_pkg",
            "nose",
            "nose.case",
            "nose.commands",
            "nose.config",
            "nose.core",
            "nose.exc",
            "nose.ext",
            "nose.ext.dtcompat",
            "nose.failure",
            "nose.importer",
            "nose.inspector",
            "nose.loader",
            "nose.plugins",
            "nose.plugins.allmodules",
            "nose.plugins.attrib",
            "nose.plugins.base",
            "nose.plugins.builtin",
            "nose.plugins.capture",
            "nose.plugins.collect",
            "nose.plugins.cover",
            "nose.plugins.debug",
            "nose.plugins.deprecated",
            "nose.plugins.doctests",
            "nose.plugins.errorclass",
            "nose.plugins.failuredetail",
            "nose.plugins.isolate",
            "nose.plugins.logcapture",
            "nose.plugins.manager",
            "nose.plugins.multiprocess",
            "nose.plugins.plugintest",
            "nose.plugins.prof",
            "nose.plugins.skip",
            "nose.plugins.testid",
            "nose.plugins.xunit",
            "nose.proxy",
            "nose.pyversion",
            "nose.result",
            "nose.selector",
            "nose.sphinx",
            "nose.sphinx.pluginopts",
            "nose.suite",
            "nose.tools",
            "nose.tools.nontrivial",
            "nose.tools.trivial",
            "nose.twistedtools",
            "nose.util",
            "package1",
            "package1.test_module",
            "package2c",
            "package2c.test_module",
            "package2f",
            "package2f.test_module",
            "pak",
            "pak.mod",
            "pak.sub",
            "test_multiprocessing",
            "test_multiprocessing.test_class",
            "test_multiprocessing.test_concurrent_shared",
            "test_multiprocessing.test_keyboardinterrupt",
            "test_multiprocessing.test_nameerror",
            "test_multiprocessing.test_process_timeout",
            "test_pak",
            "test_pak.test_mod",
            "test_pak.test_sub",
            "test_pak.test_sub.test_mod",
            "test_pak1",
            "test_pak1.test_mod",
            "test_pak2",
            "unwanted_package",
            "unwanted_package.test_spam",
            "wanted_package",
            "wanted_package.test_eggs"
        ],
        "version": "1.3.7"
    },
    "nose-alembic-attrib": {
        "cmdline": [],
        "modules": [
            "nose_alembic_attrib",
            "nose_alembic_attrib.alembic_attrib"
        ],
        "version": "0.1"
    },
    "nose-alert": {
        "cmdline": [],
        "modules": [
            "nosealert",
            "nosealert.notifications",
            "nosealert.platform",
            "nosealert.plugin",
            "nosealert.tests",
            "nosealert.tests.test_notifications",
            "nosealert.tests.test_platform",
            "nosealert.tests.test_plugin"
        ],
        "version": "0.9.1"
    },
    "nose-allure-plugin": {
        "cmdline": [],
        "modules": [
            "nose_allure",
            "nose_allure.utils"
        ],
        "version": "1.0.5"
    },
    "nose-audio": {
        "cmdline": [],
        "modules": [
            "naudio",
            "naudio.plugin"
        ],
        "version": "0.4"
    },
    "nose-autochecklog": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "nose-bisect": {
        "cmdline": [],
        "modules": [
            "nose_bisect",
            "nose_bisect.colors",
            "nose_bisect.plugin"
        ],
        "version": "0.1.0"
    },
    "nose-blacklist": {
        "cmdline": [],
        "modules": [
            "noseblacklist",
            "noseblacklist.plugin"
        ],
        "version": "0.0.1"
    },
    "nose-bleed": {
        "cmdline": [],
        "modules": [
            "nose_bleed",
            "nose_bleed.db",
            "nose_bleed.diff",
            "nose_bleed.plugin"
        ],
        "version": "0.5.1"
    },
    "nose-blockage": {
        "cmdline": [],
        "modules": [
            "blockage",
            "blockage.plugins",
            "blockage.tests"
        ],
        "version": "0.1.2"
    },
    "nose-capturestderr": {
        "cmdline": [],
        "modules": [
            "nose_capturestderr"
        ],
        "version": "1.2"
    },
    "nose-clean-env": {
        "cmdline": [],
        "modules": [
            "nose_clean_env"
        ],
        "version": "0.0.1"
    },
    "nose-colorxunit": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.0"
    },
    "nose-congestion": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "nose-connection-report": {
        "cmdline": [],
        "modules": [
            "nose_connection_report"
        ],
        "version": "0.2"
    },
    "nose-coolstorybro": {
        "cmdline": [],
        "modules": [
            "coolstorybro",
            "coolstorybro.coolstorybro"
        ],
        "version": "0.1"
    },
    "nose-cov": {
        "cmdline": [],
        "modules": [],
        "version": "1.6"
    },
    "nose-cover3": {
        "cmdline": [],
        "modules": [
            "nosecover3"
        ],
        "version": "0.1.0"
    },
    "nose-cprof": {
        "cmdline": [],
        "modules": [
            "nose_cprofile",
            "nose_cprofile.nose_cprofile"
        ],
        "version": "0.1.4"
    },
    "nose-customdescription": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.5"
    },
    "nose-dbreloader": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.1"
    },
    "nose-deadline": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "nose-descriptionfixer": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.4"
    },
    "nose-detecthttp": {
        "cmdline": [],
        "modules": [
            "detecthttp",
            "detecthttp._version",
            "detecthttp.plugin"
        ],
        "version": "0.1.3"
    },
    "nose-disabledoc": {
        "cmdline": [],
        "modules": [
            "nose_disabledoc",
            "nose_disabledoc.plugin"
        ],
        "version": "1.0"
    },
    "nose-django-querycount": {
        "cmdline": [],
        "modules": [
            "nosequerycount",
            "nosequerycount.plugin",
            "nosequerycount.utils"
        ],
        "version": "0.3"
    },
    "nose-docker": {
        "cmdline": [],
        "modules": [
            "nose_docker",
            "nose_docker.config",
            "nose_docker.plugin",
            "nose_docker.version",
            "tests",
            "tests.base",
            "tests.test_version"
        ],
        "version": "0.1.0"
    },
    "nose-docstring-modifier": {
        "cmdline": [],
        "modules": [
            "nose_docstring_modifier",
            "nose_docstring_modifier.nose_docstring_modifier"
        ],
        "version": "0.0.6"
    },
    "nose-easy-init": {
        "cmdline": [],
        "modules": [
            "nose_easy_init",
            "nose_easy_init.plugin"
        ],
        "version": "1.0.2"
    },
    "nose-enhanced-descriptions": {
        "cmdline": [],
        "modules": [
            "meta_tests",
            "nose_enhanced_descriptions"
        ],
        "version": "0.1.5"
    },
    "nose-env-config": {
        "cmdline": [],
        "modules": [
            "nose_env_config",
            "nose_env_config.plugin"
        ],
        "version": "0.1.6"
    },
    "nose-exclude": {
        "cmdline": [],
        "modules": [
            "test_dirs",
            "test_dirs.unittest",
            "test_dirs.unittest.tests"
        ],
        "version": "0.5.0"
    },
    "nose-extra-tools": {
        "cmdline": [],
        "modules": [
            "nose_extra_tools"
        ],
        "version": "1.0.0"
    },
    "nose-f7u12": {
        "cmdline": [],
        "modules": [
            "f7u12",
            "f7u12.f7u12"
        ],
        "version": "0.2"
    },
    "nose-faulthandler": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "nose-fixes": {
        "cmdline": [],
        "modules": [
            "nose_fixes",
            "nose_fixes.compat",
            "nose_fixes.plugin",
            "nose_fixes.tests",
            "nose_fixes.tests.test_collection",
            "nose_fixes.tests.test_docstrings",
            "nose_fixes.tests.test_plugin"
        ],
        "version": "1.3"
    },
    "nose-focus": {
        "cmdline": [],
        "modules": [
            "nose_focus",
            "nose_focus.plugin"
        ],
        "version": "0.1.3"
    },
    "nose-for-sneeze": {
        "cmdline": [],
        "modules": [
            "_mypackage",
            "_mypackage._eggs",
            "_mypackage.bacon",
            "concurrent_shared",
            "concurrent_shared.test",
            "foo",
            "foo.bar",
            "foo.bar.buz",
            "foo.test_foo",
            "init_prefix_bug",
            "issue270",
            "issue270.foo_test",
            "mypackage",
            "mypackage.math",
            "mypackage.math.basic",
            "mypackage.strings",
            "mypublicpackage",
            "mypublicpackage._foo",
            "mypublicpackage.bar",
            "namespace_pkg",
            "namespace_pkg.example",
            "namespace_pkg.test_pkg",
            "nose",
            "nose.case",
            "nose.commands",
            "nose.config",
            "nose.core",
            "nose.exc",
            "nose.ext",
            "nose.ext.dtcompat",
            "nose.failure",
            "nose.importer",
            "nose.inspector",
            "nose.loader",
            "nose.plugins",
            "nose.plugins.allmodules",
            "nose.plugins.attrib",
            "nose.plugins.base",
            "nose.plugins.builtin",
            "nose.plugins.capture",
            "nose.plugins.collect",
            "nose.plugins.cover",
            "nose.plugins.debug",
            "nose.plugins.deprecated",
            "nose.plugins.doctests",
            "nose.plugins.errorclass",
            "nose.plugins.failuredetail",
            "nose.plugins.isolate",
            "nose.plugins.logcapture",
            "nose.plugins.manager",
            "nose.plugins.multiprocess",
            "nose.plugins.plugintest",
            "nose.plugins.prof",
            "nose.plugins.skip",
            "nose.plugins.testid",
            "nose.plugins.xunit",
            "nose.proxy",
            "nose.pyversion",
            "nose.result",
            "nose.selector",
            "nose.sphinx",
            "nose.sphinx.pluginopts",
            "nose.suite",
            "nose.tools",
            "nose.tools.nontrivial",
            "nose.tools.trivial",
            "nose.twistedtools",
            "nose.util",
            "package1",
            "package1.test_module",
            "package2c",
            "package2c.test_module",
            "package2f",
            "package2f.test_module",
            "pak",
            "pak.mod",
            "pak.sub",
            "test_multiprocessing",
            "test_multiprocessing.test_class",
            "test_multiprocessing.test_concurrent_shared",
            "test_multiprocessing.test_keyboardinterrupt",
            "test_multiprocessing.test_nameerror",
            "test_multiprocessing.test_process_timeout",
            "test_pak",
            "test_pak.test_mod",
            "test_pak.test_sub",
            "test_pak.test_sub.test_mod",
            "test_pak1",
            "test_pak1.test_mod",
            "test_pak2",
            "unwanted_package",
            "unwanted_package.test_spam",
            "wanted_package",
            "wanted_package.test_eggs"
        ],
        "version": "1.3.0"
    },
    "nose-gevented-multiprocess": {
        "cmdline": [],
        "modules": [
            "nose_gevented_multiprocess",
            "nose_gevented_multiprocess.nose_gevented_multiprocess"
        ],
        "version": "0.1.3"
    },
    "nose-greenlet-profiler": {
        "cmdline": [],
        "modules": [
            "nose_greenlet_profiler"
        ],
        "version": "1.0.2"
    },
    "nose-hipchat": {
        "cmdline": [],
        "modules": [
            "nosehipchat",
            "nosehipchat.nosehipchat",
            "nosehipchat.version"
        ],
        "version": "0.0.1"
    },
    "nose-html": {
        "cmdline": [],
        "modules": [
            "nose_html"
        ],
        "version": "1.1"
    },
    "nose-html-output-parallel": {
        "cmdline": [],
        "modules": [
            "htmloutputparallel",
            "htmloutputparallel.htmloutputparallel",
            "htmloutputparallel.nose_wrapper",
            "htmloutputparallel.version"
        ],
        "version": "1.3"
    },
    "nose-html-report": {
        "cmdline": [],
        "modules": [
            "nose_html_report",
            "nose_html_report.html_reporter"
        ],
        "version": "0.1"
    },
    "nose-html-reporting": {
        "cmdline": [],
        "modules": [
            "nose_html_reporting"
        ],
        "version": "0.2.3"
    },
    "nose-htmloutput": {
        "cmdline": [],
        "modules": [
            "nose_htmloutput"
        ],
        "version": "0.6.0"
    },
    "nose-ignore-docstring": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "nose-ittr": {
        "cmdline": [],
        "modules": [
            "nose_ittr",
            "nose_ittr.ittr_multiplier",
            "nose_ittr.setup_ittr"
        ],
        "version": "0.0.4"
    },
    "nose-json": {
        "cmdline": [],
        "modules": [
            "nose_json",
            "nose_json..___init__",
            "nose_json.._plugin",
            "nose_json.plugin"
        ],
        "version": "0.2.4"
    },
    "nose-kleenex": {
        "cmdline": [],
        "modules": [
            "config",
            "config.tests",
            "db",
            "db.tests",
            "kleenex",
            "kleenex.config",
            "kleenex.db",
            "kleenex.diff",
            "kleenex.plugin",
            "kleenex.tracer"
        ],
        "version": "0.10.4"
    },
    "nose-knows": {
        "cmdline": [],
        "modules": [
            "knows",
            "knows.base",
            "knows.nose_plugin",
            "knows.pytest_plugin"
        ],
        "version": "0.1.2"
    },
    "nose-leak-detector": {
        "cmdline": [],
        "modules": [
            "nose_leak_detector",
            "nose_leak_detector.plugin"
        ],
        "version": "0.1.5"
    },
    "nose-lock": {
        "cmdline": [],
        "modules": [
            "nose_lock"
        ],
        "version": "0.2.3"
    },
    "nose-logpertest": {
        "cmdline": [],
        "modules": [
            "nose_logpertest",
            "nose_logpertest.logpertest",
            "tests",
            "tests.config",
            "tests.tests_logpertest",
            "tests.unittest_runner"
        ],
        "version": "0.0.1"
    },
    "nose-long-description": {
        "cmdline": [],
        "modules": [
            "noselongdescription",
            "noselongdescription.tests",
            "noselongdescription.tests.test_plugin"
        ],
        "version": "0.2"
    },
    "nose-machineout": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nose-machineout2": {
        "cmdline": [],
        "modules": [
            "nose_machineout"
        ],
        "version": "0.5.1"
    },
    "nose-minimal": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "nose-mocha-reporter": {
        "cmdline": [],
        "modules": [
            "nose_mocha_reporter"
        ],
        "version": "0.2"
    },
    "nose-moduleonly": {
        "cmdline": [],
        "modules": [
            "moduleonly",
            "moduleonly.plugin"
        ],
        "version": "0.1.1"
    },
    "nose-mongoengine": {
        "cmdline": [],
        "modules": [
            "nose_mongoengine"
        ],
        "version": "0.2.2"
    },
    "nose-mongoengine-wait-time": {
        "cmdline": [],
        "modules": [
            "nose_mongoengine_wait_time"
        ],
        "version": "0.0.1"
    },
    "nose-mp-split": {
        "cmdline": [],
        "modules": [
            "nosempsplit",
            "nosempsplit.plugin"
        ],
        "version": "0.0.1"
    },
    "nose-mycode": {
        "cmdline": [],
        "modules": [
            "mycode"
        ],
        "version": "0.0.3"
    },
    "nose-notify": {
        "cmdline": [],
        "modules": [
            "nosenotify",
            "nosenotify.adapters",
            "nosenotify.plugin"
        ],
        "version": "0.4.2"
    },
    "nose-numpyseterr": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "nose-nyancat": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nose-order-plugin": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "nose-pacman": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nose-pagerduty": {
        "cmdline": [],
        "modules": [
            "nose_pagerduty",
            "nose_pagerduty.NosePagerDuty"
        ],
        "version": "0.2.0"
    },
    "nose-parallel": {
        "cmdline": [],
        "modules": [
            "noseparallel",
            "noseparallel.plugin"
        ],
        "version": "0.2.1"
    },
    "nose-parameterized": {
        "cmdline": [],
        "modules": [
            "api",
            "api.errors",
            "api.merge",
            "api.pypi",
            "api.stats",
            "api.stdlib",
            "core",
            "core.logger",
            "core.patches",
            "core.utils"
        ],
        "version": "0.6.0"
    },
    "nose-parametrized": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "nose-pasteable": {
        "cmdline": [],
        "modules": [
            "pasteable",
            "pasteable.pasteable"
        ],
        "version": "0.3"
    },
    "nose-pathmunge": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "nose-pattern-exclude": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.3"
    },
    "nose-perfdump": {
        "cmdline": [],
        "modules": [
            "perfdump",
            "perfdump.connection",
            "perfdump.console",
            "perfdump.html",
            "perfdump.models",
            "perfdump.plugin"
        ],
        "version": "1.7"
    },
    "nose-performance": {
        "cmdline": [],
        "modules": [
            "noseperf",
            "noseperf.plugin",
            "noseperf.stacks",
            "noseperf.testcases",
            "noseperf.util",
            "noseperf.wrappers",
            "noseperf.wrappers.base",
            "noseperf.wrappers.django",
            "noseperf.wrappers.redis"
        ],
        "version": "0.4.1"
    },
    "nose-picker": {
        "cmdline": [],
        "modules": [
            "picker",
            "picker.nose_plugin",
            "picker.sample_multiprocess_script"
        ],
        "version": "0.5.3"
    },
    "nose-printlog": {
        "cmdline": [],
        "modules": [
            "noseprintlog",
            "noseprintlog.noseprintlog"
        ],
        "version": "0.2.0"
    },
    "nose-priority": {
        "cmdline": [
            "prioritize"
        ],
        "modules": [
            "nose_priority"
        ],
        "version": "0.1"
    },
    "nose-profile": {
        "cmdline": [],
        "modules": [
            "nose_profile",
            "nose_profile.kcachegrind"
        ],
        "version": "1.0"
    },
    "nose-progressive": {
        "cmdline": [],
        "modules": [
            "noseprogressive",
            "noseprogressive.bar",
            "noseprogressive.plugin",
            "noseprogressive.result",
            "noseprogressive.runner",
            "noseprogressive.tests",
            "noseprogressive.tests.test_bar",
            "noseprogressive.tests.test_integration",
            "noseprogressive.tests.test_tracebacks",
            "noseprogressive.tests.test_utils",
            "noseprogressive.tracebacks",
            "noseprogressive.utils",
            "noseprogressive.wrapping"
        ],
        "version": "1.5.1"
    },
    "nose-psprofile": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nose-pudb": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "nose-pynotify": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nose-pyversion": {
        "cmdline": [],
        "modules": [
            "nose_pyversion"
        ],
        "version": "0.1b1"
    },
    "nose-quickunit": {
        "cmdline": [],
        "modules": [
            "quickunit",
            "quickunit.diff",
            "quickunit.plugin",
            "quickunit.utils"
        ],
        "version": "0.5.4"
    },
    "nose-randomly": {
        "cmdline": [],
        "modules": [
            "abcd_package",
            "abcd_package.test_a",
            "abcd_package.test_b",
            "abcd_package.test_c",
            "abcd_package.test_d",
            "tests",
            "tests.test_basic"
        ],
        "version": "1.2.5"
    },
    "nose-rapido": {
        "cmdline": [],
        "modules": [
            "noserapido",
            "noserapido.plugin"
        ],
        "version": "0.0.2"
    },
    "nose-regression": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "nose-run-line-number": {
        "cmdline": [],
        "modules": [
            "nose_run_line_number",
            "nose_run_line_number.plugin"
        ],
        "version": "0.0.2"
    },
    "nose-runnable-test-names": {
        "cmdline": [],
        "modules": [
            "nose_runnable_test_names"
        ],
        "version": "0.1"
    },
    "nose-scenario": {
        "cmdline": [],
        "modules": [
            "nose_scenario",
            "nose_scenario.adapt",
            "nose_scenario.nose_plugin"
        ],
        "version": "0.1.3"
    },
    "nose-seed-faker": {
        "cmdline": [],
        "modules": [
            "seedfaker",
            "seedfaker._version",
            "seedfaker.plugin"
        ],
        "version": "0.1.2"
    },
    "nose-selecttests": {
        "cmdline": [],
        "modules": [
            "noseselecttests",
            "noseselecttests.tests",
            "tests",
            "tests.test_module",
            "tests.test_module_with_not_selected_class"
        ],
        "version": "0.5"
    },
    "nose-selenium": {
        "cmdline": [],
        "modules": [],
        "version": "0.07"
    },
    "nose-setenv": {
        "cmdline": [],
        "modules": [
            "nose_setenv",
            "nose_setenv.nose_setenv"
        ],
        "version": "0.1-1"
    },
    "nose-sfd": {
        "cmdline": [],
        "modules": [
            "sfd",
            "sfd.sfd"
        ],
        "version": "0.4"
    },
    "nose-show-skipped": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "nose-sigterm": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "nose-skipreq": {
        "cmdline": [],
        "modules": [],
        "version": "2.0"
    },
    "nose-sneeze": {
        "cmdline": [],
        "modules": [
            "sneeze",
            "sneeze.database",
            "sneeze.database.interface",
            "sneeze.database.models",
            "sneeze.nose_interface"
        ],
        "version": "0.0.2"
    },
    "nose-socket-whitelist": {
        "cmdline": [],
        "modules": [
            "socketwhitelist",
            "socketwhitelist.plugins"
        ],
        "version": "1.0.0"
    },
    "nose-sphinx-doc": {
        "cmdline": [],
        "modules": [
            "tests",
            "tests.test_functional",
            "tests.test_unit"
        ],
        "version": "0.1"
    },
    "nose-sqlcapture": {
        "cmdline": [],
        "modules": [
            "sqlcapture",
            "sqlcapture.loghandler",
            "sqlcapture.plugin",
            "tests",
            "tests.test_loghandler"
        ],
        "version": "1.0.5"
    },
    "nose-stoq": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.4"
    },
    "nose-subheadings-plugin": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "nose-subunit": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "nose-switch": {
        "cmdline": [],
        "modules": [
            "nose_switch",
            "nose_switch.nose_switch"
        ],
        "version": "0.1.5"
    },
    "nose-tags": {
        "cmdline": [],
        "modules": [
            "tag",
            "tag.plugin"
        ],
        "version": "0.2.1"
    },
    "nose-tap": {
        "cmdline": [],
        "modules": [
            "nose_tap",
            "nose_tap.i18n",
            "nose_tap.plugin",
            "nose_tap.tests",
            "nose_tap.tests.test_plugin"
        ],
        "version": "1.9"
    },
    "nose-template-usage": {
        "cmdline": [],
        "modules": [
            "templateusage",
            "templateusage.plugin"
        ],
        "version": "0.2.0"
    },
    "nose-terse-output": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.0"
    },
    "nose-test-select": {
        "cmdline": [],
        "modules": [
            "nose_test_select",
            "nose_test_select.nose_test_select"
        ],
        "version": "0.3"
    },
    "nose-test-sets": {
        "cmdline": [],
        "modules": [
            "nose_test_sets"
        ],
        "version": "0.2.1"
    },
    "nose-testconfig": {
        "cmdline": [],
        "modules": [],
        "version": "0.10"
    },
    "nose-testrail": {
        "cmdline": [],
        "modules": [
            "nose_testrail",
            "nose_testrail.plugin"
        ],
        "version": "0.1.0"
    },
    "nose-timelimit": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.2"
    },
    "nose-timer": {
        "cmdline": [],
        "modules": [
            "nosetimer",
            "nosetimer.plugin"
        ],
        "version": "0.7.0"
    },
    "nose-timing": {
        "cmdline": [],
        "modules": [
            "timing",
            "timing.plugins"
        ],
        "version": "0.1.1"
    },
    "nose-tooslow": {
        "cmdline": [],
        "modules": [
            "tooslow",
            "tooslow.tooslow"
        ],
        "version": "0.1"
    },
    "nose-traggr": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.5"
    },
    "nose-unittest": {
        "cmdline": [],
        "modules": [
            "nose_unittest",
            "nose_unittest.plugin"
        ],
        "version": "0.1.1"
    },
    "nose-warnings-filters": {
        "cmdline": [],
        "modules": [
            "nose_warnings_filters",
            "nose_warnings_filters.base",
            "nose_warnings_filters.testing",
            "nose_warnings_filters.testing.test_config",
            "nose_warnings_filters.testing.utils"
        ],
        "version": "0.1.5"
    },
    "nose-watch": {
        "cmdline": [],
        "modules": [
            "nosewatch",
            "nosewatch.plugin",
            "nosewatch.tests",
            "nosewatch.tests.test_plugin"
        ],
        "version": "0.9.1"
    },
    "nose-watcher": {
        "cmdline": [],
        "modules": [
            "nose_watcher",
            "nose_watcher.nose_watcher",
            "tests",
            "tests.test_nose_watcher"
        ],
        "version": "0.1.3"
    },
    "nose-xunitmp": {
        "cmdline": [],
        "modules": [
            "nose_xunitmp"
        ],
        "version": "0.4.0"
    },
    "nose2": {
        "cmdline": [],
        "modules": [
            "doctests_pkg1",
            "doctests_pkg1.docs1",
            "lib",
            "lib.mod1",
            "ltpkg",
            "ltpkg.tests",
            "ltpkg.tests.test_find_these",
            "ltpkg2",
            "ltpkg2.tests",
            "ltpkg2.tests.test_skip_these",
            "nose2",
            "nose2._version",
            "nose2.backports",
            "nose2.backports.ordereddict",
            "nose2.collector",
            "nose2.compat",
            "nose2.config",
            "nose2.events",
            "nose2.exceptions",
            "nose2.loader",
            "nose2.main",
            "nose2.plugins",
            "nose2.plugins.attrib",
            "nose2.plugins.buffer",
            "nose2.plugins.collect",
            "nose2.plugins.coverage",
            "nose2.plugins.debugger",
            "nose2.plugins.doctests",
            "nose2.plugins.dundertest",
            "nose2.plugins.failfast",
            "nose2.plugins.junitxml",
            "nose2.plugins.layers",
            "nose2.plugins.loader",
            "nose2.plugins.loader.discovery",
            "nose2.plugins.loader.eggdiscovery",
            "nose2.plugins.loader.functions",
            "nose2.plugins.loader.generators",
            "nose2.plugins.loader.loadtests",
            "nose2.plugins.loader.parameters",
            "nose2.plugins.loader.testcases",
            "nose2.plugins.loader.testclasses",
            "nose2.plugins.logcapture",
            "nose2.plugins.mp",
            "nose2.plugins.outcomes",
            "nose2.plugins.printhooks",
            "nose2.plugins.prof",
            "nose2.plugins.result",
            "nose2.plugins.testid",
            "nose2.result",
            "nose2.runner",
            "nose2.session",
            "nose2.sphinxext",
            "nose2.suite",
            "nose2.tests",
            "nose2.tests._common",
            "nose2.tests.functional",
            "nose2.tests.functional.test_attrib_plugin",
            "nose2.tests.functional.test_collect_plugin",
            "nose2.tests.functional.test_coverage",
            "nose2.tests.functional.test_decorators",
            "nose2.tests.functional.test_discovery_loader",
            "nose2.tests.functional.test_doctests_plugin",
            "nose2.tests.functional.test_dundertest_plugin",
            "nose2.tests.functional.test_eggdiscovery_loader",
            "nose2.tests.functional.test_junitxml_plugin",
            "nose2.tests.functional.test_layers_plugin",
            "nose2.tests.functional.test_loading",
            "nose2.tests.functional.test_loadtests_plugin",
            "nose2.tests.functional.test_logcapture_plugin",
            "nose2.tests.functional.test_main",
            "nose2.tests.functional.test_mp_plugin",
            "nose2.tests.functional.test_printhooks_plugin",
            "nose2.tests.functional.test_session",
            "nose2.tests.functional.test_such_dsl",
            "nose2.tests.functional.test_util",
            "nose2.tests.unit",
            "nose2.tests.unit.test_attrib_plugin",
            "nose2.tests.unit.test_buffer_plugin",
            "nose2.tests.unit.test_collect_plugin",
            "nose2.tests.unit.test_collector",
            "nose2.tests.unit.test_config",
            "nose2.tests.unit.test_debugger_plugin",
            "nose2.tests.unit.test_decorators",
            "nose2.tests.unit.test_doctest_plugin",
            "nose2.tests.unit.test_dundertest_plugin",
            "nose2.tests.unit.test_failfast",
            "nose2.tests.unit.test_functions_loader",
            "nose2.tests.unit.test_generators_plugin",
            "nose2.tests.unit.test_junitxml",
            "nose2.tests.unit.test_layers_plugin",
            "nose2.tests.unit.test_loader",
            "nose2.tests.unit.test_logcapture_plugin",
            "nose2.tests.unit.test_mp_plugin",
            "nose2.tests.unit.test_outcomes_plugin",
            "nose2.tests.unit.test_params_plugin",
            "nose2.tests.unit.test_plugin_api",
            "nose2.tests.unit.test_printhooks_plugin",
            "nose2.tests.unit.test_prof_plugin",
            "nose2.tests.unit.test_result",
            "nose2.tests.unit.test_session",
            "nose2.tests.unit.test_testcase_loader",
            "nose2.tests.unit.test_testclass_loader",
            "nose2.tests.unit.test_testid_plugin",
            "nose2.tests.unit.test_util",
            "nose2.tools",
            "nose2.tools.decorators",
            "nose2.tools.params",
            "nose2.tools.such",
            "nose2.util",
            "pkg1",
            "pkg1.mod1",
            "pkg1.test",
            "pkg1.test.test_things",
            "pkg2"
        ],
        "version": "0.6.5"
    },
    "nose2-cov": {
        "cmdline": [],
        "modules": [],
        "version": "1.0a4"
    },
    "nose2-gae": {
        "cmdline": [],
        "modules": [
            "nose2gae"
        ],
        "version": "0.1.7"
    },
    "nose2-html-report": {
        "cmdline": [],
        "modules": [
            "nose2_html_report",
            "nose2_html_report.html_report",
            "nose2_html_report.render"
        ],
        "version": "0.4.0"
    },
    "nose2-spark": {
        "cmdline": [],
        "modules": [
            "nose2_spark"
        ],
        "version": "0.3"
    },
    "nose2dep": {
        "cmdline": [],
        "modules": [
            "nose2dep",
            "nose2dep.core"
        ],
        "version": "0.2.2"
    },
    "nose2django": {
        "cmdline": [],
        "modules": [
            "nose2django",
            "nose2django.config",
            "nose2django.nose2django"
        ],
        "version": "0.1.2"
    },
    "nose2pytest": {
        "cmdline": [],
        "modules": [
            "nose2pytest",
            "nose2pytest.assert_tools",
            "nose2pytest.script"
        ],
        "version": "1.0.8"
    },
    "nose2unitth": {
        "cmdline": [],
        "modules": [
            "nose2unitth",
            "nose2unitth.core"
        ],
        "version": "0.0.12"
    },
    "noseapp": {
        "cmdline": [],
        "modules": [
            "noseapp",
            "noseapp.app",
            "noseapp.app.base",
            "noseapp.app.config",
            "noseapp.app.context",
            "noseapp.case",
            "noseapp.case.base",
            "noseapp.case.context",
            "noseapp.case.decorators",
            "noseapp.case.screenplay",
            "noseapp.core",
            "noseapp.core.collector",
            "noseapp.core.constants",
            "noseapp.core.extensions",
            "noseapp.core.factory",
            "noseapp.core.loader",
            "noseapp.core.program",
            "noseapp.core.runner",
            "noseapp.core.runner.base",
            "noseapp.core.runner.performers",
            "noseapp.core.runner.performers.gevent",
            "noseapp.core.runner.performers.multiprocessing",
            "noseapp.core.runner.performers.threading",
            "noseapp.core.suite",
            "noseapp.core.suite.base",
            "noseapp.core.suite.performers",
            "noseapp.core.suite.performers.gevent",
            "noseapp.core.suite.performers.threading",
            "noseapp.datastructures",
            "noseapp.ext",
            "noseapp.exthook",
            "noseapp.manage",
            "noseapp.manage.commands",
            "noseapp.manage.funcs",
            "noseapp.plugins",
            "noseapp.plugins.base",
            "noseapp.plugins.configure",
            "noseapp.suite",
            "noseapp.suite.base",
            "noseapp.suite.context",
            "noseapp.tools",
            "noseapp.tools.output",
            "noseapp.utils",
            "noseapp.utils.common",
            "noseapp.utils.pyv"
        ],
        "version": "2.2.2"
    },
    "noseapp-alchemy": {
        "cmdline": [],
        "modules": [
            "noseapp_alchemy",
            "noseapp_alchemy.base",
            "noseapp_alchemy.config",
            "noseapp_alchemy.constants",
            "noseapp_alchemy.exc",
            "noseapp_alchemy.mysql_ex",
            "noseapp_alchemy.orm",
            "noseapp_alchemy.registry",
            "noseapp_alchemy.session"
        ],
        "version": "1.0.0"
    },
    "noseapp-daemon": {
        "cmdline": [],
        "modules": [
            "noseapp_daemon",
            "noseapp_daemon.management",
            "noseapp_daemon.presets",
            "noseapp_daemon.runner",
            "noseapp_daemon.service",
            "noseapp_daemon.utils",
            "tests",
            "tests.daemon",
            "tests.management",
            "tests.runner",
            "tests.service"
        ],
        "version": "2.3.0"
    },
    "noseapp-requests": {
        "cmdline": [],
        "modules": [
            "noseapp_requests",
            "noseapp_requests.base",
            "noseapp_requests.config",
            "noseapp_requests.urlbuilder"
        ],
        "version": "0.0.2"
    },
    "noseapp-selenium": {
        "cmdline": [],
        "modules": [
            "noseapp_selenium",
            "noseapp_selenium.base",
            "noseapp_selenium.config",
            "noseapp_selenium.drivers",
            "noseapp_selenium.forms",
            "noseapp_selenium.forms.fields",
            "noseapp_selenium.forms.group",
            "noseapp_selenium.forms.iterators",
            "noseapp_selenium.page_object",
            "noseapp_selenium.page_object.base",
            "noseapp_selenium.page_object.router",
            "noseapp_selenium.page_object.wait",
            "noseapp_selenium.proxy",
            "noseapp_selenium.query",
            "noseapp_selenium.query.base",
            "noseapp_selenium.query.handler",
            "noseapp_selenium.query.processor",
            "noseapp_selenium.query.result",
            "noseapp_selenium.tools"
        ],
        "version": "1.2.3"
    },
    "noseapp-workspace": {
        "cmdline": [],
        "modules": [
            "noseapp_workspace",
            "noseapp_workspace.utils",
            "tests",
            "tests.base"
        ],
        "version": "0.4.0"
    },
    "nosebook": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.0"
    },
    "nosecolor": {
        "cmdline": [],
        "modules": [
            "nosecolor"
        ],
        "version": "0.1"
    },
    "nosecomplete": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "nosedbreport": {
        "cmdline": [],
        "modules": [
            "nosedbreport",
            "nosedbreport.base",
            "nosedbreport.mysql",
            "nosedbreport.plugin",
            "nosedbreport.sqlite"
        ],
        "version": "0.3.0"
    },
    "nosedep": {
        "cmdline": [],
        "modules": [
            "nosedep"
        ],
        "version": "0.6"
    },
    "nosedive": {
        "cmdline": [],
        "modules": [
            "NoseDive",
            "NoseDive.depth"
        ],
        "version": "0.15"
    },
    "nosedjango": {
        "cmdline": [],
        "modules": [
            "nosedjango",
            "nosedjango.nosedjango",
            "nosedjango.plugins",
            "nosedjango.plugins.base_plugin",
            "nosedjango.plugins.celery_plugin",
            "nosedjango.plugins.cherrypy_plugin",
            "nosedjango.plugins.file_storage_plugin",
            "nosedjango.plugins.selenium_plugin",
            "nosedjango.plugins.settings_target_plugin",
            "nosedjango.plugins.sphinxsearch_plugin",
            "nosedjango.plugins.sqlite_plugin",
            "nosedjango.plugins.ssh_tunnel_plugin"
        ],
        "version": "1.0.13"
    },
    "noseenv": {
        "cmdline": [],
        "modules": [
            "noseenv",
            "noseenv.tests"
        ],
        "version": "0.0.0"
    },
    "nosegae": {
        "cmdline": [],
        "modules": [
            "nosegae"
        ],
        "version": "0.5.10"
    },
    "nosegoat": {
        "cmdline": [],
        "modules": [
            "nosegoat"
        ],
        "version": "0.1"
    },
    "nosegrowl": {
        "cmdline": [],
        "modules": [],
        "version": "0.4"
    },
    "nosegrowl2": {
        "cmdline": [],
        "modules": [
            "nosegrowl2"
        ],
        "version": "0.3"
    },
    "nosegrowlnotify": {
        "cmdline": [],
        "modules": [
            "nosegrowlnotify"
        ],
        "version": "0.1"
    },
    "nosegunit": {
        "cmdline": [],
        "modules": [
            "nosegunit"
        ],
        "version": "0.0.1"
    },
    "nosehtml": {
        "cmdline": [],
        "modules": [
            "nosehtml",
            "nosehtml.plugin"
        ],
        "version": "0.4.2"
    },
    "nosehtmloutput": {
        "cmdline": [],
        "modules": [
            "htmloutput",
            "htmloutput.htmloutput",
            "htmloutput.nose_wrapper",
            "htmloutput.version"
        ],
        "version": "0.0.5"
    },
    "nosehtmloutput-2": {
        "cmdline": [],
        "modules": [
            "htmloutput",
            "htmloutput.htmloutput"
        ],
        "version": "1.0"
    },
    "nosejs": {
        "cmdline": [],
        "modules": [],
        "version": "0.9.4"
    },
    "nosekay": {
        "cmdline": [],
        "modules": [
            "nosekay"
        ],
        "version": "0.1.2"
    },
    "noselfs": {
        "cmdline": [],
        "modules": [
            "noselfs",
            "noselfs.decorator",
            "noselfs.meta",
            "noselfs.testbase"
        ],
        "version": "0.0.9"
    },
    "noselint": {
        "cmdline": [],
        "modules": [
            "noselint",
            "noselint.pylintplugin"
        ],
        "version": "0.0.2"
    },
    "noselisting": {
        "cmdline": [],
        "modules": [],
        "version": "0.2a"
    },
    "noselog": {
        "cmdline": [],
        "modules": [
            "noselog",
            "noselog.nose_plugin"
        ],
        "version": "0.0.5"
    },
    "nosemerge": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "nosemultiversion": {
        "cmdline": [],
        "modules": [
            "nosemultiversion"
        ],
        "version": "0.1"
    },
    "nosenicedots": {
        "cmdline": [],
        "modules": [
            "nosenicedots",
            "nosenicedots.plugin",
            "nosenicedots.tests",
            "nosenicedots.tests.test_functional",
            "nosenicedots.tests.test_units"
        ],
        "version": "0.5"
    },
    "noseofyeti": {
        "cmdline": [],
        "modules": [
            "noseOfYeti",
            "noseOfYeti.plugins",
            "noseOfYeti.plugins.nose2_plugin",
            "noseOfYeti.plugins.nosetests",
            "noseOfYeti.plugins.pylinter",
            "noseOfYeti.plugins.sphinx",
            "noseOfYeti.plugins.support",
            "noseOfYeti.plugins.support.spec_options",
            "noseOfYeti.plugins.support.test_chooser",
            "noseOfYeti.specs",
            "noseOfYeti.specs.complex_tokeniser_test",
            "noseOfYeti.specs.config_test",
            "noseOfYeti.specs.config_util_test",
            "noseOfYeti.specs.general_tokeniser_test",
            "noseOfYeti.specs.helpers",
            "noseOfYeti.specs.imports_test",
            "noseOfYeti.specs.matchers",
            "noseOfYeti.specs.nesting_tokeniser_test",
            "noseOfYeti.specs.spec_codec_test",
            "noseOfYeti.specs.support_test",
            "noseOfYeti.specs.test_chooser_test",
            "noseOfYeti.specs.translation_tokeniser_test",
            "noseOfYeti.tokeniser",
            "noseOfYeti.tokeniser.async_support",
            "noseOfYeti.tokeniser.config",
            "noseOfYeti.tokeniser.containers",
            "noseOfYeti.tokeniser.imports",
            "noseOfYeti.tokeniser.spec_codec",
            "noseOfYeti.tokeniser.support",
            "noseOfYeti.tokeniser.tokeniser",
            "noseOfYeti.tokeniser.tokens",
            "noseOfYeti.tokeniser.tracker"
        ],
        "version": "1.7"
    },
    "noseonalchemist": {
        "cmdline": [],
        "modules": [
            "noseonalchemist"
        ],
        "version": "0.1"
    },
    "nosepicker": {
        "cmdline": [],
        "modules": [
            "nosepicker",
            "nosepicker.log",
            "nosepicker.parser",
            "nosepicker.shell"
        ],
        "version": "1.0.3"
    },
    "nosepipe": {
        "cmdline": [],
        "modules": [],
        "version": "0.8"
    },
    "nosepride": {
        "cmdline": [],
        "modules": [
            "nosepride",
            "nosepride.formatters",
            "nosepride.formatters.base",
            "nosepride.formatters.fabulous",
            "nosepride.formatters.plain",
            "nosepride.nosepride",
            "nosepride.plugins",
            "nosepride.reports",
            "nosepride.streams",
            "nosepride.utils",
            "nosepride.utils.lazy",
            "nosepride.utils.shims",
            "nosepride.utils.traceback"
        ],
        "version": "0.1.7"
    },
    "nosescript": {
        "cmdline": [],
        "modules": [
            "nosescript",
            "nosescript.bridge",
            "nosescript.bridge.qunit",
            "nosescript.loader",
            "nosescript.resources",
            "nosescript.test_assertions",
            "nosescript.unit"
        ],
        "version": "0.1.0"
    },
    "nosespec": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "nosetalisker": {
        "cmdline": [],
        "modules": [
            "nosetalisker",
            "nosetalisker.plugin"
        ],
        "version": "0.2.1"
    },
    "nosetest-tracker": {
        "cmdline": [],
        "modules": [
            "nosetest_tracker",
            "nosetest_tracker.app"
        ],
        "version": "0.0.3"
    },
    "nosetests-json-extended": {
        "cmdline": [],
        "modules": [
            "nosetests_json_extended",
            "nosetests_json_extended.plugin",
            "nosetests_json_extended.sink",
            "nosetests_json_extended.test_plugin",
            "nosetests_json_extended.test_sink"
        ],
        "version": "0.1.0"
    },
    "nosetests-json-extended-parallel": {
        "cmdline": [],
        "modules": [
            "nosetests_json_extended_parallel",
            "nosetests_json_extended_parallel.plugin",
            "nosetests_json_extended_parallel.sink",
            "nosetests_json_extended_parallel.test_plugin",
            "nosetests_json_extended_parallel.test_sink"
        ],
        "version": "1.0"
    },
    "nosetp": {
        "cmdline": [],
        "modules": [
            "nosetp",
            "nosetp.commands",
            "nosetp.version",
            "tests",
            "tests.std_version_tests"
        ],
        "version": "1.0.0.1-r2"
    },
    "nosetrim": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nosetty": {
        "cmdline": [],
        "modules": [
            "bakery",
            "bakery..___init__",
            "nosetty",
            "nosetty..___init__",
            "nosetty.._nosetty",
            "nosetty.nosetty",
            "nosetty.test",
            "nosetty.test..___init__",
            "nosetty.test.._test_functionality",
            "nosetty.test.._test_units",
            "nosetty.test.nosepassthru",
            "nosetty.test.test_functionality",
            "nosetty.test.test_units"
        ],
        "version": "0.4"
    },
    "nosetwilio": {
        "cmdline": [],
        "modules": [
            "nosetwilio"
        ],
        "version": "0.1"
    },
    "nosexcover": {
        "cmdline": [],
        "modules": [
            "nosexcover",
            "nosexcover.nosexcover",
            "nosexcover.tests"
        ],
        "version": "1.0.11"
    },
    "nosexjokes": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nosexml": {
        "cmdline": [],
        "modules": [
            "nosexml",
            "nosexml.plugin"
        ],
        "version": "0.19"
    },
    "nosexunit": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.3"
    },
    "nosexunitlite": {
        "cmdline": [],
        "modules": [
            "nosexunitlite",
            "nosexunitlite.const",
            "nosexunitlite.core",
            "nosexunitlite.cyclo",
            "nosexunitlite.excepts",
            "nosexunitlite.plugin",
            "nosexunitlite.tools"
        ],
        "version": "0.3.3"
    },
    "nosey": {
        "cmdline": [],
        "modules": [
            "nosey",
            "nosey.command",
            "nosey.watcher"
        ],
        "version": "0.1.3"
    },
    "nosh": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nosier": {
        "cmdline": [],
        "modules": [
            "nosier",
            "nosier.constants",
            "nosier.nosier"
        ],
        "version": "1.1"
    },
    "nosk": {
        "cmdline": [],
        "modules": [
            "nosk"
        ],
        "version": "1.1.1"
    },
    "noskov": {
        "cmdline": [],
        "modules": [
            "Noskov"
        ],
        "version": "0.1.0"
    },
    "nosmsd": {
        "cmdline": [],
        "modules": [
            "nosmsd",
            "nosmsd.admin",
            "nosmsd.database",
            "nosmsd.django_routers",
            "nosmsd.handlers",
            "nosmsd.management",
            "nosmsd.management.commands",
            "nosmsd.management.commands.nosmsd_incoming",
            "nosmsd.management.commands.nosmsd_inject",
            "nosmsd.management.commands.nosmsd_sendout",
            "nosmsd.models",
            "nosmsd.nosmsd_incoming",
            "nosmsd.nosmsd_inject",
            "nosmsd.nosmsd_sendout",
            "nosmsd.settings",
            "nosmsd.smsd_errors",
            "nosmsd.utils"
        ],
        "version": "0.27"
    },
    "nosov": {
        "cmdline": [],
        "modules": [
            "Nosov"
        ],
        "version": "0.1.0"
    },
    "nosql": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nosql-rest-preprocessor": {
        "cmdline": [],
        "modules": [
            "nosql_rest_preprocessor",
            "nosql_rest_preprocessor.exceptions",
            "nosql_rest_preprocessor.models",
            "nosql_rest_preprocessor.resolvers",
            "nosql_rest_preprocessor.utils"
        ],
        "version": "0.3"
    },
    "nosqlalchemy": {
        "cmdline": [],
        "modules": [
            "nosqlalchemy",
            "nosqlalchemy.nosql",
            "nosqlalchemy.tests",
            "nosqlalchemy.tests.nosqlalchemy_test"
        ],
        "version": "0.9.6"
    },
    "nosqldb": {
        "cmdline": [],
        "modules": [
            "nosqldb",
            "nosqldb.config",
            "nosqldb.jsonutils",
            "nosqldb.nosqldb",
            "nosqldb.oracle",
            "nosqldb.oracle.kv",
            "nosqldb.oracle.kv.proxy",
            "nosqldb.oracle.kv.proxy.gen",
            "nosqldb.oracle.kv.proxy.gen.ONDB",
            "nosqldb.oracle.kv.proxy.gen.constants",
            "nosqldb.oracle.kv.proxy.gen.ttypes",
            "nosqldb.utilities"
        ],
        "version": "4.4.8"
    },
    "nosqlite": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.3"
    },
    "nostrain": {
        "cmdline": [],
        "modules": [
            "nostrain"
        ],
        "version": "0.1.3"
    },
    "nostril": {
        "cmdline": [],
        "modules": [
            "nostril",
            "nostril.core"
        ],
        "version": "0.1.1"
    },
    "nosy": {
        "cmdline": [],
        "modules": [
            "nosy",
            "nosy.nosy"
        ],
        "version": "1.2"
    },
    "nosyd": {
        "cmdline": [],
        "modules": [
            "nosyd",
            "nosyd.cache",
            "nosyd.nosyd",
            "nosyd.tests",
            "nosyd.tests.test_cache",
            "nosyd.tests.test_nosyd",
            "nosyd.utils",
            "nosyd.xunit"
        ],
        "version": "0.0.5"
    },
    "not": {
        "cmdline": [],
        "modules": [
            "notpy",
            "notpy.client",
            "notpy.cmd",
            "notpy.constants",
            "notpy.enml",
            "notpy.oauth"
        ],
        "version": "2.0.2"
    },
    "not-dispatch": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nota": {
        "cmdline": [],
        "modules": [
            "nota",
            "nota.main",
            "nota.notaclass"
        ],
        "version": "0.8.0"
    },
    "notabene": {
        "cmdline": [],
        "modules": [
            "notabene",
            "notabene.kombu_driver",
            "tests",
            "tests.test_kombu"
        ],
        "version": "0.2.dev31"
    },
    "notable": {
        "cmdline": [
            "notable"
        ],
        "modules": [
            "notable",
            "notable.app",
            "notable.bottle",
            "notable.crypt",
            "notable.db"
        ],
        "version": "0.4.2"
    },
    "notario": {
        "cmdline": [],
        "modules": [
            "notario",
            "notario._compat",
            "notario.decorators",
            "notario.engine",
            "notario.exceptions",
            "notario.normal",
            "notario.regex",
            "notario.store",
            "notario.tests",
            "notario.tests.test_decorators",
            "notario.tests.test_engine",
            "notario.tests.test_exceptions",
            "notario.tests.test_functional",
            "notario.tests.test_normal",
            "notario.tests.test_regex",
            "notario.tests.test_utils",
            "notario.tests.util",
            "notario.tests.validators",
            "notario.tests.validators.test_chainable",
            "notario.tests.validators.test_cherry",
            "notario.tests.validators.test_hybrid",
            "notario.tests.validators.test_iterables",
            "notario.tests.validators.test_recursive",
            "notario.tests.validators.test_types",
            "notario.utils",
            "notario.validators",
            "notario.validators.chainable",
            "notario.validators.iterables",
            "notario.validators.recursive",
            "notario.validators.types"
        ],
        "version": "0.0.12"
    },
    "notario.minion": {
        "cmdline": [],
        "modules": [
            "ntr",
            "ntr.cli",
            "ntr.cli.controllers",
            "ntr.cli.controllers.base",
            "ntr.cli.main",
            "ntr.core",
            "ntr.core.exc",
            "ntr.core.note",
            "tests",
            "tests.notario_test",
            "tests.note_test"
        ],
        "version": "0.6.0"
    },
    "notary": {
        "cmdline": [],
        "modules": [
            "notary",
            "notary.__version__",
            "notary.cli",
            "notary.models",
            "notary.utils"
        ],
        "version": "0.1.16"
    },
    "notch.agent": {
        "cmdline": [],
        "modules": [
            "notch",
            "notch.agent",
            "notch.agent.agent",
            "notch.agent.applications",
            "notch.agent.controller",
            "notch.agent.credential",
            "notch.agent.device_factory",
            "notch.agent.device_manager",
            "notch.agent.devices",
            "notch.agent.devices.dev_adva_fsp",
            "notch.agent.devices.dev_arbor",
            "notch.agent.devices.dev_binos",
            "notch.agent.devices.dev_ftos",
            "notch.agent.devices.dev_ios",
            "notch.agent.devices.dev_junos",
            "notch.agent.devices.dev_netscreen",
            "notch.agent.devices.dev_nortel_bay",
            "notch.agent.devices.dev_nortel_esr",
            "notch.agent.devices.dev_nortel_esu",
            "notch.agent.devices.dev_nos",
            "notch.agent.devices.dev_omniswitch",
            "notch.agent.devices.dev_paramiko",
            "notch.agent.devices.dev_timos",
            "notch.agent.devices.device",
            "notch.agent.devices.paramiko_expect",
            "notch.agent.devices.scp",
            "notch.agent.devices.trans",
            "notch.agent.devices.trans_paramiko_expect",
            "notch.agent.devices.trans_ssh",
            "notch.agent.devices.trans_telnet",
            "notch.agent.errors",
            "notch.agent.handlers",
            "notch.agent.lru",
            "notch.agent.notch_config",
            "notch.agent.session",
            "notch.agent.tp",
            "notch.agent.utils",
            "notch.agent.wsgi"
        ],
        "version": "0.5"
    },
    "notch.client": {
        "cmdline": [],
        "modules": [
            "notch",
            "notch.client",
            "notch.client.client",
            "notch.client.errors",
            "notch.client.lb_transport",
            "notch.client.shard"
        ],
        "version": "0.5"
    },
    "note": {
        "cmdline": [],
        "modules": [
            "note",
            "note.client",
            "note.db_api",
            "note.mongo_driver",
            "note.note_printer",
            "note.server",
            "note.sql_driver",
            "note.util",
            "note.web",
            "tests",
            "tests.test_client",
            "tests.test_mongo_driver",
            "tests.test_note",
            "tests.test_printer",
            "tests.test_server",
            "tests.test_sql_driver"
        ],
        "version": "0.5.2"
    },
    "note0": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "notebook": {
        "cmdline": [],
        "modules": [
            "notebook",
            "notebook._sysinfo",
            "notebook._tz",
            "notebook._version",
            "notebook.allow76",
            "notebook.auth",
            "notebook.auth.login",
            "notebook.auth.logout",
            "notebook.auth.security",
            "notebook.auth.tests",
            "notebook.auth.tests.test_security",
            "notebook.base",
            "notebook.base.handlers",
            "notebook.base.zmqhandlers",
            "notebook.bundler",
            "notebook.bundler.bundlerextensions",
            "notebook.bundler.handlers",
            "notebook.bundler.tarball_bundler",
            "notebook.bundler.tests",
            "notebook.bundler.tests.test_bundler_api",
            "notebook.bundler.tests.test_bundler_tools",
            "notebook.bundler.tests.test_bundlerextension",
            "notebook.bundler.tools",
            "notebook.bundler.zip_bundler",
            "notebook.edit",
            "notebook.edit.handlers",
            "notebook.extensions",
            "notebook.files",
            "notebook.files.handlers",
            "notebook.jstest",
            "notebook.kernelspecs",
            "notebook.kernelspecs.handlers",
            "notebook.log",
            "notebook.nbconvert",
            "notebook.nbconvert.handlers",
            "notebook.nbconvert.tests",
            "notebook.nbconvert.tests.test_nbconvert_handlers",
            "notebook.nbextensions",
            "notebook.notebook",
            "notebook.notebook.handlers",
            "notebook.notebookapp",
            "notebook.serverextensions",
            "notebook.services",
            "notebook.services.api",
            "notebook.services.api.handlers",
            "notebook.services.api.tests",
            "notebook.services.api.tests.test_api",
            "notebook.services.config",
            "notebook.services.config.handlers",
            "notebook.services.config.manager",
            "notebook.services.config.tests",
            "notebook.services.config.tests.test_config_api",
            "notebook.services.contents",
            "notebook.services.contents.checkpoints",
            "notebook.services.contents.filecheckpoints",
            "notebook.services.contents.fileio",
            "notebook.services.contents.filemanager",
            "notebook.services.contents.handlers",
            "notebook.services.contents.largefilemanager",
            "notebook.services.contents.manager",
            "notebook.services.contents.tests",
            "notebook.services.contents.tests.test_contents_api",
            "notebook.services.contents.tests.test_fileio",
            "notebook.services.contents.tests.test_largefilemanager",
            "notebook.services.contents.tests.test_manager",
            "notebook.services.kernels",
            "notebook.services.kernels.handlers",
            "notebook.services.kernels.kernelmanager",
            "notebook.services.kernels.tests",
            "notebook.services.kernels.tests.test_kernels_api",
            "notebook.services.kernelspecs",
            "notebook.services.kernelspecs.handlers",
            "notebook.services.kernelspecs.tests",
            "notebook.services.kernelspecs.tests.test_kernelspecs_api",
            "notebook.services.nbconvert",
            "notebook.services.nbconvert.handlers",
            "notebook.services.nbconvert.tests",
            "notebook.services.nbconvert.tests.test_nbconvert_api",
            "notebook.services.security",
            "notebook.services.security.handlers",
            "notebook.services.sessions",
            "notebook.services.sessions.handlers",
            "notebook.services.sessions.sessionmanager",
            "notebook.services.sessions.tests",
            "notebook.services.sessions.tests.test_sessionmanager",
            "notebook.services.sessions.tests.test_sessions_api",
            "notebook.terminal",
            "notebook.terminal.api_handlers",
            "notebook.terminal.handlers",
            "notebook.tests",
            "notebook.tests.launchnotebook",
            "notebook.tests.test_files",
            "notebook.tests.test_nbextensions",
            "notebook.tests.test_notebookapp",
            "notebook.tests.test_paths",
            "notebook.tests.test_serialize",
            "notebook.tests.test_serverextensions",
            "notebook.tests.test_utils",
            "notebook.tree",
            "notebook.tree.handlers",
            "notebook.tree.tests",
            "notebook.tree.tests.test_tree_handler",
            "notebook.utils",
            "notebook.view",
            "notebook.view.handlers"
        ],
        "version": "5.0.0"
    },
    "notebook-cht": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "notebook-cleaner": {
        "cmdline": [],
        "modules": [
            "notebook_cleaner",
            "notebook_cleaner.core"
        ],
        "version": "0.1.8"
    },
    "notebook-ok-extension": {
        "cmdline": [],
        "modules": [
            "ok"
        ],
        "version": "0.1.2"
    },
    "notebook-viewer": {
        "cmdline": [],
        "modules": [
            "nbviewer",
            "nbviewer.nbviewer"
        ],
        "version": "1.0.1"
    },
    "notebookism-chicago": {
        "cmdline": [],
        "modules": [
            "notebookism",
            "notebookism.app",
            "notebookism.histories",
            "notebookism.tiny_app"
        ],
        "version": "0.2.1"
    },
    "notebookserver": {
        "cmdline": [],
        "modules": [
            "NoteBookServer",
            "NoteBookServer.GlobalValue",
            "NoteBookServer.InputOutputDefine",
            "NoteBookServer.NoteBookOperate",
            "NoteBookServer.NoteBookServer",
            "NoteBookServer.Utils"
        ],
        "version": "0.14"
    },
    "notebooktools": {
        "cmdline": [],
        "modules": [
            "biomodeltoolbox",
            "biomodeltoolbox._annotations",
            "biomodeltoolbox._graph",
            "biomodeltoolbox._widget_annotation_search",
            "biomodeltoolbox._widget_search",
            "biomodeltoolbox._widget_slider",
            "biomodeltoolbox.biomodel",
            "biomodeltoolbox.biomodeltoolbox",
            "biomodeltoolbox.test_biomodeltoolbox",
            "biomodeltoolbox.widgets",
            "diffevolution",
            "diffevolution.differentialEvolution",
            "notebooktools",
            "notebooktools.notebooktools"
        ],
        "version": "0.3.1"
    },
    "notebox": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "noted": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "notedown": {
        "cmdline": [],
        "modules": [
            "notedown",
            "notedown.contentsmanager",
            "notedown.main",
            "notedown.notedown"
        ],
        "version": "1.5.0"
    },
    "notefast": {
        "cmdline": [],
        "modules": [
            "notefast",
            "notefast.img_rc"
        ],
        "version": "1.0"
    },
    "notefinder": {
        "cmdline": [],
        "modules": [
            "notefinder"
        ],
        "version": "0.9"
    },
    "notehandler": {
        "cmdline": [],
        "modules": [],
        "version": "0.6"
    },
    "notehub": {
        "cmdline": [],
        "modules": [],
        "version": "0.4"
    },
    "noteit": {
        "cmdline": [],
        "modules": [
            "noteit"
        ],
        "version": "1.1.0"
    },
    "notepadqq-api": {
        "cmdline": [],
        "modules": [
            "notepadqq_api",
            "notepadqq_api.message_channel",
            "notepadqq_api.message_interpreter",
            "notepadqq_api.notepadqq_api",
            "notepadqq_api.notepadqq_message_error",
            "notepadqq_api.stubs"
        ],
        "version": "0.9"
    },
    "noterator": {
        "cmdline": [],
        "modules": [
            "noterator",
            "noterator.config",
            "noterator.plugins",
            "noterator.plugins.desktop",
            "noterator.plugins.email",
            "noterator.plugins.hipchat",
            "noterator.plugins.twilio",
            "noterator.utils",
            "tests",
            "tests.test_config",
            "tests.test_desktop_plugin",
            "tests.test_email_plugin",
            "tests.test_hipchat_plugin",
            "tests.test_noterator",
            "tests.test_twilio_plugin",
            "tests.test_utils",
            "tests.utils"
        ],
        "version": "0.4.3"
    },
    "noterpy": {
        "cmdline": [],
        "modules": [
            "noterpy",
            "noterpy.noter",
            "tests",
            "tests.test_noter"
        ],
        "version": "0.1.0"
    },
    "notes": {
        "cmdline": [],
        "modules": [
            "notes",
            "notes.admin",
            "notes.forms",
            "notes.managers",
            "notes.models",
            "notes.templatetags",
            "notes.templatetags.note_tags",
            "notes.urls",
            "notes.views"
        ],
        "version": "0.3.0"
    },
    "notes-cli": {
        "cmdline": [],
        "modules": [
            "notes_cli",
            "notes_cli.cli",
            "notes_cli.notes"
        ],
        "version": "0.2"
    },
    "notes-pico": {
        "cmdline": [],
        "modules": [],
        "version": "0.7"
    },
    "notes-py": {
        "cmdline": [],
        "modules": [
            "notes_py",
            "notes_py.notes"
        ],
        "version": "0.1.3"
    },
    "noteshrink": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.1"
    },
    "notfound": {
        "cmdline": [],
        "modules": [
            "NotFound",
            "test"
        ],
        "version": "1.0.2"
    },
    "nothing": {
        "cmdline": [],
        "modules": [
            "nothing"
        ],
        "version": "0.0.3"
    },
    "notification": {
        "cmdline": [],
        "modules": [
            "notification",
            "notification.emailbuilder",
            "notification.errors",
            "notification.genshi",
            "notification.genshi.service",
            "notification.mako",
            "notification.mako.service",
            "notification.service",
            "notification.wsgiapp"
        ],
        "version": "0.2.1"
    },
    "notification-mount": {
        "cmdline": [
            "notification-mount"
        ],
        "modules": [],
        "version": "1.0.1"
    },
    "notification-utils": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.dev6"
    },
    "notificationcenter": {
        "cmdline": [],
        "modules": [
            "notificationcenter",
            "notificationcenter._notificationcenter",
            "notificationcenter._version"
        ],
        "version": "1.0.0b2"
    },
    "notificationframework": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "notificationoptoutplugin": {
        "cmdline": [],
        "modules": [
            "notificationoptout",
            "notificationoptout.api"
        ],
        "version": "0.1.2"
    },
    "notifications": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.2"
    },
    "notifications-python-client": {
        "cmdline": [],
        "modules": [
            "integration_test",
            "integration_test.integration_tests",
            "integration_test.schemas",
            "integration_test.schemas.v2",
            "integration_test.schemas.v2.definitions",
            "integration_test.schemas.v2.notification_schemas",
            "notifications_python_client",
            "notifications_python_client.authentication",
            "notifications_python_client.base",
            "notifications_python_client.errors",
            "notifications_python_client.notifications",
            "notifications_python_client.version",
            "tests",
            "tests.conftest",
            "utils",
            "utils.make_api_call"
        ],
        "version": "4.2.0"
    },
    "notifier": {
        "cmdline": [],
        "modules": [
            "notifier",
            "notifier._constants",
            "notifier._notifier",
            "notifier.test",
            "notifier.tests",
            "notifier.tests.test_notifier"
        ],
        "version": "1.0.3"
    },
    "notifikation-nu": {
        "cmdline": [],
        "modules": [
            "notifikation_nu"
        ],
        "version": "1.0"
    },
    "notifo": {
        "cmdline": [
            "notifo_cli.py"
        ],
        "modules": [
            "notifo",
            "notifo.notifo"
        ],
        "version": "0.3.0"
    },
    "notifo-imap-listener": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.2"
    },
    "notifout": {
        "cmdline": [],
        "modules": [],
        "version": "1.1"
    },
    "notify": {
        "cmdline": [],
        "modules": [
            "notify",
            "notify.arguments",
            "notify.compat",
            "notify.conf",
            "notify.console",
            "notify.executor",
            "notify.mailer",
            "notify.notifier",
            "notify.utils",
            "notify.utils.plaintext_keyring",
            "notify.utils.terminalmsg",
            "notify.utils.terminalsize",
            "notify.wizard",
            "tests",
            "tests.test_conf",
            "tests.test_executor"
        ],
        "version": "0.3.1"
    },
    "notify-me": {
        "cmdline": [],
        "modules": [
            "notify_me",
            "notify_me.Common",
            "notify_me.Config",
            "notify_me.notify_me",
            "notify_me.pushOver",
            "notify_me.smail"
        ],
        "version": "1.1.0"
    },
    "notify-pipe": {
        "cmdline": [],
        "modules": [
            "notify_pipe"
        ],
        "version": "0.0.3"
    },
    "notify-push": {
        "cmdline": [],
        "modules": [
            "notifypush",
            "notifypush.services",
            "notifypush.services.notifcasterbot",
            "notifypush.services.pushitbot"
        ],
        "version": "0.0.2"
    },
    "notify2": {
        "cmdline": [],
        "modules": [
            "notify2"
        ],
        "version": "0.3.1"
    },
    "notifycenter": {
        "cmdline": [],
        "modules": [
            "notifycenter"
        ],
        "version": "0.0.2"
    },
    "notifydict": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "notifymail": {
        "cmdline": [
            "notifymail.py"
        ],
        "modules": [
            "notifymail"
        ],
        "version": "1.1"
    },
    "notifyme": {
        "cmdline": [],
        "modules": [
            "notifyme"
        ],
        "version": "0.1.3"
    },
    "notigen": {
        "cmdline": [],
        "modules": [
            "notigen"
        ],
        "version": "0.3.dev36"
    },
    "notipy": {
        "cmdline": [],
        "modules": [
            "notipy",
            "notipy.cli"
        ],
        "version": "1.0.0"
    },
    "notipymail": {
        "cmdline": [],
        "modules": [
            "notipymail",
            "notipymail.notipy"
        ],
        "version": "1.0"
    },
    "notizen": {
        "cmdline": [],
        "modules": [
            "notizen",
            "notizen.cli",
            "notizen.file_processing",
            "notizen.helpers",
            "notizen.indices",
            "notizen.updatedb"
        ],
        "version": "1.0.0"
    },
    "notmm": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "notmuch-abook": {
        "cmdline": [],
        "modules": [],
        "version": "1.7"
    },
    "notnow": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "notossh": {
        "cmdline": [],
        "modules": [
            "notossh",
            "notossh.notossh"
        ],
        "version": "1.0"
    },
    "notouch": {
        "cmdline": [],
        "modules": [
            "api_tests",
            "api_tests.fixtures",
            "api_tests.test_dhcp",
            "api_tests.util",
            "notouch",
            "notouch.app",
            "notouch.handlers",
            "notouch.handlers.api",
            "notouch.handlers.main",
            "notouch.handlers.util",
            "notouch.routes",
            "notouch.server",
            "notouch.util",
            "notouch.version"
        ],
        "version": "0.3"
    },
    "notquite": {
        "cmdline": [],
        "modules": [
            "notquite",
            "notquite.constants",
            "notquite.notquite"
        ],
        "version": "0.1.3"
    },
    "notrequests": {
        "cmdline": [],
        "modules": [
            "notrequests"
        ],
        "version": "0.6"
    },
    "notsetuptools": {
        "cmdline": [],
        "modules": [
            "notsetuptools"
        ],
        "version": "0.1.1"
    },
    "notsio": {
        "cmdline": [],
        "modules": [
            "notsio",
            "notsio.cli",
            "notsio.client",
            "notsio.utils"
        ],
        "version": "0.6.1"
    },
    "noty": {
        "cmdline": [],
        "modules": [
            "Noty"
        ],
        "version": "0.1.0"
    },
    "noun-hound": {
        "cmdline": [],
        "modules": [
            "noun_hound",
            "noun_hound.noun_hound"
        ],
        "version": "1.0.0"
    },
    "nous.mailpost": {
        "cmdline": [],
        "modules": [
            "nous",
            "nous.mailpost",
            "nous.mailpost.MailBoxerTools",
            "nous.mailpost.mailboxer_tools",
            "nous.mailpost.smtp2zope",
            "nous.mailpost.tests",
            "nous.mailpost.tests.test_mailpost"
        ],
        "version": "0.5.2"
    },
    "nous.migration": {
        "cmdline": [],
        "modules": [
            "nous",
            "nous.migration",
            "nous.migration.add_script",
            "nous.migration.tests"
        ],
        "version": "0.7.1"
    },
    "nous.pylons.testing": {
        "cmdline": [],
        "modules": [
            "nous",
            "nous.pylons",
            "nous.pylons.testing",
            "nous.pylons.testing.browser"
        ],
        "version": "0.4.7"
    },
    "nous.pystat": {
        "cmdline": [],
        "modules": [
            "nous",
            "nous.pystat",
            "nous.pystat.statprof",
            "nous.pystat.stats",
            "nous.pystat.zodbprof"
        ],
        "version": "0.1"
    },
    "nous.testbrowser": {
        "cmdline": [],
        "modules": [
            "nous",
            "nous.testbrowser"
        ],
        "version": "0.1.0"
    },
    "nouvelordre": {
        "cmdline": [],
        "modules": [
            "nouvelordre",
            "nouvelordre.nouvelordre"
        ],
        "version": "0.1"
    },
    "nov": {
        "cmdline": [
            "hello",
            "hello_first"
        ],
        "modules": [
            "foo_dir_2",
            "foo_dir_2.one",
            "foo_dir_2.two",
            "subtract"
        ],
        "version": "1.0"
    },
    "nova": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nova-adminclient": {
        "cmdline": [],
        "modules": [
            "nova_adminclient",
            "nova_adminclient.client"
        ],
        "version": "0.1.8"
    },
    "nova-dpm": {
        "cmdline": [],
        "modules": [],
        "version": "2.0.0.0b1"
    },
    "nova-fusioncompute": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nova-limits": {
        "cmdline": [],
        "modules": [
            "nova_limits"
        ],
        "version": "0.7.0b1"
    },
    "nova-lxd": {
        "cmdline": [],
        "modules": [],
        "version": "16.0.0.0b1"
    },
    "nova-mksproxy": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.2"
    },
    "nova-powervm": {
        "cmdline": [],
        "modules": [],
        "version": "5.0.0.0b1"
    },
    "nova-solver-scheduler": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nova-tempest-plugin": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nova-tempest-staging": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "novabeacon": {
        "cmdline": [],
        "modules": [
            "beacon"
        ],
        "version": "0.1"
    },
    "novaclient-auth-secretkey": {
        "cmdline": [],
        "modules": [
            "novaclient_secretkey",
            "novaclient_secretkey.auth_plugin"
        ],
        "version": "0.1"
    },
    "novaideo": {
        "cmdline": [],
        "modules": [
            "novaideo",
            "novaideo.adapters",
            "novaideo.adapters.report_adapter",
            "novaideo.cache",
            "novaideo.catalog",
            "novaideo.content",
            "novaideo.content.alert",
            "novaideo.content.amendment",
            "novaideo.content.ballot",
            "novaideo.content.bot",
            "novaideo.content.candidacy",
            "novaideo.content.challenge",
            "novaideo.content.comment",
            "novaideo.content.correction",
            "novaideo.content.correlation",
            "novaideo.content.file",
            "novaideo.content.idea",
            "novaideo.content.interface",
            "novaideo.content.invitation",
            "novaideo.content.keyword",
            "novaideo.content.newsletter",
            "novaideo.content.novaideo_application",
            "novaideo.content.organization",
            "novaideo.content.person",
            "novaideo.content.processes",
            "novaideo.content.processes.admin_process",
            "novaideo.content.processes.admin_process.behaviors",
            "novaideo.content.processes.admin_process.definition",
            "novaideo.content.processes.advertising_management",
            "novaideo.content.processes.advertising_management.behaviors",
            "novaideo.content.processes.advertising_management.definition",
            "novaideo.content.processes.amendment_management",
            "novaideo.content.processes.amendment_management.behaviors",
            "novaideo.content.processes.amendment_management.definition",
            "novaideo.content.processes.ballot_processes",
            "novaideo.content.processes.ballot_processes.behaviors",
            "novaideo.content.processes.ballot_processes.definition",
            "novaideo.content.processes.ballot_processes.fptp",
            "novaideo.content.processes.ballot_processes.fptp.behaviors",
            "novaideo.content.processes.ballot_processes.fptp.definition",
            "novaideo.content.processes.ballot_processes.majorityjudgment",
            "novaideo.content.processes.ballot_processes.majorityjudgment.behaviors",
            "novaideo.content.processes.ballot_processes.majorityjudgment.definition",
            "novaideo.content.processes.ballot_processes.rangevoting",
            "novaideo.content.processes.ballot_processes.rangevoting.behaviors",
            "novaideo.content.processes.ballot_processes.rangevoting.definition",
            "novaideo.content.processes.ballot_processes.referendum",
            "novaideo.content.processes.ballot_processes.referendum.behaviors",
            "novaideo.content.processes.ballot_processes.referendum.definition",
            "novaideo.content.processes.challenge_management",
            "novaideo.content.processes.challenge_management.behaviors",
            "novaideo.content.processes.challenge_management.definition",
            "novaideo.content.processes.channel_management",
            "novaideo.content.processes.channel_management.behaviors",
            "novaideo.content.processes.channel_management.definition",
            "novaideo.content.processes.comment_management",
            "novaideo.content.processes.comment_management.behaviors",
            "novaideo.content.processes.comment_management.definition",
            "novaideo.content.processes.correlation_management",
            "novaideo.content.processes.correlation_management.behaviors",
            "novaideo.content.processes.correlation_management.definition",
            "novaideo.content.processes.idea_management",
            "novaideo.content.processes.idea_management.behaviors",
            "novaideo.content.processes.idea_management.definition",
            "novaideo.content.processes.invitation_management",
            "novaideo.content.processes.invitation_management.behaviors",
            "novaideo.content.processes.invitation_management.definition",
            "novaideo.content.processes.newsletter_management",
            "novaideo.content.processes.newsletter_management.behaviors",
            "novaideo.content.processes.newsletter_management.definition",
            "novaideo.content.processes.novaideo_abstract_process",
            "novaideo.content.processes.novaideo_abstract_process.behaviors",
            "novaideo.content.processes.novaideo_abstract_process.definition",
            "novaideo.content.processes.novaideo_file_management",
            "novaideo.content.processes.novaideo_file_management.behaviors",
            "novaideo.content.processes.novaideo_file_management.definition",
            "novaideo.content.processes.novaideo_process_management",
            "novaideo.content.processes.novaideo_process_management.behaviors",
            "novaideo.content.processes.novaideo_process_management.definition",
            "novaideo.content.processes.novaideo_view_manager",
            "novaideo.content.processes.novaideo_view_manager.behaviors",
            "novaideo.content.processes.novaideo_view_manager.definition",
            "novaideo.content.processes.organization_management",
            "novaideo.content.processes.organization_management.behaviors",
            "novaideo.content.processes.organization_management.definition",
            "novaideo.content.processes.proposal_management",
            "novaideo.content.processes.proposal_management.behaviors",
            "novaideo.content.processes.proposal_management.definition",
            "novaideo.content.processes.question_management",
            "novaideo.content.processes.question_management.behaviors",
            "novaideo.content.processes.question_management.definition",
            "novaideo.content.processes.reports_management",
            "novaideo.content.processes.reports_management.behaviors",
            "novaideo.content.processes.reports_management.definition",
            "novaideo.content.processes.smart_folder_management",
            "novaideo.content.processes.smart_folder_management.behaviors",
            "novaideo.content.processes.smart_folder_management.definition",
            "novaideo.content.processes.system_process",
            "novaideo.content.processes.system_process.behaviors",
            "novaideo.content.processes.system_process.definition",
            "novaideo.content.processes.user_management",
            "novaideo.content.processes.user_management.behaviors",
            "novaideo.content.processes.user_management.definition",
            "novaideo.content.processes.work_mode_processes",
            "novaideo.content.processes.work_mode_processes.amendment_work_mode_process",
            "novaideo.content.processes.work_mode_processes.amendment_work_mode_process.behaviors",
            "novaideo.content.processes.work_mode_processes.amendment_work_mode_process.definition",
            "novaideo.content.processes.work_mode_processes.correction_work_mode_process",
            "novaideo.content.processes.work_mode_processes.correction_work_mode_process.behaviors",
            "novaideo.content.processes.work_mode_processes.correction_work_mode_process.definition",
            "novaideo.content.processes.work_mode_processes.wiki_work_mode_process",
            "novaideo.content.processes.work_mode_processes.wiki_work_mode_process.behaviors",
            "novaideo.content.processes.work_mode_processes.wiki_work_mode_process.definition",
            "novaideo.content.processes.working_group_management",
            "novaideo.content.processes.working_group_management.behaviors",
            "novaideo.content.processes.working_group_management.definition",
            "novaideo.content.proposal",
            "novaideo.content.question",
            "novaideo.content.report",
            "novaideo.content.resources",
            "novaideo.content.site_configuration",
            "novaideo.content.smart_folder",
            "novaideo.content.token",
            "novaideo.content.web_advertising",
            "novaideo.content.working_group",
            "novaideo.content.workspace",
            "novaideo.contextual_help_messages",
            "novaideo.core",
            "novaideo.core_schema",
            "novaideo.dateindex",
            "novaideo.emojis",
            "novaideo.event",
            "novaideo.file",
            "novaideo.fr_lexicon",
            "novaideo.fr_stopdict",
            "novaideo.guide_tour",
            "novaideo.ips",
            "novaideo.ips.hexagonit",
            "novaideo.ips.hexagonit.swfheader",
            "novaideo.ips.mailer",
            "novaideo.ips.xlreader",
            "novaideo.layout",
            "novaideo.mail",
            "novaideo.role",
            "novaideo.static_notif",
            "novaideo.steps",
            "novaideo.subscribers",
            "novaideo.testing",
            "novaideo.tests",
            "novaideo.tests.example",
            "novaideo.tests.example.app",
            "novaideo.tests.test_proposal_management",
            "novaideo.tests.test_robot",
            "novaideo.tests.test_vote",
            "novaideo.utilities",
            "novaideo.utilities.alerts_utility",
            "novaideo.utilities.amendment_viewer",
            "novaideo.utilities.analytics_utility",
            "novaideo.utilities.data_manager",
            "novaideo.utilities.french_dates_parser",
            "novaideo.utilities.ical_date_utility",
            "novaideo.utilities.img_utility",
            "novaideo.utilities.memoize",
            "novaideo.utilities.pseudo_react",
            "novaideo.utilities.smart_folder_utility",
            "novaideo.utilities.url_extractor",
            "novaideo.utilities.util",
            "novaideo.views",
            "novaideo.views.admin_process",
            "novaideo.views.admin_process.configure_site_folder",
            "novaideo.views.admin_process.extract",
            "novaideo.views.admin_process.manage_keywords",
            "novaideo.views.advertising_management",
            "novaideo.views.advertising_management.archive_advertising",
            "novaideo.views.advertising_management.publish_advertising",
            "novaideo.views.advertising_management.remove_advertising",
            "novaideo.views.advertising_management.see_advertisings",
            "novaideo.views.advertising_panels",
            "novaideo.views.amendment_management",
            "novaideo.views.amendment_management.associate",
            "novaideo.views.amendment_management.comment_amendment",
            "novaideo.views.amendment_management.del_amendment",
            "novaideo.views.amendment_management.duplicate_amendment",
            "novaideo.views.amendment_management.edit_amendment",
            "novaideo.views.amendment_management.explanation_amendment",
            "novaideo.views.amendment_management.explanation_item",
            "novaideo.views.amendment_management.present_amendment",
            "novaideo.views.amendment_management.see_amendment",
            "novaideo.views.amendment_management.submit",
            "novaideo.views.ballot_processes",
            "novaideo.views.ballot_processes.fptp",
            "novaideo.views.ballot_processes.fptp.vote",
            "novaideo.views.ballot_processes.majorityjudgment",
            "novaideo.views.ballot_processes.majorityjudgment.vote",
            "novaideo.views.ballot_processes.rangevoting",
            "novaideo.views.ballot_processes.rangevoting.vote",
            "novaideo.views.ballot_processes.referendum",
            "novaideo.views.ballot_processes.referendum.vote",
            "novaideo.views.challenge_management",
            "novaideo.views.challenge_management.add_members",
            "novaideo.views.challenge_management.archive_challenge",
            "novaideo.views.challenge_management.associate",
            "novaideo.views.challenge_management.comment_challenge",
            "novaideo.views.challenge_management.create_challenge",
            "novaideo.views.challenge_management.del_challenge",
            "novaideo.views.challenge_management.edit_challenge",
            "novaideo.views.challenge_management.present_challenge",
            "novaideo.views.challenge_management.publish_challenge",
            "novaideo.views.challenge_management.remove_members",
            "novaideo.views.challenge_management.see_challenge",
            "novaideo.views.challenge_management.see_challenges",
            "novaideo.views.challenge_management.see_members",
            "novaideo.views.challenge_management.submit",
            "novaideo.views.channel_management",
            "novaideo.views.channel_management.see_channels",
            "novaideo.views.channel_management.subscribe",
            "novaideo.views.channel_management.unsubscribe",
            "novaideo.views.comment_management",
            "novaideo.views.comment_management.edit",
            "novaideo.views.comment_management.pin",
            "novaideo.views.comment_management.remove",
            "novaideo.views.comment_management.respond",
            "novaideo.views.comment_management.see_comment",
            "novaideo.views.comment_management.transform_to_idea",
            "novaideo.views.comment_management.transform_to_question",
            "novaideo.views.comment_management.unpin",
            "novaideo.views.core",
            "novaideo.views.correlation_management",
            "novaideo.views.correlation_management.comment_correlation",
            "novaideo.views.correlation_management.see_correlation",
            "novaideo.views.filter",
            "novaideo.views.filter.sort",
            "novaideo.views.filter.util",
            "novaideo.views.http_views",
            "novaideo.views.idea_management",
            "novaideo.views.idea_management.abandon_idea",
            "novaideo.views.idea_management.archive_idea",
            "novaideo.views.idea_management.associate",
            "novaideo.views.idea_management.comment_idea",
            "novaideo.views.idea_management.compare_idea",
            "novaideo.views.idea_management.create_idea",
            "novaideo.views.idea_management.del_idea",
            "novaideo.views.idea_management.duplicate_idea",
            "novaideo.views.idea_management.edit_idea",
            "novaideo.views.idea_management.make_opinion",
            "novaideo.views.idea_management.oppose_proposal",
            "novaideo.views.idea_management.present_idea",
            "novaideo.views.idea_management.publish_idea",
            "novaideo.views.idea_management.publish_idea_moderation",
            "novaideo.views.idea_management.recuperate_idea",
            "novaideo.views.idea_management.see_idea",
            "novaideo.views.idea_management.see_workinggroups",
            "novaideo.views.idea_management.submit_idea",
            "novaideo.views.idea_management.support_proposal",
            "novaideo.views.idea_management.withdraw_token",
            "novaideo.views.invitation_management",
            "novaideo.views.invitation_management.accept_invitation",
            "novaideo.views.invitation_management.edit_invitation",
            "novaideo.views.invitation_management.edit_invitations",
            "novaideo.views.invitation_management.invite_user",
            "novaideo.views.invitation_management.refuse_invitatio",
            "novaideo.views.invitation_management.reinvite_user",
            "novaideo.views.invitation_management.remind_invitation",
            "novaideo.views.invitation_management.remove_invitation",
            "novaideo.views.invitation_management.see_invitation",
            "novaideo.views.invitation_management.see_invitations",
            "novaideo.views.invitation_management.upload_users",
            "novaideo.views.newsletter_management",
            "novaideo.views.newsletter_management.configure_newsletter",
            "novaideo.views.newsletter_management.create_newsletter",
            "novaideo.views.newsletter_management.edit_newsletter",
            "novaideo.views.newsletter_management.redact_newsletter",
            "novaideo.views.newsletter_management.remove_newsletter",
            "novaideo.views.newsletter_management.see_content_history",
            "novaideo.views.newsletter_management.see_newsletter",
            "novaideo.views.newsletter_management.see_newsletters",
            "novaideo.views.newsletter_management.see_subscribed",
            "novaideo.views.newsletter_management.send_newsletter",
            "novaideo.views.newsletter_management.subscribe_newsletter",
            "novaideo.views.newsletter_management.unsubscribe_newsletter",
            "novaideo.views.newsletter_management.userunsubscribe_newsletter",
            "novaideo.views.novaideo_abstract_process",
            "novaideo.views.novaideo_abstract_process.add_deadline",
            "novaideo.views.novaideo_abstract_process.add_reaction",
            "novaideo.views.novaideo_abstract_process.deselect",
            "novaideo.views.novaideo_abstract_process.edit_deadline",
            "novaideo.views.novaideo_abstract_process.select",
            "novaideo.views.novaideo_file_management",
            "novaideo.views.novaideo_file_management.create_file",
            "novaideo.views.novaideo_file_management.edit_file",
            "novaideo.views.novaideo_file_management.private_file",
            "novaideo.views.novaideo_file_management.publish_file",
            "novaideo.views.novaideo_file_management.see_file",
            "novaideo.views.novaideo_file_management.see_files",
            "novaideo.views.novaideo_process_management",
            "novaideo.views.novaideo_process_management.update",
            "novaideo.views.novaideo_view_manager",
            "novaideo.views.novaideo_view_manager.analytics",
            "novaideo.views.novaideo_view_manager.contact",
            "novaideo.views.novaideo_view_manager.doc_anonymous",
            "novaideo.views.novaideo_view_manager.home",
            "novaideo.views.novaideo_view_manager.search",
            "novaideo.views.novaideo_view_manager.see_alerts",
            "novaideo.views.novaideo_view_manager.see_dependencies",
            "novaideo.views.novaideo_view_manager.see_graph",
            "novaideo.views.novaideo_view_manager.see_history",
            "novaideo.views.novaideo_view_manager.see_ideas_to_examine",
            "novaideo.views.novaideo_view_manager.see_ideas_to_moderate",
            "novaideo.views.novaideo_view_manager.see_my_contents",
            "novaideo.views.novaideo_view_manager.see_my_participations",
            "novaideo.views.novaideo_view_manager.see_my_selections",
            "novaideo.views.novaideo_view_manager.see_my_supports",
            "novaideo.views.novaideo_view_manager.see_ordered_proposals",
            "novaideo.views.novaideo_view_manager.see_proposals_to_moderate",
            "novaideo.views.novaideo_view_manager.see_reported_contents",
            "novaideo.views.novaideo_view_manager.see_users",
            "novaideo.views.novaideo_view_manager.widget",
            "novaideo.views.organization_management",
            "novaideo.views.organization_management.add_members",
            "novaideo.views.organization_management.add_organizations",
            "novaideo.views.organization_management.creat_organizations",
            "novaideo.views.organization_management.edit_organization",
            "novaideo.views.organization_management.edit_organizations",
            "novaideo.views.organization_management.remove_members",
            "novaideo.views.organization_management.remove_organization",
            "novaideo.views.organization_management.see_organization",
            "novaideo.views.organization_management.see_organizations",
            "novaideo.views.organization_management.user_edit_organization",
            "novaideo.views.organization_management.withdraw_user",
            "novaideo.views.panels",
            "novaideo.views.proposal_management",
            "novaideo.views.proposal_management.add_files",
            "novaideo.views.proposal_management.alert",
            "novaideo.views.proposal_management.archive_proposal_moderation",
            "novaideo.views.proposal_management.associate",
            "novaideo.views.proposal_management.attach_files",
            "novaideo.views.proposal_management.comment_proposal",
            "novaideo.views.proposal_management.compare_proposal",
            "novaideo.views.proposal_management.create_proposal",
            "novaideo.views.proposal_management.delete_proposal",
            "novaideo.views.proposal_management.duplicate_proposal",
            "novaideo.views.proposal_management.edit_proposal",
            "novaideo.views.proposal_management.make_opinion",
            "novaideo.views.proposal_management.oppose_proposal",
            "novaideo.views.proposal_management.participate",
            "novaideo.views.proposal_management.present_proposal",
            "novaideo.views.proposal_management.publish_as_proposal",
            "novaideo.views.proposal_management.publish_proposal",
            "novaideo.views.proposal_management.publish_proposal_moderation",
            "novaideo.views.proposal_management.remove_file",
            "novaideo.views.proposal_management.resign",
            "novaideo.views.proposal_management.see_amendments",
            "novaideo.views.proposal_management.see_members",
            "novaideo.views.proposal_management.see_proposal",
            "novaideo.views.proposal_management.see_related_ideas",
            "novaideo.views.proposal_management.see_workspace",
            "novaideo.views.proposal_management.submit_proposal",
            "novaideo.views.proposal_management.submit_proposal_support",
            "novaideo.views.proposal_management.support_proposal",
            "novaideo.views.proposal_management.voting_publication",
            "novaideo.views.proposal_management.withdraw",
            "novaideo.views.proposal_management.withdraw_token",
            "novaideo.views.proposal_management.work",
            "novaideo.views.question_management",
            "novaideo.views.question_management.answer",
            "novaideo.views.question_management.answer.archive_answer",
            "novaideo.views.question_management.answer.associate",
            "novaideo.views.question_management.answer.comment_answer",
            "novaideo.views.question_management.answer.del_answer",
            "novaideo.views.question_management.answer.edit_answer",
            "novaideo.views.question_management.answer.oppose_answer",
            "novaideo.views.question_management.answer.present_answer",
            "novaideo.views.question_management.answer.see_answer",
            "novaideo.views.question_management.answer.support_answer",
            "novaideo.views.question_management.answer.transform_to_idea",
            "novaideo.views.question_management.answer.validate",
            "novaideo.views.question_management.answer.withdraw_token",
            "novaideo.views.question_management.answer_question",
            "novaideo.views.question_management.archive_question",
            "novaideo.views.question_management.ask_question",
            "novaideo.views.question_management.associate",
            "novaideo.views.question_management.close",
            "novaideo.views.question_management.comment_question",
            "novaideo.views.question_management.del_question",
            "novaideo.views.question_management.edit_question",
            "novaideo.views.question_management.oppose_question",
            "novaideo.views.question_management.present_question",
            "novaideo.views.question_management.see_question",
            "novaideo.views.question_management.support_question",
            "novaideo.views.question_management.withdraw_token",
            "novaideo.views.reports_management",
            "novaideo.views.reports_management.censor",
            "novaideo.views.reports_management.ignore",
            "novaideo.views.reports_management.report",
            "novaideo.views.reports_management.restor",
            "novaideo.views.reports_management.see_reports",
            "novaideo.views.smart_folder_management",
            "novaideo.views.smart_folder_management.add_smart_folder",
            "novaideo.views.smart_folder_management.addsub_smart_folder",
            "novaideo.views.smart_folder_management.edit_smart_folder",
            "novaideo.views.smart_folder_management.order_smart_folders",
            "novaideo.views.smart_folder_management.order_sub_smart_folders",
            "novaideo.views.smart_folder_management.publish_smart_folder",
            "novaideo.views.smart_folder_management.remove_smart_folder",
            "novaideo.views.smart_folder_management.see_smart_folder",
            "novaideo.views.smart_folder_management.see_smart_folders",
            "novaideo.views.smart_folder_management.withdraw_smart_folder",
            "novaideo.views.system_process",
            "novaideo.views.system_process.deactivate_users",
            "novaideo.views.system_process.send_newsletter",
            "novaideo.views.user_management",
            "novaideo.views.user_management.accept_registration",
            "novaideo.views.user_management.activate",
            "novaideo.views.user_management.assign_roles",
            "novaideo.views.user_management.confirmregistration",
            "novaideo.views.user_management.deactivate",
            "novaideo.views.user_management.discuss",
            "novaideo.views.user_management.edit",
            "novaideo.views.user_management.login",
            "novaideo.views.user_management.logout",
            "novaideo.views.user_management.refuse_registration",
            "novaideo.views.user_management.registration",
            "novaideo.views.user_management.remind",
            "novaideo.views.user_management.remove_registration",
            "novaideo.views.user_management.reset_password",
            "novaideo.views.user_management.see_person",
            "novaideo.views.user_management.see_registration",
            "novaideo.views.user_management.see_registrations",
            "novaideo.views.web_advertising_management",
            "novaideo.views.web_advertising_management.create_web_advertising",
            "novaideo.views.web_advertising_management.edit_web_advertising",
            "novaideo.views.web_advertising_management.see_web_advertising",
            "novaideo.views.widget",
            "novaideo.views.work_mode_processes",
            "novaideo.views.work_mode_processes.amendment_work_mode_process",
            "novaideo.views.work_mode_processes.amendment_work_mode_process.alert",
            "novaideo.views.work_mode_processes.amendment_work_mode_process.amendments_result",
            "novaideo.views.work_mode_processes.amendment_work_mode_process.improve_proposal",
            "novaideo.views.work_mode_processes.amendment_work_mode_process.voting_amendments",
            "novaideo.views.work_mode_processes.correction_work_mode_process",
            "novaideo.views.work_mode_processes.correction_work_mode_process.close_work",
            "novaideo.views.work_mode_processes.correction_work_mode_process.correct_item",
            "novaideo.views.work_mode_processes.correction_work_mode_process.correct_proposal",
            "novaideo.views.work_mode_processes.wiki_work_mode_process",
            "novaideo.views.work_mode_processes.wiki_work_mode_process.close_work",
            "novaideo.views.work_mode_processes.wiki_work_mode_process.correct_proposal",
            "novaideo.views.working_group_management",
            "novaideo.views.working_group_management.edit",
            "novaideo.web_services",
            "novaideo.web_services.export_entities"
        ],
        "version": "1.3"
    },
    "novainstrumentation": {
        "cmdline": [],
        "modules": [
            "novainstrumentation",
            "novainstrumentation.ARparameters",
            "novainstrumentation.figtools",
            "novainstrumentation.filter",
            "novainstrumentation.freq_analysis",
            "novainstrumentation.niplot",
            "novainstrumentation.panthomkins",
            "novainstrumentation.panthomkins.butterworth_filters",
            "novainstrumentation.panthomkins.detect_panthomkins_peaks",
            "novainstrumentation.panthomkins.panthomkins",
            "novainstrumentation.panthomkins.rr_update",
            "novainstrumentation.peakdelta",
            "novainstrumentation.peaks",
            "novainstrumentation.smooth",
            "novainstrumentation.stat_analysis",
            "novainstrumentation.tests",
            "novainstrumentation.tests.test_filter",
            "novainstrumentation.tests.test_peaks",
            "novainstrumentation.tests.test_smooth",
            "novainstrumentation.tests.test_tools",
            "novainstrumentation.tests.test_waves",
            "novainstrumentation.tictac",
            "novainstrumentation.tools",
            "novainstrumentation.waves",
            "novainstrumentation.waves.alignWaves",
            "novainstrumentation.waves.computemeanwave",
            "novainstrumentation.waves.frequencyAlignDistance",
            "novainstrumentation.waves.getarray",
            "novainstrumentation.waves.meanwave",
            "novainstrumentation.waves.plotheatmap",
            "novainstrumentation.waves.plotheatmap2",
            "novainstrumentation.waves.stdwave",
            "novainstrumentation.waves.sumvolve",
            "novainstrumentation.waves.wavedistance",
            "novainstrumentation.waves.waves"
        ],
        "version": "0.1.1"
    },
    "novajoin": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.12"
    },
    "novamagehf": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "novamiko": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.6"
    },
    "novas": {
        "cmdline": [],
        "modules": [
            "novas",
            "novas.compat",
            "novas.compat.compat",
            "novas.compat.eph_manager",
            "novas.compat.nutation",
            "novas.compat.readeph0",
            "novas.compat.solsys",
            "novas.constants",
            "novas.tests",
            "novas.tests.checkout-stars-full",
            "novas.tests.test_compat",
            "novas.tests.test_example",
            "novas.tests.test_github_issues"
        ],
        "version": "3.1.1.4"
    },
    "novas-de405": {
        "cmdline": [],
        "modules": [
            "novas_de405"
        ],
        "version": "1997.1"
    },
    "novastella": {
        "cmdline": [],
        "modules": [
            "nova",
            "nova.AnsysDD_sketch",
            "nova.CuCrZr_SDC_IC",
            "nova.DD_coils",
            "nova.DD_first_wall",
            "nova.DD_streamfunction",
            "nova.DD_volume_ratio",
            "nova.DDmove",
            "nova.DDplot",
            "nova.GD_tmp",
            "nova.Jscript_funcions",
            "nova.Jscript_functions",
            "nova.Pshape",
            "nova.Ptools",
            "nova.RBconfig",
            "nova.RK_tmp",
            "nova.SFcomp",
            "nova.SX_swing_contors",
            "nova.TF_vol",
            "nova.addtext",
            "nova.ansys_coils",
            "nova.beam_calc",
            "nova.bndry_rms",
            "nova.check_elliptic",
            "nova.coil_core",
            "nova.coil_dl",
            "nova.coil_force",
            "nova.coil_force_vectors",
            "nova.coil_forces",
            "nova.coil_geometory",
            "nova.coil_locations",
            "nova.coil_pair",
            "nova.coils",
            "nova.compare_SX",
            "nova.compare_firstwalls",
            "nova.config",
            "nova.connection3D",
            "nova.connection_plot",
            "nova.connection_profiles",
            "nova.connection_profiles_data_comp",
            "nova.cross_coil",
            "nova.cross_coil_old",
            "nova.deap_tmp",
            "nova.debugGS",
            "nova.divertor_rad",
            "nova.double_coil",
            "nova.double_decker_radial_build",
            "nova.elliptic",
            "nova.eq_write",
            "nova.eqconfig",
            "nova.eqlib",
            "nova.export_sol",
            "nova.extract",
            "nova.feild_calc",
            "nova.filters",
            "nova.fit",
            "nova.flux_fit",
            "nova.flux_functions",
            "nova.force_elliptic",
            "nova.force_swing",
            "nova.frame_writer",
            "nova.geqdsk",
            "nova.import_eqlib",
            "nova.in_plasma",
            "nova.interpolate_psi_grid",
            "nova.inverse",
            "nova.inverse_power",
            "nova.line_intergral",
            "nova.load_eqdsk",
            "nova.load_eqdsk_tripple",
            "nova.load_eqlib",
            "nova.load_history",
            "nova.moveP6",
            "nova.moveSXcoils",
            "nova.moveSXcoils_051015",
            "nova.moveXcoils",
            "nova.moveXcoils_old",
            "nova.moveXcoils_old (2)",
            "nova.old_plasma_parameters",
            "nova.plasma_coil_current",
            "nova.plasma_coils",
            "nova.plasma_contor",
            "nova.plasma_equlibrium",
            "nova.plasma_para",
            "nova.plasma_parameters",
            "nova.plasma_parameters_double",
            "nova.plasma_parameters_double2",
            "nova.plasma_shape",
            "nova.plot_SX",
            "nova.plot_force_swing",
            "nova.plot_opp",
            "nova.png_tools",
            "nova.png_tools_old",
            "nova.prototypes",
            "nova.pymls",
            "nova.radial_build",
            "nova.read_TF",
            "nova.read_eqdsk",
            "nova.sf_test",
            "nova.shape_parameters",
            "nova.shape_plasma",
            "nova.shelf",
            "nova.single_coil",
            "nova.stable_plasma",
            "nova.streamfunction",
            "nova.streamfunction_270215",
            "nova.surface",
            "nova.swing_forces",
            "nova.swing_movie",
            "nova.tails",
            "nova.temp_Bfeild_b",
            "nova.test",
            "nova.tf_shape",
            "nova.tf_test",
            "nova.tmp_animate",
            "nova.tmp_contour",
            "nova.tmp_contour_lines",
            "nova.tmp_extract",
            "nova.tmp_legs",
            "nova.tmp_optimize",
            "nova.tmp_pickle_read",
            "nova.tmp_pl_pickle",
            "nova.tmp_plasma_coils",
            "nova.vapour_dome",
            "nova.vde",
            "nova.window",
            "nova.write_sepx"
        ],
        "version": "0.0.1"
    },
    "novault": {
        "cmdline": [],
        "modules": [
            "novault",
            "novault.Keccak",
            "novault.ed25519",
            "novault.novault",
            "novault.x"
        ],
        "version": "0.300"
    },
    "novawiz": {
        "cmdline": [],
        "modules": [
            "novawiz",
            "novawiz.boot",
            "novawiz.cli",
            "novawiz.command_base",
            "novawiz.delete",
            "novawiz.image_build",
            "novawiz.nova",
            "novawiz.shell"
        ],
        "version": "0.0.13"
    },
    "novelty": {
        "cmdline": [],
        "modules": [
            "Novelty",
            "Novelty.novelty"
        ],
        "version": "1.0.4"
    },
    "novice": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "novikov": {
        "cmdline": [],
        "modules": [
            "Novikov"
        ],
        "version": "0.1.0"
    },
    "novo-jsobj": {
        "cmdline": [],
        "modules": [
            "jsobj"
        ],
        "version": "0.0.2"
    },
    "now": {
        "cmdline": [],
        "modules": [
            "now",
            "now.config",
            "now.exceptions",
            "now.main"
        ],
        "version": "0.0.6"
    },
    "nowandnext": {
        "cmdline": [],
        "modules": [],
        "version": "0.2.5.dev-r493"
    },
    "noweb.py": {
        "cmdline": [
            "noweb.py"
        ],
        "modules": [],
        "version": "1.0.3"
    },
    "nowertis": {
        "cmdline": [],
        "modules": [
            "nowertis"
        ],
        "version": "1.7.0"
    },
    "nowfm": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.21"
    },
    "noworkflow": {
        "cmdline": [],
        "modules": [
            "noworkflow",
            "noworkflow.now",
            "noworkflow.now.cmd",
            "noworkflow.now.cmd.cmd_dataflow",
            "noworkflow.now.cmd.cmd_debug",
            "noworkflow.now.cmd.cmd_demo",
            "noworkflow.now.cmd.cmd_diff",
            "noworkflow.now.cmd.cmd_export",
            "noworkflow.now.cmd.cmd_helper",
            "noworkflow.now.cmd.cmd_history",
            "noworkflow.now.cmd.cmd_list",
            "noworkflow.now.cmd.cmd_restore",
            "noworkflow.now.cmd.cmd_run",
            "noworkflow.now.cmd.cmd_schema",
            "noworkflow.now.cmd.cmd_show",
            "noworkflow.now.cmd.cmd_vis",
            "noworkflow.now.cmd.command",
            "noworkflow.now.collection",
            "noworkflow.now.collection.metadata",
            "noworkflow.now.collection.prov_definition",
            "noworkflow.now.collection.prov_definition.definition",
            "noworkflow.now.collection.prov_definition.function_visitor",
            "noworkflow.now.collection.prov_definition.slicing_visitor",
            "noworkflow.now.collection.prov_definition.utils",
            "noworkflow.now.collection.prov_deployment",
            "noworkflow.now.collection.prov_deployment.deployment",
            "noworkflow.now.collection.prov_execution",
            "noworkflow.now.collection.prov_execution.argument_captors",
            "noworkflow.now.collection.prov_execution.base",
            "noworkflow.now.collection.prov_execution.debugger",
            "noworkflow.now.collection.prov_execution.execution",
            "noworkflow.now.collection.prov_execution.profiler",
            "noworkflow.now.collection.prov_execution.slicing",
            "noworkflow.now.ipython",
            "noworkflow.now.ipython.converter",
            "noworkflow.now.ipython.hierarchymagic",
            "noworkflow.now.ipython.magics",
            "noworkflow.now.ipython.magics.command",
            "noworkflow.now.ipython.magics.now_ipython",
            "noworkflow.now.ipython.magics.now_ls_magic",
            "noworkflow.now.ipython.magics.now_prolog",
            "noworkflow.now.ipython.magics.now_restore",
            "noworkflow.now.ipython.magics.now_run",
            "noworkflow.now.ipython.magics.now_schema",
            "noworkflow.now.ipython.magics.now_set_default",
            "noworkflow.now.ipython.magics.now_sql",
            "noworkflow.now.persistence",
            "noworkflow.now.persistence.config",
            "noworkflow.now.persistence.content_database",
            "noworkflow.now.persistence.lightweight",
            "noworkflow.now.persistence.models",
            "noworkflow.now.persistence.models.activation",
            "noworkflow.now.persistence.models.base",
            "noworkflow.now.persistence.models.dependency",
            "noworkflow.now.persistence.models.diff",
            "noworkflow.now.persistence.models.environment_attr",
            "noworkflow.now.persistence.models.file_access",
            "noworkflow.now.persistence.models.function_def",
            "noworkflow.now.persistence.models.graph_cache",
            "noworkflow.now.persistence.models.graphs",
            "noworkflow.now.persistence.models.graphs.dependency_graph",
            "noworkflow.now.persistence.models.graphs.diagram",
            "noworkflow.now.persistence.models.graphs.diff_graph",
            "noworkflow.now.persistence.models.graphs.history_graph",
            "noworkflow.now.persistence.models.graphs.structures",
            "noworkflow.now.persistence.models.graphs.trial_graph",
            "noworkflow.now.persistence.models.head",
            "noworkflow.now.persistence.models.history",
            "noworkflow.now.persistence.models.module",
            "noworkflow.now.persistence.models.object",
            "noworkflow.now.persistence.models.object_value",
            "noworkflow.now.persistence.models.tag",
            "noworkflow.now.persistence.models.trial",
            "noworkflow.now.persistence.models.trial_dot",
            "noworkflow.now.persistence.models.trial_prolog",
            "noworkflow.now.persistence.models.variable",
            "noworkflow.now.persistence.models.variable_dependency",
            "noworkflow.now.persistence.models.variable_usage",
            "noworkflow.now.persistence.relational_database",
            "noworkflow.now.persistence.serializers",
            "noworkflow.now.utils",
            "noworkflow.now.utils.bytecode",
            "noworkflow.now.utils.bytecode.code_interpreter",
            "noworkflow.now.utils.bytecode.dis",
            "noworkflow.now.utils.bytecode.f_trace",
            "noworkflow.now.utils.bytecode.instructions",
            "noworkflow.now.utils.bytecode.interpreter",
            "noworkflow.now.utils.bytecode.transformers",
            "noworkflow.now.utils.cross_version",
            "noworkflow.now.utils.data",
            "noworkflow.now.utils.formatter",
            "noworkflow.now.utils.functions",
            "noworkflow.now.utils.io",
            "noworkflow.now.utils.metaprofiler",
            "noworkflow.now.utils.prolog",
            "noworkflow.now.vis",
            "noworkflow.now.vis.views",
            "noworkflow.tests",
            "noworkflow.tests.cross_version_test",
            "noworkflow.tests.formatter_test",
            "noworkflow.tests.prov_definition",
            "noworkflow.tests.prov_definition.slicing_test",
            "noworkflow.tests.prov_deployment",
            "noworkflow.tests.prov_deployment.prov_deployment_test",
            "noworkflow.tests.prov_execution",
            "noworkflow.tests.prov_execution.call_slicing_test"
        ],
        "version": "1.9.1"
    },
    "nowplaying": {
        "cmdline": [],
        "modules": [
            "nowplaying",
            "np",
            "np.__mpd__",
            "np.__mpris__",
            "np.base"
        ],
        "version": "0.2.62"
    },
    "nowsync": {
        "cmdline": [],
        "modules": [
            "nowsync",
            "nowsync.client",
            "nowsync.client.api",
            "nowsync.client.client",
            "nowsync.config",
            "nowsync.core",
            "nowsync.hotfixes",
            "nowsync.middlewares",
            "nowsync.models",
            "nowsync.models.file",
            "nowsync.scripts",
            "nowsync.scripts.commands",
            "nowsync.scripts.setup_cmd",
            "nowsync.server",
            "nowsync.signals",
            "nowsync.tests",
            "nowsync.tests.file",
            "nowsync.utils",
            "nowsync.views",
            "nowsync.views.api",
            "nowsync.views.frontend"
        ],
        "version": "0.3b3.dev30"
    },
    "nox": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nox-automation": {
        "cmdline": [],
        "modules": [
            "nox",
            "nox._parametrize",
            "nox.command",
            "nox.logger",
            "nox.main",
            "nox.popen",
            "nox.registry",
            "nox.sessions",
            "nox.tox_to_nox",
            "nox.utils",
            "nox.virtualenv"
        ],
        "version": "0.15.0"
    },
    "nozama-cloudsearch-client": {
        "cmdline": [],
        "modules": [
            "nozama",
            "nozama.cloudsearch",
            "nozama.cloudsearch.client",
            "nozama.cloudsearch.client.admintool",
            "nozama.cloudsearch.client.admintool.admincmds",
            "nozama.cloudsearch.client.admintool.main",
            "nozama.cloudsearch.client.rest",
            "nozama.cloudsearch.client.tests"
        ],
        "version": "1.1.3"
    },
    "nozama-cloudsearch-data": {
        "cmdline": [],
        "modules": [
            "nozama",
            "nozama.cloudsearch",
            "nozama.cloudsearch.data",
            "nozama.cloudsearch.data.db",
            "nozama.cloudsearch.data.document",
            "nozama.cloudsearch.data.tests",
            "nozama.cloudsearch.data.tests.conftest",
            "nozama.cloudsearch.data.tests.test_backend_searching",
            "nozama.cloudsearch.data.tests.test_documentops"
        ],
        "version": "1.1.3"
    },
    "nozama-cloudsearch-service": {
        "cmdline": [],
        "modules": [
            "nozama",
            "nozama.cloudsearch",
            "nozama.cloudsearch.service",
            "nozama.cloudsearch.service.docs",
            "nozama.cloudsearch.service.nozamaviews",
            "nozama.cloudsearch.service.restfulhelpers",
            "nozama.cloudsearch.service.tests",
            "nozama.cloudsearch.service.tests.conftest",
            "nozama.cloudsearch.service.tests.test_querying",
            "nozama.cloudsearch.service.tests.test_serviceapi",
            "nozama.cloudsearch.service.views"
        ],
        "version": "1.1.3"
    },
    "nozdormu": {
        "cmdline": [],
        "modules": [
            "nozdormu",
            "nozdormu.batch",
            "nozdormu.loader",
            "nozdormu.main",
            "nozdormu.runner",
            "nozdormu.suite",
            "nozdormu.util"
        ],
        "version": "0.3.3"
    },
    "nozzle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "np": {
        "cmdline": [],
        "modules": [
            "np",
            "np.magic",
            "np.quickarrays"
        ],
        "version": "0.2.0"
    },
    "np-inline": {
        "cmdline": [],
        "modules": [
            "np_inline"
        ],
        "version": "0.3"
    },
    "np-utils": {
        "cmdline": [],
        "modules": [
            "np_utils",
            "np_utils._test_helpers",
            "np_utils._version",
            "np_utils.array_drawing",
            "np_utils.circles_and_spheres",
            "np_utils.func_utils",
            "np_utils.gen_utils",
            "np_utils.list_utils",
            "np_utils.np_future",
            "np_utils.np_utils",
            "np_utils.pyarray_utils",
            "np_utils.recarray_utils",
            "np_utils.signal_utils",
            "np_utils.stat_utils"
        ],
        "version": "0.5.3.2"
    },
    "np2d": {
        "cmdline": [],
        "modules": [
            "np2d",
            "np2d.base",
            "np2d.basic",
            "np2d.random",
            "np2d.tests",
            "np2d.tests.test_basic"
        ],
        "version": "0.1.1"
    },
    "np6helperconfig": {
        "cmdline": [],
        "modules": [
            "NP6HelperConfig",
            "NP6HelperConfig.helperConfig"
        ],
        "version": "0.2"
    },
    "np6helperhttp": {
        "cmdline": [],
        "modules": [
            "NP6HelperHttp",
            "NP6HelperHttp.helperHttp"
        ],
        "version": "0.1"
    },
    "npcompare": {
        "cmdline": [],
        "modules": [
            "npcompare",
            "npcompare.compare",
            "npcompare.estimate",
            "npcompare.estimatebfs",
            "npcompare.estimatelindleybfs",
            "npcompare.fourierseries"
        ],
        "version": "0.11.0"
    },
    "npconf": {
        "cmdline": [],
        "modules": [
            "npconf",
            "npconf.main"
        ],
        "version": "0.0.3"
    },
    "npctypes": {
        "cmdline": [],
        "modules": [
            "npctypes",
            "npctypes._version",
            "npctypes.shared",
            "npctypes.types"
        ],
        "version": "0.0.4"
    },
    "npdl": {
        "cmdline": [],
        "modules": [
            "npdl",
            "npdl.activation",
            "npdl.initialization",
            "npdl.layers",
            "npdl.layers.base",
            "npdl.layers.convolution",
            "npdl.layers.core",
            "npdl.layers.embedding",
            "npdl.layers.input",
            "npdl.layers.normalization",
            "npdl.layers.pooling",
            "npdl.layers.reccurent",
            "npdl.layers.shape",
            "npdl.model",
            "npdl.objectives",
            "npdl.optimizers",
            "npdl.utils",
            "npdl.utils.data",
            "npdl.utils.eval",
            "npdl.utils.generic",
            "npdl.utils.random",
            "test",
            "test.model",
            "test.model.test_initialization"
        ],
        "version": "0.1.0"
    },
    "npeparser": {
        "cmdline": [],
        "modules": [
            "npeparser",
            "npeparser.protocol"
        ],
        "version": "0.5"
    },
    "npgamma": {
        "cmdline": [],
        "modules": [
            "npgamma"
        ],
        "version": "0.7.0"
    },
    "nphelper": {
        "cmdline": [],
        "modules": [
            "nphelper",
            "nphelper.nphelper"
        ],
        "version": "0.0.5"
    },
    "nphusl": {
        "cmdline": [],
        "modules": [
            "nphusl",
            "nphusl._nphusl_expr",
            "nphusl.constants",
            "nphusl.nphusl"
        ],
        "version": "1.4.1"
    },
    "npimp": {
        "cmdline": [],
        "modules": [
            "npimp",
            "npimp.action_modules",
            "npimp.config",
            "npimp.info_modules",
            "npimp.npimp"
        ],
        "version": "0.6"
    },
    "nplook": {
        "cmdline": [
            "nplook"
        ],
        "modules": [
            "nplook",
            "nplook.core",
            "nplook.shell"
        ],
        "version": "0.1.3"
    },
    "nplusone": {
        "cmdline": [],
        "modules": [
            "nplusone",
            "nplusone.core",
            "nplusone.core.exceptions",
            "nplusone.core.listeners",
            "nplusone.core.notifiers",
            "nplusone.core.signals",
            "nplusone.core.stack",
            "nplusone.ext",
            "nplusone.ext.django",
            "nplusone.ext.django.middleware",
            "nplusone.ext.django.patch",
            "nplusone.ext.flask_sqlalchemy",
            "nplusone.ext.peewee",
            "nplusone.ext.sqlalchemy"
        ],
        "version": "0.8.0"
    },
    "npm": {
        "cmdline": [],
        "modules": [
            "npm",
            "npm.bindings",
            "npm.conf",
            "npm.exceptions",
            "npm.interrogate"
        ],
        "version": "0.1.1"
    },
    "npm-accel": {
        "cmdline": [],
        "modules": [
            "npm_accel",
            "npm_accel.cli",
            "npm_accel.exceptions",
            "npm_accel.tests"
        ],
        "version": "0.4"
    },
    "npm-helper": {
        "cmdline": [],
        "modules": [
            "npm_helper",
            "npm_helper.data",
            "npm_helper.entry",
            "npm_helper.observer",
            "npm_helper.spiders",
            "npm_helper.spiders.spider_list",
            "npm_helper.spiders.spider_page",
            "run"
        ],
        "version": "0.20"
    },
    "npm-watcher": {
        "cmdline": [
            "npm_watcher"
        ],
        "modules": [],
        "version": "0.1"
    },
    "npmanager": {
        "cmdline": [],
        "modules": [
            "_npmanager",
            "_npmanager.classes",
            "_npmanager.constants",
            "_npmanager.manager",
            "_npmanager.messages",
            "_npmanager.packages",
            "_npmanager.packages.confs",
            "_npmanager.packages.mariadb",
            "_npmanager.packages.nginx",
            "_npmanager.packages.php",
            "_npmanager.packages.pma",
            "_npmanager.packages.pyapt",
            "_npmanager.utils",
            "_npmanager.utils.commandutils",
            "_npmanager.utils.networkutils",
            "_npmanager.utils.screen"
        ],
        "version": "1.0-5"
    },
    "npmdownloader": {
        "cmdline": [],
        "modules": [
            "npmdownloader",
            "npmdownloader.multipackagedownloader",
            "npmdownloader.npmclient",
            "npmdownloader.npmpackage",
            "npmdownloader.packagedownloader",
            "npmdownloader.utils"
        ],
        "version": "1.0.0a2"
    },
    "npmln": {
        "cmdline": [],
        "modules": [],
        "version": "0.6.4"
    },
    "npmsearch2": {
        "cmdline": [],
        "modules": [
            "NpmSearch2",
            "NpmSearch2.main"
        ],
        "version": "1.0"
    },
    "npmsearch3": {
        "cmdline": [],
        "modules": [
            "NpmSearch3",
            "NpmSearch3.main"
        ],
        "version": "1.0"
    },
    "nport": {
        "cmdline": [],
        "modules": [
            "nport",
            "nport.citi",
            "nport.deemb",
            "nport.nport",
            "nport.parameter",
            "nport.tline",
            "nport.tool",
            "nport.touchstone",
            "nport.twonport",
            "nport.version"
        ],
        "version": "0.1"
    },
    "npp-dotmanager": {
        "cmdline": [],
        "modules": [
            "dotfiles",
            "dotfiles.command_calling",
            "dotfiles.dot_mechanism",
            "dotfiles.dotfiles",
            "dotfiles.git_funcitons",
            "dotmanager",
            "dotmanager.command_calling",
            "dotmanager.dot_mechanism",
            "dotmanager.dotfiles",
            "dotmanager.dotmanager",
            "dotmanager.git_funcitons"
        ],
        "version": "0.2.0"
    },
    "npplus": {
        "cmdline": [],
        "modules": [
            "npplus",
            "npplus.basic",
            "npplus.fermi",
            "npplus.interactive",
            "npplus.lsqfit",
            "npplus.pcwise",
            "npplus.pwpoly",
            "npplus.pyplotx",
            "npplus.pyplotx.cbqcolors",
            "npplus.pyplotx.interactive",
            "npplus.pyplotx.mpl2cmaps",
            "npplus.pyplotx.mpldefaults",
            "npplus.pyplotx.pltwraps",
            "npplus.randomx",
            "npplus.solveper"
        ],
        "version": "0.9.5"
    },
    "nppm": {
        "cmdline": [],
        "modules": [
            "nppm",
            "nppm.commands",
            "nppm.commands.init",
            "nppm.commands.install",
            "nppm.commands.python",
            "nppm.main",
            "nppm.util"
        ],
        "version": "0.1.2"
    },
    "npr": {
        "cmdline": [],
        "modules": [],
        "version": "1.1.12"
    },
    "nprn": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nps": {
        "cmdline": [],
        "modules": [
            "nps",
            "nps.common",
            "nps.file_log",
            "nps.nps_runner",
            "nps.packet_handler_recv",
            "nps.packet_handler_send",
            "nps.packet_info",
            "nps.packet_lib",
            "nps.process",
            "nps.report",
            "nps.timer",
            "nps.tools",
            "nps.tools.arp_mon",
            "nps.xml_tc"
        ],
        "version": "0.1.0"
    },
    "nps-sdk": {
        "cmdline": [],
        "modules": [
            "nps_sdk",
            "nps_sdk.certs",
            "nps_sdk.conf",
            "nps_sdk.conf.sanititize_struc",
            "nps_sdk.configuration",
            "nps_sdk.constants",
            "nps_sdk.errors",
            "nps_sdk.file_adapter",
            "nps_sdk.sdk",
            "nps_sdk.services",
            "nps_sdk.soap_client",
            "nps_sdk.utils",
            "nps_sdk.wsdl",
            "test",
            "test.test"
        ],
        "version": "1.1.8"
    },
    "nps-weather": {
        "cmdline": [],
        "modules": [
            "nps_weather",
            "nps_weather.cli",
            "nps_weather.download",
            "nps_weather.main",
            "nps_weather.parse"
        ],
        "version": "0.0.3"
    },
    "nptdms": {
        "cmdline": [],
        "modules": [
            "nptdms",
            "nptdms.common",
            "nptdms.scaling",
            "nptdms.tdms",
            "nptdms.tdmsinfo",
            "nptdms.test",
            "nptdms.test.pandas_test",
            "nptdms.test.scaling_test",
            "nptdms.test.tdms_test",
            "nptdms.types",
            "nptdms.utils",
            "nptdms.version",
            "nptdms.writer"
        ],
        "version": "0.11.0"
    },
    "nptfit": {
        "cmdline": [],
        "modules": [
            "NPTFit",
            "NPTFit.config_maps",
            "NPTFit.create_mask",
            "NPTFit.dnds_analysis",
            "NPTFit.nptf_scan",
            "NPTFit.nptfit",
            "NPTFit.pdf_sampler",
            "NPTFit.psf_compute",
            "NPTFit.psf_correction",
            "NPTFit.set_dirs"
        ],
        "version": "0.1.1"
    },
    "nptime": {
        "cmdline": [],
        "modules": [],
        "version": "0.4.1"
    },
    "npuzzle": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "npy4chan": {
        "cmdline": [],
        "modules": [
            "npy4chan",
            "npy4chan.interface"
        ],
        "version": "0.1.2.1"
    },
    "npyscreen": {
        "cmdline": [],
        "modules": [
            "npyscreen",
            "npyscreen.apNPSApplication",
            "npyscreen.apNPSApplicationAdvanced",
            "npyscreen.apNPSApplicationEvents",
            "npyscreen.apNPSApplicationManaged",
            "npyscreen.apOptions",
            "npyscreen.compatibility_code",
            "npyscreen.compatibility_code.npysNPSTree",
            "npyscreen.compatibility_code.oldtreeclasses",
            "npyscreen.eveventhandler",
            "npyscreen.fmActionForm",
            "npyscreen.fmActionFormV2",
            "npyscreen.fmFileSelector",
            "npyscreen.fmForm",
            "npyscreen.fmFormMultiPage",
            "npyscreen.fmFormMutt",
            "npyscreen.fmFormMuttActive",
            "npyscreen.fmFormWithMenus",
            "npyscreen.fmPopup",
            "npyscreen.fm_form_edit_loop",
            "npyscreen.globals",
            "npyscreen.muMenu",
            "npyscreen.muNewMenu",
            "npyscreen.npysGlobalOptions",
            "npyscreen.npysNPSFilteredData",
            "npyscreen.npysThemeManagers",
            "npyscreen.npysThemes",
            "npyscreen.npysTree",
            "npyscreen.npyspmfuncs",
            "npyscreen.npyssafewrapper",
            "npyscreen.proto_fm_screen_area",
            "npyscreen.stdfmemail",
            "npyscreen.utilNotify",
            "npyscreen.util_viewhelp",
            "npyscreen.wgFormControlCheckbox",
            "npyscreen.wgNMenuDisplay",
            "npyscreen.wgannotatetextbox",
            "npyscreen.wgautocomplete",
            "npyscreen.wgboxwidget",
            "npyscreen.wgbutton",
            "npyscreen.wgcheckbox",
            "npyscreen.wgcombobox",
            "npyscreen.wgdatecombo",
            "npyscreen.wgeditmultiline",
            "npyscreen.wgfilenamecombo",
            "npyscreen.wggrid",
            "npyscreen.wggridcoltitles",
            "npyscreen.wgmonthbox",
            "npyscreen.wgmultiline",
            "npyscreen.wgmultilineeditable",
            "npyscreen.wgmultilinetree",
            "npyscreen.wgmultilinetreeselectable",
            "npyscreen.wgmultiselect",
            "npyscreen.wgmultiselecttree",
            "npyscreen.wgpassword",
            "npyscreen.wgselectone",
            "npyscreen.wgslider",
            "npyscreen.wgtextbox",
            "npyscreen.wgtextbox_controlchrs",
            "npyscreen.wgtextboxunicode",
            "npyscreen.wgtexttokens",
            "npyscreen.wgtitlefield",
            "npyscreen.wgwidget",
            "npyscreen.wgwidget_proto"
        ],
        "version": "4.10.5"
    },
    "npyscreenreactor": {
        "cmdline": [],
        "modules": [
            "npyscreenreactor"
        ],
        "version": "1.3"
    },
    "nr": {
        "cmdline": [],
        "modules": [
            "nr",
            "nr.concurrency",
            "nr.misc",
            "nr.misc.archive",
            "nr.misc.cli",
            "nr.parse",
            "nr.parse.gitignore",
            "nr.parse.strex",
            "nr.py",
            "nr.py.bytecode",
            "nr.py.context",
            "nr.tundras",
            "nr.tundras.csv",
            "nr.tundras.exceptions",
            "nr.tundras.field",
            "nr.tundras.pycompat",
            "nr.tundras.table",
            "nr.tundras.tools",
            "nr.types",
            "nr.types.enum",
            "nr.types.recordclass",
            "nr.types.singleton",
            "nr.types.version"
        ],
        "version": "1.4.6"
    },
    "nr-lvm-plugin": {
        "cmdline": [
            "nrlvmd.py"
        ],
        "modules": [],
        "version": "0.1.5"
    },
    "nr.strex": {
        "cmdline": [],
        "modules": [
            "nr",
            "nr.strex"
        ],
        "version": "1.4.1"
    },
    "nrb": {
        "cmdline": [],
        "modules": [
            "nrb",
            "nrb.bore",
            "nrb.find_package",
            "nrb.hooks",
            "nrb.hooks.base",
            "nrb.hooks.commands",
            "nrb.hooks.files",
            "nrb.packaging",
            "nrb.util"
        ],
        "version": "2.1.1"
    },
    "nrdpy": {
        "cmdline": [],
        "modules": [
            "nrdpy",
            "nrdpy.api",
            "nrdpy.result"
        ],
        "version": "0.9.0"
    },
    "nre-darwin-py": {
        "cmdline": [],
        "modules": [
            "nredarwin",
            "nredarwin.webservice"
        ],
        "version": "0.2.0"
    },
    "nrecipes": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nrefocus": {
        "cmdline": [],
        "modules": [
            "nrefocus",
            "nrefocus._autofocus",
            "nrefocus._propagate",
            "nrefocus._version",
            "nrefocus._version_save",
            "nrefocus.metrics",
            "nrefocus.pad"
        ],
        "version": "0.1.5"
    },
    "nrepl": {
        "cmdline": [],
        "modules": [
            "nrepl",
            "nrepl._compat",
            "nrepl.cli",
            "nrepl.client",
            "nrepl.clj",
            "nrepl.proc",
            "nrepl.utils",
            "nrepl.watcher"
        ],
        "version": "0.1.5"
    },
    "nrepl-python-client": {
        "cmdline": [],
        "modules": [
            "nrepl",
            "nrepl.bencode"
        ],
        "version": "0.0.3"
    },
    "nrewebservices": {
        "cmdline": [],
        "modules": [
            "nrewebservices",
            "nrewebservices.__release__",
            "nrewebservices.__version__",
            "nrewebservices.common",
            "nrewebservices.common.soap",
            "nrewebservices.ldbws",
            "nrewebservices.ldbws.responses",
            "nrewebservices.ldbws.webservice"
        ],
        "version": "0.1.4"
    },
    "nrftool": {
        "cmdline": [],
        "modules": [
            "nrftool",
            "nrftool.cmdline",
            "nrftool.command",
            "nrftool.command.base",
            "nrftool.command.erase",
            "nrftool.command.flash",
            "nrftool.command.jlink"
        ],
        "version": "0.1.1"
    },
    "nrfutil": {
        "cmdline": [],
        "modules": [
            "nordicsemi",
            "nordicsemi.bluetooth",
            "nordicsemi.bluetooth.hci",
            "nordicsemi.bluetooth.hci.codec",
            "nordicsemi.bluetooth.hci.slip",
            "nordicsemi.bluetooth.hci.tests",
            "nordicsemi.bluetooth.hci.tests.test_codec",
            "nordicsemi.dfu",
            "nordicsemi.dfu.bl_dfu_sett",
            "nordicsemi.dfu.crc16",
            "nordicsemi.dfu.dfu",
            "nordicsemi.dfu.dfu_cc_pb2",
            "nordicsemi.dfu.dfu_transport",
            "nordicsemi.dfu.dfu_transport_ble",
            "nordicsemi.dfu.dfu_transport_serial",
            "nordicsemi.dfu.init_packet_pb",
            "nordicsemi.dfu.intelhex",
            "nordicsemi.dfu.intelhex.compat",
            "nordicsemi.dfu.manifest",
            "nordicsemi.dfu.model",
            "nordicsemi.dfu.nrfhex",
            "nordicsemi.dfu.package",
            "nordicsemi.dfu.signing",
            "nordicsemi.dfu.tests",
            "nordicsemi.dfu.tests.test_dfu_transport_serial",
            "nordicsemi.dfu.tests.test_init_packet_pb",
            "nordicsemi.dfu.tests.test_manifest",
            "nordicsemi.dfu.tests.test_nrfhex",
            "nordicsemi.dfu.tests.test_package",
            "nordicsemi.dfu.tests.test_signing",
            "nordicsemi.dfu.util",
            "nordicsemi.utility",
            "nordicsemi.utility.target_registry",
            "nordicsemi.utility.tests",
            "nordicsemi.utility.tests.test_target_registry",
            "nordicsemi.version"
        ],
        "version": "2.3.0"
    },
    "nrkdownload": {
        "cmdline": [],
        "modules": [
            "nrkdownload",
            "nrkdownload.commandline_script",
            "nrkdownload.constants",
            "nrkdownload.nrktv",
            "nrkdownload.utils",
            "nrkdownload.version"
        ],
        "version": "0.8.13"
    },
    "nrksub": {
        "cmdline": [
            "nrksub.py"
        ],
        "modules": [],
        "version": "0.4.0"
    },
    "nrnutils": {
        "cmdline": [],
        "modules": [
            "nrnutils"
        ],
        "version": "0.2.0"
    },
    "nrs": {
        "cmdline": [],
        "modules": [
            "nrs",
            "nrs.ext",
            "nrs.ext.bzlib",
            "nrs.ext.bzlib.bzlib",
            "nrs.ext.lzma",
            "nrs.ext.lzma.lzma",
            "nrs.fileform",
            "nrs.ida",
            "nrs.ida.loader",
            "nrs.ida.proc",
            "nrs.nsisfile",
            "nrs.strings",
            "nrs.strings.nsis2",
            "nrs.strings.nsis3"
        ],
        "version": "0.2.3"
    },
    "nrtest": {
        "cmdline": [],
        "modules": [
            "nrtest",
            "nrtest.compare",
            "nrtest.execute",
            "nrtest.plugin",
            "nrtest.process",
            "nrtest.testsuite",
            "nrtest.utility",
            "tests",
            "tests.test_config",
            "tests.test_process"
        ],
        "version": "0.2.2"
    },
    "ns": {
        "cmdline": [],
        "modules": [
            "ns"
        ],
        "version": "0.1"
    },
    "ns1": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.9"
    },
    "ns1cli": {
        "cmdline": [],
        "modules": [
            "ns1cli",
            "ns1cli.cli",
            "ns1cli.commands",
            "ns1cli.commands.cmd_config",
            "ns1cli.commands.cmd_data",
            "ns1cli.commands.cmd_monitor",
            "ns1cli.commands.cmd_record",
            "ns1cli.commands.cmd_stats",
            "ns1cli.commands.cmd_zone",
            "ns1cli.repl",
            "ns1cli.util"
        ],
        "version": "0.9.2"
    },
    "ns4600": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "nsapi": {
        "cmdline": [],
        "modules": [],
        "version": "2.7.4"
    },
    "nscaweb": {
        "cmdline": [],
        "modules": [
            "nscaweb",
            "nscaweb.authentication",
            "nscaweb.communication",
            "nscaweb.main",
            "nscaweb.server"
        ],
        "version": "0.1.20"
    },
    "nscms": {
        "cmdline": [],
        "modules": [
            "nscms",
            "nscms.base",
            "nscms.base.content",
            "nscms.base.content.models",
            "nscms.base.simplenews",
            "nscms.base.simplenews.models",
            "nscms.base.simplepage",
            "nscms.base.simplepage.models",
            "nscms.contrib",
            "nscms.contrib.banner",
            "nscms.contrib.banner.admin",
            "nscms.contrib.banner.migrations",
            "nscms.contrib.banner.migrations.0001_initial",
            "nscms.contrib.banner.models",
            "nscms.contrib.basicnews",
            "nscms.contrib.basicnews.admin",
            "nscms.contrib.basicnews.migrations",
            "nscms.contrib.basicnews.migrations.0001_initial",
            "nscms.contrib.basicnews.models",
            "nscms.contrib.basicnews.tests",
            "nscms.contrib.basicnews.views",
            "nscms.contrib.block",
            "nscms.contrib.block.admin",
            "nscms.contrib.block.forms",
            "nscms.contrib.block.migrations",
            "nscms.contrib.block.migrations.0001_initial",
            "nscms.contrib.block.migrations.0002_auto__add_field_block_is_template__add_index_block_created__add_index_",
            "nscms.contrib.block.models",
            "nscms.contrib.block.templatetags",
            "nscms.contrib.block.templatetags.nscms_block",
            "nscms.contrib.newsletter",
            "nscms.contrib.newsletter.models",
            "nscms.contrib.newsletter.tests",
            "nscms.contrib.newsletter.urls",
            "nscms.contrib.newsletter.views",
            "nscms.db",
            "nscms.db.models",
            "nscms.db.models.youtube",
            "nscms.forms",
            "nscms.helpers",
            "nscms.helpers.upload",
            "nscms.helpers.userprofile",
            "nscms.helpers.userprofile.models",
            "nscms.helpers.userprofile.tests",
            "nscms.helpers.userprofile.views",
            "nscms.localflavor",
            "nscms.localflavor.br",
            "nscms.localflavor.br.managers",
            "nscms.localflavor.br.models",
            "nscms.models",
            "nscms.simplenews",
            "nscms.simplenews.admin",
            "nscms.simplenews.management",
            "nscms.simplenews.management.commands",
            "nscms.simplenews.management.commands.simplenews_import_rss",
            "nscms.simplenews.migrations",
            "nscms.simplenews.migrations.0001_initial",
            "nscms.simplenews.models",
            "nscms.simplepage",
            "nscms.simplepage.admin",
            "nscms.simplepage.migrations",
            "nscms.simplepage.migrations.0001_initial",
            "nscms.simplepage.migrations.0002_auto__add_field_simplepage_published__add_field_simplepage_publish_dat",
            "nscms.simplepage.migrations.0003_auto__chg_field_simplepage_content",
            "nscms.simplepage.models",
            "nscms.simplepage.views",
            "nscms.tests",
            "nscms.tests.urls"
        ],
        "version": "0.6.0"
    },
    "nsdf": {
        "cmdline": [],
        "modules": [
            "nsdf",
            "nsdf.constants",
            "nsdf.model",
            "nsdf.nsdfdata",
            "nsdf.nsdfreader",
            "nsdf.nsdfwriter",
            "nsdf.util"
        ],
        "version": "0.1"
    },
    "nsefinance": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nsenter": {
        "cmdline": [],
        "modules": [
            "nsenter"
        ],
        "version": "0.2"
    },
    "nsepy": {
        "cmdline": [],
        "modules": [
            "nsepy",
            "nsepy.archives",
            "nsepy.commons",
            "nsepy.constants",
            "nsepy.debt",
            "nsepy.derivatives",
            "nsepy.derivatives.archives",
            "nsepy.history",
            "nsepy.indices",
            "nsepy.indices.archives",
            "nsepy.live",
            "nsepy.liveurls",
            "nsepy.nselist",
            "nsepy.urls"
        ],
        "version": "0.4"
    },
    "nsequoter": {
        "cmdline": [],
        "modules": [
            "nsequoter",
            "nsequoter.quoter",
            "nsequoter.utils"
        ],
        "version": "1.0.0"
    },
    "nserver.db": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nseter": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.4.0"
    },
    "nsetools": {
        "cmdline": [],
        "modules": [
            "nsetools",
            "nsetools.bases",
            "nsetools.nse",
            "nsetools.utils"
        ],
        "version": "1.0.1"
    },
    "nsga2": {
        "cmdline": [],
        "modules": [
            "nsga2",
            "nsga2.evolution",
            "nsga2.individual",
            "nsga2.population",
            "nsga2.problems",
            "nsga2.problems.zdt1",
            "nsga2.utils"
        ],
        "version": "0.1"
    },
    "nsgt": {
        "cmdline": [],
        "modules": [
            "nsgt",
            "nsgt.audio",
            "nsgt.cq",
            "nsgt.fft",
            "nsgt.fscale",
            "nsgt.nsdual",
            "nsgt.nsgfwin",
            "nsgt.nsgfwin_sl",
            "nsgt.nsgtf",
            "nsgt.nsgtf_loop",
            "nsgt.nsigtf",
            "nsgt.nsigtf_loop",
            "nsgt.reblock",
            "nsgt.slicing",
            "nsgt.slicq",
            "nsgt.unslicing",
            "nsgt.util",
            "tests",
            "tests.cq_test",
            "tests.fft_test",
            "tests.nsgt_test",
            "tests.reblock_test",
            "tests.slicq_test"
        ],
        "version": "0.17"
    },
    "nshowrss": {
        "cmdline": [],
        "modules": [
            "nshowrss",
            "nshowrss.nshowrss",
            "tests",
            "tests.test_nshowrss"
        ],
        "version": "0.1.2"
    },
    "nsi.cloudooomanager": {
        "cmdline": [],
        "modules": [
            "nsicloudooomanager",
            "nsicloudooomanager.auth",
            "nsicloudooomanager.http",
            "nsicloudooomanager.interfaces",
            "nsicloudooomanager.interfaces.auth",
            "nsicloudooomanager.interfaces.http",
            "nsicloudooomanager.tasks"
        ],
        "version": "0.2.5"
    },
    "nsi.granulate": {
        "cmdline": [],
        "modules": [
            "nsi",
            "nsi.granulate",
            "nsi.granulate.FileUtils",
            "nsi.granulate.GranularUtils",
            "nsi.granulate.Granulate",
            "nsi.granulate.GranulateOffice",
            "nsi.granulate.GranulateOpenXML",
            "nsi.granulate.GranulatePDF",
            "nsi.granulate.GranulateSVG",
            "nsi.granulate.GranulateVideo",
            "nsi.granulate.SVGUtils",
            "nsi.granulate.SvgExtractRegion",
            "nsi.granulate.comparaHistogramaImage",
            "nsi.granulate.granulate",
            "nsi.granulate.granulate.FileUtils",
            "nsi.granulate.granulate.GranularUtils",
            "nsi.granulate.granulate.Granulate",
            "nsi.granulate.granulate.GranulateOffice",
            "nsi.granulate.granulate.GranulateOpenXML",
            "nsi.granulate.granulate.GranulatePDF",
            "nsi.granulate.granulate.GranulateSVG",
            "nsi.granulate.granulate.GranulateVideo",
            "nsi.granulate.granulate.SVGUtils",
            "nsi.granulate.granulate.SvgExtractRegion",
            "nsi.granulate.granulate.comparaHistogramaImage",
            "nsi.granulate.granulate.icons",
            "nsi.granulate.granulate.openxml_granulator",
            "nsi.granulate.granulate.openxml_granulator.openxml_granulator",
            "nsi.granulate.granulate.openxml_granulator.tables_granulated_spec",
            "nsi.granulate.granulate.template",
            "nsi.granulate.granulate.utils",
            "nsi.granulate.icons",
            "nsi.granulate.openxml_granulator",
            "nsi.granulate.openxml_granulator.openxml_granulator",
            "nsi.granulate.openxml_granulator.tables_granulated_spec",
            "nsi.granulate.template",
            "nsi.granulate.utils"
        ],
        "version": "1.0.3"
    },
    "nsi.metadataextractor": {
        "cmdline": [],
        "modules": [
            "nsi",
            "nsi.metadataextractor",
            "nsi.metadataextractor.cmdline",
            "nsi.metadataextractor.extractors",
            "nsi.metadataextractor.extractors.event",
            "nsi.metadataextractor.extractors.periodic",
            "nsi.metadataextractor.extractors.tcc",
            "nsi.metadataextractor.preparator",
            "nsi.metadataextractor.tests",
            "nsi.metadataextractor.tests.testExtractor",
            "nsi.metadataextractor.tests.testParser",
            "nsi.metadataextractor.xml_parser"
        ],
        "version": "1.2"
    },
    "nsi.sam": {
        "cmdline": [],
        "modules": [
            "nsisam",
            "nsisam.auth",
            "nsisam.http",
            "nsisam.interfaces",
            "nsisam.interfaces.auth",
            "nsisam.interfaces.http",
            "nsisam.tasks"
        ],
        "version": "0.2.4"
    },
    "nsi.svgtool": {
        "cmdline": [],
        "modules": [
            "nsi",
            "nsi.svgtool",
            "nsi.svgtool.SvgFile",
            "nsi.svgtool.SvgFile-old",
            "nsi.svgtool.SvgImage",
            "nsi.svgtool.SvgTool",
            "nsi.svgtool.SvgXmlTool"
        ],
        "version": "0.3.1"
    },
    "nsim": {
        "cmdline": [],
        "modules": [
            "nsim",
            "nsim.analyses1",
            "nsim.analyses1._cwtmorlet",
            "nsim.analyses1.epochs",
            "nsim.analyses1.freq",
            "nsim.analyses1.misc",
            "nsim.analyses1.phase",
            "nsim.analyses1.plots",
            "nsim.analyses1.pyeeg",
            "nsim.analysesN",
            "nsim.analysesN.epochs",
            "nsim.analysesN.misc",
            "nsim.analysesN.phase",
            "nsim.analysesN.plots",
            "nsim.models",
            "nsim.models.basic_sde",
            "nsim.models.neural_mass",
            "nsim.models.oscillators",
            "nsim.nsim",
            "nsim.readfile",
            "nsim.timeseries"
        ],
        "version": "0.1.17"
    },
    "nsl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nslds": {
        "cmdline": [],
        "modules": [
            "json_parser",
            "nslds",
            "null_parser"
        ],
        "version": "1.5.3"
    },
    "nslocalized": {
        "cmdline": [],
        "modules": [
            "nslocalized",
            "nslocalized.store",
            "nslocalized.utils",
            "tests",
            "tests.test_basics"
        ],
        "version": "0.2.0"
    },
    "nsmemcached": {
        "cmdline": [],
        "modules": [
            "nsmemcached",
            "nsmemcached.client",
            "nsmemcached.tests"
        ],
        "version": "0.2.1"
    },
    "nsms": {
        "cmdline": [],
        "modules": [
            "nsms",
            "nsms.parser",
            "nsms.parser.parser",
            "nsms.parser.tests",
            "nsms.text",
            "nsms.text.models",
            "nsms.text.tests",
            "nsms.text.urls",
            "nsms.text.views",
            "project",
            "project.dashboard",
            "project.dashboard.tests",
            "project.dashboard.urls",
            "project.dashboard.views",
            "project.manage",
            "project.mileage",
            "project.mileage.app",
            "project.mileage.models",
            "project.mileage.tests",
            "project.mileage.urls",
            "project.mileage.views",
            "project.settings_common",
            "project.translation",
            "project.urls"
        ],
        "version": "1.0.4"
    },
    "nsms-web-api": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nsnitro": {
        "cmdline": [],
        "modules": [
            "nsnitro",
            "nsnitro.nsexceptions",
            "nsnitro.nsexceptions.nsexceptions",
            "nsnitro.nsnitro",
            "nsnitro.nsresources",
            "nsnitro.nsresources.authenticationldapaction",
            "nsnitro.nsresources.authenticationldappolicy",
            "nsnitro.nsresources.authenticationtacacsaction",
            "nsnitro.nsresources.authenticationtacacspolicy",
            "nsnitro.nsresources.nsacl",
            "nsnitro.nsresources.nsacls",
            "nsnitro.nsresources.nsbaseresource",
            "nsnitro.nsresources.nsconfig",
            "nsnitro.nsresources.nscspolicy",
            "nsnitro.nsresources.nscspolicycspolicylabelbinding",
            "nsnitro.nsresources.nscsvserver",
            "nsnitro.nsresources.nscsvservercspolicybinding",
            "nsnitro.nsresources.nscsvserverresponderpolicybinding",
            "nsnitro.nsresources.nscsvserverrewritepolicybinding",
            "nsnitro.nsresources.nscsvserverstat",
            "nsnitro.nsresources.nsfeature",
            "nsnitro.nsresources.nsgslbconfig",
            "nsnitro.nsresources.nsgslbservice",
            "nsnitro.nsresources.nsgslbvserver",
            "nsnitro.nsresources.nsgslbvserverbinding",
            "nsnitro.nsresources.nsgslbvserverdomainbinding",
            "nsnitro.nsresources.nsgslbvservergslbservicebinding",
            "nsnitro.nsresources.nshanode",
            "nsnitro.nsresources.nshardware",
            "nsnitro.nsresources.nshostname",
            "nsnitro.nsresources.nshttpprofile",
            "nsnitro.nsresources.nsip",
            "nsnitro.nsresources.nsiptunnel",
            "nsnitro.nsresources.nslbmonitor",
            "nsnitro.nsresources.nslbmonitorservicebinding",
            "nsnitro.nsresources.nslbvserver",
            "nsnitro.nsresources.nslbvservercsvserverbinding",
            "nsnitro.nsresources.nslbvserverrewritepolicybinding",
            "nsnitro.nsresources.nslbvserverservicebinding",
            "nsnitro.nsresources.nslbvserverservicegroupbinding",
            "nsnitro.nsresources.nslbvserverstat",
            "nsnitro.nsresources.nspbr",
            "nsnitro.nsresources.nspbrs",
            "nsnitro.nsresources.nsresponderaction",
            "nsnitro.nsresources.nsresponderpolicy",
            "nsnitro.nsresources.nsresponderpolicycsvserverbinding",
            "nsnitro.nsresources.nsresponderpolicylabel",
            "nsnitro.nsresources.nsresponderpolicylabelbinding",
            "nsnitro.nsresources.nsrewriteaction",
            "nsnitro.nsresources.nsrewritepolicy",
            "nsnitro.nsresources.nsrewritepolicycsvserverbinding",
            "nsnitro.nsresources.nsroute",
            "nsnitro.nsresources.nsrunningconfig",
            "nsnitro.nsresources.nssavedconfig",
            "nsnitro.nsresources.nsserver",
            "nsnitro.nsresources.nsservice",
            "nsnitro.nsresources.nsservicegroup",
            "nsnitro.nsresources.nsservicegrouplbmonitorbinding",
            "nsnitro.nsresources.nsservicegroupmemberstat",
            "nsnitro.nsresources.nsservicegroupserverbinding",
            "nsnitro.nsresources.nsservicegroupstat",
            "nsnitro.nsresources.nsservicelbmonitorbinding",
            "nsnitro.nsresources.nssimpleacl",
            "nsnitro.nsresources.nssslaction",
            "nsnitro.nsresources.nssslcertkey",
            "nsnitro.nsresources.nssslcertkeysslvserverbinding",
            "nsnitro.nsresources.nssslcertlink",
            "nsnitro.nsresources.nssslpolicy",
            "nsnitro.nsresources.nssslservice",
            "nsnitro.nsresources.nssslservicesslpolicybinding",
            "nsnitro.nsresources.nssslvserver",
            "nsnitro.nsresources.nssslvserversslcertkeybinding",
            "nsnitro.nsresources.nssslvserversslpolicybinding",
            "nsnitro.nsresources.nssystemcmdpolicy",
            "nsnitro.nsresources.nstcpprofile",
            "nsnitro.nsresources.nsversion",
            "nsnitro.nsresources.nsvlan",
            "nsnitro.nsresources.nsvlaninterfacebinding",
            "nsnitro.nsresources.nsvlannsipbinding",
            "nsnitro.nsresources.nsvserver",
            "nsnitro.nsresources.snmpcommunity",
            "nsnitro.nsresources.snmpmanager",
            "nsnitro.nsresources.systemglobalauthenticationldappolicybinding",
            "nsnitro.nsresources.systemglobalauthenticationtacacspolicybinding",
            "nsnitro.nsresources.systemgroup",
            "nsnitro.nsresources.systemgroupsystemcmdpolicybinding",
            "nsnitro.nsresources.systemgroupsystemuserbinding",
            "nsnitro.nsresources.systemparameter",
            "nsnitro.nsresources.systemuser",
            "nsnitro.nsutil"
        ],
        "version": "1.0.35"
    },
    "nsoforpenn": {
        "cmdline": [],
        "modules": [
            "nsoforpenn",
            "nsoforpenn.ical",
            "nsoforpenn.scraper"
        ],
        "version": "0.1"
    },
    "nsone": {
        "cmdline": [],
        "modules": [
            "nsone",
            "nsone.config",
            "nsone.records",
            "nsone.rest",
            "nsone.rest.account",
            "nsone.rest.data",
            "nsone.rest.errors",
            "nsone.rest.monitoring",
            "nsone.rest.records",
            "nsone.rest.resource",
            "nsone.rest.stats",
            "nsone.rest.transport",
            "nsone.rest.transport.base",
            "nsone.rest.transport.basic",
            "nsone.rest.transport.requests",
            "nsone.rest.transport.twisted",
            "nsone.rest.zones",
            "nsone.zones"
        ],
        "version": "0.9.10"
    },
    "nsot": {
        "cmdline": [],
        "modules": [
            "nsot",
            "nsot.admin",
            "nsot.api",
            "nsot.api.auth",
            "nsot.api.filters",
            "nsot.api.renderers",
            "nsot.api.routers",
            "nsot.api.serializers",
            "nsot.api.urls",
            "nsot.api.views",
            "nsot.conf",
            "nsot.conf.settings",
            "nsot.conf.urls",
            "nsot.exc",
            "nsot.fields",
            "nsot.management",
            "nsot.management.commands",
            "nsot.management.commands.generate_key",
            "nsot.management.commands.start",
            "nsot.management.commands.upgrade",
            "nsot.management.commands.user_proxy",
            "nsot.middleware",
            "nsot.middleware.auth",
            "nsot.middleware.request_logging",
            "nsot.migrations",
            "nsot.migrations.0001_initial",
            "nsot.migrations.0002_auto_20150810_1718",
            "nsot.migrations.0003_auto_20150810_1751",
            "nsot.migrations.0004_auto_20150810_1806",
            "nsot.migrations.0005_auto_20150810_1847",
            "nsot.migrations.0006_auto_20150810_1947",
            "nsot.migrations.0007_auto_20150811_1201",
            "nsot.migrations.0008_auto_20150811_1222",
            "nsot.migrations.0009_auto_20150811_1245",
            "nsot.migrations.0010_auto_20150921_2120",
            "nsot.migrations.0011_auto_20150930_1557",
            "nsot.migrations.0012_auto_20151002_1427",
            "nsot.migrations.0013_auto_20151002_1443",
            "nsot.migrations.0014_auto_20151002_1653",
            "nsot.migrations.0015_move_attribute_fields",
            "nsot.migrations.0016_move_device_data",
            "nsot.migrations.0017_move_network_data",
            "nsot.migrations.0018_move_interface_data",
            "nsot.migrations.0019_move_assignment_data",
            "nsot.migrations.0020_move_value_data",
            "nsot.migrations.0021_remove_resource_object",
            "nsot.migrations.0022_auto_20151007_1847",
            "nsot.migrations.0023_auto_20151008_1351",
            "nsot.migrations.0024_network_state",
            "nsot.migrations.0025_value_site",
            "nsot.migrations.0026_model_field_verbose_names",
            "nsot.migrations.0027_interface_device_hostname",
            "nsot.migrations.0028_populate_interface_device_hostname",
            "nsot.migrations.0029_auto__add_circuit",
            "nsot.migrations.0030_add_circuit_name_slug",
            "nsot.migrations.0031_populate_circuit_name_slug",
            "nsot.models",
            "nsot.services",
            "nsot.services.base",
            "nsot.services.http",
            "nsot.ui",
            "nsot.ui.context_processors",
            "nsot.ui.views",
            "nsot.util",
            "nsot.util.cache",
            "nsot.util.commands",
            "nsot.util.core",
            "nsot.util.stats",
            "nsot.validators",
            "nsot.version",
            "nsot.wsgi"
        ],
        "version": "1.1.3"
    },
    "nsot-sync": {
        "cmdline": [],
        "modules": [
            "nsot_sync",
            "nsot_sync.cli",
            "nsot_sync.commands",
            "nsot_sync.commands.facter",
            "nsot_sync.commands.simple",
            "nsot_sync.common",
            "nsot_sync.drivers",
            "nsot_sync.drivers.base_driver",
            "nsot_sync.drivers.facter",
            "nsot_sync.drivers.simple"
        ],
        "version": "0.5.1"
    },
    "nsound": {
        "cmdline": [],
        "modules": [
            "sphinxext",
            "sphinxext.ipython_console_highlighting",
            "sphinxext.mathmpl",
            "sphinxext.only_directives",
            "sphinxext.plot_directive",
            "sphinxext.pyexec_directive",
            "src",
            "src.test",
            "src.test.FilterLowPassIIR_UnitTest",
            "src.test.test_AudioPlaybackRt",
            "src.test.test_AudioStream",
            "src.test.test_Buffer",
            "src.test.test_DelayLine",
            "src.test.test_Wavefile",
            "src.test.test_filters"
        ],
        "version": "0.9.4"
    },
    "nspawn-tools": {
        "cmdline": [],
        "modules": [
            "nspawn_tools",
            "nspawn_tools.cli",
            "nspawn_tools.cli.enter",
            "nspawn_tools.cli.stop",
            "nspawn_tools.machine"
        ],
        "version": "1.1.2"
    },
    "nsplist": {
        "cmdline": [],
        "modules": [
            "nsplist",
            "nsplist.decoder",
            "nsplist.scanner"
        ],
        "version": "0.1"
    },
    "nspython": {
        "cmdline": [],
        "modules": [
            "nspython",
            "nspython.appkit",
            "nspython.foundation",
            "nspython.nspython"
        ],
        "version": "0.3"
    },
    "nsq-py": {
        "cmdline": [],
        "modules": [
            "nsq",
            "nsq.backoff",
            "nsq.checker",
            "nsq.client",
            "nsq.connection",
            "nsq.constants",
            "nsq.exceptions",
            "nsq.gevent",
            "nsq.http",
            "nsq.http.nsqd",
            "nsq.http.nsqlookupd",
            "nsq.reader",
            "nsq.response",
            "nsq.sockets",
            "nsq.sockets.base",
            "nsq.sockets.deflate",
            "nsq.sockets.snappy",
            "nsq.sockets.tls",
            "nsq.stats",
            "nsq.util"
        ],
        "version": "0.1.10"
    },
    "nsq2kafka": {
        "cmdline": [],
        "modules": [
            "nsq2kafka"
        ],
        "version": "0.0.2"
    },
    "nsqs": {
        "cmdline": [],
        "modules": [
            "nsq",
            "nsq.command",
            "nsq.compat",
            "nsq.config",
            "nsq.config.client",
            "nsq.config.handle",
            "nsq.config.lookup",
            "nsq.config.protocol",
            "nsq.connection",
            "nsq.connection_callbacks",
            "nsq.connection_election",
            "nsq.constants",
            "nsq.consumer",
            "nsq.exceptions",
            "nsq.identify",
            "nsq.lookup",
            "nsq.master",
            "nsq.message_handler",
            "nsq.node",
            "nsq.node_collection",
            "nsq.producer",
            "nsq.server"
        ],
        "version": "0.2.0"
    },
    "nsqworker": {
        "cmdline": [],
        "modules": [
            "nsqworker",
            "nsqworker.bootstrap",
            "nsqworker.workers",
            "nsqworker.workers.demo",
            "nsqworker.workers.demo.demo_pageview_worker",
            "nsqworker.workers.worker"
        ],
        "version": "0.2.7"
    },
    "nssjson": {
        "cmdline": [],
        "modules": [
            "nssjson",
            "nssjson.compat",
            "nssjson.decoder",
            "nssjson.encoder",
            "nssjson.ordered_dict",
            "nssjson.scanner",
            "nssjson.tests",
            "nssjson.tests.test_bigint_as_string",
            "nssjson.tests.test_check_circular",
            "nssjson.tests.test_datetime",
            "nssjson.tests.test_decimal",
            "nssjson.tests.test_decode",
            "nssjson.tests.test_default",
            "nssjson.tests.test_dump",
            "nssjson.tests.test_encode_basestring_ascii",
            "nssjson.tests.test_encode_for_html",
            "nssjson.tests.test_errors",
            "nssjson.tests.test_fail",
            "nssjson.tests.test_float",
            "nssjson.tests.test_for_json",
            "nssjson.tests.test_indent",
            "nssjson.tests.test_item_sort_key",
            "nssjson.tests.test_namedtuple",
            "nssjson.tests.test_pass1",
            "nssjson.tests.test_pass2",
            "nssjson.tests.test_pass3",
            "nssjson.tests.test_recursion",
            "nssjson.tests.test_scanstring",
            "nssjson.tests.test_separators",
            "nssjson.tests.test_speedups",
            "nssjson.tests.test_subclass",
            "nssjson.tests.test_tool",
            "nssjson.tests.test_tuple",
            "nssjson.tests.test_unicode",
            "nssjson.tests.test_uuid",
            "nssjson.tool"
        ],
        "version": "0.7"
    },
    "nstats": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nster": {
        "cmdline": [],
        "modules": [
            "nester"
        ],
        "version": "1.0.0"
    },
    "nstruct": {
        "cmdline": [],
        "modules": [
            "namedstruct",
            "namedstruct.namedstruct",
            "namedstruct.stdprim"
        ],
        "version": "1.1.1"
    },
    "nsupdate": {
        "cmdline": [],
        "modules": [
            "nsupdate",
            "nsupdate.accounts",
            "nsupdate.accounts._tests",
            "nsupdate.accounts._tests.test_accounts",
            "nsupdate.accounts.admin",
            "nsupdate.accounts.forms",
            "nsupdate.accounts.migrations",
            "nsupdate.accounts.migrations.0001_initial",
            "nsupdate.accounts.migrations.0002_auto_20141125_2325",
            "nsupdate.accounts.models",
            "nsupdate.accounts.urls",
            "nsupdate.accounts.views",
            "nsupdate.api",
            "nsupdate.api._tests",
            "nsupdate.api._tests.test_api",
            "nsupdate.api.migrations",
            "nsupdate.api.models",
            "nsupdate.api.views",
            "nsupdate.context_processors",
            "nsupdate.login",
            "nsupdate.login.urls",
            "nsupdate.main",
            "nsupdate.main._tests",
            "nsupdate.main._tests.test_dnstools",
            "nsupdate.main._tests.test_main",
            "nsupdate.main.admin",
            "nsupdate.main.dnstools",
            "nsupdate.main.forms",
            "nsupdate.main.iptools",
            "nsupdate.main.migrations",
            "nsupdate.main.migrations.0001_initial",
            "nsupdate.main.migrations.0002_auto_20141115_2227",
            "nsupdate.main.migrations.0003_auto_20141115_2230",
            "nsupdate.main.migrations.0004_auto_20141115_2349",
            "nsupdate.main.migrations.0005_auto_20141121_1053",
            "nsupdate.main.migrations.0006_auto_20141121_1057",
            "nsupdate.main.models",
            "nsupdate.main.urls",
            "nsupdate.main.views",
            "nsupdate.management",
            "nsupdate.management.commands",
            "nsupdate.management.commands._tests",
            "nsupdate.management.commands._tests.test_faults",
            "nsupdate.management.commands._tests.test_testuser",
            "nsupdate.management.commands.domains",
            "nsupdate.management.commands.faults",
            "nsupdate.management.commands.hosts",
            "nsupdate.management.commands.testuser",
            "nsupdate.settings",
            "nsupdate.settings.base",
            "nsupdate.settings.dev",
            "nsupdate.settings.prod",
            "nsupdate.urls",
            "nsupdate.utils",
            "nsupdate.utils._tests",
            "nsupdate.utils._tests.test_ddns_client",
            "nsupdate.utils._tests.test_mail",
            "nsupdate.utils.ddns_client",
            "nsupdate.utils.log",
            "nsupdate.utils.mail",
            "nsupdate.wsgi"
        ],
        "version": "0.11.0"
    },
    "nsupdate-web": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nsxramlclient": {
        "cmdline": [],
        "modules": [
            "nsxramlclient",
            "nsxramlclient.client",
            "nsxramlclient.exceptions",
            "nsxramlclient.http_session",
            "nsxramlclient.xmloperations"
        ],
        "version": "2.0.6"
    },
    "nt": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nt-svcutils": {
        "cmdline": [],
        "modules": [
            "nt_svcutils",
            "nt_svcutils.service"
        ],
        "version": "2.13.0"
    },
    "nt-version": {
        "cmdline": [],
        "modules": [
            "nt_version",
            "nt_version.test"
        ],
        "version": "1.0.0"
    },
    "nta-build-tools": {
        "cmdline": [],
        "modules": [
            "ntabuildtools",
            "ntabuildtools.build",
            "ntabuildtools.clean",
            "ntabuildtools.install",
            "ntabuildtools.repos",
            "ntabuildtools.update",
            "ntabuildtools.utils"
        ],
        "version": "0.2.3"
    },
    "ntc-ansible": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "ntc-websms": {
        "cmdline": [],
        "modules": [
            "ntc_websms",
            "ntc_websms._version",
            "ntc_websms.meet"
        ],
        "version": "0.1.0"
    },
    "ntdocutils": {
        "cmdline": [],
        "modules": [
            "ntdocutils",
            "ntdocutils.cmdline",
            "ntdocutils.exceptions",
            "ntdocutils.themes",
            "ntdocutils.themes.mdl",
            "ntdocutils.writer"
        ],
        "version": "0.1.0"
    },
    "ntdtd": {
        "cmdline": [],
        "modules": [
            "ntdtd"
        ],
        "version": "0.0.2"
    },
    "nteract": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nters": {
        "cmdline": [],
        "modules": [
            "nters"
        ],
        "version": "1.3.0"
    },
    "ntfsjournal": {
        "cmdline": [],
        "modules": [],
        "version": "1.0"
    },
    "ntfsutils": {
        "cmdline": [],
        "modules": [
            "foo",
            "foo.fs",
            "foo.hardlink",
            "foo.junction",
            "ntfsutils",
            "ntfsutils.fs",
            "ntfsutils.hardlink",
            "ntfsutils.junction"
        ],
        "version": "0.1.3"
    },
    "ntfy": {
        "cmdline": [],
        "modules": [
            "ntfy",
            "ntfy.backends",
            "ntfy.backends.darwin",
            "ntfy.backends.default",
            "ntfy.backends.insta",
            "ntfy.backends.linux",
            "ntfy.backends.notifico",
            "ntfy.backends.prowl",
            "ntfy.backends.pushalot",
            "ntfy.backends.pushbullet",
            "ntfy.backends.pushjet",
            "ntfy.backends.pushover",
            "ntfy.backends.simplepush",
            "ntfy.backends.slack",
            "ntfy.backends.systemlog",
            "ntfy.backends.telegram",
            "ntfy.backends.win32",
            "ntfy.backends.xmpp",
            "ntfy.cli",
            "ntfy.config",
            "ntfy.data",
            "ntfy.terminal"
        ],
        "version": "2.4.3"
    },
    "nti.contentfragments": {
        "cmdline": [],
        "modules": [
            "nti",
            "nti.contentfragments",
            "nti.contentfragments.censor",
            "nti.contentfragments.html",
            "nti.contentfragments.interfaces",
            "nti.contentfragments.latex",
            "nti.contentfragments.punctuation",
            "nti.contentfragments.schema",
            "nti.contentfragments.tests",
            "nti.contentfragments.tests.test_censor",
            "nti.contentfragments.tests.test_html",
            "nti.contentfragments.tests.test_interfaces",
            "nti.contentfragments.tests.test_latex",
            "nti.contentfragments.tests.test_urlmatcher",
            "nti.contentfragments.urlmatcher"
        ],
        "version": "1.0.0"
    },
    "nti.nose-traceback-info": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.2"
    },
    "nti.plastex": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nti.property": {
        "cmdline": [],
        "modules": [
            "nti",
            "nti.property",
            "nti.property.dataurl",
            "nti.property.property",
            "nti.property.schema",
            "nti.property.tests",
            "nti.property.tests.test_dataurl",
            "nti.property.tests.test_property",
            "nti.property.tests.test_schema",
            "nti.property.tests.test_urlproperty",
            "nti.property.urlproperty"
        ],
        "version": "1.0.0"
    },
    "nti.recipes.passwords": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nti.recipes.zcml": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nti.recipes.zodb": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nti.schema": {
        "cmdline": [],
        "modules": [
            "schema",
            "schema.eqhash",
            "schema.field",
            "schema.fieldproperty",
            "schema.interfaces",
            "schema.jsonschema",
            "schema.schema",
            "schema.subscribers",
            "schema.testing",
            "schema.tests",
            "schema.tests.test_eqhash",
            "schema.tests.test_field",
            "schema.tests.test_fieldproperty",
            "schema.tests.test_interfaces",
            "schema.tests.test_jsonschema",
            "schema.tests.test_schema",
            "schema.tests.test_vocabulary",
            "schema.vocabulary"
        ],
        "version": "1.2.0"
    },
    "nti.site": {
        "cmdline": [],
        "modules": [
            "nti",
            "nti.site",
            "nti.site.folder",
            "nti.site.hostpolicy",
            "nti.site.interfaces",
            "nti.site.localutility",
            "nti.site.runner",
            "nti.site.site",
            "nti.site.subscribers",
            "nti.site.tests",
            "nti.site.tests.test_localutility",
            "nti.site.tests.test_runner",
            "nti.site.tests.test_site",
            "nti.site.tests.test_subscribers",
            "nti.site.tests.test_sync",
            "nti.site.tests.test_transient",
            "nti.site.tests.test_utils",
            "nti.site.transient",
            "nti.site.utils"
        ],
        "version": "1.0.3"
    },
    "nti.sphinxcontrib-programoutput": {
        "cmdline": [],
        "modules": [],
        "version": "0.10"
    },
    "nti.testing": {
        "cmdline": [],
        "modules": [
            "nti",
            "nti.testing",
            "nti.testing.base",
            "nti.testing.layers",
            "nti.testing.matchers",
            "nti.testing.tests",
            "nti.testing.tests.test_base",
            "nti.testing.tests.test_layers",
            "nti.testing.tests.test_main",
            "nti.testing.tests.test_matchers",
            "nti.testing.tests.test_time",
            "nti.testing.time"
        ],
        "version": "2.0.0"
    },
    "nti.transactions": {
        "cmdline": [],
        "modules": [
            "nti",
            "nti.transactions",
            "nti.transactions.interfaces",
            "nti.transactions.tests",
            "nti.transactions.tests.test_transaction",
            "nti.transactions.tests.test_transaction_queue",
            "nti.transactions.transactions"
        ],
        "version": "1.1.0"
    },
    "nti.wref": {
        "cmdline": [],
        "modules": [
            "nti",
            "nti.wref",
            "nti.wref.interfaces",
            "nti.wref.tests",
            "nti.wref.tests.test_adapters"
        ],
        "version": "1.0.0"
    },
    "nti.wsgi.cors": {
        "cmdline": [],
        "modules": [
            "nti",
            "nti.wsgi",
            "nti.wsgi.cors",
            "nti.wsgi.cors.cors",
            "nti.wsgi.cors.tests",
            "nti.wsgi.cors.tests.test_cors"
        ],
        "version": "1.0.0"
    },
    "ntlm-auth": {
        "cmdline": [],
        "modules": [
            "ntlm_auth",
            "ntlm_auth.U32",
            "ntlm_auth.compute_hash",
            "ntlm_auth.compute_keys",
            "ntlm_auth.compute_response",
            "ntlm_auth.constants",
            "ntlm_auth.des",
            "ntlm_auth.des_c",
            "ntlm_auth.des_data",
            "ntlm_auth.gss_channel_bindings",
            "ntlm_auth.messages",
            "ntlm_auth.ntlm",
            "ntlm_auth.rc4",
            "ntlm_auth.session_security",
            "ntlm_auth.target_info"
        ],
        "version": "1.0.3"
    },
    "ntlmlib": {
        "cmdline": [],
        "modules": [
            "ntlmlib",
            "ntlmlib.authentication",
            "ntlmlib.constants",
            "ntlmlib.context",
            "ntlmlib.helpers",
            "ntlmlib.messages",
            "ntlmlib.security",
            "ntlmlib.structure"
        ],
        "version": "0.72"
    },
    "ntokloapi": {
        "cmdline": [],
        "modules": [
            "ntokloapi",
            "ntokloapi.blacklist",
            "ntokloapi.charts",
            "ntokloapi.config",
            "ntokloapi.events",
            "ntokloapi.exceptions",
            "ntokloapi.ntokloapi",
            "ntokloapi.products",
            "ntokloapi.recommendations",
            "ntokloapi.utils"
        ],
        "version": "0.1.2"
    },
    "ntorque": {
        "cmdline": [],
        "modules": [
            "ntorque",
            "ntorque.api",
            "ntorque.api.auth",
            "ntorque.api.exc",
            "ntorque.api.rate",
            "ntorque.api.tree",
            "ntorque.api.view",
            "ntorque.backoff",
            "ntorque.client",
            "ntorque.model",
            "ntorque.model.api",
            "ntorque.model.constants",
            "ntorque.model.due",
            "ntorque.model.orm",
            "ntorque.root",
            "ntorque.tests",
            "ntorque.tests.boilerplate",
            "ntorque.tests.ftests",
            "ntorque.tests.ftests.test_api",
            "ntorque.tests.ftests.test_client",
            "ntorque.tests.ftests.test_work",
            "ntorque.util",
            "ntorque.work",
            "ntorque.work.cleanup",
            "ntorque.work.consume",
            "ntorque.work.main",
            "ntorque.work.patch",
            "ntorque.work.perform",
            "ntorque.work.requeue"
        ],
        "version": "0.4.2"
    },
    "ntpdatetime": {
        "cmdline": [],
        "modules": [
            "ntpdatetime",
            "ntpdatetime.config",
            "ntpdatetime.ntpdatetime"
        ],
        "version": "0.1.6"
    },
    "ntpdshm": {
        "cmdline": [],
        "modules": [
            "ntpdshm",
            "ntpdshm.shm"
        ],
        "version": "0.2.1"
    },
    "ntplib": {
        "cmdline": [],
        "modules": [
            "ntplib"
        ],
        "version": "0.3.3"
    },
    "ntrace": {
        "cmdline": [],
        "modules": [
            "ntrace",
            "ntrace.trace",
            "tests",
            "tests.access2_test",
            "tests.access_test",
            "tests.bintree_test",
            "tests.fact_test",
            "tests.romanNumbers_test",
            "tests.showtype_test",
            "tests.test_ntrace",
            "tests.test_ntrace2"
        ],
        "version": "0.0.1"
    },
    "ntracer": {
        "cmdline": [
            "hypercube.py",
            "polytope.py"
        ],
        "modules": [
            "ntracer",
            "ntracer.pygame_render",
            "ntracer.tests",
            "ntracer.tests.test",
            "ntracer.wavefront_obj",
            "ntracer.wrapper"
        ],
        "version": "0.7.4"
    },
    "ntrct": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ntripbrowser": {
        "cmdline": [],
        "modules": [
            "ntripbrowser",
            "ntripbrowser.ntripbrowser"
        ],
        "version": "1.1.0"
    },
    "nts": {
        "cmdline": [],
        "modules": [
            "nts",
            "nts.ntsData",
            "nts.ntsDocs",
            "nts.ntsRC",
            "nts.ntsVersion",
            "nts.ntsWX"
        ],
        "version": "82"
    },
    "ntt": {
        "cmdline": [],
        "modules": [
            "ntt"
        ],
        "version": "1.4.0"
    },
    "ntu-course-planner": {
        "cmdline": [],
        "modules": [
            "ntu_course_planner",
            "ntu_course_planner.course",
            "ntu_course_planner.main",
            "ntu_course_planner.planner",
            "ntu_course_planner.ssl_type"
        ],
        "version": "1.0.0"
    },
    "ntv": {
        "cmdline": [],
        "modules": [
            "ntv",
            "ntv.shortcuts",
            "ntv.web",
            "tests",
            "tests.test_ntv"
        ],
        "version": "0.4.4"
    },
    "ntv-firmware": {
        "cmdline": [],
        "modules": [
            "ntv_firmware",
            "ntv_firmware.twisted"
        ],
        "version": "1.0.2"
    },
    "ntypes": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "ntz-py": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "nu": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nu-gitflow": {
        "cmdline": [],
        "modules": [
            "gitflow",
            "gitflow.bin",
            "gitflow.bin._init",
            "gitflow.branches",
            "gitflow.core",
            "gitflow.exceptions",
            "gitflow.util"
        ],
        "version": "1.0.2"
    },
    "nuage": {
        "cmdline": [],
        "modules": [
            "nuage",
            "nuage.cli",
            "nuage.client",
            "nuage.commands",
            "nuage.commands.config",
            "nuage.commands.console",
            "nuage.commands.create",
            "nuage.commands.domains",
            "nuage.commands.list",
            "nuage.commands.logs",
            "nuage.commands.open",
            "nuage.commands.rename",
            "nuage.commands.sharing",
            "nuage.commands.ssl",
            "nuage.plugin",
            "nuage.plugins",
            "nuage.tests",
            "nuage.tests.test_nuage_client"
        ],
        "version": "0.5"
    },
    "nuageux": {
        "cmdline": [],
        "modules": [
            "nuageux",
            "nuageux.helper",
            "nuageux.server"
        ],
        "version": "0.1"
    },
    "nuapiclient": {
        "cmdline": [],
        "modules": [
            "nuapiclient"
        ],
        "version": "0.0.1"
    },
    "nublas": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nubo": {
        "cmdline": [],
        "modules": [
            "nubo",
            "nubo.clouds",
            "nubo.clouds.base",
            "nubo.clouds.digitalocean",
            "nubo.clouds.ec2",
            "nubo.clouds.linode",
            "nubo.clouds.opennebula",
            "nubo.clouds.rackspace",
            "nubo.config",
            "nubo.remote"
        ],
        "version": "0.7"
    },
    "nuclai": {
        "cmdline": [],
        "modules": [
            "nuclai",
            "nuclai.bootstrap"
        ],
        "version": "0.6"
    },
    "nucleo": {
        "cmdline": [],
        "modules": [
            "nucleo",
            "nucleo.admin",
            "nucleo.models",
            "nucleo.permissions",
            "nucleo.serializers",
            "nucleo.tests",
            "nucleo.views"
        ],
        "version": "0.1.0"
    },
    "nucleoatac": {
        "cmdline": [
            "nucleoatac",
            "pyatac"
        ],
        "modules": [
            "nucleoatac",
            "nucleoatac.Magic",
            "nucleoatac.NFRCalling",
            "nucleoatac.NucleosomeCalling",
            "nucleoatac.Occupancy",
            "nucleoatac.cli",
            "nucleoatac.diff_occ",
            "nucleoatac.merge",
            "nucleoatac.run_nfr",
            "nucleoatac.run_nuc",
            "nucleoatac.run_occ",
            "nucleoatac.run_vprocess",
            "nucleoatac.vplot",
            "pyatac",
            "pyatac.Magic",
            "pyatac.VMat",
            "pyatac.bedgraph",
            "pyatac.bias",
            "pyatac.chunk",
            "pyatac.chunkmat2d",
            "pyatac.cli",
            "pyatac.fragmentsizes",
            "pyatac.get_counts",
            "pyatac.get_cov",
            "pyatac.get_ins",
            "pyatac.get_nucleotide",
            "pyatac.get_pwm",
            "pyatac.get_sizes",
            "pyatac.make_bias_track",
            "pyatac.make_bias_vplot",
            "pyatac.make_vplot",
            "pyatac.pwm",
            "pyatac.seq",
            "pyatac.signal_around_sites",
            "pyatac.tracks",
            "pyatac.utils"
        ],
        "version": "0.3.4"
    },
    "nucleon": {
        "cmdline": [],
        "modules": [
            "nucleon",
            "nucleon.cache",
            "nucleon.commands",
            "nucleon.config",
            "nucleon.database",
            "nucleon.database.api",
            "nucleon.database.management",
            "nucleon.database.pgpool",
            "nucleon.database.psyco_gevent",
            "nucleon.framework",
            "nucleon.http",
            "nucleon.loader",
            "nucleon.main",
            "nucleon.signals",
            "nucleon.tests",
            "nucleon.util",
            "nucleon.validation"
        ],
        "version": "0.1"
    },
    "nucleon.amqp": {
        "cmdline": [],
        "modules": [
            "nucleon",
            "nucleon.amqp",
            "nucleon.amqp.buffers",
            "nucleon.amqp.channels",
            "nucleon.amqp.connection",
            "nucleon.amqp.encoding",
            "nucleon.amqp.exceptions",
            "nucleon.amqp.message",
            "nucleon.amqp.spec",
            "nucleon.amqp.spec_exceptions",
            "nucleon.amqp.table",
            "nucleon.amqp.urls"
        ],
        "version": "0.2.1"
    },
    "nucleotide": {
        "cmdline": [],
        "modules": [
            "nucleotide",
            "nucleotide.atom",
            "nucleotide.catalog",
            "nucleotide.component",
            "nucleotide.component._common",
            "nucleotide.component._common.architecture",
            "nucleotide.component._common.blank",
            "nucleotide.component._common.boost",
            "nucleotide.component._common.include",
            "nucleotide.component._common.translator",
            "nucleotide.component._common.warning",
            "nucleotide.component._common.warning.table",
            "nucleotide.component._common.warning.util",
            "nucleotide.component.constant",
            "nucleotide.component.function",
            "nucleotide.component.linux",
            "nucleotide.component.linux._common",
            "nucleotide.component.linux._common.boost",
            "nucleotide.component.linux._common.translator",
            "nucleotide.component.linux.gcc",
            "nucleotide.component.linux.gcc.atom",
            "nucleotide.component.linux.gcc.atom._misc",
            "nucleotide.component.linux.gcc.atom.blank",
            "nucleotide.component.linux.gcc.atom.boost",
            "nucleotide.component.linux.gcc.atom.configuration",
            "nucleotide.component.linux.gcc.atom.dialect",
            "nucleotide.component.linux.gcc.atom.encode",
            "nucleotide.component.linux.gcc.atom.exception",
            "nucleotide.component.linux.gcc.atom.executable",
            "nucleotide.component.linux.gcc.atom.library",
            "nucleotide.component.linux.gcc.atom.macro",
            "nucleotide.component.linux.gcc.atom.optimisation",
            "nucleotide.component.linux.gcc.atom.pdb",
            "nucleotide.component.linux.gcc.atom.pp2f",
            "nucleotide.component.linux.gcc.atom.python",
            "nucleotide.component.linux.gcc.atom.rtl",
            "nucleotide.component.linux.gcc.atom.rtti",
            "nucleotide.component.linux.gcc.atom.version",
            "nucleotide.component.linux.gcc.atom.warning",
            "nucleotide.component.linux.gcc.translator",
            "nucleotide.component.linux.translator",
            "nucleotide.component.main",
            "nucleotide.component.translator",
            "nucleotide.component.windows",
            "nucleotide.component.windows._common",
            "nucleotide.component.windows._common.boost",
            "nucleotide.component.windows._common.python",
            "nucleotide.component.windows._common.translator",
            "nucleotide.component.windows.cygwingcc",
            "nucleotide.component.windows.cygwingcc.translator",
            "nucleotide.component.windows.mingw",
            "nucleotide.component.windows.mingw.atom",
            "nucleotide.component.windows.mingw.atom.boost",
            "nucleotide.component.windows.mingw.atom.python",
            "nucleotide.component.windows.mingw.translator",
            "nucleotide.component.windows.msvc",
            "nucleotide.component.windows.msvc.atom",
            "nucleotide.component.windows.msvc.atom._misc",
            "nucleotide.component.windows.msvc.atom.blank",
            "nucleotide.component.windows.msvc.atom.boost",
            "nucleotide.component.windows.msvc.atom.dialect",
            "nucleotide.component.windows.msvc.atom.encode",
            "nucleotide.component.windows.msvc.atom.exception",
            "nucleotide.component.windows.msvc.atom.executable",
            "nucleotide.component.windows.msvc.atom.macro",
            "nucleotide.component.windows.msvc.atom.pdb",
            "nucleotide.component.windows.msvc.atom.pp2f",
            "nucleotide.component.windows.msvc.atom.python",
            "nucleotide.component.windows.msvc.atom.rtl",
            "nucleotide.component.windows.msvc.atom.rtti",
            "nucleotide.component.windows.msvc.atom.version",
            "nucleotide.component.windows.msvc.atom.warning",
            "nucleotide.component.windows.msvc.translator",
            "nucleotide.component.windows.translator",
            "nucleotide.config",
            "nucleotide.custom",
            "nucleotide.environment",
            "nucleotide.klass",
            "nucleotide.main",
            "nucleotide.options",
            "nucleotide.settings",
            "nucleotide.translator"
        ],
        "version": "0.1.3"
    },
    "nucleus": {
        "cmdline": [],
        "modules": [
            "nucleus"
        ],
        "version": "0.0.1"
    },
    "nucleusapp": {
        "cmdline": [],
        "modules": [
            "NucleusApp",
            "NucleusApp.app",
            "NucleusApp.app.imports",
            "NucleusApp.chest",
            "NucleusApp.chest.container",
            "NucleusApp.chest.context",
            "NucleusApp.chest.exceptions",
            "NucleusApp.config",
            "NucleusApp.config.global_settings",
            "NucleusApp.contrib",
            "NucleusApp.middlewares",
            "NucleusApp.middlewares.peewee_postgres",
            "NucleusApp.middlewares.peewee_postgres.helper",
            "NucleusApp.middlewares.registry",
            "NucleusApp.modules",
            "NucleusApp.modules.config",
            "NucleusApp.modules.registry"
        ],
        "version": "0.1.1b6"
    },
    "nucleusapp-telegram": {
        "cmdline": [],
        "modules": [
            "nucleusapp_telegram",
            "nucleusapp_telegram.app",
            "nucleusapp_telegram.base",
            "nucleusapp_telegram.settings_example",
            "nucleusapp_telegram.static",
            "nucleusapp_telegram.utils"
        ],
        "version": "0.2.2"
    },
    "nucleusutils": {
        "cmdline": [],
        "modules": [
            "NucleusUtils",
            "NucleusUtils.chest",
            "NucleusUtils.chest.container",
            "NucleusUtils.chest.context",
            "NucleusUtils.chest.exceptions",
            "NucleusUtils.config",
            "NucleusUtils.config.engines",
            "NucleusUtils.config.engines.base",
            "NucleusUtils.config.engines.json",
            "NucleusUtils.config.engines.xml",
            "NucleusUtils.events",
            "NucleusUtils.events.attr",
            "NucleusUtils.events.lock",
            "NucleusUtils.files",
            "NucleusUtils.files.watcher",
            "NucleusUtils.jProtocol",
            "NucleusUtils.jProtocol.client",
            "NucleusUtils.jProtocol.entity",
            "NucleusUtils.jProtocol.exceptions",
            "NucleusUtils.jProtocol.helper",
            "NucleusUtils.jProtocol.objects",
            "NucleusUtils.jProtocol.router",
            "NucleusUtils.logging",
            "NucleusUtils.logging.decorators",
            "NucleusUtils.logging.dumps",
            "NucleusUtils.py",
            "NucleusUtils.queues",
            "NucleusUtils.queues.iterator",
            "NucleusUtils.signals",
            "NucleusUtils.signals.sig",
            "NucleusUtils.simple",
            "NucleusUtils.simple.dict",
            "NucleusUtils.singleton",
            "NucleusUtils.stack",
            "NucleusUtils.stack.link",
            "NucleusUtils.stack.memory",
            "NucleusUtils.stack.stack",
            "NucleusUtils.threads",
            "NucleusUtils.translations",
            "NucleusUtils.translations.advanced",
            "NucleusUtils.translations.converter",
            "NucleusUtils.translations.filters",
            "NucleusUtils.translations.singleton",
            "NucleusUtils.translations.text_utils",
            "NucleusUtils.trash",
            "NucleusUtils.trash.context",
            "NucleusUtils.versions",
            "NucleusUtils.versions.deprecated",
            "NucleusUtils.web",
            "NucleusUtils.web.html"
        ],
        "version": "0.1.11b1"
    },
    "nuclitrack": {
        "cmdline": [],
        "modules": [
            "nuclitrack",
            "nuclitrack.CellTrackApp",
            "nuclitrack.batchanalyse",
            "nuclitrack.classifycells",
            "nuclitrack.cmaps",
            "nuclitrack.extractfeatures",
            "nuclitrack.graph",
            "nuclitrack.imagewidget",
            "nuclitrack.loadimages",
            "nuclitrack.main",
            "nuclitrack.segmentimages",
            "nuclitrack.trackcells",
            "nuclitrack.uifeatures",
            "nuclitrack.uiloading",
            "nuclitrack.uisegmentation",
            "nuclitrack.uitracking",
            "nuclitrack.uitraining"
        ],
        "version": "1.2.6"
    },
    "nucoscr": {
        "cmdline": [
            "aes-cp"
        ],
        "modules": [
            "nucosCR",
            "nucosCR.cryptoaesbase",
            "nucosCR.cryptorsabase",
            "nucosCR.version"
        ],
        "version": "0.2.1"
    },
    "nucosmq": {
        "cmdline": [],
        "modules": [
            "nucosMQ",
            "nucosMQ.nucos23",
            "nucosMQ.nucosClient",
            "nucosMQ.nucosClientUDP",
            "nucosMQ.nucosLink",
            "nucosMQ.nucosLogger",
            "nucosMQ.nucosMessage",
            "nucosMQ.nucosQueue",
            "nucosMQ.nucosServer",
            "nucosMQ.version"
        ],
        "version": "0.0.9"
    },
    "nucular": {
        "cmdline": [
            "nucularAggregate.py",
            "nucularDump.py",
            "nucularLoad.py",
            "nucularQuery.py",
            "nucularSite.py"
        ],
        "modules": [
            "nucular",
            "nucular.Nucular",
            "nucular.booleanQuery",
            "nucular.dCursor",
            "nucular.entry",
            "nucular.findetree",
            "nucular.frames",
            "nucular.frames.cmarshal",
            "nucular.frames.dframe",
            "nucular.frames.fTree",
            "nucular.frames.fileSystemSurrogate",
            "nucular.frames.fltree",
            "nucular.frames.frameGenerators",
            "nucular.frames.fshadowtree",
            "nucular.frames.scatter",
            "nucular.frames.shuffle",
            "nucular.getparm",
            "nucular.nBrowse",
            "nucular.nTableSpace",
            "nucular.parameters",
            "nucular.parseQuery",
            "nucular.pfilter",
            "nucular.pquery",
            "nucular.specialValues",
            "nucular.stringAnnotator"
        ],
        "version": "0.5"
    },
    "nudb": {
        "cmdline": [],
        "modules": [
            "nudb",
            "nudb.nudb",
            "nudb.tools"
        ],
        "version": "1.0.6"
    },
    "nudepy": {
        "cmdline": [],
        "modules": [],
        "version": "0.3.1"
    },
    "nudge": {
        "cmdline": [],
        "modules": [
            "nudge",
            "nudge.arg",
            "nudge.error",
            "nudge.json",
            "nudge.log",
            "nudge.project",
            "nudge.publisher",
            "nudge.renderer",
            "nudge.utils",
            "nudge.validator"
        ],
        "version": "0.6.5"
    },
    "nudged": {
        "cmdline": [],
        "modules": [
            "nudged",
            "nudged.estimate",
            "nudged.transform",
            "nudged.version"
        ],
        "version": "0.3.1"
    },
    "nuggets": {
        "cmdline": [],
        "modules": [
            "shellutils"
        ],
        "version": "0.2"
    },
    "nugridpy": {
        "cmdline": [],
        "modules": [
            "ascii_table",
            "astronomy",
            "data_plot",
            "grain",
            "h5T",
            "mesa",
            "nugridse",
            "ppn",
            "utils"
        ],
        "version": "0.1.6401"
    },
    "nuimo": {
        "cmdline": [],
        "modules": [
            "nuimo",
            "nuimo.nuimo",
            "nuimoctl"
        ],
        "version": "0.3.2"
    },
    "nuio": {
        "cmdline": [],
        "modules": [
            "nuio",
            "nuio.input",
            "nuio.input.base",
            "nuio.input.terminal",
            "nuio.output",
            "nuio.output.base",
            "nuio.output.terminal"
        ],
        "version": "0.0.4"
    },
    "nuitka": {
        "cmdline": [
            "nuitka",
            "nuitka-run"
        ],
        "modules": [
            "nuitka",
            "nuitka.Builtins",
            "nuitka.Constants",
            "nuitka.MainControl",
            "nuitka.ModuleRegistry",
            "nuitka.Options",
            "nuitka.PythonOperators",
            "nuitka.PythonVersions",
            "nuitka.SourceCodeReferences",
            "nuitka.Tracing",
            "nuitka.TreeXML",
            "nuitka.Variables",
            "nuitka.__past__",
            "nuitka.build",
            "nuitka.build.SconsInterface",
            "nuitka.codegen",
            "nuitka.codegen.AttributeCodes",
            "nuitka.codegen.BlobCodes",
            "nuitka.codegen.BranchCodes",
            "nuitka.codegen.BuiltinCodes",
            "nuitka.codegen.CallCodes",
            "nuitka.codegen.ClassCodes",
            "nuitka.codegen.CodeGeneration",
            "nuitka.codegen.CodeObjectCodes",
            "nuitka.codegen.ComparisonCodes",
            "nuitka.codegen.ConditionalCodes",
            "nuitka.codegen.ConstantCodes",
            "nuitka.codegen.Contexts",
            "nuitka.codegen.CoroutineCodes",
            "nuitka.codegen.DictCodes",
            "nuitka.codegen.Emission",
            "nuitka.codegen.ErrorCodes",
            "nuitka.codegen.EvalCodes",
            "nuitka.codegen.ExceptionCodes",
            "nuitka.codegen.ExpressionCodes",
            "nuitka.codegen.FrameCodes",
            "nuitka.codegen.FunctionCodes",
            "nuitka.codegen.GeneratorCodes",
            "nuitka.codegen.GlobalsLocalsCodes",
            "nuitka.codegen.Helpers",
            "nuitka.codegen.IdCodes",
            "nuitka.codegen.ImportCodes",
            "nuitka.codegen.Indentation",
            "nuitka.codegen.IndexCodes",
            "nuitka.codegen.IntegerCodes",
            "nuitka.codegen.IteratorCodes",
            "nuitka.codegen.LabelCodes",
            "nuitka.codegen.LineNumberCodes",
            "nuitka.codegen.ListCodes",
            "nuitka.codegen.LoaderCodes",
            "nuitka.codegen.LoopCodes",
            "nuitka.codegen.ModuleCodes",
            "nuitka.codegen.Namify",
            "nuitka.codegen.OperationCodes",
            "nuitka.codegen.OperatorCodes",
            "nuitka.codegen.Pickling",
            "nuitka.codegen.PrintCodes",
            "nuitka.codegen.PythonAPICodes",
            "nuitka.codegen.RaisingCodes",
            "nuitka.codegen.ReturnCodes",
            "nuitka.codegen.SetCodes",
            "nuitka.codegen.SliceCodes",
            "nuitka.codegen.StringCodes",
            "nuitka.codegen.SubscriptCodes",
            "nuitka.codegen.TryCodes",
            "nuitka.codegen.TupleCodes",
            "nuitka.codegen.VariableCodes",
            "nuitka.codegen.YieldCodes",
            "nuitka.codegen.templates",
            "nuitka.codegen.templates.CodeTemplatesCalls",
            "nuitka.codegen.templates.CodeTemplatesConstants",
            "nuitka.codegen.templates.CodeTemplatesCoroutines",
            "nuitka.codegen.templates.CodeTemplatesExceptions",
            "nuitka.codegen.templates.CodeTemplatesFrames",
            "nuitka.codegen.templates.CodeTemplatesFreezer",
            "nuitka.codegen.templates.CodeTemplatesFunction",
            "nuitka.codegen.templates.CodeTemplatesGeneratorFunction",
            "nuitka.codegen.templates.CodeTemplatesIterators",
            "nuitka.codegen.templates.CodeTemplatesLoader",
            "nuitka.codegen.templates.CodeTemplatesModules",
            "nuitka.codegen.templates.CodeTemplatesVariables",
            "nuitka.codegen.templates.TemplateDebugWrapper",
            "nuitka.containers",
            "nuitka.containers.odict",
            "nuitka.containers.oset",
            "nuitka.finalizations",
            "nuitka.finalizations.Finalization",
            "nuitka.finalizations.FinalizeBase",
            "nuitka.finalizations.FinalizeClosureTaking",
            "nuitka.finalizations.FinalizeMarkups",
            "nuitka.freezer",
            "nuitka.freezer.BytecodeModuleFreezer",
            "nuitka.freezer.DependsExe",
            "nuitka.freezer.Standalone",
            "nuitka.gui",
            "nuitka.gui.SyntaxHighlighting",
            "nuitka.gui.TreeDisplay",
            "nuitka.importing",
            "nuitka.importing.ImportCache",
            "nuitka.importing.Importing",
            "nuitka.importing.PreloadedPackages",
            "nuitka.importing.Recursion",
            "nuitka.importing.StandardLibrary",
            "nuitka.importing.Whitelisting",
            "nuitka.nodes",
            "nuitka.nodes.AssignNodes",
            "nuitka.nodes.AttributeNodes",
            "nuitka.nodes.BuiltinDecodingNodes",
            "nuitka.nodes.BuiltinDictNodes",
            "nuitka.nodes.BuiltinFormatNodes",
            "nuitka.nodes.BuiltinHashNodes",
            "nuitka.nodes.BuiltinIteratorNodes",
            "nuitka.nodes.BuiltinLenNodes",
            "nuitka.nodes.BuiltinNextNodes",
            "nuitka.nodes.BuiltinOpenNodes",
            "nuitka.nodes.BuiltinRangeNodes",
            "nuitka.nodes.BuiltinRefNodes",
            "nuitka.nodes.BuiltinSumNodes",
            "nuitka.nodes.BuiltinTypeNodes",
            "nuitka.nodes.BuiltinVarsNodes",
            "nuitka.nodes.CallNodes",
            "nuitka.nodes.Checkers",
            "nuitka.nodes.ClassNodes",
            "nuitka.nodes.CodeObjectSpecs",
            "nuitka.nodes.ComparisonNodes",
            "nuitka.nodes.ConditionalNodes",
            "nuitka.nodes.ConstantRefNodes",
            "nuitka.nodes.ContainerMakingNodes",
            "nuitka.nodes.ContainerOperationNodes",
            "nuitka.nodes.CoroutineNodes",
            "nuitka.nodes.DictionaryNodes",
            "nuitka.nodes.ExceptionNodes",
            "nuitka.nodes.ExecEvalNodes",
            "nuitka.nodes.FrameNodes",
            "nuitka.nodes.FunctionNodes",
            "nuitka.nodes.FutureSpecs",
            "nuitka.nodes.GeneratorNodes",
            "nuitka.nodes.GlobalsLocalsNodes",
            "nuitka.nodes.ImportNodes",
            "nuitka.nodes.IndicatorMixins",
            "nuitka.nodes.LoopNodes",
            "nuitka.nodes.ModuleNodes",
            "nuitka.nodes.NodeBases",
            "nuitka.nodes.NodeMakingHelpers",
            "nuitka.nodes.OperatorNodes",
            "nuitka.nodes.OutlineNodes",
            "nuitka.nodes.ParameterSpecs",
            "nuitka.nodes.PrintNodes",
            "nuitka.nodes.ReturnNodes",
            "nuitka.nodes.SideEffectNodes",
            "nuitka.nodes.SliceNodes",
            "nuitka.nodes.StatementNodes",
            "nuitka.nodes.StringConcatenationNodes",
            "nuitka.nodes.SubscriptNodes",
            "nuitka.nodes.TryNodes",
            "nuitka.nodes.TypeNodes",
            "nuitka.nodes.VariableRefNodes",
            "nuitka.nodes.YieldNodes",
            "nuitka.nodes.shapes",
            "nuitka.nodes.shapes.BuiltinTypeShapes",
            "nuitka.nodes.shapes.StandardShapes",
            "nuitka.optimizations",
            "nuitka.optimizations.BuiltinOptimization",
            "nuitka.optimizations.BytecodeDemotion",
            "nuitka.optimizations.FunctionInlining",
            "nuitka.optimizations.Graphs",
            "nuitka.optimizations.Optimization",
            "nuitka.optimizations.OptimizeBuiltinCalls",
            "nuitka.optimizations.Tags",
            "nuitka.optimizations.TraceCollections",
            "nuitka.optimizations.VariableTraces",
            "nuitka.plugins",
            "nuitka.plugins.PluginBase",
            "nuitka.plugins.Plugins",
            "nuitka.plugins.standard",
            "nuitka.plugins.standard.ConsiderPyLintAnnotationsPlugin",
            "nuitka.plugins.standard.DataFileCollectorPlugin",
            "nuitka.plugins.standard.ImplicitImports",
            "nuitka.plugins.standard.MultiprocessingPlugin",
            "nuitka.plugins.standard.PmwPlugin",
            "nuitka.plugins.standard.PySidePyQtPlugin",
            "nuitka.plugins.user",
            "nuitka.profiler",
            "nuitka.tools",
            "nuitka.tools.Basics",
            "nuitka.tools.ScanSources",
            "nuitka.tools.autoformat",
            "nuitka.tools.autoformat.Autoformat",
            "nuitka.tools.compare_with_cpython",
            "nuitka.tools.isort",
            "nuitka.tools.pylint",
            "nuitka.tools.pylint.PyLint",
            "nuitka.tree",
            "nuitka.tree.Building",
            "nuitka.tree.ComplexCallHelperFunctions",
            "nuitka.tree.Extractions",
            "nuitka.tree.Helpers",
            "nuitka.tree.InternalModule",
            "nuitka.tree.Operations",
            "nuitka.tree.ReformulationAssertStatements",
            "nuitka.tree.ReformulationAssignmentStatements",
            "nuitka.tree.ReformulationBooleanExpressions",
            "nuitka.tree.ReformulationCallExpressions",
            "nuitka.tree.ReformulationClasses",
            "nuitka.tree.ReformulationComparisonExpressions",
            "nuitka.tree.ReformulationContractionExpressions",
            "nuitka.tree.ReformulationDictionaryCreation",
            "nuitka.tree.ReformulationExecStatements",
            "nuitka.tree.ReformulationForLoopStatements",
            "nuitka.tree.ReformulationFunctionStatements",
            "nuitka.tree.ReformulationImportStatements",
            "nuitka.tree.ReformulationLambdaExpressions",
            "nuitka.tree.ReformulationNamespacePackages",
            "nuitka.tree.ReformulationPrintStatements",
            "nuitka.tree.ReformulationSequenceCreation",
            "nuitka.tree.ReformulationSubscriptExpressions",
            "nuitka.tree.ReformulationTryExceptStatements",
            "nuitka.tree.ReformulationTryFinallyStatements",
            "nuitka.tree.ReformulationWhileLoopStatements",
            "nuitka.tree.ReformulationWithStatements",
            "nuitka.tree.ReformulationYieldExpressions",
            "nuitka.tree.SourceReading",
            "nuitka.tree.SyntaxErrors",
            "nuitka.tree.VariableClosure",
            "nuitka.utils",
            "nuitka.utils.CStrings",
            "nuitka.utils.Execution",
            "nuitka.utils.InstanceCounters",
            "nuitka.utils.MemoryUsage",
            "nuitka.utils.SharedLibraries",
            "nuitka.utils.Shebang",
            "nuitka.utils.Utils"
        ],
        "version": "0.5.25"
    },
    "nuka": {
        "cmdline": [],
        "modules": [
            "nuka",
            "nuka.cli",
            "nuka.configuration",
            "nuka.hosts",
            "nuka.hosts.base",
            "nuka.hosts.cloud",
            "nuka.hosts.docker_host",
            "nuka.hosts.vagrant",
            "nuka.inventory",
            "nuka.inventory.libraries",
            "nuka.inventory.python",
            "nuka.log",
            "nuka.process",
            "nuka.remote",
            "nuka.remote.script",
            "nuka.remote.task",
            "nuka.reports",
            "nuka.task",
            "nuka.tasks",
            "nuka.tasks.apt",
            "nuka.tasks.archive",
            "nuka.tasks.file",
            "nuka.tasks.git",
            "nuka.tasks.http",
            "nuka.tasks.mysql",
            "nuka.tasks.postgresql",
            "nuka.tasks.service",
            "nuka.tasks.setup",
            "nuka.tasks.shell",
            "nuka.tasks.user",
            "nuka.tasks.virtualenv",
            "nuka.tasks.yum",
            "nuka.utils",
            "pytest_nuka",
            "tests.tasks",
            "tests.tasks.test_apt",
            "tests.tasks.test_file",
            "tests.tasks.test_git",
            "tests.tasks.test_http",
            "tests.tasks.test_service",
            "tests.tasks.test_shell",
            "tests.tasks.test_user",
            "tests.tasks.test_virtualenv",
            "tests.tasks.test_yum"
        ],
        "version": "0.1"
    },
    "nuke": {
        "cmdline": [],
        "modules": [
            "nuke",
            "nuke.nuke"
        ],
        "version": "2.0.0"
    },
    "nukecontexts": {
        "cmdline": [],
        "modules": [
            "nukecontexts",
            "nukecontexts.ctx"
        ],
        "version": "0.1.4"
    },
    "nukedatastore": {
        "cmdline": [],
        "modules": [
            "nukedatastore"
        ],
        "version": "0.1.2"
    },
    "nukedfruit": {
        "cmdline": [],
        "modules": [
            "nukedfruit",
            "nukedfruit.awesome"
        ],
        "version": "0.1"
    },
    "nukefilewalker": {
        "cmdline": [],
        "modules": [
            "nukefilewalker",
            "nukefilewalker.indexer",
            "tests",
            "tests.test_indexer"
        ],
        "version": "0.0.1"
    },
    "nukem": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nuketemplate": {
        "cmdline": [],
        "modules": [
            "nuketemplate",
            "nuketemplate.build",
            "nuketemplate.convert",
            "nuketemplate.exceptions",
            "nuketemplate.graph",
            "nuketemplate.template"
        ],
        "version": "0.1.0"
    },
    "nukeuuid": {
        "cmdline": [],
        "modules": [
            "nukeuuid"
        ],
        "version": "0.1.2"
    },
    "null": {
        "cmdline": [],
        "modules": [],
        "version": "0.6.1"
    },
    "nullpobug.chaser": {
        "cmdline": [],
        "modules": [
            "nullpochaser",
            "nullpochaser.chasers",
            "nullpochaser.chasers.active",
            "nullpochaser.chasers.base",
            "nullpochaser.chasers.silent",
            "nullpochaser.connection",
            "nullpochaser.const",
            "nullpochaser.main",
            "nullpochaser.maps",
            "nullpochaser.utils"
        ],
        "version": "0.1"
    },
    "nullsmtp": {
        "cmdline": [],
        "modules": [
            "nullsmtp",
            "nullsmtp.nullsmtp"
        ],
        "version": "0.2.0"
    },
    "nulltype": {
        "cmdline": [],
        "modules": [
            "nulltype"
        ],
        "version": "2.2.9"
    },
    "num-solver": {
        "cmdline": [],
        "modules": [
            "num_solver",
            "num_solver.networks",
            "num_solver.solver",
            "num_solver.topology",
            "num_solver.utility_functions"
        ],
        "version": "0.1.8"
    },
    "num2es": {
        "cmdline": [],
        "modules": [
            "num2es",
            "num2es.num2es",
            "num2es.test2"
        ],
        "version": "1.0.0a1"
    },
    "num2words": {
        "cmdline": [],
        "modules": [
            "num2words",
            "num2words.base",
            "num2words.lang_DE",
            "num2words.lang_DK",
            "num2words.lang_EN",
            "num2words.lang_EN_EUR",
            "num2words.lang_EN_GB",
            "num2words.lang_EN_GB_old",
            "num2words.lang_EN_IN",
            "num2words.lang_ES",
            "num2words.lang_EU",
            "num2words.lang_FR",
            "num2words.lang_FR_CH",
            "num2words.lang_ID",
            "num2words.lang_LT",
            "num2words.lang_LV",
            "num2words.lang_NO",
            "num2words.lang_PL",
            "num2words.lang_PT_BR",
            "num2words.lang_RU",
            "num2words.orderedmapping"
        ],
        "version": "0.5.4"
    },
    "numa": {
        "cmdline": [],
        "modules": [],
        "version": "1.4.4"
    },
    "numarray": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "numaster": {
        "cmdline": [],
        "modules": [
            "numaster"
        ],
        "version": "0.2.1"
    },
    "numba": {
        "cmdline": [],
        "modules": [
            "examples",
            "examples.binarytree",
            "examples.blur_image",
            "examples.bubblesort",
            "examples.cffi_example",
            "examples.compile_with_pycc",
            "examples.ctypes_example",
            "examples.cuda_dask",
            "examples.cuda_ipc",
            "examples.cuda_mpi",
            "examples.fbcorr",
            "examples.jitclass",
            "examples.linkedlist",
            "examples.mergesort",
            "examples.movemean",
            "examples.nogil",
            "examples.objects",
            "examples.ra24",
            "examples.stack",
            "examples.structures",
            "examples.sum",
            "examples.tests",
            "examples.tests.sitecustomize",
            "examples.ufuncs",
            "numba",
            "numba._version",
            "numba.analysis",
            "numba.annotations",
            "numba.annotations.type_annotations",
            "numba.appdirs",
            "numba.bytecode",
            "numba.caching",
            "numba.callwrapper",
            "numba.ccallback",
            "numba.cffi_support",
            "numba.cgutils",
            "numba.compiler",
            "numba.config",
            "numba.consts",
            "numba.controlflow",
            "numba.ctypes_support",
            "numba.cuda",
            "numba.cuda.api",
            "numba.cuda.codegen",
            "numba.cuda.compiler",
            "numba.cuda.cudadecl",
            "numba.cuda.cudadrv",
            "numba.cuda.cudadrv.autotune",
            "numba.cuda.cudadrv.devicearray",
            "numba.cuda.cudadrv.devices",
            "numba.cuda.cudadrv.driver",
            "numba.cuda.cudadrv.drvapi",
            "numba.cuda.cudadrv.enums",
            "numba.cuda.cudadrv.error",
            "numba.cuda.cudadrv.libs",
            "numba.cuda.cudadrv.ndarray",
            "numba.cuda.cudadrv.nvvm",
            "numba.cuda.cudaimpl",
            "numba.cuda.cudamath",
            "numba.cuda.decorators",
            "numba.cuda.descriptor",
            "numba.cuda.device_init",
            "numba.cuda.dispatcher",
            "numba.cuda.errors",
            "numba.cuda.initialize",
            "numba.cuda.kernels",
            "numba.cuda.kernels.reduction",
            "numba.cuda.kernels.transpose",
            "numba.cuda.libdevice",
            "numba.cuda.nvvmutils",
            "numba.cuda.printimpl",
            "numba.cuda.random",
            "numba.cuda.simulator",
            "numba.cuda.simulator.api",
            "numba.cuda.simulator.array",
            "numba.cuda.simulator.compiler",
            "numba.cuda.simulator.cudadrv",
            "numba.cuda.simulator.cudadrv.devicearray",
            "numba.cuda.simulator.cudadrv.devices",
            "numba.cuda.simulator.cudadrv.driver",
            "numba.cuda.simulator.cudadrv.drvapi",
            "numba.cuda.simulator.cudadrv.nvvm",
            "numba.cuda.simulator.kernel",
            "numba.cuda.simulator.kernelapi",
            "numba.cuda.simulator.reduction",
            "numba.cuda.simulator_init",
            "numba.cuda.stubs",
            "numba.cuda.target",
            "numba.cuda.testing",
            "numba.cuda.tests",
            "numba.cuda.tests.cudadrv",
            "numba.cuda.tests.cudadrv.data",
            "numba.cuda.tests.cudadrv.test_array_attr",
            "numba.cuda.tests.cudadrv.test_context_stack",
            "numba.cuda.tests.cudadrv.test_cuda_array_slicing",
            "numba.cuda.tests.cudadrv.test_cuda_auto_context",
            "numba.cuda.tests.cudadrv.test_cuda_devicerecord",
            "numba.cuda.tests.cudadrv.test_cuda_driver",
            "numba.cuda.tests.cudadrv.test_cuda_memory",
            "numba.cuda.tests.cudadrv.test_cuda_ndarray",
            "numba.cuda.tests.cudadrv.test_deallocations",
            "numba.cuda.tests.cudadrv.test_detect",
            "numba.cuda.tests.cudadrv.test_events",
            "numba.cuda.tests.cudadrv.test_host_alloc",
            "numba.cuda.tests.cudadrv.test_inline_ptx",
            "numba.cuda.tests.cudadrv.test_ir_patch",
            "numba.cuda.tests.cudadrv.test_linker",
            "numba.cuda.tests.cudadrv.test_nvvm_driver",
            "numba.cuda.tests.cudadrv.test_pinned",
            "numba.cuda.tests.cudadrv.test_profiler",
            "numba.cuda.tests.cudadrv.test_reset_device",
            "numba.cuda.tests.cudadrv.test_select_device",
            "numba.cuda.tests.cudapy",
            "numba.cuda.tests.cudapy.test_alignment",
            "numba.cuda.tests.cudapy.test_array",
            "numba.cuda.tests.cudapy.test_array_args",
            "numba.cuda.tests.cudapy.test_array_methods",
            "numba.cuda.tests.cudapy.test_atomics",
            "numba.cuda.tests.cudapy.test_autojit",
            "numba.cuda.tests.cudapy.test_blackscholes",
            "numba.cuda.tests.cudapy.test_boolean",
            "numba.cuda.tests.cudapy.test_casting",
            "numba.cuda.tests.cudapy.test_complex",
            "numba.cuda.tests.cudapy.test_complex_kernel",
            "numba.cuda.tests.cudapy.test_const_string",
            "numba.cuda.tests.cudapy.test_constmem",
            "numba.cuda.tests.cudapy.test_cuda_autojit",
            "numba.cuda.tests.cudapy.test_debug",
            "numba.cuda.tests.cudapy.test_debuginfo",
            "numba.cuda.tests.cudapy.test_device_func",
            "numba.cuda.tests.cudapy.test_errors",
            "numba.cuda.tests.cudapy.test_exception",
            "numba.cuda.tests.cudapy.test_fastmath",
            "numba.cuda.tests.cudapy.test_forall",
            "numba.cuda.tests.cudapy.test_freevar",
            "numba.cuda.tests.cudapy.test_globals",
            "numba.cuda.tests.cudapy.test_gufunc",
            "numba.cuda.tests.cudapy.test_gufunc_scalar",
            "numba.cuda.tests.cudapy.test_gufunc_scheduling",
            "numba.cuda.tests.cudapy.test_idiv",
            "numba.cuda.tests.cudapy.test_inspect",
            "numba.cuda.tests.cudapy.test_intrinsics",
            "numba.cuda.tests.cudapy.test_ipc",
            "numba.cuda.tests.cudapy.test_lang",
            "numba.cuda.tests.cudapy.test_laplace",
            "numba.cuda.tests.cudapy.test_localmem",
            "numba.cuda.tests.cudapy.test_macro",
            "numba.cuda.tests.cudapy.test_mandel",
            "numba.cuda.tests.cudapy.test_math",
            "numba.cuda.tests.cudapy.test_matmul",
            "numba.cuda.tests.cudapy.test_montecarlo",
            "numba.cuda.tests.cudapy.test_multigpu",
            "numba.cuda.tests.cudapy.test_multiprocessing",
            "numba.cuda.tests.cudapy.test_multithreads",
            "numba.cuda.tests.cudapy.test_nondet",
            "numba.cuda.tests.cudapy.test_operator",
            "numba.cuda.tests.cudapy.test_powi",
            "numba.cuda.tests.cudapy.test_print",
            "numba.cuda.tests.cudapy.test_py2_div_issue",
            "numba.cuda.tests.cudapy.test_random",
            "numba.cuda.tests.cudapy.test_record_dtype",
            "numba.cuda.tests.cudapy.test_reduction",
            "numba.cuda.tests.cudapy.test_serialize",
            "numba.cuda.tests.cudapy.test_slicing",
            "numba.cuda.tests.cudapy.test_sm",
            "numba.cuda.tests.cudapy.test_smart_array",
            "numba.cuda.tests.cudapy.test_sync",
            "numba.cuda.tests.cudapy.test_transpose",
            "numba.cuda.tests.cudapy.test_userexc",
            "numba.cuda.tests.cudapy.test_vectorize",
            "numba.cuda.tests.cudapy.test_vectorize_complex",
            "numba.cuda.tests.cudapy.test_vectorize_decor",
            "numba.cuda.tests.cudapy.test_vectorize_device",
            "numba.cuda.tests.cudapy.test_vectorize_scalar_arg",
            "numba.cuda.tests.cudasim",
            "numba.cuda.tests.cudasim.support",
            "numba.cuda.tests.cudasim.test_cudasim_issues",
            "numba.cuda.tests.nocuda",
            "numba.cuda.tests.nocuda.test_nvvm",
            "numba.cuda.vectorizers",
            "numba.dataflow",
            "numba.datamodel",
            "numba.datamodel.manager",
            "numba.datamodel.models",
            "numba.datamodel.packer",
            "numba.datamodel.registry",
            "numba.datamodel.testing",
            "numba.debuginfo",
            "numba.decorators",
            "numba.dispatcher",
            "numba.dummyarray",
            "numba.errors",
            "numba.extending",
            "numba.findlib",
            "numba.funcdesc",
            "numba.generators",
            "numba.hsa",
            "numba.hsa.api",
            "numba.hsa.codegen",
            "numba.hsa.compiler",
            "numba.hsa.decorators",
            "numba.hsa.descriptor",
            "numba.hsa.dispatch",
            "numba.hsa.enums",
            "numba.hsa.hlc",
            "numba.hsa.hlc.config",
            "numba.hsa.hlc.hlc",
            "numba.hsa.hlc.libhlc",
            "numba.hsa.hlc.utils",
            "numba.hsa.hsadecl",
            "numba.hsa.hsadrv",
            "numba.hsa.hsadrv.devices",
            "numba.hsa.hsadrv.driver",
            "numba.hsa.hsadrv.drvapi",
            "numba.hsa.hsadrv.enums",
            "numba.hsa.hsadrv.error",
            "numba.hsa.hsaimpl",
            "numba.hsa.initialize",
            "numba.hsa.mathdecl",
            "numba.hsa.mathimpl",
            "numba.hsa.stubs",
            "numba.hsa.target",
            "numba.hsa.tests",
            "numba.hsa.tests.hsadrv",
            "numba.hsa.tests.hsadrv.test_driver",
            "numba.hsa.tests.hsadrv.test_hlc",
            "numba.hsa.tests.hsapy",
            "numba.hsa.tests.hsapy.test_atomics",
            "numba.hsa.tests.hsapy.test_autojit",
            "numba.hsa.tests.hsapy.test_barrier",
            "numba.hsa.tests.hsapy.test_compiler",
            "numba.hsa.tests.hsapy.test_decorator",
            "numba.hsa.tests.hsapy.test_gufuncbuilding",
            "numba.hsa.tests.hsapy.test_linkage",
            "numba.hsa.tests.hsapy.test_math",
            "numba.hsa.tests.hsapy.test_matmul",
            "numba.hsa.tests.hsapy.test_positioning",
            "numba.hsa.tests.hsapy.test_reduction",
            "numba.hsa.tests.hsapy.test_scan",
            "numba.hsa.tests.hsapy.test_simple",
            "numba.hsa.tests.hsapy.test_ufuncbuilding",
            "numba.hsa.vectorizers",
            "numba.interpreter",
            "numba.io_support",
            "numba.ir",
            "numba.itanium_mangler",
            "numba.jitclass",
            "numba.jitclass.base",
            "numba.jitclass.boxing",
            "numba.jitclass.decorators",
            "numba.llvmthreadsafe",
            "numba.lowering",
            "numba.macro",
            "numba.npdatetime",
            "numba.npyufunc",
            "numba.npyufunc.array_exprs",
            "numba.npyufunc.decorators",
            "numba.npyufunc.deviceufunc",
            "numba.npyufunc.dufunc",
            "numba.npyufunc.parallel",
            "numba.npyufunc.sigparse",
            "numba.npyufunc.ufuncbuilder",
            "numba.npyufunc.wrappers",
            "numba.numba_entry",
            "numba.numpy_support",
            "numba.objmode",
            "numba.postproc",
            "numba.pycc",
            "numba.pycc.cc",
            "numba.pycc.compiler",
            "numba.pycc.decorators",
            "numba.pycc.llvm_types",
            "numba.pycc.platform",
            "numba.pythonapi",
            "numba.rewrites",
            "numba.rewrites.ir_print",
            "numba.rewrites.macros",
            "numba.rewrites.registry",
            "numba.rewrites.static_binop",
            "numba.rewrites.static_getitem",
            "numba.rewrites.static_raise",
            "numba.runtests",
            "numba.runtime",
            "numba.runtime.context",
            "numba.runtime.nrt",
            "numba.runtime.nrtdynmod",
            "numba.runtime.nrtopt",
            "numba.scripts",
            "numba.scripts.generate_lower_listing",
            "numba.serialize",
            "numba.servicelib",
            "numba.servicelib.service",
            "numba.servicelib.threadlocal",
            "numba.sigutils",
            "numba.six",
            "numba.smartarray",
            "numba.special",
            "numba.targets",
            "numba.targets.arraymath",
            "numba.targets.arrayobj",
            "numba.targets.base",
            "numba.targets.boxing",
            "numba.targets.builtins",
            "numba.targets.callconv",
            "numba.targets.cffiimpl",
            "numba.targets.cmathimpl",
            "numba.targets.codegen",
            "numba.targets.cpu",
            "numba.targets.descriptors",
            "numba.targets.enumimpl",
            "numba.targets.externals",
            "numba.targets.fastmathpass",
            "numba.targets.imputils",
            "numba.targets.intrinsics",
            "numba.targets.iterators",
            "numba.targets.linalg",
            "numba.targets.listobj",
            "numba.targets.mathimpl",
            "numba.targets.npdatetime",
            "numba.targets.npyfuncs",
            "numba.targets.npyimpl",
            "numba.targets.numbers",
            "numba.targets.operatorimpl",
            "numba.targets.optional",
            "numba.targets.options",
            "numba.targets.polynomial",
            "numba.targets.printimpl",
            "numba.targets.quicksort",
            "numba.targets.randomimpl",
            "numba.targets.rangeobj",
            "numba.targets.registry",
            "numba.targets.removerefctpass",
            "numba.targets.setobj",
            "numba.targets.slicing",
            "numba.targets.smartarray",
            "numba.targets.tupleobj",
            "numba.targets.ufunc_db",
            "numba.testing",
            "numba.testing.ddt",
            "numba.testing.loader",
            "numba.testing.main",
            "numba.testing.notebook",
            "numba.tests",
            "numba.tests.annotation_usecases",
            "numba.tests.cache_usecases",
            "numba.tests.cffi_usecases",
            "numba.tests.cfunc_cache_usecases",
            "numba.tests.compile_with_pycc",
            "numba.tests.complex_usecases",
            "numba.tests.ctypes_usecases",
            "numba.tests.enum_usecases",
            "numba.tests.matmul_usecase",
            "numba.tests.npyufunc",
            "numba.tests.npyufunc.cache_usecases",
            "numba.tests.npyufunc.test_caching",
            "numba.tests.npyufunc.test_dufunc",
            "numba.tests.npyufunc.test_errors",
            "numba.tests.npyufunc.test_gufunc",
            "numba.tests.npyufunc.test_parallel_env_variable",
            "numba.tests.npyufunc.test_parallel_low_work",
            "numba.tests.npyufunc.test_parallel_ufunc_issues",
            "numba.tests.npyufunc.test_ufunc",
            "numba.tests.npyufunc.test_ufuncbuilding",
            "numba.tests.npyufunc.test_vectorize_decor",
            "numba.tests.pdlike_usecase",
            "numba.tests.recursion_usecases",
            "numba.tests.serialize_usecases",
            "numba.tests.support",
            "numba.tests.test_alignment",
            "numba.tests.test_annotations",
            "numba.tests.test_api",
            "numba.tests.test_array_attr",
            "numba.tests.test_array_constants",
            "numba.tests.test_array_exprs",
            "numba.tests.test_array_iterators",
            "numba.tests.test_array_manipulation",
            "numba.tests.test_array_methods",
            "numba.tests.test_array_reductions",
            "numba.tests.test_array_return",
            "numba.tests.test_auto_constants",
            "numba.tests.test_blackscholes",
            "numba.tests.test_buffer_protocol",
            "numba.tests.test_builtins",
            "numba.tests.test_casting",
            "numba.tests.test_cffi",
            "numba.tests.test_cfunc",
            "numba.tests.test_cgutils",
            "numba.tests.test_chained_assign",
            "numba.tests.test_closure",
            "numba.tests.test_codegen",
            "numba.tests.test_compile_cache",
            "numba.tests.test_complex",
            "numba.tests.test_conversion",
            "numba.tests.test_ctypes",
            "numba.tests.test_dataflow",
            "numba.tests.test_datamodel",
            "numba.tests.test_debug",
            "numba.tests.test_debuginfo",
            "numba.tests.test_del",
            "numba.tests.test_deprecations",
            "numba.tests.test_dicts",
            "numba.tests.test_dispatcher",
            "numba.tests.test_dummyarray",
            "numba.tests.test_dyn_array",
            "numba.tests.test_dyn_func",
            "numba.tests.test_enums",
            "numba.tests.test_errormodels",
            "numba.tests.test_exceptions",
            "numba.tests.test_extended_arg",
            "numba.tests.test_extending",
            "numba.tests.test_fancy_indexing",
            "numba.tests.test_fastmath",
            "numba.tests.test_flow_control",
            "numba.tests.test_func_interface",
            "numba.tests.test_func_lifetime",
            "numba.tests.test_generators",
            "numba.tests.test_gil",
            "numba.tests.test_globals",
            "numba.tests.test_hashing",
            "numba.tests.test_import",
            "numba.tests.test_indexing",
            "numba.tests.test_inlining",
            "numba.tests.test_interproc",
            "numba.tests.test_intwidth",
            "numba.tests.test_ir",
            "numba.tests.test_itanium_mangler",
            "numba.tests.test_iteration",
            "numba.tests.test_jitclasses",
            "numba.tests.test_jitmethod",
            "numba.tests.test_linalg",
            "numba.tests.test_lists",
            "numba.tests.test_llvm_version_check",
            "numba.tests.test_locals",
            "numba.tests.test_looplifting",
            "numba.tests.test_mandelbrot",
            "numba.tests.test_mangling",
            "numba.tests.test_mathlib",
            "numba.tests.test_maxmin",
            "numba.tests.test_multi3",
            "numba.tests.test_nan",
            "numba.tests.test_nested_calls",
            "numba.tests.test_np_functions",
            "numba.tests.test_npdatetime",
            "numba.tests.test_nrt",
            "numba.tests.test_nrt_refct",
            "numba.tests.test_numberctor",
            "numba.tests.test_numconv",
            "numba.tests.test_numpy_support",
            "numba.tests.test_numpyadapt",
            "numba.tests.test_obj_lifetime",
            "numba.tests.test_object_mode",
            "numba.tests.test_objects",
            "numba.tests.test_operators",
            "numba.tests.test_optional",
            "numba.tests.test_overlap",
            "numba.tests.test_polynomial",
            "numba.tests.test_print",
            "numba.tests.test_profiler",
            "numba.tests.test_pycc",
            "numba.tests.test_python_int",
            "numba.tests.test_random",
            "numba.tests.test_range",
            "numba.tests.test_recarray_usecases",
            "numba.tests.test_record_dtype",
            "numba.tests.test_recursion",
            "numba.tests.test_return_values",
            "numba.tests.test_runtests",
            "numba.tests.test_serialize",
            "numba.tests.test_sets",
            "numba.tests.test_slices",
            "numba.tests.test_smart_array",
            "numba.tests.test_sort",
            "numba.tests.test_storeslice",
            "numba.tests.test_support",
            "numba.tests.test_target_overloadselector",
            "numba.tests.test_threadsafety",
            "numba.tests.test_tracing",
            "numba.tests.test_tuples",
            "numba.tests.test_typeconv",
            "numba.tests.test_typeinfer",
            "numba.tests.test_typenames",
            "numba.tests.test_typeof",
            "numba.tests.test_types",
            "numba.tests.test_typingerror",
            "numba.tests.test_ufuncs",
            "numba.tests.test_unicode_literals",
            "numba.tests.test_unicode_names",
            "numba.tests.test_unpack_sequence",
            "numba.tests.test_usecases",
            "numba.tests.test_utils",
            "numba.tests.test_vectorization_type_inference",
            "numba.tests.test_warnings",
            "numba.tests.test_wrapper",
            "numba.tests.timsort",
            "numba.tests.true_div_usecase",
            "numba.tests.usecases",
            "numba.tracing",
            "numba.transforms",
            "numba.typeconv",
            "numba.typeconv.castgraph",
            "numba.typeconv.rules",
            "numba.typeconv.typeconv",
            "numba.typeinfer",
            "numba.types",
            "numba.types.abstract",
            "numba.types.common",
            "numba.types.containers",
            "numba.types.functions",
            "numba.types.iterators",
            "numba.types.misc",
            "numba.types.npytypes",
            "numba.types.scalars",
            "numba.typing",
            "numba.typing.arraydecl",
            "numba.typing.bufproto",
            "numba.typing.builtins",
            "numba.typing.cffi_utils",
            "numba.typing.cmathdecl",
            "numba.typing.collections",
            "numba.typing.context",
            "numba.typing.ctypes_utils",
            "numba.typing.enumdecl",
            "numba.typing.listdecl",
            "numba.typing.mathdecl",
            "numba.typing.npdatetime",
            "numba.typing.npydecl",
            "numba.typing.operatordecl",
            "numba.typing.randomdecl",
            "numba.typing.setdecl",
            "numba.typing.templates",
            "numba.typing.typeof",
            "numba.unittest_support",
            "numba.utils"
        ],
        "version": "0.33.0"
    },
    "numbagg": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "numbamisc": {
        "cmdline": [],
        "modules": [
            "numbamisc",
            "numbamisc._median_filter"
        ],
        "version": "0.0.1"
    },
    "number-converter": {
        "cmdline": [],
        "modules": [
            "converter",
            "converter.integer_to_english",
            "converter.number_to_word"
        ],
        "version": "0.1"
    },
    "number-recognizer": {
        "cmdline": [],
        "modules": [
            "recognizer",
            "recognizer.cli",
            "recognizer.recognizer"
        ],
        "version": "0.1.5"
    },
    "number-shortener": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "number-verifier": {
        "cmdline": [],
        "modules": [
            "number_verifier",
            "number_verifier.NumberOwner"
        ],
        "version": "0.1"
    },
    "number2name-es": {
        "cmdline": [],
        "modules": [
            "number2name_es",
            "number2name_es.main",
            "number2name_es.nombre_numero"
        ],
        "version": "1.0.0"
    },
    "numbergen": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "numberguesser": {
        "cmdline": [],
        "modules": [
            "numberGuesser",
            "numberGuesser.demo"
        ],
        "version": "0.2"
    },
    "numberify": {
        "cmdline": [],
        "modules": [
            "numberify",
            "numberify.numberify",
            "test",
            "test.test_numberify"
        ],
        "version": "0.0.1"
    },
    "numberjack": {
        "cmdline": [],
        "modules": [
            "Numberjack",
            "Numberjack.Decomp",
            "Numberjack.ExternalSolver",
            "Numberjack.MIPParser",
            "Numberjack.XCSP",
            "Numberjack.XCSPOut",
            "Numberjack.solvers",
            "Numberjack.solvers.BreakIDGlucose",
            "Numberjack.solvers.ClaspCNF",
            "Numberjack.solvers.CryptoMiniSat",
            "Numberjack.solvers.Glucose",
            "Numberjack.solvers.Lingeling",
            "Numberjack.solvers.MiniSat",
            "Numberjack.solvers.Minion",
            "Numberjack.solvers.MipWrapper",
            "Numberjack.solvers.Mistral",
            "Numberjack.solvers.Mistral2",
            "Numberjack.solvers.Riss3g",
            "Numberjack.solvers.SatWrapper",
            "Numberjack.solvers.Toulbar2",
            "Numberjack.solvers.Walksat"
        ],
        "version": "1.2.0"
    },
    "numbername": {
        "cmdline": [],
        "modules": [
            "numbername",
            "numbername.src"
        ],
        "version": "0.0.6"
    },
    "numbers": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "numbers-extractor": {
        "cmdline": [],
        "modules": [
            "numbers_extractor",
            "numbers_extractor.numbers_extractor",
            "numbers_extractor.test"
        ],
        "version": "0.2.3"
    },
    "numbertoletters": {
        "cmdline": [],
        "modules": [
            "numbertoletters"
        ],
        "version": "0.1"
    },
    "numbyte": {
        "cmdline": [],
        "modules": [
            "numbyte",
            "numbyte.main"
        ],
        "version": "2009.12.24.py3k.cpp"
    },
    "numbytes": {
        "cmdline": [],
        "modules": [
            "numbytes",
            "numbytes.main"
        ],
        "version": "2009.12.24.py3k.cpp"
    },
    "numcaptcha": {
        "cmdline": [],
        "modules": [
            "numcaptcha"
        ],
        "version": "0.01"
    },
    "numcodecs": {
        "cmdline": [],
        "modules": [
            "numcodecs",
            "numcodecs.abc",
            "numcodecs.astype",
            "numcodecs.bz2",
            "numcodecs.categorize",
            "numcodecs.checksum32",
            "numcodecs.compat",
            "numcodecs.delta",
            "numcodecs.fixedscaleoffset",
            "numcodecs.lzma",
            "numcodecs.msgpacks",
            "numcodecs.packbits",
            "numcodecs.pickles",
            "numcodecs.quantize",
            "numcodecs.registry",
            "numcodecs.tests",
            "numcodecs.tests.common",
            "numcodecs.tests.test_astype",
            "numcodecs.tests.test_blosc",
            "numcodecs.tests.test_bz2",
            "numcodecs.tests.test_categorize",
            "numcodecs.tests.test_checksum32",
            "numcodecs.tests.test_delta",
            "numcodecs.tests.test_fixedscaleoffset",
            "numcodecs.tests.test_lz4",
            "numcodecs.tests.test_lzma",
            "numcodecs.tests.test_msgpacks",
            "numcodecs.tests.test_packbits",
            "numcodecs.tests.test_pickles",
            "numcodecs.tests.test_quantize",
            "numcodecs.tests.test_registry",
            "numcodecs.tests.test_zlib",
            "numcodecs.tests.test_zstd",
            "numcodecs.version",
            "numcodecs.zlib"
        ],
        "version": "0.2.1"
    },
    "numconv": {
        "cmdline": [],
        "modules": [
            "numconv"
        ],
        "version": "2.1.1"
    },
    "numcube": {
        "cmdline": [],
        "modules": [
            "numcube",
            "numcube.axes",
            "numcube.axis",
            "numcube.cube",
            "numcube.exceptions",
            "numcube.experimental",
            "numcube.experimental.multiaxis",
            "numcube.experimental.multiindex",
            "numcube.functions",
            "numcube.index",
            "numcube.tests",
            "numcube.tests.doctests",
            "numcube.tests.doctests.axis",
            "numcube.tests.doctests.cube",
            "numcube.tests.doctests.index",
            "numcube.tests.test_axis",
            "numcube.tests.test_cube",
            "numcube.tests.test_index",
            "numcube.tests.test_multiaxis",
            "numcube.tests.test_multiindex",
            "numcube.tests.test_numcube",
            "numcube.utils",
            "numcube.version"
        ],
        "version": "0.2.0"
    },
    "numdifftools": {
        "cmdline": [],
        "modules": [],
        "version": "0.9.20"
    },
    "numdisplay": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "numen": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "numenta-rogue": {
        "cmdline": [],
        "modules": [
            "avogadro",
            "avogadro.agent",
            "avogadro.cpu_agent",
            "avogadro.disk_agent",
            "avogadro.export",
            "avogadro.grok_forwarder",
            "avogadro.keylog_agent",
            "avogadro.keys",
            "avogadro.memory_agent",
            "avogadro.model_params",
            "avogadro.network_agent",
            "avogadro.nupic_forwarder",
            "avogadro.rrdtool",
            "tools",
            "tools.convert_key_data",
            "tools.convert_keycounts",
            "tools.process_avogadro_data"
        ],
        "version": "1.0.1"
    },
    "numeral": {
        "cmdline": [],
        "modules": [
            "numeral",
            "numeral._version",
            "numeral.numeral"
        ],
        "version": "0.1.0.11"
    },
    "numeric": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "numericalmodel": {
        "cmdline": [],
        "modules": [
            "numericalmodel",
            "numericalmodel.equations",
            "numericalmodel.genericmodel",
            "numericalmodel.interfaces",
            "numericalmodel.numericalmodel",
            "numericalmodel.numericalschemes",
            "numericalmodel.utils"
        ],
        "version": "0.1.0"
    },
    "numericaltesting": {
        "cmdline": [],
        "modules": [
            "numericaltesting",
            "numericaltesting.array_comparison",
            "numericaltesting.array_comparison_test"
        ],
        "version": "0.11"
    },
    "numericalunits": {
        "cmdline": [],
        "modules": [],
        "version": "1.16"
    },
    "numerics": {
        "cmdline": [],
        "modules": [
            "numerics",
            "numerics.bar",
            "numerics.cal",
            "numerics.cat_columns",
            "numerics.check",
            "numerics.cleanse",
            "numerics.convert",
            "numerics.csvwriter",
            "numerics.data",
            "numerics.fields",
            "numerics.filters",
            "numerics.formatting",
            "numerics.gather",
            "numerics.generate",
            "numerics.histogram",
            "numerics.interpolation",
            "numerics.main",
            "numerics.manipulate",
            "numerics.mean",
            "numerics.median",
            "numerics.normalize",
            "numerics.parse_date",
            "numerics.plot",
            "numerics.read",
            "numerics.reduce",
            "numerics.smooth",
            "numerics.sort",
            "numerics.sum",
            "numerics.text_display",
            "numerics.web",
            "numerics.write"
        ],
        "version": "0.1"
    },
    "numericube-twistranet": {
        "cmdline": [],
        "modules": [
            "twistranet",
            "twistranet.actions",
            "twistranet.actions.models",
            "twistranet.content_types",
            "twistranet.content_types.forms",
            "twistranet.content_types.models",
            "twistranet.core",
            "twistranet.core.bootstrap",
            "twistranet.core.caches",
            "twistranet.core.install",
            "twistranet.core.middleware",
            "twistranet.core.patches",
            "twistranet.core.patches.django_contrib_auth",
            "twistranet.core.patches.sort_thumbnail",
            "twistranet.core.test_runner",
            "twistranet.core.twistranet_project",
            "twistranet.core.views",
            "twistranet.fixtures",
            "twistranet.fixtures.bootstrap",
            "twistranet.fixtures.heavy_load",
            "twistranet.fixtures.help_en",
            "twistranet.fixtures.sample",
            "twistranet.notifier",
            "twistranet.notifier.handlers",
            "twistranet.notifier.models",
            "twistranet.project_templates",
            "twistranet.project_templates.cogip",
            "twistranet.project_templates.cogip.bootstrap_settings",
            "twistranet.project_templates.cogip.fixtures",
            "twistranet.project_templates.cogip.fixtures.cogip",
            "twistranet.project_templates.default",
            "twistranet.project_templates.default.bootstrap_settings",
            "twistranet.project_templates.default.local_settings",
            "twistranet.project_templates.default.manage",
            "twistranet.project_templates.default.settings",
            "twistranet.project_templates.default.urls",
            "twistranet.search",
            "twistranet.search.haystack_simplehack_backend",
            "twistranet.search.search_indexes",
            "twistranet.search.search_sites",
            "twistranet.search.urls",
            "twistranet.search.views",
            "twistranet.sharing",
            "twistranet.sharing.models",
            "twistranet.sharing.urls",
            "twistranet.sharing.views",
            "twistranet.tagging",
            "twistranet.tagging.fields",
            "twistranet.tagging.models",
            "twistranet.tagging.urls",
            "twistranet.tagging.views",
            "twistranet.tagging.widgets",
            "twistranet.themes",
            "twistranet.themes.twistheme",
            "twistranet.translation",
            "twistranet.twistapp",
            "twistranet.twistapp.admin",
            "twistranet.twistapp.admin.account",
            "twistranet.twistapp.admin.community",
            "twistranet.twistapp.admin.relation",
            "twistranet.twistapp.fixtures",
            "twistranet.twistapp.forms",
            "twistranet.twistapp.forms.account_forms",
            "twistranet.twistapp.forms.admin_forms",
            "twistranet.twistapp.forms.base_forms",
            "twistranet.twistapp.forms.community_forms",
            "twistranet.twistapp.forms.fields",
            "twistranet.twistapp.forms.form_registry",
            "twistranet.twistapp.forms.registration_forms",
            "twistranet.twistapp.forms.resource_forms",
            "twistranet.twistapp.forms.validators",
            "twistranet.twistapp.forms.widgets",
            "twistranet.twistapp.lib",
            "twistranet.twistapp.lib.decorators",
            "twistranet.twistapp.lib.languages",
            "twistranet.twistapp.lib.log",
            "twistranet.twistapp.lib.permissions",
            "twistranet.twistapp.lib.python_fixture",
            "twistranet.twistapp.lib.roles",
            "twistranet.twistapp.lib.slugify",
            "twistranet.twistapp.lib.utils",
            "twistranet.twistapp.management",
            "twistranet.twistapp.management.commands",
            "twistranet.twistapp.management.commands.twistranet_bootstrap",
            "twistranet.twistapp.management.commands.twistranet_status",
            "twistranet.twistapp.management.commands.twistranet_update",
            "twistranet.twistapp.models",
            "twistranet.twistapp.models.account",
            "twistranet.twistapp.models.community",
            "twistranet.twistapp.models.content",
            "twistranet.twistapp.models.fields",
            "twistranet.twistapp.models.menu",
            "twistranet.twistapp.models.network",
            "twistranet.twistapp.models.resource",
            "twistranet.twistapp.models.twistable",
            "twistranet.twistapp.signals",
            "twistranet.twistapp.templatetags",
            "twistranet.twistapp.templatetags.macros",
            "twistranet.twistapp.templatetags.menubuilder",
            "twistranet.twistapp.templatetags.wiki",
            "twistranet.twistapp.tests",
            "twistranet.twistapp.tests.account_security",
            "twistranet.twistapp.tests.base",
            "twistranet.twistapp.tests.content",
            "twistranet.twistapp.tests.functional",
            "twistranet.twistapp.tests.menu",
            "twistranet.twistapp.tests.resources",
            "twistranet.twistapp.tests.sample",
            "twistranet.twistapp.tests.security",
            "twistranet.twistapp.tests.views_test",
            "twistranet.twistapp.tests.wall",
            "twistranet.twistapp.urls",
            "twistranet.twistapp.views",
            "twistranet.twistapp.views.account_views",
            "twistranet.twistapp.views.admin_views",
            "twistranet.twistapp.views.common_views",
            "twistranet.twistapp.views.community_views",
            "twistranet.twistapp.views.content_views",
            "twistranet.twistapp.views.media_views",
            "twistranet.twistapp.views.resource_views",
            "twistranet.twistorage",
            "twistranet.twistorage.storage",
            "twistranet.twistorage.urls",
            "twistranet.twistorage.views"
        ],
        "version": "2.0.0"
    },
    "numeronym": {
        "cmdline": [],
        "modules": [
            "numeronym",
            "numeronym.main"
        ],
        "version": "1.0.5"
    },
    "numerous": {
        "cmdline": [],
        "modules": [
            "numerous"
        ],
        "version": "1.6.4"
    },
    "numerus": {
        "cmdline": [],
        "modules": [
            "numerus",
            "numerus.checks",
            "numerus.geometry"
        ],
        "version": "0.1.0"
    },
    "numeter-vera-modules": {
        "cmdline": [],
        "modules": [
            "veraModule"
        ],
        "version": "0.0.5"
    },
    "numex": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "numexpr": {
        "cmdline": [],
        "modules": [
            "numexpr",
            "numexpr.cpuinfo",
            "numexpr.expressions",
            "numexpr.necompiler",
            "numexpr.tests",
            "numexpr.tests.test_numexpr",
            "numexpr.utils",
            "numexpr.version"
        ],
        "version": "2.6.2"
    },
    "numg": {
        "cmdline": [
            "numag.py"
        ],
        "modules": [
            "__init__",
            "numg"
        ],
        "version": "1.0.1"
    },
    "numina": {
        "cmdline": [],
        "modules": [
            "numina",
            "numina.array",
            "numina.array.background",
            "numina.array.blocks",
            "numina.array.combine",
            "numina.array.cosmetics",
            "numina.array.fwhm",
            "numina.array.imsurfit",
            "numina.array.interpolation",
            "numina.array.mode",
            "numina.array.nirproc",
            "numina.array.peaks",
            "numina.array.peaks.findpeaks1D",
            "numina.array.peaks.peakdet",
            "numina.array.peaks.peakdetection",
            "numina.array.peaks.tests",
            "numina.array.peaks.tests.test_peakdet",
            "numina.array.recenter",
            "numina.array.robustfit",
            "numina.array.tests",
            "numina.array.tests.test_array",
            "numina.array.tests.test_combine",
            "numina.array.tests.test_cosmetics",
            "numina.array.tests.test_fowler_cy",
            "numina.array.tests.test_fwhm",
            "numina.array.tests.test_imsurfit",
            "numina.array.tests.test_interpolation",
            "numina.array.tests.test_ramp_cy",
            "numina.array.tests.test_robustfit",
            "numina.array.tests.test_utils",
            "numina.array.trace",
            "numina.array.trace.extract",
            "numina.array.trace.tests",
            "numina.array.trace.tests.test_extract",
            "numina.array.trace.tests.test_trace",
            "numina.array.trace.traces",
            "numina.array.utils",
            "numina.array.wavecal",
            "numina.array.wavecal.arccalibration",
            "numina.array.wavecal.arccalibration_original",
            "numina.array.wavecal.slitlet",
            "numina.array.wavecal.statsummary",
            "numina.array.wavecal.tests",
            "numina.array.wavecal.tests.test_arccalibration",
            "numina.array.wavecal.tests.test_arccalibration_original",
            "numina.conftest",
            "numina.constants",
            "numina.core",
            "numina.core.dataframe",
            "numina.core.dataholders",
            "numina.core.metaclass",
            "numina.core.metarecipes",
            "numina.core.objimport",
            "numina.core.oresult",
            "numina.core.pipeline",
            "numina.core.pipelineload",
            "numina.core.products",
            "numina.core.qc",
            "numina.core.recipeinout",
            "numina.core.recipes",
            "numina.core.requirements",
            "numina.core.taggers",
            "numina.core.tests",
            "numina.core.tests.test_drpload",
            "numina.core.tests.test_pipelines",
            "numina.core.tests.test_products",
            "numina.core.tests.test_recipe",
            "numina.core.tests.test_recipeinout",
            "numina.core.tests.test_recipeinput",
            "numina.core.tests.test_reciperesult",
            "numina.core.tests.test_taggers",
            "numina.core.tests.test_types",
            "numina.core.typedialect",
            "numina.core.types",
            "numina.core.utils",
            "numina.dal",
            "numina.dal.absdal",
            "numina.dal.daliface",
            "numina.dal.dictdal",
            "numina.dal.mockdal",
            "numina.dal.stored",
            "numina.enum",
            "numina.exceptions",
            "numina.ext",
            "numina.ext.gtc",
            "numina.flow",
            "numina.flow.node",
            "numina.flow.processing",
            "numina.frame",
            "numina.frame.schema",
            "numina.logger",
            "numina.modeling",
            "numina.modeling.enclosed",
            "numina.modeling.gaussbox",
            "numina.modeling.sumofgauss",
            "numina.modeling.tests",
            "numina.modeling.tests.test_models",
            "numina.store",
            "numina.store.dump",
            "numina.store.load",
            "numina.store.tests",
            "numina.store.tests.test_dump",
            "numina.store.tests.test_load",
            "numina.tests",
            "numina.tests.drpmocker",
            "numina.tests.helper",
            "numina.tests.pytest_plugins",
            "numina.tests.test_enum",
            "numina.tests.test_logger",
            "numina.tests.test_testcache",
            "numina.tests.test_treedict",
            "numina.tests.test_user",
            "numina.tests.test_visualization",
            "numina.tests.testcache",
            "numina.treedict",
            "numina.user",
            "numina.user.cli",
            "numina.user.clidal",
            "numina.user.clirun",
            "numina.user.clirundal",
            "numina.user.clirunrec",
            "numina.user.clishowins",
            "numina.user.clishowom",
            "numina.user.clishowrecip",
            "numina.user.helpers",
            "numina.user.logconf",
            "numina.user.tests",
            "numina.user.tests.test_cli_show_ins",
            "numina.user.xdgdirs",
            "numina.util",
            "numina.util.sexcatalog",
            "numina.util.sextractor",
            "numina.version",
            "numina.visualization"
        ],
        "version": "0.14"
    },
    "numkit": {
        "cmdline": [],
        "modules": [],
        "version": "1.0.0"
    },
    "numm": {
        "cmdline": [],
        "modules": [
            "numm",
            "numm.async",
            "numm.async_main",
            "numm.image",
            "numm.io",
            "numm.opencv",
            "numm.sound",
            "numm.term",
            "numm.video"
        ],
        "version": "0.3"
    },
    "numoperations": {
        "cmdline": [],
        "modules": [
            "numoperations"
        ],
        "version": "0.1"
    },
    "numparse164": {
        "cmdline": [],
        "modules": [
            "numparse164",
            "numparse164.uk"
        ],
        "version": "0.2"
    },
    "numparser": {
        "cmdline": [],
        "modules": [
            "numparser",
            "numparser.numparser"
        ],
        "version": "0.0.2"
    },
    "numpee": {
        "cmdline": [],
        "modules": [
            "numpee"
        ],
        "version": "1.9.3"
    },
    "numpngw": {
        "cmdline": [],
        "modules": [],
        "version": "0.0.6"
    },
    "numprops": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "numpy": {
        "cmdline": [],
        "modules": [
            "numpy",
            "numpy._build_utils",
            "numpy._build_utils.apple_accelerate",
            "numpy._build_utils.common",
            "numpy._distributor_init",
            "numpy._globals",
            "numpy._import_tools",
            "numpy.add_newdocs",
            "numpy.compat",
            "numpy.compat._inspect",
            "numpy.compat.py3k",
            "numpy.compat.setup",
            "numpy.core",
            "numpy.core._internal",
            "numpy.core._methods",
            "numpy.core.arrayprint",
            "numpy.core.code_generators",
            "numpy.core.code_generators.genapi",
            "numpy.core.code_generators.generate_numpy_api",
            "numpy.core.code_generators.generate_ufunc_api",
            "numpy.core.code_generators.generate_umath",
            "numpy.core.code_generators.numpy_api",
            "numpy.core.code_generators.ufunc_docstrings",
            "numpy.core.cversions",
            "numpy.core.defchararray",
            "numpy.core.einsumfunc",
            "numpy.core.fromnumeric",
            "numpy.core.function_base",
            "numpy.core.getlimits",
            "numpy.core.info",
            "numpy.core.machar",
            "numpy.core.memmap",
            "numpy.core.numeric",
            "numpy.core.numerictypes",
            "numpy.core.records",
            "numpy.core.setup",
            "numpy.core.setup_common",
            "numpy.core.shape_base",
            "numpy.ctypeslib",
            "numpy.distutils",
            "numpy.distutils.ccompiler",
            "numpy.distutils.command",
            "numpy.distutils.command.autodist",
            "numpy.distutils.command.bdist_rpm",
            "numpy.distutils.command.build",
            "numpy.distutils.command.build_clib",
            "numpy.distutils.command.build_ext",
            "numpy.distutils.command.build_py",
            "numpy.distutils.command.build_scripts",
            "numpy.distutils.command.build_src",
            "numpy.distutils.command.config",
            "numpy.distutils.command.config_compiler",
            "numpy.distutils.command.develop",
            "numpy.distutils.command.egg_info",
            "numpy.distutils.command.install",
            "numpy.distutils.command.install_clib",
            "numpy.distutils.command.install_data",
            "numpy.distutils.command.install_headers",
            "numpy.distutils.command.sdist",
            "numpy.distutils.compat",
            "numpy.distutils.conv_template",
            "numpy.distutils.core",
            "numpy.distutils.cpuinfo",
            "numpy.distutils.environment",
            "numpy.distutils.exec_command",
            "numpy.distutils.extension",
            "numpy.distutils.fcompiler",
            "numpy.distutils.fcompiler.absoft",
            "numpy.distutils.fcompiler.compaq",
            "numpy.distutils.fcompiler.g95",
            "numpy.distutils.fcompiler.gnu",
            "numpy.distutils.fcompiler.hpux",
            "numpy.distutils.fcompiler.ibm",
            "numpy.distutils.fcompiler.intel",
            "numpy.distutils.fcompiler.lahey",
            "numpy.distutils.fcompiler.mips",
            "numpy.distutils.fcompiler.nag",
            "numpy.distutils.fcompiler.none",
            "numpy.distutils.fcompiler.pathf95",
            "numpy.distutils.fcompiler.pg",
            "numpy.distutils.fcompiler.sun",
            "numpy.distutils.fcompiler.vast",
            "numpy.distutils.from_template",
            "numpy.distutils.info",
            "numpy.distutils.intelccompiler",
            "numpy.distutils.lib2def",
            "numpy.distutils.line_endings",
            "numpy.distutils.log",
            "numpy.distutils.mingw32ccompiler",
            "numpy.distutils.misc_util",
            "numpy.distutils.msvc9compiler",
            "numpy.distutils.msvccompiler",
            "numpy.distutils.npy_pkg_config",
            "numpy.distutils.numpy_distribution",
            "numpy.distutils.pathccompiler",
            "numpy.distutils.setup",
            "numpy.distutils.system_info",
            "numpy.distutils.unixccompiler",
            "numpy.doc",
            "numpy.doc.basics",
            "numpy.doc.broadcasting",
            "numpy.doc.byteswapping",
            "numpy.doc.constants",
            "numpy.doc.creation",
            "numpy.doc.glossary",
            "numpy.doc.indexing",
            "numpy.doc.internals",
            "numpy.doc.misc",
            "numpy.doc.structured_arrays",
            "numpy.doc.subclassing",
            "numpy.doc.ufuncs",
            "numpy.dual",
            "numpy.f2py",
            "numpy.f2py.auxfuncs",
            "numpy.f2py.capi_maps",
            "numpy.f2py.cb_rules",
            "numpy.f2py.cfuncs",
            "numpy.f2py.common_rules",
            "numpy.f2py.crackfortran",
            "numpy.f2py.diagnose",
            "numpy.f2py.f2py2e",
            "numpy.f2py.f2py_testing",
            "numpy.f2py.f90mod_rules",
            "numpy.f2py.func2subr",
            "numpy.f2py.info",
            "numpy.f2py.rules",
            "numpy.f2py.setup",
            "numpy.f2py.use_rules",
            "numpy.fft",
            "numpy.fft.fftpack",
            "numpy.fft.helper",
            "numpy.fft.info",
            "numpy.fft.setup",
            "numpy.lib",
            "numpy.lib._datasource",
            "numpy.lib._iotools",
            "numpy.lib._version",
            "numpy.lib.arraypad",
            "numpy.lib.arraysetops",
            "numpy.lib.arrayterator",
            "numpy.lib.financial",
            "numpy.lib.format",
            "numpy.lib.function_base",
            "numpy.lib.index_tricks",
            "numpy.lib.info",
            "numpy.lib.mixins",
            "numpy.lib.nanfunctions",
            "numpy.lib.npyio",
            "numpy.lib.polynomial",
            "numpy.lib.recfunctions",
            "numpy.lib.scimath",
            "numpy.lib.setup",
            "numpy.lib.shape_base",
            "numpy.lib.stride_tricks",
            "numpy.lib.twodim_base",
            "numpy.lib.type_check",
            "numpy.lib.ufunclike",
            "numpy.lib.user_array",
            "numpy.lib.utils",
            "numpy.linalg",
            "numpy.linalg.info",
            "numpy.linalg.linalg",
            "numpy.linalg.setup",
            "numpy.ma",
            "numpy.ma.bench",
            "numpy.ma.core",
            "numpy.ma.extras",
            "numpy.ma.mrecords",
            "numpy.ma.setup",
            "numpy.ma.testutils",
            "numpy.ma.timer_comparison",
            "numpy.ma.version",
            "numpy.matlib",
            "numpy.matrixlib",
            "numpy.matrixlib.defmatrix",
            "numpy.matrixlib.setup",
            "numpy.polynomial",
            "numpy.polynomial._polybase",
            "numpy.polynomial.chebyshev",
            "numpy.polynomial.hermite",
            "numpy.polynomial.hermite_e",
            "numpy.polynomial.laguerre",
            "numpy.polynomial.legendre",
            "numpy.polynomial.polynomial",
            "numpy.polynomial.polyutils",
            "numpy.polynomial.setup",
            "numpy.random",
            "numpy.random.info",
            "numpy.random.setup",
            "numpy.setup",
            "numpy.testing",
            "numpy.testing.decorators",
            "numpy.testing.noseclasses",
            "numpy.testing.nosetester",
            "numpy.testing.print_coercion_tables",
            "numpy.testing.setup",
            "numpy.testing.utils",
            "numpy.version",
            "numpydoc",
            "numpydoc.comment_eater",
            "numpydoc.compiler_unparse",
            "numpydoc.docscrape",
            "numpydoc.docscrape_sphinx",
            "numpydoc.linkcode",
            "numpydoc.numpydoc",
            "numpydoc.phantom_import",
            "numpydoc.plot_directive",
            "numpydoc.traitsdoc"
        ],
        "version": "1.13.0rc2"
    },
    "numpy-display": {
        "cmdline": [],
        "modules": [
            "numpy_display"
        ],
        "version": "1.2.0"
    },
    "numpy-groupies": {
        "cmdline": [],
        "modules": [
            "numpy_groupies",
            "numpy_groupies.aggregate_numba",
            "numpy_groupies.aggregate_numpy",
            "numpy_groupies.aggregate_numpy_ufunc",
            "numpy_groupies.aggregate_pandas",
            "numpy_groupies.aggregate_purepy",
            "numpy_groupies.aggregate_weave",
            "numpy_groupies.misc_tools_numpy",
            "numpy_groupies.utils"
        ],
        "version": "0.9.6"
    },
    "numpy-indexed": {
        "cmdline": [],
        "modules": [
            "numpy_indexed",
            "numpy_indexed.arraysetops",
            "numpy_indexed.examples",
            "numpy_indexed.funcs",
            "numpy_indexed.grouping",
            "numpy_indexed.index",
            "numpy_indexed.monkey_patch",
            "numpy_indexed.semantics",
            "numpy_indexed.tests",
            "numpy_indexed.tests.test_indexed",
            "numpy_indexed.tests.test_numpy",
            "numpy_indexed.utility"
        ],
        "version": "0.3.4"
    },
    "numpy-mkl": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "numpy-pypy": {
        "cmdline": [],
        "modules": [
            "f2py_ext",
            "f2py_ext.setup",
            "f2py_f90_ext",
            "f2py_f90_ext.setup",
            "gen_ext",
            "gen_ext.setup",
            "numpy",
            "numpy._import_tools",
            "numpy.add_newdocs",
            "numpy.compat",
            "numpy.compat._inspect",
            "numpy.compat.py3k",
            "numpy.compat.setup",
            "numpy.core",
            "numpy.core._internal",
            "numpy.core._methods",
            "numpy.core.arrayprint",
            "numpy.core.code_generators",
            "numpy.core.code_generators.genapi",
            "numpy.core.code_generators.generate_numpy_api",
            "numpy.core.code_generators.generate_ufunc_api",
            "numpy.core.code_generators.generate_umath",
            "numpy.core.code_generators.numpy_api",
            "numpy.core.code_generators.ufunc_docstrings",
            "numpy.core.cversions",
            "numpy.core.defchararray",
            "numpy.core.fromnumeric",
            "numpy.core.function_base",
            "numpy.core.getlimits",
            "numpy.core.info",
            "numpy.core.machar",
            "numpy.core.memmap",
            "numpy.core.multiarray",
            "numpy.core.numeric",
            "numpy.core.numerictypes",
            "numpy.core.records",
            "numpy.core.scalarmath",
            "numpy.core.setup",
            "numpy.core.setup_common",
            "numpy.core.shape_base",
            "numpy.core.umath",
            "numpy.ctypeslib",
            "numpy.distutils",
            "numpy.distutils.ccompiler",
            "numpy.distutils.command",
            "numpy.distutils.command.autodist",
            "numpy.distutils.command.bdist_rpm",
            "numpy.distutils.command.build",
            "numpy.distutils.command.build_clib",
            "numpy.distutils.command.build_ext",
            "numpy.distutils.command.build_py",
            "numpy.distutils.command.build_scripts",
            "numpy.distutils.command.build_src",
            "numpy.distutils.command.config",
            "numpy.distutils.command.config_compiler",
            "numpy.distutils.command.develop",
            "numpy.distutils.command.egg_info",
            "numpy.distutils.command.install",
            "numpy.distutils.command.install_clib",
            "numpy.distutils.command.install_data",
            "numpy.distutils.command.install_headers",
            "numpy.distutils.command.sdist",
            "numpy.distutils.compat",
            "numpy.distutils.conv_template",
            "numpy.distutils.core",
            "numpy.distutils.cpuinfo",
            "numpy.distutils.environment",
            "numpy.distutils.exec_command",
            "numpy.distutils.extension",
            "numpy.distutils.fcompiler",
            "numpy.distutils.fcompiler.absoft",
            "numpy.distutils.fcompiler.compaq",
            "numpy.distutils.fcompiler.g95",
            "numpy.distutils.fcompiler.gnu",
            "numpy.distutils.fcompiler.hpux",
            "numpy.distutils.fcompiler.ibm",
            "numpy.distutils.fcompiler.intel",
            "numpy.distutils.fcompiler.lahey",
            "numpy.distutils.fcompiler.mips",
            "numpy.distutils.fcompiler.nag",
            "numpy.distutils.fcompiler.none",
            "numpy.distutils.fcompiler.pathf95",
            "numpy.distutils.fcompiler.pg",
            "numpy.distutils.fcompiler.sun",
            "numpy.distutils.fcompiler.vast",
            "numpy.distutils.from_template",
            "numpy.distutils.info",
            "numpy.distutils.intelccompiler",
            "numpy.distutils.lib2def",
            "numpy.distutils.line_endings",
            "numpy.distutils.log",
            "numpy.distutils.mingw32ccompiler",
            "numpy.distutils.misc_util",
            "numpy.distutils.npy_pkg_config",
            "numpy.distutils.numpy_distribution",
            "numpy.distutils.pathccompiler",
            "numpy.distutils.setup",
            "numpy.distutils.system_info",
            "numpy.distutils.unixccompiler",
            "numpy.doc",
            "numpy.doc.basics",
            "numpy.doc.broadcasting",
            "numpy.doc.byteswapping",
            "numpy.doc.constants",
            "numpy.doc.creation",
            "numpy.doc.glossary",
            "numpy.doc.howtofind",
            "numpy.doc.indexing",
            "numpy.doc.internals",
            "numpy.doc.io",
            "numpy.doc.jargon",
            "numpy.doc.methods_vs_functions",
            "numpy.doc.misc",
            "numpy.doc.performance",
            "numpy.doc.structured_arrays",
            "numpy.doc.subclassing",
            "numpy.doc.ufuncs",
            "numpy.dual",
            "numpy.f2py",
            "numpy.f2py.auxfuncs",
            "numpy.f2py.capi_maps",
            "numpy.f2py.cb_rules",
            "numpy.f2py.cfuncs",
            "numpy.f2py.common_rules",
            "numpy.f2py.crackfortran",
            "numpy.f2py.diagnose",
            "numpy.f2py.f2py2e",
            "numpy.f2py.f2py_testing",
            "numpy.f2py.f90mod_rules",
            "numpy.f2py.func2subr",
            "numpy.f2py.info",
            "numpy.f2py.rules",
            "numpy.f2py.setup",
            "numpy.f2py.use_rules",
            "numpy.fft",
            "numpy.fft.fft_cffi",
            "numpy.fft.fftpack",
            "numpy.fft.fftpack_lite",
            "numpy.fft.helper",
            "numpy.fft.info",
            "numpy.fft.setup",
            "numpy.lib",
            "numpy.lib._compiled_base",
            "numpy.lib._datasource",
            "numpy.lib._iotools",
            "numpy.lib._version",
            "numpy.lib.arraypad",
            "numpy.lib.arraysetops",
            "numpy.lib.arrayterator",
            "numpy.lib.financial",
            "numpy.lib.format",
            "numpy.lib.function_base",
            "numpy.lib.index_tricks",
            "numpy.lib.info",
            "numpy.lib.nanfunctions",
            "numpy.lib.npyio",
            "numpy.lib.polynomial",
            "numpy.lib.recfunctions",
            "numpy.lib.scimath",
            "numpy.lib.setup",
            "numpy.lib.shape_base",
            "numpy.lib.stride_tricks",
            "numpy.lib.tests",
            "numpy.lib.tests.test__datasource",
            "numpy.lib.tests.test__iotools",
            "numpy.lib.tests.test__version",
            "numpy.lib.tests.test_arraypad",
            "numpy.lib.tests.test_arraysetops",
            "numpy.lib.tests.test_arrayterator",
            "numpy.lib.tests.test_financial",
            "numpy.lib.tests.test_format",
            "numpy.lib.tests.test_function_base",
            "numpy.lib.tests.test_index_tricks",
            "numpy.lib.tests.test_io",
            "numpy.lib.tests.test_nanfunctions",
            "numpy.lib.tests.test_polynomial",
            "numpy.lib.tests.test_recfunctions",
            "numpy.lib.tests.test_regression",
            "numpy.lib.tests.test_shape_base",
            "numpy.lib.tests.test_stride_tricks",
            "numpy.lib.tests.test_twodim_base",
            "numpy.lib.tests.test_type_check",
            "numpy.lib.tests.test_ufunclike",
            "numpy.lib.tests.test_utils",
            "numpy.lib.twodim_base",
            "numpy.lib.type_check",
            "numpy.lib.ufunclike",
            "numpy.lib.user_array",
            "numpy.lib.utils",
            "numpy.linalg",
            "numpy.linalg._umath_linalg",
            "numpy.linalg.info",
            "numpy.linalg.lapack_lite",
            "numpy.linalg.linalg",
            "numpy.linalg.setup",
            "numpy.linalg.tests",
            "numpy.linalg.tests.test_build",
            "numpy.linalg.tests.test_deprecations",
            "numpy.linalg.tests.test_linalg",
            "numpy.linalg.tests.test_regression",
            "numpy.ma",
            "numpy.ma.bench",
            "numpy.ma.core",
            "numpy.ma.extras",
            "numpy.ma.mrecords",
            "numpy.ma.setup",
            "numpy.ma.tests",
            "numpy.ma.tests.test_core",
            "numpy.ma.tests.test_extras",
            "numpy.ma.tests.test_mrecords",
            "numpy.ma.tests.test_old_ma",
            "numpy.ma.tests.test_regression",
            "numpy.ma.tests.test_subclassing",
            "numpy.ma.testutils",
            "numpy.ma.timer_comparison",
            "numpy.ma.version",
            "numpy.matlib",
            "numpy.matrixlib",
            "numpy.matrixlib.defmatrix",
            "numpy.matrixlib.setup",
            "numpy.matrixlib.tests",
            "numpy.matrixlib.tests.test_defmatrix",
            "numpy.matrixlib.tests.test_multiarray",
            "numpy.matrixlib.tests.test_numeric",
            "numpy.matrixlib.tests.test_regression",
            "numpy.polynomial",
            "numpy.polynomial._polybase",
            "numpy.polynomial.chebyshev",
            "numpy.polynomial.hermite",
            "numpy.polynomial.hermite_e",
            "numpy.polynomial.laguerre",
            "numpy.polynomial.legendre",
            "numpy.polynomial.polynomial",
            "numpy.polynomial.polytemplate",
            "numpy.polynomial.polyutils",
            "numpy.polynomial.setup",
            "numpy.random",
            "numpy.random.info",
            "numpy.random.mtrand",
            "numpy.random.setup",
            "numpy.random.tests",
            "numpy.random.tests.test_random",
            "numpy.random.tests.test_regression",
            "numpy.setup",
            "numpy.testing",
            "numpy.testing.decorators",
            "numpy.testing.noseclasses",
            "numpy.testing.nosetester",
            "numpy.testing.print_coercion_tables",
            "numpy.testing.setup",
            "numpy.testing.tests",
            "numpy.testing.tests.test_decorators",
            "numpy.testing.tests.test_doctesting",
            "numpy.testing.tests.test_utils",
            "numpy.testing.utils",
            "numpy.version",
            "numpydoc",
            "numpydoc.comment_eater",
            "numpydoc.compiler_unparse",
            "numpydoc.docscrape",
            "numpydoc.docscrape_sphinx",
            "numpydoc.linkcode",
            "numpydoc.numpydoc",
            "numpydoc.phantom_import",
            "numpydoc.plot_directive",
            "numpydoc.traitsdoc",
            "pyrex_ext",
            "pyrex_ext.setup",
            "swig_ext",
            "swig_ext.setup"
        ],
        "version": "1.9.0"
    },
    "numpy-quaternion": {
        "cmdline": [],
        "modules": [],
        "version": "2017.05.08.13.59.46.dev255649235"
    },
    "numpy-ringbuffer": {
        "cmdline": [],
        "modules": [
            "numpy_ringbuffer",
            "numpy_ringbuffer.__about__"
        ],
        "version": "0.2.1"
    },
    "numpy-stl": {
        "cmdline": [],
        "modules": [
            "stl",
            "stl.__about__",
            "stl.base",
            "stl.main",
            "stl.mesh",
            "stl.stl",
            "stl.utils"
        ],
        "version": "2.2.3"
    },
    "numpy-sugar": {
        "cmdline": [],
        "modules": [
            "api",
            "api.errors",
            "api.merge",
            "api.pypi",
            "api.stats",
            "api.stdlib",
            "core",
            "core.logger",
            "core.patches",
            "core.utils"
        ],
        "version": "1.0.41"
    },
    "numpydoc": {
        "cmdline": [],
        "modules": [
            "numpydoc",
            "numpydoc.comment_eater",
            "numpydoc.compiler_unparse",
            "numpydoc.docscrape",
            "numpydoc.docscrape_sphinx",
            "numpydoc.linkcode",
            "numpydoc.numpydoc",
            "numpydoc.phantom_import",
            "numpydoc.plot_directive",
            "numpydoc.traitsdoc"
        ],
        "version": "0.6.0"
    },
    "numpysane": {
        "cmdline": [],
        "modules": [
            "numpysane"
        ],
        "version": "0.8"
    },
    "numpyson": {
        "cmdline": [],
        "modules": [],
        "version": "0.4"
    },
    "numrep": {
        "cmdline": [],
        "modules": [
            "NumRep",
            "NumRep.funcs",
            "NumRep.utils"
        ],
        "version": "0.1.3"
    },
    "numscons": {
        "cmdline": [],
        "modules": [
            "numscons",
            "numscons.checkers",
            "numscons.checkers.common",
            "numscons.checkers.config",
            "numscons.checkers.fortran",
            "numscons.checkers.fortran.fortran",
            "numscons.checkers.fortran.fortran_scons",
            "numscons.checkers.netlib_checkers",
            "numscons.checkers.perflib_checkers",
            "numscons.checkers.perflib_config",
            "numscons.checkers.simple_check",
            "numscons.checkers.sunperf_workaround",
            "numscons.checkers.testcode_snippets",
            "numscons.checkers.version_checkers",
            "numscons.core",
            "numscons.core.allow_undefined",
            "numscons.core.compiler_config",
            "numscons.core.compiler_detection",
            "numscons.core.custom_builders",
            "numscons.core.customization",
            "numscons.core.default",
            "numscons.core.errors",
            "numscons.core.extension_scons",
            "numscons.core.helpers",
            "numscons.core.initialization",
            "numscons.core.misc",
            "numscons.core.numpyenv",
            "numscons.core.siteconfig",
            "numscons.core.template_generators",
            "numscons.core.trace",
            "numscons.core.utils",
            "numscons.misc",
            "numscons.numdist",
            "numscons.numdist.conv_template",
            "numscons.numdist.from_template",
            "numscons.numdist.numdist_copy",
            "numscons.starter",
            "numscons.tools",
            "numscons.tools.cython",
            "numscons.tools.dlltool",
            "numscons.tools.dllwrap",
            "numscons.tools.f2py",
            "numscons.tools.ifort",
            "numscons.tools.intel_common",
            "numscons.tools.intel_common.common",
            "numscons.tools.intel_common.win32",
            "numscons.tools.intelc",
            "numscons.tools.pyext",
            "numscons.tools.substinfile",
            "numscons.version"
        ],
        "version": "0.12.0"
    },
    "numscrypt": {
        "cmdline": [],
        "modules": [
            "numscrypt",
            "numscrypt.__base__",
            "numscrypt.linalg",
            "numscrypt.random"
        ],
        "version": "0.0.36"
    },
    "numtest": {
        "cmdline": [],
        "modules": [
            "numtest",
            "numtest.about_numtest"
        ],
        "version": "2.0.6"
    },
    "numtheory": {
        "cmdline": [],
        "modules": [
            "numtheory"
        ],
        "version": "1"
    },
    "numtod": {
        "cmdline": [
            "convert.py"
        ],
        "modules": [
            "__init__",
            "convert"
        ],
        "version": "1.0.1"
    },
    "numtogreek": {
        "cmdline": [],
        "modules": [
            "numtogreek",
            "numtogreek.numtogreek"
        ],
        "version": "1.0.0"
    },
    "numtoword": {
        "cmdline": [],
        "modules": [
            "numToWord"
        ],
        "version": "1.0"
    },
    "numtraits": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "numtxt": {
        "cmdline": [],
        "modules": [
            "numtxt"
        ],
        "version": "1.0.1"
    },
    "numty": {
        "cmdline": [],
        "modules": [
            "numty",
            "numty.base",
            "numty.congruences",
            "numty.multFunc",
            "numty.primes",
            "numty.quadResidues",
            "numty.sequences",
            "numty.test"
        ],
        "version": "1.0"
    },
    "numutil": {
        "cmdline": [],
        "modules": [
            "__init__",
            "numutil",
            "test"
        ],
        "version": "0.1.0"
    },
    "numword": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nunchuck-pi": {
        "cmdline": [],
        "modules": [
            "nunchuck"
        ],
        "version": "0.1"
    },
    "nunja": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nuodbtools": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nuorder": {
        "cmdline": [],
        "modules": [
            "nuorder",
            "nuorder._metadata",
            "nuorder.config"
        ],
        "version": "1.0.1"
    },
    "nupack": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "nupic": {
        "cmdline": [],
        "modules": [
            "algorithms",
            "algorithms.CLAClassifier",
            "algorithms.KNNClassifier",
            "algorithms.anomaly",
            "algorithms.anomaly_likelihood",
            "algorithms.cla_classifier_diff",
            "algorithms.cla_classifier_factory",
            "algorithms.sdr_classifier",
            "algorithms.sdr_classifier_factory",
            "data",
            "data.CategoryFilter",
            "data.aggregator",
            "data.dictutils",
            "data.fieldmeta",
            "data.file_record_stream",
            "data.filters",
            "data.functionsource",
            "data.generators",
            "data.generators.anomalyzer",
            "data.generators.data_generator",
            "data.generators.distributions",
            "data.generators.pattern_machine",
            "data.generators.sequence_machine",
            "data.inference_shifter",
            "data.joiner",
            "data.jsonhelpers",
            "data.record_stream",
            "data.sorter",
            "data.stats",
            "data.stats_v2",
            "data.stream_reader",
            "data.utils",
            "database",
            "database.ClientJobsDAO",
            "database.Connection",
            "datafiles",
            "encoders",
            "encoders.adaptivescalar",
            "encoders.base",
            "encoders.category",
            "encoders.coordinate",
            "encoders.date",
            "encoders.delta",
            "encoders.geospatial_coordinate",
            "encoders.logenc",
            "encoders.multi",
            "encoders.pass_through_encoder",
            "encoders.random_distributed_scalar",
            "encoders.scalar",
            "encoders.scalarspace",
            "encoders.sdrcategory",
            "encoders.sparse_pass_through_encoder",
            "encoders.utils",
            "engine",
            "frameworks",
            "frameworks.opf",
            "frameworks.opf.clamodel",
            "frameworks.opf.clamodel_classifier_helper",
            "frameworks.opf.clamodelcallbacks",
            "frameworks.opf.client",
            "frameworks.opf.common_models",
            "frameworks.opf.common_models.cluster_params",
            "frameworks.opf.exceptions",
            "frameworks.opf.expdescriptionapi",
            "frameworks.opf.expdescriptionhelpers",
            "frameworks.opf.experiment_runner",
            "frameworks.opf.jsonschema",
            "frameworks.opf.metrics",
            "frameworks.opf.model",
            "frameworks.opf.modelcallbacks",
            "frameworks.opf.modelfactory",
            "frameworks.opf.opfbasicenvironment",
            "frameworks.opf.opfenvironment",
            "frameworks.opf.opfhelpers",
            "frameworks.opf.opftaskdriver",
            "frameworks.opf.opfutils",
            "frameworks.opf.periodic",
            "frameworks.opf.predictionmetricsmanager",
            "frameworks.opf.previousvaluemodel",
            "frameworks.opf.safe_interpreter",
            "frameworks.opf.two_gram_model",
            "frameworks.viz",
            "frameworks.viz.dot_renderer",
            "frameworks.viz.examples",
            "frameworks.viz.examples.visualize_network",
            "frameworks.viz.graphviz_renderer",
            "frameworks.viz.network_visualization",
            "frameworks.viz.networkx_renderer",
            "math",
            "math.cross",
            "math.dist",
            "math.logarithms",
            "math.mvn",
            "math.proposal",
            "math.roc_utils",
            "math.stats",
            "math.topology",
            "regions",
            "regions.AnomalyLikelihoodRegion",
            "regions.AnomalyRegion",
            "regions.CLAClassifierRegion",
            "regions.KNNAnomalyClassifierRegion",
            "regions.KNNClassifierRegion",
            "regions.PluggableEncoderSensor",
            "regions.RecordSensor",
            "regions.RecordSensorFilters",
            "regions.RecordSensorFilters.AddNoise",
            "regions.RecordSensorFilters.ModifyFields",
            "regions.SDRClassifierRegion",
            "regions.SPRegion",
            "regions.SVMClassifierNode",
            "regions.Spec",
            "regions.TPRegion",
            "regions.TestRegion",
            "regions.UnimportableNode",
            "regions.extra",
            "research",
            "research.TP",
            "research.TP10X2",
            "research.TP_shim",
            "research.connections",
            "research.fdrutilities",
            "research.monitor_mixin",
            "research.monitor_mixin.metric",
            "research.monitor_mixin.monitor_mixin_base",
            "research.monitor_mixin.plot",
            "research.monitor_mixin.temporal_memory_monitor_mixin",
            "research.monitor_mixin.trace",
            "research.spatial_pooler",
            "research.temporal_memory",
            "research.temporal_memory_shim",
            "research.utils",
            "support",
            "support.configuration",
            "support.configuration_base",
            "support.configuration_custom",
            "support.consoleprinter",
            "support.datafiles",
            "support.decorators",
            "support.enum",
            "support.exceptions",
            "support.feature_groups",
            "support.features",
            "support.features_list",
            "support.fshelpers",
            "support.group_by",
            "support.lockattributes",
            "support.log_utils",
            "support.loophelpers",
            "support.pymysqlhelpers",
            "support.unittesthelpers",
            "support.unittesthelpers.abstract_temporal_memory_test",
            "support.unittesthelpers.algorithm_test_helpers",
            "support.unittesthelpers.test_framework_helpers",
            "support.unittesthelpers.testcasebase",
            "swarming",
            "swarming.DummyModelRunner",
            "swarming.HypersearchV2",
            "swarming.HypersearchWorker",
            "swarming.ModelRunner",
            "swarming.api",
            "swarming.exp_generator",
            "swarming.exp_generator.ExpGenerator",
            "swarming.experimentutils",
            "swarming.hypersearch",
            "swarming.hypersearch.ExtendedLogger",
            "swarming.hypersearch.HsState",
            "swarming.hypersearch.ModelTerminator",
            "swarming.hypersearch.Particle",
            "swarming.hypersearch.SwarmTerminator",
            "swarming.hypersearch.errorcodes",
            "swarming.hypersearch.object_json",
            "swarming.hypersearch.permutation_helpers",
            "swarming.hypersearch.regression",
            "swarming.hypersearch.support",
            "swarming.jsonschema",
            "swarming.modelchooser",
            "swarming.permutationhelpers",
            "swarming.permutations_runner",
            "swarming.utils"
        ],
        "version": "0.6.0"
    },
    "nupic-studio": {
        "cmdline": [],
        "modules": [
            "nupic_studio",
            "nupic_studio.htm",
            "nupic_studio.htm.bit",
            "nupic_studio.htm.cell",
            "nupic_studio.htm.column",
            "nupic_studio.htm.encoding",
            "nupic_studio.htm.link",
            "nupic_studio.htm.network",
            "nupic_studio.htm.node",
            "nupic_studio.htm.node_region",
            "nupic_studio.htm.node_sensor",
            "nupic_studio.htm.segment",
            "nupic_studio.htm.synapse",
            "nupic_studio.images",
            "nupic_studio.program",
            "nupic_studio.project",
            "nupic_studio.projects",
            "nupic_studio.ui",
            "nupic_studio.ui.architecture_form",
            "nupic_studio.ui.main_form",
            "nupic_studio.ui.node_information_form",
            "nupic_studio.ui.node_region_form",
            "nupic_studio.ui.node_sensor_encoding_form",
            "nupic_studio.ui.node_sensor_form",
            "nupic_studio.ui.output_form",
            "nupic_studio.ui.project_properties_form",
            "nupic_studio.ui.simulation_form",
            "nupic_studio.ui.simulation_legend_form",
            "nupic_studio.ui.start_form"
        ],
        "version": "1.1.3"
    },
    "nupic.bindings": {
        "cmdline": [],
        "modules": [
            "bindings",
            "bindings.algorithms",
            "bindings.check",
            "bindings.engine_internal",
            "bindings.math",
            "bindings.regions",
            "bindings.regions.PyRegion",
            "bindings.regions.TestNode",
            "proto",
            "tests",
            "tests.array_algorithms_test",
            "tests.cast_mode_test",
            "tests.check_test",
            "tests.connections_test",
            "tests.network_test",
            "tests.nupic_random_test",
            "tests.pyregion_test",
            "tests.segment_sparse_matrix_test",
            "tests.sparse_binary_matrix_test",
            "tests.sparse_matrix_test",
            "tests.temporal_memory_test"
        ],
        "version": "0.6.1"
    },
    "nupicpipdemo": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nupis": {
        "cmdline": [],
        "modules": [
            "nupis",
            "nupis.aede",
            "nupis.stats"
        ],
        "version": "0.3.6"
    },
    "nuplone": {
        "cmdline": [],
        "modules": [
            "plonetheme",
            "plonetheme.nuplone",
            "plonetheme.nuplone.adapter",
            "plonetheme.nuplone.auth",
            "plonetheme.nuplone.setuphandlers",
            "plonetheme.nuplone.skin",
            "plonetheme.nuplone.skin.actions",
            "plonetheme.nuplone.skin.contact",
            "plonetheme.nuplone.skin.container",
            "plonetheme.nuplone.skin.debug",
            "plonetheme.nuplone.skin.error",
            "plonetheme.nuplone.skin.interfaces",
            "plonetheme.nuplone.skin.language",
            "plonetheme.nuplone.skin.layout",
            "plonetheme.nuplone.skin.login",
            "plonetheme.nuplone.skin.pwreminder",
            "plonetheme.nuplone.skin.settings",
            "plonetheme.nuplone.skin.site",
            "plonetheme.nuplone.skin.sitemenu",
            "plonetheme.nuplone.skin.tales",
            "plonetheme.nuplone.skin.tests",
            "plonetheme.nuplone.skin.tests.test_adapter",
            "plonetheme.nuplone.skin.tests.test_pwreminder",
            "plonetheme.nuplone.skin.tests.test_sitemenu",
            "plonetheme.nuplone.skin.tools",
            "plonetheme.nuplone.testing",
            "plonetheme.nuplone.tiles",
            "plonetheme.nuplone.tiles.analytics",
            "plonetheme.nuplone.tiles.group",
            "plonetheme.nuplone.tiles.language",
            "plonetheme.nuplone.tiles.messages",
            "plonetheme.nuplone.tiles.navigation",
            "plonetheme.nuplone.tiles.ordering",
            "plonetheme.nuplone.tiles.static",
            "plonetheme.nuplone.tiles.tabs",
            "plonetheme.nuplone.tiles.tales",
            "plonetheme.nuplone.tiles.tile",
            "plonetheme.nuplone.utils",
            "plonetheme.nuplone.z3cform",
            "plonetheme.nuplone.z3cform.directives",
            "plonetheme.nuplone.z3cform.form",
            "plonetheme.nuplone.z3cform.interfaces",
            "plonetheme.nuplone.z3cform.templates",
            "plonetheme.nuplone.z3cform.utils",
            "plonetheme.nuplone.z3cform.widget",
            "plonetheme.nuplone.z3cform.wysiwyg"
        ],
        "version": "1.5.3"
    },
    "nuri": {
        "cmdline": [
            "nuri",
            "nuri_jobs"
        ],
        "modules": [
            "nuri",
            "nuri.active",
            "nuri.download",
            "nuri.extract",
            "nuri.fftcomp",
            "nuri.notify",
            "nuri.settings",
            "nuri.split",
            "nuri.timing",
            "nuri.transform",
            "nuri.wavelet"
        ],
        "version": "0.0.4"
    },
    "nusa": {
        "cmdline": [],
        "modules": [
            "nusa",
            "nusa.core",
            "nusa.element",
            "nusa.graph",
            "nusa.io",
            "nusa.lib",
            "nusa.model",
            "nusa.templates"
        ],
        "version": "0.1.0.dev1"
    },
    "nusbot": {
        "cmdline": [],
        "modules": [
            "nusbot",
            "nusbot.adc",
            "nusbot.factory",
            "nusbot.filelist",
            "nusbot.protocol",
            "nusbot.storage"
        ],
        "version": "0.3.3"
    },
    "nussl": {
        "cmdline": [],
        "modules": [
            "nussl",
            "nussl.Duet",
            "nussl.KAM",
            "nussl.Nmf",
            "nussl.RPCA",
            "nussl.audio_signal",
            "nussl.constants",
            "nussl.repet",
            "nussl.repet_sim",
            "nussl.separation_base",
            "nussl.spectral_utils",
            "nussl.utils"
        ],
        "version": "0.1.5a10"
    },
    "nusstalker": {
        "cmdline": [],
        "modules": [
            "nusstalker",
            "nusstalker.main"
        ],
        "version": "0.9"
    },
    "nust": {
        "cmdline": [],
        "modules": [
            "nust",
            "nust.body",
            "nust.utils"
        ],
        "version": "dev-20110623-01"
    },
    "nustack": {
        "cmdline": [],
        "modules": [
            "nustack",
            "nustack.doc",
            "nustack.doc.gen",
            "nustack.doc.genall",
            "nustack.extensionbase",
            "nustack.interpreter",
            "nustack.stdlib",
            "nustack.stdlib.Hash",
            "nustack.stdlib.IO",
            "nustack.stdlib.Math",
            "nustack.stdlib.Path",
            "nustack.stdlib.Requests",
            "nustack.stdlib.Seq",
            "nustack.stdlib.Shell",
            "nustack.stdlib.String",
            "nustack.stdlib.Time",
            "nustack.stdlib.Turtle",
            "nustack.stdlib.builtins",
            "nustack.tokenize",
            "nustack.utils"
        ],
        "version": "0.11.0"
    },
    "nusx-list": {
        "cmdline": [],
        "modules": [
            "nusx_list"
        ],
        "version": "1.0"
    },
    "nut": {
        "cmdline": [],
        "modules": [
            "nut",
            "nut.relay",
            "nut.replay"
        ],
        "version": "0.2.0"
    },
    "nutch": {
        "cmdline": [],
        "modules": [
            "nutch",
            "nutch.crawl",
            "nutch.nutch",
            "nutch.test_nutch"
        ],
        "version": "1.10.3"
    },
    "nutils": {
        "cmdline": [],
        "modules": [
            "nutils",
            "nutils.cache",
            "nutils.core",
            "nutils.debug",
            "nutils.element",
            "nutils.function",
            "nutils.library",
            "nutils.log",
            "nutils.matrix",
            "nutils.mesh",
            "nutils.numeric",
            "nutils.parallel",
            "nutils.plot",
            "nutils.rational",
            "nutils.topology",
            "nutils.transform",
            "nutils.util"
        ],
        "version": "2.0"
    },
    "nutjob": {
        "cmdline": [],
        "modules": [],
        "version": "0.1.0"
    },
    "nutmeg": {
        "cmdline": [],
        "modules": [
            "nutmeg",
            "nutmeg.examples",
            "nutmeg.namespace",
            "nutmeg.processor"
        ],
        "version": "2017.3.27"
    },
    "nutritionix": {
        "cmdline": [],
        "modules": [],
        "version": "0.2"
    },
    "nutritionix-client": {
        "cmdline": [],
        "modules": [
            "nutritionix",
            "nutritionix.nutritionix"
        ],
        "version": "1.0.0.dev1"
    },
    "nutritionparser": {
        "cmdline": [],
        "modules": [
            "nutritionparser",
            "nutritionparser.reader",
            "nutritionparser.version"
        ],
        "version": "0.1.2"
    },
    "nuts": {
        "cmdline": [],
        "modules": [
            "nuts",
            "nuts.application",
            "nuts.application.Logger",
            "nuts.application.TestController",
            "nuts.application.ValidationController",
            "nuts.data",
            "nuts.data.Device",
            "nuts.data.TestCase",
            "nuts.data.TestSuite",
            "nuts.nuts",
            "nuts.service",
            "nuts.service.Evaluator",
            "nuts.service.FileHandler",
            "nuts.service.FileValidator",
            "nuts.service.Runner"
        ],
        "version": "1.0.8"
    },
    "nutsflow": {
        "cmdline": [],
        "modules": [
            "nutsflow",
            "nutsflow.base",
            "nutsflow.common",
            "nutsflow.examples",
            "nutsflow.examples.examples",
            "nutsflow.factory",
            "nutsflow.function",
            "nutsflow.iterfunction",
            "nutsflow.processor",
            "nutsflow.sink",
            "nutsflow.source",
            "nutsflow.underscore",
            "tests",
            "tests.nutsflow",
            "tests.nutsflow.examples",
            "tests.nutsflow.examples.test_examples",
            "tests.nutsflow.test_base",
            "tests.nutsflow.test_common",
            "tests.nutsflow.test_factory",
            "tests.nutsflow.test_function",
            "tests.nutsflow.test_iterfunction",
            "tests.nutsflow.test_processor",
            "tests.nutsflow.test_sink",
            "tests.nutsflow.test_source",
            "tests.nutsflow.test_underscore"
        ],
        "version": "1.0.13"
    },
    "nutshell": {
        "cmdline": [],
        "modules": [
            "nutshell"
        ],
        "version": "0.2"
    },
    "nutsml": {
        "cmdline": [],
        "modules": [
            "nutsml",
            "nutsml.batcher",
            "nutsml.booster",
            "nutsml.common",
            "nutsml.config",
            "nutsml.datautil",
            "nutsml.examples",
            "nutsml.examples.autoencoder",
            "nutsml.examples.autoencoder.conv_autoencoder",
            "nutsml.examples.autoencoder.runner",
            "nutsml.examples.cifar",
            "nutsml.examples.cifar.cnn_classify",
            "nutsml.examples.cifar.cnn_train",
            "nutsml.examples.cifar.read_images",
            "nutsml.examples.cifar.view_augmented_images",
            "nutsml.examples.cifar.view_data",
            "nutsml.examples.cifar.view_train_images",
            "nutsml.examples.cifar.write_images",
            "nutsml.examples.mnist",
            "nutsml.examples.mnist.cnn_classify",
            "nutsml.examples.mnist.cnn_train",
            "nutsml.examples.mnist.mlp_classify",
            "nutsml.examples.mnist.mlp_train",
            "nutsml.examples.mnist.mlp_view_misclassified",
            "nutsml.examples.mnist.read_images",
            "nutsml.examples.mnist.view_train_images",
            "nutsml.examples.mnist.write_images",
            "nutsml.fileutil",
            "nutsml.imageutil",
            "nutsml.logger",
            "nutsml.network",
            "nutsml.plotter",
            "nutsml.reader",
            "nutsml.stratify",
            "nutsml.transformer",
            "nutsml.viewer",
            "nutsml.writer",
            "tests",
            "tests.nutsml",
            "tests.nutsml.test_batcher",
            "tests.nutsml.test_booster",
            "tests.nutsml.test_common",
            "tests.nutsml.test_config",
            "tests.nutsml.test_datautil",
            "tests.nutsml.test_fileutil",
            "tests.nutsml.test_imageutil",
            "tests.nutsml.test_logger",
            "tests.nutsml.test_network",
            "tests.nutsml.test_reader",
            "tests.nutsml.test_stratify",
            "tests.nutsml.test_transformer",
            "tests.nutsml.test_viewer",
            "tests.nutsml.test_writer"
        ],
        "version": "1.0.16"
    },
    "nutstore-cli": {
        "cmdline": [],
        "modules": [
            "nutstore_cli",
            "nutstore_cli.cli",
            "nutstore_cli.client",
            "nutstore_cli.client.exceptions",
            "nutstore_cli.client.file",
            "nutstore_cli.context",
            "nutstore_cli.execution",
            "nutstore_cli.utils"
        ],
        "version": "0.1.2.dev11"
    },
    "nutty": {
        "cmdline": [],
        "modules": [],
        "version": "1.2.0"
    },
    "nuvolasdk": {
        "cmdline": [
            "nuvolasdk"
        ],
        "modules": [
            "nuvolasdk",
            "nuvolasdk.appdata",
            "nuvolasdk.checkproject",
            "nuvolasdk.convertproject",
            "nuvolasdk.datadir",
            "nuvolasdk.defaults",
            "nuvolasdk.genmakefile",
            "nuvolasdk.newproject",
            "nuvolasdk.shkit",
            "nuvolasdk.utils",
            "nuvolasdk.xmltree"
        ],
        "version": "1.3.0"
    },
    "nuxeo-automation": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "nuxeo-drive": {
        "cmdline": [],
        "modules": [],
        "version": "2.4.0"
    },
    "nuxeo-python-client": {
        "cmdline": [],
        "modules": [
            "nuxeo",
            "nuxeo.batchupload",
            "nuxeo.blob",
            "nuxeo.common",
            "nuxeo.directory",
            "nuxeo.document",
            "nuxeo.drive",
            "nuxeo.groups",
            "nuxeo.nuxeo",
            "nuxeo.operation",
            "nuxeo.remote_document_client",
            "nuxeo.repository",
            "nuxeo.rest_api_client",
            "nuxeo.users",
            "nuxeo.workflow"
        ],
        "version": "1.0.0"
    },
    "nv": {
        "cmdline": [],
        "modules": [
            "nv",
            "nv.__version__",
            "nv.cli",
            "nv.core"
        ],
        "version": "0.0.1"
    },
    "nva.stormcontainer": {
        "cmdline": [],
        "modules": [
            "nva",
            "nva.stormcontainer",
            "nva.stormcontainer.container",
            "nva.stormcontainer.interfaces",
            "nva.stormcontainer.tests",
            "nva.stormcontainer.tests.test_doctests",
            "nva.stormcontainer.tests.test_unittests",
            "nva.stormcontainer.utils"
        ],
        "version": "0.2"
    },
    "nvchecker": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nvda-addontemplate": {
        "cmdline": [],
        "modules": [
            "NVDAAddonTemplate"
        ],
        "version": "0.5.2"
    },
    "nvector": {
        "cmdline": [],
        "modules": [],
        "version": "0.5.2"
    },
    "nvidia-docker-compose": {
        "cmdline": [
            "nvidia-docker-compose"
        ],
        "modules": [],
        "version": "0.1.3"
    },
    "nvidia-ml-py": {
        "cmdline": [],
        "modules": [
            "nvidia_smi",
            "pynvml"
        ],
        "version": "7.352.0"
    },
    "nvimex": {
        "cmdline": [],
        "modules": [
            "nvimex",
            "nvimex.nvimex"
        ],
        "version": "0.1"
    },
    "nvlib": {
        "cmdline": [],
        "modules": [
            "nvlib"
        ],
        "version": "1.0"
    },
    "nvmdeploy": {
        "cmdline": [],
        "modules": [
            "nvmdeploysrc",
            "nvmdeploysrc.fastinit",
            "nvmdeploysrc.nevermore",
            "nvmdeploysrc.nvmjenkins",
            "nvmdeploysrc.templates",
            "nvmdeploysrc.testing"
        ],
        "version": "0.7"
    },
    "nvpnsxapi": {
        "cmdline": [],
        "modules": [
            "api",
            "api.control_services",
            "api.network_services",
            "api.nvp2",
            "api.nvp_api",
            "api.ovs",
            "api.ovs_rmt",
            "api.transport",
            "automation",
            "automation.nvpconfig",
            "automation.transportnode",
            "common",
            "common.util",
            "common.util.ssh",
            "common.util.util",
            "test",
            "test.example_api_usage"
        ],
        "version": "0.1.3.dev1"
    },
    "nvpy": {
        "cmdline": [],
        "modules": [
            "nvpy",
            "nvpy.bindings",
            "nvpy.notes_db",
            "nvpy.nvpy",
            "nvpy.search_entry",
            "nvpy.simplenote",
            "nvpy.tk",
            "nvpy.utils",
            "nvpy.view"
        ],
        "version": "1.0.0"
    },
    "nwalign": {
        "cmdline": [],
        "modules": [
            "nwalign",
            "nwalign.nwserver"
        ],
        "version": "0.3.1"
    },
    "nwanime-dl": {
        "cmdline": [
            "nwanime-dl"
        ],
        "modules": [
            "nwanime_dl",
            "nwanime_dl.helper",
            "nwanime_dl.makehtml",
            "nwanime_dl.nwanime_dl",
            "nwanime_dl.regexes"
        ],
        "version": "1.9.1"
    },
    "nway": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nwdiag": {
        "cmdline": [],
        "modules": [
            "nwdiag",
            "nwdiag.builder",
            "nwdiag.command",
            "nwdiag.drawer",
            "nwdiag.elements",
            "nwdiag.metrics",
            "nwdiag.parser",
            "nwdiag.tests",
            "nwdiag.tests.test_builder",
            "nwdiag.tests.test_generate_diagram",
            "nwdiag.tests.test_pep8",
            "nwdiag.tests.test_rst_directives",
            "nwdiag.tests.utils",
            "nwdiag.utils",
            "nwdiag.utils.rst",
            "nwdiag.utils.rst.directives",
            "nwdiag.utils.rst.nodes",
            "packetdiag",
            "packetdiag.builder",
            "packetdiag.command",
            "packetdiag.drawer",
            "packetdiag.elements",
            "packetdiag.metrics",
            "packetdiag.noderenderers",
            "packetdiag.parser",
            "packetdiag.utils",
            "packetdiag.utils.rst",
            "packetdiag.utils.rst.directives",
            "packetdiag.utils.rst.nodes",
            "rackdiag",
            "rackdiag.builder",
            "rackdiag.command",
            "rackdiag.drawer",
            "rackdiag.elements",
            "rackdiag.metrics",
            "rackdiag.parser",
            "rackdiag.utils",
            "rackdiag.utils.math",
            "rackdiag.utils.rst",
            "rackdiag.utils.rst.directives",
            "rackdiag.utils.rst.nodes"
        ],
        "version": "1.0.4"
    },
    "nwid": {
        "cmdline": [],
        "modules": [
            "nwid",
            "nwid.display",
            "nwid.events"
        ],
        "version": "0.1"
    },
    "nwkautomaniac": {
        "cmdline": [],
        "modules": [
            "nwkautomaniac",
            "nwkautomaniac.bracket_expansion",
            "nwkautomaniac.ezcfmaker"
        ],
        "version": "0.0.2"
    },
    "nwqt4": {
        "cmdline": [
            "nwqt4"
        ],
        "modules": [
            "nwqt4",
            "nwqt4.api_v1",
            "nwqt4.api_v2",
            "nwqt4.common",
            "nwqt4.config",
            "nwqt4.config_dialog",
            "nwqt4.config_dialog.config_account",
            "nwqt4.config_dialog.config_account_ui",
            "nwqt4.config_dialog.config_dialog",
            "nwqt4.config_dialog.config_dialog_ui",
            "nwqt4.config_dialog.config_duplicates",
            "nwqt4.config_dialog.config_duplicates_ui",
            "nwqt4.config_dialog.config_icon",
            "nwqt4.config_dialog.config_icon_ui",
            "nwqt4.config_dialog.config_requests",
            "nwqt4.config_dialog.config_requests_ui",
            "nwqt4.config_dialog.config_results",
            "nwqt4.config_dialog.config_results_ui",
            "nwqt4.config_dialog.config_schedule",
            "nwqt4.config_dialog.config_schedule_ui",
            "nwqt4.config_dialog.config_scripts",
            "nwqt4.config_dialog.config_scripts_ui",
            "nwqt4.dialogs",
            "nwqt4.dialogs.add_tags",
            "nwqt4.dialogs.add_tags_ui",
            "nwqt4.dialogs.add_url",
            "nwqt4.dialogs.add_url_ui",
            "nwqt4.dialogs.choice_duplicates",
            "nwqt4.dialogs.dialog_ui",
            "nwqt4.dialogs.request",
            "nwqt4.dialogs.request.last_wallpaper",
            "nwqt4.dialogs.request.new_wallpaper",
            "nwqt4.dialogs.request.random_wallpaper",
            "nwqt4.dialogs.results",
            "nwqt4.dialogs.results_ui",
            "nwqt4.dialogs.send_bad_urls",
            "nwqt4.dialogs.send_bad_urls_ui",
            "nwqt4.dialogs.wallpaper_info",
            "nwqt4.dialogs.wallpaper_info_ui",
            "nwqt4.duplicates",
            "nwqt4.logger",
            "nwqt4.main",
            "nwqt4.notify",
            "nwqt4.nwapp",
            "nwqt4.request_config",
            "nwqt4.request_config.last_wallpaper",
            "nwqt4.request_config.last_wallpaper_ui",
            "nwqt4.request_config.new_wallpaper",
            "nwqt4.request_config.new_wallpaper_ui",
            "nwqt4.request_config.random_wallpaper",
            "nwqt4.request_config.random_wallpaper_ui",
            "nwqt4.settings",
            "nwqt4.trayicon",
            "nwqt4.validators",
            "nwqt4.widgets",
            "nwqt4.widgets.choice_duplicate",
            "nwqt4.widgets.choice_duplicate_ui",
            "nwqt4.widgets.color_button",
            "nwqt4.widgets.result",
            "nwqt4.widgets.result_menu",
            "nwqt4.widgets.results_layout",
            "nwqt4.widgets.wallpaper_info",
            "nwqt4.widgets.wallpaper_info_ui"
        ],
        "version": "0.2"
    },
    "nws-cap": {
        "cmdline": [],
        "modules": [
            "nws_cap",
            "nws_cap.CAP_Alert",
            "nws_cap.CAP_Feed"
        ],
        "version": "0.0.1"
    },
    "nwscan": {
        "cmdline": [],
        "modules": [
            "nwscan",
            "nwscan.nwscan"
        ],
        "version": "0.1"
    },
    "nwsclient": {
        "cmdline": [],
        "modules": [
            "nws",
            "nws.babelfish",
            "nws.client",
            "nws.sleigh",
            "nws.util"
        ],
        "version": "1.6.3"
    },
    "nwsserver": {
        "cmdline": [],
        "modules": [
            "nwss",
            "nwss.babelConfig",
            "nwss.config",
            "nwss.dummyComm",
            "nwss.hexDump",
            "nwss.protocol",
            "nwss.server",
            "nwss.util",
            "nwss.web"
        ],
        "version": "1.5.1"
    },
    "nwu": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nx-io": {
        "cmdline": [],
        "modules": [
            "nx_io",
            "nx_io.open_file",
            "nx_io.readlines",
            "tests",
            "tests.test_open_file",
            "tests.test_readlines"
        ],
        "version": "3.0.3"
    },
    "nx-itertools": {
        "cmdline": [],
        "modules": [
            "nx_itertools",
            "nx_itertools.extra",
            "nx_itertools.recipes",
            "tests",
            "tests.test_all_equal",
            "tests.test_chunk",
            "tests.test_consume",
            "tests.test_divide",
            "tests.test_divide_sizes",
            "tests.test_dotproduct",
            "tests.test_first_true",
            "tests.test_flatten",
            "tests.test_grouper",
            "tests.test_iter_except",
            "tests.test_multi_map",
            "tests.test_ncycles",
            "tests.test_nth",
            "tests.test_padnone",
            "tests.test_pairwise_extra",
            "tests.test_pairwise_recipes",
            "tests.test_partition_extra",
            "tests.test_partition_recipes",
            "tests.test_powerset_extra",
            "tests.test_powerset_recipes",
            "tests.test_quantify",
            "tests.test_random_combination",
            "tests.test_random_combination_with_replacement",
            "tests.test_random_permutation",
            "tests.test_random_product",
            "tests.test_repeatfunc",
            "tests.test_roundrobin",
            "tests.test_split",
            "tests.test_tabulate",
            "tests.test_tail",
            "tests.test_take",
            "tests.test_unique_everseen",
            "tests.test_unique_justseen"
        ],
        "version": "1.3.0"
    },
    "nx-spatial": {
        "cmdline": [],
        "modules": [
            "nx_spatial",
            "nx_spatial.algorithms",
            "nx_spatial.algorithms.attr_find",
            "nx_spatial.algorithms.flow_errors",
            "nx_spatial.algorithms.setdirection",
            "nx_spatial.algorithms.trace",
            "nx_spatial.readwrite",
            "nx_spatial.readwrite.nx_esrifc",
            "nx_spatial.readwrite.nx_shp"
        ],
        "version": "0.6dev"
    },
    "nx4-selenium-test": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nxanimate": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nxbimatch": {
        "cmdline": [],
        "modules": [
            "bimatch"
        ],
        "version": "0.20130323"
    },
    "nxcreole": {
        "cmdline": [],
        "modules": [
            "nxcreole",
            "nxcreole.parser"
        ],
        "version": "1.0.1"
    },
    "nxlib": {
        "cmdline": [],
        "modules": [
            "nxlib",
            "nxlib.oop"
        ],
        "version": "0.1"
    },
    "nxosncrpc": {
        "cmdline": [],
        "modules": [
            "nxosNCRPC"
        ],
        "version": "0.1"
    },
    "nxpd": {
        "cmdline": [],
        "modules": [
            "nxpd",
            "nxpd.ipythonsupport",
            "nxpd.nx_pydot",
            "nxpd.params",
            "nxpd.pydot",
            "nxpd.pydot._dotparser",
            "nxpd.utils"
        ],
        "version": "0.2.0"
    },
    "nxppy": {
        "cmdline": [],
        "modules": [],
        "version": "1.5.1"
    },
    "nxppylos": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nxpy": {
        "cmdline": [],
        "modules": [
            "nxpy",
            "nxpy.ccase",
            "nxpy.ccase.cleartool",
            "nxpy.ccase.test",
            "nxpy.ccase.test.env",
            "nxpy.command",
            "nxpy.command.command",
            "nxpy.command.error",
            "nxpy.command.interpreter",
            "nxpy.command.option",
            "nxpy.core",
            "nxpy.core._impl",
            "nxpy.core._impl.log",
            "nxpy.core.abstract",
            "nxpy.core.async_subprocess",
            "nxpy.core.backup_file",
            "nxpy.core.error",
            "nxpy.core.file",
            "nxpy.core.file_object",
            "nxpy.core.memo",
            "nxpy.core.past",
            "nxpy.core.path",
            "nxpy.core.sequence",
            "nxpy.core.sort",
            "nxpy.core.temp_file",
            "nxpy.etree",
            "nxpy.etree.util",
            "nxpy.maven",
            "nxpy.maven.artifact",
            "nxpy.maven.assembly_descriptor",
            "nxpy.maven.mvn",
            "nxpy.maven.pom",
            "nxpy.msvs",
            "nxpy.msvs._impl",
            "nxpy.msvs._impl.solution",
            "nxpy.msvs._impl.solution.ast",
            "nxpy.msvs._impl.solution.parser",
            "nxpy.msvs._impl.solution.parsetab",
            "nxpy.msvs._impl.solution.scanner",
            "nxpy.msvs.assembly_info",
            "nxpy.msvs.project",
            "nxpy.msvs.solution",
            "nxpy.ply",
            "nxpy.ply.parser",
            "nxpy.ply.scanner",
            "nxpy.scons",
            "nxpy.scons.clean_action",
            "nxpy.scons.msvs",
            "nxpy.scons.project",
            "nxpy.scons.util",
            "nxpy.svn",
            "nxpy.svn.svn",
            "nxpy.svn.svnadmin",
            "nxpy.svn.url",
            "nxpy.svn.wcopy",
            "nxpy.test",
            "nxpy.test.env",
            "nxpy.test.log",
            "nxpy.test.test",
            "nxpy.wx",
            "nxpy.wx.interpreter",
            "nxpy.wx.test",
            "nxpy.wx.test.interpreter_test"
        ],
        "version": "0.4.0"
    },
    "nxpydot": {
        "cmdline": [],
        "modules": [],
        "version": "0.1"
    },
    "nxrepair": {
        "cmdline": [],
        "modules": [
            "nxrepair",
            "nxrepair.intervalNode",
            "nxrepair.nxrepair"
        ],
        "version": "0.13"
    },
    "nxsim": {
        "cmdline": [],
        "modules": [
            "nxsim",
            "nxsim.agents",
            "nxsim.constants",
            "nxsim.environment",
            "nxsim.simulation",
            "nxsim.utils"
        ],
        "version": "0.1.2"
    },
    "nxsugarpy": {
        "cmdline": [],
        "modules": [
            "nxsugarpy",
            "nxsugarpy.config",
            "nxsugarpy.errors",
            "nxsugarpy.helpers",
            "nxsugarpy.info",
            "nxsugarpy.log",
            "nxsugarpy.server",
            "nxsugarpy.service",
            "nxsugarpy.signal",
            "nxsugarpy.stats"
        ],
        "version": "1.3.6"
    },
    "nxsvg": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nxt-python": {
        "cmdline": [
            "nxt_filer",
            "nxt_push",
            "nxt_server",
            "nxt_test"
        ],
        "modules": [
            "nxt",
            "nxt.bluesock",
            "nxt.brick",
            "nxt.direct",
            "nxt.error",
            "nxt.fantomsock",
            "nxt.ipsock",
            "nxt.lightblueglue",
            "nxt.locator",
            "nxt.motcont",
            "nxt.motor",
            "nxt.sensor",
            "nxt.sensor.analog",
            "nxt.sensor.common",
            "nxt.sensor.digital",
            "nxt.sensor.generic",
            "nxt.sensor.hitechnic",
            "nxt.sensor.mindsensors",
            "nxt.system",
            "nxt.telegram",
            "nxt.usbsock",
            "nxt.utils"
        ],
        "version": "2.2.2"
    },
    "nxt-simplecost": {
        "cmdline": [],
        "modules": [
            "simplecost",
            "simplecost.admin",
            "simplecost.apps",
            "simplecost.forms",
            "simplecost.migrations",
            "simplecost.models",
            "simplecost.tests",
            "simplecost.urls",
            "simplecost.views"
        ],
        "version": "0.0.1"
    },
    "nxtools": {
        "cmdline": [],
        "modules": [
            "nxtools",
            "nxtools.common",
            "nxtools.files",
            "nxtools.logging",
            "nxtools.misc",
            "nxtools.shell",
            "nxtools.timeutils",
            "tests",
            "tests._bootstrap",
            "tests.ffmpeg_stop",
            "tests.logging",
            "tests.run_all",
            "tests.strings",
            "tests.test_ffanalyse",
            "tests.test_logging"
        ],
        "version": "0.6.1"
    },
    "nxturtle": {
        "cmdline": [],
        "modules": [
            "nxturtle",
            "nxturtle.nxturtle",
            "nxturtle.test",
            "nxturtle.test.sample_brick",
            "nxturtle.test.sample_square",
            "nxturtle.test.test_basic",
            "nxturtle.test.test_jannes",
            "nxturtle.test.test_tools",
            "nxturtle.version"
        ],
        "version": "1.0.4.dev-20110105"
    },
    "nxviz": {
        "cmdline": [],
        "modules": [
            "nxviz",
            "nxviz.geometry",
            "nxviz.plots",
            "nxviz.utils"
        ],
        "version": "0.3.1"
    },
    "ny": {
        "cmdline": [],
        "modules": [
            "ny",
            "ny.cli",
            "ny.common",
            "ny.common.auth",
            "ny.common.cli",
            "ny.common.configuration",
            "ny.common.filesystem",
            "ny.common.password",
            "ny.common.spinner",
            "ny.common.structures",
            "ny.deploy",
            "ny.deploy.api",
            "ny.deploy.connection",
            "ny.vm",
            "ny.vm.api",
            "ny.vm.connection"
        ],
        "version": "0.0.1"
    },
    "nyaa": {
        "cmdline": [],
        "modules": [
            "nyaa",
            "nyaa.constants",
            "nyaa.nyaa"
        ],
        "version": "1.3"
    },
    "nyaa-cli": {
        "cmdline": [],
        "modules": [
            "nyaa",
            "nyaa.parsers",
            "nyaa.parsers.bakabt",
            "nyaa.parsers.classes",
            "nyaa.parsers.masterani",
            "nyaa.parsers.nyaa",
            "nyaa.webtorrent"
        ],
        "version": "0.0.1.dev12"
    },
    "nyaalib": {
        "cmdline": [],
        "modules": [
            "nyaalib",
            "nyaalib.models"
        ],
        "version": "0.0.6"
    },
    "nyamuk": {
        "cmdline": [],
        "modules": [
            "nyamuk",
            "nyamuk.base_nyamuk",
            "nyamuk.event",
            "nyamuk.mqtt_pkt",
            "nyamuk.nyamuk",
            "nyamuk.nyamuk_const",
            "nyamuk.nyamuk_msg",
            "nyamuk.nyamuk_net",
            "nyamuk.utils"
        ],
        "version": "0.2.0"
    },
    "nyan-logger": {
        "cmdline": [],
        "modules": [
            "nyan_logger",
            "nyan_logger.nyan"
        ],
        "version": "0.2"
    },
    "nyanbar": {
        "cmdline": [],
        "modules": [
            "nyanbar",
            "nyanbar.nyanbar"
        ],
        "version": "0.3"
    },
    "nyancat": {
        "cmdline": [],
        "modules": [
            "nyancat",
            "nyancat.frame",
            "nyancat.nyancat"
        ],
        "version": "0.1.2"
    },
    "nyawc": {
        "cmdline": [],
        "modules": [
            "nyawc",
            "nyawc.Crawler",
            "nyawc.CrawlerActions",
            "nyawc.CrawlerThread",
            "nyawc.Options",
            "nyawc.Queue",
            "nyawc.QueueItem",
            "nyawc.helpers",
            "nyawc.helpers.HTTPRequestHelper",
            "nyawc.helpers.RandomInputHelper",
            "nyawc.helpers.URLHelper",
            "nyawc.http",
            "nyawc.http.Handler",
            "nyawc.http.Request",
            "nyawc.http.Response",
            "nyawc.scrapers",
            "nyawc.scrapers.CSSRegexLinkScraper",
            "nyawc.scrapers.HTMLSoupFormScraper",
            "nyawc.scrapers.HTMLSoupLinkScraper",
            "nyawc.scrapers.JSONRegexLinkScraper",
            "nyawc.scrapers.XMLRegexLinkScraper",
            "test",
            "test.test_helpers_url_helper",
            "test.test_queue",
            "test.test_scrapers_css_regex_link_scraper",
            "test.test_scrapers_html_soup_form_scraper",
            "test.test_scrapers_html_soup_link_scraper",
            "test.test_scrapers_json_regex_link_scraper",
            "test.test_scrapers_xml_regex_link_scraper",
            "test.test_site"
        ],
        "version": "1.4.7"
    },
    "nyc": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nyc-crime-map": {
        "cmdline": [],
        "modules": [
            "nyc_crime_map",
            "nyc_crime_map.args",
            "nyc_crime_map.download",
            "nyc_crime_map.serialize"
        ],
        "version": "0.3.2"
    },
    "nyc-geoclient": {
        "cmdline": [],
        "modules": [
            "nyc_geoclient",
            "nyc_geoclient.api",
            "nyc_geoclient.version"
        ],
        "version": "0.0.2"
    },
    "nycpython": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nydus": {
        "cmdline": [],
        "modules": [
            "nydus",
            "nydus.conf",
            "nydus.contrib",
            "nydus.contrib.ketama",
            "nydus.db",
            "nydus.db.backends",
            "nydus.db.backends.base",
            "nydus.db.backends.memcache",
            "nydus.db.backends.memcache.tests",
            "nydus.db.backends.pycassa",
            "nydus.db.backends.pycassa.tests",
            "nydus.db.backends.redis",
            "nydus.db.backends.redis.tests",
            "nydus.db.backends.riak",
            "nydus.db.backends.riak.tests",
            "nydus.db.backends.thoonk",
            "nydus.db.backends.thoonk.tests",
            "nydus.db.base",
            "nydus.db.connections",
            "nydus.db.connections.tests",
            "nydus.db.exceptions",
            "nydus.db.map",
            "nydus.db.promise",
            "nydus.db.routers",
            "nydus.db.routers.base",
            "nydus.db.routers.keyvalue",
            "nydus.db.routers.redis",
            "nydus.db.routers.tests",
            "nydus.testutils",
            "nydus.utils"
        ],
        "version": "0.11.0"
    },
    "nydus-django": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nylas": {
        "cmdline": [],
        "modules": [
            "nylas",
            "nylas._client_sdk_version",
            "nylas.client",
            "nylas.client.client",
            "nylas.client.errors",
            "nylas.client.restful_model_collection",
            "nylas.client.restful_models",
            "nylas.client.util",
            "tests",
            "tests.conftest",
            "tests.credentials",
            "tests.oauth",
            "tests.system",
            "tests.test_drafts",
            "tests.test_events",
            "tests.test_files",
            "tests.test_filter",
            "tests.test_folder_labels",
            "tests.test_search",
            "tests.test_send_error_handling"
        ],
        "version": "2.0.0"
    },
    "nylas-production-python": {
        "cmdline": [],
        "modules": [
            "nylas",
            "nylas._production_python_version",
            "nylas.api",
            "nylas.api.wsgi",
            "nylas.logging",
            "nylas.logging.log",
            "nylas.logging.sentry",
            "nylas.util",
            "nylas.util.debug"
        ],
        "version": "0.4.0"
    },
    "nymms": {
        "cmdline": [],
        "modules": [
            "nymms",
            "nymms.api",
            "nymms.api.plugins",
            "nymms.api.plugins.sdb_handler",
            "nymms.api.routes",
            "nymms.config",
            "nymms.config.config",
            "nymms.config.tests",
            "nymms.config.tests.test_yaml_config",
            "nymms.config.yaml_config",
            "nymms.daemon",
            "nymms.exceptions",
            "nymms.probe",
            "nymms.probe.Probe",
            "nymms.probe.sqs_probe",
            "nymms.probe.tests",
            "nymms.probe.tests.test_probe",
            "nymms.providers",
            "nymms.providers.sdb",
            "nymms.reactor",
            "nymms.reactor.Reactor",
            "nymms.reactor.aws_reactor",
            "nymms.reactor.filters",
            "nymms.reactor.filters.tests",
            "nymms.reactor.handlers",
            "nymms.reactor.handlers.Handler",
            "nymms.reactor.handlers.log_handler",
            "nymms.reactor.handlers.pagerduty_handler",
            "nymms.reactor.handlers.sdb_handler",
            "nymms.reactor.handlers.ses_handler",
            "nymms.reactor.tests",
            "nymms.reactor.tests.test_reactor",
            "nymms.registry",
            "nymms.resources",
            "nymms.scheduler",
            "nymms.scheduler.Scheduler",
            "nymms.scheduler.aws_scheduler",
            "nymms.scheduler.backends",
            "nymms.scheduler.backends.Backend",
            "nymms.scheduler.backends.yaml_backend",
            "nymms.scheduler.lock",
            "nymms.scheduler.lock.SDBLock",
            "nymms.scheduler.lock.SchedulerLock",
            "nymms.scheduler.lock.tests",
            "nymms.scheduler.lock.tests.test_scheduler_lock",
            "nymms.schemas",
            "nymms.schemas.types",
            "nymms.state",
            "nymms.state.State",
            "nymms.state.sdb_state",
            "nymms.suppress",
            "nymms.suppress.sdb_suppress",
            "nymms.suppress.suppress",
            "nymms.suppress.tests",
            "nymms.suppress.tests.test_suppression_manager",
            "nymms.tests",
            "nymms.tests.test_registry",
            "nymms.tests.test_resources",
            "nymms.utils",
            "nymms.utils.aws_helper",
            "nymms.utils.cli",
            "nymms.utils.commands",
            "nymms.utils.logutil",
            "nymms.utils.templates",
            "nymms.utils.tests",
            "nymms.utils.tests.test_base",
            "nymms.utils.tests.test_commands"
        ],
        "version": "0.5.0"
    },
    "nymp": {
        "cmdline": [],
        "modules": [
            "nymp",
            "nymp.config",
            "nymp.defaults",
            "nymp.events",
            "nymp.gui",
            "nymp.gui.base",
            "nymp.gui.browser",
            "nymp.gui.buffer",
            "nymp.gui.current",
            "nymp.gui.loop",
            "nymp.gui.playlist",
            "nymp.gui.status",
            "nymp.gui.widgets",
            "nymp.start",
            "nymp.xmms",
            "nymp.xmms.connection",
            "nymp.xmms.helper",
            "nymp.xmms.player",
            "nymp.xmms.playlist"
        ],
        "version": "0.0.2"
    },
    "nymphemeral": {
        "cmdline": [],
        "modules": [
            "nymphemeral",
            "nymphemeral._version",
            "nymphemeral.aampy",
            "nymphemeral.client",
            "nymphemeral.errors",
            "nymphemeral.gui",
            "nymphemeral.hsub",
            "nymphemeral.keyring",
            "nymphemeral.keyring.keys",
            "nymphemeral.message",
            "nymphemeral.nym",
            "nymphemeral.session"
        ],
        "version": "1.4.2.1"
    },
    "nynester": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nypl": {
        "cmdline": [],
        "modules": [
            "NYPL",
            "NYPL.api",
            "NYPL.example"
        ],
        "version": "0.1.12"
    },
    "nyplcollections": {
        "cmdline": [],
        "modules": [
            "nyplcollections",
            "nyplcollections.nyplcollections",
            "nyplcollections.nyplcollections-example"
        ],
        "version": "1.1"
    },
    "nyroglancer": {
        "cmdline": [],
        "modules": [
            "nyroglancer",
            "nyroglancer.extension",
            "nyroglancer.intrusion",
            "nyroglancer.ndstore",
            "nyroglancer.shaders",
            "nyroglancer.viewer"
        ],
        "version": "1.0.2"
    },
    "nysa": {
        "cmdline": [],
        "modules": [
            "nysa",
            "nysa.cbuilder",
            "nysa.cbuilder.device_manager",
            "nysa.cbuilder.sdb",
            "nysa.cbuilder.sdb_component",
            "nysa.cbuilder.sdb_object_model",
            "nysa.cbuilder.sdb_rom",
            "nysa.cbuilder.som_rom_generator",
            "nysa.cbuilder.som_rom_parser",
            "nysa.common",
            "nysa.common.print_utils",
            "nysa.common.site_manager",
            "nysa.common.status",
            "nysa.host",
            "nysa.host.driver",
            "nysa.host.driver.dma",
            "nysa.host.driver.driver",
            "nysa.host.driver.experiment",
            "nysa.host.driver.gpio",
            "nysa.host.driver.i2c",
            "nysa.host.driver.i2s",
            "nysa.host.driver.lcd_SSD1963",
            "nysa.host.driver.lcd_ST7781R",
            "nysa.host.driver.logic_analyzer",
            "nysa.host.driver.memory",
            "nysa.host.driver.sata_driver",
            "nysa.host.driver.sd_host_driver",
            "nysa.host.driver.sdb",
            "nysa.host.driver.sdio_device_driver",
            "nysa.host.driver.sf_camera",
            "nysa.host.driver.spi",
            "nysa.host.driver.stepper",
            "nysa.host.driver.uart",
            "nysa.host.driver.utils",
            "nysa.host.nysa",
            "nysa.host.nysa_platform",
            "nysa.host.nysa_sdb_manager",
            "nysa.host.platform_scanner",
            "nysa.host.sim",
            "nysa.host.sim.sim_host",
            "nysa.host.sim.sim_uart_host",
            "nysa.ibuilder",
            "nysa.ibuilder.lib",
            "nysa.ibuilder.lib.arbiter",
            "nysa.ibuilder.lib.constraint_utils",
            "nysa.ibuilder.lib.gen_scripts",
            "nysa.ibuilder.lib.gen_scripts.gen",
            "nysa.ibuilder.lib.gen_scripts.gen_interconnect",
            "nysa.ibuilder.lib.gen_scripts.gen_mem_interconnect",
            "nysa.ibuilder.lib.gen_scripts.gen_project_config",
            "nysa.ibuilder.lib.gen_scripts.gen_project_defines",
            "nysa.ibuilder.lib.gen_scripts.gen_sdb",
            "nysa.ibuilder.lib.gen_scripts.gen_top",
            "nysa.ibuilder.lib.gen_scripts.gen_xilinx",
            "nysa.ibuilder.lib.ibuilder",
            "nysa.ibuilder.lib.ibuilder_error",
            "nysa.ibuilder.lib.module_processor",
            "nysa.ibuilder.lib.preprocessor",
            "nysa.ibuilder.lib.utils",
            "nysa.ibuilder.lib.verilog_utils",
            "nysa.ibuilder.lib.wishbone_utils",
            "nysa.ibuilder.lib.xilinx_utils",
            "nysa.tools",
            "nysa.tools.board_programmed",
            "nysa.tools.completer_extractor",
            "nysa.tools.device_list",
            "nysa.tools.extract_nysa_completer",
            "nysa.tools.generate_slave",
            "nysa.tools.image_builder",
            "nysa.tools.init",
            "nysa.tools.install_examples",
            "nysa.tools.install_platform",
            "nysa.tools.install_verilog_modules",
            "nysa.tools.list_boards",
            "nysa.tools.list_platforms",
            "nysa.tools.nysa_cli",
            "nysa.tools.nysa_paths",
            "nysa.tools.nysa_status",
            "nysa.tools.nysa_tools",
            "nysa.tools.nysa_utils",
            "nysa.tools.ping_board",
            "nysa.tools.program_board",
            "nysa.tools.reset_board",
            "nysa.tools.sdb_viewer",
            "nysa.tools.upload_board",
            "site_scons",
            "site_scons.bitgen_utils",
            "site_scons.coregen_utils",
            "site_scons.init_site",
            "site_scons.map_utils",
            "site_scons.ngd_utils",
            "site_scons.par_utils",
            "site_scons.trace_utils",
            "site_scons.utils",
            "site_scons.xilinx",
            "site_scons.xst_utils"
        ],
        "version": "0.8.6"
    },
    "nysiis": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nyt-ap-elections": {
        "cmdline": [],
        "modules": [
            "elex",
            "elex.cli",
            "elex.cli.app",
            "elex.cli.decorators",
            "elex.cli.ext_csv",
            "elex.cli.ext_json",
            "elex.cli.hooks",
            "elex.cli.utils",
            "elex.parser",
            "elex.parser.api",
            "elex.parser.maps",
            "elex.parser.utils",
            "tests",
            "tests.test_ap_network",
            "tests.test_ballot_position",
            "tests.test_candidate",
            "tests.test_candidate_reporting_unit",
            "tests.test_cli",
            "tests.test_election",
            "tests.test_race"
        ],
        "version": "0.0.41"
    },
    "nyt-clerk": {
        "cmdline": [],
        "modules": [
            "clerk",
            "clerk.cli",
            "clerk.ext_csv",
            "clerk.ext_json",
            "clerk.maps",
            "clerk.scdb",
            "clerk.scores",
            "clerk.utils"
        ],
        "version": "0.1.20"
    },
    "nyt-comments-analysis": {
        "cmdline": [],
        "modules": [
            "nyt.nyt_comment_analysis"
        ],
        "version": "0.1"
    },
    "nyt-docket": {
        "cmdline": [],
        "modules": [
            "docket",
            "docket.cli",
            "docket.ext_csv",
            "docket.ext_json",
            "docket.grants",
            "docket.orders",
            "docket.slipopinions"
        ],
        "version": "0.0.14"
    },
    "nyt-prb-scraper": {
        "cmdline": [],
        "modules": [
            "prb"
        ],
        "version": "0.0.10"
    },
    "nyt-pyfec": {
        "cmdline": [],
        "modules": [
            "pyfec",
            "pyfec.filing",
            "pyfec.form",
            "pyfec.header",
            "pyfec.line",
            "pyfec.utils"
        ],
        "version": "0.0.8"
    },
    "nytcampfin": {
        "cmdline": [],
        "modules": [
            "nytcampfin"
        ],
        "version": "0.4.0"
    },
    "nytimes": {
        "cmdline": [],
        "modules": [
            "nytimes",
            "nytimes.nytimes_article_search"
        ],
        "version": "1.0.1"
    },
    "nytimesarticle": {
        "cmdline": [],
        "modules": [
            "nytimesarticle"
        ],
        "version": "0.1.0"
    },
    "nytimesarticleapi": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nyuki": {
        "cmdline": [],
        "modules": [
            "nyuki",
            "nyuki.api",
            "nyuki.api.api",
            "nyuki.api.bus",
            "nyuki.api.config",
            "nyuki.bus",
            "nyuki.bus.mqtt",
            "nyuki.bus.persistence",
            "nyuki.bus.persistence.backend",
            "nyuki.bus.persistence.events",
            "nyuki.bus.persistence.mongo_backend",
            "nyuki.bus.persistence.persistence",
            "nyuki.bus.reporting",
            "nyuki.bus.xmpp",
            "nyuki.commands",
            "nyuki.config",
            "nyuki.debugging",
            "nyuki.discovery",
            "nyuki.discovery.dns",
            "nyuki.logs",
            "nyuki.memory",
            "nyuki.nyuki",
            "nyuki.raft",
            "nyuki.services",
            "nyuki.utils",
            "nyuki.utils.dtutils",
            "nyuki.utils.evaluate",
            "nyuki.utils.serialize",
            "nyuki.utils.transform",
            "nyuki.websocket",
            "nyuki.workflow",
            "nyuki.workflow.api",
            "nyuki.workflow.api.factory",
            "nyuki.workflow.api.templates",
            "nyuki.workflow.api.vars",
            "nyuki.workflow.api.workflows",
            "nyuki.workflow.storage",
            "nyuki.workflow.tasks",
            "nyuki.workflow.tasks.factory",
            "nyuki.workflow.tasks.python_script",
            "nyuki.workflow.tasks.report",
            "nyuki.workflow.tasks.sleep",
            "nyuki.workflow.tasks.task_selector",
            "nyuki.workflow.tasks.trigger_workflow",
            "nyuki.workflow.tasks.utils",
            "nyuki.workflow.tasks.utils.placeholder_mapper",
            "nyuki.workflow.tasks.utils.runtime",
            "nyuki.workflow.tasks.utils.selectors",
            "nyuki.workflow.tasks.utils.uri",
            "nyuki.workflow.validation",
            "nyuki.workflow.workflow"
        ],
        "version": "0.44.1"
    },
    "nywtest": {
        "cmdline": [],
        "modules": [
            "nywTest"
        ],
        "version": "1.0.0"
    },
    "nyx": {
        "cmdline": [],
        "modules": [],
        "version": ""
    },
    "nzbsort": {
        "cmdline": [
            "nzbsort"
        ],
        "modules": [],
        "version": "0.1.1"
    },
    "nzbverify": {
        "cmdline": [
            "nzbverify"
        ],
        "modules": [
            "nzbverify",
            "nzbverify.cmdline",
            "nzbverify.conf",
            "nzbverify.nntp",
            "nzbverify.thread"
        ],
        "version": "0.2.1"
    },
    "nzmath": {
        "cmdline": [],
        "modules": [
            "nzmath",
            "nzmath.algfield",
            "nzmath.algorithm",
            "nzmath.arith1",
            "nzmath.arygcd",
            "nzmath.bigrandom",
            "nzmath.bigrange",
            "nzmath.combinatorial",
            "nzmath.compatibility",
            "nzmath.config",
            "nzmath.config.nzmathconf",
            "nzmath.cubic_root",
            "nzmath.ecpp",
            "nzmath.elliptic",
            "nzmath.equation",
            "nzmath.factor",
            "nzmath.factor.ecm",
            "nzmath.factor.find",
            "nzmath.factor.methods",
            "nzmath.factor.misc",
            "nzmath.factor.mpqs",
            "nzmath.factor.util",
            "nzmath.finitefield",
            "nzmath.gcd",
            "nzmath.group",
            "nzmath.imaginary",
            "nzmath.intresidue",
            "nzmath.lattice",
            "nzmath.matrix",
            "nzmath.module",
            "nzmath.multiplicative",
            "nzmath.permute",
            "nzmath.plugin",
            "nzmath.plugin.math",
            "nzmath.plugin.math._mpmath",
            "nzmath.plugin.math.default",
            "nzmath.plugins",
            "nzmath.poly",
            "nzmath.poly.factor",
            "nzmath.poly.formalsum",
            "nzmath.poly.groebner",
            "nzmath.poly.hensel",
            "nzmath.poly.multiutil",
            "nzmath.poly.multivar",
            "nzmath.poly.ratfunc",
            "nzmath.poly.ring",
            "nzmath.poly.termorder",
            "nzmath.poly.uniutil",
            "nzmath.poly.univar",
            "nzmath.prime",
            "nzmath.prime_decomp",
            "nzmath.quad",
            "nzmath.rational",
            "nzmath.real",
            "nzmath.ring",
            "nzmath.round2",
            "nzmath.squarefree",
            "nzmath.vector"
        ],
        "version": "1.1.0"
    }
}